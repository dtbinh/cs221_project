journal artificial intelligence

submitted published

fusions description logics
abstract description systems
franz baader
carsten lutz

baader cs rwth aachen de
lutz cs rwth aachen de

teaching area theoretical computer science
rwth aachen ahornstrae aachen germany

holger sturm

holger sturm uni konstanz de

fachbereich philosophie universitat konstanz
konstanz germany

frank wolter

wolter informatik uni leipzig de

institut fur informatik universitat leipzig
augustus platz leipzig germany

abstract
fusions simple way combining logics normal modal logics fusions
investigated detail particular known certain conditions decidability transfers component logics fusion though description logics
closely related modal logics necessarily normal addition abox
reasoning description logics covered modal logics
extend decidability transfer normal modal logics
large class description logics cover different description logics uniform way
introduce abstract description systems seen common generalization
description modal logics transfer general setting

introduction
knowledge representation systems description logics dl used represent knowledge application domain structured formally well understood
way brachman schmolze baader hollunder brachman mcguinness
patel schneider alperin resnick borgida woods schmolze borgida
horrocks systems important notions domain described concept descriptions e expressions built atomic concepts unary
predicates atomic roles binary predicates concept constructors provided
description logic employed system atomic concepts concept
descriptions represent sets individuals whereas roles represent binary relations
individuals example atomic concepts woman human atomic
role child concept women daughters e women
children women represented description woman u child woman
concept mothers description woman u child human example
used constructors concept conjunction u value restriction r c existential restriction r c dl literature constructors
considered prominent example called number restrictions available
almost dl systems example number restrictions concept women
c

ai access foundation morgan kaufmann publishers rights reserved

fibaader lutz sturm wolter

exactly two children represented concept description
woman u child u child
knowledge base dl system consists terminological component tbox
assertional component abox simplest form tbox consists concept
definitions assign names abbreviations complex descriptions general tbox
formalisms allow called general concept inclusion axioms gcis complex
descriptions example concept inclusion
human u child v entitled taxbreak
states people least three children entitled tax break abox
formalism consists concept assertions stating individual belongs concept
role assertions stating two individuals related role example
assertions woman mary child mary tom human tom state mary woman
child tom human
dl systems provide users inference capabilities allow
deduce implicit knowledge explicitly represented knowledge instance subsumption concerned subconcept superconcept relationships c subsumed
c v instances c instances e first description interpreted subset second description example concept
description woman obviously subsumes concept description woman u child woman
concept description c satisfiable iff non contradictory e interpreted
nonempty set dls allowing conjunction negation concepts subsumption reduced un satisfiability c v iff c u unsatisfiable instance
checking consists deciding whether given individual instance given
concept example w r assertions mary instance concept
description woman u child human abox consistent iff non contradictory
e model dls allowing negation concepts instance
reduced consistency aboxes instance c w r abox iff c
inconsistent
order ensure reasonable predictable behavior dl system reasoning
dl employed system least decidable preferably low
complexity consequently expressive power dl question must restricted
appropriate way imposed restrictions severe however important
notions application domain longer expressed investigating trade
expressivity dls complexity inference thus
one important issues dl see e g levesque brachman
nebel schmidt schau schmidt schau smolka nebel
donini lenzerini nardi nutt donini hollunder lenzerini spaccamela
nardi nutt schaerf donini lenzerini nardi schaerf de giacomo
lenzerini b calvanese de giacomo lenzerini lutz
horrocks sattler tobies
investigates extending expressivity dls many
cases guarantees reasoning remains decidable fusion dls order explain


fifusions description logics abstract description systems

difference usual union fusion dls let us consider simple
example assume dl alc e provides boolean operators u
additional concept constructors value restriction r c existential restriction
r c dl provides boolean operators number restrictions
nr nr application requires concept constructors dls
expressing relevant concepts one would usually consider union
allows unrestricted use constructors example concept
description c r u r u r legal description note
description unsatisfiable due interaction constructors
fusion prevents interactions imposing following restriction
one assumes set role names partitioned two sets one used
constructors another one used constructors thus
description c legal description since uses role r
existential restrictions constructors number restriction
constructor contrast descriptions r u r u r
r r admissible since employ different roles constructors concepts must expressed require
constructors ones roles ones
one really need union fusion would sufficient
advantage taking fusion instead union basically union
two dls one must design reasoning methods whereas reasoning fusion
reduced reasoning component dls indeed reasoning union may even
undecidable whereas reasoning fusion still decidable example consider
dls alcf extends basic dl alc functional roles features
constructor agreement chains functional roles hollunder nutt
baader burckert nebel nutt smolka ii alc extends alc
transitive closure composition union roles baader schild
dls subsumption concept descriptions known decidable hollunder nutt
schild baader however union alcf undecidable
subsumption baader et al undecidability depends fact
alcf role constructors transitive closure composition union
applied functional roles appear within constructor
allowed fusion alcf alc course failure certain undecidability proof
make fusion decidable
know fusion decidable dls decidable actually
general dont main reason writing notion fusion introduced investigated modal logic basically transfer finite
axiomatizability decidability finite model property etc uni modal logics one
pair box diamond operators multi modal logics several pairs possibly satisfying different axioms led rather general transfer see e g
wolter kracht wolter fine schurz spaan gabbay
concern decidability sometimes restricted called normal
modal logics chellas since close relationship modal logics
dls schild clear transfer apply dls question however dls exactly inference first dls


fibaader lutz sturm wolter

allow constructors considered modal logics e g constructor
mentioned second dl constructors considered modal logics qualified number restrictions nr c nr c hollunder baader
correspond graded modalities van der hoek de rijke easily
shown non normal third transfer decidability concerned
satisfiability without general inclusion axioms aboxes related
inference considered aboxes simulated modal logics allowing
called nominals e names individuals within formulae prior gargov
goranko areces blackburn marx however see
general transfer apply modal logics nominals
purpose clarify dls decidability component dls
transfers fusion purpose introduce called abstract description systems
adss seen common generalization description modal logics
define fusion adss state four theorems say conditions
decidability transfers component adss fusion two theorems
concerned inference w r general concept inclusion axioms two inference
without tbox axioms cases first formulate prove
consistency aboxes precisely corresponding adss
establish analogous satisfiability concepts
dl point view four theorems shown concerned
following four decision
decidability consistency aboxes w r tbox axioms theorem
ii decidability satisfiability concepts w r tbox axioms corollary
iii decidability consistency aboxes without tbox axioms theorem
iv decidability satisfiability concepts without tbox axioms corollary
theorems imply decidability consistency satisfiability
transfers fusion dls considered literature main exceptions satisfy prerequisites theorems
dls propositionally closed e contain boolean connectives
b dls allowing individuals called nominals modal logic concept descriptions

c dls explicitly allowing universal role negation roles
modal logic iv usually require component modal logics
normal theorem less restrictive thus applies dls allowing
constructors qualified number restrictions

description logics
defining abstract description systems next section introduce main
features dls must covered definition purpose first introduce


fifusions description logics abstract description systems

alc basic dl containing boolean connectives relevant inference
consider different possibilities extending alc expressive dls
definition alc syntax let nc nr ni countable pairwise disjoint sets
concept role individual names respectively set alc concept descriptions
smallest set
every concept name concept description
c concept descriptions r role name following expressions concept descriptions
c negation c u conjunction c disjunction
r c existential restriction r c value restriction
use abbreviation abbreviation u
arbitrary concept name
let c concept descriptions c v general concept inclusion axiom
gci finite set axioms called tbox
let c concept description r role name j individual names c
concept assertion r j role assertion finite set assertions called
abox
meaning alc concept descriptions tboxes aboxes defined
help set theoretic semantics
definition alc semantics alc interpretation pair
nonempty set domain interpretation interpretation function
interpretation function maps
concept name subset ai
role name r subset ri
individual name element ii different names mapped
different elements unique name assumption
role name r element define ri b b ri
interpretation function inductively extended complex concepts follows
c c
c u c di
c c di
r c ri c
r c ri c
interpretation model tbox iff satisfies c di gcis c v
model abox iff satisfies ii c concept assertions c
ii j ri role assertions r j finally model abox
relative tbox iff model abox tbox


fibaader lutz sturm wolter

given semantics formally define relevant inference
definition inferences let c concept descriptions individual name
tbox abox say c subsumes relative tbox vt c
iff di c concept description c satisfiable relative
tbox iff exists model c individual instance
c abox relative tbox iff ii c relative
abox consistent relative tbox iff exists model relative
three inferences considered without reference tbox c subsumes
c satisfiable iff c subsumes c satisfiable relative empty tbox
instance c consistent iff instance c consistent
relative empty tbox
restrict attention dls propositionally closed e allow
boolean operators conjunction disjunction negation consequently subsumption
reduced un satisfiability since c vt iff c u unsatisfiable relative
conversely un satisfiability reduced subsumption since c unsatisfiable relative
iff c vt reason irrelevant whether consider subsumption
satisfiability concerning transfer decidability
component dls fusion informally called transfer following
similarly instance reduced consistency vice
versa instance c relative iff c inconsistent relative
inconsistent relative iff instance relative
arbitrary individual name consequently irrelevant whether consider instance
consistency transfer
finally satisfiability reduced consistency c satisfiable relative iff abox c consistent relative arbitrary
individual name however converse need true obvious
implies transfer satisfiability yield corresponding
transfer consistency decidability consistency
component dls deduce decidability satisfiability
fusion might less obvious transfer consistency need
imply corresponding transfer satisfiability satisfiability
component dls decidable transfer consistency
applied since prerequisite transfer namely decidability consistency component dls need satisfied however
method used transfer consistency
applies satisfiability
expressive dls
several possibilities extending alc order obtain expressive dl
three prominent adding additional concept constructors adding role constructors formulating restrictions role interpretations addition giving examples
extensions introduce naming scheme obtained dls additional
concept constructors indicated appending caligraphic letters language name
role constructors symbols superscript restrictions roles letters subscript


fifusions description logics abstract description systems

start introducing restrictions role interpretations since need refer
restrictions defining certain concept constructors
restrictions role interpretations
restrictions enforce interpretations roles satisfy certain properties
functionality transitivity etc consider three prominent examples
functional roles one considers subset nf set role names nr
whose elements called features interpretation must map features f nf
functional binary relations f e relations satisfying b c f b
f c b c sometimes treat functional relations partial functions
write f b rather f b alc extended features denoted
alc f
transitive roles one considers subset nr nr role names r nr
called transitive roles interpretation must map transitive roles r nr
transitive binary relations ri alc extended transitive roles
denoted alc r
role hierarchies role inclusion axiom expression form r v
r nr finite set h role inclusion axioms called role hierarchy
interpretation must satisfy ri r v h alc extended role
hierarchy h denoted alc h h h clear context irrelevant
write alch instead alc h h
restrictions combined example alc hr alc
role hierarchy transitive roles
transitive roles dls first investigated sattler features introduced dls hollunder nutt name attributes
classic system brachman et al cases conjunction feature agreements disagreements see concept constructors features without agreements
disagreements e g used dl shif horrocks sattler albeit
expressive local way functionality asserted hold certain individuals necessarily whole model according naming scheme indicate
presence features dl letter f subscript
remark role hierarchies order definition h h different
role hierarchies alc h h alc h h different dls dl literature
usually one logic alch defined role hierarchies treated tboxes e
satisfiability subsumption defined relative tboxes role hierarchies see e g
horrocks purposes however convenient define one dl per role
hierarchy since distinct role hierarchies impose distinct restrictions interpretation
roles advantages become clear later frames abstract
description systems introduced
note authors e g horrocks sattler use appended f denote local features
following hollunder nutt use f denote dl allows feature agreements
see



fibaader lutz sturm wolter

name
unqualified
number restrictions
qualified
number restrictions
nominals
feature agreement
disagreement

syntax
nr
nr
nr c
nr c

u u
u u

semantics
ri n
ri n
ri c n
ri c n

b ui b ui
b b
ui b b ui b

symbol
n
q

f

figure description logic concept constructors
concept constructors
concept constructors take concept role descriptions transform
complex concept descriptions addition constructors available alc
concept constructors considered dl literature small collection
constructors found figure denotes cardinality set
symbols rightmost column indicate naming scheme resulting dl
mentioned name modifiers concept constructors written subscript
appended language name example alc hr extended qualified
number restrictions called alcqhr syntax extended dls expected e
constructors may arbitrarily combined semantics obtained augmenting
semantics alc appropriate conditions found third
column figure nominals feature dis agreements need explanation
nominals consider set names nominals pairwise disjoint
sets nc nr ni elements often denoted possibly
index interpretation must map nominals singleton subsets
intention underlying nominals stand elements individual
names however since want use nominal nullary concept
constructor must interpret set namely singleton set consisting
individual denotes
feature dis agreements alcf extension alc f feature agreements
disagreements beside additional concept constructors alcf uses feature
chains part dis agreement constructor feature chain expression
form u f fn interpretation ui feature chain
composition partial functions f fni composition read
left right
dls including nominals feature dis agreements additional concept constructors
restrictions role interpretations defined named obvious way
number restriction available almost dl systems dl alcn e alc
extended number restrictions first treated hollunder nutt
alcf dl alcq first investigated hollunder baader alco
schaerf


fifusions description logics abstract description systems

name
role composition

syntax
r r

semantics
b
c c r c b r
role complement r
b b
ri
role conjunction
r u r b b r b r
role disjunction
r r b b r b r
inverse roles
r
b b ri
transitive closure r
b b ri
universal role
u

binary relation r r denotes transitive closure r

symbol


u



u

figure description logic role constructors
role constructors
role constructors allow us build complex role descriptions collection role constructors found figure rightmost column indicates naming scheme
name modifiers role constructors written superscript separated
commas example alcq inverse roles transitive closure called alcq
dls admitting role constructors set role descriptions defined inductively analogously set concept descriptions semantics role constructors given
third column figure concept descriptions used extend
interpretation function role names role descriptions
dl role constructors role descriptions used wherever role names may
used corresponding dls without role constructors example
r u r c u r r c
u

alc
concept description concept description unsatisfiable since r r
equivalent universal role note role descriptions used within role
assertions abox
dl alc first treated baader name alc trans schild
shown dl notational variant propositional dynamic logic pdl
dls boolean operators roles investigated lutz sattler
inverse operator available system crack bresciani franconi tessaris
reasoning dls inverse roles example investigated calvanese
et al horrocks et al universal role expressed dls
boolean operators roles see example turn used simulate
general concept inclusion axioms within concept descriptions
restricting syntax
constructors could combined arbitrarily sometimes makes sense restrict
interaction constructors since reasoning restricted dl may easier
reasoning unrestricted dl consider dls imposing certain restrictions



fibaader lutz sturm wolter

roles may used inside certain concept constructors
roles may used inside certain role constructors
combination role constructors
role constructors may used inside certain concept constructors
example first case consider fragment alcqr transitive roles
may used existential universal restrictions number restrictions see
e g horrocks et al
taking fusion two dls obtain dls whose set roles nr
partitioned example fusion alcq alc yields fragment alcq
nr partitioned two sets say nr nr fragment inverse role
constructor roles nr may used within qualified number restrictions
roles nr may used inside inverse role constructor thus dl
example first second fourth case
consider dl alcf introduced extend alc f
feature dis agreement concept constructor provides role composition constructor however role chains built composition comprised exclusively
features non functional roles may appear inside feature dis agreement hence
alcf example first second fourth case
example third case fragment alc u role conjunction
may used inside role complement constructor considered lutz sattler

restricted dls introduce explicit naming scheme note
deal dls combinability concept constructors
restricted since dls would fit framework abstract
description systems introduced next section example dl would
one atomic negation concepts e negation may applied concept
names e g dl al discussed donini et al

abstract description systems
order define fusion dls prove general fusions dls one needs
formal definition description logics since exists wide variety dls
different characteristics introduce general formalization
cover dls considered literature includes logics would usually
subsumed name dl
syntax semantics
syntax abstract description system given abstract description language
determines set terms term assertions object assertions setting
concept descriptions represented terms built abstract description
become clearer given formal definition fusion



fifusions description logics abstract description systems

language general inclusion axioms dls represented term assertions abox
assertions dls represented object assertions
definition abstract description language abstract description language adl
determined countably infinite set v set variables countably infinite set x
object variables possibly infinite countable set r relation symbols arity two
possibly infinite countable set f functions symbols f equipped arities
nf sets pairwise disjoint
terms tj adl built follow syntax rules
tj

x f tnf

x v f f boolean operators different function
symbols f term denote var set set variables used
symbol used abbreviation x x abbreviation x x
x set variable
term assertions adl
v terms
object assertions
r b b x r r
x term
sets term object assertions together form set assertions adl
dl point view set variables correspond concept names object
variables individual names relation symbols roles boolean operators well
function symbols correspond concept constructors thus terms correspond
concept descriptions example let us view concept descriptions dl alcn u
e alc extended number restrictions conjunction roles terms adl
value restrictions existential restrictions seen unary function symbols
role description r function symbols fr fr take term tc
corresponding concept description c transform complex terms
fr tc fr tc corresponding concept descriptions r c r c similarly
number restrictions seen nullary function symbols role description r
n n function symbols fnr fnr hence alcn u concept
description u r u r b u r corresponds term xa f r ur xb
f r analyze connection adls dls formally later
semantics abstract description systems defined abstract description
general semantic structures terms adl
interpreted already noted however abstract description
system usually take account abstract description available
language allows selected subclass subclass determines
semantics system
keep things simpler restrict attention case binary predicates e roles dl
however easily extended n ary predicates



fibaader lutz sturm wolter

definition let l adl definition abstract description model adm
l form

e
w w f w f w f f rw rw r r



w nonempty set f w functions mapping every sequence x xnf
subsets w subset w rw binary relations w
since adms interpret variables need assignment assigns subset
w set variable evaluate terms adm evaluate object
assertions need additional assignment assigns element w object
variable



definition let l adl w w f w rw adm l assignment
w pair mapping set set variables v
w injective mapping set object variables x w let w
adm assignment w l term inductively
associate value tw w follows
xw x variables x v
w
w tw
tw
w w w w tw



f tnf w f w tw
tw
nf

x xn set variables occurring often write tw x xn
shorthand tw assignment xa
xi n
truth relation hw ai assertions defined follows
hw ai r b iff rw b
hw ai iff tw

tw
hw ai v iff tw


case say assertion satisfied hw ai adm w set
assertions exists assignment w assertion satisfied
hw ai w model
two differences adms dl interpretations first dl interpretation interpretation role names fixes interpretation function
symbols corresponding concept constructors involve roles value restrictions
number restrictions etc interpretation concept names corresponds assignment thus dl model adm together assignment whereas adm
alone corresponds called frame modal logics second dl roles used
concept constructors may course occur role assertions contrast definition
adms per se enforce connection interpretation function
symbols interpretation relation symbols connections however
enforced restricting attention subclass possible adms adl
corresponds unique name assumption



fifusions description logics abstract description systems

definition abstract description system ads pair l l adl
class adms l closed isomorphic copies
dl point view choice class defines semantics
concept role constructors allows us e g incorporate restrictions role
interpretations sense ads viewed determining description logic
concrete dl interpretation interpretation function symbols
determined interpretation role names thus one example restrict
class adms interpret certain role transitive relation
composition two roles another restriction realized choice
nominals corresponding nullary function symbols must interpreted
singleton sets
let us define reasoning abstract description systems introduce
satisfiability sets assertions without term assertions corresponds
consistency aboxes without gcis satisfiability terms without
term assertions corresponds satisfiability concept descriptions without
gcis
definition given ads l finite set assertions called satisfiable
l iff exists adm w assignment w hw ai
satisfies assertions term called satisfiable l iff satisfiable
l arbitrary object variable
satisfiability l concerned following question given
finite set object assertions l satisfiable l
relativized satisfiability l concerned following question given finite set assertions l satisfiable l
term satisfiability l concerned following question
given term l satisfiable l
relativized term satisfiability l concerned following
question given term set term assertions l satisfiable
l
next section define fusion two adss relativized
satisfiability decidable fusion relativized satisfiability component adss
decidable transfer hold must restrict called local
adss



wp rwp pairwise
definition given family wp pp
adms w
p wp f

disjoint domains wp say w w f w rw disjoint union wp pp iff

w pp wp
intuitively means adm w belongs adms differ w r
names elements domain w belong



fibaader lutz sturm wolter


f w x xnf pp f wp x wp xnf wp f f
x xnf w

rw pp rwp r r
ads l called local iff closed disjoint unions
remainder section first analyze connection adss dls
detail comment relationship modal logics
correspondence description logics
dls introduced section correspond adss order
first need introduce frames notion well known modal logic let l one
dls introduced section
definition frames l frame f pair f f f nonempty set
called domain f f interpretation function maps
nominal singleton subset f f
role name r subset rf f f restrictions role
interpretations l satisfied example alc r r nr mapped
transitive binary relation
interpretation function f inductively extended complex roles obvious
way e interpreting role constructors l according semantics given
figure
interpretation frame f iff f ri rf roles r nr
f nominals
frame viewed interpretation partial sense interpretation individual concept names fixed note contrast case
concept individual names interpretation nominals already fixed frame
reason interpret nominals frame
treat set variables ads side would however variables
singleton sets may assigned since restriction possible
framework adss defined interpret nominals frame consequence
correspond functions arity ads side
define abstract description system l corresponding dl l
straightforward translate syntax l abstract description language l
definition corresponding adl let l dl concept role constructors
well restrictions role interpretations introduced section corresponding
abstract description language l defined follows every concept name l
exists set variable xa l every individual name l exists object
variable ai l let r set possibly complex role descriptions l set
relation symbols l r set function symbols l smallest set containing
every role description r r unary function symbols fr fr


fifusions description logics abstract description systems

l provides unqualified number restrictions every n n every role
description r r function symbols fnr fnr arity
l provides qualified number restrictions every n n every role r r
unary function symbols fnr
fnr



l provides nominals every function symbol arity
l provides feature agreement disagreement every pair feature chains
u u two function symbols fu u fu u arity
l concept description c let tc denote representation c l term
defined obvious way concept names translated set variables xa
concept constructors u mapped respectively
concept constructors translated corresponding function symbols obviously
sets function relation symbols l may infinite
example translation concept descriptions terms adl already
given alcn u concept description u r u r b u r corresponds
term xa f r ur xb f r
define set abstract description corresponding dl l
every l frame contains corresponding adm
definition corresponding
let
f f f frame corresponding

adm

abstract description model w w f w rw domain w f relation symbols
l role descriptions l thus interpreted frame f
relation symbol r r hence define rw rf
define f w need define f w every nullary function symbol f l
w
f x every unary function symbol f l every x let arbitrary
concept name x f let ix interpretation f mapping
concept name x every concept name define f w make case
distinction according type f
w x r ix
fr

w x r ix
fr

w nr f w nr
fnr
nr
w x nr ix f w x nr ix
fnr


nr

fiw
fuw u u u fuw u u u
class adms thus obtained dl l obviously closed isomorphic copies since holds set l frames independently dl l
consider hence tuple l corresponding dl l indeed ads
example let us view dl alcn u ads adl l corresponding
alcn u already discussed thus concentrate class adms induced
taking empty set arbitrary



fibaader lutz sturm wolter

frames alcn u assume f frame e f consists
nonempty



domain interpretations rf role names r adm w w f w rw induced
f defined follows set w identical domain f role description
yields relation symbol interpreted w frame example
r u r w r f r f remains define interpretation function symbols
illustrate two examples first consider unary function symbol f r ur
w
given subset x w function f r
maps x
ur
w
f r
x w w v x v w v r f r f
ur

e interpretation concept description r u r interpretations
f interpreting x accordingly value constant symbol f r w
given interpretation r interpretations f
easy interpretation concept descriptions l coincides
interpretation corresponding terms l



lemma let f frame w w f w rw adm corresponding f
assignment w c concept description let concept names
used c among ak interpretations f aii xai
k
c tw

c
easy consequence lemma close connection reasoning
dl l reasoning corresponding ads given tbox abox
dl l define corresponding set assertions corresponding adl
l obvious way e gci c v yields term assertion tc v td
role assertion r j yields object assertion r ai aj concept assertion
c yields object assertion ai tc
proposition abox consistent relative tbox l iff
satisfiable corresponding ads
treat non relativized consistency explicitly since special case
relativized consistency tbox empty
already mentioned transfer require component adss
local call dl l local iff ads l corresponding l local turns
dls introduced section local
proposition let l one dls introduced section l local iff l
include following constructors nominals role complement universal
role
proof start direction interesting since shows
adss corresponding dls nominals role complement universal role
local make case distinction according constructors l contains
nominals consider disjoint union w adms w w assume
w w correspond frames dl nominals definition


fifusions description logics abstract description systems

disjoint union know w w nominal
definition disjoint union implies fiw fiw fiw since nominals
interpreted singleton sets w w since domains w w
disjoint implies fiw set cardinality consequently w cannot
correspond adm induced frame dl nominals since frames
interpret nominals singleton sets
universal role consider disjoint union w adms w w
assume w w correspond frames dl universal role let u
denote universal role e role name interpretation restricted
binary relation relating pair individuals domain definition
disjoint union u w u w u w w w w w w w
consequently w cannot correspond adm induced frame dl
universal role since frame would interpret u w w
role complement consider disjoint union w adms w w
assume w w correspond frames dl role negation
w
w
w
arbitrary role name r r r r w w rw w
w rw w w rw rw w rw
remains prove direction assume l one dls introduced
section allow nominals role complements
universal role
let

fp pp family l frames fp fp fp let wp wp f wp rwp
adms corresponding definition fp wp p p assume
domains wp pp pairwise disjoint must disjoint union wp pp
corresponds l frame purpose define frame f f f
follows
f



rf



pp

fp

pp

rfp r nr




let w w f w rw
adm corresponding
f wpby definition corw
responding adm w pp wp r pp r
r nr
induction structure complex roles easy holds
r r e complex role descriptions example consider role description


w
w
r r induction know r w pp r p r w pp r p since
sets wp pp pairwise disjoint
r r w r w r w



pp

wp

r





wp

r

pp





pp

wp

r

wp

r





r r wp

pp

since rwp rfp r r p p obtain following fact
p p fp role descriptions r r following holds rf
rfp particular rf fp


fibaader lutz sturm wolter

remains n x xn w function symbols f
arity n

f w x xn
f wp x wp xn wp
pp

proved making case distinction according type f treat two
cases exemplarily

f fu u since w pp wp sets wp pairwise disjoint fuw u
disjoint union sets fuw u wp p p remains fuw u wp
w

w

w

p
p
p
fu u
p p definition fu u
know fu u
iff fp




f

f

f

f

u p u p defined u p u p case iff
fp uf uf defined uf uf equivalent
fuw u wp

w x
f fnr
since w pp wp sets wp pairwise disjoint fnr



w x w p p remains
disjoint union sets fnr
p

w

w

w x w f p x w p p definition f p know
fnr
p
p



nr
nr
w

p
fnr
x wp iff fp rfp x wp n case iff


w x w
rf x wp n iff rf x n hence iff fnr
p




noted arguments similar ones used proof
direction presence universal role role negation function
symbols e g fu may violate locality condition
transfer decidability developed apply fusions
local adss hence direction proposition implies
applicable fusions adss corresponding dls incorporate nominals role
complement universal role
correspondence modal logics
concern fusions description logics modal logics nevertheless
useful brief look relationship adss modal logic standard
modal languages regarded adls without relation symbols object variables
identify propositional formulas terms given adl l set l l terms
called classical modal logic iff contains tautologies classical propositional logic
closed modus ponens substitutions regularity rule
x xnf ynf
f x xnf f ynf
function symbols f l minimal classical modal logic language one
unary function symbol known logic e see chellas
ads l l determines classical modal logic l taking valid
terms e defining
l iff tw w w assignments w


fifusions description logics abstract description systems

logic e determined ads precisely one unary operator whose class
adms consists chellas formulates completeness theorem
chellas called minimal alias neighborhood frames
however notational variant abstract description one unary operator
dosen classical modal logic l determined ads decidable term
satisfiability l decidable since l iff unsatisfiable
classical modal logic l called normal iff additionally contains
f x xj xj yj xj xnf f x xj xj xj xnf
f x xj yj xj xnf

f f f
function symbols f j j nf jonsson tarski jonsson
tarski goldblatt definition normal modal logics assumes
formulas terms built necessity box operators work
necessity operators corresponding possibility operators definable putting
f x xnf f x xnf
minimal normal modal logic language one unary operator known k
chellas
call function f w n w normal iff j n x xn yj w
f x xj xj yj xj xn f x xj xj xj xn
f x xj yj xj xn

f w f w f w w
note unary function f normal iff f w w f x f x f
x w function symbol f called normal ads l iff functions
f w normal w
role r dl function symbol fr normal corresponding
ads contrary readily checked neither fnr
fnr
duals




fnr

f

normal


nr
obviously ads l determines normal modal logic iff function symbols
l normal l completeness k respect kripke semantics chellas
implies logic k determined ads one unary operator whose
class adms consists interpreting operator normal function
note authors define normal modal logics possibility diamond operators case
definitions duals introduced thus first sight look quite different



fibaader lutz sturm wolter

fusions abstract description systems
section define fusion abstract description systems prove two transfer theorems decidability one concerning satisfiability one concerning
relativized satisfiability
definition fusion l l two abstract description
systems l l
disjoint sets function symbols f l g l
disjoint sets relation symbols r l q l
sets set object variables
defined follows l l adl
union f g function symbols l l
union r q relation symbols l l
defined
e
e

e

w f w g w rw qw w f w rw w g w qw
example consider adss corresponding dls alcf
alc introduced section concentrate function symbols provided
fusion following assume set role names employed alcf
alc disjoint
ads following function symbols unary functions symbol
fr fr every role name r alcf ii nullary functions symbols corresponding constructor every pair chains functional roles
alcf
ads following function symbols iii unary functions symbol
fq fq every role description q built role names alc
union composition transitive closure
since assumed set role names employed alcf alc disjoint
sets function symbols disjoint union sets provides us
symbols constructor symbols value existential restrictions role descriptions involving union composition transitive closure
however role descriptions contain role names alc thus none
functional roles alcf occurs descriptions thus fusion alcf
alc yields strict fragment union alcf
relativized satisfiability
prove transfer decidability relativized satisfiability
yields corresponding transfer relativized term satisfiability
investigate transfer extended adss correspond dls
providing universal role


fifusions description logics abstract description systems

transfer
section concerned establishing following transfer theorem
theorem let local adss suppose relativized satisfiability
decidable relativized satisfiability
decidable
idea underlying proof theorem translate given set assertions
set assertions set assertions
satisfiable iff satisfiable satisfiable first naive
idea obtain set replace alien terms e subterms
starting function symbols belonging si set variables surrogate
variables introduced satisfiability would fact imply
satisfiability sets converse would true difficulty arises
trying combine one ensure two
indeed combined sets must contain additional assertions make sure
surrogate variables one model corresponding alien subterms
model interpreted compatible way precise finitely many
different ways adding assertions one must try leads
satisfiable pair
proof theorem fix two local adss si li mi
l set function symbols f relation symbols r l g
q let l l l
follows use following notation set assertions denote
term obj set terms object names respectively
start explaining alien subterms set replaced set
variables l term form h tn h f g reserve variable
xt called surrogate assume set surrogate variables
disjoint original sets variables sketched idea underlying
introduction surrogate variables decision procedure cannot deal
terms containing function symbols g f thus alien function symbols
must replaced applying procedure precise replace whole
alien subterm starting alien function symbol surrogate example
unary symbol f belongs f unary symbol g belongs g f g f x
mixed l term obtain term l replace subterm g f x surrogate
yields f xg f x analogously obtain term l replace whole term
surrogate yields xf g f x define replacement process
formally
definition l term without surrogate variables denote sur l term
resulting occurrences terms g tn g g within
scope g g replaced surrogate variable xg tn set
terms put sur sur define sur well sur accordingly
denote sub set subterms terms sub variables
occurring well subterms alien terms e terms starting symbol


fibaader lutz sturm wolter

g formally define
sub sub xt var sur var
define sub accordingly
example let f f unary g g binary f g x f g x
sur f xg x f g x note restriction within scope g g
clarify top alien subterms replaced term
example sub g x f g x f g x g x x
note boolean operators occurring terms shared function symbols
sense alien neither l l thus sur f x g x f x xg x
sur f x g x xf x g x
course replacing whole terms variables information lost
example consider inconsistent assertion r r u r assume
r role one component fusion r role component translated
abstract description language syntax concept description r r u r
yields term fr f r f r fr function symbol l
two function symbols belong l sur fr x x
surrogate f r surrogate f r decision procedure
first ads sees fr x way know conjunction alien
subterms corresponding x unsatisfiable fact procedure x
arbitrary set variables thus x satisfiable avoid introduce
called consistency set consisting types type says relevant formula
whether formula negation supposed hold sets
contain additional information basically ensures satisfy
types allow us merge one
definition given finite set l terms define consistency set c
c tc c type tc determined c defined
tc



c



c

given finite set assertions l define subi subi term abbreviate
c c subi
example
sub fr f r f r f r f r
thus c ai fr f r f r consists terms
f r
f r
f r
f r






f r
f r
f r
f r


fifusions description logics abstract description systems

given set terms element tc consistency set c indeed considered
type element e domain adm w r element e
belongs interpretations terms complements
interpretations terms thus c set terms e belongs
e belongs interpretation tc belong interpretation
terms c case say e realizes type tc
ready formulate theorem reduces relativized satisfiability
fusion two local adss relativized satisfiability component adss
proof theorem found appendix
theorem let si li mi two local adss l
set function symbols f relation symbols r l g q
let l l l finite set assertions l
following equivalent
satisfiable l
exist
set c
b every term object variable obj
c every obj term ta
union following sets assertions l satisfiable
l
w
sur v sur
e sur ta obj

f r b r b r r
g sur v sur v sur
union following sets assertions l satisfiable l
w
h sur v sur
sur ta obj

j q b q b q q
intuitively guesses set types e elements consistency set
idea exactly types realized model constructed
showing given showing condition b introduces
every type name object realizing type c guesses every object
variable occurring type
w regarding h one note set assertions v
states every type realized e object model
type every object one types sets assertions
h obtained set surrogation make digestible decision
procedures component logics


fibaader lutz sturm wolter

assertions e state surrogated versions object
interpreting variable type ta ensures
given showing objects interpreting type ta
otherwise could combined common one
sets f j obtained distributing relationship assertions
depending relation symbol used assertion
set g contains surrogated version term assertions form v
membership assertions form
condition asymmetric two respects first guesses subset c rather
subset c course arbitrary could chosen index instead
second set neither contains assertions sur v sur v
sur added assertions theorem would
still true would unnecessarily increase amount work done
combined decision procedure fact since assertions enforce tight
coordination fact membership assertions
term assertions satisfied implies satisfied
see appendix details
prove theorem must theorem used construct
decision procedure relativized satisfiability decision procedures
component systems given finite set assertions set
c finite thus finitely many sets choices types
object variables c consequently enumerate check whether
one choices leads satisfiable sets definition sets
functions suri assertions indeed assertions li thus satisfiability
li mi applied proves theorem
regarding complexity obtained decision procedure costly step guessing
right set since cardinality set sub linear size
cardinality c exponential size element size quadratic
thus doubly exponentially many different subsets chosen since
cardinality chosen set may exponential size size
may exponential big disjunction
following corollary follows
corollary let local adss suppose relativized satisfiability
decidable exptime pspace relativized satisfiability decidable exptime expspace
p n

proof assume size n must consider polynomial p
p n
different sets set size p n thus choices
c polynomial p overall still leaves us doubly exponentially
many choices assume relativized satisfiability
decidable exptime since call procedures applied set assertions
p n
p n
exponential size may take double exponential time say polynomials
p p overall thus time complexity


p n



p n




p n



p n



fifusions description logics abstract description systems

p n

clearly majorized
appropriate polynomial p shows
membership exptime
argument regarding space complexity similar one must additionally
take account doubly exponentially many choices enumerated
exponentially large counter

relativized term satisfiability
statement theorem imply transfer relativized term
satisfiability decidability relativized term satisfiability
necessarily imply decidability relativized satisfiability
adss thus prerequisite theorem apply satisfied
however consider statement theorem easy see theorem
yields transfer relativized term satisfiability
corollary let local adss suppose relativized term satisfiability decidable relativized term satisfiability
decidable
proof consider satisfiability criterion theorem interested relativized term satisfiability form set term
assertions case sets assertions contain object assertions
involving relations assume form tn
set term assertions since two assertions form b b equivalent
one assertion b may assume ai distinct since si
local easy see following equivalent
tn satisfiable si
aj tj satisfiable si j n
since trivial enough given wj mi aj
tj j n disjoint union belongs mi clearly model
tn
second condition checked applying term satisfiability test si
n times

dealing universal role
stated proposition adss corresponding dls universal role
local thus theorem cannot applied directly nevertheless cases
theorem used obtain decidability fusions dls
universal role provided provide universal role comment
usefulness detail section
definition given ads l denote u ads obtained
extending l two function symbols fus fus


fibaader lutz sturm wolter




w
extending every adm w w f w rw unary functions fu

w
fu

w x x f w x w otherwise
fu
us

w x w x w f w x otherwise
fu
us


adss corresponding dl l ads u corresponds extension l
universal role universal role used within value existential
restrictions close connection relativized satisfiability
satisfiability u
proposition local ads following conditions equivalent
relativized term satisfiability decidable
term satisfiability u decidable
relativized term satisfiability u decidable

proof restrict attention term satisfiability since equivalences
satisfiability proved similarly
implication trivial easy fact satisfiable
relative term assertions v sn v tn iff tfus tn sn
satisfiable u
assume relativized term satisfiability
decidable let l u lu mu following use fu
abbreviation fus since replace equivalently term function symbol
fus fu may assume without loss generality fus occur terms
lu
suppose set lu given set term assertions
want decide whether satisfiable model w mu purpose transform set assertions containing fu idea underlying transformation
given model w mu fu w w depending whether tw w
consequently replace fu accordingly evaluation term
w change however satisfiability test model w
trying decide whether one exists thus must guess right replacement
term lu called u term iff starts fu set u terms
occur possibly subterms denoted u set inductively function
note necessary add universal role u set relation symbols since assertion
form u b trivially true however use universal role within qualified number
restrictions covered extension



fifusions description logics abstract description systems

u subterms terms
x x



f tn f tn f fu arity n
fu fu
thus obtained replacing occurrences u terms image
e define function
v v
v fu u fu
fu u fu
mutually distinct object variables note contain
function symbol fu thus viewed set assertions addition though
contains one membership assertion contain assertions involving
relation symbols consequently satisfiability checked term
satisfiability test see proof corollary decidability relativized
term satisfiability u follows following claim
claim satisfiable member mu iff exists mapping u
satisfiable member

prove claim firstff suppose satisfied assignment member
w w f w fuw rw mu define setting fu fu w
w fu
otherwise
obviously implies satisfied

w
w
assignment w f r member
suppose satisfiable mapping take member w

conversely

w
w


ffand assignment hw ai set w

w f w r w
w
w f fu r prove induction terms occur




tw w

critical case one fu first assume fu fu

contains v thus w w sw second identity


holds induction however sw w implies fu w w w case
fu fu treated similarly term assertion ensures
thus induction interpreted whole domain consequently
applying fu yields empty set
since hw ai identity implies hw ai completes proof
claim thus proposition

normal modal logics stated proposition already shown
goranko passy proof technique used however transfered


fibaader lutz sturm wolter

general situation since strongly depends normality modal
operators
proposition obtain following corollary first transfer theorem
corollary let local adss assume relativized
term satisfiability si decidable relativized term satisfiability
u u decidable
proof know theorem corollary relativized term satisfiability
decidable hence proposition yields relativized term
satisfiability u decidable u u notational variant
u function symbols fus fus replaced fus
analogously fus since three identical semantics

satisfiability
note theorem yield transfer unrelativized satisfiability
course relativized satisfiability decidable
theorem implies satisfiability decidable since
special case relativized satisfiability however able apply
theorem obtain decidability satisfiability fusion component
adss must satisfy stronger requirement relativized satisfiability problemwis decidable indeed set theorem contains term assertion namely v suri
even contain term assertions
cases relativized satisfiability undecidable whereas
satisfiability still decidable example theorem cannot applied
fusion alcf alc since relativized satisfiability alcf
already undecidable baader et al however satisfiability decidable
dls
covering normal terms
formulate transfer satisfiability need introduce
additional notion generalizes notion normal modal logic
definition covering normal terms let l ads f function
symbol l arity n term tf x one variable x covering normal term
f iff following holds w
tw
f w w
w
w
x w tw
f x tf x tf

x x yn w x xi x yi n implies
w
w
w
tw
f x f x xn tf x f yn

ads l said covering normal terms iff one effectively determine
covering normal term tf every function symbol f l


fifusions description logics abstract description systems

intuitively first two conditions state covering normal term behaves
value restriction box operator consider term fr x fr function
symbol corresponding value restriction constructor role r fr x
obviously satisfies first two requirements covering normal terms note
second condition implies function induced tf monotonic e x implies
w
tw
f x tf third condition specifies connection covering normal
term function symbol covers respect elements tw
f x values
w
w
functions f x xn f yn agree provided arguments
agree x easy see fr x covering normal term function symbols
corresponding value existential qualified number restrictions role r
see proposition
given covering normal terms tf function symbols f finite set function
symbols e one construct term te covering normal term elements
e
lemma suppose ads l covering normal terms l set
function symbols f denote tf covering normal term function symbol f
f f every finite set e f function symbols term
te x



tf x

f e

covering normal term f e
correspondence normal modal logics
following shows ads every function symbol normal
covering normal terms hence notion covering normal terms generalizes notion
normality modal logics
proposition let l ads assume f normal function symbol
l
tf x f x f x f x
covering normal term f particular f nullary unary tf x
tf x f x covering normal term f
proof first two conditions definition covering normal terms immediately
follow definition normal function symbols thus concentrate third
condition assume simplicity f binary suppose w x x x
w x xi x yi set f f w f x x x x
f x x since f normal know
f x x x x f x x f x x f x x f x x
f x x f x x f x f x f


fibaader lutz sturm wolter

thus
f x x f x x f x x f x x
f x x f x f x f
since normality f
f x x f x x f x x tw
f x
f x x f x f x tw
f x
w
implies tw
f x f x x tf x f



transfer
covering normal terms formulate second transfer theorem
concerned transfer decidability non relativized satisfiability
theorem let local adss covering normal terms suppose
satisfiability decidable satisfiability
decidable
proof theorem fix two local adss si li mi
l set function symbols f relation symbols r l g
q let l l l
proof theorem follows general ideas proof theorem
however notable differences way satisfiability reduced
satisfiability theorem guess set types
set additional guesses pair satisfiability
respectively generated proof theorem need guess
instead compute right set however computation requires us solve
additional satisfiability fusion nevertheless yields reduction
since alternation depth e number alternations function symbols
decreases going input set additional mixed satisfiability

describe reduction detail must introduce somewnew
notation case relativized satisfiability term assertions w
form v suri
used assert elements thew domain belong suri use
covering normal terms propagate suri terms certain depth
set function symbols e define e depth de term inductively
de xi
de de
de de max de de
de f tn max de de tn f e
de f tn max de de tn f e


fifusions description logics abstract description systems

finite set assertions
de max de term
put term x one variable x x x tm x tm x x x
tm x tm x tm x
position formulate reduces satisfiability fusion
two local adss covering normal terms satisfiability component adss
theorem let si li mi two local adss covering normal
terms l set function symbols f relation symbols r
l g q let l l l let finite set
object assertions l put df r dg let c x x covering
normal term function symbols f g
denote set c term satisfiable
l following three conditions equivalent
satisfiable l
exist
every object variable obj
every obj term ta
union following sets object assertions satisfiable
l
w
sur cm sur
w
sur ta cm sur obj
r b r b r r
sur
union following sets object assertions satisfiable l
w
sur dr sur
w
sur ta dr sur obj
q b q b q q

condition replaced
sets theorem similarwto ones theorem
main difference
w term assertion v suri longer instead
disjunction suri directly inserted terms covering normals
terms already mentioned another difference set
guessed theorem replaced set actually guessing
set
w longer possible case proof theorem need know
v suri satisfiable si e holds least one model mi
way check effectively since relativized satisfiability


fibaader lutz sturm wolter

si taking set ensures property satisfied see proof appendix
details
definition set c term satisfiable l
recall term satisfiable iff satisfiable l arbitrary
object variable since elements c still mixed terms e terms
fusion computing set actually needs recursive call decision procedure
satisfiability l recursion well founded since alternation depth decreases
definition term l denote alternation
alternation depth respectively say length longest
sequence form g f g
g f g
gj g fj f appears alternation depth defined exchanging
roles f g put call alternation depth
finite set terms maximum
thus counts maximal number changes symbols first
second ads starting first symbol e first symbol
counts change even occur inside scope symbol
alternation depth defined accordingly alternation depth sums
alternation depth
lemma term c term c term
proof term sub term
sub term definition c clearly implies lemma first
note definition subi
ai subj ai term j



make case distinction follows
term term want sub term
since implies sub term assume contrary
sub term implies sub term hence
exists term sub sequence g f g function symbols
gi g f length term g f g occurs
definition sub implies existence term term function
symbol f f f g f g occurs since length
g f g term obviously yields term term
contradiction
term term similar previous case exchange roles
f g sub sub



fifusions description logics abstract description systems

prove theorem must theorem used construct decision
procedure satisfiability decision procedures component
systems let us first consider computing sets
term consists boolean combinations set variables
case c consists set variables computed boolean
reasoning term lemma states
c term induction thus assume effectively
computed consequently remains check condition theorem
since finite guess every object variable occurring type ta
sets obtained way indeed sets assertions l l respectively
thus satisfiability effectively checked decision procedures
proves theorem
argument used shows theorem sufficient state
equivalence theorem fact induction argument used
necessarily apply computation cases alternation
depth may decreases noted theorem could
formulated symmetric way done since
necessary proving theorem
regarding complexity combined decision procedure must principle
consider complexity computing covering normal terms size terms
examples dl terms value restrictions thus size
complexity computing linear assume polynomial bound
assumption obtain complexity case relativized
satisfiability fact complexity testing condition theorem agrees
complexity testing condition theorem adds one exponential
complexity decision procedure single adss order compute need
exponentially many recursive calls procedure since recursion depth linear
size end exponentially many tests condition
corollary let local adss covering normal terms assume
covering normal terms computed polynomial time satisfiability
decidable exptime pspace satisfiability
decidable exptime expspace
argument case relativized satisfiability extend
transfer term satisfiability
corollary let local adss covering normal terms suppose
term satisfiability decidable term satisfiability
decidable

fusions description logics
given two dls l l fusion defined follows translate
corresponding adss build fusion fusion l l
l l dl corresponds since definition fusion
adss requires sets function symbols disjoint must ensure adss


fibaader lutz sturm wolter

corresponding l l built disjoint sets function symbols dls
introduced section achieved assuming sets role names l
l disjoint sets nominals l l disjoint dl l l
allows use concept role constructors dls restricted way
role descriptions role descriptions l l role descriptions
involving constructors names dls concept descriptions may contain concept
constructors dls however constructor li may use role description
li
let us illustrate restrictions two simple examples fusion alc alc
two dls alc alc fragment alc whose set role names
partitioned two sets nr nr
transitive closure operator may applied names nr
inverse operator may applied names nr
example concept name r nr q nr r u q
concept description alc alc r u r q
note although two source dls disjoint sets role names alc alc
role names sets may used inside existential value restrictions since
concept constructors available dls
fusion alcq alc r two dls alcq alc r fragment
alcqr whose set role names nr transitive roles nr nr partitioned
two sets nr nr nr nr inside qualifying number restrictions
role names nr may used particular means transitive roles
cannot occur within qualified number restrictions
following give examples illustrate usefulness transfer
proved previous section first give example case satisfiability
relativized satisfiability subsequently consider complex example
involving called concrete domains general transfer used prove
decidability recently proved designing specialized
fusion finally give example demonstrates restriction
local adss really necessary
decidability transfer satisfiability
subsection give example application theorem
decidability could obtained theorem
theorem requires adss covering normal terms however satisfied
dls yield local adss
proposition let l one dls introduced section let corresponding
ads l local covering normal terms terms
computed linear time
proof function symbols f l term tf form fr x role
description r semantics value restrictions implies terms form satisfy


fifusions description logics abstract description systems

first two properties definition completes proof function symbols
f arity since third condition definition trivially satisfied thus
nullary function symbols fr x arbitrary role name r job
remains every unary function symbol f fr fr fnr
fnr



term fr x satisfies third property immediate consequence
w x f w f w x f w x
fact function symbols f fr
r
w x w

following consider two description logics alcf alc hollunder
nutt satisfiability alcf concept descriptions decidable
true consistency alcf aboxes lutz note however relativized
satisfiability alcf concept descriptions thus relativized abox consistency
alcf undecidable baader et al alc decidability satisfiability
shown baader schild decidability abox consistency alc
shown chapter de giacomo
unrestricted combination alcf two dls undecidable precise satisfiability alcf concept descriptions thus consistency alcf aboxes undecidable follows undecidability relativized satisfiability
alcf concept descriptions fact role operators alcf used
internalize tboxes schild baader et al contrast undecidability
alcf theorem immediately implies satisfiability concept descriptions
fusion alcf alc decidable
theorem satisfiability concept descriptions consistency aboxes decidable
alcf alc whereas satisfiability alcf concept descriptions already
undecidable
taking fusion thus yields decidable combination two dls whose unrestricted
combination undecidable price one pay fusion offers less expressivity unrestricted combination concept f f u f c example
concept description alcf allowed fusion alcf alc
decidability transfer relativized satisfiability
example application corollary thus theorem consider
dl alc u
dl satisfiability concept descriptions undecidable however
f
expressive fragment decidable relativized satisfiability obtained
building fusion two sublanguages alc
alc u
f
theorem satisfiability alc u
concept descriptions undecidable
f
undecidability shown reduction domino berger
knuth see e g baader sattler undecidability proofs dls
reduction main tasks solve reduction one express
grid one access points grid one square grid expressed

n n

note alc notational variant test free propositional dynamic logic pdl fischer
ladner



fibaader lutz sturm wolter

description form xyuyx x features fact description
expresses points belonging x x successor
two successors coincide accessing point grid achieved
role description x
note undecidability closely related known undecidability
idpdl e deterministic propositional dynamic logic intersection harel
however undecidability proof idpdl harel uses test construct
available alc u

f
next relativized satisfiability two rather expressive sublanguages
alc u
decidable
f
theorem relativized satisfiability concept descriptions decidable alc f
alc u
proof sketch cases tboxes internalized described schild
baader et al thus sufficient decidability unrelativized
satisfiability
follows decidability dpdl ben ari halpern pnueli
alc
f
known correspondence pdl alc schild fact
non functional roles simulated functional ones presence composition
transitive closure parikh
alc u decidability satisfiability follows decidability ipdl e pdl
intersection danecki

given theorem corollary yields following decidability
corollary relativized satisfiability concept descriptions decidable fusion
alc f alc u
concrete example
description logics concrete domains introduced baader hanschke
order allow reference concrete objects numbers time intervals spatial
regions etc defining concepts precise baader hanschke
define extension alc alc concrete domain see
suitable assumptions satisfiability alc decidable one
main extension dls relativized satisfiability satisfiability dls tboxes internalized usually undecidable baader hanschke
though exceptions see lutz reason haarslev et al
introduce restricted way extending dls concrete domains corresponding extension alcn hr decidable relativized satisfiability
following obtained easy consequence
precise even relativized abox consistency decidable restricted
extension alcn hr concrete domains restrict ourself satisfiability concepts
since aboxes introduced haarslev et al allow use concrete individuals
predicate assertions individuals covered object assertions adss
introduced present



fifusions description logics abstract description systems

theorem moreover alcn hr replaced arbitrary local dl
decidable relativized satisfiability
definition concrete domain concrete domain pair
nonempty set called domain set predicate names predicate
name p associated arity n n ary predicate p nd concrete
domain called admissible iff set predicate names closed negation
contains name satisfiability finite conjunctions
predicates decidable
given concrete domain one predicates p arity n one
define concept constructor f fn p predicate restriction f fn
concrete features contrast abstract features considered concrete
features interpreted partial functions abstract domain concrete
domain consider basic dl allows boolean operators
concept constructors
definition b let nc set concept names nfc set names
concrete features disjoint nc let admissible concrete domain concepts
descriptions b boolean combinations concept names predicate restrictions e expressions form f fn p p n ary predicate
f fn nfc
semantics b defined follows consider interpretation
nonempty domain interprets concept names subsets concrete
features partial functions boolean operators interpreted
usual
f fn p x xn
fii xi n x xn p
note concept descriptions interpreted subsets
thus go ads corresponding b concrete domain explicit
part corresponding adms used define interpretation function
symbols corresponding predicate restrictions predicate restriction constructor
translated function symbol fn p arity adm w corresponding
w
frame f
defined f fn p interpretation
fn p
f maps concept names empty set
theorem let admissible concrete domain b local
relativized satisfiability b concept descriptions decidable
proof given family wi ii adms wi corresponding frames pairwise
disjoint
domains first build union f frames domain f

f
interprets concrete features obvious way e f f x f x
ii
note general framework introduced baader hanschke allows feature chains
predicate restrictions considering feature chains length one main restriction introduced
haarslev et al



fibaader lutz sturm wolter

x let w adm induced f tosprove w fact disjoint union
wi
w
wi ii remains
ii
easy consequence
fn p
fn p
semantics predicate restriction constructor interpretation concrete
features f fact domains pairwise disjoint
decidability unrelativized satisfiability immediate consequence
decidability alc given baader hanschke since b
simple dl contain concept constructors requiring generation
abstract individuals easy see b concept description c satisfiable relative
tbox c v cn v dn iff satisfiable one element interpretation
tbox internalized simple way c satisfiable relative
tbox c v cn v dn iff c u c u u cn dn satisfiable

given theorem corollary yields following transfer shows
concrete domains restricted form predicate restrictions introduced
integrated local dl decidable relativized satisfiability without
losing decidability
corollary let admissible concrete domain l local dl
relativized satisfiability concept descriptions decidable relativized satisfiability
concept descriptions b l decidable
non local dls
proposition dls allowing nominals universal role role negation
local follows decidability transfer theorems applicable fusions
dls following try clarify reasons restricted applicability
theorems
first dls decidable satisfiability
fusion undecidable satisfiability culprit case universal
role role negation
theorem satisfiability concept descriptions decidable alc u alcf
undecidable fusion alc u alcf
proof decidability alcf shown hollunder nutt alc u
baader et al goranko passy undecidability alc u alcf
identical alcf u follows baader et al fact
universal role used simulate tboxes see proposition

note role negation used simulate universal role replace u c
r c u r c u c r c r c addition decidability alc known
decidable lutz sattler consequently theorem holds replace
alc u alc
noted example given theorem depends fact
one two dls allows universal role becomes undecidable
universal role added fact corollary shows decidability transfer
dls already provide universal role


fifusions description logics abstract description systems

concerning nominals counterexample transfer decidability
presence however think unlikely general
transfer case fact note dl l without nominals introduced
section fusion alco identical l extended nominals since relativized
satisfiability alco decidable general transfer case would imply
extension decidable provided l decidable consequently would yield
general transfer adding nominals

conclusion
regarding related work work closely related one presented
wolter analogs theorems proved normal modal
logics within algebraic framework present extend ones wolter
two directions first added object assertions thus prove
transfer abox reasoning second transfer satisfiability
non normal modal logics long covering normal terms allows us handle
non normal concept constructors qualified number restrictions graded modalities
framework
think introduction abstract description systems adss contribution right adss abstract internal structure concept constructors
thus allow us treat vast range constructors uniform way nevertheless model theoretic semantics provided adss less abstract algebraic
semantics employed wolter closer usual semantics dls thus
easier comprehend people used semantics
adss fact yield good level abstraction proving general description logics recently notion used proving general
called e connections representation formalisms description logics modal spatial
logics temporal logics kutz wolter zakharyaschev contrast fusions
e connection two domains merged connected means relations
regarding complexity transfer yield upper bounds basically
complexity fusion one exponent higher
ones components believe complexity satisfiability
fusion adss indeed exponentially higher complexity satisfiability
component adss however yet matching lower bounds e know
example exponential increase complexity really happens
note spaans transfer np pspace decidability
component modal logics fusion restricted normal modal logics
make additional assumptions used solve satisfiability
component logics nevertheless many pspace complete description logics
easy see fusion pspace complete sense general techniques
reasoning fusion descriptions logics developed give rough
complexity estimate



fibaader lutz sturm wolter

appendix proofs
appendix give detailed proofs criteria relativized satisfiability
fusion local adss recall criteria transfer theorems decidability
easily follow deferred proofs theorems appendix since
rather technical
proof theorem
prove theorem need technical lemma proof theorem
going merge w w means bijective function b
domain w w onto domain w w way surrogates
suri c respected b sense


w sur w b w sur w



w w c existence bijection equivalent condi



tion cardinalities sur w sur w sur w sur w
coincide c c contains conjunct

equivalent negation conjunct hence suri wi

suri wi clearly yields equivalence following
lemma used choose way cardinality condition satisfied
refer reader e g gratzer information cardinals
lemma let l local ads set assertions satisfiable l

exists aff cardinal cardinals exists model


w w f w rw w assignment hw ai
sw terms



proof assumption exists adm w w f w rw assignment b hb b hw bi let max w

let take disjoint isomorphic copies hw b

iswas required

w
w w f r
ffof hw b first member list coincides
w let w w f w rw disjoint union w define
hw ha ii putting b x

x
b x


x v note object variables interpreted w follows
definitions term semantics disjoint unions

sw
sw b



terms hence w hw ai remains sw
every term suppose sw
sw means

w





fifusions description logics abstract description systems





noted disjointness sets suri wi suri wi
required order ensure existence bijection b precisely order

merge w w sets suri wi member relevant subset c
must form partition wi domain satisfies certain cardinality condition
formalized following definition
definition let cardinal set x xn called partition set w
iff
xi n
xi xj whenever j

w xi
x xn partition adm w domain w iff partition w
proof enforce properties hold appropriate constructions
property holds definition c
proving theorem repeat formulation
theorem let si li mi two local adss l
set function symbols f relation symbols r l g q
let l l l finite set assertions l
following equivalent
satisfiable l
exist
set c
b every term object variable obj
c every obj term ta
union following sets assertions l satisfiable
l
w
sur v sur
e sur ta obj

f r b r b r r
g sur v sur v sur
union following sets assertions l satisfiable l
w
h sur v sur
sur ta obj

j q b q b q q


fibaader lutz sturm wolter

sur w

b



b

w

sur

sur w



sur w











sur sk w





b



sur sk w

w



w
figure mapping b

proof start direction take set c satisfying
properties listed theorem take

cardinals

ffff
lemma


ffff


li mi put max

take w w

wi mi wi ai lemma

assume wi suri wi

sets suri wi
partitions
wiwfor since


suri ii wi v suri iii


implies suri wi suri wi definition c moreover obj obj


obj sur w iff sur w
together fact injective implies existence
bijection b w onto w




b w w sur w sur w


b

obj figure assumed sk illustrates
mapping b



define model w w f g w r q w putting
w w
f w f w f f
g g arity n z zn w
g w z zn b g w b z b zn
b z b z z z
rw rw r r
qw x iff qw b x b q q


fifusions description logics abstract description systems

since closed isomorphic copies hard see w let
prove implication theorem remains
hw ai end suffices prove following claim
claim terms sub




tw sur w b sur w
prove claim let us implies hw ai first note
claim obtain

tw sur w term

may proved induction construction term terms sub
booleans function symbols l basis induction e
equality members sub stated claim induction step straightforward
hw ai consequence suppose r b
r b thus hw ai r b similarly q b implies q b

hw ai q b suppose sur sur w
implies tw hence hw ai v
sur v sur tw
tw
hence hw ai v


come proof claim proved induction structure
due following equalities holding sub suffices tw

sur w
sur w









sur w conjunct





b sur w conjunct





b sur w
w

first equality holds since sur w w
conjunct second equality true definition b validity
thirdwequality seen analogously validity first one considering

sur w w


hence let us tw sur w induction start let variable

equation tw sur w immediate consequence fact
induction step distinguish several cases

induction hypothesis tw
sur w hence tw w tw





w

w



w sur
sur
since w w
induction hypothesis tw
sur ti w hence




tw tw
tw
sur w sur w sur w


similar case


fibaader lutz sturm wolter



f tn induction hypothesis tw
sur ti w n hence




w
w
tw f w tn f w sur w sur tn w sur w
since f w f w
g tn case tw b g w b tw
b tw
since
n




w


w



equalities sur
b sur
remains sur w



g w b tw
b tw
since sur w g w sur w sur tn w
n


amounts showing b tw
sur ti w n however

follows induction hypothesis together equations
concludes proof direction
remains prove direction suppose hw ai w
ha put
c sw
note fusion local adls local adl hence l local may
assume lemma sets sw infinite
take object name obj every let obj


ta sub tw sub tw
prove set assertions ta obj satisfiable
l
w
let f w denote restriction f g w
symbols f
r
similarly



w
w
w

restriction rq symbols r set w w f r


xt tw g tk sub
obj sw note choose
injective function sw infinite induction
sur w tw term



let x variable x surrogate x x induction
step distinguish several cases
inductive steps f tn f f
identical corresponding cases proof equation occurs
direction implies
g tn g g sur xt hence xt tw
equation proved






equation
obtain
w prove w r b whenever

r b w sur v sur whenever sur v sur
remaining formulas left

theffreader suppose r b r b
hw ai r b hence w r b suppose sur v sur


fifusions description logics abstract description systems

w equation
v hence hw ai v means tw






sur w sur w means w sur v sur
construction model satisfying similar left reader

proof theorem
proof theorem fix two local adss si li mi
l set function symbols f relation symbols r l
g q let l l l assume covering
normal terms
similarly done previous section merge means

bijections map points sets sur w points corresponding sets

sur w finite set object assertions l let denote set
c term satisfiable l ensure
merging succeeds must enforce elements
form partitions appropriate merged
captured following lemma explicitly stating dual lemma
omitted brevity
lemma let finite set object assertions l cardinal satisfying
conditions lemma l
exists model w assignment
sur w
partition w
exists model w assignment
sur w
partition w
proof definition model ws
assignment sws since fusion two local adss local
set closed disjoint unions hence exists model w
assignment sw follows set
satisfiable
e l lemma thus exists model




w
w
w w f g r q
assignment w




sw partition w let w denote restriction w l
define


xt tw g tk sub




hw ai required prove note sur w tw term
similar left reader



fibaader lutz sturm wolter

repeat formulation theorem proved
theorem let si li mi two local adss covering normal
terms l set function symbols f relation symbols r
l g q let l l l let finite set
object assertions l put df r dg let c x x covering
normal term function symbols f g
denote set c term satisfiable
l following three conditions equivalent
satisfiable l
exist
every object variable obj
every obj term ta
union following sets object assertions satisfiable
l
w
sur cm sur
w
sur ta cm sur obj
r b r b r r
sur
union following sets object assertions satisfiable l
w
sur dr sur
w
sur ta dr sur obj
q b q b q q

condition replaced
start proof direction proofs
dual
onlyff give proof suppose hw ai


w
w w f g r q w lemma assume every
tw infinite take object name obj every let
obj


ta sub tw sub tw
prove set assertions ta obj satisfiable
l proof rather similar proof direction
proof theorem let f w resp g w denote restriction f g w symbols
f resp g similarly rw
qw theffrestrictions
r q ffw symbols
r q respectively set w w f w rw
xt tw g tk sub


fifusions description logics abstract description systems

obj tw choose injective
function since sets tw infinite
corresponding part proof theorem induction
sur w tw term



let us see w follows
r b

equation

r b hw ai
r
b




hw
ai

r
b
hence
w




w
w
definition



hence
w sur




w
definition cm w cm sur remains observe
sur ta w obj sur w whenever
sur w
construction model satisfying similar left reader
remains implications similar
concentrate first proof theorem possible construct
required model merging situation different
possible w
merge
w one step since know whether
satisfy sur sur
w respectively know
w
satisfy approximations sur cm sur sur dr sur
respectively merge type distinguish
pieces add pieces well define pieces need
technical claim proof theorem take cardinals lemma
li mi put max
claim suppose holds



exist w w f w rw assignment ha w
sequence x xm subsets w
xm obj
hw ai
xn xn cw xn n
set sur w xm partition xm
sets
sur w xn xn
partitions xn xn n
w x



b exist w w g w qw assignment b hb b sequence
yr subsets w
b b yr obj
b hw bi


fibaader lutz sturm wolter

w x
x x







xm xm
xm xm
xm

w
figure sets xi

b yn yn dw yn n r
b set sur yr partition yr
b sets
sur yn yn
partitions yn yn n r
b w
figure illustrates relation sets xi set ai xi xi
w
w x intuitively xm set points know points
w sur w far away xm possibly less far away
xm possibly even less far w
xi finally members
even known whether sur w note object names
interpreted xm come formal construction sets xi
proof claim prove part b proved
andffleft reader

similarly
w

assumption lemma adm wa wa f rwa wa
assignment aa haa aa hwa aa
let

zn cn sur wa aa

n lemma
take every n n adm

wn wn f wn rwn assignments
n

sur wn


fifusions description logics abstract description systems

partitions wn



take disjoint union w w w f w rw wn n wa
define ha w putting

x aa x
ai x
im

set variables x b aa b object variables b let n

xn zn
wi
nim

hw ai sets xn n required
hwa aa b aa b zm b obj hence
b xm zm wm b obj
definition disjoint unions hwa aa
firstly definition cn since cw monotone distributes
intersections
zn zn cw zn xn cw xn

secondly definition disjoint unions first property covering normal
terms since cw monotone




wi
wi
wi cw
wi xn cw xn

n im

nim

nim

nim

obtain
xn zn



wi xn cw xn



n im

three properties definition satisfied since
sur wm
partition wm sur wm implies
property since sur w wm sur wm wm xm xm
property immediate consequence definition property
w xm w sw fix w xm
distinguish two cases firstly assume w wm fact sur wm
partition wm clear
w exists required
sur wa aa definition cm
secondly assume
w

z

c



w
w sur wa aa w sur w
proof similar property


fibaader lutz sturm wolter

definition
finishes proof claim
suppose
e

e

w w f w rw xm x w w g w qw b yr
satisfying properties listed claim may assume
w xm w yr
appropriate bijection b xm onto yr may assume xm yr
b object variables obj
sur w xm sur w b xm



follows fact object variables mapped b xm
yr b respectively injectivity mappings b conditions
b state sur w xm sur w b yr
form partitions xm yr abbreviations useful set
ai xi xi
bi yi yi r
w x b w
far merged xm part w yr part w remains take care
sets ai bi r sets ai merged
wi sets bi merged vi thus
final model obtained merging disjoint union w wi
disjoint union w vi r figure illustrates merging
figure assume sk
course merging ai model wi respect partition
sur w ai
ai merging bi model vi respect partition
sur w b bi
bi note b partition
care
take
e proceed



w
w
formal construction w ai g q
assignments

iff

b b b




sur w b sur w ai
follows lemma




fifusions description logics abstract description systems

xm



vr



v v

sur










wm




sur sk

yr

w w br

b b

sur









sur sk
figure bijection


e


b b lemma vi bi f v rv



assignments ai ai ai r r




sur v sur w b bi
let




e


w w w yr f w rw

disjoint union vi r w let

e


w w w xm g w qw
disjoint union wi w assume xm yr
domain adms
w w

define model w w f g w r q w w w w putting


rw rw


f w f w


qw qw


g w g w


fibaader lutz sturm wolter

define assignment c hc c w putting
c b obj

c x x r ai x set variables x term

notice c x b x b x set variables x term
c xt xt



c xt b xt



r

ai xt g tk sub


b xt

f tk sub

hw ci firstly however make list relevant properties
hw ci
claim
c c xm yr obj
c hw ci
c sur w c x sur w c x
c sur w c x sur w c x sub
c xn xn cw xn n
c yn yn dw yn n r
c g g arity l n c cl w
g w c cl xn g w c xn cl xn xn
c f f arity l n r c cl w
f w c cl yn f w c yn cl yn yn
proof claim c follows b construction hw ci c follows
b c follows construction hw ci equations
c follows c c c follow

b ffrespectively remains
prove c c c follows fact w gw disjoint union
structures xn w xn n c dual c claim
proved
hw ci end first following
claim k k k k r sub df k
dg k z xk yk
z sm c z sur c z sur c


fifusions description logics abstract description systems

proof claim c suffices prove first equation proof induction
cardinal k k induction base k k follows sur sur
df dg
suppose claim proved xk yk k k r k k k k
prove claim xk yk proof induction construction terms
df k dg k boolean cases trivial
suppose f sl df k dg k
following two statements
xk sw c xk sur c
ii yk sw c yk sur c
consider first induction hypothesis yields
xk sw c
xk sur si w c

l
xk cw xk sw c xk cw xk f w w c slw c
xk cw xk f w sur w c sur sl w c
xk cw xk sur w c
second equation immediate consequence third property covering normal
terms given definition equation follows c e xk xk
cw xk proved
ii suppose first k r yk xm claim proved
since xm xk induction hypothesis xk sw c
xk sur si w c

l
assume k r induction hypothesis
yk sw c
yk sur si w c

l hence
yk sw c
f w yk sur w c yk sur sl w c
f w yk sw c

l
intersect sides equation yk derive help c
yk f w sw c
sw c
yk f w sur w c sur sl w c

l
means yk sw c yk sur w c equation follows statements
proved
case g sl dual left reader proved claim
induction c f proof theorem proof corresponding
claim obtain claim
xm sw c xm sur c term




fibaader lutz sturm wolter

let us see hw ai follows distinguish three cases suppose r b
r b therefore hw ci r b similarly q b implies
q b hw ci q b suppose sur
c c sur w c implies c tw c hence hw ci
finishes proof theorem

references
areces c blackburn p marx computational complexity hybrid
temporal logics logic journal igpl
baader f augmenting concept languages transitive closure roles alternative terminological cycles proc th int joint conf artificial
intelligence ijcai
baader f burckert h j hollunder b nutt w siekmann j h concept
logics lloyd j w ed computational logics symposium proceedings pp
springer verlag
baader f burckert h j nebel b nutt w smolka g expressivity
feature logics negation functional uncertainty sort equations j logic
language information
baader f hanschke p schema integrating concrete domains concept
languages proc th int joint conf artificial intelligence ijcai
pp
baader f hanschke p extensions concept languages mechanical engineering application proc th german workshop artificial intelligence
gwai vol lecture notes computer science pp bonn germany springer verlag
baader f hollunder b terminological knowledge representation system
complete inference proc workshop processing declarative
knowledge pdk vol lecture notes artificial intelligence pp
springer verlag
baader f sattler u expressive number restrictions description logics j
logic computation
ben ari halpern j pnueli deterministic propositional dynamic logic
finite complexity completeness j computer system sciences

berger r undecidability dominoe mem amer math soc

borgida description logics data management ieee trans knowledge
data engineering
brachman r j mcguinness l patel schneider p f alperin resnick l borgida
living classic use kl one language


fifusions description logics abstract description systems

sowa j f ed principles semantic networks pp morgan kaufmann
los altos
brachman r j schmolze j g overview kl one knowledge representation system cognitive science
bresciani p franconi e tessaris implementing testing expressive description logics preliminary report proc description logic workshop
dl pp
calvanese de giacomo g lenzerini reasoning expressive description
logics fixpoints automata infinite trees proc th int
joint conf artificial intelligence ijcai pp
calvanese de giacomo g rosati r note encoding inverse roles
functional restrictions alc knowledge bases proc description logic
workshop dl pp ceur electronic workshop proceedings http ceurws org vol
chellas b f modal logic cambridge university press cambridge uk
danecki r nondeterministic propositional dynamic logic intersection
decidable proc th symp computation theory vol lecture
notes computer science pp springer verlag
de giacomo g decidability class knowledge representation formalisms
ph thesis dipartimento di informatica e sistemistica universita di roma la
sapienza
de giacomo g lenzerini boosting correspondence description
logics propositional dynamic logics proc th nat conf artificial
intelligence aaai pp aaai press mit press
de giacomo g lenzerini b concept language number restrictions
fixpoints relationship calculus proc th eur conf
artificial intelligence ecai pp
de giacomo g lenzerini whats aggregate foundations description logics tuples sets proc th int joint conf artificial
intelligence ijcai pp
donini f hollunder b lenzerini spaccamela nardi nutt w
complexity existential quantification concept languages artificial
intelligence
donini f lenzerini nardi nutt w tractable concept languages
proc th int joint conf artificial intelligence ijcai pp
sydney australia
donini f lenzerini nardi nutt w complexity concept
languages information computation
donini f lenzerini nardi schaerf deduction concept languages subsumption instance checking j logic computation



fibaader lutz sturm wolter

dosen k duality modal algebras neighbourhood frames studia
logica
fine k schurz g transfer theorems stratified modal logics copeland
j ed logic reality essays pure applied logic memory arthur
prior pp oxford university press
fischer j ladner r e propositional dynamic logic regular programs
j computer system sciences
gabbay fibring logics vol oxford logic guides clarendon press
oxford
gargov g goranko v modal logic names j philosophical logic

goldblatt r varieties complex algebras annals pure applied logic

goranko v passy universal modality gains questions journal
logic computation
gratzer g universal algebra springer verlag york
haarslev v moller r wessel description logic alcn hr extended
concrete domains practically motivated proceedings international joint conference automated reasoning ijcar lecture notes
artificial intelligence springer verlag
harel dynamic logic handbook philosophical logic vol pp
reidel dordrecht holland
hollunder b baader f qualifying number restrictions concept languages
tech rep rr deutsches forschungszentrum fur kunstliche intelligenz dfki
kaiserslautern germany abridged version appeared proc nd int
conf principles knowledge representation reasoning kr
hollunder b nutt w subsumption concept languages tech rep
rr deutsches forschungszentrum fur kunstliche intelligenz dfki kaiserslautern germany
horrocks expressive description logic fact fiction proc
th int conf principles knowledge representation reasoning kr
pp
horrocks sattler u description logic transitive inverse roles
role hierarchies j logic computation
horrocks sattler u tobies practical reasoning expressive description logics j interest group pure applied logic
jonsson b tarski boolean algebras operators american journal
mathematics
jonsson b tarski boolean algebras operators ii american journal
mathematics


fifusions description logics abstract description systems

knuth e art computer programming vol addison wesley mass
kracht wolter f properties independently axiomatizable bimodal logics
journal symbolic logic
kutz wolter f zakharyaschev connecting abstract description systems
submitted available http www informatik uni leipzig de wolter
levesque h j brachman r j expressiveness tractability knowledge
representation reasoning computational intelligence
lutz c reasoning concrete domains dean ed proc th
int joint conf artificial intelligence ijcai pp stockholm sweden
morgan kaufmann los altos
lutz c interval temporal reasoning general tboxes proc
th int joint conf artificial intelligence ijcai pp
lutz c sattler u mary likes cats proc description
logic workshop dl pp ceur electronic workshop proceedings
http ceur ws org vol
nebel b computational complexity terminological reasoning back artificial
intelligence
nebel b terminological reasoning inherently intractable artificial intelligence

parikh r propositional logics programs systems complexity
proc th acm sigact sigplan symp principles programming languages popl pp las vegas usa
prior n past present future oxford university press
sattler u concept language extended different kinds transitive roles
gorz g holldobler eds proc th german annual conf artificial
intelligence ki lecture notes artificial intelligence pp
springer verlag
schaerf complexity instance checking concept languages
existential quantification j intelligent information systems
schaerf reasoning individuals concept languages data knowledge
engineering
schild k correspondence theory terminological logics preliminary report
proc th int joint conf artificial intelligence ijcai pp
schmidt schau subsumption kl one undecidable brachman r j
levesque h j reiter r eds proc st int conf principles
knowledge representation reasoning kr pp morgan kaufmann
los altos
schmidt schau smolka g attributive concept descriptions complements artificial intelligence


fibaader lutz sturm wolter

spaan e complexity modal logics ph thesis department mathematics
computer science university amsterdam netherlands
van der hoek w de rijke counting objects j logic computation

wolter f fusions modal logics revisited kracht de rijke wansing h zakharyaschev eds advances modal logic pp csli
publications
woods w schmolze j g kl one family lehmann f w ed
semantic networks artificial intelligence pp pergamon press published
special issue computers mathematics applications number





