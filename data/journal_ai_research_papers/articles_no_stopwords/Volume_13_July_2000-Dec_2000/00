journal artificial intelligence

submitted published

space efficiency propositional knowledge representation
formalisms
marco cadoli

cadoli dis uniroma

dipartimento di informatica e sistemistica
universita di roma la sapienza
via salaria roma italy

francesco donini

donini dis uniroma

politecnico di bari
dipartimento di di elettrotecnica ed elettronica
via orabona bari italy

paolo liberatore
marco schaerf

liberato dis uniroma
schaerf dis uniroma

dipartimento di informatica e sistemistica
universita di roma la sapienza
via salaria roma italy

abstract
investigate space efficiency propositional knowledge representation pkr
formalism intuitively space efficiency formalism f representing certain piece
knowledge size shortest formula f represents
assume knowledge set propositional interpretations set
propositional formulae theorems provide formal way talking relative
ability pkr formalisms compactly represent set set theorems
introduce two compactness measures corresponding classes
relative space efficiency pkr formalism representing theorems directly
related classes particular consider formalisms nonmonotonic reasoning
circumscription default logic well belief revision operators stable
model semantics logic programs negation one interesting formalisms
time complexity necessarily belong space efficiency class

introduction
last years large number formalisms knowledge representation kr
proposed literature formalisms studied several perspectives including semantical properties computational complexity investigate
space efficiency property minimal size needed represent certain piece knowledge given formalism study motivated fact
piece knowledge represented two formalisms different amount
space therefore else remaining formalism could preferred another
one needs less space store information
definition space efficiency however simple indeed formalism may allow
several different ways represent piece knowledge example let us assume
want represent piece knowledge today monday propositional

c

ai access foundation morgan kaufmann publishers rights reserved

ficadoli donini liberatore schaerf

logic may decide use single propositional variable monday fact today
monday represented formula monday formula monday
well monday rain rain formulae propositional logic
logically equivalent monday represent exactly information
propositional logic consider shortest equivalent formulae used
represent information principle applied generic
formalism allows several formulae represent information take
account shortest one therefore say space efficiency formalism f
representing certain piece knowledge size shortest formula f
represents space efficiency called succinctness compactness formalism
measure ability representing knowledge small amount space
focus propositional kr pkr formalisms give
formal definition formalisms propositional one intuitively
propositional formalism quantifications allowed thus formulae
syntactically bounded formed propositional connectives plus
kind nonclassical connectives instance negation logic programs etc
far discussed knowledge represents possible way think
piece knowledge represents facts inferred words
knowing something knowing everything logically implied
second way cases natural think piece knowledge
set states world consider possible
formal way say knowledge represented set propositional interpretations describing states world consider plausible set
formulae implied know consequently focus reasoning
model checking theorem proving following example shows
really think knowledge ways
example want eat fast food want sandwich salad
water coke
propositional logic choice represented model following
represent possible choices represented writing letters
mapped true
sandwich water sandwich coke salad water salad coke
representing set choices use formulae instead case
write set formulae whose represent exactly allowed choices
follows
c sandwich salad sandwich salad sandwich salad
water coke water coke coke water

actually get rid redundancies end following formula
f sandwich salad sandwich salad water coke water coke


fispace efficiency propositional knowledge representation formalisms

formally f represents set interpretation
holds f formula f represents set formulae c
cn f cn c cn function gives set conclusions
drawn propositional formula
state art
question deeply investigated related space efficiency
possibility translating formula expressed one formalism formula expressed
another formalism assumption course formulae represent
knowledge
cases analysis possibility translating formulae different
formalisms propositional logic pl example ben eliyahu dechter
proposed translation default logic pl translation disjunctive logic
programs pl winslett introduced translation revised knowledge
bases pl gelfond przymusinska przymusinskyi defined translation
circumscription pl
translations well many ones literature lead
exponential increase size formula worst case best known
translation yields formula target formalism exponential size w r
formula source formalism natural question arising whether exponential
blow due specific translation intrinsic example
although proposed translations default logic pl lead exponential blow
cannot conclude possible translations suffer could
polynomial translation exists discovered far
works focussed question whether kind exponential increase
size intrinsic cadoli donini schaerf shown many interesting fragments default logic circumscription cannot expressed polynomialtime fragments pl without super polynomially increasing size formulae
proved super polynomial increase size necessary translating
unrestricted propositional circumscription cadoli donini schaerf silvestri
operators belief revision pl cadoli donini liberatore schaerf
liberatore
gogic collegues analyzed relative succinctness several pkr formalisms
representing sets among showed skeptical default logic
represent sets succinctly circumscription
kautz kearns selman khardon roth considered
representations knowledge bases notion characteristic model comparing
representations e g clauses showed representation
knowledge bases characteristic sometimes exponentially compact
ones converse true cases
however specific proofs tailored specific reduction help us define equivalence classes space efficiency kr
formalisms recent cadoli donini liberatore schaerf b complexity measure decision called compilability introduced



ficadoli donini liberatore schaerf

present measure directly used characterize space
efficiency pkr formalisms emphasize methodological aspects expressing
general context many presented
goal
notion polynomial time complexity great importance kr well many
fields computer science solved polynomial time
considered easy computational point view
notion polynomial many one reducibility intuitive meaning
applied kr exists polynomial many one reduction one formalism
another one time complexity reasoning two formalisms comparable
allows say e g inference pl conp complete e one hardest
among complexity class conp
formal tool comparing difficulty reasoning two
formalisms missing way saying one formalism able represent
information less space
example consider lunch scenario previous example
reduce size representation circumscription instead propositional
logic pl knowledge previous example represented formula f
f sandwich salad sandwich salad water coke water coke
set formula exactly minimal
formula fc defined follows
fc sandwich salad water coke
definition circumscription mccarthy holds f equivalent
circ fc sandwich salad water coke note fc shorter f
proved hold arbitrary sets may conclude circumscription
space efficient propositional logic representing knowledge expressed sets

goal provide formal way talking relative ability pkr formalisms compactly represent information information set
set theorems particular would able say specific pkr
formalism provides one compact ways represent theorems among
pkr formalisms specific class

introduce two compactness measures model theorem compactness
corresponding classes model c thm c c complexity class p np conp
etc classes form two hierarchies isomorphic polynomial time hierarchy
stockmeyer relative space efficiency pkr formalism


fispace efficiency propositional knowledge representation formalisms

directly related classes particular ability pkr formalism compactly
represent sets theorems directly related class model theorem
hierarchy belongs higher model theorem hierarchy represent
sets theorems compactly formalisms lower classes
classification obtained general framework making direct
comparisons specific translations pkr formalisms furthermore
allows simple intuitive notion completeness model
theorem hierarchies notion precisely characterizes relation
formalisms different levels relations formalisms level
interesting two pkr formalisms model checking inference belong
time complexity class may belong different compactness classes may
suggest criterion choosing two pkr formalisms reasoning
time complexitynamely choose compact one two pkr formalisms
may belong theorem compactness class yet different model compactness
classes stresses importance clarifying whether one wants represent
theorems choosing pkr formalism
outline
next section introduce notation assumptions adopt
work section compilability briefly recall notions non uniform computation important follows recall basic definitions compilability
classes cadoli et al b section reductions describe constraints
impose reductions section space efficiency introduce compactness
classes section applications actually compare many known pkr formalisms
framework finally section related work conclusions compare
work proposals presented literature draw conclusions

notations assumptions
section define knowledge bases formalisms since want
consider formalisms different syntax semantics need
general definitions let us consider base case formalism propositional calculus
formally assume composed three parts
syntax used define well formed formulae
proof theory allows saying formula follows another one
model theoretic semantics establishes model satisfies formula
syntax defined finite alphabet propositional symbols l b c
possibly subscripts usual set propositional connectives
terms knowledge representation proof theory seen way extracting knowledge knowledge base example knowledge base c
fact b holds thus say formula b part knowledge represented
c


ficadoli donini liberatore schaerf

cases want knowledge bases represent rather sets formulas
interpretation alphabet propositional variables l mapping l
true false model theoretic semantics propositional calculus usual way
extending interpretation l well formed formulas
let us extend definition generic formalisms formalism composed
syntax proof theory model theoretic semantics
remark formalism syntax instance default logic includes
ternary connective denoting default rules logic programming special
unary connective knowledge base formalism f simply wellformed formula according syntax formalism
formalism proof theory well proof theory formalism f
binary relation f set knowledge bases formulae intuitively f b f means
consequence knowledge base kb according rules formalism
f set formulae implied knowledge base kb exactly
knowledge represented kb
base comparison two different formalisms concept equivalence
allowing saying two knowledge bases two different formalisms represent
piece knowledge since knowledge represented knowledge base set
formulas implies assume syntax formulae
formalisms namely assume formulae implied knowledge
base well formed formulae propositional calculus words formalism
syntax knowledge bases however assume proof theory relates
knowledge bases formulae syntax formalism propositional formulae
writing kb f assume kb knowledge base syntax f
propositional formula
allows saying two knowledge bases kb kb expressed two different formalisms f f represent piece knowledge true
propositional formula holds kb f kb f
model theoreric semantics formalism relation f propositional
knowledge bases case assume fixed alphabet l thus set
interpretations common formalisms model knowledge base
kb relation write f kb intuitively means model
supports piece knowledge represented kb
remark formalisms e g credolous default logic reiter
proof theory model theoretic semantics possible conceive
formalisms model theoretic semantics proof theory
defined assume related following formula
kb f

iff

kb implies

regarding proof theory formalisms consider formulae shorter
knowledge base assume knowledge represented knowlegde
base kb set formulae kb f size size
kb done two reasons first formulas larger kb likely



fispace efficiency propositional knowledge representation formalisms

contain large parts actually independent kb second give technicals
simple way compilability classes introduced next section
assumption consider formulae whose size less equal
knowledge base
formalisms consider satisfy right hand side distruibutivity conjunction
kb f kb f kb f assumption size
restrictive case cnf formula

compilability classes
assume reader familiar basic complexity classes p np uniform
classes polynomial hierarchy stockmeyer garey johnson
briefly introduce non uniform classes johnson sequel c c etc denote
arbitrary classes polynomial hierarchy
assume input instances strings built alphabet
denote empty string assume alphabet contains special
symbol denote blanks length string x denoted x
definition advice function takes integer returns string
advices important complexity theory definitions often
special turing machines determine oracle free
constant time
definition advice taking turing machine turing machine enhanced
possibility determine x constant time x input string
course fact x determined constant time
intractable even undecidable function makes definitions advice taking
turing machine different ones regular turing machine example
advice taking turing machine calculate polynomial time many functions
regular turing machine cannot including untractable ones
note advice function size input input
hence advice taking turing machines closely related non uniform families circuits
boppana sipser clearly advice allowed access whole instance
would able determine solution constant time
definition advice taking turing machine uses polynomial advice exists
polynomial p advice oracle satisfies n p n nonnegative
integers n
non uniform complexity classes advice taking turing machines
consider simplified definition classes polynomial hierarchy



ficadoli donini liberatore schaerf

definition c class polynomial hierarchy c poly class languages defined turing machines time bounds c augmented polynomial advice
class c poly known non uniform c non uniformity due
presence advice non uniform uniform complexity classes related karp
lipton proved np p poly p p ph e polynomial hierarchy collapses second level yap generalized particular
showing np conp poly p p ph e polynomial hierarchy
collapses third level inprovement given kobler
watanabe proved kp pk poly implies polynomial hierarchy collapses zpp pk collapse polynomial hierarchy considered
unlikely researchers structural complexity
summarize definitions proposed formalize compilability
cadoli et al b adapting context terminology pkr
formalisms remark aim give formalization
compilability analyze point view rather
use compilability classes technical tool proving relative
efficiency formalisms representing knowledge little space
several papers literature focus reducing complexity
via preprocessing phase kautz selman kautz et al khardon
roth motivates introduction measure complexity
assuming preprocessing allowed following intuition knowledge base
known well questions posed divide reasoning two parts
one part fixed accessible line knowledge base second one varying
accessible line interpretation formula compilability aims capturing line
complexity solving composed inputs e complexity respect
second input first one preprocessed arbitrary way next
section close connection compilability space efficiency pkr
formalisms
function f called poly size exists polynomial p strings
x holds f x p x exception definition x represents number
case impose f x p x say function used
advice taking turing machine polysize function
function g called poly time exists polynomial q x g x
computed time less equal q x definitions easily extend
binary functions usual
define language pairs subset necessary represent
two inputs pkr reasoning e knowledge base kb formula
interpretation example inference propositional logic pli
defined follows
pli hx yi x set propositional formulae kb formula x
well known pli conp complete e one hardest
among belonging conp goal prove pli hardest theorem

fispace efficiency propositional knowledge representation formalisms

proving among conp solved preprocessing first input
arbitrary way e kb end introduce hierarchy classes
non uniform compilability classes denoted k c c generic uniform complexity
class p np conp p
definition k c classes language pairs belongs k c iff
exists binary poly size function f language pairs c hx yi
holds
hf x yi iff hx yi
notice poly size function f takes input x kb size
formula interpretation done technical reason
assumption allows obtaining impossible prove function f
takes x input cadoli et al b assuption useful proving negative
theorems impossibility compilation indeed impossible reduce
complexity function takes x input
reduction impossible function taking x argument
theorem cadoli donini liberatore schaerf theorem let c
class polynomial hierarchy belongs k c
exists poly size function f language pairs
hx yi holds
k hf x k yi hx yi
c
clearly whose time complexity c k c take f x x
interesting c may belong k c
c c e g np k p true example
belief revision cadoli et al rest however mainly focus
complete defined pictorial representation class k c
figure assume c
pli method proving belongs k p known order
probably belong k p define notion reduction
completeness
definition non uniform comp reducibility given two b
non uniformly comp reducible b denoted nucomp b iff exist two poly size
binary functions f f polynomial time binary function g every
pair hx yi holds hx yi hf x g f x b
nucomp reductions represented depicted figure reductions
satisfy important properties reduction
theorem cadoli et al b theorem reductions nucomp satisfy transitivity compatible johnson class k c every complexity class c


ficadoli donini liberatore schaerf

f



x






hx yi






figure representation k c
x




f
f



x



g








figure nu comp c reductions

therefore possible define notions hardness completeness k c
every complexity class c
definition k c completeness let language pairs c complexity class
k c hard iff k c nucomp moreover
k c complete k c k c hard
right complexity class completely characterize pli
fact pli k conp complete cadoli et al b theorem furthermore hierarchy
formed compilability classes proper polynomial hierarchy
proper cadoli et al b karp lipton yap fact widely conjectured
true
informally may say k np hard compilable p
considerations know exists preprocessing fixed part
makes line solvable polynomial time polynomial hierarchy collapses
holds k conp hard general k c complete
class c regarded toughest c even arbitrary preprocessing fixed part hand k c
preprocessing fixed part becomes c e compilable c
close section giving another example use compilability classes
well known formalism circumscription mccarthy let x propositional
formula minimal x truth assignments satisfying x
positive values possible w r set containment consider check
whether given model minimal model propositional formula called
minimal model checking mmc reformulated model checking
circumscription known co np complete cadoli


fispace efficiency propositional knowledge representation formalisms

consider knowledge base x given line truth assignment
given line obtain following definition
mmc hx yi minimal model x
shown k conp complete cadoli et al b theorem
hence unlikely k p unlikely exists
line processing knowledge base yielding say data structure x
given checked polynomial time whether minimal model x
course unless x exponential size observation applies x
knowledge base propositional logic led interpretation circumscription
compact succint pl cadoli donini schaerf gogic et al
framework allows generalize pkr formalisms shown
sequel

reductions among kr formalisms
define forms reduction pkr formalisms analyze
following sections formula represented string alphabet
hence consider translations functions transforming strings
let f f two pkr formalisms exists poly size reduction f
f denoted f f f f poly size function given knowledge
base kb f f kb knowledge base f clearly reductions restricted
produce meaningful output particular discuss reductions preserve
original theory
semantic gogic collegues two
knowledge bases must exactly words knowledge base kb
formalism f translated knowledge base kb formalism f f kb
f kb summarized reduction
formalisms f f way translate knowledge bases f knowledge bases f
preserving sets semantics intuitively grounded easy
examples two formalisms consider equally space efficient cannot
translated let us consider instance variant propositional calculus
syntax formulas must form x f f regular
formula variables x clearly formalism able represent knowledge
space propositional calculus apart polynomial factor however
according definition formalism cannot translated propositional calculus
knowledge base equivalent kb x indeed model
kb model consistent knowledge base modified propositional
calculus contains x
propose general deal functions f change
language kb end allow translation gkb kb
f kb stress general possible translation may depend
kb e different knowledge bases may different translations
want translation easy compute since otherwise computation gkb could
hide complexity reasoning formalism however observe end


ficadoli donini liberatore schaerf

sufficient impose gkb computable polynomial time fact kb
fixed could trivially translated f kb constant time
lookup table table would exponentially large though want
forbid hence impose gkb circuit polynomial size wrt kb still use
functional notation gkb denote applying model circuit
gkb formal definition follows
definition model preservation poly size reduction f f f satisfies modelpreservation exists polynomial p knowledge base kb f
exists circuit gkb whose size bounded p kb every interpretation
variables kb holds f kb iff gkb f f kb
rationale model preserving reduction knowledge base kb first
formalism f converted knowledge base f kb second one f
reduction model f easily translated model
gkb f
require g depend kb transformation f general could take
actual form kb account happens following example modelpreserving translation
example reduce fragment skeptical default logic kautz selman
circumscription varying letters transformation introduced etherington
let hd w prerequisite free normal pfn default theory e defaults
form generic formula let z set letters occurring
hd w define pd set letters function f defined
following way f hd w circ pd z w pd
pd letters minimized z set letters occurring hd w
varying letters f model preserving poly size reduction fact given
set pfn defaults let gd function interpretation z
gd pd clearly f poly size gd realized circuit
whose size polynomial model least one extension hd w iff
gd circ pd z dependence g stresses fact
case circuit g depend whole knowledge base hd w
clearly preserved theorems preserved well weaker form
reduction following one theorems preserved case
allow theorems kb translated simple circuit gkb theorems kb
definition theorem preservation poly size reduction f f f satisfies theorempreservation exists polynomial p knowledge base kb f
exists circuit gkb whose size bounded p kb every formula
variables kb holds kb f iff f kb f gkb
theorem preserving reduction property similar model preserving
reduction knowledge bases used represent theorems rather
namely knowledge base kb translated another knowledge base f kb


fispace efficiency propositional knowledge representation formalisms

used represent set theorems precisely theorem
kb represented theorem gkb f kb
winslett shown example reduction updated knowledge bases
pl theorem preserving model preserving winsletts reduction one
could use machinery propositional reasoning kb
update plus reduction reduction shown previous example
theorem preserving time g identity circuit
remark definitions reduction general proposed
gogic collegues fact authors consider notion analogous
definition case g identity e two formalisms
identical allowing simple translation g definition covers
general forms reductions preserving one example

comparing space efficiency pkr formalisms
section use compilability classes defined section compare
succinctness pkr formalisms
let f f two formalisms representing sets prove
knowledge base f reduced via poly size reduction knowledge base
f satisfying model preservation compilability class
model checking first input kb second input interpretation f higher equal
compilability class model checking f
similarly prove theorem preserving poly size reductions exist
compilability class inference first input kb second input formula cf
definition pli f higher equal compilability class
inference f
order simplify presentation proof theorems introduce
definitions
definition model hardness completeness let f pkr formalism c
complexity class model checking f belongs compilability class
k c model varying part instances say f model c
similarly model checking k c complete hard say f model c complete
hard
definition theorem hardness completeness let f pkr formalism
c complexity class inference formalism f belongs
compilability class k c whenever formula varying part instance say
f thm c similarly inference k c complete hard say f thmc complete hard
definitions implicitly define two hierarchies parallel polynomial hierarchy stockmeyer model hierarchy model p model np model p etc
theorem hierarchy thm p thm np thm p etc higher formalism model
hierarchy efficiency representing analogously theorems
example cadoli et al thm characterize model theorem classes
propositional logic


ficadoli donini liberatore schaerf

theorem pl model p thm conp complete
formally establish connection succinctness representations
compilability classes following theorems complexity classes c c c belong
polynomial hierarchy stockmeyer theorems assume
polynomial hierarchy collapse
start showing existence model preserving reductions formalism
another one easily obtained levels model hierarchy satisfy simple
condition
theorem let f f two pkr formalisms f model c f modelc hard exists poly size reduction f f f satisfying model preservation
proof recall since f model c model checking f k c since f
model c hard model checking f non uniformly comp reducible model checking
f adapting def exist two poly size binary functions f f
polynomial time binary function g every pair hkb holds
f kb g f kb f f kb
note g poly time function appearing def different gkb
poly size circuit appearing def
observe computed kb simply counting letters appearing kb let f counting function e f kb clearly f poly size
define reduction f f kb f kb f kb since poly size functions closed
composition f poly size f model preserving reduction
definition need prove exists polynomial p knowledge
base kb f exists poly size circuit gkb every interpretation
variables kb holds f kb iff gkb f f kb
proceed follows given kb f compute z f kb f kb f kb
since f f poly size z size polynomial respect kb define circuit
gkb one computing g z g f kb f kb since g poly time
function inputs z poly size kb exists representation g z
circuit gkb whose size polynomial wrt kb construction f kb iff
gkb f f kb hence thesis follows
following theorem instead gives simple method prove modelpreserving reduction one formalism another one

theorem let f f two pkr formalisms polynomial hierarchy
collapse f model c hard f model c c c poly size
reduction f f f satisfying model preservation
proof reduction exists c poly c poly implies
polynomial hierarchy collapses level yap let complete
class c e g c p may validity quantified boolean formulae
stockmeyer define follows
hx yi x empty string


fispace efficiency propositional knowledge representation formalisms

already proved cadoli et al b thm k c complete since model
checking f model c hard non uniformly comp reducible model checking
f adapting def exist two poly size binary functions f f
polynomial time binary function g every pair h yi holds h yi
g f f f let n clearly knowledge base f
depends n e exactly one knowledge base integer call kbn
moreover f f n depends n call oracle observe
kbn polynomial size respect n
exists poly size reduction f f f satisfying model preservation given
knowledge base kbn exists poly size circuit hn g f kbn
hn g f f kbn
therefore k c complete non uniformly reduced
k c follows given size n one obtains preprocessing
f kbn one checks whether interpretation hn g computable
polynomial time given n model f f kbn fact model
checking f k c k c k c proved previous
implies c poly c poly cadoli et al b thm
turns implies polynomial hierarchy collapses yap
theorems hierarchy classes model c exactly characterizes
space efficiency formalism representing sets fact two formalisms
level model hierarchy reduced via poly size
reduction theorem poly size reduction formalism f higher
hierarchy one f lower class theorem latter case say
f space efficient f
analogous similar proofs hold poly size reductions preserving theorems
namely next theorem shows infer existence theorem preserving reductions
one gives way prove theorem preserving reduction
one formalism another one
theorem let f f two pkr formalisms f thm c f thm chard exists poly size reduction f f f satisfying theorem preservation
proof recall since f thm c inference f k c since f thm chard inference f non uniformly comp reducible inference f adapting
def exist two poly size binary functions f f polynomial time binary
function g every pair hkb holds
kb f f kb f g f kb
distinguish poly time function g appearing def poly size circuit
gkb appearing def
theorem replace upper bound formula
assumption know size less equal size kb therefore
replace kb formula becomes
kb f f kb kb f g f kb kb


ficadoli donini liberatore schaerf

define reduction f f kb f kb f kb f poly size function
computes size input since poly size functions closed composition
f poly size
f theorem preserving reduction e f satisfies def
amounts proving knowledge base kb f exists circuit gkb
whose size poynomial wrt kb every formula variables kb
holds kb f iff f kb f gkb
proceed proof theorem given kb f let z f kb f kb
since f f poly size z polynomial size respect kb define gkb
g z g f kb f kb clearly gkb represented circuit polynomial
size wrt kb construction kb f iff f kb f gkb hence claim
follows
theorem let f f two pkr formalisms polynomial hierarchy
collapse f thm c hard f thm c c c poly size
reduction f f f satisfying theorem preservation
proof reduction exists c poly c poly polynomial
hierarchy collapses level yap let complete class c
define proof theorem k c complete cadoli
et al b thm since inference f thm c hard non uniformly compreducible inference f adapting def exist two poly size binary
functions f f polynomial time binary function g every pair h yi
h yi f f g f let n clearly knowledge
base f depends n e one knowledge base integer call
kbn moreover f f n depends n call oracle
observe kbn polynomial size respect n
exists poly size reduction f f f satisfying theorem preservation
given knowledge base kbn exists poly time function hn kbn f
g f kbn f hn g
therefore k c complete non uniformly reduced
k c follows given size n one obtains arbitrary preprocessing
f kbn one checks whether formula hn g computable polytime given theorem f f kbn fact inference f
k c k c k c follows c poly c poly cadoli et al
b thm implies polynomial hierarchy collapses yap
theorems compilability classes characterize precisely relative
capability pkr formalisms represent sets sets theorems example
consequence theorems poly size reduction pl
syntactic restriction pl allowing horn clauses preserves theorems unless
polynomial hierarchy collapses kautz selman proved non existence
reduction strictly related pli specific proof



fispace efficiency propositional knowledge representation formalisms

applications
section devoted application theorems presented previous section
theorems previously known literature able asses
model theorem compactness pkr formalisms
assume definitions propositional logic default logic reiter
circumscription mccarthy known definitions widtio sbr gcwa
stable model semantics appropriate subsections
following proofs refer qbf verifying
whether quantified boolean formula xy f valid x disjoint sets
variables f set clauses alphabet x composed three literals
example simple formula belonging class x x x
x x x x x
deciding validity qbf complete class p consequence corresponding qbf deciding whether input composed
string fixed part quantified boolean formula xy f varying
one complete class k p liberatore notice hardness
proofs sequel use without meaningful fixed part
stable model semantics
stable model semantics sm introduced gelfond lifschitz tool
provide semantics logic programs negation original proposal one
standard semantics logic programs recall definition propositional
stable model
let p propositional general logic program let subset e interpretation atoms p let p program obtained p following way
clause c p contains body negated atom c deleted
body clause contains negated atom deleted
body clause least herbrand model p stable model
p
formalism sm consider program p knowledge base write
p sm q denote query q implied logic program p stable model
semantics
order prove need define kernel graph
definition kernel let g v e graph kernel g set k v
denoting h v k holds
h vertex cover g
j h exists k j e
state theorem compilability class inference stable model
semantics corresponding theorem compactness class
theorem inference stable model semantics k conp complete
thus stable model semantics thm conpcomplete


ficadoli donini liberatore schaerf

proof membership class follows fact conp complete
marek truszczynski hardness adapt proof marek
truszczynski showing deciding whether query true stable
conp hard
let kernel language g g graph least one kernel
let g n observe g cannot vertices size n
n exists logic program pn every graph g
n vertices exists query qg g kernel iff pn sm qg
let alphabet pn composed following n n propositional letters
ai n rij sij j n
program pn defined
aj
sij
rij







ai rij

rij
j n


sij

given graph g v e query qg defined
qg



j e

rij



rij

j e

reduction kernel sm defined f x n pn e f depends
second argument f x n e f constant function g qy e given
graph g circuit g computes query qg
k reduction reduction correct e
h gi kernel g kernel iff pn sm qg
part suppose pn sm qg exists stable model pn
qg observe qg equivalent conjunction rij j e
rij j e simplifying pn qg obtain clauses
aj ai j e



observe contains sij j e order stable e
support atoms rij j e contains atom sij j e
let h j aj k ai h vertex cover g since
edge j e satisfy corresponding clause aj ai hence
ai aj moreover j h atom aj since
stable model exists clause aj ai ai k therefore
k kernel g
part suppose g v e kernel k let h v k let
interpretation
rij j e sij j e aj j h

obviously qg stable model pn e least
herbrand model pnm fact pnm contains following clauses
sij
rij
aj

rij

j e



k



j e





fispace efficiency propositional knowledge representation formalisms

clauses last line obtained clauses pn form aj ai rij
clauses h hence ai deleted clauses negated
atom ai deleted since k hence ai aj vertex j h
hence edge j e k hence clauses pnm hence
least herbrand model pnm exactly aj j h
minimal model reasoning
one successful form non monotonic reasoning selection
minimal among formalisms minimal model semantics consider circumscription mccarthy generalized closed world assumption
gcwa minker formalism represent knowledge closed world
assume reader familiar circumscription briefly present
definition gcwa model semantics gcwa defined letter
gcw kb iff kb positive clause kb kb
present two formalisms
theorem model checking circumscription k conp complete thus
circumscription model conp complete
trivial corollary theorem already proved cadoli et al theorem fact proof implicitly shows model checking circumscription
k conp complete
theorem model checking gcwa k p thus gcwa
model p
proof already pointed cadoli et al possible rewrite gcw
propositional formula f given model gcw
f moreover size f polynomially bounded size
consequence model compactness gcwa class pl theorem
thesis follows
theorem inference circumscription k p complete thus circumscription thm p complete
trivial corollary theorem published previous cadoli
et al theorem implicitly shows inference circumscription k p complete
theorem inference gcwa k conp complete thus gcwa
thm conp complete
proof already pointed proof theorem possible rewrite
gcw formula f equivalent consequence formula
theorem gcw theorem f thus gcwa
theorem compexity pl since gcwa generalization pl follows gcwa
theorem compactness class pl hence gcwa thm conp complete


ficadoli donini liberatore schaerf

default logic
subsection present default logic two variants credulous
skeptical details two main variants default logic refer
reader kautz selman notice model compactness
applicable skeptical default logic
theorem model checking skeptical default logic k p complete
thus skeptical default logic model p complete
proof proof membership straightforward since model checking skeptical
default logic p liberatore schaerf follows k p
proof k p hardness similar proof p hardness liberatore schaerf
reduction qbf let h instance qbf
xy f represents valid qbf formula string
let n size formula f implies variables formula
n let k set clauses three literals alphabet
number clauses three literals alphabet n variables less n
thus bounded polynomial n
prove xy f valid model extension hw di



w



ci



ci

ci

ci

ci f







w w xi w w xi



w xi

xi x

w xi





w

v

ci

w



set ci k set variables one one elements
note w depends size n f depends f
nucomp reduction
prove formula valid model extension
default theory hw di similar already published proof liberatore
schaerf consider evaluation c variables ci evaluation x
variables x let following set defaults




ci ci

ci c

ci

ci c

ci



w w xi

w xi

xi x



xi x



w w xi
w xi



set defaults chosen set r consequences corresponds
sets c x namely
ci c iff r ci

ci c iff r ci

xi x iff r w xi

xi x iff r w xi




fispace efficiency propositional knowledge representation formalisms

prove consequences set defaults extension
default theory qbf formula valid since defaults semi normal
prove
set consequences consistent
default applicable default whose precondition
consistent r
consistency r follows construction assigning ci true ci c etc
obtain model r
ci
prove default applicable ci c default c

ci
applicable vice versa ci c ci applicable moreover none


applicable xi x case w xi r thus
defaults w wx
wxi
w would follow w justification default similar statement holds
w wxi
xi x
wxi

v

w

ci


applicable default may last one
recall
w
f negated default applicable given evaluation ci
xi set clauses satisfiable amount say extension
last default applicable qbf formula valid
last default applicable model extension w
consequence last default w converse holds last default
applicable model default theory
qbf valid model given default theory

theorem inference skeptical default logic k p complete thus skeptical default logic thm p complete
proof since inference skeptical default logic p k p k p hardness
comes simple reduction circumscription indeed circumscription
formula equivalent conjunction extensions default theory ht di
etherington


xi

xi

circ q q implied ht di skeptical semantics since ht di depends q nucomp reduction since
inference circumscription k p complete see theorem follows skeptical
default logic k p hard
theorem inference credulous default logic k p complete thus
credulous default logic thm p complete



ficadoli donini liberatore schaerf

proof proof similar proof model checking skeptical default logic
indeed k p complete since p proved gottlob
k p thus prove hard class
prove qbf reduced verifying whether
formula implied extensions default theory inference credulous
default logic
namely formula xy f valid q derived extension
default theory hd w w defined follows set
clauses three literals alphabet f c set variables one one

w





ci

ci

ci c

q



f

ci

ci

ci



f





xi

xi x

xi

xi

xi







v



ci c ci

w





ci w

informally proof goes follows truth evaluation variables c
x set defaults justified consistent simple necessary
sufficient condition consequences set defaults extension
following evaluation formula






ci true

valid last default applicable thus extension contains w converse
holds formula valid evaluation variable w
extension
exists extension q holds exists
extension ci true f w holds
variables ci given value formula equivalent f
extension exists exists truth evaluation variables x
f valid
belief revision
many formalisms belief revision proposed literature focus
two widtio doubt throw sbr skeptical belief revision
let k set propositional formulae representing agents knowledge world
formula added k possible inconsistency k
arises first step define set sets formulae w k following
way
w k k k maximal consistent subset k containing


fispace efficiency propositional knowledge representation formalisms

set formulae k w k maximal choice formulae k
consistent therefore may retain incorporating definition
set leads two different revision operators sbr widtio
sbr skeptical belief revision fagin ullman vardi ginsberg revised

theory defined set theories k k k w k inference
revised theory defined inference theories
k sbr q iff

k w k k q

model semantics defined
sbr k iff

exists k w k k

widtio doubt throw winslett simpler somewhat
drastical called widtio retain formulae k
belong sets w k thus inference defined
k w idt io q iff



w k q

model semantics formalism defined
w idt io k

iff





w k

model compactness shown liberatore schaerf
recall
theorem liberatore schaerf theorem model checking widtio k p thus widtio model p
theorem liberatore schaerf theorem model checking skeptical belief revision k conp complete thus skeptical belief revision
model conp complete
theorem compactness quite simple provide proofs
theorem inference widtio k conp complete thus widtio
thm conp complete
proof membership class thm conp immediately follows definition fact
rewrite k propositional formula computing set w k
constructing intersection construction intersection size less equal
size k consequence preprocessing deciding whether formula q
follows k conp hardness follows obvious fact pl
reduced widtio pl thm conp complete see theorem
theorem inference skeptical belief revision k p complete
thus skeptical belief revision thm p complete


ficadoli donini liberatore schaerf

propositional
logic
widtio
skeptical
belief revision
circumscription
gcwa

skeptical
default reasoning
credulous
default reasoning
stable model
semantics

time complexity
p

p complete
liberatore schaerf
conp complete
liberatore schaerf
conp complete
cadoli
conp hard
p log n
eiter gottlob
p complete
liberatore schaerf
n

space efficiency
model p

model p
th
model conp complete
th
model conp complete
th
model p
th

p


model p


model p complete
th
n

table complexity model checking space efficiency model representations
proof membership follows complexity eiter gottlob
deciding whether k sbr q p complete hardness
follows easily theorem fact sbr k iff k sbr f orm
f orm formula represents model consequence model checking
reduced complement inference thus inference k p complete
discussion
tables summarize space efficiency pkr formalisms
proved dash denotes folklore
first notice space efficiency related time complexity
example compare detail widtio circumscription table follows
model checking harder widtio circumscription inference
complexity cases nevertheless since circumscription thm p complete
widtio thm conp complete thus thm p exists poly size reduction
widtio circumscription satisfying theorem preservation converse
hold since circumscription thm p complete widtio thm conp unless polynomial hierarchy collapse theorem preserving poly size reduction
former formalism latter hence circumscription compact formalism
widtio represent theorems analogous considerations done
intuitively due fact widtio model checking inference
require lot work revised knowledge base alonecomputing intersection



fispace efficiency propositional knowledge representation formalisms

propositional
logic
widtio
skeptical
belief revision
circumscription
gcwa
skeptical
default reasoning
credulous
default reasoning
stable model
semantics

time complexity
conp complete
cook
p complete
eiter gottlob nebel
p complete
eiter gottlob
p complete
eiter gottlob
p complete
eiter gottlob nebel
p complete
gottlob
p complete
gottlob
conp complete
marek truszczynski

space efficiency
thm conp complete
cadoli et al
thm conp complete
th
thm p complete
th
thm p complete
th
thm conp complete
th
thm p complete
th
thm p complete
th
thm conp complete
th

table complexity inference space efficiency theorem representations
elements w k done one left model checking inference
pl hence widtio space efficiency pl circumscription
figures contain information tables highlight existing reductions figure contains two diagrams left one showing existence
polynomial time reductions among formalisms right one showing existence polysize reductions arrow formalism another denotes former
reduced latter one use bidirectional arrow denote arrows directions
dashed box enclose formalisms reduced one another note
formalisms appropriate representing sets others perform
better sets formulae interesting relation exists skeptical default reasoning
circumscription model preserving poly size reduction circumscription skeptical default reasoning gogic et al theorem preserving poly size
reduction exists shown theorem

related work conclusions
idea comparing compactness kr formalisms representing information
novel ai well known first order circumscription represented secondorder logic schlipf kolaitis papadimitriou discuss several computational
aspects circumscription among many interesting reduction
restricted form first order circumscription first order logic proposed reduction
increase size original formula exponential factor left open
whether increase intrinsic different compactness
properties two formalisms exists space efficient reduction



ficadoli donini liberatore schaerf

skeptical

widtio

default

skeptical default





gcwa


sbr circumscription

sbr circumscription







pl stable model

pl widtio

time complexity

gcwa stable
model

b space efficiency

figure complexity model checking vs space efficiency model representation

widtio gcwa




skeptical
sbr circum default



pl

credulous
default



sbr circum



skeptical
default

ak


stable
model

credulous
default






stable
pl widtio gcwa model

time complexity

b space efficiency

figure complexity inference vs space efficiency theorem representation



fispace efficiency propositional knowledge representation formalisms

first order language used compactness existence reductions
reported schlipf
khardon roth kautz kearns selman propose modelbased representations kb propositional logic compare formula
representations although significant comparing representations within
pl refer formalism hence applicable comparison different pkr formalisms comment applies idea representing
kb efficient basis moses tennenholz since refers one
pkr formalism namely pl
active area studies connections non monotonic logics
particular several papers discussing existence translations polynomial time satisfy intuitive requirements modularity faithfulness
janhunen improving imielinski gottlob shows
default logic expressive among non monotonic logics examined since
circumscription autoepistemic logic modularly faithfully embedded default logic way around interest help
fully understand relation among many knowledge representation formalisms
directly related fact allow translations general
polynomial time papers consider translations use
polynomial time satisfy additional requirements
first compactness representations propositional language presented best knowledge kautz selman unless
collapse polynomial hierarchy size smallest representation
least horn upper bound propositional theory superpolynomial size
original theory presented different form comprehensive selman kautz technique used proof
used us researchers prove several relative complexity
propositional knowledge representation formalisms cadoli et al gogic
et al
recent cadoli et al b introduced complexity measure e
compilability shown measure inherently related
succinctness pkr formalisms analyzed pkr formalisms respect two succinctness measures succinctness representing sets succinctness representing
sets theorems
main advantage framework machinery necessary formal way
talking relative ability pkr formalisms compactly represent information
particular able formalize intuition specific pkr formalism provides
one compact ways represent theorems among pkr formalisms
specific class
opinion proposed framework improves state art two different
aspects
proofs presented previous papers compare pairs pkr formalisms example propositional circumscription propositional logic cadoli
et al allow precise classification level


ficadoli donini liberatore schaerf

compactness considered formalisms rephrasing adapting
framework allows us infer circumscription model conp complete
thm p complete consequence space efficient
widtio belief revision formalism representing sets sets theorems
proposed framework possible criteria adapting existent
polynomial reductions showing c hardness reductions model c thmc hardness c class polynomial hierarchy liberatore

acknowledgments
extended revised version authors appeared
proceedings fifth international conference principles knowledge representation reasoning kr cadoli donini liberatore schaerf partial
supported given asi italian space agency cnr national
council italy

references
ben eliyahu r dechter r default logic propositional logic constraints
proceedings ninth national conference artificial intelligence aaai
pp
ben eliyahu r dechter r propositional semantics disjunctive logic programs annals mathematics artificial intelligence
boppana r sipser complexity finite functions van leeuwen j
ed handbook theoretical computer science vol chap elsevier science
publishers north holland amsterdam
cadoli complexity model checking circumscriptive formulae information processing letters
cadoli donini f liberatore p schaerf comparing space efficiency
propositional knowledge representation formalisms proceedings fifth international conference principles knowledge representation reasoning
kr pp
cadoli donini f liberatore p schaerf b feasibility unfeasibility line processing proceedings fourth israeli symposium theory
computing systems istcs pp ieee computer society press
url ftp ftp dis uniroma pub ai papers cado etal ps gz
cadoli donini f liberatore p schaerf
preprocessing intractable
tech rep dis dipartimento di
url
informatica e sistemistica universita di roma la sapienza
http ftp dis uniroma pub ai papers cado etal revised ps gz


fispace efficiency propositional knowledge representation formalisms

cadoli donini f liberatore p schaerf size revised
knowledge base artificial intelligence
cadoli donini f schaerf compact representations propositional circumscription proceedings twelfth symposium theoretical aspects computer science stacs pp extended version rap
dis univ roma la sapienza july
cadoli donini f schaerf intractability non monotonic reasoning
real drawback artificial intelligence
cadoli donini f schaerf silvestri r compact representations
propositional circumscription theoretical computer science
cook complexity theorem proving procedures proceedings
third acm symposium theory computing stoc pp
eiter gottlob g complexity propositional knowledge base revision
updates counterfactuals artificial intelligence
eiter gottlob g propositional circumscription extended closed world
reasoning p complete theoretical computer science
etherington v reasoning incomplete information morgan kaufmann
los altos los altos ca
fagin r ullman j vardi semantics updates databases
proceedings second acm sigact sigmod symposium principles
database systems pods pp
garey r johnson computers intractability guide
theory np completeness w h freeman company san francisco ca
gelfond lifschitz v stable model semantics logic programming
proceedings fifth logic programming symposium pp mit
press
gelfond przymusinska h przymusinsky relationship
circumscription negation failure artificial intelligence
ginsberg l conterfactuals artificial intelligence
gogic g kautz h papadimitriou c selman b comparative linguistics knowledge representation proceedings fourteenth international
joint conference artificial intelligence ijcai pp
gottlob g complexity nonmonotonic logics journal logic
computation
gottlob g translating default logic standard autoepistemic logic journal
acm


ficadoli donini liberatore schaerf

imielinski translating defaults circumscription artificial intelligence
janhunen intertranslatability autoepistemic default priority
logics parallel circumscription proceedings sixth european workshop
logics artificial intelligence jelia lecture notes artificial
intelligence pp springer verlag
johnson catalog complexity classes van leeuwen j ed handbook
theoretical computer science vol chap elsevier science publishers northholland amsterdam
karp r lipton r j connections non uniform uniform
complexity classes proceedings twelfth acm symposium theory
computing stoc pp
kautz h kearns j selman b horn approximations empirical data
artificial intelligence
kautz h selman b hard simple default logics artificial
intelligence
kautz h selman b forming concepts fast inference proceedings
tenth national conference artificial intelligence aaai pp
khardon r roth reasoning artificial intelligence

khardon r roth defaults relevance model reasoning artificial
intelligence
kobler j watanabe collapse consequences np small circuits
siam journal computing
kolaitis p g papadimitriou c h computational aspects circumscription journal acm
liberatore p compact representation revision horn clauses yao x ed
proceedings eighth australian joint artificial intelligence conference ai
pp world scientific
liberatore p compilation intractable application artificial
intelligence
ph
thesis
dipartimento di informatica e sistemistica universita di roma la sapienza url
ftp ftp dis uniroma pub ai papers libe c ps gz
liberatore p schaerf complexity model checking belief revision update proceedings thirteenth national conference artificial
intelligence aaai pp



fispace efficiency propositional knowledge representation formalisms

liberatore p schaerf complexity model checking propositional
default logics proceedings thirteenth european conference artificial
intelligence ecai pp
liberatore p schaerf compactness belief revision update operators tech rep dipartimento di informatica e sistemistica universita di roma la
sapienza
marek w truszczynski autoepistemic logic journal acm

mccarthy j circumscription form non monotonic reasoning artificial
intelligence
minker j indefinite databases closed world assumption proceedings
sixth international conference automated deduction cade pp

moses tennenholtz line reasoning line efficiency knowledge
bases artificial intelligence
nebel b hard revise belief base dubois prade h eds
belief change handbook defeasible reasoning uncertainty management systems vol kluwer academic
reiter r logic default reasoning artificial intelligence
schlipf j decidability definability circumscription annals pure
applied logic
schlipf j survey complexity undecidability logic programming annals mathematics artificial intelligence
selman b kautz h knowledge compilation theory approximation
journal acm
stockmeyer l j polynomial time hierarchy theoretical computer science

winslett sometimes updates circumscription proceedings eleventh
international joint conference artificial intelligence ijcai pp
winslett updating logical databases cambridge university press
yap c k consequences non uniform conditions uniform classes theoretical computer science




