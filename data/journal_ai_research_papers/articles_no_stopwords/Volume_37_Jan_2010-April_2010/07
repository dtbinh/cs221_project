journal artificial intelligence

submitted published

multiattribute auctions generalized additive
independence
yagil engel

yagile ie technion ac il

technion israel institute technology
faculty industrial engineering management
technion city haifa israel

michael p wellman

wellman umich edu

university michigan
division computer science engineering
hayward st ann arbor mi usa

abstract
develop multiattribute auctions accommodate generalized additive independent
gai preferences propose iterative auction mechanism maintains prices
potentially overlapping gai clusters attributes thus decreases elicitation computational burden creates open competition among suppliers multidimensional
domain significantly auction guaranteed achieve surplus approximates optimal welfare small additive factor reasonable equilibrium strategies
traders main departure gai auctions previous literature accommodate non additive trader preferences hence allowing traders condition evaluation
specific attributes value attributes time gai structure
supports compact representation prices enabling tractable auction process perform simulation study demonstrating quantifying significant efficiency advantage
expressive preference modeling draw random gai structured utility functions
internal structures generate additive functions approximate gai
utility compare performance auctions two representations
allowing traders express existing dependencies among attributes improves
economic efficiency multiattribute auctions

introduction
multiattribute trading mechanisms extend traditional price mechanisms facilitating negotiation set predefined attributes representing non price aspects
deal rather negotiate fully specified good service multiattribute
mechanism delays commitment particular configurations extracts sufficient information traders preferences example companys procurement department may
run multiattribute auction select supplier hard drives supplier offers may
evaluated price offer features rpm
access time latency transfer rate addition suppliers may offer contracts
differing terms warranty delivery time service
order account traders preferences auction mechanism must extract evaluative information complex domain multidimensional configurations constructing
communicating complete preference specification pose severe burden even

c

ai access foundation rights reserved

fiengel wellman

moderate number attributes hence practical multiattribute auctions must accommodate partial specifications support compact expression preferences assuming
simplified form far popular multiattribute form adopt simplest
additive representation overall value linear combination values associated
attribute example several recent proposals iterative multiattribute auctions
beil wein bichler david azoulay schwartz kraus parkes
kalagnanam require additive preference representations
additivity reduces complexity preference specification exponentially compared general discrete case precludes expression interdependencies among
attributes practice however interdependencies among natural attributes quite
common example hard drive buyer may exhibit complementary preferences
access time since performance effect salient much data involved may view strong warranty good substitute high reliability ratings
similarly sellers production characteristics easily violate additivity example
decreasing access time technically difficult higher capacity drives cases
additive value function may able provide adequate approximation real
preferences
hand fully general intractable multiattribute preferences
typically exhibit structure goal therefore identify subtler yet
widely applicable structured representations exploit properties preferences
trading mechanisms
propose iterative auction mechanism flexible preference
structure inspired design iterative multiattribute procurement
auction additive preferences due parkes kalagnanam pk pk present
two auction designs first nld makes assumptions traders preferences
lets sellers bid full multidimensional attribute space nld maintains
exponential price structure suitable small domains auction ad
assumes additive buyer valuation seller cost functions collects sell bids per attribute
level single discount term price configuration sum prices
chosen attribute levels minus discount
auction propose supports compact price spaces albeit levels clusters attributes rather singletons employ preference decomposition
generalized additive independence gai model flexible enough accommodate interdependencies exact degree accuracy desired yet providing compact functional
form extent interdependence limited
first build direct formally justified link preference statements priced
outcomes generalized additive decomposition willingness pay wtp function
laying infrastructure employ representation tool development
multiattribute iterative auction mechanism allows traders express complex
preferences gai format study auctions allocational computational
practical properties next present simulation study proposed auction mechanism order practically evaluate economic computational properties gai
auctions simulate auctions random gai utility functions including
constrained preference structures often exhibited applications simulations
let us quantify benefits modeling preferences accurately gai comparison


figai auctions

additive approximation circumstances gai auction
achieves significantly higher surplus auction uses additive approximation
preferences
providing background multiattribute preferences multiattribute auctions
section develop multiattribute structures wtp functions supporting generalized additive decompositions section describe auction mechanism section
followed detailed example section study mechanisms allocational computational practical properties section present simulation framework
section discuss experimental section

background
section provide essential background multiattribute preferences sections
multiattribute auctions section
multiattribute preferences utility
let denote space possible outcomes preference relation weak total order
let set attributes describing attribute
domain ni ai capital letters denote subsets attributes small
latin letters without numeric subscripts denote specific attributes x x
variations indicate specific outcome instantiation subset
attributes denoted prime signs numerical superscript
particular projection instantiations represent
instantiation subsets x time use sequence instantiation symbols
x
preference relation outcomes usually represented numerically value
function v keeney raiffa
definition value function v value function representing
v v iff
clearly monotonic transformation v value function
many cases useful represent beyond simple preference order outcomes
notion strength preferences value function expresses strength preferences
called cardinal value function measurable value function well established cardinal
pairs outcomes
value framework posits existence preference order





statement means strength
preference greater equal krantz luce suppes
tversky establish set axioms ensuring existence utility function

representing
definition measurable value function measurable value function mvf
value function u
following holds

u u u u




fiengel wellman

hence order differences values u correspond exactly order
preference differences note mvf used value function representing
iff

auction theory mechanism design traders preferences usually represented
quasi linear value function v p u p p represents monetary
outcome cardinal value function u expresses strength preference
difference u u corresponds additional amount trader willing pay
relative example represents red mercedes sunroof
denotes blue subaru sunroof u u strength preference
mercedes configuration subaru mercedes costs p subaru p
according v p trader prefers mercedes deal iff u u p p
fact u easily shown mvf preference differences correspond differences willingness pay engel wellman reason
use mvf basis utility work assume traders willingness pay
wtp functions constitute mvf
reasoning full outcomes hard several ways notably difficult
humans compare outcomes many dimensions complex machines store
analyze preferences number outcomes exponential number
attributes therefore useful consider preferences joint product
considering rest attributes fixed predefined values
order often referred ceteris paribus preference orderone partial outcome
preferred another else equal
definition conditional preference partial outcome conditionally preferred



partial outcome given conditional preference order



given denoted hence abbreviated
general conditional preferences may depend particular assignment chosen
rest attributes precisely could still


case one needs maintain conditional preference
orders hence general scheme might yield computational
benefits fortunately many cases one identify subsets preference
reversal occur preference order invariant instantiation

definition preferential independence preferential independent pi


written pi iff

first order preferential independence fopi independence single attribute
rest natural assumption many domains example typical purchase decisions greater quantity higher quality desirable regardless assignments
attributes preferential independence higher order however requires invariance
tradeoffs among attributes respect variation others stringent independence condition mpi condition defined global set
attributes requires possible subsets pi
use term trader referring buyers sellers



figai auctions

definition mutual preferential independence attributes mutually preferential independent mpi iff p
preferential independence greatly simplify form v
theorem debreu preference order set attributes represented
additive value function
v

n


vi ai



iff mutually preferential independent
dyer sarin extend additivity theory mvf specify conditions
u well additive structure effectively additive forms
used trading mechanisms assume mpi full set attributes including money
attribute intuitively means willingness pay levels attribute attributes
cannot affected instantiation attributes sweeping condition rarely
holds practice von winterfeldt edwards therefore recent ai literature often
relaxes mpi assumption imposing additivity respect subsets attributes
may overlap
definition generalized additive
independence let ig necessarily

disjoint subsets gi ii elements ig called generalized
additive independent gai exist functions f fg
u

g


fr ir



r

related work generalized independence
definition gai somewhat nonstandard literature defines gai condition
expected utility function von neumann morgenstern well known
model particular choice lottery probability distribution outcomes expected utility function represents complete preference order lotteries
informally gai definition requires preferences lotteries depend
margins subsets ig form eq definition
obtained fishburn fishburn introduces functional decomposition
provides well defined form functional constituents f fg graphical
elicitation procedures gai decomposable utility developed within
expected utility framework bacchus grove boutilier bacchus brafman
gonzales perny braziunas boutilier addition generalized additive
utility employed hyafil boutilier aid direct revelation mechanisms robu somefun la poutre opponent modeling
bilateral multi item negotiation
bacchus grove fact coined term gai decomposition obtained collection local easier detect binary


fiengel wellman

independence conditions specifically rely form called conditional additive
independence informally corresponds gai decomposition limited two overlapping subsets x prove condition expressed
separation criterion graph whose nodes correspond means perfect
map pearl crucially utility function decomposes gai form lower dimensional functions defined maximal clique graph combined
fishburns work provides well defined functional form obtained
collection conditional additive independence conditions relies
form lotteries basis utility function independence conditions
expression willingness pay requires cardinal measure preferences yet
without uncertainty need expected utility representation therefore
invoke mvf framework section build additive decompositions mvf
developed dyer sarin develop multiattribute preference structures wtp
development enables us follow footsteps fishburn bacchus
grove well defined gai form mvf obtained
collection easy detect binary independence conditions
multiattribute auctions
distinguishing feature multiattribute auction goods defined
vectors attributes use denote set attributes describing domain
configuration particular attribute vector multiattribute auctions used
primarily procurement part strategic sourcing processes sandholm
procurement model single buyer utility function representing
willingness pay ub purchasing sellers sm utility
functions ci representing cost si supply configurations buyer
definition multiattribute allocation multiattribute allocation parkes kalagnanam
map

max



ub ci



allocation si solving map said maximize surplus procurement

map decomposed two subproblems first efficient configuration
trader trader whose efficient configuration yields highest
surplus call first part multiattribute matching engel wellman
lochner
definition multiattribute matching multiattribute matching mmp buyer b seller si
mmp b si arg max ub ci


call configuration selected mmp b si bilaterally efficient configuration
si


figai auctions

theoretical work surplus maximizing multiattribute auctions relates
way foundational work che ches model good service
characterized single quality attribute seller independent private
cost function quality buyer announces scoring rule sellers
price quality offers evaluated che suggests several types auctions including
second score auction seller bidding highest score wins must provide
combination price quality achieves second best score second score
mechanism bidding truthfully equilibrium dominant strategies particular che
shows sellers bid quality maximizes difference buyers
scoring rule cost function words respective mmp solution
branco generalizes ches model correlated costs
basic model later generalized several authors account explicitly multiple quality attributes usually restricting scoring rule additive
attributes bichler david et al vulkan jennings suggest modified version english auctions iterative auctions require bids increment
current bid price bidders required improve current score rather
price sandholm suri consider incorporation non price attributes
multi item combinatorial auctions
literature surveyed emphasizes auctions require buyer reveal
scoring function prior bidding order achieve economic efficiency scoring
function must convey buyers full utility function ub major obstacle
practical adaption mechanisms procurement auctions rarely isolated event
buyer supplier relationships usually evolve change time
suppliers may retain market power take advantage information revealed
buyer events sometimes conducted recurrent basis several events may
conducted related goods correlated valuations addition buyer may wish
keep secret way utility may discriminating particular suppliers
koppius
noted section parkes kalagnanam suggest alternative
employs prices space configurations drive traders efficient configurations auction nld maintains price sellers bid full
configuration round auction ad maintains price level ai prices
initially set high round sellers bid particular value attribute
auction selects set levels per attribute myopically buyer preferred round approximately maximize buyers utility respect
current prices addition auction maintains discount factor applied ensure
single seller eventually selected price configuration defined sum
prices chosen attribute levels minus discount round prices
particular levels particular attributes decremented constant according set
price change rules ensuring auction ultimately converges efficient solution
auctions shown obtain optimal surplus proportional error
sellers bid myopically rather strategically define concept formally section myopic behavior shown ex post nash equilibrium auction nld
fully expressive tractable number attributes large auction ad
computationally efficient expressiveness limited additive preferences see


fiengel wellman

discussion following theorem traders preferences additive welfare
achieved auction necessarily optimal solve map optimally
respect inaccurate utility functions moreover clear lack
expressiveness may affect incentives traders act strategically
theoretically one could use well known vickrey clake grove vcg mechanism parkes kalagnanam define sell side vcg mechanism traders submit
full utility cost functions map solved auction engine winning
seller pays according vcg price definition pricing provided section
auction traders allowed use compact preference structure including gai however scheme suffers disadvantages proposals
require full revelation utility
summarize previously suggested surplus maximizing multiattribute procurement
auction time expressive accommodates interdependencies attributes
tractable computations depend fully exponential domain preserving
buyers private information meaning minimally require buyer
reveal full utility function extracting bids sellers proposed mechanism theoretically simulations possesses attractive properties
criteria

detection gai structure measurable value functions
section provide basis application gai decomposition procurement
section gai obtained collection local weaker
conditions invariance willingness pay section use
example demonstrate process used procurement
difference independence gai
dyer sarin introduce measurable value analog additive independence
called difference independence first step introduce conditional generalization
definition
definition conditional difference independence let x x
define z x x conditionally difference independent denoted
cdi x z z x x x
x z x z
x z x z



hold
symbol
indicates
definition mvfs cdi condition expressed equivalently
terms measurable value
u x z u x z u x z u x z
condition states value willingness pay change assignment
x depend current assignment fixed value z
cdi condition leads convenient decomposition mvf


figai auctions

lemma let u mvf representing preference differences x z specified definition cdi x iff
u u x z u x z u x z
arbitrary instantiations x
single cdi condition therefore replace n ary function u x z
two lower dimensional functions u x z u x z reasonable assume
one apply cdi conditions decompose resulting functions
order take full advantage existing cdi conditions introduce notion
dependency graph simplification concept perfect map mentioned
section
definition dependency graph let denote set r binary relation
graph g e dependency graph r holds
r iff
e
hence dependency graph expresses r separation criterion two subsets
direct connection iff r dependency graph cdi constructed
simply removing edge cdi cdi
holds iff cdi holds use term cdi map
dependency graph induced cdi relation
next theorem links cdi condition cdi map gai decomposition
fact establishes functional constituents gai decomposition
mvf functional constituents gai decomposition expected
utility model defined fishburn adopt following conventional notation
let n predefined vector called reference outcome
function u stands projection u rest attributes
fixed reference levels
theorem cdi gai theorem let g e cdi map ig
set overlapping maximal cliques g
u

g


fr ir



r


f u
r g

fr u ir

r



j

j


ij r

u

j


iis ir



small example table exhibits utility function u x x x three
attributes boolean domain xi let x x denote assignments respectively xi first observe cdi x x holds
note x x correspond z definition



fiengel wellman

x









x









x









u x x x









u x x x









u x x x









u x x x









u









u









table utility function three attributes decomposable via gai sum two
functions two attributes u depends x x u depends
x x

utility difference values x given x x x explicitly
u x x x u x x x u x x x u x x x
similarly difference x given x x x
though x x cdi see depend x example
differences mentioned x given x x respectively hence
difference x given fixed x depends value x cdi map example
therefore includes edge x x edge x x maximal cliques graph
x x x x
obtain numeric decomposition first define x x x reference values
next get u u u x x x u u u
u x x x u x x x functions involved given table note
fifth sixth columns obtained appropriate values fourth column
example u x x x line x x x value u x x x line
x x x easy verify indeed u x z u u
cdi gai theorem provides operational form gai establishing gai
decomposition obtained collection simple cdi conditions assumption detection cdi conditions performed incrementally mvf
decomposed reasonable dimension cdi conditions turn
invariance preference differences relatively intuitive detect particularly
true differences carry direct interpretation case willingness pay
check invariance monetary amount buyer willing pay get one outcome

gai decomposition depicted graphically clique graph cdi
map graph whose nodes correspond maximal cliques cdi map
purposes convenient use particular clique graph called tree decomposition
junction tree introduce well known concept discuss implications gai
representation
definition tree decomposition tree decomposition graph g n e
pair e acyclic graph ii collection


figai auctions

term
map
mmp
mvf
pi
fopi
mpi
gai
cdi
cdi map
gai tree

meaning
multiattribute allocation
multiattribute matching
measurable value function
preferential independence
first order preferential independence
mutual preferential independence
generalized additive independence
conditional difference independence
graph whose separation criterion cdi
tree decomposition cdi map

reference
parkes kalagnanam
engel et al
dyer sarin
keeney raiffa
keeney raiffa
bacchus grove
cf bacchus grove
cf gonzales perny

table acronym terms references related literature empty references indicate
terms introduced work terms arranged according topics multiattribute economic ii independence relations iii graphical concepts

subsets n corresponding node ii ii n ii edge
n n e exists ii n n ii iii running intersection
j k j path k ii ik ij
graph tree decomposed typically one way example
single node width tree decomposition maxii ii
treewidth graph minimum width among possible tree decompositions
easy maximal clique g contained within therefore theorem utility function decomposes additively subsets ii
e tree decomposition cdi map notion gai tree
adapted work gonzales perny introduce gai graphical
expected utility framework
definition gai tree gai tree u tree decomposition cdi map
u
therefore refer elements ig gai decomposition set
tree decomposition next subsection provides qualitative example cdi concept
dependency graph corresponding gai tree
section lay foundations gai decomposition
multiattribute trading mechanisms generalize additive mvf theory justify
application methods developed expected utility framework bacchus
grove boutilier et al gonzales perny braziunas boutilier
representation monetary value certainty table summarizes acronym
terminology introduced point
employing gai procurement
section demonstrate process obtaining gai decomposition
collection cdi conditions addition example used motivate


fiengel wellman

comparison work parkes kalagnanam consider procurement
department wishes purchase hard drives hd desktops large
number employees buyer cares several characteristics attributes hard
drives particular terms procurement contract attribute listed
designated attribute name first letter domain cases e g attribute
use arbitrary symbols represent domain elements abstracting meaningful
interpretation assumed context
rpm r rpm
transfer rate mbs
v gb
supplier ranking
quality rating q hd brand
delivery time days
warranty w years
insurance case deal signed implemented
payment timeline p days
compatibility c existing hardware software
consider example pair attributes quality warranty value warranty different different values quality higher quality known
low lower quality known high two attributes therefore depend furthermore might expect complements quality
warranty larger hard drives prone failures making quality warranty valuable similarly interdependence supplier ranking
contract insurance buy supplier ranking warranty supplier provides reasonable dependencies among delivery insurance payment timeline
e g later delivery requires better insurance later payment reduces need insurance
rpm transfer rate preferences compatibility may
depend attribute corresponding cdi map depicted figure
described section utility function decomposes elements tree
decomposition cdi map tree decomposition depicted figure b
example set elements tree decomposition correspond exactly maximal
cliques cdi map general tree decomposition might include supersets
maximal cliques decomposition obviously maintained supersets
well
non additive traders required deal additive price space auction
ad parkes kalagnanam face exposure somewhat analogous traders
combinatorial preferences participate simultaneous auctions wellman osepayshvili mackie mason reeves essentially manifest


figai auctions



b

figure hd procurement cdi map b gai tree
two ways one type exposure occurs one auction round another
following two attribute example sellers conditional preference order attribute
may optimized assignment given attribute b b
assignment b changes may become arbitrarily suboptimal therefore bidding
b may poor allocation seller outbid b thus must resort
another assignment left winning second exposure occurs single round
auction trader bids multiple configurations example suppose configurations b b optimal current prices bids collected
independently attribute trader bidding may end configuration
b may arbitrarily suboptimal
prevent exposure sellers part taking simple measures auction
design first bids collected anew round independently previous rounds hence
first avoided sellers likewise avoid second limiting
bid one configuration per round
buyers side solution work require buyer bid
full set optimal configurations round order ensure auctions convergence becomes clearer section prevent buyer exposure auction design
structures prices according buyers preferences traders bid clusters
interdependent attributes terms example b interdependent
meaning cdi b hold able bid cluster ab b
turn depends c need another cluster bc still simpler general pricing
structure solicits bids cluster abc generally reasonable cdi
conditions correct buyer obtain corresponding gai tree decomposition solicit bids clusters attributes corresponding gai elements
section describe auction design detail along example section
section prove auction terminates approximately optimal solution
map

gai auctions
introducing auction design reiterate model notation provide
definition facilitates auction presentation



fiengel wellman

notations definitions
procurement setting single buyer wishes procure single good configuration one candidate sellers sm buyer private
valuation function ub similarly seller si private cost function ci
ub ci mvfs utility differences express differences willingnessto pay explained section assume buyers preferences reflected
gai structure ig call assignment gai element ir sub configuration
use r denote sub configuration formed projecting configuration element ir
definition consistent cover collection sub configurations g
r g r instantiation ir consistent cover
r r g attribute aj ir ir r r agree assignment
aj
words consistent cover collection sub configurations
compose valid configuration collection g consistent cover
equivalently considered configuration denote g example
consider good three attributes b c attributes domain two possible
assignments e g domain let gai structure b
b c sub configurations assignments form b b b c
set sub configurations b b c consistent cover corresponding configuration
b c contrast set b b c inconsistent
gai auction
define iterative descending price multiattribute auction maintains gai pricing structure round price pt corresponding subconfiguration gai element price pt configuration round
defined terms sub configuration prices global discount term


p

g


pt r



r

importantly elements r may refer overlapping attributes bidders submit subbids sub configurations global discount sub bids submitted
round expire next round sub bid round configuration r
automatically assigned price pt r set full bids seller contains consistent
covers generated sellers current set sub bids existence
full bid configuration represents sellers willingness accept price pt
supplying
start auction buyer reports auction sellers complete
valuation function ub gai expressed
decomposed form

local functions fb fb g ub
r fb r r initial prices subconfigurations set level buyers valuations p r fb r r
r discount initialized zero auction dynamics descending
discount term could replaced uniform price reduction across sub configurations



figai auctions

clock auction round bids collected current prices prices
reduced according price rules seller considered active round set subbids submitted contains least one full bid round sellers
active round allowed participate auction terminates
single seller active denote set sub bids submitted si bit
corresponding set full bids
bit g g bit
example section seller could submit sub bids set sub configurations
b b c combines full bid b c
auction proceeds two phases first phase round auction
computes set buyer preferred sub configurations mt sub configurations
part configuration within profit maximizing buyer
current prices formally first define buyer profit configuration
bt ub pt
buyer preferred set sub configurations defined
mt r bt max
bt r g



section mt computed efficiently stress though mt
set sub configurations criterion selecting profit
full configurations profits individual sub configurations meaningless outside
context configurations
phase auction adjusts prices round reducing price every
sub configuration received bid buyers preferred set let
prespecified price
parameter specifically phase price change rule
mdecrement


applied r bi

pt r pt r
g



let denote set configurations consistent covers mt
g g mt
auction switches phase b active sellers least one full bid
buyers preferred set
bit bit
switch
let round switch becomes true point auction selects
buyer optimal full bid seller si
arg max bt
bit



drop superscript generic statements involving price profit functions understanding
usage respect currently applicable prices



fiengel wellman

phase b si may bid sub configuration prices fixed pt
phase adjustment increased every round
increase decreases current price configurations auction
terminates one seller exactly one designate si active allocation
determined according four distinct cases
sellers drop phase e rule switch holds auction
terminates allocation
active sellers drop round phase b sellers
dropped last round auction selects seller si ub pt
maximal designates seller winner si single winner
appropriate case applied
auction terminates phase b final price buyers valuation
pt ub still possible exactly one seller winning
seller whose cost buyers valuation case trade positive
surplus possible therefore auction offers winner si opportunity
supply price ub
auction terminates phase b final price pt ub
ideal situation auction allocates chosen configuration seller
resulting price
collect reported valuation ub buyer
set high initial prices p r sub configuration r set
switch least one active seller
collect sub bids sellers
compute mt
apply price change
end
compute
one active seller
increase
collect bids sellers
end
implement allocation payment winning seller
gai multiattribute auction
overall auction described high level pseudocode role
phase guide traders efficient configurations mmp solutions
reducing prices configurations chosen least one seller preferred
buyer price reduction makes configurations slightly less attractive seller
slightly attractive buyer phase b one dimensional competition
profit remaining seller candidates provide buyer next section
formalize notions prove phase indeed converges phase b


figai auctions


fb
f
f

b




b





b




b




b c




b c




b c




b c




table gai utility functions example domain fb represents buyers valuation
f f costs sellers

selects seller whose efficient configuration yields approximately highest surplus
section discuss computational tasks associated auction

gai auction example
illustrate auction simple three attribute scenario employing two element
gai structure b b c table shows gai utilities buyer
two sellers efficient allocation b c buyers valuation
cost configuration boldface table
hence surplus maximal surplus second best seller achieved
b c b c b c set initial prices initial prices
meaning price reduction sub configurations g
sake example assume seller bids round configuration maximizes profit price minus cost respect prices current
round next section provide formal definitions prove incentive properties
strategy
table shows progress phase initially configuration price
sellers bid lowest cost configurationa b c profit
realized sub bids b b c contains sub configurations
b b c highest value configuration b c yields buyer profit
next section lemma maximum change throughout
phase price therefore decreased b b c price change profit
b c higher profit b c bids b
b c round prices go reducing profit b c therefore
round prefers b c profit note point configuration b c
yields profit buyer within maximal buyers profit
hence b c marked
next price change configurations b c b c become optimal
profit sub bids b b c b c capture two configurations
stay optimal another round profit round profit configuration
b c within maximizing buyers profit therefore
sub configuration b added point full bid fact two full
bids b c b c longer changes bids price
optimal configurations decrease seller however sticks b c



fiengel wellman




b


























b
























b

















b



















b c



















b c



















b c


b c
































table auction progression phase sell bids designation mt
shown price sub configuration

first four rounds switching b c round takes four rounds mt
converge b b c
round auction sets b c yields buyer profit b c
b c second phase starts point sellers compete
amount surplus transfer buyer whose profit consequently becomes positive
next round increased subsequent round note
p b c c b c therefore profit point
round meaning p b c causes drop
profit becomes negative ends auction sets final allocation b c
pt b c leaves buyer profit
profit

analysis
analyze economic properties auction section address practical
computational issues section
economic properties
adopt following assumptions discussion
optimal seller configuration pair provides non negative surplus
ub real utility function buyer


figai auctions

optimal solution map provides negative surplus sellers bid
cost auction terminates phase trade occurs auction
trivially efficient therefore assumption cause loss generality
interpreted follows given non truthful buyer report efficiency apply
face value buyers report rather true utility
properties buyers profit function
g define partial profit set sub configurations
corresponding

b
fb r r p r
r

functions f come gai breakdown ub
lemma complement
b b b
proof definition b get


b
fb r r p r
fb r r p r b b
r

r

round example previous section sub configuration b placed
configuration b c within maximal buyer profit actually
point b c added b c whose buyer profit
within maximum b c later selected si could lead
additional efficiency loss beyond following lemma bounds potential loss
lemma let set configurations within maximizing profit trader
buyer seller given prices let r r g consistent
cover within g maximizing profit prices
particular includes exactly optimal configurations consistent cover
exactly optimal well proof appendix b relies definition gai
decomposition tree decomposition uses partial profit function defined
along lemma
bound tight gai tree nontrivial domain
construct example set exists consistent cover whose utility
exactly g maximal
get following corollary
corollary
bt max
bt g





fiengel wellman

proof apply lemma bt define set configurations within max bt
mt definition serves lemma exactly set consistent
covers hence must within g optimum max bt
noted example maximal profit buyer
change phase
lemma max bt max b round phase
proof assume exists bt bt necessarily pt
pt price change rule meaning w g

sub configurations mt w
g case definition
bt max bt


therefore
bt

w
g

max bt

g
g

true whose profit improves therefore max bt change
phase hence equals value round
straightforward bidding sellers
turn attention sellers behavior first define profit function
seller si pt ci
definition straightforward bidder seller called straightforward bidder sb
round bids bit follows max bit otherwise
select bti arg max set
bit r bti r g
intuitively sb sellers follow myopic best response strategy optimizing profit
respect current prices termed straightforward milgrom
sense agents bid myopically rather strategically anticipating subsequent
price responses
sb sellers choose optimal configuration bid none proved
affected choice important note sb sellers optimal
full configuration bti rather optimize gai element separately configuration bti
translated set sub configurations bit order calculate bti seller si needs
optimum current profit function section optimization
tractable assumption ui compact gai structure
following immediate corollary definition sb
corollary sb seller si
bit max






figai auctions

general sellers preference structure may coincide auctions price structure nevertheless corollary holds definition sb bit defined section
contains single configuration submitted bid bti alternatively definition
sb modified sellers gai preferences consistent auctions price
structure bid multiple optimal configurations exist sellers bid multiple
configurations speed convergence case bti denotes set submitted
configurations bit denotes respective collection sub configurations bit set
consistent covers bit lemma entails corollary still holds
however simplicity analysis retain definition
efficiency given sb
lemma states price system price change rules phase leads
buyer sellers mutually efficient configuration formally
interested maximizing function represents surplus ub ci
prices pt
bt
lemma sb seller si g efficient
max g


proof configuration chosen maximize buyers profit bit end
phase bit configuration available bit hence one
must chosen maximize buyers utility bit get
corollary

corollary get
bt bt g
bit add two inequalities get g
desired
phase bs simple role single dimensional bidding competition
discount next assert overall efficient sb turn section proves approximately ex post equilibrium strategy two phases
theorem given truthful buyer sb sellers surplus final allocation
within g maximal surplus
proof sketch first establish auction must reach phase b
round phase price least one sub configuration reduced
whereas lemma max bt change latter enforces lower bound
far prices reduced within phase hence phase must terminate
initial prices buyers valuation seller whose surplus mmp solution
positive cannot drop phase assumption way


fiengel wellman

phase terminate reaching condition switch next
two sellers surplus first drop auction cannot significantly higher
one stayed longer ensures winning seller efficient
one one whose mmp surplus almost maximal lemma auction must
obtain almost surplus full proof given appendix b
bound guaranteed theorem worst case bound shown experimentally following sections auction typically achieves efficiency closer optimum
example section difference efficiencies two sellers lower
potential efficiency loss g however instance still guaranteed wins efficient allocation b c provides
surplus reason two configurations surplus
within g solution mmp b hence lemma one must chosen configurations provide surplus efficient
configuration sufficient order win phase b
bound theorem improved cdi map contains disconnected
components example fully additive decomposition assumed previous
literature exist cdi map contains disconnected component attribute
take advantage disconnectedness create separate tree decomposition
disconnected components definition adapted apportion
proportionally across disconnected trees formally redefine mt follows
definition buyers preferred set let g comprised trees g gh let
j denote projection configuration tree gj gj number gai
elements gj similarly j denotes projection gj define


r gj
mtj r bt j max




g
j
j
b
g
j j
buyers preferred set given mt

h


j mj

let ej gj denote number edges gj define connectivity parameter
e maxj h ej turns e replace g approximation
first step replace corollary tighter bound optimality configurations

corollary
bt max
bt e



proof apply lemma gj gj g instead hence consistent cover
mtj within gj g gj maxj j bt j lemma get consistent

cover mt meaning configuration within hr gj g gj max bt

e maxj h gj bounded g hr gj e e
obtain tighter efficiency
theorem given truthful buyer sb sellers surplus final allocation
within e maximal surplus


figai auctions

fully additive case loss efficiency reduces extreme
cdi map connected e g reducing theorem theorem
assume preference structure buyer meaning cdi map fully
connected e efficiency loss proportional
sellers incentives use sb
following parkes kalagnanam relate auction vickrey clarkegroves vcg mechanism establish incentive properties sellers one sided
multiattribute vcg auction buyer reports valuation ub sellers report cost functions
ci buyer pays sell side vcg payment winning seller
definition sell side vcg payment let optimal solution map
let best solution map participate sell side vcg
payment
vcg ub ci ub max ub ci
well known truthful bidding dominant strategy sellers one sided
vcg auction parkes kalagnanam showed maximal regret buyers
bidding truthfully mechanism ub ci ub ci
marginal product efficient seller
typical iterative auctions vcg outcome exactly achieved
deviation bounded minimal price change
definition vcg payment sell side vcg payment map payment p

vcg ub ci p vcg ub ci
payment guaranteed vcg sellers affect payment within
range hence gain falsely reporting cost bounded
lemma sellers sb gai auction payment sell side e vcg
example section profit winner less vcg
profit proof appendix b covers case allocation options
section force payment equal ub
ready final section showing approximately
efficient outcome guaranteed theorem achieved approximate ex post nash
equilibrium
theorem sb e ex post nash equilibrium sellers gai auction
sellers cannot gain e deviating sb given
sellers follow sb
order exploit even bounded potential gain sellers need know given
configuration whether explicitly selected approximately optimal
buyer combination sub configurations approximately optimal configurations seems highly unlikely sellers information likely
lose bid myopically optimal configurations


fiengel wellman

computation complexity
advantage gai auctions additive auction ad parkes kalagnanam
economic efficiency accommodating expressive bidding efficiency
respect accurate utility function contrast key advantage respect auction employ preference structures auction nld parkes
kalagnanam computational efficiency property section
computations exponential size largest gai element rather
particular size price space auction maintains equal
total number sub configurations number exponential treewidth plus one
original cdi map ensure computational tractability one define priori
constant c force treewidth cdi map bounded c ignoring
interdependencies still much better additive representation
ignores interdependencies constant represents tradeoff economic
computational efficiency larger c supports accurate preference representation
gai elements may larger


purpose computational analysis let gr aj ir aj collection sub configurations since grows monotonically nave generation
best outcomes sequentially might end enumerating significant portions
domain fortunately enumeration avoided complexity computation well optimization performed seller grows
computation depends size exponential domain
theorem computation mt performed time g moreover
total time spent task throughout auction g
obtain bound number rounds phase comparing sum
prices sub configurations rounds
theorem number rounds required auction bounded

g

p r

r



proof let
r p r sum prices sub configurations round

assume ub must exist
bi chose initial prices b
contradicts lemma
hence sum prices cannot reduced
therefore


r p r throughout auction round least one
price reduced g leads required
bound rather looseits purpose ensure number rounds
depend size non factored domain depends number subconfigurations dividing initial price minimum price decrement usually phase converges much faster let initial negative profit chosen
auctioneer max b worst case phase needs run
use term treewidth subject optimal tree decomposition



figai auctions

b happens example r pt r fb r r
g
implies closer initial prices reflect buyers valuation faster phase
converges one extreme choice set p r fb r r
g would make phase
redundant cost full initial revelation buyers valuation section option extreme p p auctioneer
range choices determine right tradeoff convergence time information revelation example section choice lower initial price
domain provides speedup revealing harmless amount information
simulations set constant initial prices within gai element
furthermore many domains natural dependencies mutual traders
case price structure used auction may accommodate sellers preference
structures sellers bid multiple equally profitable configurations round
thus speeding convergence discussed section
consider computational complexity sb strategy sellers
theorem let b denote treewidth cdi map ub let denote
treewidth cdi map ui optimization ui p takes time exponential
b worst case
proof consider graph g includes union edges two cdi maps
treewidth g b worst case definition price function p
decomposed according ub hence ui p decomposes according additive gai
factors ui ub therefore pair attributes x mutual
factor ui p edge x g well known complexity
combinatorial optimization exponential treewidth graphfor example
cost networks dechter
potential concern may communication cost associated descending
auction style sellers need send bids round
simple change made avoid much redundant communication auction
retain sub bids previous rounds sub configurations whose price change
combinations sub bids different rounds yield suboptimal configurations
sub bid tagged number latest round submitted
consistent combinations round considered full bids
implementation sellers need resubmit bid price least one
sub configurations changed
summarize gai auctions shown perform well criteria mentioned section achieve approximate efficiency given reasonable incentive properties
expressive enough accommodate preferences interdependencies among attributes
tractable maximal size gai clusters reasonably bounded
require full revelation utility performance last criterion quantified
experimental part

experimental design
main idea behind gai auctions improve efficiency auctions assume
additivity preferences additive however given fixed theoretical


fiengel wellman

efficiency guarantee gai auctions depends e connectivity parameter gai
tree suggests tradeoff complex accurately represent true utility
increase approximation error due higher connectivity obvious question whether
accurate preference modeling indeed efficient particular whether
gai auctions efficient additive auctions given preferences
additive address question experimentally assume buyers preferences
gai structure compare performance gai auctions model
structure performance auctions restricted additive representation
latter use instance gai auction pricing structure additive
name additive approximating auction ap auction similar principle
auction ad parkes kalagnanam best knowledge ad
proposed instance surplus maximizing multiattribute auction additive
preferences besides require full revelation buyers utility
experiments sellers employ sb strategies
section describe random gai utilities drawn section
extend scheme generate gai utility functions exhibit additional structure
section obtain additive approximation random functions
allowing us simulate auction ad simulations presented section
gai random utility
performed simulations randomly generated utility functions representing
buyers value function sellers cost functions random utility generation procedure follows utility elicitation procedure suggested braziunas boutilier
uses two step process first create local utility functions gai element
normalized range next draw scaling constants represent relative
weight local function overall utility
formally let ur ir u ir denote local utility function ir normalized
next let fr ir defined according gai functional form eq
u ir replaced ur ir hence
f u
r g

fr ur ir

r

j
j


ij r

ur

j


iis ir





braziunas boutilier gai structured utility exist scaling
constants r
g

r fr ir

u
r

auctions employ additive price space drives bidders efficient configurations ad
efficient buyer sellers additive preferences gai auctions efficient
given additive buyers preferences make assumption regarding sellers preference
structural differences ad employs complicated price change rules order allow
sellers ignore attributes ii discounts used stage ad auction
selects provisional winner iteration



figai auctions

refer functions ur ir subutility functions note values form
ur iir iir drawn used ur ir ur iir representation
lets us draw random gai functions given gai tree structure following
steps
draw random subutility functions ur ir r g range
compute fr r g
draw random scaling constants r


g

r r

compute u

scaling constants represent importance decision maker accords corresponding
gai elements overall decision procedure utilities normalized
finally particular trader draw mean variance scale u
range resulting utility functions ub ui
structured subutility
subutility function model may represent valuation subspace
practice may often additional structure within gai element introduce
two structures consider typical generally applicable use
simulations along completely random local functions
argue section typical purchase sale decisions exhibit fopi first
order preferential independence meaning single attributes natural
ordering quality example hard drive buyers prefer memory higher
rpm longer warranty implement fopi let integer values
attribute represent quality example belongs gai element ir b
make sure ur ai b ur aj b ai aj ai aj b b
must course hold attribute fopi gai element ir
includes enforce condition values gai element
drawn special purpose sorting procedure applied steps
fopi condition makes random utility function realistic particular
appropriate target application attributes exhibit fopi dependencies
among different attributes likely framed complements substitutes
concepts known primarily context combinatorial preferences preferences
combinations distinct items multiattribute framework two attributes
complements improvement value worth sum
improvement separately two attributes substitutes way
around concepts meaningful respect attributes fopi
otherwise notion improvement conditional value attributes
definition complements substitutes let u measurable value function let b z b assume b fopi
rest attributes attributes b called complements ai ai
ai ai bj bj bj bj b z z
u ai bj z u ai bj z u ai bj z u ai bj z u ai bj z u ai bj z


fiengel wellman

attributes b substitutes inequality sign reversed
relationship attributes ruled additive utility function
admitted weaker independence condition called mutual utility independence mui
keeney raiffa implies utility function multiplicative
additive multiplicative utility function represented n singledimensional functions n scaling constants single parameter k mui factor
controls strength complementarity k substitutivity k
pairs attributes within gai element k set attributes additive
experimental purposes assume attribute cluster gai element exhibits mui
value k
elicitation procedure one would normally extract mui scaling constants
user compute k keeney raiffa purposes first determine
k according relationship wish impose attributes draw mui
scaling constants consistent value explicitly draw random
scaling constants iteratively modify constants set constants
found consistent k next step compute ur ir according mui
formula keeney raiffa ur ir r range hence
point proceed steps note procedure several
distinct sets scaling constants used g constants used step scale different
gai elements whereas mui constants per gai element scale attributes within
element
additive approximation
another issue experiment design additive auction ap behaves face
non additive buyer preferences specifically would select approximately buyerpreferred sets configurations took come additive
function approximates buyers true utility function use throughout
auction aware better strategy rule possibility one
exists

natural generate linear approximation arbitrary function
ub use linear regression define indicator variable xij every aij ai
consider value assignment data point example assignment
j amj creates following data point





cij xij u j amj

aij ai

value variable xij j j otherwise coefficients cij
regression represent values used aij
includes many attributes possible consider points
assumption compact gai representation exists sensible
expect could use fewer data points regression indeed found small
formalize notion appendix



figai auctions

random sample joint utility yields approximation effective one
points precisely largest domain tested attributes domain
size found efficiency ap improve increasing number
sampled points beyond chart supporting claim appendix e
experiments use points instances
method comparison probably overestimates quality additive approximation general would true utility function explicitly generate
approximation extraction elicitation utility function usually
serious bottleneck multiattribute mechanism therefore major reason use
additive approximation reduce burden elicitation hence practice would
try obtain additive function directly rather obtain full utility approximate process somewhat unpredictable elicitation
queries may coherent willingness pay depends value b
willingness pay know b therefore consider
experimental generation method biased favor additive approximation

simulation
provide detailed simulation study section provides analyses economic efficiency section covers computational study regarding
revelation private information provided section
efficiency gai structure
measure efficiency terms percentage map solution surplus
achieved optimal seller configuration pair evaluate effect preference modeling efficiency vary structural parameters buyers gai preferences connectivity factor e size largest gai element performance depends
many additional factors size attribute domains number sellers amount
price decrement distribution utility functions drawn isolate
primary structural parameters first tested efficiency varies according
choices side factors several fixed gai structures fully random subutility
functions tests picked following parameter values rest
simulations valuations drawn uniform distribution buyer mean
set mean seller drawn uniformly variance set
traders use domain size attributes number
sellers explanation process leading choices provided
full report engel
following experiment used roughly fixed gai structure g elements
e gai structure tree forest meaning reduction
per sub configuration vary number attributes varying size
element figure shows efficiency obtained respect size largest
gai element expected size gai elements negligible effect
efficiency gai auctions dramatic effect efficiency ap
decomposition fact additive hence ap performs optimally performance
deteriorates increases


fiengel wellman



b

figure efficiency function size largest gai element given e
b number gai elements e given
performed test utility attributes fopi
fopi restriction additive approximation much efficient relative unconstrained random utility fopi applies strict subset attributes would
expect efficiency ap fall somewhere efficiency fopi
unrestricted case somewhat surprisingly imposing fopi renders gai auctions slightly
less efficient nevertheless additive approximation achieves lower efficiency compared
accurate preference modeling differences pass statistical significance
test p note performance gai auctions
improved smaller value g whereas hardly improves performance
ap statistically significant difference confidence level
already detected used hereafter
next experiment figure b measures efficiency function e given fixed
assume connected gai trees e number gai elements minus one
tested structures e varying elements size
structures single element gai auction similar nld parkes
kalagnanam auction assigns price every point joint
domain e hence efficiency gai close perfect structure
extreme compared additive representation indeed performance ap
particularly inferior efficient
gai elements efficiency gai auctions declines slow pace
theoretical potential error e mostly efficiency loss winning
seller lemma efficiency loss may occur sub configuration
belongs configuration yields lowest profit allowed buyer preferred
seta particularly rare case practice loss closer e much smaller
error
performance ap improves number elements grows maximal
average sizes fixed intuitively changing structure way takes closer
particular tree structure influential final structure used
reported maximum three children per node



figai auctions



b

figure efficiency function k complements b efficiency function
k substitutes
additive representation fopi see similar phenomenon however
difference gai fopi ap fopi even ten elements substantial
statistically significant
figures b present efficiency function mui factor k complements
substitutes respectively used fixed gai structure four elements largest
four attributes imposed k elements expected
stronger complementarity among attributes lower efficiency ap whereas
relationship affect efficiency gai auctions case substitutes
contrast additive approximation performs well efficiency starts deteriorate
extreme values k roughly say relationship among attributes
within gai element limited mild substitutions could good idea
use additive approximation unfortunately interpretation parameter k lacks
quantitative scaling clear intuition actual numbers mean beyond
qualitative classification mentioned
summarize part experimental gai auctions yield significant efficiency improvement comparison additive auction almost classes
evaluations though efficiency additive auction may come across relatively
high perhaps sufficient observation misleading several respects
large procurement events efficiency differences translate large amounts money
ii wider efficiency loss additive auction theoretical bound may
impact incentives sb may longer approximate ex post nash equilibrium
iii efficiency expected deteriorate larger larger gai elements
particular fopi hold many attributes iv argued section expect practical additive auctions perform worse ap tailored
approximation
computational analysis
computational tasks required auction simulations performed described appendix c suggested applied


fiengel wellman



b

figure number rounds function size largest gai element given
e b number gai elements e given
combinatorial optimization dechter nilsson therefore
computational runtime process round particular interest work instead
focus number rounds auction requires tested number rounds
required auctions gai ap fully random fopi preferences varying three
parameters size largest gai element e connectivity
complexity terms number rounds shown figure respect
figure b respect number elements observe fopi
gai auction takes much longer converge compared case random preferences
reason fopi sellers buyers preferences general seen
opposites price specific attribute buyer prefers higher quality
whereas sellers prefer lower quality given fixed values rest attributes
everyone agrees relative quality attribute values apparent difference
growth rate fopi case seems steeper curve somewhat misleading
shown gai random preferences already caught curve
see fopi case number rounds expected grows exponentially
size largest element however observed figure b number
grow quickly function number elements supporting theoretical arguments
section note variance chosen traders preferences fixed thus
small number elements variance wider resulting large number
rounds required gai fopi case
ap implication increasing respective increase number
attributes complexity ap shown grows slowly
increase fopi case ap takes average rounds
attributes rounds attributes numbers slightly higher
random preferences
high dimensional multiattribute auctions expect participation would typically automated software bidding agents wellman greenwald stone
circumstances auction taking thousands rounds cause
concern however reason rounds expensive might reconsider adopt



figai auctions

figure efficiency function number rounds
ing additive auctions sacrifice efficiency order decrease number rounds
alternatively could keep gai auctions increase final
experiment compares two alternatives vary level order view efficiency function number rounds figure gai structure used
experiment e
evident chart cases gai achieves better efficiency even fixed
number rounds exception budget rounds small
fopi holds case need pay rounds order get
higher efficiency
total computation time carried gai auction elements
rest parameters fixed around seconds
average intel dual core ghz cpu mb ram
information revelation
key difference mechanism proposed previous literature
extent buyer required reveal preference information gai auctions
buyer need reveal private preference information front
course price changes reveal buyers information another experimental
question therefore whether mechanism significantly reduces overall amount
information revealed buyer
pk study information revelation buyer seller additivity
assumption utility function additive amount information revealed
measured terms constraints linear weights sellers infer bounds
buyers set weights amount information hidden represented
fraction simplex satisfies constraints simplex analysis
possible gai utilities suggest alternative geared towards kind information
revealed gai auctions
gai auctions buyers private information partially revealed selection buyers preferred set mt auction need announce directly
general sellers infer sub configuration mt received bid
usually sellers observe bids yet price change



fiengel wellman

next round therefore measure exactly thatfor many sub configurations r
least one round r mt bit specifically define
sub configuration revealed within gai element measure fraction
sub configurations revealed end auction measurement overestimates information actually revealed sellers infer bounds relative
preferences precise values functions fb moreover assumes
seller observes bids meaning sellers share bid information
unrealistic event practice
criterion gai auctions reveal average buyers preferences preferences exhibit fopi subutilities completely
random seem systematically depend parameter tested
validates claim advantage gai auctions promise second score types
auctions

conclusions
propose novel exploitation preference structure multiattribute auctions rather
assuming full additivity structure model preferences generalized additive independence gai decomposition gai representation
constructed relatively simple statements willingness pay develop
iterative auction mechanism directly relying decomposition auction mechanism
generalizes preference modeling employed parkes kalagnanam
essence retaining information revelation properties allows range tradeoffs
accuracy preference representation computational complexity
auction well tradeoff buyer information revelation number
rounds required convergence
performed simulation study proposed multiattribute auctions compared
mechanism assumes additive preferences study validated usefulness
gai auctions preferences non additive gai allowed us quantify
advantages specific classes preferences general found design
yields significantly higher economic efficiency comparison additive auctions
gai subutilities exhibit internal structures fopi efficiency loss additive
approximation less severe cases benefit accurate gai model still
significant additive approximation may reasonable gai
structure fairly similar additive one auction must terminate within
small number rounds
tradeoff expressive compactness preference representation ubiquitous applications involving preferences one hand would ask users
little possible information users preference statements may accurate even meaningful cannot express important dependencies
could useful experimentally compare accuracy gai additive representations experimental methodologies used study particular generation
random structured utility functions finding additive approximation gai functions may therefore prove applicable broader class preference
tradeoff exists


figai auctions

acknowledgments
work supported part nsf grants iis iis
stiet program nsf igert grant yagil engel supported part
aly kaufman fellowship technion thank anonymous reviewers many
useful comments suggestions

appendix proofs section
lemma
let u mvf representing preference differences let x z
define partition cdi x z iff
u u x z u x z u x z
arbitrary instantiations x
proof let x arbitrary instantiations
u x z u x z u x z u x z u x z u x z u x z
second equality holds iff x cdi x z
theorem cdi gai theorem
let g e cdi map
ig set overlapping maximal cliques
u

g


fr ir



r


f u
r g

fr u ir



r




j

j

u

ij r

j


iis ir



proof actually prove somewhat stronger
claim let g cdi map utility function u let q c cw denote set
maximal cliques g
u

w

k
k


ik w

u

k


cis





let g e complete graph nodes g definition cdi
map edge x e e implies cdi x use induction series edge
removals starting graph g step remove edge e e get

graph gi last step e e g e e g prove claim


fiengel wellman

holds graph gi since clique g step q
claim trivially hold following process step provides intuition final
decomposition obtained pick pair nodes x cdi x use
notation lemma
u u x ax



u x ax u x ax u x ax
u ax u ay u ax ay
set maximal cliques g q ax ay equation shows
holds q
proving induction step assume holds step carry
step let x denote edge removed step let c cd wlog
indicate sets qi include x similar observe
u c u c x u c u c x c



similarly k wi ik wi
u

k




cis c u

k




cis c x u

k


cis c u



k


cis c x c



assumed hold step term includes c substituted
according holding set qi c
c x c
repeat operation c cd define resulting collection
qi qi c cd c x c cdx cdy
elements qi subsets elements qi maximal cliques gi
verify induction property
element qi clique gi difference gi
gi removed edge x set qi includes x
clique c qi maximal subset maximal clique
c gi c c c x ii x c c c
iii c c x longer connected c remains maximal cases
maximal clique gi c c qi c
c x c three cases element qi
proves induction step
last step decomposition holds set q q e e
set maximal cliques g hence claim proved
define f fg according claim get holds



figai auctions

appendix b proofs section
b proving lemma
lemma let set configurations within maximizing profit
trader given price vector let r r g
consistent cover within g maximizing profit prices
given suboptimal consistent cover suboptimal
member contradicting premise lemma traversing gai
tree depth first manner step flip sub configurations corresponding
elements subtree set sub configurations source configuration
parent subtree thus trimming subtree
another consistent cover sub optimal eventually obtain configuration
still suboptimal
purpose introduce following notions
operator turns set sub configurations consistent cover
configuration
g g
let consistent cover source element r configuration
originated meaning r r
operation trim replaces sub configurations given configuration
corresponding set sub configurations different configuration according
following rules let denote indices gai elements corresponding
subtree gai tree whose root gai element ii let denote consistent
cover operation trim defined elements
corresponding source formally exists
r r let parent ii arbitrary element
outside disconnected rest graph let source

trim r r
r r
replace r r corresponding sub configuration
resulting configuration elements corresponding
source parent ii
lemma b trim consistent cover
proof need pair sub configurations set r r
r r
consistent assign value attribute appear
corresponding gai elements
sub configurations r r internally consistent mutual
source sub configurations r r
internally consistent

sub configurations let r r
denote indices gai elements
ir ir ir subtree whose root ii whereas ir outside
subtree path must go ii parent due


fiengel wellman

running intersection property gai tree ir ir ii corresponding subconfigurations must consistent source hence r
r must consistent
lemma b let defined lemma let denote consistent cover
trim
proof let denote single source r r let
g lemma





define following cover
r r r r
consistent coveragain lemma b possible intersection
element element root parent
corresponding sub configurations must consistent following
argument consistent appear together consistent
source definition trim hence assign
values attributes ii consistent must
get

last equation follows fact sub configurations
contradicts optimality
proof lemma let consistent cover contradicting lemma meaning
max g first reorder gai elements g according
order corresponding backtracking depth first search starting
leftmost leaf next move siblings next parent general children
node ii visited next element visited ii perform series g
trim operations resulting series g must
step operation trim valid sub configurations corresponding
mutual source ii leaf hence elements
single source otherwise trimming subtrees children ii hence
definition trim source ii
consider resulting g assumed max g hence
applications lemma b g trim operations get g
max last element g elements mutual source
meaning g therefore got contradiction optimality



figai auctions

b proving theorem
order prove theorem need several additional claims
lemma b price least one sub configuration must reduced every round
phase
proof round phase exists active seller bit
however active round bit let bit r r mt
definition therefore must r mt
lemma b auction must reach phase b
proof lemma b prices must go every round phase lemma
ensures lower bound much prices reduced phase therefore
auction terminates phase must reach condition switch
set initial prices high max b max bt
phase lemma assumption efficient allocation provides
positive welfare bt si sb therefore leave
auction happen bt therefore si
drop phase phase continues long least one seller active
auction cannot terminate reaching condition switch
finally following lemma states two sellers potential surplus
first one drop auction cannot significantly higher potential surplus
one stayed longer
lemma b sellers si sj sb si active least long sj active
phase b
max j g


proof sb definition phase b sj drops jt j si
drop point jt j get
corollary
bt max bt jt j g


corollary jt j max jt therefore
bt max bt max jt g max j g






theorem given truthful buyer sb sellers surplus final allocation
within g maximal surplus
proof lemma b auction terminates allocation si lemma
theorem immediate case winning seller si efficient seller otherwise
efficient seller sj dropped si immediate
lemma b


fiengel wellman

b proving theorem
first adapt lemma lemma lemma b use e instead g
lemma b max bt change round phase
proof let g comprised trees g gh let j denote projection configuration
tree gj let gj denote number gai elements gj
assume exists j bt j bt j necessarily pt j

p j happen must case w gj sub configurations

j mtj w
g case definition mj

bt j max bt j gj
j j
g
therefore
bt j j j

w
gj
j
max bt j
j j
g
g

true j whose profit improves therefore maxj j bt j change
phase
max bt max




h


bt j

j

h

j

max bt j

j j

last equality holds optimal values disconnected components gai
tree independent max bt well change
phase
lemma b sb seller si e efficient
max e


proof identical proof lemma replacing g e corollary
instead corollary
lemma b sellers si sj sb si active least long sj active
phase b
max j e


proof identical proof lemma b corollary instead
corollary
theorem given truthful buyer sb sellers surplus final allocation
within e maximal surplus
proof proof identical proof theorem replacing lemmas b
lemmas b b respectively



figai auctions

b lemma theorem
lemma sellers sb gai auction payment sell side e vcg
proof trivially consider winning seller si case final price
buyers valuation payment ub exactly vcg payment therefore
assume final price buyers valuation payment
winning seller pt let sj second best seller sj drops si
discount hence
jt j max jt
b


corollary
ub pt max bt e


therefore b second inequality
pt ub max b e


ub max bt e max jt ub max j e b






bow sj survived auction discount
jt j
meaning
pt j cj j

b

corollary
ub pt ub j pt j e
therefore b second inequality
pt ub ub j pt j e
ub ub j cj j e ub max j e b


equations b b place payment pt within e si vcg
payment
theorem sb e ex post nash equilibrium sellers gai auction
sellers cannot gain e deviating sb given sellers
follow sb
let play arbitrary strategy sb sellers sn win
would clearly done worse sb therefore assume wins final price
p gains least e trade let n calculation
b assumed nothing winning traders strategy therefore applies well
p pt ub max e


b

next define following cost function c p e c
assume plays sb c


fiengel wellman

claim playing sb assuming cost c still winner profit wrt c
within e profit playing
proof clearly bids let p denote prices end phase
final discount
instance auction let b denote buyers profit let
p c
assume moment prices reach limit
p p e
inequality use pt ub bt b
pt p e ub ub max e e

b


max


bt

e
b

let denote configuration chosen seller si end phase
instance since instance get bt bt e
therefore modify b state
pt ci

b

b

meaning prices reached limit sellers dropped shows
wins instance well furthermore lowest possible price paid
p p e hence price least p e
determined
proof theorem lemma
p v cg c c cn e
truthful reporting dominant strategy sellers one sided vcg auctions therefore
v cg c c cn v cg c c cn
claim get
p p e v cg c c cn e
therefore playing could gained e worstcase payoff playing sb respect true cost c

appendix c proofs section
theorem computation mt performed time g moreover
total time spent task throughout auction g
proof simplicity notations assume single connected gai tree
extension multiple connected components immediate mjt computed
separately
functions ub pt gai form hence function bt ub pt
gai form noted boutilier et al functions


figai auctions

gai form optimized variable elimination schemes cost networks dechter
fact gai structure already tree case optimization linear
size domain however mt includes sub configurations
configurations within max b must maximum bt add
sub configurations mt best configuration already
maximal done following procedure adapted
work nilsson
g
define mt
mt
arg maxi bt
best configuration arg maxi g bt means configuration least one sub configuration mt
bt max bt sub configuration already mt
added mt otherwise mt ready
procedure performs g optimizations takes linear size domain amounts g time procedure done least one
sub configuration added mt mt ready therefore number times
procedure done per round bounded number sub configurations plus one
giving g bound moreover mt monotonically increasing auction
round start mt computed previous round throughout auction
application procedure yields sub configuration mt terminates
round total number times procedure performed throughout auction
bounded leading overall bound g

appendix relating mui condition complements
substitutes
definitions utility independence ui condition mui found elsewhere
keeney raiffa
definition mui factor set mui attributes solution
k

n

kki


keeney raiffa kr one mui factor addition
zero appendix b text ensures soundness following adaptation
mui representation theorem
theorem let set mui attributes
mui factor zero u

n

ki ui ai

theorem adapted book keeney raiffa theorem page



fiengel wellman

otherwise let k mui factor
n
kki ui ai
u

k



kr go point k define u ku strategically
equivalent function u turn multiplicative representation
done similar fashion k mui known exist
one elicitation query sufficient order determine whether form function
additive multiplicative
following relationship allow us interpret mui factor respect complements substitutes generalizes formalizes intuition given kr
case mui two attributes
theorem let set mui attributes mui factor k
k iff pairs attributes complements k iff pairs
attributes substitutes
proof proof work keeney raiffa theorem explained
assume u normalized u attribute let
know u utility independence form leads following
functional form exist functions f g
u f g u
instantiate form assignment get
u f g u f
hence f u g
u get

u u
u

g

development done kr

u u

u u



proof theorem kr define mui factor follows
k

g
u

denominator positive furthermore shown g
u u u u particular means b b
complements inequality holds holding fixed attributes b
similarly g b substitutes putting pieces together
get desired



figai auctions

figure efficiency ap function number sampling points used devise
additive approximation

appendix e optimal regression small sample
experiment supporting claim section larger set sampling
points one used linear regression utility function cannot improve
efficiency ap figure shows efficiency ap function number
sampling points used largest domain used experiments attributes
e similar shown distributions fopi
preferences chart experiments points x axis
largest number tests used

references
bacchus f grove graphical preference utility th
conference uncertainty artificial intelligence pp montreal
beil r wein l inverse optimization auction multiattribute
rfqs management science
bichler future e markets multi dimensional market mechanisms cambridge university press
boutilier c bacchus f brafman r ucp networks directed graphical
representation conditional utilities th conference uncertainty artificial
intelligence pp seattle
branco f design multidimensional auctions rand journal economics

braziunas boutilier c local utility elicitation gai st
conference uncertainty artificial intelligence pp edinburgh
che k design competition multidimensional auctions rand journal
economics
david e azoulay schwartz r kraus english auction protocol multiattribute items agent mediated electronic commerce iv designing mechanisms
systems vol lecture notes artificial intelligence pp springer


fiengel wellman

debreu g topological methods cardinal utility theory arrow k j karlin
suppes p eds mathematical methods social sciences pp
stanford university press
dechter r mini buckets general scheme generating approximations automated reasoning th international joint conference artificial intelligence
pp nagoya
dyer j sarin r k measurable multiattribute value functions operations

engel structured preference representation multiattribute auctions ph
thesis university michigan ann arbor mi
engel wellman p generalized value decomposition structured
multiattribute auctions th acm conference electronic commerce pp
san diego
engel wellman p lochner k bid expressiveness clearing
multiattribute double auctions th acm conference electronic
commerce pp ann arbor
fishburn p c interdependence additivity multivariate unidimensional
expected utility theory international economic review
gonzales c perny p gai networks utility elicitation th international
conference principles knowledge representation reasoning pp
whistler bc
hyafil n boutilier c regret incremental partial revelation mechanisms
st national conference artificial intelligence pp boston
keeney r l raiffa h decisions multiple objectives preferences
value tradeoffs wiley
koppius information architecture electronic market performance ph
thesis erasmus university rotterdam netherlands
krantz h luce r suppes p tversky foundations measurement
vol academic press york
milgrom p putting auction theory work simultaneous ascending auction
journal political economy
nilsson efficient finding probable configurations
probabilistic expert systems statistics computing
parkes c kalagnanam j iterative multiattribute procurement
auctions management science
pearl j probabilistic reasoning intelligent systems networks plausible inference morgan kaufmann
robu v somefun j la poutre j modeling complex multi issue negotiations utility graphs th international joint conference autonomous
agents multi agent systems pp utrecht


figai auctions

sandholm expressive commerce application sourcing conducted billion generalized combinatorial auctions ai magazine
sandholm suri side constraints non price attributes markets
games economic behavior
von neumann j morgenstern theory games economic behavior
princeton university press
von winterfeldt edwards w decision analysis behavioral
cambridge university press
vulkan n jennings n r efficient mechanisms supply services
multi agent environments decision support systems
wellman p greenwald stone p autonomous bidding agents strategies
lessons trading agent competition mit press
wellman p osepayshvili mackie mason j k reeves bidding strategies simultaneous ascending auctions b e journal theoretical
economics topics




