journal artificial intelligence

submitted published

set intersection consistency constraint networks
yuanlin zhang

yzhang cs ttu edu

department computer science texas tech university
lubbock tx usa

roland h c yap

ryap comp nus edu sg

department computer science national university singapore
science drive singapore

abstract
close relation consistency constraint
network set intersection proof schema provided generic way obtain consistency properties properties set intersection simplifies
understanding unifies many existing consistency directs study
consistency set intersection properties many situations demonstrated
convexity tightness constraints specifically
identify class tree convex constraints local consistency ensures global
consistency generalizes row convex constraints consistency
obtained constraint networks contrast existing work
constraints tight

introduction
constraint network consists set variables finite domains system
constraints variables important task assignment
variables constraints network satisfied assignment
exists network satisfiable globally consistent assignment called solution
determining global consistency general constraint network npcomplete usually search procedure employed solution practice due
efficiency considerations search usually equipped filtering
prunes values variable combinations values certain number variables
cannot part solution filtering make constraint network
locally consistent sense consistent assignment variables
extensible variable important interesting question local consistency
local consistency obtained sufficient determine global consistency
network without search filtering polynomial
complexity positive answer would mean network solved
polynomial time
much work done explore relationship local global consistency particular properties local consistency general one direction
make use topological structure constraint network classical
graph constraint network tree arc consistency network sufficient
ensure global consistency freuder
c

ai access foundation rights reserved

fizhang yap

second direction makes use semantic properties constraints monotone
constraints path consistency implies global consistency montanari van beek
dechter generalize monotone constraints larger class row convex constraints
dechter shows certain level consistency constraint network whose
domains limited size ensures global consistency later van beek dechter
study consistency constraint networks tight loose constraints
existing work along two approaches used specific different techniques
study local global consistency particular little commonality details
existing work much existing work techniques consequently
proofs given developed specifically concerned
much work connected together
studying consistency constraint network unite two seemingly
disparate areas study set intersection special sets study k consistency
constraint networks fact k consistency expressed terms set intersection
allows one obtain relationships local global consistency constraint
network properties set intersection special sets main
proof schema used lift set intersection
rather general particular consistency constraint networks one benefit
proof schema lies provides modular way greatly simplify understanding
proofs consistency benefit considerable often proofs many
existing complex hard wired
precisely properties set intersection key
furthermore proofs become mechanical
following sketch illustrates briefly use one property set
intersection intersection every pair tree convex sets see section
empty intersection whole collection sets empty
property see local information intersection every pair sets gives
rise global information intersection sets intuitively relationship
local global information corresponds obtaining global consistency
local consistency proof schema used lift tree convex sets
following consistency binary constraint network tree convex constraints
consistency path consistency implies global consistency network
usefulness set twofold firstly gives clear picture
many existing example many well known second direction
semantic properties constraints including van beek dechter
well first direction shown easy proofs make use
set intersection properties secondly directing study consistency set
intersection properties helps improve existing derive
demonstrated sections
organized follows section present necessary notations
concepts section focus properties intersection tree convex sets sets
difference work concerned studying tractability constraint
languages e g schaefer jeavons cohen gyssens latter considers
whose constraints fixed set relations former studies constraint networks
special properties



fiset intersection consistency constraint networks

cardinality restrictions section develop characterization k consistency
utilizing set intersection proof schema offers generic way obtain consistency
set intersection properties power demonstrated
consistency convexity tightness constraints tree convex
constraints studied section constraint network tree convex constraints
local consistency ensures global consistency intersection property tree
convex sets tightness constraints studied section thanks intersection
properties sets cardinality restriction relation local global consistency
identified weakly tight constraint networks section networks require
rather constraints tight improving tightness van beek
dechter help relational consistency global consistency
achieved local consistency weakly tight constraint networks section
type tightness known section explore
constraint network weakly tight present several number
tight constraints sufficient necessary network weakly tight make full use
tightness constraints network propose dually adaptive consistency
section dually adaptive consistency constraint network determined
topology tightest relevant constraint variable completeness include
section tightness tree convexity relational consistency
conclude section

preliminaries
constraint network r defined set variables n x x xn set finite
domains dn domain di n set values
variable xi take set constraints c cs cs cse si e
subset x x xn constraint csi relation defined domains
variables si without loss generality assume two constraints
csi csj c j si sj arity constraint csi number variables si
variable x dx denotes domain rest often use network
mean constraint network
instantiation variables x xj denoted aj
ai di j extension variable x
denoted u
u dx instantiation set variables consistent satisfies constraints
r involve variables outside
constraint network r k consistent consistent instantiation
distinct k variables variable x exists u dx
u consistent instantiation k variables r strongly k consistent
j consistent j k strongly n consistent network called globally consistent
information constraint networks consistency reader referred
work mackworth freuder dechter



fizhang yap

properties set intersection
section develop number set intersection used later
derive consistency set intersection property concerned
given collection l finite sets conditions intersection
l sets empty
particularly interested intersection property sets two interesting useful restrictions convexity cardinality
tree convex sets
given collection sets structures associated elements sets
obtain interesting useful set intersection study
sets whose elements form tree first introduce concept tree convex set
definition given discrete set u tree vertices u set u tree
convex exists subtree whose vertices
subtree tree subgraph tree next define say
collection sets tree convex
definition given collection discrete sets let union sets u
sets tree convex tree u every set tree convex
collection sets said tree convex exists tree sets
collection tree convex tree
b





























































b

c
















c





































e

e



f

b

figure tree nodes b c e b partial order nodes b c e f

example consider set u b c e tree given figure subset
b c tree convex given tree set b c e since elements
set subtree however b c e tree convex elements form
subtree given tree
example consider construct tree
root children set covers nodes exactly one
branch tree hence sets tree convex


fiset intersection consistency constraint networks

tree convex sets following intersection property
lemma tree convex sets intersection
given finite collection
finite sets

assume sets tree convex
e iff e e e e
es
proof let l number sets tree ei ei
vertices subtree ti assuming rooted tree every ti l rooted
tree whose root exactly node nearest root let ri denote root ti
l
prove
ei want intersection trees ti l
l

empty following propositions subtrees necessary main proof
proposition let two subtrees tree tree
trivial tree let since portion circuit
necessary prove connected two nodes u v
path u v u v respectively imply exist
paths p u v p u v respectively recall unique
path u v subtrees therefore p p cover
nodes edges thus intersection p
path want
proposition let two subtrees tree empty
least one roots
let r r roots respectively r proposition correct
otherwise r assume contrary r
clearly r r let r
first common ancestor r r v root tree proposition
paths p r v p r v p r r p r r
since v descendant r r p p share vertex v since r
first common ancestor r r p p share vertex r
verified p p share r p p share r vertex shared
p p p p hence closed walk p p p p p p
reverse p p respectively simple circuit contradicts circuit

following observation
proposition let tree root r two subtrees roots r
r respectively let r closer r r intersection
r root empty
proposition true r r let r farther r r clearly r

thus r



proposition

r


root





let
ti ready prove main select tree tmax
l

tl root rmax farthest away r among roots


fizhang yap

concerned trees accordance proposition tmax intersect every
tree implies rmax node every ti l therefore rmax
remark partial order represented acyclic directed graph tempting generalize tree convexity partial convexity following way
given set u partial order set u partially convex
set nodes connected subgraph partial order given collection sets
let union sets u sets partially convex partial
order u every set partially convex partial order
however generalization get similar lemma
illustrated following example consider three sets c b f e c
nodes diagram given figure b sets partially convex
intersect pairwise however intersection three sets empty
sets cardinality restrictions
another useful restriction place sets restrict cardinalities
special case consider set one element intersection every set
empty able conclude every set contains thus intersection
sets empty generally set elements following

lemma consider finite collection l sets e e el number l
assume one set e elements

e
es
iff intersection e sets empty
proof necessary condition immediate
prove sufficient condition intersection e
k k l sets empty induction k k lemma
true according assumption assuming intersection e
k sets empty intersection e k
sets empty without loss generality subscripts k sets numbered
k k let ai intersection e k sets except ei
ai e ei ei ek
first contradiction exist j k j
ai aj assume ai aj distinct j according construction
ai

e
ai
k



fiset intersection consistency constraint networks

ai induction assumption hence
x
e
ai k
k

contradicts e
since ai aj j k j

ei
ai aj
k


lemma leads following corollary intersection every sets
empty
corollary small set intersection consider finite collection l sets
number l assume one set elements

e
es
iff intersection sets empty
specialized versions zhang yap lemma
existing works van beek dechter david
sets concern cardinality larger certain number intersection
sets empty conditions reader may refer large sets
intersection lemma zhang yap details

set intersection consistency
section first relate consistency constraint networks set intersection
present proof schema allows us study relationship local
global consistency properties set intersection
underlying concept k consistency whether instantiation variables
extended variable relevant constraints variable
satisfied relevant constraint variable xi respect constraint contains
xi variables given instantiation relevant constraint allows
set possibly empty values variable call set extension set
satisfiability relevant constraints depends whether intersection extension
sets non empty see lemma
definition given constraint csi variable x si instantiation si x
extension set x respect csi defined
ei x b dx b satisf ies csi
extension set trivial empty otherwise non trivial


fizhang yap

recall dx refers domain variable x throughout often
case instantiation x already given x superset
si x let b instantiation obtained restricting variables
si x ease presentation continue use ei x rather ei x b denote
extension b x constraint csi make presentation easy follow
three parameters x may omitted expression hereafter whenever
clear context example given instantiation variable
x emphasize different extension sets respect different constraints csi write
ei instead ei x simply denote extension set
example consider network variables x x x x x
cs
cs
cs
cs


b b x x x
b b b x x x
b b c
x x
b b x x x
b b c

let b instantiation variables x x x relevant constraints
x cs cs cs cs relevant since contains x outside extension
sets x respect relevant constraints
e e b e c
intersection extension sets empty implying extended
satisfy relevant constraints cs cs cs
let b c instantiation x x e x thus trivial
words trivial extension set instantiation extended satisfy
constraint concern
relationship k consistency set intersection characterized following lemma
lemma set intersection consistency lifting constraint network r kconsistent consistent instantiation k distinct variables
x x xk variable xk

eij
j l

eij extension set xk respect csij csi csil relevant
constraints
proof follows directly definition k consistency section
definition extension set
insight behind lemma examine consistency perspective set
intersection


fiset intersection consistency constraint networks

example consider example would check whether network consistent consider instantiation trivial consistent instantiation
since network doesnt constraint among variables extend x
need check first three constraints cs cs extension feasible
intersection e e e empty network consistent
exhausting consistent instantiations three variables conversely know
network consistent immediately say intersection three extension
sets x empty
usefulness lemma allows consistency information obtained
intersection extension sets vice versa point view consistency
set intersection set intersection properties including section
lifted get consistency constraint network following
proof schema
proof schema
consistency set certain level consistency constraint network
derive information intersection extension sets lemma
set set local intersection information sets information may
obtained intersection sets
set consistency information intersection extension sets
higher level consistency obtained lemma
formulate conclusion consistency constraint network
proof schema step consistency set step set consistency step
straightforward many cases lemma called lifting lemma
set intersection step easily consistency network
step proof schema establishes direct relationship set intersection
consistency properties constraint network
following sections demonstrate set intersection properties
proof schema used obtain consistency constraint network

global consistency tree convex constraints
notion extension set plays role bridge restrictions set
properties special constraints section consider constraints arising
tree convex sets lemma constraint tree convex extension sets respect
constraint tree convex
definition constraint cs tree convex respect xi tree ti di
sets
es xi es xi non trivial extension instantiation xi
tree convex ti constraint cs tree convex tree union
domains variables tree convex respect every x
example tree convex constraints occur relationship among
values variable consider constraint accessibility set facilities


fizhang yap

set persons personnel include network engineer web server engineer application
engineer team leader relationship among staff team leader
manages rest forms tree structure shown figure b different
accessibilities system includes basic access access network routers access
web server access file server order access routers servers
one basic access right implying tree structure figure c access
rights constraint team leader able access facilities
engineer access corresponding facility e g web server engineer access
web server tree convex constraint shown figure rows
named initials engineers columns initials access rights
tree union personnel accessibilities obtained respective
trees figure b c adding edge say web server leader note
constraint figure row convex

n
w

l

r


w

f











b





leader

network
engineer

web application
engineer engineer routers

b

basic access

web
server

file
server

c

figure tree convex constraint accessibilities staffs
example tree convex constraints used model scene labeling
naturally shown zhang freuder
definition constraint network tree convex exists tree union
variable domains constraints tree convex
tree convex constraints generalize row convex constraints introduced van beek
dechter
definition constraint cs row convex respect x sets
es x es x non trivial extension instantiation x
tree convex tree node one child tree called
total ordering constraint cs row convex total ordering union
involved domains row convex respect every x
example constraint c example row convex b basic access
neighbor r routers w web server f file server however total ordering
value neighbor two values hence c row convex
tree convex
property set intersection tree convex sets proof schema
following consistency tree convex constraints


fiset intersection consistency constraint networks

theorem tree convexity let r network constraints arity r
strongly r consistent r tree convex globally consistent
proof network strongly r consistent assumption prove
network k consistent k r n
consider instantiation k variables variable x let
number relevant constraints l relevant constraint one extension set
x l extension sets intersection l sets empty
value x extended instantiation satisfies relevant constraints
consistency set consider two l extension sets e e two
corresponding constraints involve r variables since arity constraint
r two constraints x variable consistency lemma
r r consistent implies intersection e e empty
set set since relevant constraints tree convex given tree
extension sets x tree convex henceforth fact every two extension
sets intersect shows intersection l extension sets empty tree
convex sets intersection lemma
set consistency consistency lemma r k consistent
since row convex constraint tree convex generalizes consistency
row convex constraints reported van beek dechter interesting
observe latter lifted set intersection convex sets zhang
yap
question raised theorem efficient check whether constraint
network tree convex yosiphon proposed recognize tree
convex constraint network polynomial time

consistency tightness constraints
section present consistency networks tight
constraints
global consistency weakly tight networks
tightness constraints related consistency constraint network
van beek dechter tightness constraint characterized
cardinality extension sets following way
definition van beek dechter constraint csi tight respect x si
iff instantiation si x
ei x ei x dx
constraint csi tight iff tight respect every x si
given instantiation extension set respect x domain
variable x e ei x dx instantiation supported values x thus
easy satisfiable hence definition instantiations affect
tightness constraint


fizhang yap



x




b

b

c

c





















































































































































figure constraint cxy tight tight
example consider constraint cxy figure dx dy b c edge
graph denotes ends allowed cxy verified values
x extension sets cardinality values extension sets
cardinality hence cxy said tight tight tight
specially interested following tightness
definition constraint csi properly tight respect x si iff instantiation si x
ei x
constraint csi properly tight iff properly tight respect every x si
constraint tight properly tight converse might true
example constraint x x tight
properly tight properly tight since ex
next define special constraint network allows us make accurate
connection tightness constraints consistency network
definition constraint network weakly tight level k iff every set variables
x x xl k l n variable x exists properly tight constraint
among relevant constraints x respect x x xl

x

x



x

x






b



figure two constraint networks thin edge represents properly tight constraint
thick one represents non properly tight constraint



fiset intersection consistency constraint networks

example network figure weakly tight level three
variables fourth variable one relevant constraints properly tight
network figure b weakly tight level since none
relevant constraints cy cy properly tight
small set intersection corollary corollary following consistency
weakly tight network
theorem weak tightness constraint network r constraints arity
r strongly r consistent weakly tight level r
globally consistent
proof let j r constraint network r shown k consistent
k j k n
let x xk set k variables instantiation
variables consider additional variable xk without loss generality let
relevant constraints cs csl ei extension set xk respect
csi l
consistency set consider l extension sets corresponding
constraints contain r variables including xk since r
r consistent set intersection consistency lemma intersection
extension sets empty
set set network weakly tight level r must
properly tight constraint among relevant constraints cs csl let csi
know extension set ei since intersection every extension
sets empty l extension sets share common element small set intersection
corollary
set consistency lifting lemma r k consistent
similar fashion main tightness van beek dechter
constraints required tight lifted small sets intersection
corollary zhang yap uniform treatment lifting set intersection
consistency absent existing works e g dechter van beek
dechter david
tightness van beek dechter requires every constraint
tight weak tightness theorem hand require constraints
properly tight following example illustrates difference
example weakly tight network interested topological structure
thus omitted domains variables consider network five variables
labeled network pair variables three variables
constraint assume network already strongly consistent
since network already strongly consistent simply ignore instantiations
less variables introduce level network weakly
tight interesting level table shows relevant constraints
possible extension four instantiated variables one first row


fizhang yap

extension
























relevant constraints
























table relevant constraints extending instantiation four variables variable

stands extending instantiation variables variable entries
second column denote constraint example denotes c constraints
suffixed table properly tight network weakly
tight level alternatively constraints suffixed
properly tight network weakly tight tightness van
beek dechter requires binary ternary constraints tight
making weakly tight networks globally consistent
consider weak tightness theorem previous section generally weakly tight
network might level local consistency required theorem tempting
enforce level consistency network make globally consistent however
procedure may constraints higher arity
example consider network variables x x x x let domains x x x
domain x constraints variables
take different values x x x x x x x x x x x x network
strongly path consistent checking consistency network know
instantiation x x x consistent extended x enforce consistency necessary introduce ternary constraint x x x make
longer valid instantiation
make network globally consistent newly introduced constraints
higher arity may turn require higher local consistency accordance theorem
therefore difficult predict exact level consistency variable enforce
network make globally consistent
section relational consistency used make constraint network globally
consistent
definition van beek dechter constraint network relationally consistent
iff given distinct constraints cs csm x
si

consistent instantiation variables si x exists extension
x extension consistent relations network strongly
relationally consistent relationally j consistent every j


fiset intersection consistency constraint networks

variables longer concern relational consistency instead constraints
basic unit consideration intuitively relational consistency concerns whether
constraints agree every one shared variables makes sense different
constraints interact exactly shared variables
relational consistency called relational arc path consistency
respectively
relational consistency able obtain global consistency enforcing local
consistency network
proposition weak tightness level k constraint network preserved
process enforcing relational consistency network
proof let r constraint network relational consistency enforcing r
network consistency enforcing clearly r r set variables
consider set variables x x xl k l n variable x since
r weakly tight level k exists properly tight constraint c among
relevant constraints x respect x x xl enforcing relational consistency
constraint network tighten constraint proper tightness c
preserved hence r weakly tight level k
main subsection
theorem constraint network weakly tight level r r
maximal arity constraints network globally consistent made
strongly relationally consistent
proof proposition network still weakly tight r
enforcing strong relational consistency let r maximal arity
constraints network consistency enforcing clearly r r network
tight r proposition theorem follows immediately
theorem section
implication theorem long certain properly tight constraints certain combinations variables network made globally consistent
enforcing relational consistency
following observation weak tightness network
proposition constraint network weakly tight level constraint
every two variables network properly tight
proof consider level k set variables x x xl k l n
variable x
since constraint two variables properly tight
constraint c x x x x properly tight therefore properly tight
constraint c x x among relevant constraints instantiation
observation shows proper tightness constraints every two
variables sufficient determine level local consistency needed ensure global
consistency constraint network
remark proposition assumes constraint every two variables
constraint two variables universal constraint introduced


fizhang yap

case enforce path consistency constraint network make binary
constraints tighter lower level relational consistency needed make network
globally consistent
properties weakly tight constraint networks
since weakly tight constraint network global consistency achieved
local consistency interesting important investigate conditions network
weakly tight although proposition shows sufficient condition requires every
binary constraint tight see example required number
tight constraints constraint network weakly tight reduced
subsection focused understanding relationship number tight
constraints weak tightness constraint network
strong relationship among different levels weak tightness network
proposition constraint network weakly tight level k weakly
tight level j k
proof j k prove network weakly tight level j
set variables x xj k j n variable x
exists tight relevant constraint x respect since network weakly
tight k j exists tight relevant constraint x respect subset
constraint still relevant x respect thus one look
following present two sufficient conditions constraint network
weakly tight
theorem given constraint network v c number every x v
least n properly tight binary constraints network weakly
tight level
proof two variables x third variable z relevant constraints
z respect x cxz cyz know number relevant binary
constraints z respect v n n properly tight means
cxz cyz must properly tight
fact weak tightness higher level need fewer constraints tight
shown following
theorem constraint network v c weakly tight level k every x v
least n k properly tight binary constraints
proof set k variables variable z
properly tight relevant constraint z respect otherwise none k
binary constraints z properly tight since total number relevant binary
constraints z n number properly tight binary constraints z
n k contradicts z involved nk properly tight binary constraints



fiset intersection consistency constraint networks

reveals constraint network weakly tight level k could
need n n k properly tight binary constraints contrast
theorem binary constraints required properly tight
immediate question minimum number tight constraints required
network weakly tight answered following weak
tightness level
theorem given number constraint network weakly tight level
needs least
n n bn c n mod
otherwise
n n
tight binary ternary constraints
proof
given network weak tightness level depends tightness
binary ternary constraints among weakly tight level constraint
networks n variables let r network minimal set properly tight
binary ternary constraints
following exposition constraint denoted scope example
use u v w u v denote ternary constraint c u v w binary constraint cuv
respectively constraint non properly tight properly tight
proof consists three steps
step preserving weak tightness r number properly mtight constraints r modify necessary proper tightness constraints
r properly weak tight constraint u v w none binary
constraints u v v w u w properly tight
modify proper tightness constraint c r remove c network
introduce constraint set variables c desirable proper
tightness
claim properly tight constraint u v w one u v
v w u w properly tight otherwise least two properly mtight means u v w modified properly tight contradicting
minimality number properly tight constraints r
assume u v properly tight since u v w properly tight
reason u v properly tight reason exists another
variable z one u z v z properly tight u v z
properly tight see figure without loss generality let u z properly mtight implying constraint v z properly tight constraint z v w
properly tight v z v w properly tight
modify constraints u v w z v w properly tight
modify constraints z v v w properly tight modification preserves
number properly tight constraints r weak tightness r
step preserving weak tightness r number properly tight
constraints r next modify necessary proper tightness constraints
r two properly tight ternary constraints share variables


fizhang yap















































z

u

w

v

figure circle represents properly tight ternary constraint u v w edge
two variables indicates binary constraint tick besides edge means
properly tight cross means

case two properly tight constraints u v w u v z share two variables
u v see figure since w u u z properly tight terms step
w u z properly tight since w v v z tight w v z
tight
modify four ternary constraints properly tight modify four
binary constraints w u u z z v v w properly tight preserves
weak tightness r number properly tight constraints r

w
v

u

x

z

z

v
w

w

v

u

u

v

u

w

x





b



figure dotted ellipse together three variables inside represents ternary
constraint left two ternary constraints share two variables u v right
ternary constraints properly tight b left two ternary
constraints share one variable w right ternary constraints
properly tight
case two properly tight constraints u v w w x share one variable
w since u w w x properly tight u w x properly tight
since v w w properly tight v w properly tight
similarly u w v w x properly tight modify four
binary constraints u w w x v w w properly tight six
ternary constraints non properly tight network still weakly tight
fewer tight constraints contradicts minimality number properly
tight constraints r hence case possible
step first two steps network r scopes properly
tight ternary constraints disjoint binary constraint two variables
properly tight ternary constraint properly tight


fiset intersection consistency constraint networks

let b respectively set properly tight binary ternary
respectively constraints r
assume k since difficult count b count maximum number
non properly tight binary constraints r k non properly tight binary
constraints due non properly tight binary constraints
variable variable outside let v variables outside
v n k non properly tight constraints fall variables
v since r weakly tight level two non properly tight constraints
variable v hence n k non properly tight constraints
n k even otherwise n k ones number denoted
properly tight constraints r would sum cardinality b
k n n k b n k c n n k b n k c
fact minimal implies k maximized n multiple
number properly tight constraints n n n n multiple
number n n n otherwise number n n
shows concept k consistency still need significant
number constraints properly tight predict global consistency network
terms constraint tightness
dually adaptive consistency
main purpose characterization weak tightness network help identify
consistency condition solution network found without backtracking e efficiently studied constraint tightness concept k consistency
previous subsections subsection introduce dually adaptive consistency
achieve backtrack free search taking account tightness constraints
topological structure network
idea adaptive consistency dechter pearl enforce necessary
level consistency part network ensure global consistency assumes
ordering variables variable x requires consistent instantiation
relevant variables x consistently extensible x variables
play direct role x thus ignored dealing x
first introduce notations used adaptive consistency
width variable respect variable ordering number constraints
involving x variables x see figure example
given network variable ordering variable x directionally relevant constraints x involving x variables x following dr x
used denote directionally relevant constraints x used denote variables
occurring constraints dr x
constraints dr x consistent x consistent instantiation x exists u dx u satisfies constraints
dr x
next define adaptive consistency network



fizhang yap

x












































x
x
x

x

figure variables x x x ordered according subscripts example x x width x

definition given constraint network ordering variables network
adaptively consistent variable x directionally relevant constraints
consistent x
adaptive consistency presented dechter although
purpose prefer declarative characterization
adaptively consistent network solution found without backtracking
proposition given constraint network ordering variables backtrack
free search ensured network adaptively consistent
proof assume found consistent instantiation first k variables terms
given ordering consistently extended xk directionally
relevant constraints xk consistent xk
network adaptively consistent dechter p
used enforce adaptive consistency
adaptive consistency accurate estimating local consistency
ensures global consistency makes intuitive enforce consistency
solution
knowledge constraint tightness presented previous subsections
know network adaptively consistent sufficient make sure
directionally relevant constraints variable consistent
position define dually adaptive consistency constraint network
definition consider constraint network ordering variables
variable x network let cx one tightest directionally relevant constraints
x cx properly mx tight network dually adaptively consistent
variable x whose width greater mx directionally relevant
constraints consistent
variable x whose width greater mx cx consistent every
mx directionally relevant constraints x
thanks set intersection lemma main dually
adaptive consistency


fiset intersection consistency constraint networks

theorem given constraint network ordering variables backtrack free
search ensured dually adaptively consistent
proof need prove network adaptively consistent
variable x directionally relevant constraints dr x consistent x let
variables involved dr x consider consistent instantiation x
exists u dx u satisfies constraints dr x let l number
constraints dr x let cx one tightest constraint dr x proper
tightness mx constraint ci dr x let extension set x ci ei
sufficient
c dr x ei


know cx consistent every mx constraints hence ex extension set
cx intersects every mx extension sets lemma implies
c dr x ei



theorem need tightest directionally relevant constraint
variable totally n constraints predict global consistency network
could considered significant improvement previous two
subsections
compared dechter pearl theorem provides
lower level smaller tightness width consistency ensuring global consistency
constraint network dually adaptively consistent respect variable
ordering made enforcing required consistency variable
reverse order given variable ordering make procedure efficient
chose better variable ordering depending topological structure
network tightness constraints

tightness convexity revisited
consistency derived small set intersection tree convex set intersection
section section rephrased relational consistency setting
example version weak tightness relational consistency given follows
theorem weak tightness constraint network r constraints arity
r strongly relationally consistent weakly tight level r
globally consistent
proof let j r constraint network r shown
k consistent k j k n
let x xk set k variables consistent instantiation
variables consider variable xk without loss generality let cs csl
relevant constraints xk ei extension set xk respect csi
l



fizhang yap

consistency set consider l extension sets since r relationally
consistent intersection extension sets empty
set set network weakly tight must properly tight
constraint relevant constraints cs csl let csi extension set ei
since every extension sets non empty intersection l extension sets
share common element small set intersection corollary
set consistency lifting lemma r k consistent
compared weak tightness theorem section exposition
neater proof simpler
completeness include version tree convex theorem
relational consistency proof omitted since simplified version one
section hinted proof
theorem tree convexity let r tree convex constraint network r globally
consistent strongly relationally path consistent

conclusion
lifting lemma proof schema shown set intersection
easily lifted consistency constraint network advantages
studying consistency
firstly although offer completely way prove consistency provide uniform way understand many seemingly different
impact convexity tightness global consistency addition
shown obtained easily lifting lemma proof
schema example work david obtained lifting corollary
lemma zhang yap work sam haroud faltings convex
constraint networks continuous domains lifted hellys theorem eckhoff
intersection convex sets euclidean spaces
secondly establishment relationship set intersection consistency
constraint network makes easier communicate consistency researchers outside constraint network community made possible
contribute consistency exploiting knowledge set intersection properties
importantly singles fact set intersection properties play
fundamental role determining consistency constraint network perspective
helps us focus properties set intersection discover generalize intersection
properties tree convex sets sets cardinality restrictions corresponding
consistency extended understanding convexity tightness constraints since dechter van beeks work identify class tree
convex constraints global consistency ensured certain level local consistency generalizes row convex constraints van beek dechter
weakly tight constraint network made globally consistent enforcing
local consistency type tightness detailed study carried
constraint network weakly tight make full use tightness
constraints propose dually adaptive consistency exploits topology


fiset intersection consistency constraint networks

semantics constraint network relation set
intersection consistency dually adaptive consistency topology network
tightest relevant constraint variable determine local consistency
ensures backtrack free search

acknowledgments
indebted dr peter van beek dr fengming dong helpful discussions
constructive comments anonymous referees versions
improved quality material works partially supported grant
academic fund national university singapore science
foundation ireland grant pi c materials appeared
proceedings international joint conference artificial intelligence zhang
yap proceedings principles practice constraint programming
zhang

references
david p functional bijective constraints make csp polynomial
proceedings thirteenth international joint conference artificial intelligence
vol pp chambery france ijcai inc
dechter r local global consistency artificial intelligence
dechter r constraint processing morgan kaufmann san francisco ca
dechter r pearl j network heuristics constraint satisfaction artificial intelligence
eckhoff j helly radon caratheodory type theorems gruber p
wills j eds handbook convex geometry pp north holland
amsterdam
freuder e synthesizing constraint expressions communications acm

freuder e sufficient condition backtrack free search journal acm

jeavons p g cohen gyssens closure properties constraints
journal acm
mackworth k consistency networks relations artificial intelligence

montanari u networks constraints fundamental properties applications
information science
sam haroud faltings b v solving non binary convex csps continous
domains proceedings international conference principles practice
constraint programming pp cambridge massachusetts springer



fizhang yap

schaefer j complexity satisfiability proceedings th
acm symposium theory computing pp
van beek p dechter r minimality global consistency row convex
constraint networks journal acm
van beek p dechter r constraint tightness looseness versus local
global consistency journal acm
yosiphon g efficient identifying tree convex constraints manuscript
zhang tightness constraints proceedings principles practice
constraint programming pp toronto canada springer
zhang freuder e c tractable tree convex constraints proceedings
national conference artificial intelligence pp san jose ca usa
aaai press
zhang yap r h c consistency set intersection proceedings
international joint conference artificial intelligence pp acapulco
mexico ijcai inc




