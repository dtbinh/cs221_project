journal artificial intelligence

submitted published

uncertainty soft temporal constraint general
framework controllability fuzzy case
francesca rossi
kristen brent venable

frossi math unipd
kvenable math unipd

university padova department pure applied mathematics
via trieste padova italy

neil yorke smith

nysmith ai sri com

sri international
ravenswood ave menlo park ca usa

abstract
real life temporal scenarios uncertainty preferences often essential coexisting
aspects present formalism quantitative temporal constraints preferences
uncertainty defined three classical notions controllability strong
weak dynamic developed uncertain temporal generalized handle preferences well defining general framework focus
preferences follow fuzzy properties assure tractability
propose check presence controllability properties particular setting dealing simultaneously preferences uncertainty
increase complexity controllability testing develop dynamic execution
polynomial complexity produces temporal plans uncertainty optimal
respect fuzzy preferences

introduction
current temporal constraint reasoning exposed difficulties real life found lacking expressiveness flexibility rich application domains
often necessary simultaneously handle temporal constraints preferences
uncertainty
need seen many scheduling domains motivation line
described domain scheduling nasa space missions nasa
tackled many scheduling temporal constraints used reasonable success showing limitations lack capability deal uncertainty
preferences example remote agent rajan bernard dorais gamble kanefsky kurien
millar muscettola nayak rouquette smith taylor tung muscettola morris pell
smith experiments consisted placing ai system board plan execute
spacecraft activities represents one interesting examples remote agent worked
high level goals specified example duration frequency time windows
within spacecraft take asteroid images used orbit determination
board navigator remote agent dealt flexible time intervals uncontrollable events
however deal preferences temporal constraints hard benefit
adding preferences framework would allow planner handle uncontrollable events
time maximizing mission managers preferences
c

ai access foundation rights reserved

firossi v enable yorke mith

recent nasa application rovers domain dearden meuleau ramakrishnan
smith washington bresina jonsson morris rajan nasa interested
generation optimal plans rovers designed explore planetary surface e g spirit
opportunity mars bresina et al dearden et al describe generating plans planetary rovers handle uncertainty time resources
involves first constructing seed plan incrementally adding contingent branches
plan order improve utility preferences could used embed utilities directly
temporal model
third space application used several times running example
concerns fleets earth observing satellites eos frank jonsson morris smith
involves multiple satellites hundreds requests constraints
serve request resources instruments recording devices transmitters
ground stations response requests placed scientists image data acquired eos
data downlinked real time recorded board playback later time
ground stations satellites available receive downlinked images different satellites
may able communicate subset resources transmission rates differ
satellite satellite station station may different financial costs
associated different communication resources frank et al eos scheduling dealt constraint interval representation candidate plans
represented variables constraints reflect temporal relationship actions
constraints parameters states actions temporal constraints necessary
model duration ordering constraints associated data collection recording downlinking tasks solutions preferred objectives maximizing number high
priority requests served maximizing expected quality observations minimizing
cost downlink operations uncertainty present due weather specifically due duration
persistence cloud cover since image quality obviously affected amount clouds
target addition events need observed may happen unpredictable
times uncertain durations e g fires volcanic eruptions
existing frameworks simple temporal preferences stpps khatib
morris morris rossi address lack expressiveness hard temporal constraints
adding preferences temporal framework take account uncertainty simple temporal uncertainty stpus vidal fargier account
contingent events notion preferences introduce framework
allows us handle preferences uncertainty simple temporal
proposed model called simple temporal preferences uncertainty stppus
merges two pre existing stpps stpus
stppu instance represents quantitative temporal preferences uncertainty
via set variables representing starting ending times events controllable
agent set soft temporal constraints variables includes interval containing allowed durations event allowed times events
preference function associating element interval value specifies much
value preferred soft constraints defined controllable uncontrollable
events order clarify modeled stppu let us emphasize graduality
allowed terms preferences uncertainty sense uncertainty represented contingent stppu constraints contingent stpu constraints


fiu ncertainty

soft temporal constraint

durations assumed equally possible addition expressing uncertainty stppus contingent constraints soft different preference levels associated different durations
contingent events
consider notions controllability similar defined stpus
used instead consistency presence uncertainty adapt
handle preferences notions usually called strong weak dynamic controllability refer
possibility controlling executing agent assigning values
controllable variables way optimal respect nature decided
decide uncontrollable variables word optimal crucial since stpus
preferences need care controllability optimality fact
notions define directly correspond stpus called strong weak
dynamic optimal controllability
defining controllability notions proving properties consider
restrictions shown make temporal preferences tractable
khatib et al rossi sperduti venable khatib morris morris e semi convex
preference functions totally ordered preferences combined idempotent operator
context controllability notions give check whether
hold adding preferences make complexity testing
properties worse case without preferences moreover dealing different levels
preferences define testing refer possibility controlling
maintaining preference least certain level called controllability finally
context dynamic controllability consider execution dynamic optimal plans
parts content appeared venable yorke smith rossi venable yorke smith yorke smith venable rossi rossi venable yorke smith
extends previous work least two directions first papers optimal controllability strong dynamic checked separately check
optimal strong dynamic controllability hold return
highest given strong dynamic controllable moreover
presented uniform technical environment providing thorough theoretical study properties computational aspects makes use several unpublished
proofs
structured follows section give background temporal constraints
preference uncertainty section define formalism simple temporal
preferences uncertainty section describe notions
controllability test notions described respectively section optimal
strong controllability section optimal weak controllability section optimal
dynamic controllability section give general strategy notions finally section discuss related work section summarize main
point directions future developments make readable proofs
theorems contained appendix

background
section give main notions temporal constraints dechter meiri pearl
framework temporal constraint satisfaction preferences tcspps khatib



firossi v enable yorke mith

et al rossi et al extend quantitative temporal constraints dechter et al
semiring preferences bistarelli montanari rossi describe simple
temporal uncertainty stpus vidal fargier morris muscettola vidal
extend tractable subclass temporal constraints model agent uncontrollable
contingent events define corresponding notions controllability introduced vidal
fargier
temporal constraint satisfaction
one requirements temporal reasoning system scheduling
ability deal metric information words handle quantitative information
duration events take ten twenty minutes get home quantitative
temporal networks provide convenient formalism deal information consider
instantaneous events variables whose domains entire timeline
variable may represent beginning ending point event neutral point
time effective representation quantitative temporal networks constraints within
framework temporal constraint satisfaction tcsps dechter et al
interested particular subclass tcsps known simple temporal
stps dechter et al constraint time points x
xj represented constraint graph edge x xj labeled single interval aij bij
represents constraint aij xj xi bij solving stp means finding assignment
values variables temporal constraints satisfied
whereas complexity general tcsp comes one interval
constraint stps solved polynomial time despite restriction single interval per
constraint stps shown valuable many practical applications stps
attracted attention literature
stp associated directed weighted graph g v ed called distance
graph set nodes constraint graph twice number edges
binary constraint variables x xj distance graph edge xi xj
labeled weight bij representing linear inequality x j xi bij well edge xj xi
labeled weight aij representing linear inequality x xj aij
path xi xj distance graph gd say variables xi xi xi xi
p
xik xj induces following path constraint x j xi kh bih ih intersection
induced path constraints yields inequality x j xi dij dij length shortest
path xi xj length defined e negative cycles distance
graph stp consistent distance graph negative cycles shostak
leiserson saxe means enforcing path consistency
pc sufficient solving stps dechter et al follows given stp effectively specified another complete directed graph called graph edge xi xj
labeled shortest path length ij distance graph gd
dechter et al shown consistent stp backtrack free decomposable relative constraints graph moreover set temporal constraints
form dji dij minimal stp corresponding original stp possible one
solutions backtrack free search simply assigns variable value
satisfies minimal network constraints compatibly previous assignments two specific solu



fiu ncertainty

soft temporal constraint

tions usually called latest earliest assignments given l n
se dn assign variable respectively latest earliest possible time
dechter et al
graph thus minimal network stp found applying floydwarshalls pairs shortest path floyd distance graph complexity
n n number variables graph sparse bellman ford single source
shortest path used instead complexity equal ne e
number edges refer dechter et al xu choueiry details
efficient stp solving
temporal csps preferences
although expressive tcsps model hard temporal constraints means constraints
satisfied solutions constraint equally satisfying however
many real life situations solutions preferred others thus global
way satisfy constraints optimally according preferences specified
address need tcsp framework generalized khatib et al
associate temporal constraint preference function specifies preference
distance allowed constraint framework merges tcsps semiring soft
constraints bistarelli et al
definition soft temporal constraint soft temporal constraint tuple h x f
consisting
set two variables x integers called scope constraint
set disjoint intervals b bn ai bi z ai bi
n
set preferences
preference function f mapping elements preference
values taken set
given assignment variables x x v x vy say assignment
satisfies constraint h x f iff exists bi ai vy vx bi
case preference associated assignment constraint f v vx p
variables preference set stpp apparent omit write
soft temporal constraint pair hi f
following soft constraint bistarelli et al preference set carrier
algebraic structure known c semiring informally c semiring ha
set equipped two operators satisfying proscribed properties details see bistarelli
et al additive operator used induce ordering preference set given
two elements b b iff b multiplicative operator used combine
preferences



firossi v enable yorke mith

definition tcspp given semiring ha temporal constraint satisfaction
preferences tcspp pair hv ci v set variables c
set soft temporal constraint pairs variables v preferences
definition solution given tcspp hv ci semiring solution complete assignment variables v solution said satisfy constraint c c preference p
projection pair variables cs scope satisfies c preference p write
pref c p
solution global preference value obtained combining via operator
preference levels solution satisfies constraints c
definition preference solution given tcspp hv ci semiring preference
solution hv vn denoted val computed cc pref c
optimal solutions tcspp solutions best global preference
value best determined ordering values semiring
definition optimal solutions given tcspp p hv ci semiring solution
p optimal every solution p
choosing specific semiring means selecting class preferences example semiring
sf csp h max min
allows one model called fuzzy preferences ruttkay schiex associate
element allowed constraint preference worst
best preferences gives complete assignment minimal among preferences selected constraints optimal solutions solutions maximal
preference another example semiring csp h f alse true f alse truei
allows one model classical tcsps without preferences general tcspp framework
refer fuzzy temporal constraints however absence preferences
temporal constraints modelled two elements
constraints thus preferences coexists hard constraints
special case occurs constraint tcspp contains single interval analogy
done case without preferences called simple temporal
preferences stpps class temporal interesting noted
stps polynomially solvable general tcsps np hard computational effect
adding preferences stps immediately obvious
example consider eos example given section figure stpp
scenario three events scheduled satellite start time ss
ending time se slewing procedure starting time image retrieval
slewing activity example take units time ideally units
time shortest time possible otherwise image taking start time
units time slewing initiated third constraint variables se
fact better image taking start soon slewing stopped


fiu ncertainty

soft temporal constraint













ss

se

































figure stpp example
following example instead consider stpp uses set semiring
sset h ai notice fuzzy semiring multiplicative operator e
intersection idempotent order induced additive operator e union partial
example consider scenario three friends alice bob carol want meet drink
dinner must decide time meet reserve dinner depending
long takes get restaurant variables involved global
start time x value domain start time drink ds time
leave dinner de time arrival restaurant rs meet drink
pm leave dinner half hour moreover depending
restaurant choose take minutes get dinner alice prefers
meet early dinner early carol bob prefers meet go best
restaurant farthest thus following two soft temporal constraints first
constraint defined variable pair x ds interval preference
function fs fs alice carol fs bob fs
second constraint binary constraint pair de rs interval preference
function fse fse alice carol fse fse bob
additional hard constraint variable pair ds de modeled
interval single preference equal alice carol bob optimal solution
x ds de rs preference alice carol
although tcspps stpps np hard khatib et al tractable subclass
stpps described tractability assumptions semi convexity preference functions
idempotence combination operator semiring totally ordered preference set
preference function f soft temporal constraint hi f semi convex iff set
x f x forms interval notice semi convex functions include linear convex
step functions aggregation operator totally ordered set idempotent
min dubois prade e combination operator f csp semiring
tractability assumptions met stpps solved polynomial time rossi
et al two polynomial solvers tractable subclass stpps proposed one solver



firossi v enable yorke mith

extension path consistency tcspps second solver decomposes
solving set hard stps
simple temporal uncertainty
reasoning concerns activities agent performs interacting external world uncertainty often unavoidable tcsps assume activities durations control
agent simple temporal uncertainty stpus vidal fargier extend
stps distinguishing contingent events whose occurrence controlled exogenous factors
often referred nature
stps activity durations stpus modelled intervals start times activities assumed controlled agent brings loss generality end times
however fall two classes requirement free vidal fargier contingent
former stps decided agent agent control latter
observe occurrence event observation supposed known immediately
event information known prior observation time point nature respect
interval duration durations contingent links assumed independent
stpu variables thus divided two sets depending type time points
represent
definition variables variables stpu divided
executable time points points b whose time assigned executing agent
contingent time points points e whose time assigned external world
distinction variables leads constraints divided two sets requirement contingent depending type variables constrain note stps
constraints binary formally
definition constraints stpu divided
requirement constraint link r ij generic time points ti tj interval iij
lij uij lij tj ti uij ti value assigned variable ti
contingent link ghk executable point bh contingent point ek interval ihk
lij uij contains possible durations contingent event represented b h
ek
formal definition stpu following
definition stpu simple temporal uncertainty stpu tuple n
xe xc rr rc
xe b bne set executable time points
xc e enc set contingent time points
general ti tj contingent executable time points



fiu ncertainty

start
cooking

soft temporal constraint


end
cooking



requirement constr



contingent constr

start
dinner

contingent timepoint

end
dinner

executable timepoint

figure stpu example
rr ci j cic jc set c requirement constraints
rc gi j gig jg set g contingent constraints
example example taken vidal fargier describes scenario
modeled stpu consider two activities cooking dinner assume
dont want eat dinner cold assume control start cooking
dinner starts finish cooking dinner
stpu modeling example depicted figure two executable time points startcooking start dinner two contingent time points end cooking end dinner moreover
contingent constraint variables start cooking end cooking uncontrollable duration
fixing dinner take anywhere minutes contingent constraint
variables start dinner end dinner uncontrollable duration dinner last
minutes finally requirement constraint variables end cooking startdinner simply bounds minutes time food ready
dinner starts
assignments executable variables assignments contingent variables distinguished
definition control sequence control sequence assignment executable time points
said partial assigns values proper subset executables otherwise complete
definition situation situation set durations contingent constraints
contingent constraints assigned duration said partial otherwise complete
definition schedule schedule complete assignment time points x e xc
schedule identifies control sequence consisting assignments executable
time points situation set durations identified assignments
contingent constraints sol p denotes set schedules stpu
easy see situation corresponds stp fact durations
contingent constraints fixed uncertainty becomes
stp called underlying stp formalized notion projection
definition projection projection p corresponding situation stp obtained
leaving requirement constraints unchanged replacing contingent constraint g hk



firossi v enable yorke mith

constraint h hk hk hk duration event represented g hk p roj p
set projections stpu p
controllability
clear order solve uncertainty possible situations must considered
notion consistency defined stps apply since requires existence single
schedule sufficient case since situations equally possible
reason vidal fargier notion controllability introduced controllability
stpu sense analogue consistency stp controllable means agent
means execute time points control subject constraints notion
controllability expressed terms ability agent given situation
appropriate control sequence ability identified strategy
definition strategy strategy map p roj p sol p every projection p p schedule induces durations contingent constraints
strategy viable every projection p p solution p
write p x indicate value assigned executable time point x schedule
p p x history x p set durations contingent constraints occurred p execution x e partial solution far
vidal fargier three notions controllability introduced stpus
trong c ontrollability
first notion name suggests restrictive terms requirements
control sequence must satisfy
definition strong controllability stpu p strongly controllable sc iff
execution strategy p p roj p p solution p p x p x
p p projections every executable time point x
words stpu strongly controllable fixed execution strategy works
situations means fixed control sequence consistent possible
scenario world thus notion strong controllability related conformant
clearly strong requirement vidal fargier suggest sc may
relevant applications situation observable complete
control sequence must known beforehand example cases activities depend
control sequence production area
vidal fargier polynomial time checking stpu strongly
controllable proposed main idea rewrite stpu given input equivalent stp
executable variables important notice contents
stronglycontrollable takes input stpu p x e xc rr rc returns
output stp defined variables xe stpu input strongly controllable iff derived
stp consistent moreover every solution stp control sequence guarantees
tsamardinos augmented stpus include probability distributions possible situations
implicitly assume uniform independent distribution link



fiu ncertainty

soft temporal constraint

strong controllability stpu stp consistent output stronglycontrollable
minimal form
vidal fargier shown complexity stronglycontrollable n
n number variables
w eak c ontrollability
hand notion controllability fewest restrictions control sequences
weak controllability
definition weak controllability stpu p said weakly controllable wc iff
p p roj p strategy p solution p
words stpu weakly controllable viable global execution strategy
exists least one schedule every situation seen minimum requirement since
property hold situations way execute
controllable events consistent way looks attractive since stpu shown
wc soon one knows situation one pick apply control sequence
matches situation unfortunately vidal fargier shown property
useful classical nonetheless wc may relevant specific applications largescale warehouse scheduling actual situation totally observable possibly
execution starts one wants know advance whatever situation
least one feasible control sequence
vidal fargier conjectured morris muscettola proven
complexity checking weak controllability co np hard proposed
testing wc vidal fargier classical enumerative process lookahead
technique
strong controllability implies weak controllability vidal fargier moreover
stpu seen stp uncertainty ignored enforcing path consistency removes
elements contingent intervals elements belong solution
possible conclude stpu weakly controllable
definition pseudo controllability stpu pseudo controllable applying path consistency leaves intervals contingent constraints unchanged
unfortunately path consistency leaves contingent intervals untouched cannot conclude stpu weakly controllable wc implies pseudo controllability
converse false fact weak controllability requires given possible combination durations contingent constraints stp corresponding projection must consistent
pseudo controllability instead guarantees possible duration contingent constraint least one projection contains duration consistent stp
dynamic c ontrollability
dynamic applications domains situation observed time thus
decisions made even situation remains partially unknown indeed distinction
strong dynamic controllability equivalent conformant conditional final notion controllability defined vidal fargier address


firossi v enable yorke mith

pseudocode dynamicallycontrollable
input stpu w
w pseudo controllable write dc stop
select triangles abc c uncontrollable c
upper bound bc interval v non negative
introduce tightenings required precede case
waits required unordered case
possible regressions waits
converting unconditional waits lower bounds
introduce lower bounds provided general reduction
steps produce tighter
constraints return true otherwise go
figure dynamicallycontrollable proposed morris et al checking dc
stpu
x



c

requirement constr
contingent constr
contingent timepoint

p q

u v

executable timepoint

b

figure triangular stpu
case give definition provided morris et al equivalent
compact
definition dynamic controllability stpu p dynamically controllable dc iff
strategy p p p roj p executable time point x
p x p x p x p x
p solution p p solution p
words stpu dynamically controllable exists viable strategy built
step step depending observed events step sc dc dc
wc dynamic controllability seen useful controllability notion practice
one requires complicated surprisingly morris et al morris
muscettola proved dc polynomial size stpu representation figure
pseudocode dynamicallycontrollable shown
extend notion dynamic controllability order deal preferences propose test extended property require good even
complete understanding dynamicallycontrollable thus give
necessary details


fiu ncertainty

soft temporal constraint

seen considerations triangles constraints
triangle shown figure triangular stpu one contingent constraint ac two executable
time points b contingent time point c sign u v three different
cases occur
follow case v b follow c stpu path consistent dc
since given time c occurs definition path consistency
possible consistent value b
precede case u b precede happen simultaneously c
stpu dynamically controllable v x u interval p q ab
replaced interval v x u sub interval containing elements
p q consistent element x
unordered case u v b follow precede c ensure dynamic
controllability b must wait c occur first v units time go
words c occurs b executed first value consistent
cs time b safely executed units time execution described
additional constraint expressed wait ab written c
v course x v raise lower bound ab p v
unconditional unordered reduction case raise x x p general
unordered reduction
shown waits propagated morris et al term regressedis used
one constraint another wait ab induces wait another constraint involving
e g ad depending type constraint db particular two possible ways
waits regressed
regression assume ab constraint wait hc ti db
constraint including ab upper bound w possible deduce wait hc
wi ad figure shows type regression
regression assume ab constraint wait hc ti
contingent constraint db lower bound z b c possible
deduce wait hc zi ad figure b shows type regression
assume simplicity without loss generality executed time b
executed wait c executed first wait expires b safely
executed time left interval figure shows possible consider follow
precede cases special cases unordered follow case put dummy wait
end interval meaning b must wait c executed case figure
precede case set wait expires first element interval meaning
b executed c element interval consistent c figure
b unordered case thus seen combination two previous states part
interval wait seen follow case fact b must wait c wait
expires second part including following wait seen precede case
wait expired b executed assignment b corresponds element
part interval ab consistent possible future value assigned c


firossi v enable yorke mith

x


x
c

contingent

c

c tw

c



u v

contingent

c

c tz

p q



u v

p q

b

b



z w

z w

requirement constr
contingent constr
controllable timepoint

requirement constr
contingent constr
controllable timepoint

contingent timepoint

contingent timepoint

regression

b regression

figure regressions dynamicallycontrollable

follow case

wait c executed
wait

execute regardless c

precede case

wait

unordered case

wait fo c executed

execute regardless c

wait

figure resulting ab interval constraint three cases considered
dynamicallycontrollable

dynamicallycontrollable applies rules triangles stpu
regresses possible waits inconsistency found requirement interval becomes
empty contingent interval squeezed stpu dc returns stpu
constraints may waits satisfy intervals contain elements appear
least one possible dynamic strategy stpu given execution
dynamically assigns values executables according current situation
pseudocode execution dc execute shown figure execution
observes time goes occurrence contingent events accordingly
executes controllables controllable b execution triggered live


fiu ncertainty

soft temporal constraint

pseudocode dc execute
input stpu p
perform initial propagation start time point
repeat
immediately execute executable time points
reached upper bounds
arbitrarily pick executable time point x
live enabled yet executed whose waits
satisfied
execute x
propagate effect execution
network execution complete return
else advance current time
propagating effect contingent time points occur
false
figure executes dynamic strategy stpu
current time within bounds enabled executables constrained
happen occurred waits imposed contingent time points b
expired
dc execute produces dynamically consistent schedule every stpu
dynamicallycontrollable reports success morris et al complexity
n r n number variables r number elements interval since
polynomial complexity relies assumption bounded maximum interval size morris et al
conclude dynamicallycontrollable pseudo polynomial dc strong
polynomial complexity presented morris muscettola differs
previous one mainly manipulates distance graph rather constraint
graph stpu complexity n important notice purposes
distance graph produced output possible directly recover
intervals waits stpu produced output original described morris
et al

simple temporal preferences uncertainty stppus
consider temporal would model naturally preferences addition hard
constraints one features uncertainty neither stpp stpu adequate model
therefore propose call simple temporal preferences uncertainty stppus short
intuitively stppu stpp time points partitioned two classes requirement contingent stpu since time points controllable
agent notion consistency stp p replaced controllability
stpu every solution stppu global preference value stpp seek
solution maximizes value satisfying controllability requirements



firossi v enable yorke mith

precisely extend definitions given stpps stpus fit stppus
following way
definition context preferences
executable time point variable x whose time assigned agent
contingent time point variable e whose time assigned external world
soft requirement link rij generic time points ti tj pair hiij fij iij
lij uij lij tj ti uij ti value assigned variable ti
fij iij preference function mapping element interval element
preference set semiring ha
soft contingent link ghk executable point bh contingent point ek pair hihk fhk
interval ihk lhk uhk contains possible durations contingent event
represented bh ek fhk ihk preference function maps element
interval element preference set
types constraints preference function represents preference agent
duration event distance two events however soft requirement
constraints agent control guided preferences choosing values
time points soft contingent constraints preference represents merely desire agent
possible outcomes nature control outcomes noticed
stppus uncertainty modeled stpus assuming complete ignorance
events likely happen thus durations contingent events assumed equally
possible plausible different levels plausibility allowed
state formally definition stppus combines preferences
definition stpp contingency definition stpu
definition stppu simple temporal preferences uncertainty stppu
tuple p ne nc lr lc
ne set executable time points
nc set contingent time points
ha c semiring
lr set soft requirement constraints
lc set soft contingent constraints
note stpps stppus model hard constraints soft constraints
element interval mapped maximal element preference set without
loss generality following assumptions made stpus morris et al assume
two contingent constraints end time point
general ti tj contingent executable time points



fiu ncertainty

soft temporal constraint

complete assignment time points compute global preference
stpps done according semiring soft constraint schema first project
assignment soft constraint obtaining element interval preference
associated element combine preferences obtained constraints
multiplicative operator semiring given two assignments preference best
chosen additive operator assignment optimal assignment
preference better semirings ordering
following summarize definitions given stpus extending directly
stppus
definition given stppu p
schedule complete assignment time points n e nc
sched p set schedules p sol p set schedules p
consistent constraints p see definition section
given schedule p situation usually written set durations contingent constraints
given schedule p control sequence usually written set assignments
executable time points
schedule x x x ne every contingent constraint
ghk lc defined executable bh contingent time point ek ek bh hk
hk duration ghk
projection p corresponding situation stpp obtained p leaving
requirement constraints unchanged replacing contingent constraint g hk soft
constraint h hk hk f hk hk duration event represented g hk
f hk preference associated duration
given projection p indicate sol p set solutions p define
optsol p sol p sol p pref pref set preferences totally ordered indicate opt p preference optimal solution
p
proj p set projections stppu p
strategy map p roj p sched p every projection p p
schedule includes
strategy viable p solution p satisfies soft temporal
constraints thus viable strategy mapping p roj p sol p case
indicate pref p global preference associated schedule p stpp
p
regarding notation case hard constraints given executable time point x write p x
indicate value assigned x p p x indicate durations contingent events
finish prior x p



firossi v enable yorke mith






x



ec

sc






p







u

q

v

sa
requirement constr



contingent constr



contingent timepoint



ea

executable timepoint





figure example stppu earth observing satellites domain
example consider example following scenario earth observing satellites
domain frank et al described section suppose request observing region
interest received accepted collect data instrument must aimed
target images taken might however certain period time
window allocated observation region interest covered clouds earlier
cloud coverage ends better since maximise quality quantity retrieved
data coverage controllable
suppose time window reserved observation units time
start counting time cloud occlusion region interest observable suppose
order observation succeed aiming procedure must start units
starting time ideally units actually begin least time unit
weather becomes observable ideally aiming procedure start slightly cloud
coverage end starts early since instrument activated immediately
aimed clouds might still occlude region image quality poor hand
waits long clouds disappeared precious time
occlusion wasted aiming instrument instead taking images aiming procedure
controlled mission manager take anywhere units time
ideal duration units since short time units would put instrument pressure
long duration units would waste energy
scenario rather tedious describe words compactly represented stppu
shown figure following features
set executable time points sc start clouds sa start aiming ea end aiming
contingent time point ec end clouds
set soft requirement constraints sc sa sa ec sa ea
soft contingent constraint sc ec



fiu ncertainty

soft temporal constraint

fuzzy semiring sfcsp h max min
solution stppu figure schedule sc sa ec ea
situation associated projection contingent constraint sc ec
e control sequence assignment executable time points e
sc sa ea global preference obtained considering preferences
associated projections constraints pref sc sa pref
sa ec pref sa ea pref sc ec preferences
must combined multiplicative operator semiring min
global preference another solution sc sa ec ea
global preference thus better solution according semiring ordering since
max

controllability preferences
consider possible extend notion controllability accommodate preferences general interested ability agent execute time points
control subject constraints best possible way respect preferences
transpires meaning best possible way depends types controllability
required particular concept optimality must reinterpreted due presence uncontrollable events fact distinction nature events induces difference
meaning preferences expressed mentioned previous section scenario given certain level desirability expressing much agent likes
situation agent often several choices events controls consistent
scenario choices might preferable respect others expressed
preferences requirement constraints information guide agent
choosing best possible actions take thus concept optimality relative
specific scenario final preference complete assignment overall value combines
much corresponding scenario desirable agent well agent reacted
scenario
concepts controllability propose thus possibility
agent execute events control best possible way given actual situation acting optimal way seen lowering preference given uncontrollable
events
strong controllability preferences
start considering strongest notion controllability extend notion taking
account preferences two ways obtaining optimal strong controllability strong controllability preference level see first notion corresponds stronger
requirement since assumes existence fixed unique assignment executable timepoints optimal every projection second notion requires fixed assignment
optimal projections maximum preference value greater
yield preference cases



firossi v enable yorke mith

definition optimal strong controllability stppu p optimally strongly controllable
osc iff viable execution strategy
p x p x p p p roj p every executable time point x
p optsol p p p roj p
words stppu osc fixed control sequence works possible
situations optimal definition optimal means
assignment agent choose executable time points could yield higher preference
situation since powerful restriction mentioned instead look
reaching certain quality threshold
definition strong controllability stppu p strongly controllable sc
preference iff viable strategy
p x p x p p p roj p every executable time point x
p optsol p p p roj p optsol p pref
pref p otherwise
words stppu sc fixed control sequence works situations optimal schedules situations optimal preference level
projection schedule preference smaller cases
weak controllability preferences
secondly extend similarly least restrictive notion controllability weak controllability requires existence solution possible situation possibly different one situation
extend definition requiring existence optimal solution every situation
definition optimal weak controllability stppu p optimally weakly controllable
owc iff p p roj p strategy p optimal solution p
words stppu owc every situation control sequence
optimal schedule situation
optimal weak controllability stppu equivalent weak controllability corresponding stpu obtained ignoring preferences formally prove section
reason projection p least one solution must optimal solution
moreover stppu underlying stpu wc hence
make sense define notion weak controllability
dynamic controllability preferences
dynamic controllability dc addresses ability agent execute schedule choosing
incrementally values assigned executable time points looking past
preferences available desirable agent acts way guaranteed
consistent possible future outcome way ensures absence regrets
w r preferences


fiu ncertainty

soft temporal constraint

definition optimal dynamic controllability stppu p optimally dynamically controllable odc iff viable strategy p p p roj p executable
time point x
p x p x p x p x
p optsol p p optsol p
words stppu odc exists means extending current partial control
sequence complete control sequence future way resulting schedule
optimal soften optimality requirement preference reaching
certain threshold
definition dynamic controllability stppu p dynamically controllable dc
iff viable strategy p p p roj p every executable time point x
p x p x p x p x
p optsol p p optsol p optsol p pref
optsol p pref
pref p pref p otherwise
words stppu dc means extending current partial control
sequence complete sequence optimality guaranteed situations preference
projections resulting dynamic schedule preference smaller

comparing controllability notions
consider relation among different notions controllability stppus
recall stpus sc dc w c see section start giving similar
holds definitions optimal controllability preferences intuitively
single control sequence optimal situations clearly executed
dynamically assigning values control sequence current time reaches
moreover whatever final situation know consistently assign values
executables looking past assignments never backtrack preferences
clear every situation least optimal solution
theorem stppu p osc odc odc owc
proofs theorems given appendix opposite implications theorem
hold general fact sufficient recall hard constraints special case soft
constraints use known stpus morris et al
examples consider following two defined fuzzy semiring figure shows
stppu owc odc fact easy see assignment c
projection stppu consistently extended assignment b however
section stppu depicted odc


firossi v enable yorke mith









x











c

contingent

























p

q

requirement constr

u

b

contingent constr







contingent timepoint
executable timepoint

figure stppu owc odc









c









b



requirement constr
contingent constr
contingent timepoint
executable timepoint

figure stppu odc osc







v

fiu ncertainty

soft temporal constraint

figure instead shows odc stppu osc b two executable timepoints c contingent time point two projections say p p corresponding respectively point point ac interval optimal preference level
fact ha c b solution p preference ha c b
solution p preference stppu odc fact dynamic strategy
assigns b value c occurs value c occurs assuming assigned
however single value b optimal scenarios
similar apply case controllability following formal treatment shows
theorem given preference level stppu p sc dc
converse hold general example consider stppu shown
figure assuming stppu dc shown
sc
another useful controllability property holds given preference level say
holds stated following theorem
theorem given stppu p preference level p sc resp dc sc
resp dc
let us consider case preference set totally ordered eliminate
uncertainty stppu regarding contingent time points executables obtain
stpp stpp solved obtaining optimal preference value opt preference level
opt useful relate optimal controllability controllability stated following
theorem stppu optimally strongly dynamically controllable satisfies
corresponding notion controllability opt
theorem given stppu p defined c semiring totally ordered preferences let opt
maxt sol p pref p osc resp odc iff opt sc resp opt dc
owc formally prove section stppu owc iff stpu obtained
ignoring preference functions wc relation min controllability
controllability without preferences recall considering elements intervals mapped
preference min coincides definition considering underlying stpu obtained
ignoring preference functions stppu thus min x holds iff x holds x
sc dc
figure summarize relationships holding among controllability notions
preferences totally ordered instead partially ordered relationships
opt x min x x controllability notion make sense fact
partially ordered case several optimal elements several minimal elements
one

determining optimal strong controllability strong controllability
next sections give methods determine levels controllability hold stppu
strong controllability fits line scheduling allowed sense fixed optimal
control sequence computed execution begins reasonable


firossi v enable yorke mith

osc


odc

opt sc

opt dc

sc


dc

min sc

min dc



owc

sc


dc


wc

figure comparison controllability notions total orders min smallest preference
constraint opt min
knowledge possible outcomes agents preferences
situation requires us fixed way execute controllable events consistent
possible outcome uncontrollables give best possible final preference
best sc
described section checks whether stppu osc osc
detect return highest preference level
sc
present rely following tractability assumptions
inherited stpps underlying semiring fuzzy semiring f csp defined section preference functions semi convex set preferences discretized finite number elements according given granularity
best sc simple idea preference level finds
control sequences guarantee strong controllability projections optimal
preference optimality optimal preference keeps
control sequences preference levels
pseudocode shown figure takes input stppu p line
first step lowest preference min computed notice efficiently analytical
structure preference functions semi convexity exploited
line stpu obtained p cutting preference level min considered
stpu obtained applying function min cut stppu g g p general
cut p stpu q e temporal uncertainty preferences defined
follows
q variables domains p
every soft temporal constraint requirement contingent p variables x xj
say c hi f q simple temporal constraint variables defined
x f x
notice semi convexity preference functions guarantees set x f x
forms interval intervals q contain durations requirement contingent events
local preference least
notice function cut applied stpps stppus first case output stp
latter case stpu notice cut known concept fuzzy literature



fiu ncertainty

soft temporal constraint

pseudocode best sc
input stppu p
compute min
stpu qmin min cut p
stronglycontrollable qmin inconsistent write min sc stop
else
stp p min stronglycontrollable qmin
preference min
bool oscfalse bool scfalse


stpu q cut p

pc q inconsistent osctrue

else

stronglycontrollable pc q inconsistent sc true

else
n

stp p p
stronglycontrollable pc q


p inconsistent sc true

else





osc false sc false
osc true write p osc
sc true write p sc
se earliest solution p sl latest solution p
return p se sl

figure best sc tests stppu osc finds highest
stppu p sc



firossi v enable yorke mith

stpu qmin obtained checks strongly controllable stp
obtained applying stronglycontrollable vidal fargier stpu q min
consistent according theorem hope higher preference stop line reporting stppu sc thus osc well
instead inconsistency found best sc stores resulting stp lines proceeds
moving next preference level min line
remaining part lines three steps performed preference
level considered
cut stppu p obtain stpu q line
apply path consistency q considering stp pc q line
apply strong controllability stpu pc q line
let us consider last two steps detail
applying path consistency stpu q means considering stp treating contingent constraints requirement constraints denote pc enforcing
path consistency temporal network see section dechter et al returns
minimal network leaving intervals values contained least one solution
allows us identify situations correspond contingent durations locally
preference consistent least one control sequence elements q
words applying path consistency q leaves contingent intervals durations
belong situations corresponding projections optimal value least
test gives inconsistency means given stpu seen stp solution
hence projections corresponding scenarios stppu p optimal preference
line
third last step applies stronglycontrollable path consistent stpu pc q reintroducing information uncertainty contingent constraints recall
rewrites contingent constraints terms constraints executable time points
stpu strongly controllable stronglycontrollable leave requirement intervals
elements identify control sequences consistent possible situation case
applying stronglycontrollable pc q control sequences pc q
consistent possible situation pc q
however stpu pc q strongly controllable control sequences found might
optimal scenarios optimal preference lower order keep
control sequences guarantee optimal strong controllability preference levels
stp obtained stronglycontrollable pc q intersected corresponding stp found
previous step preference level p line recall given two
two stps p p defined set variables stp p p p
variables p p temporal constraint c ij c ij c ij intersection
corresponding intervals p p intersection becomes empty constraint
stp obtained inconsistent conclude control sequence guarantee
strong controllability optimality preference level time preferences
writing min mean next preference level higher min defined terms granularity
preferences interval



fiu ncertainty

soft temporal constraint

table table row corresponds preference level represents intervals
stpu q obtained cutting stppu figure level
stpu

sc ec

sc sa

sa ec

q
q
q
q
q
q






















table table row corresponds preference level represents intervals
stpu pc q obtained applying path consistency stpus table
stpu


pc q
pc q
pc q
pc q
pc q
pc q

sc ec

sc sa

sa ec






















line instead stp obtained consistent best sc considers next
preference level performs three steps
output stp p obtained iteration previous one
causing execution stop lines two solutions e sl stp
shortly contains control sequences guarantee sc
highest preference level cutting gives consistent stppu
osc solutions provided respectively earliest e latest sl
solutions p fact proved dechter et al mentioned section since
p minimal earliest resp latest solution corresponds assigning variable
lower resp upper bound interval constraint defined x variable
indicated procedures earliest solution latest solution let us recall
every solution found p without backtracking
formally proving correctness best sc give example
example consider stppu described example depicted figure simplicity
focus triangular sub variables sc sa ec example min
table shows stpus q obtained cutting preference level
table shows applying path consistency line stpus shown
table seen stpus consistent finally table shows stps defined
executable variables sc sa obtained applying stronglycontrollable
stpus table



firossi v enable yorke mith

table table row corresponds preference level represents intervals
stp stronglycontrollable pc q obtained applying strong controllability check
stpus table
sc sa

stp


stronglycontrollable pc q
stronglycontrollable pc q
stronglycontrollable pc q
stronglycontrollable pc q
stronglycontrollable pc q
stronglycontrollable pc q








looking tables easy deduce best sc stop preference level
fact looking carefully table see stp p consists interval
constraint sc sa stronglycontrollable pc q consist interval
constraint obviously intersecting two gives inconsistency causing condition
line figure satisfied
conclusion executing best sc example depicted figure sc
osc let us see correct without loss generality assume sc
assigned value last line table observe value assigned
sa optimal scenarios optimal preference ec assigned
however assigning sa optimal ec happens since scenario
optimal preference value e g sa assigned case would global
preference given constraint sa ec
properties best sc
prove best sc correctly identifies whether stppu p osc
finds highest preference level p sc let us first consider events
best sc stops
event stronglycontrollable q min inconsistent line
event pc q returns inconsistency line
event pc q consistent strongly controllable line
event pc q strongly controllable however intersection stp obtained
stronglycontrollable pc q stp obtained previous preference level
p inconsistent line
first notice terminates
theorem given stppu p finite number preference levels execution best sc p terminates
recall fuzzy semiring context global preference assignment computed taking minimum
preference assigned projections



fiu ncertainty

soft temporal constraint

intuitively one termination events occur preference levels exhausted
next let us best dc sound complete checking stppu
osc finding highest preference level sc
said cutting stppu p preference level gives stpu q
moreover every situation l q seen situation p
fj j j implies every projection p p roj q stp corresponds projection p p roj p stpp situations q follows
write p interpreted stp seen projection q
stpp seen projection p following lemmas state properties
relate solutions projections two contexts without preferences
theorem consider stppu p hne nc lr lc sf csp preference level consider stpu q hne nc l r l c obtained cutting p stpu pc q hne nc
l r l c
situation p p p roj pc q iff optp p
every control sequence solution stronglycontrollable pc q iff p
proj pc q sol p pref
first part theorem states applying path consistency stpu q remove
situations cannot extended complete solutions q thus correspond projections optimal preference strictly less second part lemma considers
stp obtained applying stronglycontrollable path consistency particular stated
solutions projections pc q solutions preference
least notice implies optimal solutions projections p
optimal preference exactly might optimal however projections
optimal preference strictly greater
theorem get following corollary clarifies relation
stpu obtained cutting stppu preference level sc stppu
corollary consider stppu p preference level assume situation p
opt p p corresponding projection stpu pc q obtained
cutting p applying path consistency sc p sc
consider preference levels min compute corresponding
stps say min stp identify assignments executable variables guaranteeing strong controllability optimality level intersecting stps keep
common solutions thus guarantee strong controllability optimality
situations p optimal preference smaller equal
theorem consider stppu p preference levels min assume
corresponding stps min obtained cutting p preference levels n
min
enforcing strong controllability consistent sol p p min
iff p p roj p sol p opt p pref opt p otherwise
pref


firossi v enable yorke mith

consider events best sc stop prove
strong controllability properties hold
theorem execution best sc stppu p stops due occurrence
event line p sc
case underlying stpu obtained stppu ignoring preference
functions strongly controllable since cutting higher preferences give even smaller
intervals hope controllability level execution halt
theorem execution best sc stppu p stops due occurrence
event line preference level
opt maxt sol p pref
p osc control sequence solution stp p opt returned iff
optimal scenario p
event occurs cuts stppu given preference level stpu
obtained seen stp inconsistent particular means projection p roj p
optimal preference equal greater preference level however level
reached previous level assignments guaranteeing sc optimality
found moreover previous level must highest preference solution
p opt p means opt p sc established theorem equivalent
osc
theorem execution best sc stppu p stops due occurrence
event line event line preference level p osc sc solution stp p returned p p roj p
sol p opt p pref opt p otherwise pref
intuitively reaches stops line projections p
optimal preference corresponding set situations sc notice exactly
situation considered corollary instead stops line set situations sc
none assignments guaranteeing sc situations optimal
situations preference levels cases sc however assuming
first level execution stopped sc
conclude section considering complexity best sc
theorem determining osc highest preference level sc stppu n
variables preference levels achieved time n
notice cannot use binary search preference levels contrast
stpps since correctness procedure intersection obtained
given preference level obtained preference levels
theorem allows us conclude cost adding preferences thus considerable expressive power low fact complexity still polynomial grown
factor equal number preference levels


fiu ncertainty

soft temporal constraint

determining optimal weak controllability
optimal weak controllability least useful property practice property
adding preferences smallest impact terms expressiveness owc requires
existence optimal solution every possible scenario equivalent requiring
existence solution every situation stated following theorem
theorem stppu p owc iff stpu q obtained simply ignoring preference functions constraints wc
ignoring preference functions mean mapping soft constraint hi f hard
constraint hii defined variables theorem allows us conclude check
owc enough apply weaklycontrollable proposed vidal ghallab
described section instead given scenario optimal
solution projection stpp p roj one solvers described rossi et al

let us consider example section showed stpu obtained cutting
stppu figure preference level min strongly controllable since sc implies wc
conclude stpu weakly controllable thus stppu figure optimally
weakly controllable

determining optimal dynamic controllability dynamic controllability
optimal dynamic controllability odc interesting useful property practice
described section many industrial applications solved dynamic fashion
making decisions response occurrences events execution plan
true space application domains mission handled decomposing
set scheduling subproblems depend occurrence semipredictable contingent events frank et al
section describe tests whether stppu p odc odc
finds highest p dc presented bears similarities
best sc sense decomposes stpus corresponding different preference
levels performs bottom search dynamically controllable space
notice attractive practice since output minimal form
assignments belonging least one optimal solution left domains
executable time points minimal form given input execution
describe assigns feasible values executable time points dynamically
observing current situation e values contingent time points occurred
necessary sufficient condition testing odc
define necessary sufficient condition odc defined intervals
stppu propose tests condition
sound complete testing odc
first claim given stppu dynamic controllability stpus obtained
cutting stppu applying pc every preference level necessary sufficient
condition optimal dynamic controllability given stppu


firossi v enable yorke mith

theorem given stppu p consider preference level stpu q obtained
cutting p consistent stpu pc q dc p odc dc

unfortunately condition sufficient since stppu still odc even
every preference level stpu obtained pc dc example shown figure
described
example another potential application stppus scheduling aircraft analysis airborne
particles coggiola shi young example consider aircraft equipped
instruments small ice detector nevzorov probe used discriminate liquid ice given types clouds analysis important prediction
evolution precipitatory systems occurrence severity aircraft icing field
hogan brown illingworth choularton kaye hirst greenaway instruments need
uncertain amount time determine predominant state liquid ice
activated inside cloud
example shown figure consider sensing event represented variables
c start time maneuver aircraft represented variable b due
instruments function aircraft maneuver impact analysis example constraint ac
represents duration sensing event preference function fact
earlier predominant state determined better constraint ab instead fact
maneuver start soon possible example due time constraints imposed
aircrafts fuel availability constraint bc fact maneuver ideally start
sensing event ended
let us call p stppu depicted figure order determine highest preference level
schedule p example use chop solver rossi et al
highest preference level cutting functions gives consistent stp interval
ab ac interval bc consistent stp optimal solutions p regarded
stpp global preference
consider stpus obtained cutting every preference level highest
lowest minimum preference constraint p min easy see
stpus obtained cutting p applying pc preference levels
dc however p odc fact dynamic assignment b belongs optimal
solution projections corresponding elements x executing b
cause inconsistency c happens since doesnt belong u v
elaborate example sufficient condition odc consider intervals
ab p q waits c obtained applying dc checking preference
level shown table
look first last intervals resp way assign
value b time induces preference constraints ab bc c occurs
satisfies wait c ensuring consistency c occurs depends
fact intersection p q e sub interval p q satisfies
c empty
claim non emptiness intersection together dc stpus
obtained cutting preference levels necessary sufficient condition


fiu ncertainty

soft temporal constraint

table table row corresponds preference level represents corresponding
interval wait ab constraint stppu shown figure


p q

wait















c
c
c
c
c

odc following section describe tests condition
section prove sound complete w r testing odc
finding highest level dc
best dc
best dc echoes section checking optimal strong controllability
done best sc considers stpus obtained cutting stppu preference
levels preference level first tests whether stpu obtained considering stp
path consistent checks path consistent stpu obtained dynamically controllable
proposed morris et al thus control sequences guarantee
dc scenarios different optimal preferences found next step select
sequences satisfy dc requirement optimal preference levels
pseudocode given figure best dc takes input stppu p line
computes minimum preference min assigned constraint line
min known stpu obtained cutting p min computed line
stpu seen stppu p variables intervals constraints p
preferences stpu denoted q min given input
dynamicallycontrollable qmin dynamically controllable p odc dc min hence shown theorem detects
inconsistency halts line instead q min dynamically controllable stpu
returned output dynamicallycontrollable saved denoted p min line notice
stpu minimal sense intervals elements belonging
least one dynamic schedule morris et al addition since preferences
elements requirement intervals well belonging least one dynamic schedule
part optimal schedules scenarios projection optimal preference equal
min
line preference level updated next value ordering considered according given preference granularity line two boolean flags odc dc
defined setting flag odc true signal established odc setting flag dc true signal found highest
preference level stppu dc
fact preference least min definition



firossi v enable yorke mith

pseudocode best dc
input stppu p
compute min
stpu qmin min cut p
dynamicallycontrollable q min inconsistent write min dc stop
else
stp p min dynamicallycontrollable qmin
preference min
bool odc false bool dc false


stpu q cut p

pc q inconsistent odc true

else

dynamicallycontrollable pc q inconsistent dc true

else

stpu dynamicallycontrollable pc q

merge p fails dc true

else

stpu p merge p








odc false dc false
odc true write p odc
dc true write p dc
return stppu f resulting stppu p p

figure tests stppu odc finds highest stppu
p dc



fiu ncertainty

soft temporal constraint

pseudocode merge
input stpu stpu
stpu p
constraint ab b executables p
define interval p q wait
given interval p q wait
interval p q wait follows
p p precede precede
p max p p q min q q max
q p return failed
p q p q unordered unordered precede
max q min q q
q return failed
output p
figure merge
lines contain main loop short time loop executed
cuts p current preference level looks cutting produced path consistent stpu
seen stp checks path consistent version stpu dynamically
controllable test passed stpu created merging current
previous levels
describe step detail line cuts p current preference level line
consistency stpu q tested applying pc pc returns inconsistency
conclude p schedule preference greater
next step check stpu pc q dc notice required preference
levels optimal level order p odc order p dc
theorem applying dynamicallycontrollable detects pc q dynamically controllable sets flag dc true instead pc q dynamically
controllable resulting minimal stpu saved denoted line
line output procedure merge tested procedure used combine
preference preference applying stpu obtained
end previous iteration p stpu pseudocode merge
shown figure describe detail shortly inconsistency found
stpu obtained merging procedure denoted p line preference level
considered line
lines take care output lines write output p odc
highest dc line final stppu f given output obtained
stpu p stpu obtained last iteration cycle
completed success e reached line function resulting stppu restores
preferences intervals p setting p
requirement constraints f contain elements corresponding dynamic schedules
optimal p odc optimal scenarios corresponding
projections optimal preference guarantee global preference level least
others p dc


firossi v enable yorke mith

pseudocode procedure merge given figure input consists two stpus
defined set variables describing merge works assume given
input two stpus obtained cutting two stppus preference levels
applying hypothesis success pc dynamicallycontrollable line figure
line merge initializes stpu given output formally proven theorem due semi convexity preference functions
p roj p roj notice merge leaves contingent constraints unaltered thus
projection optimal preference contained set projections p
merge considers every requirement constraint defined two executables say b
respectively since assuming dynamicallycontrollable
applied stpus waits intervals figure illustrates three
cases interval ab wait expires upper bound interval
figure execution b must follow execution every contingent time point
follow case wait coincides lower bound interval figure b
execution b must precede contingent time point precede case finally shown
figure c wait within interval b unordered case least
contingent time point say c
merge considers case corresponding intervals line
intervals respectively indicated p q wait p q wait
merge obtains interval p q wait replace old wait
interval p q contain values projections ab constraint
optimal solution stpp corresponding situation wait wait
respected dynamic execution order guarantee solution obtained
optimal projection corresponding final scenario preference
due semi convexity preference functions cannot case
ab follow precede case unordered case
ab follow case precede case
ab precede case follow case
means cases considered
ab follow case
ab precede case
ab unordered case precede unordered case
first two cases ab interval left formal motivation
contained proof theorem however informally say ab interval
already satisfies desired property
lines case ab precede case stpus examined b
occur contingent time point values p q resp p q
assignments b consistent future occurrence c mapped preference resp clearly intersection taken order lower



fiu ncertainty

soft temporal constraint

preference c occurs preference line considers event intersection empty means common assignment b given
optimal scenarios optimal preference scenarios optimal preference
lines two scenarios considered ab unordered case
precede case ab unordered case stpus figure
shows second case merge takes union parts intervals preceding wait
intersection parts following wait intuition underlying execution
b identifying element p p preceded execution
contingent time points wait means b executed
contingent time point c time c executed say c
associated preference say fac tc constraint ac stppu p known propagation
information allow us identify elements p resp p
preference fac tc thus optimal assignment b means elements
interval p interval p eligible chosen example f ac tc
might values b preference equal optimal case would
c occurred time fac tc since case know
preference c occurred propagation step prune non optimal choices b
short leaving elements allows flexibility propagation step moreover
proven theorem p p
instead consider elements interval q know identify assignments
b executed regardless c happen however know happen
preference greater means must take intersection part
corresponding one q order guarantee consistency optimality
c occurs time preference easy way see interval q
may contain elements p mapped preference elements optimal
scenarios c happens time associated preference ac constraint
however cannot optimal scenarios c occurring time preference
line handles case two parts intervals following waits
empty intersection case optimality cannot guaranteed neither level
particular contingent events occur waits expire
properties best dc
best dc sound complete testing odc finding
highest preference level stppu given input dc recall
follow rely tractability assumptions requiring semi convex preference
functions fuzzy semiring h max min underlying structure
let us consider stppu p stpus defined previous section
stpu p merge contingent constraints requirement constraints defined merging procedure start proving merge sound
complete testing existence viable dynamic strategy common
stpus optimal projections optimal preference equal
recall projections coincide projections stppu p optimal preference see
theorem due semi convexity preference functions p roj p roj



firossi v enable yorke mith

interval ab
stpu

interval ab
stpu








p



q







p

q



merged interval ab




p



b



c

q

figure merging two intervals unordered case
theorem consider stppu p stpus obtained cutting p respectively
level applying pc without finding inconsistencies dynamicallycontrollable
success consider stpu p merge
merge fail
p dynamically controllable
viable dynamic strategy every projection p p roj p
opt pi opt pi p pref pi opt pi
otherwise pref pi
following theorem extends merging procedure two preference
levels particular preference levels smaller equal given threshold
theorem consider stppu p every preference level define stpu obtained
cutting p applying pc dynamicallycontrollable assume
dc consider stpu p
p merge merge merge merge min min min
min minimum preference constraint p assume applied merge
returned consistent stpu viable dynamic strategy p
p roj p opt pi pi optimal solution pi otherwise pref pi
theorem allows us prove main informally best dc applies merge
lowest preference highest threshold returned becomes inconsistent projection stppu optimal solution higher
theorem conclude stppu odc otherwise dc
let us start enumerating conditions best dc terminates


fiu ncertainty

soft temporal constraint

event best dc stops stpu obtained level min dc line
event best dc exits reached preference level stpu seen
stp path consistent line
event best dc stops reached preference level path consistent stpu dynamically controllable line
event best dc stops procedure merge found inconsistency line
following theorem shows execution best dc terminates
theorem given stppu p execution best dc p terminates
best dc considers preference level starting lowest moving time
one level according granularity preference set stops inconsistency
found levels assumed finite precessed
ready prove soundness completeness best dc split proof
three theorems considering different terminating condition first theorem considers
case underlying stpu obtained p ignoring preferences dc
case output stppu dc level thus odc
theorem given stppu p input best dc terminates line iff p
dc
next theorem considers case highest preference level reached success
merging procedure highest optimal preference projection p
case odc
theorem given stppu p input best dc terminates line iff p odc
last considers case least projection optimal preference strictly higher highest reached success merging procedure case
odc best dc found highest level stppu dc
theorem given stppu p input best dc stops lines preference level iff p
dc odc
mentioned section morris muscettola proven checking dc
stpu done n n number variables revised processes distance graph stpu rather constraint graph maintains additional
information form additional labeled edges correspond waits main feature
noted earlier strongly polynomial determining
dynamic controllability stpu important context stress fact
output two presented morris et al morris muscettola
essentially fact easy obtain polynomial time n constraint graph
waits produced dynamicallycontrollable starting distance graph produced
vice versa



firossi v enable yorke mith

theorem complexity determining odc highest preference level dc
stppu n variables bounded number preference levels time n
complexity given theorem unexpectedly good fact shows cost
adding considerable expressive power preferences stpus factor equal
number different preference levels implies solving optimization
time controllability remains p number different preference levels
bounded
execution
execution propose similar stpus presented morris et al
described section shown figure course execution
stppus take input stppu best dc successfully applied
line figure performs initial propagation starting point main
difference stppu execution stpu morris et al
definition propagation involves preferences
definition soft temporal propagation consider stppu p variable p
value vy propagating assignment v p means
constraints cxy involving x already assigned value v x x
replace interval cxy interval h vy vx vy vx
cut p preference level minx fcxy vy vx
call odc execute dc execute propagation defined
definition assume apply odc execute odc dc stppu p best dc
applied given time preference partial schedule
know p odc dc theorem theorem execution
assigning values assume contingent event occurs
lowers preference propagated stppu cut preference
level execution assign values theorem
theorem waits imposed assignments executables
optimal situation optimal preference situations
assignments guarantee preference least


section described relations notions controllability general strategy
given stppu first property consider osc holds solution obtained feasible
optimal possible scenarios however osc strong property holds infrequently
stppu osc still need control sequence execution begins
best sc best solution consistent possible future situations
commonly dynamic controllability useful control sequence needs
known execution begins odc ideal notice section
stppu may osc still odc however stppu even odc



fiu ncertainty

soft temporal constraint

best dc give dynamic solution highest preference recall shown
section given preference level sc implies dc vice versa thus
may given stppu sc dc sc means fixed
way assign values executables optimal situations optimal
preference give preference least cases hand dc
implies solution obtained dynamically odc execute optimal
situations best solution preference yield preference
cases thus dynamic strategy guarantee optimality situations
higher preference others
last possibility check owc least allow executing agent know
advance situation solution moreover situation revealed
execution begins solvers stpps described rossi et al
allow us optimal assignment scenario

related work
section survey work regard closely related temporal uncertainty
studied defined different ways according different contexts
used
start considering work proposed vila godo propose fuzzy temporal constraint networks stps interval constraint mapped
possibility distribution fact handle temporal uncertainty possibility theory zadeh
term uncertainty describe vagueness temporal information available
aim model statements called less hour ago uncertainty
lack precise information temporal event goal thus completely different
fact scenario agent must execute activities certain times
activities constrained temporal relations uncertain events goal way
execute agents control way consistent whatever nature decides
future
vila godo instead assume imprecise temporal information events
happened past aim check information consistent
contradictions implied study entailed set constraints order model
imprecise knowledge possibilities used every element interval mapped
value indicates possible event certain thus another major difference
consider preferences possibilities hand
work presented allow express information possible probable value
contingent time point one lines want pursue future
moreover vila godo concerned classical notion consistency
consistency level rather controllability
another work related way handle uncertainty badaloni giacomin
introduce flexible temporal constraints soft constraints used express preferences
among feasible solutions prioritized constraints used express degree necessity
constraints satisfaction particular consider qualitative allen style temporal relations
associate relation preference uncertainty deal time
occurrence event whether constraint belongs constraint



firossi v enable yorke mith

model information coming plausibility information coming preferences
mixed distinguishable solver words possible say whether
solution bad due poor preference relation due violating constraint
high priority instead uncertainty preferences separated compatibility
uncertain event change preference assignment executable
robustness temporal uncertainty handled intrinsically different degrees controllability
dubois hadjali prade b authors consider fuzziness uncertainty temporal reasoning introducing fuzzy allen relations precisely present extension
allen relational calculus fuzzy comparators expressing linguistic tolerance dubois
et al b want handle situations information dates relative positions
intervals complete reason interest describing precise manner example one wants speak terms approximate equality proximity
rather terms precise equality secondly want able deal available information pervaded imprecision vagueness uncertainty framework presented
restrict uncertainty event occur within range hand put
complete ignorance position would equivalent context dubois
et al b setting possibilities contingent events moreover dubois et al
b allow preferences address controllability instead consider similarly
vila godo notions consistency entailment first notion checked
computing transitive closure fuzzy temporal relations inference rules appropriately
defined second notion checked defining several patterns inference
another work addresses temporal uncertainty presented dubois fargier
prade dubois fargier prade work preferences activities
ill known durations classical job shop scheduling handled fuzzy
framework three types constraints precedence constraints capacity constraints
due dates release time constraints order model unpredictable events use possibility theory authors mention dubois et al possibility distributions viewed
modeling uncertainty well preference see dubois fargier prade everything depends whether variable x possibility distribution defined controllable
thus dubois et al distinguish controllable uncontrollable variables however allow specify preferences uncontrollable events preference functions
contingent constraints would interpreted possibility distributions framework
sense work complementary assume constraint possibility distribution
contingent events equal allow representation information
less possible values hand allow specify preferences uncontrollable events contrary allow put possibility distributions contingent events
preferences
finally dubois et al scheduling uncertain durations
formally expressed kind constraints involving call flexible
durations e durations fuzzy preferences however interpretation quite different
case flexible durations fuzzy information comes specifications preferences
represents possible values assigned variable representing duration
case imprecisely known durations fuzzy information comes uncertainty real
value durations formal correspondence two constraints close
authors distinguish among describing solving procedure


fiu ncertainty

soft temporal constraint

solve starting times activities activities take place within
global feasibility window whatever actual values unpredictable durations clearly
equivalent optimal strong controllability address dynamic
weak controllability preferences

summary future work
defined formalism model quantitative temporal constraints
preferences uncertainty generalized formalism three classical notions
controllability strong weak dynamic focused tractable class
developed check presence properties
work advances state art temporal reasoning uncertainty since provides
way handle preferences context select best solution rather feasible one
presence uncontrollable events moreover shows computational properties
controllability checking change adding preferences particular dynamic
controllability still checked polynomial time considered class producing dynamically temporal plans uncertainty optimal respect preferences
among future directions want pursue within line first deeper
study methods adding preferences different fuzzy ones notice
framework proposed able represent kind preference within
soft constraint framework however apply fuzzy preferences semiconvex functions particular would consider impact design complexity
uncontrollable events underlying preference structures
weighted probabilistic semiring semirings characterized non idempotent
multiplicative operators applying constraint propagation bistarelli
et al path consistency constraints thus search propagation techniques
adapted environment featuring uncertainty well noticed
peintner pollack finding optimal solutions stps preferences
weighted semiring proposed another interesting class preferences utilitarian
ones context preference represents utility goal maximize sum
utilities preferences used temporal context without uncertainty example
morris morris khatib ramakrishnan bachmann
recently another handling temporal uncertainty introduced tsamardinos tsamardinos pollack ramakrishnan probabilistic simple temporal pstps similar ideas presented lau ou sim pstp framework
rather bounding occurrence uncontrollable event within interval stpus
probability distribution describing event likely occur defined entire set
reals stpus way solved depends assumptions made regarding
knowledge uncontrollable variables particular define static scheduling
optimization equivalent finding execution satisfying sc stpus
dynamic scheduling optimization equivalent finding dynamic execution strategy
context stpus framework optimal means highest probability
satisfying constraints preferences considered framework believe
would interesting add preferences first step could consists keeping
strategy separately global preference probability success way



firossi v enable yorke mith

could use existing frameworks handling two aspects order strategies
giving priority preferences thus taking sense risky attitude contrary
giving priority probabilities adopting cautious attitude step direction
recently proposed morris morris khatib yorke smith however authors
rather actually extending notions consistency pstps handle preferences consider
inducing preferences probabilities contrast preliminary advanced pini
rossi venable
focused attention non disjunctive temporal
one interval per constraint would consider adding uncertainty disjunctive temporal stergiou koubarakis consider scenarios
preferences uncertainty polynomial even without preferences uncertainty shown cost adding preferences small peintner pollack
hope hold environments uncertainty well surprisingly
uncertainty disjoint temporal considered yet although easy see
allowing multiple intervals constraint form uncontrollability thus plan
start defining dtpus preliminary venable yorke smith merge
existing one dtpps
extending conditional temporal framework proposed tsamardinos vidal
pollack b topic interest us model boolean formula attached
temporal variable formulae represent conditions must satisfied order
execution events enabled framework uncertainty temporal
variables executed believe would interesting extend order
allow conditional preferences allowing preference functions constraints different
shapes according truth values formulas occurrence event
time would provide additional gain expressiveness allowing one express dynamic
aspect preferences change time

appendix
theorem stppu p osc odc odc owc
proof let us assume p osc viable execution strategy p p
p roj p every executable time point x p x p x p optsol p
p optsol p thus particular p x p x every pair f projections
p x p x allows us conclude p osc odc
strategy witness osc witness odc
let us assume p odc particular viable dynamic strategy
p p roj p p optimal solution p clearly means every projection
least optimal solution thus p owc
theorem given preference level stppu p sc dc
proof assume p sc viable strategy p x p x
p p p roj p every executable time point x p optimal solution
projection p optimal solution p preference pref p
otherwise


fiu ncertainty

soft temporal constraint

thus p x p x pairs projections p p p x
p x implies p dc
theorem given stppu p preference level p sc resp dc sc
resp dc
proof p sc viable strategy p x p x p p
p roj p every executable time point x p optimal solution p
optimal solution p preference pref p otherwise course
set projections optimal solution preference included
projections optimal solution preference moreover projections
pz pref pz implies pref pz since similarly dc
theorem given stppu p let opt max sol p pref p osc resp odc iff
opt sc resp opt dc
proof comes directly fact p p roj p opt pi opt
least projection pj opt pj opt
theorem given stppu p finite number preference levels execution best sc p terminates
proof consider stppu p optimal preference value opt max sol p pref
highest preference assigned solutions definition qopt consistent
means reaches level opt next preference level higher opt
granularity preferences condition line satisfied execution
halt looking lines see one events cause execution
terminate occurs preference level incremented line since finite number
preference levels allows us conclude terminate finite number
steps
theorem consider stppu p hne nc lr lc sf csp preference level consider stpu q hne nc l r l c obtained cutting p stpu pc q hne nc
l r l c
situation p p p roj pc q iff optp p
every control sequence solution stronglycontrollable pc q iff p
proj pc q sol p pref
proof prove item theorem
consider situation p p roj pc q since pc q path consistent consistent partial assignment e g defined extended complete
consistent assignment say pc q moreover sol p pref
since preference functions semi convex every interval pc q subinterval
corresponding one q thus opt p p consider situation
opt p implies sol p pref since


firossi v enable yorke mith

fuzzy semiring happens iff min cij lr lc fij cij thus must
fij cij cij lr lc thus cij c ij c ij l r l c
implies p p roj q moreover since consistent solution p q
p p roj pc q
construction sol iff p p roj pc q sol p
sol pc q notice fact sol pc q implies pref
corollary consider stppu p preference level assume situation p
opt p p corresponding projection stpu pc q obtained
cutting p applying path consistency sc p sc
proof item theorem get p projection p opt p
iff p p roj pc q thus complete assignments controllable contingent
variables p global preference iff pc q consistent e iff q path consistent let
us assume pc q sc item theorem fixed assignment
controllable variables solution every projection p roj pc q every
projection gives global preference
means set projections common solution p every common
solution gives preference strictly lower thus p sc since requires existence
fixed assignment controllable variables must optimal solution projections
preference definition item give preference
projections definition item
theorem consider stppu p preference levels min assume
corresponding stps min obtained cutting p preference levels n
min


enforcing strong controllability consistent sol p p min
iff p p roj p sol p opt p pref opt p otherwise
pref
proof let us first recall given two stps p p defined set variables
stp p p p variables p p temporal constraint c ij
c ij c ij intervals p intersection corresponding intervals p
p given fact set projections p set projections
stpu obtained cutting p min immediately derive theorem
solution p satisfies condition let us consider control sequence p
sol p j min sol j theorem conclude
p opt p j optimal solution p
theorem execution best sc stppu p stops due occurrence
event line p sc
proof every preference level min q cut p min cut p qmin occurrence event implies qmin strongly controllable must
q min thus p sc min theorem allows us conclude
min



fiu ncertainty

soft temporal constraint

theorem execution best sc stppu p stops due occurrence
event line preference level
opt maxt sol p pref
p osc control sequence solution stp p opt returned iff
optimal scenario p
proof condition line satisfied stpu q means schedules
p preference however condition satisfied previous preference
level means schedules preference allows us conclude
optimal preference stppu p seen stpp opt
maxt sol p pref since assuming line executed best sc level opt
conditions lines must satisfied preference opt means
level opt stp p opt line consistent looking line see stp p opt
satisfies hypothesis theorem preference min preference opt allows us
conclude solution p opt optimal scenario p vice versa thus p opt sc
theorem osc
theorem execution best sc stppu p stops due occurrence
event line event line preference level p osc sc solution stp p returned p p roj p
sol p opt p pref opt p otherwise pref
proof event event occurs condition line must satisfied preference level means stpu pc q consistent thus schedules p
preference event occurs condition line must satisfied stpu obtained
cutting p preference level applying path consistency strongly controllable
thus conclude corollary p osc however since executed
line preference level must reached line looking line
see stp p satisfies hypothesis theorem preference min preference level
allows us conclude p sc
instead event occurs p inconsistent theorem means
common assignment executables optimal scenarios preference
time preference equal however since execution reached line
preference level assume successfully completed loop preference
conclude p sc
theorem determining optimal strong controllability highest preference level sc
stppu n variables preference levels achieved n
proof notice first complexity procedure cut lines intersecting two
stps line linear number constraints thus n assuming
different preference levels conclude complexity best sc bounded
applying times stronglycontrollable n see section
theorem stppu p owc iff stpu q obtained simply ignoring preference functions constraints wc


firossi v enable yorke mith

proof p owc every situation p exists control sequence
schedule consistent optimal projection p every projection p p
corresponding projection q say q stp obtained p ignoring
preference functions easy see definition section implies assignment
optimal solution p solution q stpu q wc every projection
q exists control sequence schedule solution q definition section conclude corresponding stpp p least solution thus
must least optimal solution solution solution higher
preference
theorem given stppu p consider preference level stpu q obtained
cutting p consistent stpu pc q dc p odc dc

proof assume preference level pc q dc means
viable execution strategy p roj pc q sol pc q p p
p roj q executable x p x p x p x p x
let us recall due semi convexity preference functions cutting stppu
given preference level return smaller intervals constraints thus every
projection p roj q stp corresponds projection p roj p
stpp obtained stp restoring preference functions p
let us assume contrary p odc thus exists viable strategy

p roj p sol p p p p roj p p x p x
p x p x pref pi opt pi consider restriction
projections p roj pc q since pref p opt p every p must
p p roj pc q p sol pc q thus restriction satisfies
requirements strategy definition dc contradiction fact
pc q dc thus p cannot odc
theorem p p roj p p p roj pc q iff opt p allows us
conclude p dc finally theorem allows conclude p dc

lemma useful proof theorem consider stpu q dynamicallyco
ntrollable reported success q consider constraint ab b executables
execution precedes b defined interval p q wait max
exists viable dynamic strategy q p roj q qi b qi tmax
proof dynamic strategy produced dc execute shown figure section fact line stated executable b executed soon current
time three following conditions satisfied b live e current time must lie lower upper bounds b enabled e variables must precede b
executed waits b satisfied let us denote current time
assume b live enabled thus q p q third requirement satisfied
one two following scenarios last contingent time point b
wait occurred thus b executed immediately waits contingent
notice tmax longest wait b must satisfy imposed contingent time point c constraint ab



fiu ncertainty

soft temporal constraint

time points among b wait yet occurred expired
cases must tmax qi thus qi b qi tmax
theorem consider stppu p stpus obtained cutting p respectively
level applying pc without finding inconsistencies dynamicallycontrollable
success consider stpu p merge
merge fail
p dynamically controllable
viable dynamic strategy every projection p p roj p
opt pi opt pi p pref pi opt pi
otherwise pref pi
proof following constructive proof assuming merge failed strategy
satisfying requirements theorem defined
first notice p roj p p roj fact line merge p initialized

merge changes requirement intervals leaving contingent intervals unaltered
furthermore p roj p roj seen first claim theorem
section
let viable dynamic execution strategies obtained running dc execute respectively since p roj p roj projections
mapped two possibly different schedules one one every projection
pi p roj p every executable b notice pi b exists equal
pi b thus define history b recall set durations contingent events finished prior b strategy pi b pi b every
projection pi p roj p notice pi b defined history b pi contains
duration mapped preference exactly equal thus p cannot projection

consider define depending case ab constraint

constraint ab follow unordered follow cases merge
change interval ab leaving
let us first analyze scenario ab follow case stpus
case execution b follow contingent time point c
thus every projection p p roj p p b since
dynamically controllable p q p q furthermore
since path consistency enforced constraints minimal
form see section every value ab p q resp p q
situation resp sol p ab ab finally since
p roj p roj must p q p q
next consider scenario ab unordered case let us start
proving case must p q p first


firossi v enable yorke mith

p p definition p situation p p roj
schedule sol p ab p since p roj
p roj p p q next let us prove must q notice
wait induces partition situations two sets every
contingent point c ac contingent point c ac
first case contingent events occurred expiration wait
b executed ta ta execution time second
case safe execute b ta given p roj p roj b
constrained follow execution every contingent time point must
projections belong first set partition thus q
cases hence sufficient define strategy follows projections
pi pj p roj p pi b pj b pi b pj b
pi b pi b exists otherwise pi b pj b pi b assignment
guarantees identify projections constraints mapped preferences pi b
exists thus pi p roj otherwise projections p roj
p roj
constraint ab precede case b must precede contingent timepoint c means assignment b corresponding value p q resp
p q extended complete solution projection p roj resp
p roj interval p q fact obtained merge intersecting two intervals
since assuming merge failed intersection cannot empty line
figure thus example define follows pair projections
pi pj p roj p pi b pj b pi b pj b p
constraint ab unordered unordered precede first let us recall
applying merge interval p q p p q min q q
wait max since hypothesis merge failed must q
line figure
notice due semi convexity preference functions p p fact b
executed ta p ta time executed
contingent time points b wait occurred let us indicate x mlb


resp x
mlb maximum lower bound ac constraint resp


b wait c must p xmlb resp p xmlb however due
semi convexity preference functions x mlb x
mlb
case define strategy follows pair projections pi pj
p roj p pi b pj b pi b pj b max pi b
pi b whenever pi b defined otherwise pi b pj b pi b
lemma max pi b pi b hence pi b pj b
p q
let us consider preferences induced constraints assignment first
let us consider case max pi b pi b pi b since
dynamic strategy assignment identify projections preference
instead max pi b pi b pi b must pi b pi b


fiu ncertainty

soft temporal constraint

however know lemma pi b pi b
implies pi b p thus assignment preference
finally pi b defined noted pi p roj thus
opt pi since theorem section p p roj opt pi
thus pi b pj b pi b assignment identifies
preferences opt pi
shown merge fail dynamic strategy
required additional properties certifies p dynamically controllable
assume instead merge fails constraint two cases
happen first one ab precede case p q p q
proven morris et al projection ab viable dynamic strategy
p q projection ab viable dynamic strategy p q
dynamic viable strategies give optimal solutions projections optimal preference
equal dynamic viable strategies give optimal solutions projections
optimal preference equal since projections subset
p q p q strategy optimal projection
vice versa
second case occurs merge fails constraint ab unordered
case unordered case precede case
cases failure due fact q q must q
q upper bound interval ab q must least
contingent time point c executing b q inconsistent
assignment c gives preference lower side wait
constraint ab must least contingent time point c executing b
inconsistent optimal future occurrences c
way define viable dynamic strategy simultaneously optimal projections optimal
value equal optimal value
lemma useful proof theorem consider strategies defined
theorem
projection p pi pref pi pref pi every projection pz
pref pz
constraint ab pi b
proof
obvious since cases p b pi b pi b pi b
pref pi pref pi since every executable b pi b moreover
every projection pz every executable b pz b pz b
derives directly fact p b pi b pi b pi b
lemma



firossi v enable yorke mith

theorem consider stppu p every preference level define stpu obtained
cutting p applying pc dynamicallycontrollable assume
dc consider stpu p
p merge merge merge merge min min min
min minimum preference constraint p assume applied merge
returned consistent stpu viable dynamic strategy p
p roj p opt pi pi optimal solution pi otherwise pref pi
proof prove theorem induction first notice construction p roj min
p roj p allows us conclude p roj p p roj p since every time merge
applied stpu contingent constraints stpu given first argument
since min dynamically controllable viable dynamic strategies say min
min pi optimal opt pi min otherwise pref pi min
consider p min merge min min theorem know
strategy min min pi optimal solution pi opt pi min
pref pi min otherwise
let us assume stpu p min k defined hypothesis satisfies thesis
p min k defined hypothesis min k notice
implies strategy min k min k pi optimal solution pi
opt pi min k pref pi min k projections since min
k hypothesis min k dc moreover construction
p min k merge p min k min k since merge doesnt fail thus theorem
strategy min k p min k construction theorem lemma
obtain dynamic strategy min k every projection pi pref min k pi
pref min k pi min k pj optimal solution projections p j
opt pj min k pref pj min k projections
allows us conclude min k ph optimal solution projections p h
opt ph min k contradiction assumption p min k doesnt satisfy
thesis theorem
theorem given stppu p execution best dc p terminates
proof assume preference set discretized finite number different
preferences best dc starts lowest preference cuts level p given level
stpu obtained consistent dynamically controllable merging procedure fails
best dc stops level assume instead moves preference ordering
none events occur however certain point cutting level higher
maximum preference function outside preference set case
cutting give inconsistent stp
theorem given stppu p input best dc terminates line iff p
dc
proof assume best dc terminates line stpu obtained cutting p
minimum preference min constraint dc however cutting minimum


fiu ncertainty

soft temporal constraint

preference constraint preference level gives stpu theorem
conclude p dc thus odc
assume p dc preferences cutting p minimum preference
min cannot give dynamically controllable otherwise p would min dc hence
best dc exit line
theorem given stppu p input best dc terminates line iff p odc
proof assume best dc terminates line considering preference level
stpu q obtained cutting stppu p level path consistent immediately conclude projection p p roj pi opt pi
since best dc terminate must assume preference
tests path consistency dynamic controllability merge successful
consider stpu p obtained end iteration corresponding preference
level easy see p satisfies hypothesis theorem allows us
conclude viable dynamic strategy every projection p
opt pi pi optimal solution pi however since know projections
p opt pi allows us conclude p odc
p odc viable strategy every pair projections p pj
p roj p executable b p b pj b pi b pj b
pi optimal solution pi pj optimal solution pj
theorem know best dc cannot stop line
let us consider line best dc sets dc true line p
cannot odc fact condition setting dc true line stpu obtained
cutting p preference level path consistent dynamically controllable means
projections e g pj p opt pj however dynamic strategy
set projections thus p cannot odc
let us consider line p odc best dc cannot set dc true
best dc sets dc true merge failed theorem conclude
dynamic viable strategy every projection p p remember p roj p
p roj p pi optimal solution opt pi however know projections
p optimal preference equal since assuming best dc stopping line
thus p cannot odc
theorem given stppu p input best dc stops lines preference level iff p
dc odc
proof assume best dc sets dc true line considering preference level
thus stpu obtained cutting p level path consistent dc however since
must first preference level happens otherwise best dc would stopped
sooner conclude iteration preference level successful considering
p theorem conclude viable dynamic strategy
every projection p pi opt pi pi optimal solution pi
pref pi otherwise definition dynamic controllability
best dc terminates line theorem theorem conclude
viable dynamic strategy every projection p p opt pi


firossi v enable yorke mith

pi optimal solution pi pref pi otherwise strategy
guaranteeing optimality projections optimal preference p dc
p dc theorem best dc stop line p
dc odc theorem best dc stop line
theorem best dc terminates must stop line
theorem complexity determining odc highest preference level dc
stppu n variables bounded number preference levels l n
proof consider pseudocode best dc figure
complexity min cut p line n since every constraint must considered
n constraints constraint time finding interval
elements mapped preference min constant complexity checking stpu obtained dc n thus lines performed overall complexity
n lines clearly take constant time
let us consider fixed preference level compute cost complete iteration
line complexity cut p n
line complexity applying pc testing path consistency n see section
dechter et al
line complexity testing dc dynamicallycontrollable n see section morris muscettola
line constant time
line complexity merge n since n constraints must
considered constraint merging two intervals constant cost
line constant time
conclude complexity complete iteration given preference level n
worst case cycle performed times thus conclude total
complexity best dc n since complexity operations performed lines
constant

references
badaloni giacomin flexible temporal constraints th conference information processing management uncertainty knowledge system ipmu
pp
bistarelli montanari u rossi f semiring constraint solving optimization journal acm
bresina j jonsson morris p rajan k activity mars exploration
rovers th international conference automated scheduling icaps
pp


fiu ncertainty

soft temporal constraint

coggiola shi z young airborne deployment instrument real time
analysis single aerosol particles aerosol science technology
dearden r meuleau n ramakrishnan smith washington r contingency
planetary rovers rd intl workshop scheduling space
dechter r meiri pearl j temporal constraint networks artificial intelligence

dubois fargier h prade h flexible constraint satisfaction application scheduling tech rep report irit r r universite p
sabatier
dubois fargier h prade h fuzzy constraints job shop scheduling journal
intelligent manufacturing
dubois fargier h prade h fuzzy scheduling modelling flexible constraints
vs coping incomplete knowledge european journal operational

dubois hadjali prade h b fuzziness uncertainty temporal reasoning
journal universal computer science
dubois prade h review fuzzy set aggregation connectives journal information science
field p hogan r brown p illingworth choularton kaye p hirst e greenaway
r simultaneous radar aircraft observations mixed phase cloud
scale quarterly journal royal meteorological society
floyd r w shortest path communication acm
frank j jonsson morris r smith scheduling fleets earth
observing satellites th intl symposium ai robotics automation space isairas
khatib l morris p morris r rossi f temporal constraint reasoning
preferences nebel b ed th international joint conference artificial intelligence
ijcai pp morgan kaufmann
lau h c ou sim robust temporal constraint networks proc th ieee
conf tools artificial intelligence ictai pp hong kong
leiserson c e saxe j b mixed integer linear programming
efficiently solvable journal
morris p morris r khatib l ramakrishnan bachmann strategies global
optimization temporal preferences wallace ed proceeding th international conference principles practice constraint programming cp vol
lecture notes computer science pp springer


firossi v enable yorke mith

morris p h muscettola n vidal dynamic control plans temporal uncertainty nebel b ed th international joint conference artificial intelligence
ijcai pp morgan kaufmann
morris p h muscettola n managing temporal uncertainty waypoint controllability dean ed th international joint conference artificial intelligence
ijcai pp morgan kaufmann
morris p h muscettola n temporal dynamic controllability revisited th national
conference artificial intelligence aaai pp aaai press mit
press
morris r morris p h khatib l yorke smith n temporal preferences probabilities icaps workshop constraint programming
scheduling
muscettola n morris p h pell b smith b issues temporal reasoning
autonomous control systems agents pp
peintner b pollack e low cost addition preferences dtps tcsps
mcguinness l ferguson g eds th national conference artificial intelligence pp aaai press mit press
peintner b pollack e anytime complete finding utilitarian optimal
solutions stpps th national conference artificial intelligence aaai pp
aaai press mit press
pini rossi f venable k b possibility theory reasoning uncertain
soft constraints godo l ed th european conference symbolic quantitative
approaches reasoning uncertainty ecsqaru vol lncs pp
springer
rajan k bernard e dorais g gamble e b kanefsky b kurien j millar w muscettola n nayak p p rouquette n f smith b taylor w tung w
remote agent autonomous control system millennium horn w ed
th european conference artificial intelligence ecai pp ios press
rossi f sperduti venable k khatib l morris p morris r learning solving soft temporal constraints experimental study van hentenryck p ed principles
practice constraint programming th international conference cp vol
lncs pp springer
rossi f venable k b yorke smith n controllability soft temporal constraint
th international conference principles practice constraint programming cp vol lncs pp
rossi f venable k yorke smith n preferences uncertainty simple temporal proc cp workshop online international workshop online
constraints solving handling change uncertainty


fiu ncertainty

soft temporal constraint

ruttkay z fuzzy constraint satisfaction proceedings st ieee conference evolutionary computing pp orlando
schiex possibilistic constraint satisfaction handle soft constraints dubois wellman p eds th annual conference uncertainty
artificial intelligence uai pp morgan kaufmann
shostak r e deciding linear inequalities computing loop residues journal
acm
stergiou k koubarakis backtracking disjunctions temporal constraints artificial intelligence
tsamardinos probabilistic robust execution temporal plans uncertainty vlahavas p spyropoulos c eds methods applications artificial
intelligence second hellenic conference ai setn vol lncs pp
springer
tsamardinos pollack e ramakrishnan assessing probability legal execution plans temporal uncertainty workshop uncertainty
incomplete information thirteenth international conference automated
scheduling icaps
tsamardinos vidal pollack e b ctp constraint formalism
conditional temporal constraints
venable k yorke smith n simple temporal preferences uncertainty doctoral consortium th international conference automated
scheduling icaps aaai press
venable k yorke smith n disjunctive temporal uncertainty th
international joint conference artificial intelligence ijcai pp morgan
kaufmann
vidal fargier h handling contingency temporal constraint networks consistency controllabilities journal experimental theoretical artificial intelligence

vidal ghallab dealing uncertain durations temporal constraint networks
dedicated wahlster w ed th european conference artificial intelligence ecai pp john wiley sons
vila l godo l fuzzy temporal constraint networks mathware soft computing

xu l choueiry b efficient solving simple temporal th intl symposium temporal representation reasoning fourth intl
conf temporal logic time ictp pp



firossi v enable yorke mith

yorke smith n venable k b rossi f temporal reasoning preferences uncertainty gottlob g walsh eds th international joint conference artificial
intelligence ijcai pp morgan kaufmann
zadeh l calculus fuzzy restrictions fuzzy sets applications cognitive
decision processes




