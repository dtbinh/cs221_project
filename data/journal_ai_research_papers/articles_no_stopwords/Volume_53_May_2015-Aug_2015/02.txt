Journal Artificial Intelligence Research 53 (2015) 91-126

Submitted 12/14; published 05/15

Ceteris Paribus Structure Logics Game Forms
Davide Grossi

d.grossi@liverpool.ac.uk

Department Computer Science
University Liverpool

Emiliano Lorini

emiliano.lorini@irit.fr

IRIT-CNRS
Universite Paul Sabatier

Francois Schwarzentruber

francois.schwarzentruber@ens-rennes.fr

ENS Rennes - IRISA

Abstract
article introduces ceteris paribus modal logic, called CP, interpreted
equivalence classes induced finite sets propositional atoms. logic studied
used embed three logics strategic interaction, namely atemporal STIT,
coalition logic propositional control (CLPC) starless fragment dynamic
logic propositional assignments (DLPA). embeddings highlight common ceteris
paribus structure underpinning key operators apparently different logics
show, argue, remarkable similarities behind influential formalisms
reasoning strategic interaction.

1. Introduction
logical analysis agency gamesfor expository introduction field see van
der Hoek Paulys overview paper (2007)has boomed last two decades giving
rise plethora different logics particular within multi-agent systems field.1
heart logics always representations possible choices (or actions)
groups players (or agents) powers force specific outcomes game.
logics take former primitives, STIT (the logic seeing that, Belnap, Perloff,
& Xu, 2001; Horty, 2001), take latter CL (coalition logic, Pauly, 2002; Goranko,
Jamroga, & Turrini, 2013) ATL (alternating-time temporal logic, Alur, Henzinger, &
Kupferman, 2002).
formalisms power players modeled terms notion effectivity.
strategic game, -effectivity group players consists sets outcomes
game players collective action forces outcome
game end set, matter players (Moulin & Peleg,
1982). So, set outcomes X belongs -effectivity set players J,
exists individual action agent J that, actions players,
outcome game contained X. keep actions agents
1. richness logical landscape object IJCAI13 invited talk A. Herzig Logics
Multi-Agent Systems: Critical Overview.
c
2015
AI Access Foundation. rights reserved.

fiGrossi, Lorini, & Schwarzentruber

fixed, selection individual action agent J corresponds choice
J assumption agents stick choices.
already observed van Benthem, Girard, Roy (2009) formalization
choice power games things equal, ceteris paribus, nature.
Considering outcomes game possible set players J
players fixed actions, amounts considering may case
ceteris paribus condition actions agents J equal (to current
ones). aforementioned work van Benthem et al. show intuition
used, instance, give modal formulation Nash equilibria one-shot games.2
current paper leverage intuition show provide novel
systematization many influential formalisms field logic games.
1.1 Scientific Context
Formal relationships linking logics (or fragments thereof) mentioned
object several publications. Notable examples are: embedding CL
next-time fragment ATL (Goranko, 2001) embedding CL NCL (normal
coalition logic, Broersen, Herzig, & Troquard, 2007; Balbiani, Gasquet, Herzig, Schwarzentruber, & Troquard, 2008a), embedding CL ATL STIT (Broersen, Herzig,
& Troquard, 2005, 2006). Earlier contributions attempted comprehensive
systematizations field logic games. Two particular worth mentioning:
Goranko Jamrogas work (2004), compares game logics based computation tree abstraction ATL variants; Herzigs work (2014), provides
conceptual syntax-basedwhile favor semantic methodscomparison
main formalisms literature.
1.2 Aim Paper
aim paper provide technical contribution towards unification field
logic games. set develop series embeddings highlight common
structure representation choice power, underpins semantics
logics mentioned above.
focus components semantics logics directly
representation choice power, abstract away representation
time repeated interaction. logics working are: atemporal
fragment STIT, logic CLPC (coalition logic propositional control, van der Hoek &
Wooldridge, 2005) starless fragment DLPA (dynamic logic propositional
assignments, van Eijck, 2000; Balbiani, Herzig, & Troquard, 2013). logics cover,
arguably, large spectrum influential existing formalisms.3 Logic STIT often
considered standard literature, embeds CL ATL (Broersen et al., 2005,
2. refer reader Osborne Rubinsteins textbook (1994) introduction basic notions
game theory.
3. worth stressing focus logics choice power (that is, notion effectivity) formalisms incorporating explicit representation choice power
implemented (that is, explicit notion strategy), instance ATL explicit strategies
(Walther, van der Hoek, & Wooldridge, 2007).

92

fiThe Ceteris Paribus Structure Logics Game Forms

CLPC

DLPA

CP
one
nti
al

S5

bo

un
de





od

el


exp

STIT

restricted languages

NCL

Figure 1: Summary embeddings established paper known literature
arrow indicates formula source logic satisfiable
suitable translation formula satisfiable target logic. DLPA
denotes starless version dynamic logic propositional assignments, NCL
STIT denote atemporal version of, respectively, normal coalition logic
seeing-to-it logic. S5 denotes normal modal logic equivalence relations. Dotted lines indicate embeddings known literature: CLPC
DLPA (Balbiani et al., 2013) STIT NCL (and vice versa) respect fragments respective languages (Lorini & Schwarzentruber, 2011).
embedding STIT CP assumes bound STIT-models.
embeddings polynomial except one CP S5.

2006), use natural starting point. Logic CLPC influential extension
CL strong formal ties (Dunne, van der Hoek, Kraus, & Wooldridge, 2008) the,
equally influential, Boolean games model (Harrenstein, van der Hoek, Meyer, & Witteveen,
2001) multi-agent systems. Finally, logic DLPA extension PDL (propositional
dynamic logic, Harel, Kozen, & Tiuryn, 2000), recently proposed new
standard representation choice power (Herzig, Lorini, Moisan, & Troquard,
2011; Balbiani et al., 2013).
articulate analysis, whose main technical tool consists satisfiability-preserving
embeddings, paper introduces studiesin axiomatization complexitya
simple ceteris paribus logic based propositional equivalence, call CP.
logic yardstick allowing us compare unify STIT, CLPC DLPA.
1.3 Outline Summary Results
Section 2 introduces logic CP. logic compared S5 axiomatized.
Section 3 provides study relationship atemporal version STIT
CP. show CP embeds atemporal group STITthe fragment atemporal STIT
actions individuals groups representedunder assumption
agents choices bounded. call latter atemporal bounded group STIT.
Moreover, show CP embeds atemporal individual STITthe variant atemporal
93

fiGrossi, Lorini, & Schwarzentruber

STIT actions individuals represented. former embedding
used transfer complexity results CP. present embedding CP variant
atemporal group STIT groups nested (i.e., given two sets agents J J 0
either J J 0 viceversa).
Section 4 provides embedding coalition logic propositional control atemporal
bounded group STITand therefore, indirectly, CPas well direct embedding
CLPC CP.
Section 5 provides embedding starless fragment DLPA CP well
embedding CP DLPA therefore, indirectly, STIT (on bounded models)
CLPC DLPA.
Finally, Section 6 discuss obtained results, put perspective related
work draw general implications field. conclude Section 7. Longer
proofs collected technical appendix end paper.
Figure 1 gives graphical presentation embeddings established paper
well relevant ones already known literature. Two embeddings known
logics: embedding CLPC DLPA (Balbiani et al., 2013),
embedding STIT NCL, vice versa, language STIT (and NCL)
restricted fragment allow nesting modalities.4

2. Ceteris Paribus Logic Based Propositional Equivalence
section introduce study logic used target logic
embeddings present. section starts definition equivalence modulo
set atoms. present ceteric paribus logic CP whose semantics based
equivalence relations. section finishes exponentially embedding ceteris
paribus logic CP S5 proving CP-satisfiability problem decidable.
2.1 Equivalence Modulo Set Atoms
Consider structure (W, V ) W set states, V : P 2W valuation
function countable set atomic propositions P subsets W .5
Definition 1. (Equivalence modulo X) Given pair (W, V ), X P |X| < ,
relation VX W 2 defined as:

w VX w0 p X : w V (p) w0 V (p)
X singleton (e.g. p), often write Vp instead V{p} . Also, order
avoid clutter, often drop reference V VX clear context.
Intuitively, two states w w0 equivalent set X, X-equivalent,
satisfy atoms X (according given valuation V ). finiteness
4. reader referred Lorini Schwarzentrubers paper (2011) BNF language.
5. literature game logics sometimes defined countable set atoms (e.g., Balbiani et al.,
2013) sometimes finite set atoms (e.g., van der Hoek & Wooldridge, 2005). opt
generality define language CP countable set. assumption finite supply
atoms results present later would trivialize (for instance CP satisfiability problem
would PTIME) would therefore hide interesting technical features CP.

94

fiThe Ceteris Paribus Structure Logics Game Forms

X clearly essential definition. assumed because, see, set
X taken model set actions agent game form sets actions
always assumed finite.
state following simple fact without proof. highlights interesting features
notion propositional equivalence modulo subsets P, use
later paper.
Fact 1. (Properties P ) following holds set states W , valuation V :
P 2W finite sets X, P:
(i) X reflexive, transitive symmetric;
(ii) X X ;
(iii) X singleton, X induces partition W 2 cells;
(iv) X = XY ;
(v) = W 2 .
Intuitively: (i) states X equivalence relation; (ii) states larger
set atoms, refined equivalence relation indexed it; (iii) states
set atom singleton, equivalence relation would induce partition
one (if proposition singleton globally true globally false model) two
cells (otherwise); (iv) states relation indexed union two sets atoms
relation one obtains intersecting relations two sets; finally (v) states
relation empty set atoms global relation.
2.2 Modal Logic X Relation
section consider simple modal language interpreted relations X axiomatize logic class structures (W, V ). key modal operator language
hXi, whose intuitive meaning case state X-equivalent
current one or, stress ceteris paribus reading, possible things expressed
X equal. call resulting logic propositional ceteris paribus logic, CP short.
2.2.1 Syntax CP.
Let P countable set atomic propositions. language LCP (P) defined
following BNF:
LCP (P) : ::= p | | ( ) | hXi
p ranges P X finite subset atomic propositions (X P X finite).
Note set finite subsets atomic propositions countable, language
LCP (P) countable. Boolean connectives >, , , dual operators [X]
defined usual. Although taken diamond operators primitive,
convenience make use box operators state results later sections.
set SF () subformulas formula defined inductively follows:
SF (p) = {p};
95

fiGrossi, Lorini, & Schwarzentruber

SF () = {} SF ();
SF ( ) = { } SF () SF ();
SF (hXi) = {hXi} SF ().
say signature X appears exists formula hXi SF ().
2.2.2 Semantics CP
class models working with:
Definition 2. (CP-models) Given countable set P, CP-model LCP (P) tuple
= (W, V ) where:
W non-empty set states;
V : P 2W valuation function.
CP-model called universal W = 2P V s.t. V (p) = {w | p w}. called
non-redundant P identity relation W 2 .
Intuitively, CP-model consists state-space valuation function given
set atoms. satisfaction relation defined follows:
Definition 3. (Satisfaction CP-models) Let = (W, V ) CP-model LCP (P),
w W , LCP (P):
M, w |=CP p w V (p);
M, w |=CP M, w 6|=CP ;
M, w |=CP M, w |=CP M, w |= ;
M, w |=CP hXi w0 W : w VX w0 M, w0 |=CP
Formula CP-satisfiable, exists model state w
M, w |=CP . Formula valid M, noted |=CP , w W ,
M, w |=CP . Finally, CP-valid, noted |=CP , valid CP-models.
logical consequence formula set formulae, noted |=CP , defined
usual.
So, modal operators interpreted equivalence relations X induced
valuation model. worth observing logic class models
closed uniform substitution,6 is, logic CP uniform.7 witness that, notice
formula [{p}]p [{p}]p valid, whereas [{p}] [{p}] not.
Let us give simple illustration semantics.
Example 1. Let us consider following model made 5 states w, x, u, y, z:
6. definition uniform substitution reader referred textbook Blackburn, de Rijke,
Venema (2001, Def. 1.18).
7. terminology comes Goldblatts work (1992).

96

fiThe Ceteris Paribus Structure Logics Game Forms

w : p, q

x:p

u : p, q, r

z:q



instance, M, w |=CP h{p, q}ir M, z |=CP [{p}]r.
following lemmas state simple facts concerning relation logic CP logic
S5 isolate interesting class CP-models.
Lemma 1. Let LCP (P) set formulae LCP (P) containing hi operators.
set formulae LCP (P) CP-valid modal logic Kripke frames (W, W 2 ),
i.e., logic S5.
Proof. follows directly Fact 1 item (v).
words, hi operator LCP nothing global modality (Blackburn
et al., 2001, pp. 367370). next lemma states CP actually logic class
relevant CP-models.
Lemma 2. Every satisfiable CP-formula satisfiable non-redundant model.
Proof. Assume M, w |= . show MP , |w|P |= MP quotient
equivalence relation P (defined natural way) |w|P set
states P -equivalent w. proceed induction structure .
propositional Boolean cases obvious. Let = hXi X P.
assumption semantics CP operators exists v w X v
M, v |= . construction directly |w|P X |v|P . IH MP , |v|P |= ,
therefore MP , |w|P |= hXi.
2.2.3 Axiomatics CP
obtain axiom system CP standard reduction technique exploiting Lemma
1. axiom system given Figure 2. first thing notice system consists
usual S5 axioms plus Reduce axiom. Logic S5 known sound strongly
complete class models accessibility relation total relation W 2
(Blackburn et al., 2001), modality hi therefore axiomatized (dual of)
global modality.
said this, soundness strong completeness system easy
establish.
Theorem 1. axiom system given Figure 2 sound strongly complete
class CP-models.
Proof. Soundness suffices show Reduce CP-valid, follows straightforwardly Definition 1. Completeness obtain completeness proceed customary
DEL (van Ditmarsch, Kooi, & van der Hoek, 2007; Wang & Cao, 2013). first fix
97

fiGrossi, Lorini, & Schwarzentruber

(P)

tautologies propositional calculus

(K)

[]( ) ([] [])

(T)

hi

(4)

hihi hi

(5)

hi []hi





^
^
^
^
^

p
p []
p
[X]
p

(Reduce)

X

(MP)
(N)

pY

pY

pX\Y

pX\Y

`CP `CP `CP
`CP `CP []

Figure 2: Axiom schemas rules CP. X, range finite elements 2P , ,
LCP (P), p P. usual, `CP means exists sequence
formulae either axiom obtained previous formulae
application inference rule.

translation tr0 : LCP (P) LCP (P) follows:
tr0 (p) = p
tr0 () = tr0 ()
tr0 ( ) = tr0 () tr0 ()





^
^
^
^
^

tr0 ([X]) =
p
p []
p
p tr0 ()
X

pY

pY

pX\Y

pX\Y

write tr0 () {tr0 () | }. Notice translation removes occurrences
hXi [X] operators formulae X 6= structure axiom
Reduce. Consider following rule substitution provable equivalents (REP):
(REP)

`CP 0 `CP [/0 ]

[/0 ] formula results replacing zero occurrences
, , 0 . rule REP derivable axiom system Figure 2 ().
proof claim provided Appendix A. using axiom Reduce rule REP
obtain () that, LCP (P), `CP tr0 () (). proceed follows:
|=CP tr0 () |=CP tr0 () (); Lemma 1 strong completeness
S5 thus obtain tr0 () `S5 tr0 () therefore tr0 () `CP tr0 (); finally ()
follows `CP , proves strong completeness.
98

fiThe Ceteris Paribus Structure Logics Game Forms

crux reduction argument lies use axiom Reduce.
axiom enable reduction [X]-formulae taking care possible truth
V
V
value combinations atoms X. given combination, e.g.,
p

p
,
pY
pX\Y
true given state (for ), accessible states, combination
true, occurs scope [X] true.
opted axiomatization virtue simplicity, alternative systems
course possible. One particular worth mentioning. first reduces hpi operators
axiom:
hpi ((p hi(p )) (p hi(p )))

(1)

states hpi equivalent either case current state satisfies p
exists (possibly different) p-state true, case p true
exists (possibly different) p-state true (recall property (iii) Fact
1). Given reduction, one use axioms enforce appropriate behavior
X relations X consists one atom. aim, axioms used
known canonical properties (ii) (iv) Fact 1, namely:
hX hXi

(2)

hXii hY ii hX ii

(3)

ranges set nominals. complete system could obtained
axiomatizing behavior nominalsthrough axioms rules used hybrid logic
(Areces & Ten Cate, 2006). system, named canonical model could built
(i.e., canonical model maximal consistent sets contain exactly one nominal)
axioms Formulae 1-3 would enforce desirable properties canonical
relations.
2.3 Exponentially Embedding CP S5
property expressed axiom Reduce enables truth-preserving translation CP
S5 via translation tr0 provided proof Theorem 1. translation is, however,
length translated formula grows exponentially tower exponents
height equal modal depth original formula.
section propose translation single exponential preserves satisfiability. Take standard modal language L (P) one modal operator defined
set atoms P. S5-models structures = (W, V ) W set states,
V : P 2W valuation function. Given S5-model = (W, V ) state w W ,
truth conditions defined follows:
M, w |=S5 u W : M, u |=S5
S5-satisfiability defined usual. possible define exponential truth-preserving
reduction tr : LCP (P) L (P) follows:
^
tr(0 ) = p0
(p tr1 ())
SF (0 )

99

fiGrossi, Lorini, & Schwarzentruber

p fresh atomic proposition (note p0 p formula 0 itself,
subformula 0 )8 , ranging SF (0 ) tr1 defined follows:
tr1 (p) = p

p P

tr1 () = tr1 ()
tr1 ( ) = tr1 () tr1 ()
tr1 ([]) = p



tr1 ([X]) =

^

^


X

pY

p

^





p

^
pY

pX\Y

p

^



p p

pX\Y

Intuitively, translation designed operate axiom Reduce avoiding exponential blow-up pile modal depth formula. atomic propositions
p tr1 ([X]) avoid non-elementary size tr(0 ). definition tr1 ([]) corresponds degenerated case tr1 ([X]) X = .The following theorem states
satisfiability preservation. proof given Appendix B.
Theorem 2. (tr preserves satisfiability) Let 0 CP-formula. two following statements equivalent: 0 CP-satisfiable; tr(0 ) S5-satisfiable.
consequence, obtain following result.
Corollary 1. (Decidability) satisfiability problem CP decidable NEXPTIME.
Proof. satisfiability problem S5 decidable NP (Blackburn et al., 2001, Ch.
6). result follows Theorem 2 decision procedure may work follows:
order check satisfiable compute formula tr() apply NP-decision
procedure check whether tr() S5-satisfiable not.
Notice cardinality X appears operators [X] bounded
fixed integer, translation tr becomes polynomial size . Thus,
S5-satisfiability problem NP-complete, CP-satisfiability problem bounded
cardinality restrictions set atomic propositions modal operators NP.
trivially NP-hard, NP-complete.
Section 3, embed atemporal version STIT (the logic seeing that)
CP thereby obtaining lower bounds results.

3. Ceteris Paribus Structure STIT Logic
section, investigate possibility embedding logic agency STIT
CP. STIT logic (the logic seeing that, Belnap et al., 2001; Horty, 2001) one
prominent logical accounts agency. logic constructions form
agent (or group J) sees . STIT non-standard modal semantics based
concepts moment history. However, shown Balbiani, Herzig, Troquard
(2008b) Herzig Schwarzentruber (2008), basic STIT language without temporal
operators simulated standard Kripke semantics.
8. use fresh atomic propositions obtain efficient satisfiability preserving translations
based propositional logic technique known Tseitin transformation (Tseitin, 1968).

100

fiThe Ceteris Paribus Structure Logics Game Forms

3.1 Atemporal Group STIT
First let us recall syntax semantics atemporal group STIT. language
logic built countable set atomic propositions P finite set agents
AGT = {1, . . . , n} defined following BNF:
LGSTIT (P, AGT ) : ::= p | | ( ) | [J : stit]
p ranges P J ranges 2AGT . construction [J : stit] read group
J sees true regardless agents choose. define dual
def
operator hJ : stiti = [J : stit]. J = , construction [ : stit] read
true regardless every agent chooses simply necessarily true.
Definition 4 (STIT-Kripke model, Herzig & Schwarzentruber, 2008). STIT-Kripke model
= (W, {RJ }JAGT , V ) 3-tuple where:
W non-empty set worlds;
J AGT , RJ equivalence relation that:
i) RJ R ;

ii) RJ = jJ R{j} ;
iii)
w W (w1 , . . . , wn ) W n , u1 R{1} (w), . . . , un R{n} (w)
1jn R{j} (uj ) 6= ;
V : P 2W valuation function atomic propositions;
RJ (w) = {u W : (w, u) RJ } J 2AGT .
partition induced equivalence relation RJ set possible choices
group J.9 Indeed, STIT choice group J given world w identified
set possible worlds RJ (w). call RJ (w) set possible outcomes group
Js choice world w, sense group Js current choice w forces possible
worlds RJ (w). set R (w) simply set possible outcomes w, said
differently, set outcomes current game w. According Condition (i),
set possible outcomes group Js choice subset set possible outcomes.
Condition (ii), called additivity, means choices agents group J made
choices individual agent more. Condition (iii) corresponds
property independence agents: whatever agent decides do, set outcomes
corresponding joint action agents non-empty. intuitively, means
agents never deprived choices due choices made agents.
Lorini Schwarzentrubers work (2011) determinism group AGT assumed.
say set outcomes corresponding joint action agents
singleton. Hortys group STIT logic (Horty, 2001) suppose this. deal
Hortys version STIT. STIT model game form joint action
agents might determine one outcome.
9. One see partition induced equivalence relation Rj set actions agent j
try, notion trying corresponds notion volition studied philosophy action
(e.g., OShaughnessy, 1974; McCann, 1974).

101

fiGrossi, Lorini, & Schwarzentruber

w

u

v

r





z

R{1}
R{2}

Figure 3: STIT-model
Example 2. tuple = (W, R , R{1} , R{2} , R{1,2} , V ) defined by:
W = {w, u, v, r, s, t, z};
R = W W ;
R{1} = {w, u, v}2 {r, s}2 {t, z}2 ;
R{2} = {w, r, t}2 {u, v, s, z}2 ;
R{1,2} = {(w, w), (r, r), (s, s), (t, t), (z, z), (u, u), (v, v), (u, v), (v, u)};
p P, V (p) = .
STIT-Kripke model. Figure 3 shows model M. equivalence classes induced
equivalence relation R{1} represented ellipses correspond choices
agent 1. equivalence classes induced equivalence relation R{2} represented
rectangles correspond choices agent 2. choice group {1, 2}
given world determined intersection choice agent 1 choice
agent 2 world. example, choice agent 1 world u {w, u, v} whereas
choice agent 2 world u {u, v, s, z}. choice group {1, 2} u {u, v}.
Note Condition (iii) Definition 4 ensures choice agent 1
choice agent 2 intersection two choices non-empty. is,
equivalence class induced relation R{1} equivalence class induced
relation R{2} , intersection two equivalence classes non-empty.
Given STIT-Kripke model = (W, {RJ }JAGT , V ) world w M, truth
conditions STIT formulae following:
M, w |=STIT p w V (p);
M, w |=STIT M, w 6|=STIT ;
M, w |=STIT M, w |=STIT M, w |=STIT ;
M, w |=STIT [J : stit] v RJ (w) : M, v |=STIT
RJ (w) = {u W | (w, u) RJ }.
102

fiThe Ceteris Paribus Structure Logics Game Forms

3.2 Embedding Atemporal STIT CP
able embed group STIT CP many reasons. first one
group STIT satisfiability problem undecidable 3 agents
(Herzig & Schwarzentruber, 2008).10 second one group STIT
finite model property. Indeed Herzig Schwarzentruber (2008) provide translation
product logic S5n group STIT logic, S5n finite model
property (Gabbay, Kurucz, Wolter, & Zakharyaschev, 2003), atemporal group STIT
it. contrary CP inherits finite model property S5. Indeed,
formula CP-satisfiable, Theorem 2 says tr() S5-satisfiable. S5
polynomial model property, exists polynomial-sized S5-model tr() size
tr(). words, exists exponential S5-model tr() size .
Theorem 2 ensures exists exponential CP-model size .
nevertheless embed variant group STIT assumption every
agent finite bounded number actions repertoire. every agent j,
Rj -equivalence class Rj (u) corresponds action agent j. say agent j kj
actions STIT model exactly kj Rj -equivalence classes M.
game structure STIT-models enforced CP-models.
introduce special atomic propositions encode game structure. Without loss
generality, assume set P contains special atomic propositions rep j1 , rep j2 , . . .
agents j used represent actions agents. Let k maximal
number actions: k = maxjAGT kj . every agent, represent actions numbers
` {0, . . . , k 1} atomic propositions encode binary representation `.
Let integer represents number digits need represent action.
instance let = dlog2 ke (the ceiling logarithm k). given agent j,
Rjm = {rep j1 , . . . , rep jm } set atomic propositions represent binary digits
action agent j. suppose j 6= Rjm Rim = .
Example 3. example, model Example 2, agent 1 k1 = 3 actions agent
2 k2 = 2 actions. k = 3 = dlog2 3e = 2. R1m = {rep 11 , rep 12 }
R2m = {rep 21 , rep 22 }. instance, may represent action agent 1 corresponding
R{1} (w) = {w, u, v} valuation rep 11 rep 12 , action agent 1 corresponding
{r, s} rep 11 rep 12 , action agent 1 corresponding {t, z} rep 11 rep 12 ,
action agent 2 corresponding {w, r, t} rep 21 rep 22 action agent 2
corresponding {u, v, s, z} rep 21 rep 22 .

Let Rm = jAGT Rjm set atomic propositions used denote actions. Let
us define following CP formula:
def

GRIDm =

V

xRm []((x

hRm \ {x}ix) (x hRm \ {x}ix))

(4)

formula enforces CP model universal (over Rm ), is, contain possible
valuations Rm (recall Definition 2). model satisfies GRIDm interpreted
game form valuation Rjm represents action player j.
10. See Lorini Schwarzentrubers paper (2011) study decidable fragments group STIT.

103

fiGrossi, Lorini, & Schwarzentruber

Example 4. instance, world CP model M0 satisfies GRID2 ,
skeleton M0 following form (we intentionally draw skeleton
model M0 looks model M):






|

{z

}

worlds
rep 21 rep 22
true

|

{z

worlds
rep 11 rep 12 true
worlds
rep 11 rep 12 true
worlds
rep 11 rep 12 true

}

worlds
rep 21 rep 22
true

R{1}
R{2}

define translation LGSTIT LCP (P) follows:
tr2 (p) = p

p P

tr2 () = tr2 ()
tr2 ( ) = tr2 () tr2 ()
[
tr2 ([J : stit]) = [
Rjm ]tr2 ()
jJ

translation tr2 parameterized m. notational convenience,
follows write tr2 instead tr2m leaving implicit parameter m.

set jJ Rjm represents atomic propositions used represented actions
coalition J.
Example 5. instance, = 2,
tr2 ([{1} : stit][{1, 2} : stit]p) = [{rep 11 , rep 12 }][{rep 11 , rep 12 , rep 21 , rep 22 }]p.
obtained desired satisfiability-preservation result. proof given
Appendix C.
Theorem 3. Let us consider group STIT formula . Let integer.
following items equivalent:
1. STIT-satisfiable STIT-model agent 2m actions;
2. STIT-satisfiable STIT-model agent exactly 2m actions;
3. GRIDm tr2 () CP-satisfiable.
104

fiThe Ceteris Paribus Structure Logics Game Forms

3.3 Atemporal Individual STIT
subsection, consider following fragment STIT called atemporal individual
STIT 11 :
LISTIT (P, AGT ) : ::= p | | ( ) | [{j} : stit]
p ranges P j ranges AGT .
fragment STIT, axiomatized Xu (1998), exponential finite model
property (see Lemma 7 Balbiani et al., 2008b). Moreover, following theorem
highlights, embedded logic CP.
Theorem 4. Let us consider STIT formula individual STIT fragment. Let
length . following three items equivalent:
1. STIT-satisfiable
2. STIT-satisfiable model agent 2m actions;
3. GRIDm tr2 () CP-satisfiable.
Proof. 1 2 Consider STIT formula individual STIT fragment. STITsatisfiable length , STIT-satisfiable model
2m worlds (see Lemma 7 Balbiani et al., 2008b). implies
2m actions model. implications 2 3 3 1 come Theorem
3.
Thanks Theorem 4, reduce NEXPTIME-complete satisfiability problem
individual STIT (Balbiani et al., 2008b) CP-satisfiability problem. reduction
polynomial, obtain following lower bound complexity result CP-satisfiability
problem.
Corollary 2. CP-satisfiability problem NEXPTIME-hard.
3.4 Group STIT Coalitions Nested
subsection address satisfiability problem fragment CP consisting
formulae LCP sets atomic propositions appear operator [X]
occurring form linear set sets atomic propositions. formally, [X] [X 0 ]
two operators occurring either X X 0 X 0 X. instance, formula
[{p, q}]( [{p}][{p, q, r, s}]) belongs fragment {p} {p, q} {p, q, r, s}.
contrary, formula [{p}]p [{q}]p element fragment CP.
call satisfiability problem fragment CP CP-nested satisfiability
problem. Due embedding proposed Theorem 3 STIT CP, provide
following lower bound complexity result CP-nested satisfiability problem. proof
given Appendix D.
Theorem 5. CP-nested satisfiability problem PSPACE-hard.
11. authors (e.g., Broersen, 2008; Wansing, 2006) use term multi-agent STIT designate
logic operators form [{j} : stit]. prefer use explicit term individual
STIT Herzig Schwarzentrubers work (2008).

105

fiGrossi, Lorini, & Schwarzentruber

following theorem provides upper bound complexity result fragment
CP. proof given Appendix E.
Theorem 6. CP-nested satisfiability problem PSPACE.
concludes analysis STIT logics via CP. next section move normal
coalition logic.
3.5 Normal Coalition Logic
conclude section STIT briefly mentioning related system, normal coalition
logic. Normal coalition logic NCL introduced Broersen et al. (2007) provide
embedding normal modal logic influentialand non-normalcoalition logic
(Pauly, 2002). embedding based general simulation technique developed
Gasquet Herzig (1994) showed first time coalition logicwhich
already recognized fragment ATL containing next operator
(Goranko, 2001)could actually interpreted traditional structures Kripke
frames based equivalence relations. NCL studied Balbiani et al. (2008a).
NCL known atemporal variant, introduced studied Balbiani et al. (2008a)
Lorini Schwarzentruber (2011).
Two results atemporal NCL literature worth mentioning context.
First, Balbiani et al. (2008a, Thm. 38) show satisfiability problem atemporal
NCL (when |AGT | 2) NEXPTIME-complete, CP; second, Lorini Schwarzentruber (2011, Prop. 1) show |AGT | 2, atemporal STIT embeddable
atemporal NCL vice versa, embedding (in directions) general
case possible considerably restricting syntax LSTIT .

4. Ceteris Paribus Structure Coalition Logic Propositional
Control
section study relationships CP, atemporal bounded group STIT,
another well-known game logic, logic CLPC (coalition logic propositional control ).12 Specifically, show CLPC embedded, preserving satisfiability,
atemporal bounded group STIT and, fact atemporal bounded group STIT
embedded CP (Section 3.1), indirectly show CLPC embedded
CP. complete picture provide direct embedding CLPC CP.
latter embedding particular interest highlight striking similarities
models CP CLPC.
CLPC introduced van der Hoek Wooldridge (2005) formal language
reasoning capabilities agents coalitions multiagent environments.
logic notion capability modeled means concept control. particular,
assumed agent associated specific finite subset Pi finite set
propositions P. Pi set propositions controlled agent i. is, agent
ability assign (truth) value proposition Pi cannot affect truth
12. Gerbrandys work (2006) generalizations assumptions underlying CLPC
studied. consider original version CLPC proposed van der Hoek Wooldridge.

106

fiThe Ceteris Paribus Structure Logics Game Forms

values propositions P \ Pi . variant CLPC studied van der Hoek
Wooldridge (2005) assumed control propositions exclusive, is, two
agents cannot control proposition (i.e., 6= j Pi Pj = ). Moreover,
assumed control propositions complete, is, every proposition controlled
least one agent (i.e., every p P exists agent p Pi ).
preceding concepts assumptions precisely formulated following section, illustrates syntax formal semantics CLPC.
4.1 Syntax Semantics CLPC
language CLPC built finite set atomic propositions P finite set
agents AGT = {1, . . . , n}, defined following BNF:
LCLPC (P, AGT ) : ::= p | | ( ) | J
p ranges P J ranges 2AGT . Operator J called cooperation modality,
construction J means group J contigent ability achieve .
Definition 5 (CLPC model). model CLPC tuple = (P1 , . . . , Pn , X) where:
P1 , . . . , Pn partition P among agents AGT ;
X P set propositions true initial state.

every group agents J AGT , let PJ = iJ Pi set atomic propositions
controlled group J. Moreover, every group J AGT every set atomic
propositions X P, let XJ = X PJ set atomic propositions X controlled
group J. Sets XJ called J-valuations.
Given CLPC model = (P1 , . . . , Pn , X), truth conditions CLPC formulae
following:
|=CLPC p p X;
|=CLPC 6|=CLPC ;
|=CLPC |=CLPC |=CLPC ;

|=CLPC J XJ0 PJ :
XJ0 |=CLPC


L

XJ0 CLPC model (P1 , . . . , Pn , X 00 ) that:
00
XAGT
\J = XAGT \J

XJ00 = XJ0
is, J true given model if, coalition J change truth
values atoms controls way true afterwards (i.e., given
actual truth-value combination atoms controlled J, exists
truth-value combination atoms controlled J ensures ).
Let us illustrate CLPC semantics example.
107

fiGrossi, Lorini, & Schwarzentruber

Example 6. Let AGT = {1, 2, 3}, P = {p, q, r}, P1 = {p}, P2 = {q} P3 = {r}.
Consider CLPC model = (P1 , P2 , , P3 , {r}). that:
|=CLPC {1,2} ((p q r) (p q r)).
0
Indeed, exists set atoms X{1,2}
P{1,2} controlled {1, 2}
L 0
0
X{1,2} |=CLPC ((p q r) (p q r)). example X{1,2}
= {p} P{1,2} ,
which,
(P
,
P
,
P
,
{p,
r})
|=
((p

q

r)

(p

q

r))

(P
1
2
3
1 , P2 , P3 , {p, r}) =
CLPC
L
{p}.

4.2 Embedding CLPC STIT
aim section provide embedding CLPC variant atemporal group STIT bounded choices (atemporal bounded group STIT)
presented Section 3.1.
Let us provide following STIT formulae catpure four basic assumptions
CLPC:
^
^
def
EXC + =
(h : stiti[{i} : stit]p h : stiti[{j} : stit]p)
(5)
pP i,jAGT :i6=j

EXC

def

=

^

^

(h : stiti[{i} : stit]p h : stiti[{j} : stit]p)

(6)

pP i,jAGT :i6=j
def

COMPL =

^

_

[ : stit]([{i} : stit]p [{i} : stit]p)

(7)

pP iAGT


def

GRID =

^

h : stiti

XP


^

p

pX

^

p

(8)

pP\X

Formulae EXC + EXC mean control atomic propositions P exclusive
(i.e., proposition P forced true false one
agent), whereas formula COMPL means exercise control atomic propositions
P complete (i.e., every proposition P exists least one agent either forces
true forces false). Finally, formula GRID means possible
truth-value combinations atomic propositions P possible. Note EXC + ,
EXC , COMPL GRID well-formed STIT formulae assumption
set P finite.13
define following translation LCLPC (P, AGT ) LSTIT (P, AGT ):
tr3 (p) = p

p P

tr3 () = tr3 ()
tr3 ( ) = tr3 () tr3 ()
tr3 (J ) = hAGT \ J : stititr3 ()
following theorem highlights bounded group STIT embeds CLPC. proof
given Appendix F.
13. assumption made van der Hoek Wooldridge (2005).

108

fiThe Ceteris Paribus Structure Logics Game Forms

Theorem 7. Let = |P|. Then, CLPC formula CLPC-satisfiable
(EXC + EXC COMPL GRID ) tr3 () satisfiable STIT model
agent 2m actions.
CP embeds atemporal bounded group STIT (Theorem 3 Section 3.1), Theorem 7 follows CP embeds CLPC. Indeed, given CLPC-satisfiable formula
, one use translation tr2 given Section 3.1 order find corresponding STIT
formula STIT-satisfiable. Then, one uses preceding translation tr3 order
find corresponding CP formula CP-satisfiable.
Corollary 3. Let = |P|. Then, CLPC formula CLPC-satisfiable
GRID tr2 ((EXC + EXC COMPL GRID ) tr3 ()) CP-satisfiable.
4.3 Directly Embedding CLPC CP
complete picture, study direct embedding CLPC CP.
Definition 6 (From CLPC CP models). Let = (P1 , . . . , Pn , X) CLPC-model.
Define MCP = (W, V ) follows:
W = 2P ;
V V (p) = {w | p w} p P.
Intuitively, V truth-assignment P witnessed exactly one
w W wX witness truth assignment represented X (i.e., makes
atoms X true rest false). MCP non-redundant universal CP model
MCP , X pointed CP-model (Definition 2). define following translation
LCLPC (P, AGT ), partition P1 , . . . , Pn P, LCP (P):
tr4 (p) = p

p P

tr4 () = tr4 ()
tr4 ( ) = tr4 () tr4 ()
tr4 (J ) = hYJ itr4 ()
YJ =



jAGT

Pj (i.e., atoms controlled anybody J).

Theorem 8. Let = (P1 , . . . , Pn , X) CLPC-model LCLPC (P, AGT ):
|=CLPC MCP , X |=CP tr4 ()
Proof. proceed induction syntax . Base Trivial construction
MCP (Definition 6). Step cases Boolean connectives straightforward.
focus modal case:
|=CLPC J MCP , X |=CP hYJ itr4 ()
109

fiGrossi, Lorini, & Schwarzentruber

YJ =



jN

Pj . case proven following series equivalences:

|=CLPC J XJ0 PJ :

L

XJ0 |=CLPC

Semantics J
XJ0 PJ : (P1 , . . . , Pn , XJ0 XAGT \J ) |=CLPC
L
Definition
XJ0 PJ : MCP , XJ0 XAGT \J |=CP tr4 ()
Definition 6 IH
YJ X MCP , |=CP tr4 ()
Definition 1
MCP , X |=CP hYJ itr4 ()
Definition 3

completes proof.

5. Ceteris Paribus Structure Dynamic Logic Propositional
Assignments
dynamic logic propositional assignments (DLPA) concrete variant propositional dynamic logic (PDL) (Harel et al., 2000) atomic programs assignments
propositional variables true false.14 complexities model checking
satisfiability problem DLPA recently studied Balbiani et al. (2013).
starless version DLPA previously studied van Eijck (2000) recently
put use Herzig et al. (2011), shown embeds CLPC. next
section study relationship CP DLPA. Specifically, provide truthpreserving embedding starless DLPA CP well truth-preserving embedding
CP DLPA.
DLPA, argued Herzig et al. (2011), represents general
direct link PDLnatural formalism reasoning agency.
results section, argue, point similar status CLPC, modulo use
Kleene star comment Section 7.

14. Programs standard PDL abstract letters a, b, . . . alphabet.

110

fiThe Ceteris Paribus Structure Logics Game Forms

5.1 Syntax Semantics DLPA
language DLPA built finite set atomic propositions P defined
following BNF:
::= +p | p | ; | | | ?
LDLPA (P) : ::= p | | ( ) | hi
use p denote (+p p).
Definition 7 (DLPA model). DLPA-model set X P.
is, DLPA model propositional valuation.
semantics given induction follows:
J+pK = {(X, X 0 ) | X 0 = X {p}};

JpK = {(X, X 0 ) | X 0 = X {p}};

J; 0 K = JK J 0 K;

J 0 K = JK J 0 K;

J K = kN JKk ;
J?K = {(X, X) | X JK};
JpK = {X | p X};
JK = 2P JK;
J K = JK JK;

JhiK = {X | exists X 0 s.th. (X, X 0 ) JK X 0 JK}.

write X |=DLPA X JK. refer fragment DLPA without
operator starless DLPA.
5.2 Properties DLPA
PDL, program constructors ; , ? eliminable:
Fact 2. following DLPA validities:
h; 0 hih 0
h 0 hi h 0
h?i
However, unlike PDL, operator eliminable DLPA:
Fact 3 (Balbiani et al., 2013). every LCLPC (P) exists 0 LCLPC (P)
0 DLPA valid.
111

fiGrossi, Lorini, & Schwarzentruber

5.3 Embedding Starless DLPA CP
direct adaptation Definition 6 above, DLPA model X translated
pointed CP model MCP , X defined Definition 6. fix following translation:15
tr5 (p) = p

p P

tr5 () = tr5 ()
tr5 ( ) = tr5 () tr5 ()
tr5 (h+pi) = hP \ {p}i(p tr5 ())
tr5 (hpi) = hP \ {p}i(p tr5 ())
Notice translation starless DLPA CP need include cases
sequential composition (;), nondeterministic choice () test (?) since
eliminable DLPA. Therefore, guarantees CP could kind
reasoning starless DLPA:
Theorem 9. Let X DLPA model belong language starless DLPA:
X |=DLPA MCP , X |=CP tr5 ()
Proof. proceed induction syntax . Base Trivial construction
MCP (Definition 6). Step cases Boolean connectives straightforward.
focus modal case:
X |=DLPA h+pi MCP , X |=CP hP \ {p}itr5 ()
case proven following series equivalences:
X |=DLPA h+pi X {p} |=DLPA

Semantics h+pi

P{p} X : MCP , |=CP tr5 () Definition 1 IH
MCP , X |=CP hP \ {p}itr5 ()

Definition 3

case hpi identical.
5.4 Embedding CP Starless DLPA
subsection shown semantics CP DLPA closely related.
However, DLPA built-in assumption effect valuation (i.e., set
atoms) feasible. point view CP means DLPA actually works
universal models (cf. Definition 2). Here, establish embedding CP interpreted
universal models,16 starless DLPA. Consider following translation LCP (P)
15. must observed translation work P finite. not, {p} co-finite
{p} would belong LCP .
16. class models one axiomatize extending axiom system Figure 2 axioms
form hi ranges propositional formulae encoding one single valuation.

112

fiThe Ceteris Paribus Structure Logics Game Forms

LDLPA (P):
tr7 (p) = p

p P

tr7 () = tr7 ()
tr7 ( ) = tr7 () tr7 ()
tr7 (hXi) = hp1 . . . hpn itr7 ()
p1 , . . . , pn enumeration atoms P \ X.17 following result:
Theorem 10. Let CP-model LCP (P):
M, w |=CP w |=DLPA tr7 ()
Proof. proceed induction syntax . Base Trivial construction
MCP (Definition 6). Step cases Boolean connectives straightforward.
focus modal case:
M, w |=CP hXi w |=DLPA hp1 . . . hpn itr7 ()
p1 , . . . , pn enumeration atoms P\X. case proven following
series equivalences:
M, w |=CP hXi w0 X w s.t. M, w0 |=CP

Definition 1

w0 X w s.t. w0 |=DLPA tr7 ()

IH

w0 s.t. w0 = (. . . (wF{p1 })F . . .)F{pn }
w0 |=DLPA tr7 ()
w |=DLPA hp1 . . . hpn itr7 ()

Definition 1
Semantics DLPA

F {, }, p1 , . . . , pn enumeration atoms P X.
Theorem 10 obtain corollary satisfiability-preserving embedding CP
DLPA. Fix formula18


^
^
^
def
GRID =
hi
p
p
(9)
XP

pX

pP\X

which, easy see, forces CP-model contain propositional valuations P.
have:
Corollary 4. Let LCP (P). Then, tr7 () DLPA satisfiable iff GRID CP
satisfiable.
concludes presentation embeddings STIT, CLPC DLPA
CP (Figure 1). following section take stock commenting technical results
presented drawing links related work.
17. Again, crucial P finite.
18. Cf. Formula (8).

113

fiGrossi, Lorini, & Schwarzentruber

6. Discussion Related Work
section provide summary results presented discuss implications.
position work respect existing contributions literature logic
games.
6.1 Discussion
paper introduced modal logic arises naturally interpreting modal operators equivalence relations induced finite sets propositional atoms. logic,
called CP, axiomatized embedded (exponentially) S5. CP
used tool compare three logics one-shot strategic interactionatemporal STIT,
coalitional logic propositional control CLPC dynamic logic propositional
assignments DLPA. logics embedded CP.
embeddings (recall Figure 1) put us position draw following
general remarks.
appears justified talk common ceteris paribus structure underpinning several main logics game forms embeddable CP.
illustrates striking uniformity logical tools needed expressing choice
effectivity games logical languages, CP appears offer well-suited
abstraction systematizing existing formalisms.
Furthermore, logics embeddable S5 (either directly via CP), highlighting fact order reason choice effectivity games one
essentially reasons suitably defined partitions state space.
New interesting far unexplored embeddings obtainable corollaries.
particular, follows results atemporal STIT bounded models
embedded starless DLPA via CP.
Via logic S5, one easily show embeddings directions
possible (albeit exponential cost), arrows Figure 1 may actually
made symmetric. S5 embeds CP, directly embeddable
mentioned logic, contain universal modality, following forms: hi
CP, hAGT \ : stiti atemporal STIT, AGT CLPC hp1 . . . hpn
DLPA (where p1 , . . . , pn enumeration P).
results unveil strikingand extent unexpecteduniformity
underpinning formalisms considered.
6.2 Related Work
review two sets related contributions.
6.2.1 CP Modal Ceteris Paribus Logics
two logics modal logic literature strictly related CP: release
logic, logic ceteris paribus preference.
114

fiThe Ceteris Paribus Structure Logics Game Forms

Release logic relatively less known formalism landscape modal logics
artificial intelligence. introduced studied Krabbendam Meyer (2003,
2000) order provide modal logic characterization general notion irrelevancy.
Modal operators release logic S5 operators indexed subsets finite set Iss
abstract elements denoting issues taken irrelevant, released,
evaluating formula scope operator. release model therefore tuple
(W, {rX }XIss , V ) rX equivalence relations additional constraint
X rX rY , is, releasing issues one obtains coarse
equivalence relation. Formally, semantics release operators:
M, w |= X w0 W : w rX w0 M, w0 |=
X Iss = (W, {rX }XIss , V ).
One easily observe that, Fact 1 (clause (ii)), CP models release models
Iss = P release relation rX =X . Vice versa, Iss = P, release
models CP models. consequence, logic hXi operators CP conservative
extension logic X release operators.
Preference logic long concerned so-called ceteris paribus preferences,
is, preferences incorporating things equal condition. first logical
analysis preferences dates back Von Wrights work (1963), dyadic modal
operators studied representing statements preferred , ceteris paribus.
recently, van Benthem et al. (2009) studied modal logic ceteris paribus preferences based
standard unary modal operators. Leaving preferential component logic aside,
ceteris paribus fragment concerns sentences form hi whose intuitive meaning
exists state equivalent current (evaluation) state respect
formulae (finite) set satisfies , formulae
atoms formulae full language. Logic CP is, therefore, fragment
ceteris paribus logic studied van Benthem et al. allowed consist
finite set atoms.
6.2.2 Contributions Systematization Game Logics
Despite wealth approaches found literature game logics,
papers attempted form comparison spanning across several formalisms,
attempting kind systematization. Two particular worth mentioning here.
recent one Herzigs work (2014), provides comprehensive
analysis field classifying existing logics depending aspects agency
(e.g., whether capture strategic interaction not, whether handle uncertainty
epistemic attitudes) capture languages. logics considered
paper, instance, would fall strategic uncertainty categories according
terminology used Herzig. analysis conceptual predominantly driven
syntactic features logics, is, theorems agency enable.
earlier work methodologically closer focus semantics
Goranko Jamrogas work (2004). paper compares ATL, epistemic variant ATEL
(epistemic ATL, van der Hoek & Wooldridge, 2003) ECL (extended CL,19 Pauly, 2001)
19. CL extended Kleene star operator.

115

fiGrossi, Lorini, & Schwarzentruber

providing constructive transformations models establishing, particular,
ATL subsumes ECL ATEL embedded ATL preserving satisfiability.

7. Conclusions Future Work
paper provided unification the, date, influential logics representation one-shot strategic interactionatemporal STIT, CLPC starless DLPA
ceteris paribus abstraction formalized logic CP.
One natural future research direction presents itself, consists extending logic
CP Kleene star operator, analogy DLPA. conjecture DLPA
embeddable CP Kleene star remains investigated whether new
logic could play unifying role logics extensive form games, show
plays atemporal case. complete systematization program initiated
current paper.
Related question, somewhat technical vein, shown
paper CP atemporal individual STIT high complexity
satisfiability problem consider whole languages. study efficient
syntactic fragments important intend pursue study parallel
CP atemporal individual STIT. expect several complexity results
fragments atemporal STIT may transferred fragments CP viceversa.

Acknowledgments
authors wish thank anonymous reviewers JAIR thorough helpful
comments. paper greatly improved thanks feedback.

Appendix A. Proof Claim () Theorem 1
Proof. One show REP derivable every operator [X] follows: first one shows
[X] operator satisfies Axiom K rule necessitation N.
provide syntactic proofs two claims. notational convenience use following abbreviation:


def
Yb =


^

p

pY

116

^
pX\Y

p

fiThe Ceteris Paribus Structure Logics Game Forms

1.

Derivation K [X]:


^
`CP [X]( )
Yb [] Yb ( )
X

2.

Reduce




`CP Yb ( ) (Yb ) (Yb )
P

3.

^

`CP





^
Yb [] Yb ( )
Yb [] (Yb ) (Yb )

X

X

4.

P, 2 rule RM [] (i.e., ` ` [] [])




^
^
`CP
Yb [] (Yb ) (Yb )
Yb [](Yb ) [](Yb )

5.

K P





^
^
Yb [](Yb ) [](Yb )
Yb [] Yb
`CP

X

X

X

X




^



Yb [] Yb




X

P
6.

^

`CP (





^
Yb [] Yb
Yb [] Yb ) ([X] [X])

X

X

Reduce
7.

`CP [X]( ) ([X] [X])
1 3-6
Derivation N [X]:

1.

`CP
hypothesis

2.

`CP []

3.

1 N []


^
`CP
[] Yb
X

4.

2 S5 theorem [] []( )


^
`CP
Yb [] Yb
X

3 P
5.

`CP [X]
4 Reduce MP

117

fiGrossi, Lorini, & Schwarzentruber

one proves REP derivable induction routine analogous one used
Chellas (1980, Thm. 4.7).

Appendix B. Proof Theorem 2
Let 0 CP-formula. equivalence 0 CP-satisfiable tr(0 )
S5-satisfiable.
Proof. Suppose exists CP-model = (W, V ) world w W
M, w |=CP 0 . Let V 0 valuation V modified p true exactly
worlds u M, u |=CP . Let M0 S5-model defined (W, V 0 ). standard
induction provides M0 , w |=S5 tr(0 ). precisely, let us prove induction
SF (0 ), M, u |=CP iff M0 , u |=S5 tr1 () u W .
Propositional case: atomic propositions p, M, u |=CP p iff u V (p) iff
u V 0 (p) iff M0 , u |=S5 tr1 (p).
Negation: M, u |=CP iff M, u 6|=CP iff M0 , u 6|=S5 tr1 () iff M0 , u |=S5 tr1 ().
Conjunction: M, u |=CP iff M, u |=CP M, u |=CP iff M0 , u |=S5 tr1 ()
M0 , u |=S5 tr1 () iff M0 , u |=S5 tr1 ( ).
Case formula form [X]:
M, u |=CP [X]
iff v W , u VX v implies M, v |=CP
iff v W , u VX v implies M0 , v |=S5 p
(by construction V 0 )
iff M0 , u |=S5 tr1 ([X])
V
construction V 0 , M0 , w |=S5 SF (0 ) (p tr1 ()). M, w |=CP 0
M0 , w |=S5 tr1 (0 ) thus M0 , w |=S5 p0 construction V 0 . result, M0 , w |=S5
tr(0 ).
Suppose exists S5 model M0 = (W, V ) world w W
0
, w |=S5 tr(0 ). define relations X X P Definition 1. Let
CP-model equal (W, V ). standard induction provides M, w |=CP 0 .
precisely, let us prove induction SF (0 ), M, u |=CP iff
M0 , u |=S5 tr1 () u W .
Propositional case: atomic propositions p, M, u |=CP p iff u V (p) iff
u V 0 (p) iff M0 , u |=S5 tr1 (p).
Negation: M, u |=CP iff M, u 6|=CP iff M0 , u 6|=S5 iff M0 , u |=S5 .
Conjunction: M, u |=CP iff M, u |=CP M, u |=CP iff M0 , u |=S5 tr1 ()
M0 , u |=S5 tr1 () iff M0 , u |=S5 tr1 ( ).
118

fiThe Ceteris Paribus Structure Logics Game Forms

Case formula form [X]:
M, u |=CP [X]
iff v W , u VX v implies M, v |=CP
iff v W , u VX v implies M0 , v |=S5 tr1 ()
(by induction)
iff v W , u VX v implies M0 , v |=S5 p
(because, M0 , w |=S5 tr(0 )
v W , M0 , v |=S5 (p tr1 ()))
iff M0 , u |=S5 tr1 ([X])
M0 , w |=S5 tr(0 ), M0 , w |=S5 (p0 tr1 (0 )) M0 , w |=S5 p0 . Thus,
M0 , w |=S5 tr1 (0 ). Hence M, w |=CP 0 .

Appendix C. Proof Theorem 3
Let us consider group STIT formula . Let integer. following items
equivalent:
1. satisfiable model agent 2m actions;
2. satisfiable model agent exactly 2m actions;
3. GRIDm tr2 () CP-satisfiable.
Proof. 1 2 Let M0 = (W 0 , {RJ0 }JAGT , V 0 ) STIT-model 2m actions
per agent w W 0 M0 , w |=STIT . construct sequence models
Mj = (W j , {RJj }JAGT , V j ) agents j 0 {1, . . . , j} exactly 2m actions
Mj Mj bisimilar Mj1 . construct Mj Mj1 follows.
j1
j1
j1
Let R{j}
(w1 ), . . . , R{j}
(wk ) enumeration R{j}
- classes (that is, actions agents
j1
j), k 2m . Let (Copy` )`{k+1,...,2m } family disjoint copies R{j}
(w1 ).
write uCv say u = v v copy u u copy v. model
Mj = (W j , {RJj }JAGT , V j ) defined follows:

W j = W j1 `{k+1,...,2m } Copy` ;
j
j1
R{j}
= R{j}




`{k+1,...,2m } {(u, v)

| u, v Copy` }

j
j1
0
R{j
0 } = C R{j 0 } C j 6= j;

V j (p) = {v W j | vCu u V j1 (p)}.
119

fiGrossi, Lorini, & Schwarzentruber

construction makes Mj Mj1 bisimilar induction
agents j 0 {1, . . . , j} exactly 2m actions Mj . Finally, Mn , w |=STIT
agent exactly 2m actions Mn .
23
Let
us
consider

STIT
model

= (W, {RJ }JAGT , V ) agent exactly 2 actions. Let w W
M, w |=STIT . j AGT , let R{j} (wj,1 ), . . . , R{j} (wj,2m ) enumeration R{j} -classes M. Let us extend V worlds R{j} (wj,i )
valuations atomic propositions Rj correspond binary digits binary
representation i. {1, . . . , m}:
[
R{j} (wj,i )
(10)
V (rep jd ) =
i=1..2m | dth digit 1

Independence agents ensures M, w |=CP GRIDm . prove M, u |=CP
tr2 () iff M, u |=STIT induction subformulae .
3 1 Let = (W, V ) CP-model w W M, w |=CP GRIDm
tr2 (). define RJ =SjJ Rj . resulting Kripke-model M0 = (W, {RJ }JAGT , V )
STIT-model agent exactly 2m actions. particular, satisfies
independence agents M, w |=CP GRIDm . prove M, u |=CP tr2 () iff
M0 , u |=STIT induction subformulae .

Appendix D. Proof Theorem 5
CP-nested satisfiability problem PSPACE-hard.
Proof. reduce satisfiability problem STIT-formulae coalitions taken
linear set coalitions, PSPACE-complete (Schwarzentruber, 2012)
CP-nested satisfiability problem: use translation tr2 Subsection 3.1. Let
STIT-formula. STIT-satisfiable iff tr2 () CP-satisfiable.
stated Schwarzentruber (2012), STIT coalitions taken
linear set coalitions exponential model property. result Theorem 3
true. Hence STIT-satisfiable GRIDm tr2 () CP-satisfiable (where
length ). Hence tr2 () CP-satisfiable.
Suppose exists CP-model = (W, V ) w W M, w |=
tr2 (). define RJ =SjJ . STIT model M0 = (W, (RJ )J , V )
M0 , w |= . Remark need specify relations RJ J. long
RJ specified coalitions J appear RJ RJ 0 J 0 J,
extend Kripke model M0 completely specified STIT-model satisfying .20

Appendix E. Proof Theorem 6
CP-nested satisfiability problem PSPACE.
Proof. reduce CP-nested satisfiability problem satisfiability problem STIT
coalitions taken linear set coalitions. define AX = {jp p X}
20. See Schwarzentrubers paper (2012) details construnction.

120

fiThe Ceteris Paribus Structure Logics Game Forms

jp fresh agent corresponding atomic proposition p. Let us define following translation:
tr(p) = p;
tr() = tr();
tr( ) = tr() tr0 ();
tr([X]) = [AX : stit]tr().
Let us consider fixed CP-formula . recall signature X appears
exists formula hXi SF (). define following formula
V
CON ROL = [ : stit] X appearing
V
pX (p [AX : stit]p) (p [AX : stit]p).
tr() CON ROL STIT-formula computable polynomial time
satisfies condition nesting groups (i.e., two operators [J : stit]
[J 0 : stit] occurring formula either J J 0 J 0 J).
CP-satisfiable iff tr() CON ROL satisfiable STIT-model.
Suppose exists CP-model = (W, V ) w W
M, w |=CP . define RAX =X . STIT model M0 = (W, (RAX )X , V )
M0 , w |=STIT tr() CON ROL. Remark need specify
relations RJ J. long RJ specified coalitions J appear
tr() CON ROL RJ RJ 0 J 0 J, extend Kripke model M0
completely specified STIT-model satisfying tr() CON ROL.21

Suppose


exists

STIT-model
M0 = (W, (RAX )X , V ) world w W M0 , w |=STIT tr() CON ROL.
M0 , w |= CON ROL, X = RAX . reason define =
(W, {X }X2P , V ). Consequently, M, w |=CP .

Appendix F. Proof Theorem 7
Let = |P|. Then, CLPC formula CLPC satisfiable (EXC +
EXC COMPL GRID ) tr3 () satisfiable STIT model agent
2m actions.
Proof. Let us suppose |P| = m.
Let = (P1 , . . . , Pn , X ) CLPC model |=CLPC ,
P1 , . . . , Pn partition P among agents AGT .
build STIT
model = (W, {RJ }JAGT , V ) follows:
W = {X : X P},
J AGT X, X 0 W , (X, X 0 ) RJ0 XJ = XJ0 ,
21. see Schwarzentrubers paper details construction.

121

fiGrossi, Lorini, & Schwarzentruber

p P X W , X V (p) p X,

X P J AGT , XJ = X PJ (with PJ = iJ Pi ). size
2m . follows number RAGT -equivalence classes (alias joint actions)
equal lower 2m . Consequently, number actions every agent bounded
2m .
straightforward prove X W M, X |=STIT EXC +
EXC COMPL GRID . Moreover, induction structure , prove
M, X |=STIT tr3 (). interesting case = J :
|=CLPC J iff exists XJ PJ s.t.



XJ |=CLPC

iff exists XJ PJ s.t.

M, XJ XAGT
\J |=STIT tr3 () (by I.H.)

iff M, X |=STIT hAGT \ J : stititr3 ()
Let = (W, {RJ }JAGT , V ) STIT model number actions
every agent bounded 2m w0 W M, w0 |=STIT (EXC + EXC
COMPL GRID ) tr3 ().
AGT , let



M, v |= [{i} : stit]p
Ctrl = p P : v W,


M, v |= [{i} : stit]p







set atoms P controlled agent i. J AGT , let Ctrl J =



iJ

Ctrli .

Lemma 3. J AGT , X P, X X w W have:
(i) CtrlJ = X CtrlAGT \J = P \ X,
V
V
(ii) M, w |=STIT p+ p p p CtrlJ = X then, v RJ (w),
X V
X
V
M, v |=STIT p+ p p p,
X

X

0
(iii) CtrlJ = X then, P\X
P\X, exists v RJ (w) M, v |=STIT
V
V
p

p.
0+
0
p
p
P\X

P\X

+

X P X X, X
= X X
= X \ X .

Proof. (i) Let us suppose p 6 CtrlJ . going prove p CtrlAGT \J .
p 6 CtrlJ follows w W M, v |=STIT p v RJ (w).
implies J w W M, w |=STIT [{i} : stit]p
[{i} : stit]p. M, w0 |=STIT COMPL follows AGT \ J
M, w |=STIT [{i} : stit]p [{i} : stit]p w W . latter implies
p CtrlAGT \J . direction (i.e., p CtrlJ implies p 6 CtrlAGT \J ) follows
M, w0 |=STIT EXC + EXC .
122

fiThe Ceteris Paribus Structure Logics Game Forms

(ii) Let us suppose M, w |=

V

+
pX

p

V


pX

p CtrlJ = X. fact

+
relations RJ reflexive, follows that, p X
, exists J

M, w |=STIT [{i} : stit]p p X exists J M, v |=STIT [{i} :
+
stit]p. latter follows p X
M, w |=STIT [J : stit]p

p V


M,
v
|=
[J
:
stit]p.
Therefore,
v RJ (w),
STIT
X
V
M, v |=STIT p+ p p p.
X

X

0
P\X
(iii) Let us suppose CtrlJ = X let us consider arbitrary P\X

w W .VFrom M, wV
|=
GRID

follows


exists
v

W


0
STIT
M, v |=STIT p0+ p p0 p. item (ii), latter implies exists
P\X
P\X
V
V
v W M, v |=STIT [AGT \J : stit]( p0+ p p0 p). constraint
P\X

P\X


V independence
V agents follows exists v RJ (w) M, v |=STIT
p

0+
p
p 0 p.
P\X

P\X

transform STIT model CLPC model = (P1 , . . . , Pn , X ) follows:
p P, p X w0 V (p),
p P AGT , p Pi p Ctrli .
item (i) Lemma 3 easy check indeed CLPC model.
particular, P1 , . . . , Pn partition P among agents AGT .
induction structure using Lemma 3 straightforward prove
|=CP . interesting case = J :
M, w0 |=STIT hAGT \ J : stititr3 ()
iff M, v |=STIT tr3 () v RAGT \J (w0 )
iff exists XJ PJ s.t.

(P1 , . . . , Pn , XJ XAGT
\J ) |=CP

(by I.H., items (ii) (iii)
Lemma 3)
iff |=CP J
completes proof.

References
Alur, R., Henzinger, T., & Kupferman, O. (2002). Alternating-time temporal logic. Journal
ACM, 49, 672713.
Areces, C., & Ten Cate, B. (2006). Hybrid logics. Blackburn, P., van Benthem, J., &
Wolter, F. (Eds.), Handbook Modal Logic, pp. 821868. Elsevier.
Balbiani, P., Gasquet, O., Herzig, A., Schwarzentruber, F., & Troquard, N. (2008a). Coalition games kripke semantics. Degremont, C., Keiff, L., & Ruckert, H. (Eds.),
Festschrift Honour Shahid Rahman, pp. 112. College Publications.
123

fiGrossi, Lorini, & Schwarzentruber

Balbiani, P., Herzig, A., & Troquard, N. (2008b). Alternative axiomatics complexity
deliberative stit theories. Journal Philosophical Logic, 37 (4), 387406.
Balbiani, P., Herzig, A., & Troquard, N. (2013). Dynamic logic propositional assignments:
well-behaved variant PDL. Proceedings 28th ACM/IEEE Symposium
Logic Computer Science (LICS 2013), pp. 143152. IEEE Computer Society.
Belnap, N., Perloff, M., & Xu, M. (2001). Facing future: agents choices
indeterminist world. Oxford University Press, USA.
Blackburn, P., de Rijke, M., & Venema, Y. (2001). Modal Logic. Cambridge University
Press, Cambridge.
Broersen, J. (2008). complete STIT logic knowledge action,
applications. Proceedings 6th International Workshop Declarative Agent
Languages Technologies (DALT 2008), Vol. 5397 LNCS, pp. 4759. SpringerVerlag.
Broersen, J., Herzig, A., & Troquard, N. (2005). coalition logic STIT. Lomuscio,
A., de Vink, E., & Wooldridge, M. (Eds.), Proceedings Third International
Workshop Logic Communication Multi-agent Systems (LCMAS05), pp.
2335.
Broersen, J., Herzig, A., & Troquard, N. (2006). Embedding alternating-time temporal logic
strategic STIT logic agency. Journal Logic Computation, 16 (5), 559578.
Broersen, J., Herzig, A., & Troquard, N. a. (2007). normal simulation coalition logic
epistemic extension. Samet, D. (Ed.), Proceedings TARK07, pp. 92101.
ACM Press.
Chellas, B. F. (1980). Modal Logic. Introduction. Cambridge University Press, Cambridge.
Dunne, P., van der Hoek, W., Kraus, S., & Wooldridge, M. (2008). Cooperative boolean
games. Proceedings AAMAS 2008, pp. 10151022. ACM.
Gabbay, D. M., Kurucz, A., Wolter, F., & Zakharyaschev, M. (2003). Many-dimensional
modal logics: theory applications. Elsevier.
Gasquet, O., & Herzig, A. (1994). Translating non-normal modal logics normal modal
logics.. Jones, A., & Sergot, M. (Eds.), Proceedings International Workshop
Deontic Logic Computer Science (DEON94).
Gerbrandy, J. (2006). Logics propositional control. Proceedings AAMAS06, pp.
193200. ACM.
Goldblatt, R. (1992). Logics Time Computation. CSLI.
Goranko, V. (2001). Coalition games alternating temporal logics. Proceedings
8th conference theoretical aspects rationality knowledge (TARK01), pp.
259272.
Goranko, V., & Jamroga, W. (2004). Comparing semantics logics multi-agent systems.
Synthese, 139, 241280.
124

fiThe Ceteris Paribus Structure Logics Game Forms

Goranko, V., Jamroga, W., & Turrini, P. (2013). Strategic games truly playable effectivity functions. Journal Autonomous Agents Multi-Agent Systems, pp.
288314.
Harel, D., Kozen, D., & Tiuryn, J. (2000). Dynamic Logic. MIT Press.
Harrenstein, P., van der Hoek, W., Meyer, J., & Witteveen, C. (2001). Boolean games.
van Benthem, J. (Ed.), Proceedings TARK01, pp. 287298. Morgan Kaufmann.
Herzig, A. (2014). Logics knowledge action: critical analysis challenges. Journal
Autonomous Agents Multi-Agent Systems, DOI: 10.1007/s10458-014-9267-z.
Herzig, A., Lorini, E., Moisan, F., & Troquard, N. (2011). dynamic logic normative
systems. Walsh, T. (Ed.), Proceedings Twenty-Second International Joint
Conference Artificial Intelligence (IJCAI 2011), pp. 228233. AAAI Press.
Herzig, A., & Schwarzentruber, F. (2008). Properties logics individual group
agency. Advances modal logic, 7, 133149.
Horty, J. F. (2001). Agency Deontic Logic. Oxford University Press, Oxford.
Krabbendam, J., & Meyer, J. (2003). Contextual deontic logics. McNamara, P., &
Prakken, H. (Eds.), Norms, Logics Information Systems, pp. 347362, Amsterdam. IOS Press.
Krabbendam, J., & Meyer, J. (2000). Release logics temporalizing dynamic logic, orthogonalising modal logics. Barringer, M., Fisher, M., Gabbay, D., & Gough, G.
(Eds.), Advances Temporal Logic, pp. 2145. Kluwer Academic Publisher.
Lorini, E., & Schwarzentruber, F. (2011). logic reasoning counterfactual emotions. Artificial Intelligence, 175 (3-4), 814847.
McCann, H. J. (1974). Volition basic action. Philosophical Review, 83, 451473.
Moulin, H., & Peleg, B. (1982). Cores effectivity functions implementation theory.
Journal Mathematical Economics, 10, 115145.
Osborne, M. J., & Rubinstein, A. (1994). Course Game Theory. MIT Press.
OShaughnessy, B. (1974). Trying (as mental pineal gland). Journal Philosophy,
70, 365386.
Pauly, M. (2001). logical framework coalitional effectivity dynamic procedures.
Bulletin Economic Research, 53 (4), 305324.
Pauly, M. (2002). modal logic coalitional power games. Journal Logic
Computation, 12 (1), 149166.
Schwarzentruber, F. (2012). Complexity results STIT fragments. Studia logica, 100 (5).
Tseitin, G. (1968). complexity derivation propositional calculus.. Structures
Constructive Mathematics Mathematical Logic, Part II, Seminars Mathematics (translated Russian). Steklov Mathematical Institute.
van Benthem, J., Girard, P., & Roy, O. (2009). Everything else equal: modal logic
ceteris paribus preferences. Journal Philosophical Logic, 38, 83125.
125

fiGrossi, Lorini, & Schwarzentruber

van der Hoek, W., & Pauly, M. (2007). Modal logic games information. Blackburn,
P., van Benthem, J., & Wolter, F. (Eds.), Handbook Modal Logic, pp. 10771146.
Elsevier.
van der Hoek, W., & Wooldridge, M. (2003). Cooperation, knowledge time: Alternatingtime temporal epistemic logic applications. Studia logica, 75 (1), 125157.
van der Hoek, W., & Wooldridge, M. (2005). logic cooperation propositional
control. Artificial Intelligence, 164, 81119.
van Ditmarsch, H., Kooi, B., & van der Hoek, W. (2007). Dynamic Epistemic Logic, Vol.
337 Synthese Library Series. Springer.
van Eijck, J. (2000). Making things happen. Studia logica, 66 (1), 4158.
Von Wright, G. H. (1963). Logic Preference. Edinburgh University Press.
Walther, D., van der Hoek, W., & Wooldridge, M. (2007). Alternating-time temporal logic
explicit strategies. Proceedings 11th conference Theoretical Aspects
Rationality Knowledge, pp. 269278. ACM Press.
Wang, Y., & Cao, Q. (2013). axiomatizations public announcement logic. Synthese,
190, 103134.
Wansing, H. (2006). Tableaux multi-agent deliberative-STIT logic. Governatori, G.,
Hodkinson, I., & Venema, Y. (Eds.), Advances Modal Logic, Volume 6, pp. 503520.
Kings College Publications.
Xu, M. (1998). Axioms deliberative STIT. Journal Philosophical Logic, 27, 505552.

126


