Journal Artificial Intelligence Research 53 (2015) 439-496

Submitted 12/14; published 07/15

Bypassing Combinatorial Protections: Polynomial-Time
Algorithms Single-Peaked Electorates
Felix Brandt

brandtf@in.tum.de

Institut fur Informatik
TU Munchen
85748 Garching, Germany

Markus Brill

brill@cs.duke.edu

Department Computer Science
Duke University
Durham, NC 27708, USA

Edith Hemaspaandra

eh@cs.rit.edu

Department Computer Science
Rochester Institute Technology
Rochester, NY 14623, USA

Lane A. Hemaspaandra

lane@cs.rochester.edu

Department Computer Science
University Rochester
Rochester, NY 14627, USA

Abstract
many election systems, bribery (and related) attacks shown NP-hard using constructions combinatorially rich structures partitions covers. paper shows voters follow central political-science model electorates
single-peaked preferencesthose hardness protections vanish. using single-peaked preferences simplify combinatorial covering challenges, first time show NPhard bribery problemsincluding Kemeny Llull electionsfall polynomial
time single-peaked electorates. using single-peaked preferences simplify combinatorial partition challenges, first time show NP-hard partition-of-voters problems fall polynomial time single-peaked electorates. show single-peaked
electorates, winner problems Dodgson Kemeny elections, though p2 -complete
general case, fall polynomial time. completely classify complexity
weighted coalition manipulation scoring protocols single-peaked electorates.

1. Introduction
Elections perhaps important framework preference aggregation. election
system (or election rule) mapping takes input preferences voters
respect set candidates (alternatives) returns set winners,
subset candidate set. Elections central preference aggregation among humans
everything political elections selecting good singers popular television shows.
Elections rapidly increasing importance electronic settings multiagent
systems, used proposed varied tasks recommender systems
collaborative filtering (Ghosh, Mundhe, Hernandez, & Sen, 1999; Pennock, Horvitz, &
c
2015
AI Access Foundation. rights reserved.

fiBrandt, Brill, Hemaspaandra, & Hemaspaandra

Giles, 2000), web spam reduction improved web-search engines (Dwork, Kumar, Naor,
& Sivakumar, 2001), planning (Ephrati & Rosenschein, 1997). electronic settings,
elections may huge numbers voters alternatives.
One natural worry elections agents may try slant outcome, example, bribing voters. Motivated work economics political science showing
reasonable election systems always allow manipulation cases (Gibbard, 1973;
Satterthwaite, 1975; Duggan & Schwartz, 2000), starting 1989, Bartholdi, Orlin, Tovey,
Trick (Bartholdi, Tovey, & Trick, 1989; Bartholdi & Orlin, 1991; Bartholdi, Tovey,
& Trick, 1992) made thrilling suggestion elections protected via complexity
theorynamely, making attackers task NP-hard. line active ever
since. resulted NP-hardness protections proven many election systems,
attacks bribery (the attacker budget buy alter
voters votes, Faliszewski, Hemaspaandra, & Hemaspaandra, 2009), manipulation (a coalition voters wishes set votes make given candidate win, Bartholdi et al.,
1989; Bartholdi & Orlin, 1991), control (an agent seeks make given candidate win
adding/deleting/partitioning voters candidates, Bartholdi et al., 1992). book
chapter Faliszewski, Hemaspaandra, Hemaspaandra, Rothe (2009b) surveys
NP-hardness results, apply many important election systems plurality,
single transferable voting, approval voting.
past years, flurry papers come asking whether NP-hardness
protections satisfying. particular, papers explore possibility heuristic
algorithms may well frequently approximation algorithms may exist.
papers questioned. example, influential frequency paper (Friedgut, Kalai, & Nisan, 2008, see journal version, Friedgut, Kalai, Keller,
& Nisan, 2011) assumes voter random independent candidate preference
ordering, model seem reflect typical voter behavior. approximations, work showing certain voter-control settings (different
studied paper) polynomial-time algorithms use, example,
log number candidates times many added voters optimal approach
would need (Faliszewski, Hemaspaandra, & Hemaspaandra, 2013). However, campaign
manager might well financial resources motivate many extra people
come vote, rather would want know smallest possible number votes
add reach victory.
present paper questions NP-hardness results completely different direction. political science, perhaps canonical model electorates unidimensional single-peaked model. model, electorate preferences
one-dimensional spectrum (e.g., liberal conservative) along
candidates located, voters preferences (loosely put)
peak, affinity declining one moves away peak. brilliant paper Walsh
(2007) recently asked whether NP-hardness protections manipulation fall apart
electorates single-peaked. case Walsh looked at, answer proved no;
looked particular NP-hardness manipulation protection proved holds even
single-peaked societies. Faliszewski, Hemaspaandra, Hemaspaandra, Rothe (2011),
inspired Walshs work, looked range election systems came sharply dif440

fiBypassing Combinatorial Protections

Problem

General cases complexity

Single-peaked cases
complexity

approval:
bribery
negative-bribery
strongnegative-bribery

NP-comp. (Faliszewski et al., 2009)
NP-comp. (Thm. 4.3, part 1)
NP-comp. (Thm. 4.3, part 1)

P (Thm. 4.2)
P (Thm. 4.3, part 2)
P (Thm. 4.3, part 2)

NP-comp.
NP-comp.
NP-comp.
NP-comp.
NP-comp.

P (Thm. 4.7)
P (Thm. 4.7)
P (Thm. 4.7)
NP-comp. (Thm. 4.7)
P (Thm. 5.3)

Llull:
bribery
$bribery
weighted-bribery
weighted-$bribery
control
voter partition
Kemeny:
winner
bribery
$bribery
weighted-bribery
weighted-$bribery

(Faliszewski
(Faliszewski
(Faliszewski
(Faliszewski
(Faliszewski

et
et
et
et
et

al.,
al.,
al.,
al.,
al.,

2009)
2009)
2009)
2009)
2009a)

p2 -comp. (Hemaspaandra et al., 2005)
p2 -hard (Thm. 4.8)
p2 -hard (Thm. 4.8)
p2 -hard (Thm. 4.8)
p2 -hard (Thm. 4.8)

P (Thm. 3.3)
P (Thm. 4.9)
P (Thm. 4.9)
P (Thm. 4.9)
NP-comp. (Thm. 4.9)

Table 1: single-peakedness (often) lowers complexity key election problems.

fering conclusion many crucial cases, NP-hardness protections manipulation
control vanish single-peaked electorates.
present paper young line research complexity manipulative actions
context single-peaked electorates. work seeks take line research
new directions, improve one existing direction, following contributions:
1. (Section 3) show checking winner Dodgson, Young, Kemeny elections, known p2 -complete general case (respectively due
Hemaspaandra, Hemaspaandra, & Rothe, 1997, due papers Theorem A.2
based adapting proof Rothe, Spakowski, & Vogel, 2003, due Hemaspaandra, Spakowski, & Vogel, 2005), polynomial time single-peaked electorates
(Corollary 3.3 Theorem 3.4).
algorithm shows Dodgson elections good example general
technical theme paper: single-peakedness often precludes combinatorial explosion. particular case, single-peakedness simplify seemingly
exponential-sized search space series exchanges provide upper bounds
Dodgson scores, allow us instead search polynomial-sized possibility space related particular, simple set exchanges happening limited
two voters.
2. (Section 4) first time study effect single-peaked electorates
complexity bribery. show many NP-hardness protections bribery
441

fiBrandt, Brill, Hemaspaandra, & Hemaspaandra

general case vanish single-peaked electorates. (Table 1 provides key
examples examples lowering complexity.) show this,
give polynomial-time bribery algorithms single-peaked electorates many settings. polynomial-time algorithms apply approval voting (Theorem 4.2
Theorem 4.3) rich range weak-Condorcet consistent election systems
even systems merely known weak-Condorcet consistent
electorate single-peaked (Corollary 4.5), including weakBlack, weakDodgson,
Fishburn, Kemeny, Llull, Maximin, Schwartz, Young, two variants Nanson
due Fishburn Schwartz.
right general interpretation underlies NP-hardness results
use (in outputs reductions establishing NP-hardness) sets voter preferences
intricate simply cannot realized single-peaked societies.
practical lesson skeptical NP-completeness results
electorate may limitations (such single-peakedness) ensembles
votes produces. specific technical reason obtain polynomial-time
bribery algorithms NP-hardness proofs based combinatorially
rich structure covering problems (whose core challenge incomparability
voters), (see proof Theorem 4.2) use single-peakedness create
directional attack covering problems effect locally removing
incomparability.
3. (Section 5) first time study effect single-peaked electorates
complexity control partition voters, voters partitioned
two groups vote candidates primary elections, winners
primaries compete final election. one seven types control
introduced seminal control paper Bartholdi et al. (1992), control
partition voters previously addressed single-peaked case.
show known NP-hardness protections control-by-partition vanish
single-peaked electorates, giving polynomial-time algorithms
single-peaked control partition (Theorems 5.2 5.6, Corollary 5.3).
general interpretation practical lesson
mentioned bribery case. However, technical way obtain control-bypartition result differs here. technical challenge exponential number
partitions, algorithms circumvent using single-peakedness allow
us effect structure huge number partitions polynomial number
classes partitions class look class rather
explore member partitions.
shared technical theme bribery case single-peakedness
used tame combinatorial explosion (of partitions covers)
general case protected elections attack, particular single-peakedness yields
polynomial-time attack algorithms.
4. final contribution (Section 6) strong extension important result
Faliszewski et al. (2011). broad class election systems known scoring
protocols, Faliszewski et al. gave complete characterization computational
442

fiBypassing Combinatorial Protections

complexity (weighted, coalition) manipulation problem case singlepeaked elections three candidates. characterizations important
tell systems easily manipulable systems
makes easily manipulable. extend providing, single-peaked
electorates, complete characterization easy manipulability scoring protocols
(Theorem 6.2). is, extend three-candidate theorem Faliszewski et al.
(2011) result holds number candidates, allows one
immediately read complexity manipulation scoring protocol,
single-peaked electorates.
proof organization follows. four result sections contains one
spotlight theorem, whose proof give within section itself. proofs seek
give key flavor techniques, text proofs often try
informally describe proofs ideas approaches. first three four spotlight
proofs directly support, fourth spotlight proof part, papers technical
theme single-peakedness tames combinatorial explosion. appendix contains,
completeness, proofs results, definitions omitted main
text.

2. Preliminaries
section presents preliminaries topics election systems, preferences, notions
related Condorcet consistency, single-peakedness.
2.1 Election Systems, Preferences, weakCondorcet Consistency
election system (or election rule) mapping finite set candidates C
finite collection V voter preferences candidates collection W C
called winner set.1 one election systems cover, voters
preference linear order (by always mean strict linear order: irreflexive,
antisymmetric, complete, transitive relation) candidates. election system
called approval voting, voter votes bit-vector, approving disapproving
candidate separately. Voters preferences input list ballots (i.e., votes),
multiple voters preference, ballot appear separately V .
briefly describe election systems central paper. approval
voting, preferences approval vectors, candidate gets highest number
approvals among candidates belongs winner set. systems use,
voters vote linear orders. candidate said Condorcet winner (respectively,
weak Condorcet winner ), candidate preferred candidate strict
majority (respectively, least half) voters. Condorcet voting (or Condorcet
elections) winners precisely set Condorcet winners. election system
1. social choice theory, called social choice correspondence. Social choice theorists often exclude
case allowing function empty set winners, following Bartholdi et al. (1992)
many computationally oriented papers, artificially exclude case definitions.
However, except elections zero candidates, systems discuss might ever output
empty set winners Condorcet weakCondorcet.

443

fiBrandt, Brill, Hemaspaandra, & Hemaspaandra

weakCondorcet, winners precisely set weak Condorcet winners.
known two hundred years election instances neither Condorcet winners
weak Condorcet winners (Condorcet, 1785). course, election instance
one Condorcet winner, whereas might several weak Condorcet
winners.
Let , 0 1, rational number. Copeland (Copeland, 1951, = 12 ;
Faliszewski et al., 2009a, general rational ) election system defined follows.
pair distinct candidates, consider one (if any) preferred
two strict majority voters. one gets one Copeland point
pairwise contest gets zero Copeland points. candidates
pair tie pairwise contest (which happen number voters
even), gets points. = 1, Copeland known Llull, system defined
mystic Ramon Llull thirteenth century (see Hagele & Pukelsheim, 2001).
Llulls election system known remarkably resistant, computationally, bribery
control attacks (Faliszewski et al., 2009a, although see Erdelyi, Nowak, & Rothe,
2009, Erdelyi & Rothe, 2010, Erdelyi, Piras, & Rothe, 2011, Menton, 2013, different
highly resistant systems, see Hemaspaandra, Hemaspaandra, & Rothe, 2009, regarding
extremely resistant artificial systems constructed).
important class elections, focus Section 6, class
scoring protocols. scoring protocol fixed number candidates defined
scoring vector = (1 , 2 , . . . , ) Nm , 1 2 . Voters votes
linear orders, voter contributes 1 points preferred candidate,
2 points next preferred candidate, on. candidate whose
total number points least great totals candidate winner.
example, m-candidate plurality voting scoring protocol defined scoring
m1
z }| {
vector = (1, 0, . . . , 0). m-candidate Borda voting scoring protocol defined
scoring vector = (m 1, 2, . . . , 0).
Kemeny elections based
P concept Kemeny consensus. linear order > minimum Kemeny score, a,bC, > b k{v V | v prefers b a}k, said
Kemeny consensus. usual, kSk denotes cardinality finite set S. candidate c
Kemeny winner c ranked first Kemeny consensus. Kemeny elections
introduced Kemeny (1959, see Kemeny & Snell, 1960).
Black elections (respectively, weakBlack elections), Condorcet winner (respectively, weak Condorcet winners), defines winners, otherwise Bordas method used select winners. Black elections introduced Black
(1958) weakBlack elections (somewhat confusingly called Black elections there)
introduced Fishburn (1977). Dodgson elections (respectively, weakDodgson elections),
whichever candidates fewest repeated transpositions adjacent candidates
voters orders become Condorcet winners (respectively, weak Condorcet winners)
winners. Dodgson elections introduced 1800s Dodgson (1876) weakDodgson elections (somewhat confusingly called Dodgson elections there) introduced
Fishburn (1977) studied McCabe-Dansted, Pritchard, Slinko (2008).
Young elections (respectively, strongYoung elections), whichever candidates
deletion fewest voters become weak Condorcet (respectively, Condorcet) winners
444

fiBypassing Combinatorial Protections

winners. Young elections introduced Young (1977) strongYoung elections
(somewhat confusingly called Young elections there) introduced Rothe et al. (2003).
important notion paper weakCondorcet-consistent. election system said weakCondorcet-consistent (which earlier wrote, equivalently,
weak-Condorcet consistent), every input least one weak Condorcet winner, winners election system exactly set weak Condorcet winners.2
bribery results hold election systems weakCondorcetconsistent, even election systems restricted single-peaked electorates
weakCondorcet-consistent.
Fishburn (1977) noted election systems weakBlack, weakDodgson, Fishburn, Maximin, Young weakCondorcet-consistent. add observation
Llull elections easily seen definition weakCondorcet-consistent.
make (new) observation election systems Kemeny, Schwartz,
two variants Nanson due Fishburn Schwartz weakCondorcet-consistent
restricted single-peaked electorates. (By Fishburn, 1977, Niou, 1987, systems
known weakCondorcet-consistent general case.) note
Black, Dodgson, original version Nanson, , 0 < 1, Copeland elections weakCondorcet-consistent even restricted single-peaked electorates.
seen following universal counterexample. Let two voters preferences b > > c c > b > a. preferences single-peaked respect
societal ordering L b L c (the notion societal orders explained two paragraphs present one). Candidates b c weak Condorcet winners,
mentioned election systems chooses b. Similarly, note strongYoung
weakCondorcet-consistent single-peaked electorates election two
voters whose preferences > b > c c > b > a, candidates weak Condorcet
winners, strongYoung yields candidates c. appendix includes definitions
election systems Fishburn, Maximin (a.k.a. Simpson), Nanson, proves
new observations made paragraph.
2.2 Single-Peaked Preferences
papers theme combinatorial protections crumble case single-peaked
electorates. briefly define single-peaked preferences motivation is.
single-peaked preference model introduced half century ago Black
(1948, 1958) influential ever since. model captures case
electorate polarized single issue dimension, voters utility along
dimension either one peak rises falls. Candidates positions (locations)
along dimension. voters preferences (in linear order model) simply order
candidates utility (except ties allowed). Since utility curves flexible,
amounts overall societal ordering L candidates,
voter placed location candidates
2. nomenclature literature varied here. authors use term weak Condorcetconsistent mean systems always select weak Condorcet winners perhaps additional winners. denote weakCondorcet-consistent precisely Fishburn (1977) calls
[obeying the] strict Condorcet principle.

445

fiBrandt, Brill, Hemaspaandra, & Hemaspaandra

voters
v1
v2
v3
v4

utility

c1
liberal

c2

c3

c4

candidates

c5
conservative

Figure 1: Example single-peaked electorate four voters, utility functions
shown.

right preferences drop left, although within framework,
right left candidates interspersed other. picture make
clearer. Figure 1 shows electorate four voters five candidates,
societys polarization (liberal-to-conservative) axis. picture, see
v1 preferences c5 > c4 > c3 > c2 > c1 , v2 preferences c1 > c2 > c3 > c4 > c5 ,
v3 preferences (note interleaving) c2 > c3 > c1 > c4 > c5 , v4 preferences
c4 > c5 > c3 > c2 > c1 .
Formally, many equivalent ways capture behavior, use
following definition. collection V votes (each linear ordering >i
candidates) candidate set C said single-peaked exactly exists linear ordering L C triple candidates a, b, c, holds
(a L b L c c L b L a) (i) [a >i b b >i c].
single-peaked model intensely studied, strengths limitations. positive side, excellent rough model wide range elections.
Votes ranging American presidential elections US Supreme Court votes hiring
votes within CS department often shockingly close reflecting single-peaked preferences. certainly vastly reasonable model settings assuming
voters random independent, although latter model receiving
huge amount study recently. fact, wide range scholarly studies argued
value single-peaked model (Black, 1948, 1958; Davis, Hinich, & Ordeshook, 1970;
Niemi & Wright, 1987; Procaccia & Rosenschein, 2007; Krehbiel, 1998), model
one first taught students positive (i.e., theoretical) political science courses.
hand, electorates certainly driven multidimensional concerns,
even heavily unidimensional electorate may outside-the-box voters (e.g., voters
election polarized liberal-conservative axis decide votes instead based
on, example, religion race). Simply put, model, speaks simplified
version world.
446

fiBypassing Combinatorial Protections

single-peaked model makes sense approval voting (Faliszewski et al., 2011):
There, voter intuitively may thought utility threshold starting
approves candidates. means voters approved candidates
must contiguous within societys linear order L. Formally, define saying
election instance (of approval voters) single-peaked exactly exists linear
order L triple candidates a, b, c, L b L c (i) [{a, c}
Approvesi b Approvesi ], Approvesi set candidates voter approves.
Following suggestion Walshs (2007) seminal work, assume (except
make something else clear) societys linear order part input singlepeaked winner, bribery, manipulation, control problems. However, mention
passing given election instance, one polynomial time tell whether voters
single-peaked polynomial time compute societal linear order
instantiating single-peakedness (by Bartholdi Trick, 1986, Doignon Falmagne,
1994, Escoffier, Lang, Ozturk, 2008, linear-order preferences and, pointed
Theorem 2.1 Faliszewski et al., 2011, Fulkerson Gross, 1965, Booth
Lueker, 1976, approval preferences). One course easily, polynomial
time, check whether given linear order one respect given set votes
single-peaked.
want get results quickly possible, define needed
notions winner, bribery, control, manipulation start section
particular topic.

3. WeakCondorcet Elections, Single-Peaked Electorates, Bypassing
Winner-Problem Complexity
main results sections paper study whether single-peakedness bypasses
complexity-theoretic protections attacks elections. moving sections, quickly present results showing single-peakedness bypasses
complexity results systems even telling won. Unlike protection
attack complexity-shield bypassings, sense bad news (for security election systems), winner-hardness complexity-shield bypassings
good newstaming complexity election systems Dodgson Kemeny
single-peaked case, despite fact known NP-hard winner problems
general case.
given election system E, winner problem takes input election, (C, V ),
candidate p C, asks p winner election whose candidates C
whose votes V (where V collection votes candidate set C).
speak single-peaked case winner problem, input contain linear
order L relative election single-peaked. (Formally, part winner-problem
task check input indeed single-peaked relative L. However, since
polynomial-time check caseslinear orders approval vectorsthat deal
with, tacitly view appropriateness L syntactic condition input,
although really syntactic.) Note weakCondorcet winner problem P
general case thus certainly single-peaked case. Furthermore, something
447

fiBrandt, Brill, Hemaspaandra, & Hemaspaandra

used often papers proofs following standard fact Condorcet voting
medians.
Fact 3.1. Let (C, V ) election votes linear orders C, let L
linear order respect (C, V ) single-peaked. Associate voter
candidate top voters preference ordering. Order voters respect L
terms association.
kV k odd unique weakCondorcet Condorcet winner winner
top preference median voter. kV k even weakCondorcet winner set
set candidates L fall range, inclusively, top preference
leftmost two median voters top preference rightmost two
median voters (and two coincide, candidate Condorcet winner
otherwise Condorcet winner).
example, ordered-by-L picture candidates voters
top choices are:
v3
v6
v1
v2
v4
v5
c1

c2

c3

c4

c5

c6

c2 , c3 , c4 weak Condorcet winners, since candidates preferred
candidates right v1 , v2 , v3 , candidates left v4 , v5 ,
v6 . c1 weak Condorcet winner, since voters v1 prefer c2 c1 .
c5 c6 weak Condorcet winners, since v1 , v2 , v3 , v4 prefer c4 c5 c6 .
Finally, note Condorcet winner, since Condorcet winner unique
weak Condorcet winner.
immediate consequence Fact 3.1 well-known fact single-peaked
elections, always least one weak Condorcet winner (we tacitly assuming
C 6= ). Since earlier noted winner problem P weakCondorcet elections,
following holds.
Theorem 3.2. election system E weakCondorcet-consistent restricted
single-peaked electorates, winner problem P restricted single-peaked
elections.
course, many systems winner problem obviously P even general.
Yet get interesting consequences Theorem 3.2 following (recall
Section 2 Young weakDodgson weakCondorcet-consistent, Kemeny
weakCondorcet-consistent restricted single-peaked electorates).
Corollary 3.3. restricted single-peaked electorates, winner problems Kemeny, Young, weakDodgson elections P.
contrast, general-case Kemeny winner problem problem proven Hemaspaandra et al. (2005) p2 -complete.3 prove paper generalcase winner problems Young weakDodgson elections p2 -complete well (see
3. p2 class sets solved polynomial-time parallel access NP (Papadimitriou &
Zachos, 1983; Hemachandra, 1989). Throughout paper, completeness always refers completeness
respect polynomial-time many-one reductions.

448

fiBypassing Combinatorial Protections

Theorems A.2 A.4 appendix). So, Theorem 3.2 implies sharp complexity simplifications three election systems. mention passing even generalization single-peakedness known bounded single-peaked width (Cornaz, Galand,
& Spanjaard, 2012), work Cornaz, Galand, Spanjaard (2013) done subsequent Corollary 3.3 (Brandt, Brill, Hemaspaandra, & Hemaspaandra, 2010) shows
polynomial time one find Kemeny winner, find score
winnerand thus Kemeny winnerswill have. (This necessarily mean one
polynomial-time algorithm testing, generalized setting, whether given
candidate Kemeny winner.)
identify weakCondorcet approach worked Young weakDodgson elections apply Dodgson strongYoung elections. However,
constructed direct algorithms solve winner problems polynomial time
single-peaked case. state theorem, prove immediately
spotlight proof section.
Theorem 3.4. restricted single-peaked electorates, winner problems Dodgson strongYoung elections P.
Proof. Recall following easy characterization Condorcet winners singlepeaked setting. kV k odd, top choice median voter Condorcet winner.
kV k even, two cases: either median voters top choice
not. former case, median voters preferred candidate Condorcet winner,
latter case Condorcet winner (since top choices two medians,
different, tie other).
Given election instance (C, V ) valid single-peaked order L, show
compute strongYoung winners polynomial time. Recall strongYoung winners
candidates made Condorcet winners fewest voter deletions.
mention C = never winners. zero voters, candidates
strongYoung winners, tie distance , convention.4 (C, V )
Condorcet winner, unique strongYoung winner. Otherwise kV k 2 even
two median voters different top choices, say m` mr . strongYoung
winner set {m` , mr }, two candidates strongYoung score 1, one
score 0, everyone else score least 2.
show Algorithm 1, clearly runs polynomial time, computes
Dodgson winners. Recall Dodgson winners candidates fewest
repeated transpositions adjacent candidates voters orders (so-called switches) become
Condorcet winners. kCk = 0, winners, kV k = 0, C ties
winners, (C, V ) Condorcet winner, candidate unique Dodgson
winner. assume kV k 2 even two median voters different top choices,
say m` mr , m` L mr , candidate Dodgson score 0. intuition behind
4. Regarding line Algorithm 1 handling zero-voter zero-candidate case, one might
wonder dont define election problems allow cases. answer is, first,
unattractive simplify proofs altering problems. But, compellingly, control problems
important papers, control problems inputs small number
candidates (respectively, voters) create situations small numbers candidates
(respectively, voters). particular, legal partitions within partition-control types leave one
candidates voters.

449

fiBrandt, Brill, Hemaspaandra, & Hemaspaandra

algorithm follows. show every Dodgson winner weak Condorcet winner.
show always turn weak Condorcet winner Condorcet winner
minimum number switches making changes two voters.5 proof
correctness follows immediately Claims 3.5 3.6 below. Note Fact 3.1,
set weak Condorcet winners consists candidates L fall range,
inclusively, m` mr . denote set [m` , mr ]L .
Claim 3.5. Algorithm 1 find correct Dodgson score candidate p [m` , mr ]L .
Claim 3.6. Every Dodgson winner [m` , mr ]L .
proofs two claims, use following simple claim.
Claim 3.7.

1. Let p [m` , mr ]L . (a L b L p p L b L a) ties p, b ties p.

2. mr L d, mr beats d. L m` , m` beats d.6
Proof Claim 3.7.
1. know half voters prefer p half voters prefer p a.
voters prefer p prefer b p. implies p best ties b.
Fact 3.1, p weak Condorcet winner. follows p ties b.
2. prove first statement. proof second statement analogous. Suppose
contradiction mr beat d. Since mr weak Condorcet winner,
mr ties d. Let db candidate immediately right mr (with respect L).
Using part 1 claim, follows db ties mr .
Since db weak Condorcet winner, exists candidate c c beats
b Note c L mr L db mr L db L c. c L mr L d,
b every voter prefers c
d.
b mr beats d,
b contradicts fact mr ties
db prefers mr d.
b
b
d. mr L L c, every voter prefers c db prefers db mr . c
db beat mr , contradicts fact mr weak Condorcet winner.
q Claim 3.7
Proof Claim 3.5. Consider optimal (with respect number switches) way
turn p Condorcet winner. first assume T` 6= Tr 6= . Let c`
leftmost candidate T` let cr rightmost candidate Tr . Since p needs
gain vote c` , exists voter v` c` >v` p p gets switched beyond c`
v` . Since p needs gain vote cr , exists voter vr cr >vr p p
gets switched beyond cr vr . Let A` , B` , C` sets candidates v` order
form
A` > c` > B` > p > C` .
5. One might think turning weak Condorcet winner Condorcet winner would equivalent
making sure median voters candidate top choice. However, note
electorate may longer single-peaked switches, footnoted statement
surprising harder prove one might think.
6. Note possible candidate weak Condorcet winner tie weak Condorcet
winner. example, universal counterexample end Section A.2, candidate a,
weak Condorcet winner, ties weak Condorcet winner c.

450

fiBypassing Combinatorial Protections

Algorithm 1 Dodgson winners
1: kV k = 0 kCk = 0
2:
return C
3: else kV k odd (kV k even two median voters top choice)

4:
return candidate chosen median voter(s)
5: else
6:
Let m` mr , m` L mr , top choices median voters
7:
p [m` , mr ]L
8:
DodgsonScore(p)
9:
Let T` set candidates c c L p c ties p
10:
Let Tr set candidates c p L c c ties p
11:
v` , vr V T` >v` p Tr >vr p
12:
Move p order v` beyond every candidate T`
13:
Move p order vr beyond every candidate Tr
14:
Let n number switches used
15:
n < DodgsonScore(p)
16:
DodgsonScore(p) n
17:
return {p C | DodgsonScore(p) DodgsonScore(c) c [m` , mr ]L }
Let Ar , Br , Cr sets candidates vr order form
Ar > cr > Br > p > Cr .
Note T` >v` p >v` Tr Tr >vr p >vr T` . Clearly, v` 6= vr takes kB` k + 1
switches switch p beyond c` v` takes kBr k + 1 switches switch p beyond cr
vr . kB` k + kBr k + 2 switches, v` order turned A` > p > c` > B` > C`
vr order turned Ar > p > cr > Br > Cr . Since T` Cr , still
ensure p gains vote every candidate A` T` since Tr C` , still
ensure p gains vote every candidate Ar Tr . So,
DodgsonScore(p) kB` k + kBr k + 2 + kA` T` k + kAr Tr k.
show Algorithm 1 correctly computes Dodgson score p. First note
algorithm computes upper bound Dodgson score, since p made
Condorcet winner iteration loop (recall Fact 3.1 p already
weak Condorcet winner). consider score computed algorithm voters v`
vr (since T` >v` p Tr >vr p, algorithm consider two voters).
analysis, may help keep mind c` L T` {c` } L p L Tr {cr } L cr .
top choice v` c` left c` , A` T` = . case,
moving p order v` beyond every candidate T` gives
A` > p > c` > B` > C` .
top choice v` right c` , every candidate c A` , c` L c L p.
follows Claim 3.7.1 A` = A` T` . case, algorithm changes v`
p > A` > c` > B` > C` .
451

fiBrandt, Brill, Hemaspaandra, & Hemaspaandra

cases, algorithm uses kB` k + 1 + kA` T` k switches v` . argument
shows algorithm uses kBr k + 1 + kAr Tr k switches vr . clearly makes p
Condorcet winner using kB` k + kBr k + 2 + kA` T` k + kAr Tr k switches. Since
upper bound (see above), follows
DodgsonScore(p) = kB` k + kBr k + 2 + kA` T` k + kAr Tr k.
still handle case T` = Tr = . Without loss generality,
assume Tr = . Since m` mr tie p m` 6= mr , follows T` 6= . Let c`
leftmost candidate T` . previous case, exist voter v` sets
candidates A` , B` , C` v` order form
A` > c` > B` > p > C`

DodgsonScore(p) kB` k + 1 + kA` T` k.
show Algorithm 1 correctly computes Dodgson score p. Consider
score computed algorithm voter v` letting vr arbitrary voter.
Since T` >v` p Tr >vr p (since Tr = ), algorithm consider two voters.
previous case, algorithm uses kB` k + 1 + kA` T` k switches v` .
since Vr = , algorithm uses zero switches vr . clearly makes p Condorcet
winner using kB` k + 1 + kA` T` k switches. Since upper bound, follows

DodgsonScore(p) = kB` k + 1 + kA` T` k.
q Claim 3.5
Proof Claim 3.6. Let 6 [m` , mr ]L . Without loss generality, assume mr L d.
show DodgsonScore(d) > DodgsonScore(mr ), implies
Dodgson winner. Let set candidates C {mr } mr ties with. Note
6= , since m` ties mr . every c , c L mr (by Claim 3.7.2) beat
c (half voters prefer c mr , since c L mr L d, voters prefer c mr d).
Consider optimal (with respect number switches) way turn
Condorcet winner. Let c` leftmost candidate . Since half voters prefer c`
mr d, exists voter v c` >v mr >v gets switched beyond c`
v. Let A, B, C1 , C2 sets candidates vs order form
> c` > B > mr > C1 > > C2 .
takes kBk + kC1 k + 2 switches switch beyond c` v, switches, vs
order turned
> > c` > B > mr > C1 > C2 .
still ensure gains vote every candidate . So,
DodgsonScore(d) kBk + kC1 k + 2 + kA k.
consider mr . Since c` leftmost candidate every c , c L mr ,
holds >v mr . Since mr weak Condorcet winner, moving mr order
452

fiBypassing Combinatorial Protections

v beyond every candidate makes mr Condorcet winner gives upper bound
Dodgson score mr .
top choice v c` left c` , = . case, moving
mr order v beyond every candidate gives
> mr > c` > B > C1 > > C2 .
top choice v right c` , every candidate c A, c` L c L mr .
follows Claim 3.7.1 = . case, moving mr order v beyond
every candidate gives
mr > > c` > B > C1 > > C2 .
cases, use kBk + 1 + kA k switches v. clearly makes mr Condorcet
winner,
DodgsonScore(mr ) kBk + 1 + kA k < DodgsonScore(d).
q Claim 3.6

follows Dodgson winner.

q Theorem 3.4
claims Theorem 3.4 contrast directly known p2 -completeness
general-case Dodgson (Hemaspaandra et al., 1997) strongYoung (Rothe et al., 2003)
winner problems, thus reflect substantial complexity simplification holds
electorates single-peaked. section focused election systems
Dodgson, Kemeny, Young, natural, important first three election
systems proven p2 -complete winner problems (for least one strong
weak variants). commend reader issue obtaining, election
systems hard winner problems, reductions winner complexity single-peaked
case.
Although Theorem 3.4 winners rather bribery/manipulation/control
protections, proof good, simple example papers theme single-peakedness
tames combinatorial explosions. Taking Dodgson example: general case (not
necessarily single-peaked votes), set paths potentially implement best Dodgson
scores combinatorially explosive (to best current knowledge). contrast,
single-peaked case searching paths implement best Dodgson scores turns
restrict changing two voters particularly simple way yields
polynomial-sized set options search space.

4. Bribery Single-Peaked Elections
section shows single-peakedness undercuts many, although all, NP-hardness
protections bribery problems.
453

fiBrandt, Brill, Hemaspaandra, & Hemaspaandra

4.1 Notions
bribery notions presented here, except negative approval bribery, paper started complexity-theoretic study bribery (Faliszewski, Hemaspaandra, &
Hemaspaandra, 2009). Given election system E, E-bribery problem takes input
C, V , p C, k {0, 1, 2, . . .}, asks if, changing votes k members V , p made winner election respect E. basic
bribery problem. modified combination following items. $
means voter price (belonging {1, 2, 3, . . .}) question whether
set voters whose total price k changing votes
make p winner. intuition prices voters swayed
easily others. Weighted means vote weight (belonging {1, 2, 3, . . .}),
weight w vote bribed indivisible object, applying E, viewed
w identical regular votes. intuition weights electionse.g.,
stockholdersvoters differing weights.
case V consists linear orders, negative mean bribe
voter bribe voter must p top choice unless p already
top choice bribe.7 intuition negative bribery one trying
stay radar directly helping ones candidate. voting approval
vectors, give definitions capture analog linear-preference negative
notion defined (negative) one one would get taking Faliszewski
et al. (2009) utterly literally (strong negative)see Footnote 7 background.
approval-vector votes, negative mean bribe voter,
after-bribe vector approve p before-bribe vector approved p.
strongnegative mean bribe voter voter bribed cannot
approve p. notions described occur combination, e.g., speak
Llull-negative-weighted-$bribery.
speak single-peaked case above, mean electorate
single-peaked, L relative votes single-peaked part
input. Further, bribes must result votes consistent input
societal order L. Taking L part input, binding legal bribes,
natural bribery analog manipulation model Walsh (2007) Faliszewski et al.
(2011). Binding bribes respect L natural, e.g., L widely known, central
authority may simply reject (as obviously manipulative votes) votes violate L.
although core model, many results carry models flexible
points, times point outsee Footnote 8, Footnote 9, final
paragraph Section 5.1.
7. Faliszewski et al. (2009) definition negative bribery naturally read quite
different semantics bribed voter must, bribe, p top choice.
Since paper used negative bribery plurality, issue made difference paper,
indeed since look negative bribery linear orders mostly respect weakCondorcet
single-peaked contexts, key issue either. switched definition
captures attractive notion: cannot directly boost preferred candidate p top,
votes p already top shift remaining preferences. distinction
two approaches negative change proofs case approval voting,
give separate definitions capture notion.

454

fiBypassing Combinatorial Protections

often speak bribery (or, later, manipulation control) problems
P (or polynomial time). Although formally asserts P algorithm
exists say whether successful bribery (or manipulation control) action exists, fact
every instance proof show addition obtain actual, successful
bribery (or manipulation control) action one exists. reason worth
mentioning that, even context elections, search plausibly harder
decision (Hemaspaandra, Hemaspaandra, & Menton, 2013).
4.2 Approval-Bribery Results
spotlight result approval-bribery, prove bribery protection
complexity gives fails single-peaked electorates.
Theorem 4.1 (Faliszewski et al., 2009). Approval-bribery NP-complete.
Theorem 4.2. Approval-bribery P single-peaked electorates.8
prove Theorem 4.2, informally explain key challenge (namely,
incomparability) exists regarding proving proof overcomes challenge
(namely, using directionality).
So, recall approval bribery single-peaked setting, societal order, L,
part input voter approves (possibly empty) set candidates
contiguous respect L. Suppose input linear order L c1 L c2 L c3 L L c100
respect society single-peaked. Suppose candidate briber trying
make win c25 . Suppose input limit number people briber
bribe 2009 suppose input election 5000 voters 3000 (call V )
initially approve c25 2000 (call V+ ) initially approve c25 . Now,
clearly, spend 2009 bribes voters V+ , voters already
approve c25 , bribing voter V+ never better bribing voter
V . So, goal seek good set 2009 voters V , exists.
key challenge, even given single-peakedness, stated word: incomparability. is, given know number approvals c25 go exactly
2009 bribe, given know total number approvals candidate
gets bribe, candidate ci c25 target number ni
among 2009 votes choose bribe V , least ni must initially
approved ci (in order c25 beat ci bribe).
Now, rub. Consider two voters V , one approves c30
c55 approves c40 c80 . Among two votes,
former helps us address positive ni values 30 39, latter helps us
address positive ni values 56 80. Since neither voters approval set contains
others, offer differing advantages, neither is, first glance, obviously one
include 2009. fact 3000 voters V thicket
incomparabilities. Indeed, trying find subset size 2009 (in particular example,
8. result holds model L part input model must find
L consistent input relative bribery possible. result holds even
modelnot core model prove itin bribed voters need respect
societal order bribed.

455

fiBrandt, Brill, Hemaspaandra, & Hemaspaandra

number vary input) feels much covering problem, fact
exactly path general case proven NP-hard Faliszewski et al.
(2009).
However, use single-peakedness tame combinatorial challenge choosing
good subset. particular use single-peakedness induce directional attack
locally make incomparability disappear moment need make
decision choosing 2009. (Although focus bribery,
construction arguments tailored that, mention line attack
modeled Faliszewski et al., 2011, call smart greedy algorithms
use study control attacks.) full proof appendix, key idea
easily conveyed reader kind visualize along us moment.
Consider largest ni > 0, (for purpose example) suppose
strictly greater 25let us say 93, suppose n93 = 3.
must include 2009 least three members V approve c93 .
three? Isnt incomparability still problem? No! Since chose largest
ni > 0, clearly n94 = = n100 = 0. although among voters V approve
c93 may incomparability approval ranges, range differences right
c93 utterly irrelevant, c25 already beating candidates anyway.
interesting issue is, among voters V approve c93 , leftmost approved
candidate isthe leftward better help possible ni deficits.
direct comparisons take action: put 2009
three voters (among V voters initially approve c93 ) whose approval range
leftmost. (If V lacks three voters approve c93 , since n93 = 3, successful bribery
impossible.) process continues one would expect: Based three
votes, ni values updated next leftmost ni > 0 satisfying 26 similarly
handled, ni > 0 26 handled, starting
end L analogously handle c1 c24 . neutralize ni > 0 within
2009 bribes among V , successful bribery, otherwise none possible.
concludes example single-peakedness creates directionality tames rich
covering problem caused incomparability.
fact, example essentially (if one removes particular integer values
used) complete proof case k kV k. note k kV k,
always make p winner bribing voters V , since bribe voters approve
p. following proof Theorem 4.2 gives careful exposition process.
However, reader comfortable somewhat informal presentation given may
wish least initially simply skip following detailed proof.
Proof Theorem 4.2. Let (C, V ) instance single-peaked election
societal order L given c1 L c2 L L ckCk let k bribe limit.
decide whether designated candidate p C made approval winner bribing
k voters. Without loss generality, assume bribe, bribed
voters approve p disapprove candidates.
Partition multiset V voters multiset V+ voters approve p
multiset V voters disapprove p. k kV k, obviously make p
winner bribing voters V , since bribe voters approve p. (The
case need bribe voter V+ everybody approves p (i.e., V = ),
456

fiBypassing Combinatorial Protections

exists candidate p approved every voter, want
make p unique approval winner; case, bribing one arbitrary voter obviously
suffices.)
assume k < kV k. Without loss generality, assume bribe
exactly k voters, successful bribe involves k voters
successful bribe involves exactly k voters. argue bribing
voter V+ never profitable bribing voter V . reason
ci C {p}, bribing voter V+ lowers quantity number approvals
ci number approvals p 1, whereas bribing voter V lowers
quantity least 1. Thus assume without loss generality bribe
voters V know bribe, p exactly b
k = kV+ k + k approvals.
candidate ci C {p}, let Vci multiset voters approve ci
define surplus ni ci ni = kVci k b
k. order make p winner, bribe
least ni voters Vci V candidates ci positive surplus.
Let us first consider candidates right p, i.e., candidates c p L c. order
avoid incomparability problems, start right end L. Let ci rightmost
candidate positive surplus ni > 0. know bribe least ni
voters Vci V , question ones. nj 0 j > i, solely
focus candidates left ci bribe ni voters Vci V whose approval
range extends furthest left ci . bribe, voters approve p only.
thereby achieved ni = 0 clear choice optimal sense
choice would removed greater number approvals candidates
p (ignoring candidates right ci ).
update surplus candidates move next rightmost candidate ci0 right p positive surplus. (Observe i0 < j > i,
nj initially nonpositive surplus candidate never grows bribing voter
approve p.) repeat procedure candidates right p
nonpositive surplus, point mirror societal order repeat whole
process, thereby handling candidates c c L p.
exceed bribe limit k process, cannot successful bribery
action: choices made algorithm provably least good
choice would been. If, hand, bribing k 0 k voters suffices
make surpluses nonpositive, bribe (k k 0 ) additional voters chosen arbitrarily
V (to ensure p b
k approvals) thereby found successful bribery
action.
q Theorem 4.2
general approach used prove Theorem 4.2using directional attack
single-peaked setting tame incomparability challenges covering problems
establish following two additional cases NP-hard bribery problems fall
P single-peaked case.
Theorem 4.3. following hold:9
9. claim standard model: nonunique-winner model (i.e., ask preferred candidate p
made winner); societal order L given part input; bribed voters must still
respect L. However, note passing claim still holds choices one make

457

fiBrandt, Brill, Hemaspaandra, & Hemaspaandra

1. Approval-negative-bribery approval-strongnegative-bribery NP-complete.
2. single-peaked electorates, approval-negative-bribery approval-strongnegativebribery P.
Faliszewski, Hemaspaandra, Hemaspaandra (2011a, see Faliszewski, Hemaspaandra, & Hemaspaandra, 2011b) observed constructions proofs
Theorem 4.2 Theorem 4.3 (part 2) used show results hold even
flexible model logarithmic number voters violate
societal linear order.
4.3 Llull-Bribery Kemeny-Bribery Results: weakCondorcet Consistency
state following eight-case result. membership-in-P claims Theorem 4.4
proven direct algorithmic attacks using connection weakCondorcet
median voters. theorems NP-completeness claims shown reductions
NP-complete problems Knapsack Partition.
Theorem 4.4. single-peaked electorates, weakCondorcet-weighted-$bribery, weakCondorcet-negative-weighted-bribery, weakCondorcet-negative-weighted-$bribery
NP-complete, remaining five cases (weakCondorcet-bribery, weakCondorcet$bribery, weakCondorcet-weighted-bribery, weakCondorcet-negative-bribery, weakCondorcetnegative-$bribery) P.
Theorem 4.4 interesting says weakCondorcet elections,
immediate consequences election systems.
Corollary 4.5. Let E election system weakCondorcet-consistent
merely weakCondorcet-consistent single-peaked inputs. three NP-completeness
five P results Theorem 4.4 hold (for single-peaked electorates) E.
discussions earlier paper, Corollary 4.5 applies Llull, Kemeny,
Young, weakDodgson, Maximin, Schwartz, weakBlack, Fishburn, two variants
Nanson due Fishburn Schwartz. light this, Corollary 4.5 quietly establishing
large number claims NP-hardness shields failing single-peaked electorates.
example, following claims.
Theorem 4.6 (Faliszewski et al., 2009). Llull-bribery, Llull-$bribery, Llull-weighted-bribery,
Llull-weighted-$bribery NP-complete.
Theorem 4.7 (follows Corollary 4.5). single-peaked electorates: Llull-bribery,
Llull-$bribery, Llull-weighted-bribery P Llull-weighted-$bribery NPcomplete.
regarding: nonunique-winner model vs. unique-winner model; L part input vs. asking
whether exists valid L respect successful bribery accomplished;
bribed voters respect L model vs. model bribed voters may violate L. Seeing
result holds various alternate models requires natural modifications proof cases
(e.g., nonunique vs. unique), requires taking advantage specific properties construction
cases (e.g., regarding allowing bribed voters violate L, constructions actually bribe
voters end approving zero one candidate, votes consistent every ordering).

458

fiBypassing Combinatorial Protections

best knowledge, bribery Kemeny elections never studied. Note,
however, winner problem election system E many-one reduces
eight types bribery problems mentioned Theorem 4.4, except weakCondorcet
replaced E. holds ask whether preferred candidate wins
given bribe limit 0, captures winner problem. So, known
p2 -completeness winner problem Kemeny elections (Hemaspaandra et al., 2005),
following result, gives us eight contrasts hardness (three
p2 -hardness NP membership five p2 -hardness P membership).
Theorem 4.8. Kemeny elections, eight types bribery mentioned Theorem 4.4
p2 -hard.
Theorem 4.9 (follows Corollary 4.5). single-peaked electorates, Kemeny-weighted$bribery, Kemeny-negative-weighted-bribery, Kemeny-negative-weighted-$bribery NPcomplete (and particular belongs NP). single-peaked electorates,
remaining five types bribery Kemeny elections P.
final remark regarding Theorem 4.4, note even within single-peaked
cases studies, one twist, changing bribery negative bribery
changes complexity, namely, single-peaked electorates, weakCondorcet-weightedbribery P weakCondorcet-negative-weighted-bribery NP-complete. Here, decreasing set bribes available briber actually boosts complexity
bribers task. (The explanation is, loosely intuitively speaking,
among set bribes negativity removes search space set bribes
used P-time nonnegative case bribery attack.)

5. Control Partition Single-Peaked Electorates
control problems elections ask whether various types changes elections
structure given candidate made winner. (In papers, seeking make
candidate winner structural changes called constructive control distinguish
destructive case trying preclude candidate winning.
However, paper always use control constructive sense, unless explicitly
mention otherwise.) types control introduced 1992 Bartholdi, Tovey,
Trick, (give take slight refinements) studied subsequent
papers, addition/deletion/partition voters/candidates. However, best
knowledge previous study complexity control single-peaked electorates (such
Faliszewski et al., 2011) focused exclusively additions deletions candidates
voters.
first time study complexity partition problems case singlepeaked electorates. show broad range election systems control
partition voters problem P single-peaked electorates. Among systems
Llull Condorcet elections, whose control partition voters problem
known NP-complete general electorates. proofs work using singlepeakedness tame combinatorial explosionin case, number partitions
must examined reduced exponential number partitions polynomial
number classes partitions checked block.
459

fiBrandt, Brill, Hemaspaandra, & Hemaspaandra

5.1 Notions
define key types control study: control partition
voters, control adding voters, control deleting voters.
Partition voters models case partitioned electorate primaries.
example Faliszewski et al. (2009a) business group powerful manager studies
issue splitting group two task forces (by voting) recommend
alternatives part final vote conducted entire group. (loosely)
corresponds control partition. Control adding voters loosely models actions
targeted get-out-the-vote drives. Control deleting voters loosely models actions
targeted attempts voter suppression.
partition case, two first-round elections second-round
election, two different approaches candidates move forward
first-round election. One Ties Promote (TP) model, winners firstround election move forward. Ties Eliminate (TE) model, which,
first-round election, unique winner moves forward unique winner
otherwise one moves forward first-round election. consistency, control
definitions adopted, often word-for-word, papers Hemaspaandra
et al. (2013), Faliszewski et al. (2009a), Faliszewski, Hemaspaandra, Hemaspaandra
(2014).
Definition 5.1. Let E election system.
1. control partition voters problem E, TP TE tie-handling rule
model, given election (C, V ) candidate p C. partition10
V V1 V2 p winner two-stage election winners
election (C, V1 ) survive tie-handling rule compete winners
(C, V2 ) survive tie-handling rule? two first-round one
second-round elections conducted using election system E.11
2. control adding voters problem E given set candidates C,
two collections voters, V (often referred collection registered voters)
W (often referred collection unregistered voters), preferences
C, candidate p C, nonnegative integer K. ask whether
subcollection W 0 W (a) kW 0 k K, (b) p winner E election
(C, V W 0 ).
3. control deleting voters problem E given election (C, V ),
candidate p C, nonnegative integer K. ask whether collection
V 0 voters obtained V deleting K voters p
winner E election (C, V 0 ).
10. partition collection pair collections (A1 , A2 ) A1 A2 = A1 A2 = ;
since different voters preferences, multiset operations.
11. important note definition draw it, speak election,
(C 0 , V 0 ), always implicitly mean vote V 0 passed election system
version restricted candidates C 0 . particular, relevant second-round
election here.

460

fiBypassing Combinatorial Protections

three definitions called nonunique-winner model,
namely, question is: p made winner final election? Another model
studied literature called unique-winner model,
questions replaced with: p made uniquely win final election?
find natural study TP, nonunique-winner model. (TP nonunique-winner
pair naturally, TE unique-winner.) contrast, seminal control paper
Bartholdi et al. (1992) used unique-winner model. clear broad possible
models results hold in, checked results hold
four model combinations (i.e., TP unique-winner, TP nonunique winner, TE
unique-winner, TE nonunique-winner).
speak control problem single-peaked electorates, mean
societal order L part input. mean single-peakedness must hold
entire input (including potentially added candidates voters). However,
control, turns just-mentioned model polynomial-time membership holds
polynomial-time membership holds model one given L
part input rather one asked whether exists linear order L relative
input (as before, even including potentially added candidates voters)
single-peaked goal achieved given control action.
claim formalized Theorem A.5 proven appendix. light Theorem A.5,
simply assume control results default model (societal order part
input).
5.2 Control Results Related weakCondorcet Elections
section present control results, focus control partition voters. see although Llull Condorcet elections NP-hard voter-partition
control problems, problems fall polynomial time single-peaked electorates.
spotlight result section states partition-by-voters control weakCondorcet
elections P.
Theorem 5.2. weakCondorcet elections, control partition voters P singlepeaked electorates, nonunique-winner model unique-winner model,
Ties Promote model Ties Eliminate model.
giving Theorem 5.2s proof, let us note consequences contrasts.
Corollary 5.3. Let E election system weakCondorcet-consistent singlepeaked inputs. election system E, control partition voters P singlepeaked electorates, nonunique-winner model unique-winner model,
Ties Promote model Ties Eliminate model. particular, holds
election systems Llull, Kemeny, Young, weakDodgson, Maximin, Schwartz, weakBlack,
Fishburn, two variants Nanson due Fishburn Schwartz.
Llull elections, provides clear contrast known NP-completeness
control type general case.
Theorem 5.4 (Faliszewski et al., 2009a). Llull elections, control partition voters
NP-complete, nonunique-winner model unique-winner model,
Ties Promote model Ties Eliminate model.
461

fiBrandt, Brill, Hemaspaandra, & Hemaspaandra

Algorithm 2 weakCondorcet Control Partition Voters
1: a, b, c, C L b, c L d, L c, p weakCondorcet winner
(C 0 , V ) C 0 = {e C | L e L b c L e L d}
2:
k {0, 1, 2, . . . , kV k}
3:
let r number interesting regions
P
4:
` = (`1 , `2 , . . . , `r ) Nr ri=1 `i = k
5:
define P` set partitions (V1 , V2 ) i, `i
number voters V1 whose top choice Ri
6:
P` 6=
7:
let (V1 , V2 ) arbitrary partition P`
8:
set weakCondorcet winners (C, V1 ) equals [a, b]
set weakCondorcet winners (C, V2 ) equals [c, d]
9:
return (V1 , V2 )
10: return partition voters makes p weakCondorcet winner

turn proof Theorem 5.2. idea behind proof differs completely
approach used polynomial-time control proofs Faliszewski et al. (2011),
is, think, novel.
Proof Theorem 5.2. Let (C, V ) election L linear order C respect
electorate single-peaked. decide whether designated candidate
p C made overall winner partitioning set voters appropriate
way.
algorithm tailored natural Ties Promote, nonunique-winner model,
end proof mention adapted models.
natural model, want find partition (V1 , V2 ) p weakCondorcet winner
election (C 0 , V ) C 0 union weakCondorcet winners (C, V1 )
(C, V2 ).
show Algorithm 2 returns partition property whenever one exists.
Algorithm 2 loops 4-tuples a, b, c, candidates tests whether voters
partitioned (V1 , V2 ) way (a) weakCondorcet winners (C, V1 )
[a, b] (i.e., candidates {x C | L x L b}, writing L z (y = z L z)),
(b) weakCondorcet winners (C, V2 ) [c, d], (c) p weakCondorcet winner
([a, b] [c, d], V ).
4-tuple a, b, c, d, divide set C candidates disjoint interesting
regions. Regions defined follows. candidates a, b, c, constitutes
region itself. Furthermore, contiguous (with respect L) interval two
four candidates region. Finally, two additional regions, namely one
interval consisting candidates left a, b, c, one interval consisting
candidates right a, b, c, d.
Note intervals containing a, b, c, may empty,
set {a, b, c, d} may contain adjacent even identical candidates. easy see
number interesting (i.e., nonempty) regions nine, equal nine
adjacent identical candidates among a, b, c, d. Assuming
462

fiBypassing Combinatorial Protections

case, three possible situations, depending relation intervals
[a, b] [c, d].
1. intervals disjoint:

R1

R2

c

b
R3

R4

R5

R6


R7

R8

R9

2. intervals nonempty intersection, neither contains other:


R1

R2

c

R3

R4

b

R5

R6



R7

3. One interval contains other:

c


R1

R2

R3

R4

R5

R6

R8

R9

b

R7

R8

R9

set {a, b, c, d} contains adjacent identical elements, regions pictured
empty identical, less nine interesting regions.
r interesting regions, denote R1 , . . . , Rr , left right
respect L.
Associate voter candidate top voters preference order.
following observation turns helpful. [a, b] set weakCondorcet winners
(C, V1 ), voters V1 top choice x <L x <L b.
Similarly, voter V2 top choice strictly c d. is, region
consists voters whose top choice lies strictly either b c fully
determined regard question many voters V1 V2 . example,
case [c, d] contained [a, b], five nine regions fully determined:
voters R3 , R4 , R6 , R7 V2 must voters
region R5 , voters would lie b c d.
argument, one see maximum number regions fully determined
7 (in case intervals [a, b] [c, d] disjoint). Clearly, number
ways kV k divided 7 ordered numbers bounded kV k6 .
fact weakCondorcet winners (C, V1 ) (C, V2 ) efficiently checked
due following key observation. Within region, thing affects
winner set number voters put V1 , voters use achieve
number. is, need check partition individually (there
exponential number them), rather deal large number partitions simultaneously. formally, suppose r interesting regions let ` = (`1 , `2 , . . . , `r )
463

fiBrandt, Brill, Hemaspaandra, & Hemaspaandra

r-dimensional vector natural numbers. define P` set partitions
(V1 , V2 ) V i, `i number voters V1 whose top choice
Ri .
P` 6= , key observation restated follows. [a, b] set
weakCondorcet winners election (C, V1 ) (V1 , V2 ) P` [a, b]
set weakCondorcet winners every election (C, V1 ) (V1 , V2 ) P` . is,
want check whether [a, b] set weakCondorcet winners primary
elections (C, V1 ) induced partitions (V1 , V2 ) P` , suffices check one
obtain answer. check easily done counting. symmetry,
statement holds [c, d] weakCondorcet winners elections (C, V2 )
(all four combinations).
reason true that, given number voters region, easy
recognize region(s) median voter(s) (just counting). Since a, b, c,
constitute region own, equally easy tell whether median voter
four candidates top choice.
Implementing idea, algorithm loops possible sizes k V1 (line 2)
possibilities k divided r numbers `1 , `2 , . . . , `r , checks (line 8)
gives partition required. argued last paragraphs, query
efficiently answered.
running time Algorithm 2 thus bounded follows. number
iterations loops lines 1, 2, 4, bounded kCk4 , kV k + 1, kV k6 ,
respectively. Moreover, shown queries line 8 answered
polynomial time. Altogether, yields running time obviously polynomial
size input.
Correctness Algorithm 2 clear explanations above: find
partition makes p overall weakCondorcet winner partition
exists. particular, observe setting k = 0 line 2 handles case p
already weakCondorcet winner original election.12 Note algorithms theme
perfectly supports theme paper: algorithm used single-peakedness bypass
combinatorial richness partitions.
completes proof TP, nonunique-winner model. TP, uniquewinner model, line 1 Algorithm 2 needs adapted loop choices
a, b, c, make p unique weakCondorcet winner (C 0 , V ). TE, unique-winner
model dealt Theorem 5.6 page 465. (By Fact 3.1 page 448,
unique weakCondorcet winner tantamount Condorcet winner single-peaked
electorates.)
true TE, nonunique-winner model. Here, weakCondorcet
winner final election suffices, Algorithm 3 (which found appendix)
easily adapted take consideration.
q Theorem 5.2
12. see this, assume p [m` , mr ], [m` , mr ] interval weakCondorcet winners
(C, V ). Observe set a, b, c, [a, b] = C [c, d] = [m` , mr ], C 0 = {e C |
L e L b c L e L d} = C obviously p weakCondorcet winner (C 0 , V ). Thus,
choice a, b, c, considered line 1. setting k 0 uniquely defines ` (0, . . . , 0) P`
consists partition (, V ) only. Due choice a, b, c, d, answer query line 8
yes (, V ) correctly output partition makes p overall winner.

464

fiBypassing Combinatorial Protections

turn weakCondorcet Condorcet elections, state result
quickly give us number additional contrasts general-case control complexity
single-peaked control complexity.
Theorem 5.5. weakCondorcet elections, control adding voters control deleting voters P single-peaked electorates, nonunique-winner model
unique-winner model.
usual, immediately follows result applies standard long
list systems (e.g., Kemeny, Young, weakDodgson elections) weakCondorcetconsistent single-peaked electorates. appendix contains similar results Condorcet
elections. However, winner problem general case trivially many-one polynomialtime reduces control adding voters (via asking p made win adding 0
voters; see Hemaspaandra et al., 2009, Section 2.4). Thus, existing p2 -hardness results
Kemeny winner problem (both nonunique-winner model, Hemaspaandra et al.,
2005, unique-winner model, Hemaspaandra et al., 2009), Young winner
problem (both nonunique-winner model unique-winner model, see
papers Theorem A.2), weakDodgson winner problem (both nonunique-winner
model unique-winner model, see papers Theorem A.4), imply
control adding voters p2 -hard Kemeny, Young, weakDodgson elections
(in nonunique-winner model unique-winner model). comments
hold control deleting voters. Thus single-peaked general cases control
adding deleting voters differ Kemeny, Young, weakDodgson elections.
5.3 Control Results Related Condorcet Elections
Control Condorcet elections studied much detail (Bartholdi et al., 1992;
Hemaspaandra, Hemaspaandra, & Rothe, 2007), (see Table 1 Hemaspaandra et al.,
2007) standard control type known either never change outcome
polynomial-time algorithm, three exceptions. Namely, Bartholdi et al.
(1992) proved seminal paper control, control addition voters control
deletion voters NP-complete Condorcet elections; control partition
voters NP-complete Condorcet elections (due Bartholdi et al., 1992, nownonstandard partition model, due Faliszewski et al., 2009a, now-standard
partition model).13 However, following results show resistance results vanish
single-peaked electorates.
Theorem 5.6. Condorcet elections, control partition voters P singlepeaked electorates, nonunique-winner model unique-winner model,
Ties Promote model Ties Eliminate model (note four cases
coincide here).
13. entire Bartholdi, Tovey, Trick paper unique-winner model, discussion unique-winner model. thus need establish contrasting polynomial-time
results unique-winner model want meaningful contrast. address this, ensure
contrasting results hold models. holds trivially prove either model,
Condorcet elections, nonunique-winner unique-winner coincide Ties Promote Ties
Eliminate coincideboth one never two winners.

465

fiBrandt, Brill, Hemaspaandra, & Hemaspaandra

Theorem 5.7. Condorcet elections, control adding voters control deleting
voters P single-peaked electorates, nonunique-winner model
unique-winner model.
So, standard control cases Condorcet voting known NP-hard
general case (Bartholdi et al., 1992; Faliszewski et al., 2009a), shown
Condorcet-voting control falls polynomial time single-peaked electorates.14

6. Manipulation Single-Peaked Electorates: Dichotomy
Constructive Coalition Weighted Manipulation
Faliszewski et al. (2011) completely characterized, three-candidate elections, scoring protocols polynomial-time constructive coalition weighted manipulation problems
NP-complete constructive coalition weighted manipulation problems.
achieve far sweeping dichotomy theoremour result applies scoring protocols,
regardless number candidates. Scoring protocols arguably important
broad class election systems.
constructive coalition weighted manipulation problem, input candidate
set C, nonmanipulative voters (each preference order C weight),
manipulative voters (each weight), candidate p C, question
whether way setting preferences manipulative voters p
winner given election rule manipulative nonmanipulative voters
vote weighted election.
Theorem 6.1 (Faliszewski et al., 2011). Consider three-candidate scoring protocol,
namely, = (1 , 2 , 3 ), 1 2 3 , 1 N, 2 N, 3 N. single-peaked case,
constructive coalition weighted manipulation problem (in nonunique-winner
model unique-winner model) NP-complete 1 3 > 2(2 3 ) > 0
polynomial time otherwise.
extension three-candidate, single-peaked electorate result case
scoring protocol single-peaked electorates somewhat complicated. Yet, since
complete characterizationa dichotomization complexities, factit
sense simply reflecting subtlety complexity scoring systems. (For general
i.e., necessarily single-peakedcase, known characterization simple regardless
number candidates: NP-completeness holds kCk 2 2 6= kCk
otherwise problem P (Hemaspaandra & Hemaspaandra, 2007, see Conitzer,
Sandholm, Lang, 2007, Procaccia Rosenschein, 2007.) following theorem
sections soleand spotlightresult.
Theorem 6.2. Consider m-candidate scoring protocol, namely, = (1 , 2 , . . . , )
Nm , 1 2 .
14. sharp-eyed reader may wonder whether concept possible general-case
polynomial-time results control (e.g., Condorcet control deleting candidates) might suddenly,
freakishly get harder single-peaked case. all, Faliszewski et al. (2011) show freakish case
limiting single-peaked case increases manipulation complexity. However, hard
seeby reasoning related used prove Theorem A.5that control type polynomial
time general case single-peaked case remains polynomial time.

466

fiBypassing Combinatorial Protections

2 2 > b m1 c+2 exist integers i, j > 1 + j + 1
2
(1 )(1 j ) > (i i+1 )(j j+1 ), constructive coalition weighted
manipulation problem single-peaked case NP-complete.
2 2 = b m1 c+2 1 > 2 > (2 > m1 1 >
2
2(2 )), constructive coalition weighted manipulation problem
single-peaked case NP-complete.
cases, constructive coalition weighted manipulation problem
single-peaked case P.
example, constructive coalition weighted manipulation single-peaked case
m-candidate plurality m-candidate veto P, m-candidate Borda
P 3 NP-complete otherwise.
Note Theorem 6.1 follows Theorem 6.2, since 1 3 > 2(2 3 ) equivalent
1 2 > 2 3 . note specific cases more-than-three-candidate
scoring protocolssuch four-candidate Borda m-candidate vetothat analyzed
single-peaked case Faliszewski et al. (2011) yielded results completely consistent
Theorem 6.2s characterization. P cases Theorem 6.2s dichotomy align
theme single-peakedness often foiling combinatorial protections.
Proof Theorem 6.2. first give intuition conditions theorem.
P cases exactly cases optimal manipulator vote. example,
show Lemma 6.6 (1 )(1 j ) (i i+1 )(j j+1 ) i, j > 1
+ j + 1, candidates scoring higher p one side p,
say left, societal order. case optimal manipulators rank
p first, candidates ps right, candidates ps left.
contrast, NP-complete cases exists societal order
construct elections p two main rivals, say b, two different
types optimal votes manipulators different effects scores
b. NP-hardness proofs follow via reductions well-known NP-complete
problem Partition (see, e.g., Garey Johnson, 1979). problem, given
nonempty collection (k1 , . . . , kn ) positive integers sum 2K, ask whether
exists subcollection k1 , . . . , kn sums K. cases carefully
define societal order, weights votes nonmanipulators, weights
manipulators weights manipulators voting one two
optimal vote types successful manipulation correspond partition vice versa.
turn formal proof theorem. 1, problem trivial
thus P. So, assume 2. split proof Theorem 6.2 three lemmas:
2 > b m1 c+2 NP-complete cases (Lemma 6.4), 2 > b m1 c+2 P cases (follow
2
2
Lemma 6.6), 2 = b m1 c+2 cases (Lemma 6.7).
2
proof, use following notation. V collection voters c candidate,
scoreV (c) denotes score c V , i.e., number points c receives
voters V . V clear context, simply write score(c). section,
usually denote collection nonmanipulators collection manipulators
.
First prove following simple lemma.
467

fiBrandt, Brill, Hemaspaandra, & Hemaspaandra

Lemma 6.3. constructive coalition weighted manipulation problem singlepeaked case scoring protocols, p made winner, p made winner
manipulation manipulators rank p first.
Proof Lemma 6.3. Let > p > b1 > > b` single-peaked vote,
set candidates order. exists ordering
p > > b1 > > b` single-peaked. Note new vote, every candidate
c, score(p) score(c) decrease. So, p winner election, p still
winner replace every single-peaked vote form > p > b1 > > b`
single-peaked vote form p > > b1 > > b` .
q Lemma 6.3
Lemma 6.4. Let = (1 , 2 , . . . , ) scoring protocol 2 2 >
b m1 c+2 . exist integers i1 , i2 > 1 i1 +i2 m+1 (1 i1 )(1 i2 ) >
2
(i1 i1 +1 )(i2 i2 +1 ), constructive coalition weighted manipulation problem
single-peaked case NP-complete.
Proof Lemma 6.4. Let i1 , i2 integers fulfill conditions lemma
i1 i2 i2 minimal, i.e., 1 < i1 i2 , i1 + i2 + 1, (1 i1 )(1 i2 ) >
(i1 i1 +1 )(i2 i2 +1 ), i01 , i02 1 < i01 i02 < i2 i01 + i02 + 1,
holds (1 i01 )(1 i02 ) (i01 i01 +1 )(i02 i02 +1 ).
reduce Partition constructive coalition weighted manipulation
problem single-peaked electorates. Let (k1 , . . . , kn ) instance Partition, i.e.,
(k1 , . . . , kn ) nonempty collection positive integers sum 2K. Let societys
order
am1 L L a1 L p L b1 L L bm2 ,
m2 = max(d m1
2 e, i2 1) m1 = m2 1. Note i2 m2 + 1. Since
i1 +i2 m+1, follows immediately i1 m1 +1. note 1 m1 m2 m2.
make reduction work, need following claim.
Claim 6.5. m1 +2 < 2 .
Proof Claim 6.5.

m1 = b m1
2 c, immediate, since 2 > b m1 c+2 . not,
2

m2 = i2 1 i2 1 > m1
2 e 2. Since i2 minimal, conditions lemma
fulfilled i1 = i2 = 2, (1 2 ) (2 3 ). 2 = m1 +2 ,
2 = 3 , follows 1 = 2 thus 1 = m1 +2 . choice i1 , i2
fulfill conditions lemma, since 1 i1 = 0.
q Claim 6.5
Let consist two voters, one voter weight `1 preference order
a1 > > ai1 1 > p > b1 >
(the end vote denotes remaining candidates listed arbitrary,
single-peaked order) one voter weight `2 preference order
b1 > > bi2 1 > p > a1 > ,
468

fiBypassing Combinatorial Protections

let weights k1 , k2 , . . . , kn ,
= (1 i1 )(1 i2 ) (i1 i1 +1 )(i2 i2 +1 ),
`1 = ((21 2 m2 +2 )(1 i2 ) + (i2 i2 +1 )(21 2 m1 +2 ))K,
`2 = ((1 i1 )(21 2 m1 +2 ) + (i1 i1 +1 )(21 2 m2 +2 ))K.
values chosen (using Cramers Rule)
(1 i1 )`1 (i2 i2 +1 )`2 = (21 2 m2 +2 )K
(i1 i1 +1 )`1 + (1 i2 )`2 = (21 2 m1 +2 )K.
Note positive, since (1 i1 )(1 i2 ) > (i1 i1 +1 )(i2 i2 +1 ). Note
`1 `2 positive, since (1 i1 ) (1 i2 ) positive,
(21 2 m1 +2 ) (21 2 m2 +2 ), Claim 6.5 fact m1 m2 .
prove reduction works, first suppose k1 , . . . , kn partition, i.e.,
subcollection k1 , . . . , kn sums K. show p made winner
follows. Let K weight vote
p > a1 > > am1 > b1 >
let K weight vote
p > b1 > > bm2 > a1 > .
Note i, 1 m1 , score(ai ) score(a1 ) i, 1 m2 ,
score(bi ) score(b1 ) suffices show score(a1 ) score(p) score(b1 )
score(p). Note
score(p) = i1 `1 + i2 `2 + 21 K,
score(a1 ) = 1 `1 + i2 +1 `2 + 2 K + m2 +2 K,
score(b1 ) = 1 `2 + i1 +1 `1 + 2 K + m1 +2 K.
choice , `1 , `2 , follows score(a1 ) = score(p) score(b1 ) = score(p).
converse, suppose voters vote p becomes winner
. observations above, follows
scoreT (a1 ) (2 + m2 +2 )K
scoreT (b1 ) (2 + m1 +2 )K.
Lemma 6.3 assume p ranked first every voter . implies
every voter ranks a1 b1 second. Let Wa total weight voters rank
a1 second. follows
scoreT (a1 ) 2 Wa + m2 +2 (2K Wa )
scoreT (b1 ) 2 (2K Wa ) + m1 +2 Wa .
observations, fact > 0 2 > m1 +2 (by Claim 6.5) (and
thus 2 > m2 +2 ), follows Wa K (2K Wa ) K. So, exactly
half vote weight ranks a1 second. weights voters rank
a1 second correspond partition.
q Lemma 6.4

469

fiBrandt, Brill, Hemaspaandra, & Hemaspaandra

Lemma 6.6. Let = (1 , 2 , . . . , ) scoring protocol. i, j > 1
+ j + 1, holds
(1 )(1 j ) (i i+1 )(j j+1 ),
constructive coalition weighted manipulation problem single-peaked case
P.
Proof Lemma 6.6. Let am1 L L a1 L p L b1 L L bm2 societys order.
immediate scoreS (ai ) scoreS (p) i, 1 m1 , p made winner
p winner every voter votes
p > a1 > > am1 > b1 > > bm2 .
Similarly, scoreS (bi ) scoreS (p) i, 1 m2 , p made winner
p winner every voter votes
p > b1 > > bm2 > a1 > > am1 .
show cases occur. immediately implies
Lemma 6.6.
So, remainder proof, suppose contradiction collection
voters integers i1 i2 1 i1 m1 , 1 i2 m2 , scoreS (ai1 ) > scoreS (p),
scoreS (bi2 ) > scoreS (p).
1 < m1 +1, let `i total weight voters rank candidate
{a1 , . . . , am1 } first rank p ith place. Note voters rank candidates
{b1 , . . . , bm2 } p. 1 < m2 + 1, let `0i total weight voters
rank candidate {b1 , . . . , bm2 } first rank p ith place. Note
voters rank candidates {a1 , . . . , am1 } p. follows immediately
scoreS (ai1 ) scoreS (p)

X

(1 )`i +

1<im1 +1

scoreS (bi2 ) scoreS (p)

X

X

(i+1 )`0i

1<im2 +1

(1

)`0i

+

1<im2 +1

X

(i+1 )`i .

1<im1 +1

Since scoreS (ai1 ) > scoreS (p) scoreS (bi2 ) > scoreS (p), follows
X

1<im1 +1

X

X

(1 )`i >
(1

1<im2 +1

(i i+1 )`0i

1<im2 +1

)`0i

X

>

(i i+1 )`i .

1<im1 +1

Since sides inequalities nonnegative, follows



X
X

(1 )`i
(1 )`0i >
1<im1 +1

1<im2 +1

470

fiBypassing Combinatorial Protections




X



(i i+1 )`0i

1<im2 +1

(i i+1 )`i .

1<im1 +1

Multiplying out, follows
X
(1 )(1 j )`i `0j >
1<im1 +1
1<jm2 +1


X

X

(i i+1 )(j j+1 )`i `0j .

1<im1 +1
1<jm2 +1

Since = m1 + m2 + 1, contradicts assumption i, j > 1
+ j + 1 holds
(1 )(1 j ) (i i+1 )(j j+1 ).
q Lemma 6.6
Lemma 6.6 handles 2 > b m1 c+2 P cases Theorem 6.2. Note lemma
2
limited use 2 = b m1 c+2 , since case lemma applies = 2 1 = 2 =
2
b m1 c+2 . 2 = b m1 c+2 cases Theorem 6.2 handled following lemma
2
2
combination standard observation scoring protocol (1 , 2 , . . . , )
behavior scoring protocol (1 , 2 , . . . , m1 , 0).
Lemma 6.7. Let = (1 , 2 , . . . , ) scoring protocol 2, = 0,
2 = b m1 c+2 . 2 = 0 1 = 2 (2 = m1 1 22 ) constructive
2
coalition weighted manipulation problem single-peaked case P; otherwise,
NP-complete.
Proof Lemma 6.7. 2 = 0, vote form p > optimal
manipulator vote. 1 = 2 , 1 = b m1 c+2 . Let j i, j > 1
2

m1
+ j + 1. min(i, j) b m+1
2 c = b 2 c + 1 (1 )(1 j ) = 0.
follows Lemma 6.6 case P.
remainder proof, assume 1 > 2 > 0.
consider case 2 = m1 1 22 . Consider societys order. p
leftmost rightmost candidate, exactly one vote puts p first,
optimal manipulator vote. Otherwise, let leftmost candidate societys
order, b rightmost. b candidates occur last
vote. Since 1 22 , follows scoreS (a) + scoreS (b) 2scoreS (p). Without loss
generality, let scoreS (a) scoreS (b). scoreS (a) scoreS (p) vote form
p > > b optimal manipulator vote.
concludes P cases. turn NP-complete cases. cases,
reduce Partition.
First assume 2 = m1 1 > 22 . Let k1 , . . . , kn nonempty
collection positive integers sum 2K. construct following election: Societys
order L p L L b. consists two voters, weight (21 2 )K. One
voter votes > p > > b voter votes b > > p > a. Note
candidates c 6 {a, b}, scoreS (c) = scoreS (p). weights manipulators
(1 22 )k1 , . . . , (1 22 )kn . proof correctness reduction similar

471

fiBrandt, Brill, Hemaspaandra, & Hemaspaandra

(but easier than) corresponding proof Lemma 6.4. First suppose exists
subcollection k1 , . . . , kn sums K. set K vote weight p > > > b
K vote weight p > > b > a. Note resulting election,
score(p) = (22 (21 2 ) + 21 (1 22 ))K = (212 222 )K
score(a) = score(b) = (1 (21 2 ) + 2 (1 22 ))K = (212 222 )K.
converse, suppose p made winner. observations above,
immediate
scoreT (a) 2 (1 22 )K scoreT (b) 2 (1 22 )K.
Let Wa total weight voters rank b last. follows
scoreT (a) 2 Wa scoreT (b) (2(1 22 )K Wa )2 .
observations, assumption 2 > 0, follows Wa = (1 22 )K.
So, exactly half vote weight ranks b last. weights voters
rank b last correspond partition.
Finally, handle last case, namely, 1 > 2 > m1 . Let
b smallest index
m1
c
+
2
<

b
<
m.
Take
societys
order
2 >
.
Note

b
b
2
ab m1 c L L a1 L p L b1 L L bd m1 e .
2

2

reducing Partition. Let k1 , . . . , kn nonempty collection positive
integers sum 2K. Let consist two voters, weight (21 2
b )K,
voting
ab m1 c(mm)
b > > a1 > p > b1 > > bd m1 e(mm)
b >
2

2

bd m1 e(mm)
b > > b1 > p > a1 > > ab m1 c(mm)
b >
2

2

let weights (1 2 )k1 , . . . , (1 2 )kn . Since b m1
b =m
b
2 c (m m)
m1
m1
m1
(d m1
e+1)

m(b
b
c+2)
>
0

b
c(m
m)+1+d
b
e(m
m)
b
=
2
mm
b
<
m,
b
2
2
2
2
following scores.
scoreS (p) = 22 (21 2
b )K,
scoreS (ab m1 c(mm)
b )K,
b ) = (1 + 2 )(21 2
2

scoreS (bd m1 e(mm)
b ) = scoreS (ab m1 c(mm)
b ).
2

2

k1 , . . . , kn partition, set (1 2 )K vote weight
p > a1 > > ab m1 c > b1 > > bd m1 e(mm)
b >
2

2

set (1 2 )K vote weight
p > b1 > > bd m1 e > a1 > > ab m1 c(mm)
b > .
2

2

472

fiBypassing Combinatorial Protections

Note ab m1 c(mm)
b bd m1
e(mm)
b candidates score higher
2
2
p
2
2
score(p) = (22 (21 2
b ) + 21 (1 2 ))K = (21 + 21 2 22
b 22 )K.

score(ad m1 e(mm)
b ) = score(bd m1 e(mm)
b )=
2

2

2
2
((1 + 2 )(21 2
b ) + (2 +
b )(1 2 ))K = (21 + 21 2 22
b 22 )K.

So, p winner resulting election.
converse, suppose p made winner. Assume (using Lemma 6.3)
p ranked first every manipulator. observations above, immediate

scoreT (ab m1 c(mm)
b )(1 2 )
b ) (2 +
2

scoreT (bd m1 e(mm)
b )(1 2 ).
b ) (2 +
2

Let Wa total weight voters ab m1 c(mm)
b > bd m1
e(mm)
b .
2
2
follows
scoreT (ab m1 c(mm)
b (2(1 2 )K Wa )
b ) 2 Wa +
2

scoreT (bd m1 e(mm)
b Wa + 2 (2(1 2 )K Wa ).
b )
2

observations, fact 2 > , follows Wa = (1 2 )K.
weights voters ab m1 c(mm)
b > bd m1
e(mm)
b correspond
2
2
partition.
q Lemma 6.7
q

Theorem 6.2

7. Related Work, Additional Discussion, Open Problems
two papers related work Walsh (2007) Faliszewski, Hemaspaandra, Hemaspaandra, Rothe (2011). Walshs paper first raised (among many
interesting issues, possible necessary winners, Konczak & Lang, 2005, singlepeaked settings) issue effect single-peaked electorates manipulation.
particular case looked atweighted coalition manipulation single transferable vote electionshe showed manipulation remains hard even single-peaked electorates. Faliszewski et al. showed cases single-peakedness removes complexity shields
manipulation, opened study (nonpartition) control. paper
contrast Walshs stresses cases single-peakedness removes combinatorial protections. go beyond Faliszewski et al. (2011) first time studying bribery
single-peaked electorates partition-control single-peaked electorates.
new cases, show many election systems (for example Llull elections)
polynomial-time algorithms single-peaked electorates, even system known
NP-hard analogous general case. generalize Faliszewski et al. (2011)
473

fiBrandt, Brill, Hemaspaandra, & Hemaspaandra

dichotomy theorem manipulation three-candidate scoring protocols case
arbitrary scoring protocols.
Although closely related Faliszewski et al. (2011) present paper,
came present paper, important mention work Faliszewski
et al. (2011b, 2014) explores interesting issue seeing whether results
Faliszewski et al. (2011) still hold even electorate merely near
single-peaked (see Cornaz et al., 2012; Bredereck et al., 2013; Erdelyi et al., 2013; Sui
et al., 2013, regarding nearness single-peakedness weaker forms single-peakedness).
Since large real-world electorates unlikely (perfectly) single-peaked, natural
important study weaker forms single-peakedness.
Although Walsh (2007) Faliszewski et al. (2011) far related work,
work much worth mentioning. Bartholdi Trick (1986), Doignon Falmagne
(1994), Escoffier et al. (2008) provided efficient algorithms finding single-peaked
orderings. Conitzer (2009) studied effect single-peaked electorates preference
elicitation. Indeed, single-peakedness much current interest computational settings.
example, least four papers IJCAI-2013 conference, including Bredereck
et al. (2013) paper mentioned related single-peakedness.
p2 -completeness winner problems Dodgson, Kemeny, strongYoung
elections established, respectively, Hemaspaandra et al. (1997), Hemaspaandra et al.
(2005), Rothe et al. (2003). literature contains many papers complexity
(when single-peaked preferences assumed) manipulation control (as pointer
those, see Faliszewski et al., 2009b, Faliszewski, Hemaspaandra, & Hemaspaandra, 2010, citations therein), even contains number papers
younger topic complexity bribery (e.g., Faliszewski et al., 2009; Faliszewski, 2008;
Faliszewski et al., 2009a). Although nonunique-winner model unique-winner
model typically complexity results, Faliszewski, Hemaspaandra,
Schnoor (2008, drawing Conitzer et al., 2007) show always case.
NP-completeness p2 -completeness worst-case notions. natural wonder
whether problems classes solved frequently heuristic algorithms.
much experimental study theme (see, e.g., Walsh, 2009).
hand, known (see Hemaspaandra Williams, 2012) polynomial-time deterministic heuristic algorithm NP-complete (or p2 -complete) problem asymptotically
makes subexponentially many errors, polynomial hierarchy collapses.
worry comes immediate minds social choice theorists expressed
follows: Since known that, single-peaked electorates, median voting leaves voters
voting sincerely optimal strategy, single-peaked elections interesting
terms election systems, since median voting used. detailed discussion
worry would fill paper. briefly mention three reasons
objection serious might first seem. First, nonmanipulability claims
regarding single-peaked elections median voting manipulability, say
nothing about, example, control. Indeed, weakCondorcet effect type
median voting single-peaked electorates, example partition voters
algorithm makes clear control exercised interesting ways.15 Second, even
15. explicit, natural way framing median voting, median voting weakCondorcet (and weakCondorcet-consistent rules) exactly single-peaked electorates.

474

fiBypassing Combinatorial Protections

median voting nice properties, simple truth real world, society
virtually elections electorateshas chosen (perhaps due transparency, comfort,
tradition) use voting systems clash sharply median voting. prominence
plurality voting dramatic case. since real world use
rich range election systems, make sense understand behavior. Third, one
must careful terms strategy-proof. paper people commonly
mention showing median voting strategy-proof Barbera (2001).
papers results social choice functions (election rules kCk 1 always
exactly one winner), notas paper isabout election rules select set
winners. one cannot simply assume case median voting (say, weakCondorcet
elections) never gives incentive misrepresent preferences.
Actually, certain problem settings, one never incentive misrepresent ones
top choice (in single-peaked weakCondorcet elections ones top choice affects
outcome) weakCondorcet elections (which social choice correspondence).
example, ones goal Seek make top choice weakCondorcet winner,
one never incentive misstate ones top choice. another example, ones
goal (for fixed k) Seek make least one first k choices among
weakCondorcet winners, one never incentive misstate ones top
choice (which thing matters ones vote).16 hand,
reasonable problem settings, misstating may make sense. ones goal Make
top choice unique winner failing make second choice unique winner
... failing make last choice unique winner failing make
multiple winners, two-candidate single-peaked election voter 1 votes > b
voter 2 prefers b already gives voter 2 incentive vote, insincerely, > b.
leaving topic, stress previous paragraphs discussions
model manipulators come complete preference orders. However,
Bartholdi et al. (1989) model (which paper complexity papers use
studying manipulation), manipulative coalition blank slate goal
make certain candidate p winner.
open issue already mentioned paper following. Section 6 provided
single-peaked electorates manipulation-complexity dichotomy applies scoring
rules (and see Hemaspaandra & Hemaspaandra, 2007, holds without singlepeaked restriction). Although broad set rules, theorem connecting
specification system systems complexitya natural connection. However,
paper establishes many results regarding bribery control weakCondorcet context
single-peaked electorates.
16. mention passing two incentive manipulate claims made weakCondorcet
elections single-peaked electorates hold family related election systems single-peaked
electorates. weakCondorcet, sorting voters first choice (under single-peaked ordering
candidates), candidates fall median voter(s) winners. think
MedianVoting 1 , rational , 0 12 , single-peaked voting
2
consider rule, MedianVoting , ordering voters first-choice makes winners
candidates societal order L fall inclusive interval (a) leftmost voter vleft
least kV ke voters first preference vleft left L
vleft , (b) rightmost voter vright least kV ke voters first preference
vright right L vright . rule MedianVoting share incentive
manipulate properties mentioned text.

475

fiBrandt, Brill, Hemaspaandra, & Hemaspaandra

natural wonder whether one tightly link social-choice-favored properties
rule manipulation (or bribery control) complexity. give idea kind
theorem thinking of, mention following known theorem linking social-choiceproperties winner-problem complexity (the statement involves notions
define here): Every election system neutral, Condorcet-consistent, consistent
p2 -complete winner problem (Hemaspaandra et al., 2005, see discussion
Hemaspaandra Hemaspaandra, 2000). However, just-quoted winner result
something cheat one system satisfies propertiesKemeny
elections. dream case manipulationand bribery controlwould find
broad link social-choice properties complexity single-peaked case
general case. true dream case, might completely characterize terms
statement social-choice properties election systems easy manipulation
(or bribery control) problems, single-peaked case general case.
final open direction find cases partition-of-candidates control shifts
NP-hard polynomial time restricted single-peaked electorates.

8. Conclusions
theme paper single-peaked electorates often tame combinatorial explosion.
saw first case winner problem. case, taming good.
shows single-peaked electorates, election systems Kemeny efficient
winner algorithms, despite p2 -hardness general case. bribery
control (and part, manipulation), saw many cases NP-hard problems fell
polynomial time single-peaked electorates, via algorithms bypassed generalcase combinatorial explosions covers partitions. Since NP-hardness results
protections attacks elections, results serve warning
protections core dependent extreme flexibility voter preference
collections general case allows. single-peaked electorates, protections vanish.

Acknowledgments
work supported part ARC grant DP1101011792, DFG grants BR-2312/{32,6-1}, NSF grants CCF-{0426761,0915792,1101452,1101479} IIS-0713061, European Science Foundations EUROCORES program LogICCC, Friedrich Wilhelm Bessel
Research Awards Edith Hemaspaandra Lane A. Hemaspaandra. work done
part Felix Brandt Ludwig-Maximilians-Universitat Munchen Markus
Brill Ludwig-Maximilians-Universitat Munchen TU Munchen, done
part visits Edith Hemaspaandra Lane A. Hemaspaandra Heinrich-HeineUniversitat Dusseldorf Ludwig-Maximilians-Universitat Munchen. preliminary version paper appeared proceedings 24th AAAI Conference Artificial
Intelligence, July 2010 (Brandt, Brill, Hemaspaandra, & Hemaspaandra, 2010).
grateful Steven Brams, Piotr Faliszewski, Felix Fischer, Zack Fitzsimmons,
Paul Harrenstein, Jerome Lang, Ariel Procaccia, Jorg Rothe, Hans Georg Seedig, Troels
Srensen, anonymous conference journal referees helpful comments
476

fiBypassing Combinatorial Protections

valuable suggestions. grateful Piotr Faliszewski email exchange led
Theorem A.5 Paul Harrenstein preparing figures.

Appendix A. Additional Definitions Proofs
appendix provides additional definitions proofs.
A.1 Additional Definitions
Let us define additional election systems mentioned Section 2.
Nanson elections runoff methods based Bordas scoring protocol. Nansons
(1882) original definition, series Borda elections held candidates
stage average Borda score excluded unless candidates
identical Borda scores, case candidates declared winners
election. exist two variants Nanson due Fishburn Schwartz, exclude
candidates lowest Borda score candidates whose Borda score less
average score, respectively. three versions fail weakCondorcet-consistent (Niou,
1987).
Maximin (a.k.a. Simpson-Kramer) elections (Simpson, 1969; Kramer, 1977) choose
candidates fare best worst pairwise comparison candidate.
remaining three election systems based pairwise majority relation.
Schwartz (1972) elections (sometimes called top cycle), winners defined
maximal elements asymmetric part transitive closure majority relation. winners Fishburn (1977) elections maximal elements Fishburn
relation F , defined letting F b every candidate beats pairwise
comparison beats b exists candidate beats b a.
A.2 Proofs Section 2
Theorem A.1. Kemeny, Schwartz, Fishburns Schwartzs versions Nanson
weakCondorcet-consistent single-peaked electorates.
Proof. statements rely observation pairwise majority relation, >m ,
single-peaked electorates transitive (Black, 1948, 1958). observe weak
Condorcet winners precisely maximal elements pairwise majority relation.
follows immediately Schwartz weakCondorcet-consistent.
P case Kemeny, note (again writing >m pairwise majority relation)
{a,b}C,a6=b,am b k{v V | v prefers b a}k lower bound Kemeny score
linear order. score realized linear order > > consistent >m ,
i.e., every a, b C, >m b > b. pairwise majority relation transitive
c weak Condorcet winner, c Kemeny winner, evidenced following
Kemeny consensus: rank c first greedily keep adding, successive positions
consensus, maximal (with respect >m ) unranked candidates. Since > consistent
>m , > Kemeny consensus. immediate weak Condorcet
winner, ranked first linear order consistent >m .
Nanson, prove weak Condorcet winner eliminated stage
election. First let us normalize Borda scores subtracting (kV k (m 1))/2
477

fiBrandt, Brill, Hemaspaandra, & Hemaspaandra

Borda score every candidate. ensures average normalized Borda score
precisely zero. Now, observe normalized Borda score candidate simply half
sum, candidates b, number voters prefer b minus
number voters prefer b a. consequence, normalized Borda score every
weak Condorcet winner least zero. Moreover, case single-peaked electorate,
due transitivity majority relation, always candidate negative
normalized Borda score unless candidates identical score zero. latter
case, three versions Nanson terminate. former case, neither Fishburns
Schwartzs variant exclude weak Condorcet winners score least
large average score.
q
fact Black, Dodgson, original version Nanson, Copeland elections
[0, 1) weakCondorcet-consistent single-peaked electorates seen
following universal counterexample. Let two voters preferences b > > c
c > b > a. preferences single-peaked respect societal ordering
L b L c. Candidates b c weak Condorcet winners, mentioned
election systems chooses b. Similarly, strongYoung weakCondorcet-consistent
single-peaked electorates election two voters whose preferences
> b > c c > b > a, candidates weak Condorcet winners, strongYoung
yields candidates c.
A.3 Additional Proofs Section 3
Theorem A.2. winner problem Young elections p2 -complete,
nonunique-winner model unique-winner model.
Proof. p2 -completeness (nonunique) winner problem strongYoung elections
(somewhat confusingly called Young elections there) shown Rothe et al. (2003).
proof establishes p2 -completeness unique winner model (Hemaspaandra
et al., 2009). p2 upper bound easy show, argument used
show p2 upper bound Young winner problem (in nonunique-winner
model unique-winner model). p2 -hardness winner problem strongYoung
elections shown Theorem 2.5 Rothe et al. (2003) via reduction p2 complete problem Maximum Set Packing Compare (MSPC, short): Given two sets, B1
B2 , two collections sets S1 S2 , Si nonempty, finite
subset Bi , case (S1 ) (S2 )? Here, (Si ) denotes maximum number
pairwise disjoint sets Si . Rothe et al., assume (Si ) > 2.
proofs Theorems 2.3 2.5 Rothe et al. (2003) show construct
given MSPC instance = (B1 , B2 , S1 , S2 ) election (D, W ) two designated
candidates, c d, (a) (S1 ) (S2 ) c strongYoung winners
(D, W ), (b) (S2 ) > (S1 ) unique strongYoung winner (D, W ).
show proof adapted work Young elections. Please
refer Rothe et al. (2003) definitions details construction,
point differences here. Given MSPC instance = (B1 , B2 , S1 , S2 ), construct
478

fiBypassing Combinatorial Protections

election (C 0 , V 0 ) c designated candidates C 0 , holds
YoungScore(C 0 , c, V 0 ) = 2 (S1 ) YoungScore(C 0 , d, V 0 ) = 2 (S2 ).17
Let C 0 = C V 0 = V {v(2.4) , v(2.7) }, (C, V ) election constructed
proof Theorem 2.3 Rothe et al. (2003), v(2.4) one two voters V
referred voters form (2.4) Rothe et al. v(2.7) one two voters
V referred voters form (2.7) Rothe et al.18 One define
submultiset V0 voters V 0 V0 = V {v(2.4) }, V defined page 381
Rothe et al. kV0 k = 2 (S1 ) c weak Condorcet winner (C 0 , V0 ),
implying YoungScore(C 0 , c, V 0 ) 2 (S1 ).
show YoungScore(C 0 , c, V 0 ) 2 (S1 ), adapt Lemma 2.4 Rothe et al.
(2003) following way. (The proof Lemma A.3 similar proof Lemma 2.4
Rothe et al., 2003, omit here.)
Lemma A.3. 3 < kS1 k + 1, let V submultiset V 0 V
contains exactly 1 voters form (2.4) (2.5) c weak Condorcet winner
(C 0 , V 0 ). V contains exactly 1 voters form (2.3) voters form
(2.6), (2.7), (2.8). Moreover, 1 voters form (2.3) V represent pairwise
disjoint sets S1 .
Let V0 V 0 kV0 k 2 (S1 ) c weak Condorcet winner
Suppose exactly 1 voters form (2.4) (2.5) V0 . Since
(S1 ) > 2, follows kV0 k 6, thus > 3 order beat c. Also,
1 kS1 k, since exactly kS1 k voters form (2.4) (2.5) V 0 . Lemma A.3
implies exactly 1 voters form (2.3) V0 , voters represent
pairwise disjoint sets S1 , V0 contains voters form (2.6), (2.7), (2.8).
Hence, kV0 k = 2 ( 1) 2 (S1 ).
thus YoungScore(C 0 , c, V 0 ) = 2 (S1 ). Analogously, one show
YoungScore(C 0 , d, V 0 ) = 2 (S2 ). Thus
(C 0 , V0 ).

(S1 ) (S2 )



YoungScore(C 0 , c, V 0 ) YoungScore(C 0 , d, V 0 ),

proves p2 -hardness comparing Young scores. show winner problem
Young elections p2 -hard, alter election (C 0 , V 0 ) way (C, V )
17. Note proof, follow Rothe et al.s (2003) convention Young scores define
YoungScore(C, c, V ) candidate c election (C, V ) size maximal submultiset
voters c weak Condorcet winner. Hence, set Young winners consists candidates
whose YoungScore least large YoungScore candidate.
18. completeness, give definition (C 0 , V 0 ). C 0 = B1 B2 {a, b, c, d} V 0 consists


following voters. (For ordered set = {m1 , . . . , mk }, write m1 > > mk .)




(2.3) E S1 , one voter preference order E > > c > B1 E > B2 > b > d.




(2.4) One voter preference order c > B1 > > B2 > b > d.




(2.5) kS1 k 1 voters preference order B1 > c > > B2 > b > d.




(2.6) F S2 , one voter vF preference order F > b > > B2 F > B1 > > c.




(2.7) One voter preference order > B2 > b > B1 > > c.




(2.8) kS2 k 1 voters preference order B2 > > b > B1 > > c.

479

fiBrandt, Brill, Hemaspaandra, & Hemaspaandra

altered Theorem 2.5 Rothe et al. (2003). Let (D0 , W 0 ) altered election.19 One
show Young scores c (D0 , W 0 ) (C 0 , V 0 ),
candidates Young score (D0 , W 0 ) 2. Thus, since
Young scores c least 6, comparing Young scores c (D0 , W 0 )
tantamount deciding c Young winner.
Altogether, (a) (S1 ) (S2 ) c Young winner (D0 , W 0 ),
(b) (S2 ) > (S1 ) unique Young winner (D0 , W 0 ). follows
MSPC-instance MSPC c Young winner (D0 , W 0 ), implying
p2 -hardness Young winner problem nonunique-winner model. uniquewinner model, follow argument proof Theorem 2.3 Hemaspaandra
et al. (2009): Observe MSPC unique winner
(D0 , W 0 ). Thus complement unique-winner problem Young elections p2 hard. Since p2 closed complement, proves unique-winner problem
Young elections p2 -hard well.
q
Theorem A.4. winner problem weakDodgson elections p2 -complete,
nonunique-winner model unique-winner model.
Proof. p2 -completeness (nonunique) winner problem Dodgson elections
shown Hemaspaandra et al. (1997). proof establishes p2 -completeness
unique winner model (Hemaspaandra et al., 2009). p2 upper bound easy
show, argument used show p2 upper bound weakDodgson
winner problem (in nonunique-winner model unique-winner model). p2 hardness winner problem Dodgson shown reduction p2 -hard
problem Two Election Ranking (2ER, short) (Hemaspaandra et al., 1997): Given two
Dodgson triples (C, c, V ) (D, d, W ), kV k kW k odd c 6= d,
Dodgson score c (C, V ) less equal Dodgson score (D, W )?
Here, Dodgson triple (C, c, V ) election (C, V ) designated candidate c C.
reduction 2ER winner problem Dodgson elections works merging
elections E1 = (C, V ) E2 = (D, W ) new election E3 = (C 0 , V 0 )
C C 0 following properties satisfied:
(i) Dodgson-ScoreE3 (c) = Dodgson-ScoreE1 (c) + 1,
(ii) Dodgson-ScoreE3 (d) = Dodgson-ScoreE1 (d) + 1,
(iii) Dodgson-ScoreE3 (x) > Dodgson-ScoreE3 (c) x C 0 {c, d}.
Here, Dodgson-ScoreE (x) denotes minimal number switches required make candidate x Condorcet winner election E. Thus, immediately c Dodgson
winner E3 Dodgson-ScoreE1 (c) Dodgson-ScoreE2 (d).20
19. completeness, (D0 , W 0 ) defined follows. replace every candidate g C 0 {c, d} kV 0 k
0
candidates g 0 , . . . , g kV k1 . replace occurrence candidate g ith voter V 0
0
0
0
0
g mod kV k > g (i+1) mod kV k > > g (i+kV k1) mod kV k .
20. noted fixable problem construction Hemaspaandra et al. (1997). problem
page 822 end proof Lemma 3.7, proving Dodgson-ScoreE3 (dkDk1 ) >

480

fiBypassing Combinatorial Protections

show approach Hemaspaandra et al. (1997) adapted
work weakDodgson. First, observe problem Weak Two Election Ranking
(w2ER), defined 2ER except Dodgson score replaced weakDodgson
score, inherits p2 -hardness 2ER Dodgson scores weakDodgson scores
coincide instances odd number voters. (If number voters odd,
weak Condorcet winner tantamount Condorcet winner, since
ties pairwise comparisons.) observe, inspection p2 -hardness proof
Hemaspaandra et al. (1997), 2ER w2ER still p2 -hard restrict
Dodgson-ScoreE3 (c), claimed argument applies candidate (C D)\{c, d}.
Though claim clearly true candidate D{d}, true candidate C {c},
since preference orders voter groups (b) (c), candidates C {c} separated
candidates set separating candidates. consequence, may possible make
candidate C {c} Condorcet winner less kSk/2 switches voter groups.
problem avoided changing t1 < < tkT k < c < s1 < < skSk < c1 < <
ckCk1 prefix preference orders voters groups (b) (c) c < t1 < < tkT k <
c1 < < ckCk1 < s1 < < skSk . gives following set voters. (In footnote use
< b < c-notation specifying votes, rather c > b > a-notation used throughout rest
paper, order match approach expressing votes used Hemaspaandra et al., 1997.
make comparisons paper straightforward possible.)
(a) voter e1 < < ekCk V , voter < s1 < < skSk < d1 < < dkDk1 < t1 < <
tkT k < e1 < < ekCk .
(b) voter e1 < < ekDk W , voter c < t1 < < tkT k < c1 < < ckCk1 < s1 < <
skSk < e1 < < ekDk .
l
l

k
(c) kV2 k kW
voters c < t1 < < tkT k < c1 < < ckCk1 < s1 < < skSk < d1 < <
2
dkDk1 < d.
l

(d) kV2 k voters t1 < < tkT k < c1 < < ckCk1 < d1 < < dkDk1 < skSk < < s1 < c < d.
l

k
(e) kW
voters t1 < < tkT k < c1 < < ckCk1 < d1 < < dkDk1 < s1 < < skSk < < c.
2
Intuitively, changed construction symmetrical original one, preferences
voter groups (a) (b) defined analogously, roles C (and )
interchanged.
Using proof Lemma 3.7 Hemaspaandra et al. (1997), easy see three
properties mentioned hold. particular, c preferred half
voters, Dodgson score c change. every candidate d0 D, d0 occur
prefix preference order changed Dodgson score d0 change.
remains show Dodgson-ScoreE3 (x) > Dodgson-ScoreE3 (c) x (C {c}).
proof Lemma 3.7, know Dodgson-ScoreE3 (c) < kSk/2 kSk = kT k. order
become Condorcet winner, needs gain least one vote d. Note changed
preferences, need kSk switches switch beyond d, change preferences
lower Dodgson score kSk/2. order become Condorcet winner,
shown Hemaspaandra et al. needs gain least one vote c need
kSk/2 switches that. Since preferred c voters groups (b) (c)
original changed election, voters used gain vote c. follows
changed election, needs kSk/2 switches become Condorcet winner. Finally, let
c0 C {c}. argument Hemaspaandra et al. every d0 {d} needs gain least
one vote c order become Condorcet winner, need kSk/2 switches
used (by symmetry construction) show every c0 C {c} needs gain
least one vote order become Condorcet winner, need kSk/2
switches that.

481

fiBrandt, Brill, Hemaspaandra, & Hemaspaandra

problem Dodgson triples least three voters. Let w2ER0 thus-restricted
version w2ER.
reduction w2ER0 winner problem weakDodgson elections.
Given two Dodgson triples (C, c, V ) (D, d, W ), denote corresponding elections
E1 = (C, V ) E2 = (D, W ). convenience, denote v = kV k w = kW k. Recall
v w odd least three assume without loss generality
C = v w. Define = v kCk + w kDk observe strict
upper bound weakDodgson
E1 E2 : Even worst case (a candidate
scores

least preferred voters), v2 (kCk 1) < switches suffice
make candidate

weak Condorcet winner E1 (by making top choice v2 voters), analogous
statement holds E2 .
define new election E3 = (C 0 , V 0 ). set C 0 candidates E3 defined
C 0 = C U , C candidates elections E1 E2
= {s1 , . . . , sm }, = {t1 , . . . , tm }, U = {u1 , . . . , um } 3m new candidates.
order define voters E3 , introduce following abbreviations notational convenience. (ordered) set = {m1 , . . . , mk }, > > b shorthand
> mk > > m1 > b. Furthermore, let c1 , . . . , ckCk1 d1 , . . . , dkDk1 arbitrary
enumerations C = C {c} = {d}, respectively. voters V 0 E3 consist
following subgroups:
(a) every voter E1 preference order Ci C, one voter preference order
Ci > > > > > U.
(b) every voter E2 preference order Dj D, one voter preference order
Dj > > C > > c > U.

(c) v2 w2 voters preference order
> > > C > > c > U.
(d)

v
2

voters preference order
> c > U > > > C > T.

(e)

w
2

1 voters preference order
c > > U > > > C > T.

(f) one voter preference order
> > C > > c > > U.
Since v odd, total number voters kV 0 k = 2v + w + 1. v w odd,
kV 0 k even weak Condorcet winner preferred every candidate

0
least kV2 k = v + w2 voters. show following three properties
satisfied:
482

fiBypassing Combinatorial Protections

(i) weakDodgson-ScoreE3 (c) = weakDodgson-ScoreE1 (c),
(ii) weakDodgson-ScoreE3 (d) = weakDodgson-ScoreE1 (d),
(iii) weakDodgson-ScoreE3 (x) > weakDodgson-ScoreE3 (c) x C 0 {c, d}.
0

(i), observe c preferred every candidate C 0 C least kV2 k
voters. Thus, computing weakDodgson score c, take care
candidates C = {c1 , . . . , ckCk1 }. Let xi number voters group
(a)
prefer c ci . number voters V 0 prefer c ci xi + v2 + w2 1.
Candidate c weak Condorcet winner E3 number greater


0
equal kV2 k = v + w2 , case xi v2
{1, . . . , kCk 1}. means c Condorcet winner E1 . definition,
achieved k switches, k = weakDodgson-ScoreE1 (c). thus
shown upper bound weakDodgson-ScoreE3 (c) weakDodgson-ScoreE1 (c). assume
weakDodgson-ScoreE3 (c) < weakDodgson-ScoreE1 (c). Due construction,
switches optimal sequence occur voters group (a), making c beat
candidate C would require switches relevant voter groups
(b), (c), (f). means way make c weak Condorcet winner E1
less weakDodgson-ScoreE1 (c) switches, contradiction. thereby shown
weakDodgson-ScoreE3 (c) = weakDodgson-ScoreE1 (c). proof property (ii)
analogous.
(iii), recall chosen sufficiently large strict upper bound
weakDodgson-ScoreE1 (c) thus, (i), weakDodgson-ScoreE3 (c). show
candidates C 0 c weakDodgson score least E3 .
Consider candidate S. order become weak Condorcet winner, must
v
beat
contest. preferred
c w + 2
particular

v tie
c pairwise

w
w
0 , needs gain least v extra votes c voter
+
1
=
+
voters

V
2
2
2
2
groups (a), (d), (e). gaining one extra vote c would require
switches, separated c least candidates voter
groups.

similar argument applies candidates: Candidates need w2 extra
votes (b), (c), (d), (e), one extra
vote requires switches

v
voters. Candidates U need 2 extra votes di (a), (b), (c),
(f), one extra vote requires switches. Candidates need v2
extra votes c (a), (d),
(e), one extra vote requires switches.
w
Candidates C need 2 extra votes (b), (c), (d), (e), one extra vote
requires switches. Thus, shown weakDodgson-ScoreE3 (x) > >
weakDodgson-ScoreE3 (c) x C 0 {c, d}.
easy see (1) weakDodgson-ScoreE1 (c) weakDodgson-ScoreE2 (d),
c weakDodgson winner E3 , (2) weakDodgson-ScoreE1 (c) >
weakDodgson-ScoreE2 (d), unique weakDodgson winner E3 . Let =
((C, c, V ), (D, d, W )) instance w2ER0 . argued w2ER0
c weakDodgson winner E3 , immediately implies p2 -hardness
weakDodgson winner problem nonunique-winner model. unique-winner
model, follow argument proof Theorem 2.3 Hemaspaandra et al.
483

fiBrandt, Brill, Hemaspaandra, & Hemaspaandra

(2009): Observe w2ER0 unique weakDodgson winner
E3 . Thus complement unique-winner problem weakDodgson elections
p2 -hard. Since p2 closed complement, proves unique-winner problem
weakDodgson elections p2 -hard.
q

A.4 Additional Proofs Section 4
Theorem 4.3. following hold (see Footnote 9):
1. Approval-negative-bribery approval-strongnegative-bribery NP-complete.
2. single-peaked electorates, approval-negative-bribery approval-strongnegativebribery P.
Proof. polynomial-time algorithms witnessing P-membership approval-negativebribery approval-strongnegative-bribery flavor algorithm
approval-bribery (Theorem 4.2), present first.
Let (C, V ) instance single-peaked approval election L valid single-peaked
ordering candidates. decide whether designated candidate p C
made winner bribing k voters. proof Theorem 4.2, define Vc
multiset voters approve candidate c. V+ = Vp multiset voters
approving p V = V V+ multiset voters disapproving p.
Approval-strongnegative-bribery approval-bribery, except bribed voters
bribe allowed approve p. Consequently, bribing voter approves p
always pointless bribe voters V . Also, without loss
generality assume bribed voters disapprove candidates bribe,
clearly best possible action regard goal make p winner. algorithm
similar one presented proof Theorem 4.2. Define surplus n(c)
candidate c C {p} n(c) = kVc k kVp k consider rightmost candidate c0
right p positive surplus. order make p winner, obviously
bribe least n(c0 ) voters Vc0 V . definition, candidates right c0
nonpositive surplus, whyin deciding n(c0 ) voters Vc0 V
bribewe solely focus candidates left c0 choose n(c0 ) voters
Vc0 V whose approval range extends furthest left. mentioned above,
bribe voters disapprove everyone, thereby making n(c0 ) = 0. recalculate
surpluses candidates left c0 (note candidates surplus never grows
thus ignore candidates right c0 ) repeat process
rightmost candidate right p positive surplus.
time candidates right p nonpositive surplus,
mirror societal order L repeat procedure nonpositive-surplus candidates originally left p respect L. make surpluses
nonpositive without exceeding bribe limit k, found successful bribery action. Otherwise, successful bribery action exist, decisions (concerning
voters bribe) provably optimal.
case approval-negative-bribery, bribed candidates may approve p
bribe approved p bribe. model, sometimes make sense
484

fiBypassing Combinatorial Protections

bribe voters V+ . pose problem, following observation
shows. approval score p remains unchanged every optimal bribe. Here, optimal
bribe defined either bribing voter V+ disapprove everyone except p,
bribing voter V disapprove everyone. Again, case strongnegativebribery, without loss generality assume bribes optimal. Thus,
observation tells us differentiate bribing voters V+
V , cases thing care removal approvals
candidates p. Hence, algorithm strongnegative bribery,
except considering positive-surplus candidate c deciding voters
Vc bribe, consider voters disapprove p voters
approve p.
go show bribery problems NP-complete general (i.e.,
necessarily single-peaked) case. Membership NP obvious problems.
hardness proof approval-strongnegative-bribery adaptation proof
approval-bribery NP-hard (Faliszewski et al., 2009, Thm. 4.2). Please refer
proof point differences. reduction NP-hard problem
Exact Cover 3-sets (X3C), define bribery instance Theorem 4.2 Faliszewski
et al. (2009), except number voters approve
p changed
instead m. exists cover kAk = iA Si = B, bribe
vi approve zero candidates (this slight additional change).
candidates tie approvals win. Looking direction, exists
successful bribe voters, since p approvals 3t candidates
B + 1 approvals, bribe increase number approvals p (in
negative strongnegative bribery setting), clearly p still approvals
bribes. So, 3t candidates B (that started + 1 approvals)
must lost exactly one approval (if lost one approval, one would
lost zero approvals would beat p; lost zero approvals, would beat p). So,
exact cover 3-sets.
Due construction, one use proof show NP-hardness approvalnegative-bribery: voters approving p voters approve p obviously never bribed.
q
Theorem 4.4. single-peaked electorates, weakCondorcet-weighted-$bribery, weakCondorcet-negative-weighted-bribery, weakCondorcet-negative-weighted-$bribery
NP-complete, remaining five cases (weakCondorcet-bribery, weakCondorcet$bribery, weakCondorcet-weighted-bribery, weakCondorcet-negative-bribery, weakCondorcetnegative-$bribery) P.
Proof. general setting eight bribery problems describe
here. Let (C, V ) election instance let L linear order candidates
electorate single-peaked respect L. question whether
designated candidate p C made weakCondorcet winner bribing k
voters.
p weakCondorcet winner election (C, V ), successful bribery action obviously possible bribe voter. thus focus case p
485

fiBrandt, Brill, Hemaspaandra, & Hemaspaandra

weakCondorcet winner (C, V ). case, definition weakCondorcet
implies p contained median interval (i.e., p
/ [m` , mr ]L , m`
mr top choices median voters). Assume without loss generality p lies
strictly right median interval, i.e., mr L p (otherwise, mirror
societal order L).
Identify voter preferred candidate. Define V` = {v V | v L p}
multiset voters lying left p respect L Vr = V V` = {v
V | v = p p L v} multiset voters lying p right p. settings
voters weights, mr L p immediately implies
l kV` k >m kVr k that,
rk
order make p weakCondorcet winner, need bribe kV` kkV
voters V`
2
make p top choice (or, negative-bribery settings, make candidate
right
p
top choice). voters weights, shift total weight least
l
w(V` )w(Vr )
, w(V 0 ) submultiset V 0 V voters defined natural way
2
P
sum weights voters contained V 0 , i.e., w(V 0 ) = vV 0 w(v).
Observe eight bribery problems easily seen NP. prove
assertions Theorem 4.4 order mentioned statement
theorem.
(i) weakCondorcet-weighted-$bribery NP-complete.
Define k weight needs shifted V` p, i.e.,


w(V` ) w(Vr )
k =
.
2
problem weakCondorcet-weighted-$bribery stated follows.
given collection objects (voters), positive integer weight
positive integer price, bounds k k, question whether exists
subset whose price k whose weight least k. so, bribe
first-choose p. holds (or p initially wins), succeed, else fail.
straightforward show NP-hard problem Knapsack (see, e.g., Garey
& Johnson, 1979) reduces directly problem, establishing NP-hardness
weakCondorcet-weighted-$bribery.
(ii) weakCondorcet-negative-weighted-bribery NP-complete.
give reduction NP-complete problem Partition (see proof
Theorem 6.2). Given collection (k1 , k2 , . . . , kn ) positive integers sum
2K, define single-peaked election (C, V ) C = {a, p, c}, L p L c,
ki one voter vi whose first choice whose weight ki . Set
budget k equal n. easy see p win via negative bribery
(k1 , k2 , . . . , kn ) partitioned two equal-sum parts.
(iii) weakCondorcet-negative-weighted-$bribery NP-complete.
follows (ii).
(iv) weakCondorcet-bribery P.
486

fiBypassing Combinatorial Protections

algorithm easy: Bribe k voters chosen arbitrarily V` make p top
choice. If, bribe, p weakCondorcet winner, successful. Otherwise,
successful bribery action exists.
(v) weakCondorcet-$bribery P.
algorithm (iv), except bribe voters order
price tags, starting cheapest voter.
(vi) weakCondorcet-weighted-bribery P.
algorithm (iv), except bribe voters order
weights, starting voter highest weight.
(vii) weakCondorcet-negative-bribery P.
follows (viii).
(viii) weakCondorcet-negative-$bribery P.
Recall p lies strictly right median interval. case negative
bribery, bribed voters must p top choice. Thus, p never made
weakCondorcet winner either (a) voter p first choice kV k
odd, (b) p right end societal order L. (Since p lies strictly
right median interval, p cannot left end L.)
Otherwise, let p candidate right p respect L. Successful
bribery possible if, greedily bribing voters V` (starting
cheapest voter) p top choice, make p weakCondorcet winner.
q
final comment, note easy see problems solved
pseudo-polynomial time dynamic programming, NP-completeness results
strengthened strong NP-completeness unless P = NP.
A.5 Additional Proofs Section 5
Let one 22 control types defined Faliszewski et al. (2009a), i.e., eleven
types (adding/deleting candidates/voters (4 types); unlimited-adding candidates (1
type); three partition types TP TE (6 types)), constructive cases (making c win uniquely win) destructive cases (making c win
unique winner). Let E election system. following holds
unique-winner model nonunique-winner model. (Recall Section 5.1
speak control problem single-peaked, mean single-peakedness
holds even including potentially added candidates voters.)
Theorem A.5. control problem E P single-peaked electorates
default model (in societal order L part input) control
problem E P single-peaked electorates exists-L model (in ask
exists order L relative input single-peaked
goal achieved type control action).
487

fiBrandt, Brill, Hemaspaandra, & Hemaspaandra

Proof. Note control problem instance L0 L00 valid
societal orders relative instance (and crucial notion
instancenot voters/candidates left endmust respect order
valid), set successful (resp., unsuccessful) control actions L0
exactly L00 . Thus, following key observation:
(?) exists valid single-peaked order relative control problem instance successfully controlled control problem instance
successfully controlled every valid single-peaked order.
So, control problem P model L part input via algorithm A,
exists-L model, given instance compute valid L (e.g., using
algorithm Escoffier et al., 2008) hand A. (?) correctness A,
know gives correct answer.
direction, control problem P exists-L model, thanks
(?), simply strip L input model L part input
safely (knowing answer correct original issue) ask existential question
hypothetical P algorithm exists-L version.
q
particular instances Theorem A.5 argued directly particular cases E
Faliszewski et al. (2011), Theorem A.5 provides tool removes need
case-specific arguments.
Theorem 5.5. weakCondorcet elections, control adding voters control deleting voters P single-peaked electorates, nonunique-winner model
unique-winner model.
Proof. give algorithms nonunique-winner model. unique-winner
model, see proof Theorem 5.7 (by Fact 3.1 page 448, unique weakCondorcet
winner tantamount Condorcet winner single-peaked electorates).
Associate voter preferred candidate. goal make p
weakCondorcet winner, i.e., want end one following two situations:
1. kV k odd median voter p top choice.
2. kV k even p lies (inclusive) interval [m` , mr ]L , m` mr
median voters. (This includes case m` = mr .) following,
refer [m` , mr ]L median interval.
easy algorithm case control addition voters: See
current median (or median interval) is. p median (or p lies median interval),
done. Otherwise, assume without loss generality median (interval) lies
left p. add unregistered voters whose top choice either p candidate
right p p weakCondorcet winner hit addition bound
added unregistered voters sort. point succeeded,
success impossible.
algorithm control-by-deletion-of-voters case similar: See current
median (or median interval) is. p median (or p lies median interval),
488

fiBypassing Combinatorial Protections

done. Otherwise, need shift location median voter(s) towards p. Without
loss generality assume median (interval) lies left p. start
deleting voters left end L make p weakCondorcet winner hit
deletion bound without success.
q
Theorem 5.6. Condorcet elections, control partition voters P singlepeaked electorates, nonunique-winner model unique-winner model,
Ties Promote model Ties Eliminate model (note four cases
coincide here).
Proof. Let (C, V ) instance Condorcet election let L linear order
respect electorate single-peaked. Without loss generality assume kCk 2
(otherwise, problem trivial). Furthermore, p C designated candidate
question whether exists partition (V1 , V2 ) p Condorcet winner
overall election. clear case exists partition
(V1 , V2 ) p Condorcet winner (C, V1 ) (C, V2 ) Condorcet winner,
Condorcet winner p beats pairwise comparison, p Condorcet winner.
show Algorithm 3 returns partition property whenever one exists.
Algorithm 3 loops candidates c p beats pairwise comparison
possible sizes V1 (line 2). set C candidates divided five regions
R1 , R2 , . . . , R5 defined follows. Without loss generality assume p <L c,
i.e., c lies right p respect societal order L (otherwise, mirror
everything). Region R1 consists candidates left p, i.e., R1 = {x C | x <L p},
region R2 consists p only. Similarly, R5 consists candidates right c
R4 consists c only. Finally, R3 consists remaining candidates, namely,
candidates lie p c respect L. Note regions except R2
R4 may empty. following picture:
p
R1

R2

c
R3

R4

R5

Associate voter candidate top voters preference order.
define P` , set partitions V respect regions defined. Let
` = (`1 , `2 , . . . , `5 ) five-dimensional vector natural numbers. Define P` set
partitions (V1 , V2 ) V property that, i, `i number voters
V1 whose top choice Ri .
P` 6= , key observation following: x {p, c} holds x
Condorcet winner election (C, V1 ) (V1 , V2 ) P` x Condorcet
winner every election (C, V1 ) (V1 , V2 ) P` . is, want check whether x
Condorcet winner primary elections (C, V1 ) induced partitions
(V1 , V2 ) P` , suffices check one obtain answer. symmetry,
statement holds Condorcet winners elections (C, V2 ).
reason true that, given number voters region,
easy compute region(s) median voter(s) (just counting). Since p
489

fiBrandt, Brill, Hemaspaandra, & Hemaspaandra

Algorithm 3 Condorcet Control Partition Voters
1: candidates c lose p pairwise comparison
2:
k {1, 2, . . . , kV k}
P
3:
` = (`1 , `2 , . . . , `5 ) N5 5i=1 `i = k
4:
define P` set partitions (V1 , V2 ) V i, `i
number voters V1 whose top choice Ri
5:
P` 6=
6:
let (V1 , V2 ) arbitrary partition P`
7:
p Condorcet winner (C, V1 )
8:
either c p Condorcet winner (C, V2 )
9:
return (V1 , V2 )
10:
else (V1 , V2 ) P` : (C, V2 ) Condorcet winner
11:
return (V1 , V2 )
12: return partition makes p overall Condorcet winner

c constitute region own, equally easy tell whether Condorcet
winners (using Fact 3.1).
shown queries lines 7 8 Algorithm 3 efficiently
answered. go show query line 10 efficiently answered,
i.e., given `, partition (V1 , V2 ) P` (C, V2 ) Condorcet winner.
Clearly, cannot happen odd number voters V2 . assume kV2 k
even let m1 m2 median voters. region Ri , know number
V2 -voters whose top choice Ri (this number kRi k `i ). Thus know
regions median voters fall (again counting). Now, least one m1 m2 fall
R2 R4 (i.e., p c), (C, V2 ) cannot possibly Condorcet winner
p c (there may Condorcet winners). three cases, partition
action successful21 return arbitrary partition P` .
remaining cases m1 m2 fall R1 R3 R5 . m1
m2 fall different regions, obviously Condorcet winner done.
Assume, therefore, m1 m2 fall Ri {1, 3, 5}. goal assign
qi = kRi k `i voters top choice Ri V2 way median pair
V2 fall candidate. Let median pair rth (r + 1)st
V2 -voter Ri . Here, r (1 r qi 1) known (by numbers V2 -voters left
right Ri ) count left right respect societal order L.
try accomplish goal brute force, namely, pair candidates (d` , dr )
Ri d` <L dr , let us try ensure rth V2 -voter Ri left falls
left d` (r + 1)st falls right dr .
k{x V | x falls Ri x L d` }k r k{x V | x falls Ri dr L x}k qi r.
cost check O(kCk2 ), pair candidates Ri , easy
counting.
Summing up, running time Algorithm 3 bounded follows. number
iterations loops lines 1, 2, 3, bounded kCk, kV k, kV k5 , respectively.
cost one iteration inner loop clearly dominated cost answering
21. fact, either p c Condorcet winner (C, V2 ), would already detected line 8.

490

fiBypassing Combinatorial Protections

query line 10. cost bounded O(kCk2 ), argued last paragraph.
Altogether, yields running time obviously polynomial size input.
Correctness Algorithm 3 clear explanations above,
argued find partition makes p overall Condorcet winner
partition exists. particular, observe never need consider cases
k = 0 p never Condorcet winner (C, ). case p already
Condorcet winner original election (C, V ) handled setting k kV k line 2
(and c arbitrary candidate C {p} line 1).
q
Theorem 5.7. Condorcet elections, control adding voters control deleting
voters P single-peaked electorates, nonunique-winner model
unique-winner model.
Proof. Associate voter preferred candidate. goal
make p Condorcet winner, i.e., want end situation p
preferred candidate median voter(s).
easy algorithm case control addition voters: See
current median (or median pair) is. p, done. Otherwise, add unregistered
voters whose top choice p added succeed hit
addition bound. succeed hit addition bound, done (with without
success). yet hit addition bound, move follows. p strictly
two median voters point, success impossible. one two distinct
median voters (without loss generality say rightmost two median voters)
median interval contain p (without loss generality say interval lies
left p), add unregistered voters right p make p Condorcet
winner hit addition bound added unregistered voters
sort. point succeeded, success impossible.
algorithm control-by-deletion-of-voters case similar: See current
median (or median pair) is. p, done. Otherwise, need shift location
median voter(s) towards p. Without loss generality assume median (or
median interval) lies left p. start deleting voters left end L
make p Condorcet winner hit deletion bound without success. Note p
initially lies two median voters, never made Condorcet winner
deleting voters.
q

References
Barbera, S. (2001). introduction strategy-proof social choice functions. Social Choice
Welfare, 18 (4), 619653.
Bartholdi, III, J., & Orlin, J. (1991). Single transferable vote resists strategic voting. Social
Choice Welfare, 8 (4), 341354.
Bartholdi, III, J., Tovey, C., & Trick, M. (1989). computational difficulty manipulating election. Social Choice Welfare, 6 (3), 227241.
491

fiBrandt, Brill, Hemaspaandra, & Hemaspaandra

Bartholdi, III, J., Tovey, C., & Trick, M. (1992). hard control election?
Mathematical Computer Modeling, 16 (8/9), 2740.
Bartholdi, III, J., & Trick, M. (1986). Stable matching preferences derived
psychological model. Operations Research Letters, 5 (4), 165169.
Black, D. (1948). rationale group decision-making. Journal Political Economy,
56 (1), 2334.
Black, D. (1958). Theory Committees Elections. Cambridge University Press.
Booth, K., & Lueker, G. (1976). Testing consecutive ones property, interval graphs,
graph planarity using PQ-tree algorithms. Journal Computer System
Sciences, 13 (3), 335379.
Brandt, F., Brill, M., Hemaspaandra, E., & Hemaspaandra, L. (2010). Bypassing combinatorial protections: Polynomial-time algorithms single-peaked electorates. Proceedings 24th AAAI Conference Artificial Intelligence, pp. 715722. AAAI
Press.
Bredereck, R., Chen, J., & Woeginger, G. (2013). nicely structured preference
profiles nearby? Proceedings 23rd International Joint Conference Artificial
Intelligence, pp. 6268. AAAI Press.
Condorcet, J. (1785). Essai sur lApplication de LAnalyse la Probabilite des Decisions
Rendues la Pluralite des Voix. Facsimile reprint original published Paris, 1972,
Imprimerie Royale.
Conitzer, V. (2009). Eliciting single-peaked preferences using comparison queries. Journal
Artificial Intelligence Research, 35, 161191.
Conitzer, V., Sandholm, T., & Lang, J. (2007). elections candidates
hard manipulate? Journal ACM, 54 (3), Article 14.
Copeland, A. (1951). reasonable social welfare function. Mimeographed notes
Seminar Applications Mathematics Social Sciences, University Michigan.
Cornaz, D., Galand, L., & Spanjaard, O. (2012). Bounded single-peaked width proportional representation. Proceedings 20th European Conference Artificial
Intelligence, pp. 270275. IOS Press.
Cornaz, D., Galand, L., & Spanjaard, O. (2013). Kemeny elections bounded singlepeaked single-crossing width. Proceedings 23rd International Joint Conference Artificial Intelligence, pp. 7682. AAAI Press.
Davis, O., Hinich, M., & Ordeshook, P. (1970). expository development mathematical model electoral process. American Political Science Review, 54 (2),
426448.
Dodgson, C. (1876). method taking votes two issues. Pamphlet printed
Clarendon Press, Oxford, headed yet published.
Doignon, J., & Falmagne, J. (1994). polynomial time algorithm unidimensional unfolding representations. Journal Algorithms, 16 (2), 218233.
492

fiBypassing Combinatorial Protections

Duggan, J., & Schwartz, T. (2000). Strategic manipulability without resoluteness shared
beliefs: GibbardSatterthwaite generalized. Social Choice Welfare, 17 (1), 8593.
Dwork, C., Kumar, R., Naor, M., & Sivakumar, D. (2001). Rank aggregation methods
web. Proceedings 10th International World Wide Web Conference, pp.
613622. ACM Press.
Ephrati, E., & Rosenschein, J. (1997). heuristic technique multi-agent planning.
Annals Mathematics Artificial Intelligence, 20 (14), 1367.
Erdelyi, G., Lackner, M., & Pfandler, A. (2013). Computational aspects nearly singlepeaked electorates. Proceedings 27th AAAI Conference Artificial Intelligence, pp. 283289.
Erdelyi, G., Nowak, M., & Rothe, J. (2009). Sincere-strategy preference-based approval
voting fully resists constructive control broadly resists destructive control. Mathematical Logic Quarterly, 55 (4), 425443.
Erdelyi, G., Piras, L., & Rothe, J. (2011). complexity voter partition Bucklin
fallback voting: Solving three open problems. Proceedings 10th International Conference Autonomous Agents Multiagent Systems, pp. 837844.
International Foundation Autonomous Agents Multiagent Systems.
Erdelyi, G., & Rothe, J. (2010). Control complexity fallback voting. Proceedings
16th Australasian Theory Symposium, pp. 3948. Australian Computer Society.
Escoffier, B., Lang, J., & Ozturk, M. (2008). Single-peaked consistency complexity.
Proceedings 18th European Conference Artificial Intelligence, pp. 366370.
IOS Press.
Faliszewski, P. (2008). Nonuniform bribery. Proceedings 7th International Conference Autonomous Agents Multiagent Systems, pp. 15691572. International
Foundation Autonomous Agents Multiagent Systems.
Faliszewski, P., Hemaspaandra, E., & Hemaspaandra, L. (2009). complexity bribery
elections. Journal Artificial Intelligence Research, 35, 485532.
Faliszewski, P., Hemaspaandra, E., & Hemaspaandra, L. (2010). Using complexity protect
elections. Communications ACM, 53 (11), 7482.
Faliszewski, P., Hemaspaandra, E., & Hemaspaandra, L. (2011a). complexity manipulative attacks nearly single-peaked electorates. Tech. rep. arXiv:1105.5032 [cs.GT],
Computing Research Repository, arXiv.org/corr/. Revised, July 2012.
Faliszewski, P., Hemaspaandra, E., & Hemaspaandra, L. (2011b). complexity manipulative attacks nearly single-peaked electorates. Proceedings 13th Conference Theoretical Aspects Rationality Knowledge, pp. 228237. ACM Digital
Library.
Faliszewski, P., Hemaspaandra, E., & Hemaspaandra, L. (2013). Weighted electoral control. Proceedings 12th International Conference Autonomous Agents
Multiagent Systems, pp. 367374. International Foundation Autonomous Agents
Multiagent Systems.
493

fiBrandt, Brill, Hemaspaandra, & Hemaspaandra

Faliszewski, P., Hemaspaandra, E., & Hemaspaandra, L. (2014). complexity manipulative attacks nearly single-peaked electorates. Artificial Intelligence, 207, 6999.
Faliszewski, P., Hemaspaandra, E., Hemaspaandra, L., & Rothe, J. (2009a). Llull
Copeland voting computationally resist bribery constructive control. Journal
Artificial Intelligence Research, 35, 275341.
Faliszewski, P., Hemaspaandra, E., Hemaspaandra, L., & Rothe, J. (2009b). richer understanding complexity election systems. Ravi, S., & Shukla, S. (Eds.), Fundamental Problems Computing: Essays Honor Professor Daniel J. Rosenkrantz,
pp. 375406. Springer.
Faliszewski, P., Hemaspaandra, E., Hemaspaandra, L., & Rothe, J. (2011). shield
never was: Societies single-peaked preferences open manipulation
control. Information Computation, 209, 89107.
Faliszewski, P., Hemaspaandra, E., & Schnoor, H. (2008). Copeland voting: Ties matter.
Proceedings 7th International Conference Autonomous Agents Multiagent Systems, pp. 983990. International Foundation Autonomous Agents
Multiagent Systems.
Fishburn, P. (1977). Condorcet social choice functions. SIAM Journal Applied Mathematics, 33 (3), 469489.
Friedgut, E., Kalai, G., Keller, N., & Nisan, N. (2011). quantitative version
Gibbard-Satterthwaite Theorem three alternatives. SIAM Journal Computing,
40 (3), 934952.
Friedgut, E., Kalai, G., & Nisan, N. (2008). Elections manipulated often. Proceedings 49th IEEE Symposium Foundations Computer Science, pp. 243249.
IEEE Computer Society Press.
Fulkerson, D., & Gross, G. (1965). Incidence matrices interval graphs. Pacific Journal
Mathematics, 15 (5), 835855.
Garey, M., & Johnson, D. (1979). Computers Intractability: Guide Theory
NP-Completeness. W. H. Freeman.
Ghosh, S., Mundhe, M., Hernandez, K., & Sen, S. (1999). Voting movies: anatomy
recommender systems. Proceedings 3rd Annual Conference Autonomous
Agents, pp. 434435. ACM Press.
Gibbard, A. (1973). Manipulation voting schemes. Econometrica, 41 (4), 587601.
Hagele, G., & Pukelsheim, F. (2001). electoral writings Ramon Llull. Studia Lulliana,
41 (97), 338.
Hemachandra, L. (1989). strong exponential hierarchy collapses. Journal Computer
System Sciences, 39 (3), 299322.
Hemaspaandra, E., & Hemaspaandra, L. (2000). Computational politics: Electoral systems.
Proceedings 25th International Symposium Mathematical Foundations
Computer Science, pp. 6483. Springer-Verlag Lecture Notes Computer Science
#1893.
494

fiBypassing Combinatorial Protections

Hemaspaandra, E., & Hemaspaandra, L. (2007). Dichotomy voting systems. Journal
Computer System Sciences, 73 (1), 7383.
Hemaspaandra, E., Hemaspaandra, L., & Menton, C. (2013). Search versus decision
election manipulation problems. Proceedings 30th Annual Symposium
Theoretical Aspects Computer Science, pp. 377388. Leibniz International Proceedings Informatics (LIPIcs).
Hemaspaandra, E., Hemaspaandra, L., & Rothe, J. (1997). Exact analysis Dodgson
elections: Lewis Carrolls 1876 voting system complete parallel access NP.
Journal ACM, 44 (6), 806825.
Hemaspaandra, E., Hemaspaandra, L., & Rothe, J. (2007). Anyone him: complexity
precluding alternative. Artificial Intelligence, 171 (56), 255285.
Hemaspaandra, E., Hemaspaandra, L., & Rothe, J. (2009). Hybrid elections broaden
complexity-theoretic resistance control. Mathematical Logic Quarterly, 55 (4), 397
424.
Hemaspaandra, E., Spakowski, H., & Vogel, J. (2005). complexity Kemeny elections.
Theoretical Computer Science, 349 (3), 382391.
Hemaspaandra, L., & Williams, R. (2012). atypical survey typical-case heuristic
algorithms. SIGACT News, 43 (4), 7189.
Kemeny, J. (1959). Mathematics without numbers. Ddalus, 88 (4), 571591.
Kemeny, J., & Snell, L. (1960). Mathematical Models Social Sciences. Ginn.
Konczak, K., & Lang, J. (2005). Voting procedures incomplete preferences. Proceedings Multidisciplinary IJCAI-05 Workshop Advances Preference Handling,
pp. 124129.
Kramer, G. (1977). dynamical model political equilibrium. Journal Economic
Theory, 16 (2), 310334.
Krehbiel, K. (1998). Pivotal Politics: Theory U.S. Lawmaking. University Chicago
Press.
McCabe-Dansted, J., Pritchard, G., & Slinko, A. (2008). Approximability Dodgsons
rule. Social Choice Welfare, 31 (2), 311330.
Menton, C. (2013). Normalized range voting broadly resists control. Theory Computing
Systems, 53 (4), 507531.
Nanson, E. (1882). Methods election. Transactions Proceedings Royal Society
Victoria, 19, 197240. Available 2009 facsimile reprint Kessinger Publishing.
Niemi, R., & Wright, J. (1987). Voting cycles structure individual preferences.
Social Choice Welfare, 4 (3), 173183.
Niou, E. (1987). note Nansons Rule. Public Choice, 54 (2), 191193.
Papadimitriou, C., & Zachos, S. (1983). Two remarks power counting. Proceedings 6th GI Conference Theoretical Computer Science, pp. 269276.
Springer-Verlag Lecture Notes Computer Science #145.
495

fiBrandt, Brill, Hemaspaandra, & Hemaspaandra

Pennock, D., Horvitz, E., & Giles, C. (2000). Social choice theory recommender systems:
Analysis axiomatic foundations collaborative filtering. Proceedings
17th National Conference Artificial Intelligence, pp. 729734. AAAI Press.
Procaccia, A., & Rosenschein, J. (2007). Junta distributions average-case complexity
manipulating elections. Journal Artificial Intelligence Research, 28, 157181.
Rothe, J., Spakowski, H., & Vogel, J. (2003). Exact complexity winner problem
Young elections. Theory Computing Systems, 36 (4), 375386.
Satterthwaite, M. (1975). Strategy-proofness Arrows conditions: Existence correspondence theorems voting procedures social welfare functions. Journal
Economic Theory, 10 (2), 187217.
Schwartz, T. (1972). Rationality myth maximum. Nous, 6 (2), 97117.
Simpson, P. (1969). defining areas voter choice: Professor Tullock stable voting.
Quarterly Journal Economics, 83 (3), 478490.
Sui, X., Boutilier, C., & Sandholm, T. (2013). Analysis optimization multidimensional percentile mechanisms. Proceedings 23rd International Joint
Conference Artificial Intelligence, pp. 367374. AAAI Press.
Walsh, T. (2007). Uncertainty preference elicitation aggregation. Proceedings
22nd AAAI Conference Artificial Intelligence, pp. 38. AAAI Press.
Walsh, T. (2009). really hard manipulation problems? phase transition
manipulating veto rule. Proceedings 21st International Joint Conference
Artificial Intelligence, pp. 324329. AAAI Press.
Young, H. (1977). Extending Condorcets rule. Journal Economic Theory, 16 (2), 335
353.

496


