Journal Artificial Intelligence Research 53 (2015) 721-744

Submitted 9/14; published 8/15

Mechanisms Multi-unit Combinatorial
Auctions Distinct Goods
Piotr Krysta

p.krysta@liverpool.ac.uk

Deparment Computer Science
University Liverpool, United Kingdom

Orestis Telelis

telelis@gmail.com

Department Digital Systems
University Piraeus, Greece

Carmine Ventre

c.ventre@tees.ac.uk

School Computing
Teesside University, United Kingdom

Abstract
design analyze deterministic truthful approximation mechanisms multiunit Combinatorial Auctions involving constant number distinct goods,
arbitrary limited supply. Prospective buyers (bidders) preferences multisets
items, i.e., one unit per distinct good. objective determine
allocations multisets maximize Social Welfare. main results multiminded submodular bidders. first setting bidder positive value
allocated one multiset prespecified demand set alternatives. second
setting bidder associated submodular valuation function defines value
multiset allocated. multi-minded bidders, design truthful Fptas
fully optimizes Social Welfare, violating supply constraints goods
within factor (1 + ), fixed > 0 (i.e., approximation applies constraints
Social Welfare). result best possible, full optimization
impossible without violating supply constraints. submodular bidders, obtain
Ptas approximates optimum Social Welfare within factor (1 + ), fixed
> 0, without violating supply constraints. result best possible well.
allocation algorithms Maximal-in-Range yield truthful mechanisms, paired
Vickrey-Clarke-Groves payments.

1. Introduction
paper study design analysis truthful multi-unit Combinatorial Auctions, constant number distinct goods, limited supply. Arguably,
widespread modern application general setting allocation radio spectrum
licences (Milgrom, 2004); license use specific frequency band electromagnetic spectrum, within certain geographic area. design Spectrum
Auctions, licenses area considered identical units single good (the
area), number distinct geographic areas is, course, bounded constant.
formally, consider problem auctioning (allocating) one go multiple
units constant number distinct goods, prospective buyers private
multi-demand combinatorial valuation functions, maximize Social Welfare.
c
2015
AI Access Foundation. rights reserved.

fiKrysta, Telelis, & Ventre

multi-demand buyer setting may distinct positive values distinct multisets
goods, i.e., multiset may demand one unit per good. aim
devise deterministic truthful auction mechanisms, wherein every bidder finds
best interest reveal value truthfully multiset items (i.e., truthful report
valuation functions dominant strategy). Additionally, interested mechanisms
compute approximately efficient allocation polynomial time. problem generalizes simultaneously Combinatorial Auctions multiple goods Multi-unit
Auctions single good multi-unit combinatorial settings respectively.
Since work Lehmann, OCallaghan, Shoham (2002), Mechanism Design
Combinatorial Auctions multiple heterogeneous goods (each unitary supply) received significant attention recent years (Holzman, Kfir-Dahav, Monderer, & Tennenholtz, 2004; Lehmann, Lehmann, & Nisan, 2006; Dobzinski, Nisan, & Schapira, 2010; Lavi
& Swamy, 2011), due various applications, especially online trading systems
Internet. mechanism elicits bids interested buyers, determine
assignment bundles payments way, bidders best
interest reveal valuation function truthfully mechanism. line research,
introduces algorithmic efficiency considerations design truthful mechanisms,
initialized work Nisan Ronen (2001).
related problem auctioning multiple say units single good multidemand bidders already considered Vickrey seminal paper (Vickrey,
1961). bidders submodular private valuation functions, Vickrey gave extension
celebrated single-item Second-Price Auction mechanism, retains truthful revelation valuation functions (weakly) dominant strategy bidders fully optimizes
Social Welfare. drawback mechanism computationally
efficient (constant number of) units, allocation algorithm must
process (s) bids least many steps, whereas input number,
require number steps bounded polynomial log s. Several drawbacks
generalized Vickrey-Clarke-Groves (truthful) auction mechanism identified
Ausubel Milgrom (2010). Polynomial-time approximation mechanisms multiunit auctions designed relatively recently (Mualem & Nisan, 2002, 2008; Dobzinski &
Nisan, 2010; Vocking, 2012; Nisan, 2014). particular, Nisan (2014) devised deterministic, polynomial time auction mechanism, multi-unit setting submodular bidders
first considered Vickrey (1961). Vocking designed analyzed recently randomized
universally truthful polynomial-time approximation scheme, bidders unrestricted
valuation functions (Vocking, 2012).
Results general setting multi-unit Combinatorial Auctions relatively
scarcer (Bartal, Gonen, & Nisan, 2003; Grandoni, Krysta, Leonardi, & Ventre, 2014; Lavi
& Swamy, 2011). exactly setting consider here, constant number
distinct goods, similarly setting considered Grandoni et al. (2014); particular,
number cases auctions analyze Maximal-in-Range (MiR) allocation
algorithms (Nisan & Ronen, 2007), paired Vickrey-Clarke-Groves
payment rule, yield truthful mechanisms.
722

fiMechanisms Multi-unit Combinatorial Auctions

1.1 Contribution
main results concern multi-unit Combinatorial Auctions constant number
distinct goods two broad classes bidders, specified associated valuation
functions:
1. Multi-minded Bidders: setting bidder associated demand set
alternative multisets (the multiple minds). bidders valuation function assigns
(possibly distinct) positive value every alternative demand set (and least
much value every superset alternative) zero elsewhere.
2. Submodular Bidders: setting value bidder particular multiset
items given submodular valuation function.
multi-minded bidders design analyze Section 4 truthful Fptas1 ,
fully optimizes Social Welfare polynomial time, violating supply constraints
goods factor (1 + ), fixed > 0. violation supply
constraints practical well theoretical justification. one hand conceivable
that, certain environments, slight augmentation supply economically viable,
sake better solutions (e.g., auctioneers well supplied stocks easily handle
occurrences modest overselling). hand, note relaxation
supply constraints necessary obtaining Fptas, problem otherwise strongly
NP-hard, 2 goods (please see related discussion Section 4). result
significantly improves upon Fptas Grandoni et al. (2014), approximates
Social Welfare supply constraints within factor2 (1+), bidders singleparameter (i.e., associate positive value multiset demand set)
overbid demands. Technically, Fptas Grandoni et al. (2014) based
design monotone algorithms (Lehmann et al., 2002; Briest, Krysta, & Vocking,
2011) requires no-overbidding assumption demands (cf. discussion therein).
Section 5 revisit general technique introduced Dobzinski Nisan (2010),
multi-unit auction Mechanism Design, generalize setting multiple distinct goods, limited supply. discuss generalization yields truthful
Ptas immediately multi-minded bidders, violate supply constraints
approximates Social Welfare within factor (1+), fixed > 0. Subsequently,
use technique design truthful Ptas bidders submodular valuation functions, assuming values (bids) accessed value queries algorithm.
Prior result, time-efficient deterministic truthful mechanism known submodular bidders, even 2.3 Although technique Dobzinski Nisan
facilitated development factor 2 approximation mechanism bidders general
valuation functions single-good multi-unit setting, direct extension setting
multiple distinct goods appear work (for general valuation functions).
1. Fully Polynomial Time Approximation Scheme.
2. context Social Welfare maximization, approximation within factor 1 (or, equivalently,
-approximation, 1) mean recovering least fraction 1 welfare optimum
allocation. switch temporarily using 1 Section 5, technical convenience.
3. Nisan (2014) devised optimal polynomial time auction = 1, i.e., single good.

723

fiKrysta, Telelis, & Ventre

show, however, appropriate extension dedicated treatment case
Dobzinski Nisan yields constant (m + 1)-approximation (Section 6).
assumption constant number = O(1) distinct goods important,
otherwise problems become Combinatorial Auctions, thus, hard approximate

polynomial time within less O( m) (Lehmann et al., 2002) multi-minded bide
ders within less e1
submodular bidders (Khot, Lipton, Markakis, & Mehta,
2008; Mirrokni, Schapira, & Vondrak, 2008). Moreover, recent results Daniely, Schapira,
Shahaf (2015) imply that, unrestricted m, techniques cannot yield truthful

polynomial-time mechanisms approximation factors less O(m) O( m), respectively. Regarding generalization Dobzinski-Nisan technique, existence
Fptas multi-minded bidders single good excluded, unless P = NP (Dobzinski
& Nisan, 2010). lower bounds imply results best possible. Finally,
shown Nisan Segal (2006) Dobzinski Nisan (2010), regarding general valuation functions, deterministic MiR algorithm achieves better 2-approximation
single good communication complexity o(s), supply good.
Closing gap lower bound upper bound (m + 1) constant
number multiple distinct goods, remains open problem.

2. Related Work
Mechanism Design multi-unit auctions initiated already celebrated work
Vickrey (1961), extended famous mechanism case multiple units,
bidders symmetric submodular valuation functions (Lehmann et al., 2006).
mechanism however computationally efficient respect number available
units, already discussed. requires bidders place marginal bid per additional
unit wish receive allocation algorithm processes marginal bids.
recently, Nisan (2014) exhibited polynomial-time truthful mechanism case.
design multi-unit mechanisms polynomially bounded running time log s, denoting number units, first considered Mualem Nisan (2008). work,
Mualem Nisan designed analyzed truthful polynomial-time 2-approximation
mechanism multi-unit combinatorial setting, involving multiple distinct goods,
limited supply, single-minded bidders. Subsequently, Archer, Papadimitriou, Talwar,
Tardos (2003) improved upon approximation ratio similar setting,
developed mechanism based randomized rounding truthful expectation. recently, Briest et al. (2011) designed analysed Fptas, single-minded
bidders multi-unit combinatorial setting.
Dobzinski Nisan (2010) analyzed general scheme designing MiR polynomialtime truthful approximation mechanisms, single-good multi-unit auctions. resulted
Ptas case multi-minded bidders, 2-approximation general valuation
functions accessed (by allocation algorithm) value queries,
4
3 -approximation symmetric subadditive valuation functions. Moreover, authors
applied scheme class piecewise linear (multi-unit) valuation functions
number units single good, obtain truthful Ptas mechanism. special case
class valuation functions earlier studied Kothari, Parkes, Suri
(2005); authors designed Fptas mechanism was, however, approximately
724

fiMechanisms Multi-unit Combinatorial Auctions

truthful. Dobzinski Dughmi (2013) gave randomized truthful expectation Fptas
multi-minded bidders. Relatively recently, Vocking (2012) gave universally truthful
randomized Ptas general valuation functions accessed value queries (in contrast,
mechanisms deterministic). multi-unit combinatorial setting (i.e.,
one distinct goods) known results concern mainly bidders demands
single unit good (Lehmann et al., 2002; Briest et al., 2011; Blumrosen &
Nisan, 2007). contrast, consider constant number goods, multi-demand
bidders. Bartal et al. (2003) proved approximation competitiveness results truthful
multi-unit Combinatorial Auctions multi-demand bidders, bidders demands
numbers units upper lower bounded. derived approximation guarantees
depend bounds. Lavi Swamy (2011) improved upon approximation
guarantees, devising randomized mechanisms truthful expectation.
study constant number goods, arbitrary limited supply, initiated
Grandoni et al. (2014). authors utilized methods multi-objective optimization
(approximate Pareto curves Langrangian relaxation) design analyze truthful
polynomial-time approximation schemes variety settings. particular, devised truthful Fptases approximate objective function (Social Welfare
Cost) multi-capacitated versions problems within factor (1 + ), violating
capacity constraints factor (1 + ) (capacity corresponds limited supply
distinct goods). Problems considered Grandoni et al. include multi-unit
auctions, minimum spanning tree, shortest path, maximum (perfect) matching matroid
intersection; subclass problems truthful Ptas analyzed,
violate capacity constraints.
particular interest practice Combinatorial Auctions (also multi-unit
case, good available limited supply identical copies), efficient
(near-)optimal resolution Winner Determination problem (Lehmann, Muller, &
Sandholm, 2010). Given input set bids prespecified format (formally termed
language), items sale, Winner Determination problem prescribes determination feasible allocation items bidders, sum bids
corresponding received allocation maximized. Thus, Winner Determination
problem implicitly prescribes determination winning bidders receiving allocation, revenue collected corresponding bids maximized. Notice that,
comparison work, truthful report bidders valuation functions concern
setting. significant volume research concerned study approximation
algorithms derivation hardness results (see, e.g., Lehmann et al., 2010), much
development global optimization techniques (Sandholm, 2010). Kelly (2004) studies
Multi-unit Combinatorial Auctions distinct goods, determining allocation computational resources. particular, devises optimal algorithm
Winner Determination problem, low-dimensional setting ours.
Finally let us mention work Bikhchandani, de Vries, Schummer, Vohra
(2011) investigates multi-unit Combinatorial Auction premises similar ours, without
restriction number distinct goods. Instead, authors devise ascending price
auction selling subsets goods constitute bases matroid, polymatroid, case
multi-unit demand bidders limited supply distinct good. auction
truthful runs polynomial pseudopolynomial time, respectively. accesses
725

fiKrysta, Telelis, & Ventre

bidders combinatorial valuation functions Demand Queries; bidders
presented prices goods announce subset willing pay for.
comparison, mechanisms use Value Queries, mechanism asks
value bidder particular set items. Value queries weaker device
simulated (but cannot generally simulate) demand queries (Blumrosen
& Nisan, 2007).

3. Definitions
Let [m] = {1, . . . , m} set goods, assumed fixed constant.
s` N units (copies) good ` [m] available. multiset goods denoted vector
x = (x(1), x(2), . . . , x(m)), x(`) number units good ` [m], ` = 1, . . . , m.
set multisets denoted U =
`=1 {0, 1, . . . , s` }. Let [n] = {1, . . . , n}
set n agents (prospective buyers/bidders). Every bidder [n] private valuation
function
vi : U 7 R+ ,
vi (x) x U denotes maximum monetary amount willing
pay x U, referred value x. valuation functions normalized, i.e.,
vi (0, . . . , 0) = 0 assumed monotone non-decreasing: two multisets x
holds component-wise, assume vi (x) vi (y). is, auction theory
terms, assume free disposal (i.e., enlarging set increasing number items
allocation never decreases value incurred bidder).
mechanism consists allocation method (algorithm), A, payment rule, p.
allocation method elicits bids b = ( b1 , b2 , . . . , bn ) bidders that, presumably, describe valuation functions outputs allocation A(b) = (x1 , x2 , . . . , xn ),
xi U multiset goods allocated bidder i. purposes discussion section, deliberately ignore fact bidders valuation functions may
succinct representation facilitate efficient communication
allocation algorithm; recall bidders valuation functions generally defined
U =
`=1 {0, 1, . . . , s` }. succinct representation indeed,
allocation algorithms discussed paper access bidders valuation functions iteratively, polynomially many Value Queries; is, algorithm iteration
asks every bidder bid specific multiset items.
payment rule determines vector p(b) = ( p1 (b), p2 (b), . . . , pn (b) ), pi (b)
payment bidder i. Every bidder bids maximize quasi-linear utility,
defined as:
ui (b) = vi ( A(b) ) pi (b),
where, assumption externalities, i.e., value bidder A(b)
depends individual allocation others, obtain
vi ( A(b) ) = vi (xi ).
study truthful mechanisms (A, p) wherein bidder maximizes utility
reporting valuation function truthfully, i.e., bidding bi = vi , independently
bidders reports, bi = (b1 , . . . , bi1 , bi+1 , . . . , bn ):
726

fiMechanisms Multi-unit Combinatorial Auctions

Definition 1 mechanism (A, p) truthful if, every bidder bidding profile bi ,
satisfies ui (vi , bi ) ui (vi0 , bi ), every vi0 .
definition, profile b = v dominant strategy equilibrium. objective
design analyze truthful mechanisms, (A, p) render truthful reporting
bidders valuation dominant strategy equilibrium, wherein, Social Welfare
resulting allocation, SW ( A(b) ) = SW ( A(v) ) (approximately) optimized. social
welfare allocation, X = (x1 , x2 , . . . , xn ) defined as:
SW (X) =

n
X

vi (xi ),

i=1

sequel use simply X, allocation output A, without specific reference
b, since analyze truthful mechanisms, dictate b = v.
well understood general method design truthful mechanisms
Vickrey-Clarke-Groves (VCG) auction mechanism (Vickrey, 1961; Clarke, 1971; Groves,
1973), generalization Vickreys Single-Item 2nd Price Multi-unit Auctions (Vickrey,
1961). Deployment VCG auction, however, requires utilization allocation
algorithm, A, outputs welfare-maximizing allocation underlying setting;
rarely constitutes computationally efficient alternative combinatorial settings,
underlying optimization problem NP-hard.
problems consider work indeed NP-hard, mechanisms use
Maximal-in-Range (MiR) allocation algorithms (Nisan & Ronen, 2007), maximize
social welfare approximately.
Definition 2 (Nisan & Ronen, 2007) algorithm choosing output set
possible allocations MiR, fully optimizes Social Welfare subset R
allocations.
Note subset R, called range, defined independently bidders declarations. Nisan Ronen (2007) identified MiR allocation algorithms sole device
that, along VCG payments, yields truthful mechanisms Combinatorial Auctions.
particular, given MiR allocation algorithm, A, using algorithm computing
output allocation computing payments manner VCG payments
scheme, suffices obtain truthful mechanism. particular, given MiR allocation algorithm, payment bidder computed follows:
pi (b) =

X

vi0 ( A(bi ) )

i0 6=i

X

vi0 ( A(b) )

i0 6=i

Notice payment scheme coincides VCG payment scheme, use
optimal allocation algorithm place A. starting point work Nisan
Ronen (2007) pair observations that: (i) VCG mechanism requires full
optimization social welfare underlying setting, NP-hard problem
interesting settings (ii) VCG-based mechanisms (wherein polynomial-time allocation
algorithm outputs welfare-suboptimal allocations) necessarily truthful.
727

fiKrysta, Telelis, & Ventre

4. Multi-minded Bidders
section consider multi-minded bidders; every bidder [n] associated
collection multisets Di U, referred demand set. assume
[n] values multiset = (d(1), . . . , d(m)) Di amount vi (d) > 0. every
multiset e U \ Di define:


n

max vi (d) fifi e
Di exists
dDi
vi (e) =

0
otherwise.
Naturally, vi (0) = 0, 0 = (0, . . . , 0). Consequently, setting, valuation
function bidder compactly expressed collection (vi (d), d)dDi .
related literature, assume therefore algorithm expects input bids form,
rather (an oracle representing) entire valuation function. say bidder
winner auction, assigned exactly one alternatives Di (or
superset one alternatives); corresponds XOR-bidding language
Combinatorial Auctions (Lehmann et al., 2006).
design Fptas, maximizes Social Welfare may violate supply
constraints goods factor (1 + ), fixed > 0.
allocation algorithm mechanism. analyzing performance respect
welfare optimality allocation outputs bounded violation
supply constraints, prove MiR algorithm, thus paired VCG
payments, yield truthful mechanism. high level, algorithm reminiscent
one yields Fptas well-known one-dimensional knapsack problem (see
e.g., Vazirani, 2003, ch. 8). proceeds follows. chosen fixed > 0, first
discards alternatives bidders demand sets, cannot satisfied, given
supply constraints. alternatives multisets already exceed supply
least one good. Subsequently, quantities goods multisets remaining
within bidders demand sets appropriately rounded; supply adjusted well.
thus obtain rounded instance. Then, search welfare maximizing allocation
rounded instance, usage dynamic programming. allocation shown
optimal initial instance, well, feasible, modulo violation initial
supply constraints within factor (1 + ). light turning algorithm
truthful mechanism, use notation actual valuation functions definition
analysis below.
Fix constant > 0. First, [n], remove alternatives Di
d(`) > s` ` = 1, . . . , (if alternatives bidder removed, remove
i). Henceforth, use notation, U, [n], Di , etc., remaining alternatives
bidders. demands alternatives Di [n] rounded follows.
every [n] every Di , produce multiset d0 = (d0 (1), . . . , d0 (m))
that, distinct good ` [m], d0 (`) = b nd(`)
s` c. adapt supply
n
0
good appropriately, s` = e. Given rounded version problem instance,
use dynamic programming produce allocation it, immediately
translate allocation original problem instance, welfare-optimal
violates (original) supply constraints factor (1 + ). purposes
description follows, denote d0 rounded version demand d.
728

fiMechanisms Multi-unit Combinatorial Auctions

define dynamic programming table V(i, Y1 , . . . Ym ) = 1, . . . , n Y`
{0, 1, 2, . . . , s0` } ` [m]. cell V(i, Y1 , . . . , Ym ) stores maximum welfare
P
nx (`)
allocation X, i.e., j vj (xj ), whose rounded version X0 = (b sj` c)j,` uses multisets
demand sets bidders
P {1, 2, . . . , i}, total demand w.r.t. good
` = 1, . . . , precisely Y` , i.e., x0i (`) = Y` .
compute entries table V, observe that, problem V(1, Y1 , . . . Ym )
collection Y` that: (Y1 , . . . , Ym ) {0, 1, . . . , n e}m , easy solve.
entry V(1, Y1 , . . . Ym ) check bidder 1 alternative D1
d0 (`) = Y` , ` [m]. yes, let alternative maximum valuation;
assign V(1, Y1 , . . . , Ym ) = v1 (d) build auxiliary table A[1, Y1 , . . . Ym ] set
case {(1, d)}. Otherwise, bidder 1 alternative, assign
V(1, Y1 , . . . Ym ) = 0 A[1, Y1 , . . . Ym ] = {(1, 0)}. define V(i + 1, Y1 , . . . , Ym ), consider
bidder + 1 alternatives = (d(1), . . . , d(m)) Di+1 ; let
i+1

n




0
0
= max vi+1 (d) + V i, Y1 (1), ..., Ym (m) d0
dDi+1

(1)

where, i, define V(i, Y1 , . . . Ym ) = and, accordingly, A[i, Y1 , . . . Ym ] = { (i, 0) },
demand Di satisfying d0 Y. Consequently:
n

V(i + 1, Y1 , . . . , Ym ) = max i+1 , V(i, Y1 , . . . Ym ) .
Accordingly, i+1 V(i, Y1 , . . . Ym ), set:
A[i + 1, Y1 , . . . , Ym ] = A[i, Y1 , . . . , Ym ] {(i + 1, 0)},
otherwise:
A[i + 1, Y1 , . . . , Ym ] = A[i, Y1 d0 (1), . . . , Ym d0 (m)] {(i + 1, d)},
alternative Di+1 maximizing (1). Finally, inspect solutions
entries V(n, Y1 , . . . , Ym ) vectors (Y1 , . . . , Ym ) {0, 1, . . . , n e}m , take one
maximizes Social Welfare output solution given corresponding entry
table.
size table V n(d n e+1)m need time roughly O(maxi |Di |+m) compute
one entry table, overall time algorithm leads Fptas. optimality
respect sum bidders values easy verify. Let X = (x1 , x2 , . . . , xn )
denote feasible allocation original problem instance.
every good, ` = 1, . . . , m,
P j xi (`)n k n
P
P xi (`)n
n
have: xi (`) s` , or, equivalently, s` , thus s` = s0` .
is, X feasible rounded problem instance. dynamic programming
algorithm inspect feasible solutions rounded problem instance output
one largest welfare it, optimum solution original problem instance
inspected well.
argue supply constraints s` , ` = 1, . . . , m, violated factor
1 + 2. Fix good ` {1, . . . , m} let X output allocation, respect
729

fiKrysta, Telelis, & Ventre

original problem instance. X chosen algorithm means dynamic programming search rounded
problem instance, feasible rounded
P j nxi (`) k
s0` = n e and, since:
problem instance. Thus, have:

s`
X n xi (`)


s`






obtain:

P

xi (`)

X n xi (`)
lnm


s`
+n

+ |{i|xi Di }|

n
+ 1 + n,


(1 + 2)s` .

Example Let us illustrate algorithms functionality simple example.
Consider n = 3 bidders = 2 distinct goods. Let supplies goods s1 = s2 = 4.
bidders values demand sets defined follows:
Bidder
Valuation Function
Demand Set
1
v1 ( (3, 4) ) = 1 v1 ( (4, 3) ) = 2 D1 = { (3, 4), (4, 3) }
2
v2 ( (3, 3) ) = 3
D2 = { (3, 3) }
3
v3 ( (2, 3) ) = 4 v3 ( (3, 2) ) = 5 D3 = { (2, 3), (3, 2) }
example evident feasible allocations involve assignment demand
single bidder, given supplies goods 4. Thus, optimal allocation
X ( 0, 0, (3, 2) ). Consider rounded problem = 2. rounded supply
two goods dn/e = d4/2e = 2. rounded demands bidders
follows:
Bidder
1
2
3
Demands (3, 4) (4, 3) (3, 3) (2, 3) (3, 2)
Rounded Demands (1, 1) (1, 1) (1, 1) (0, 1) (1, 0)
Observe demands bidder 1 rounded (1, 1). pose
problem, algorithm processes original demands, uses rounded
versions validate feasibility allocation builds respect rounded supply.
example, rounded supply good 2, algorithm output
allocation X = ( 0, (3, 3), (3, 2) ), welfare 8 superoptimal
inital instance. Although rounded versions allocated demands violate
rounded supplies goods (equal 2), violate original supplies 4, less
factor 1 + = 3 (particularly example, factor 1.5).
Note algorithm exact, grants every bidder multiset
demand set (or none). Assuming = O(1) essential result, even presence
supply constraints relaxation. proof claim given end section.
truthfulness Fptas, denoted below, follows fact optimizes
fixed range solutions.
Theorem 1 exists truthful Fptas multi-unit combinatorial auction problem
fixed number goods, bidders private multi-minded valuation functions,
defined, bidder, private collection multisets goods. fixed > 0,
Fptas fully optimizes social welfare, violating supplies goods within factor
(1 + ).
730

fiMechanisms Multi-unit Combinatorial Auctions

Proof. prove theorem show MiR range R = {X|b : A(b) =
X}. is, allocation X R bid vector
b, show SW (A(b), b)
SW (X, b), bid vector b = (bi (d), d)dDi
allocation X R,


let SW (X, b) Social
P Welfare allocation X, evaluated according bid
vector b, i.e., SW (X, b) = bi (X).


Fix allocation X bid vector b = (bi (d), d)dDi
; definition range,



A(b) = X. Recall
exists bid vector b, b = (bi (d), d)dDi


xi (`), bidder ` = 1, . . . , m, variable indicating many copies item
`, allocation X grants bidder i. Note X = A(b) grants
demanded alternatives (by exactness), exists demand di Di {0} that,
` = 1, . . . , m, xi (`)j= di (`).
Since X output A, definition
P ndi (`) k n
` = 1, . . . , m, s` .
let C set bidders b = (bC , bC ) b = (bC , bC ), is,
b b differ bids bidders set C. bidders C assume
true valuation function bi . bidder evaluates alternative xi = di
granted allocation X ei Di {0}. is, vi (di ) = vi (ei ). Assume,
sake contradiction, SW (X, b) > SW (A(b), b), i.e.:
X

bi (ei ) +

X

bj (X) >

j6C

iC

X

bi (A(b)) +

X

bj (A(b)).

(2)

j6C

iC

Since di (`) ei (`) ` = 1, . . . , C, setting ei = di 6 C, obtain:
X n ei (`)


s`



X n di (`)


s`



lnm


,

` = 1, . . . , m. solution grants bidder alternative ei Di {}
considered algorithm input b. solution Social Welfare SW (X, b)
therefore (2) contradiction definition A.
2
related result Briest et al. (2011) truthful Fptas single good limited
(not violated) supply; cannot generalized setting one supply
constraints.
4.1 Note Hardness
Note problem strongly NP-hard, allow violate supply constraints 2 (Chekuri & Khanna, 2005). well known problem strongly
NP-hard, exist FPTAS problem, unless P=NP (see, e.g., Vazirani, 2003). assumption fixed constant necessary. Otherwise
problem equivalent multi-unit Combinatorial Auctions hard approximate
polynomial time within m1/2 , > 0 (Lehmann et al., 2002). claim true,
even allow solutions violate supplies. particular:
731

fiKrysta, Telelis, & Ventre

Proposition 1 multi-unit combinatorial auction distinct goods, NPhard approximate Social Welfare within factor better m1/2 , even allow
multiplicative (1 + )-relaxation supply constraints, < 1.
Proof. argument follows: known hard approximate maximum
independent set problem graph G = (V, E) within factor m1/2 > 0,
|E| = (Hastad, 1996). using reduction Lehmann et al. (2002), reduce
problem problem set goods [m] = E set single-minded
bidders V ; bidders u V set contains edges adjacent u graph G
bidders valuation set 1. allow violate supply 1
good factor 1 + , < 1, feasible solution relaxed problem
independent set graph G. Thus relaxed problem equivalent maximum
independent set problem G.
2
4.2 Multi-dimensional Knapsack
discuss application Fptas, relation Multi-dimensional Knapsack
Problem (MdKP) (Chekuri & Khanna, 2005). Suppose given MdKP instance,
constant number distinct compartments, = O(1), compartment,
` = 1, 2, . . . , m, capacity s` . problem asks fit knapsack subset
universe, U, n given m-dimensional objects, sum collected objects
sizes dimension, `, exceed s` total value collected objects
maximized. object, = 1, . . . , n MdKP instance represented
vector di , represents dimensions, (di (1), . . . , di (m)) value, vi ,
hvi , di ( (R+ {0}) U ). Then, object corresponds single bidder i,
setting analyzed Section 4, valuation function vi (d) vi , every di ,
vi (d) = 0, every d(`) < di (`), ` = 1, . . . , m. Notice bidder
single-parameter, valuation function takes single non-zero value every
di demand set, Di , singleton, i.e., contains single multiset, di . Thus,
MdKP corresponds single-parameter version problem treated above.
apply Fptas MdKP, algorithm exact, mentioned
previously, allocates every bidder (read as: fits knapsack) either exact
alternative demand set, Di , none. worth mentioning singleparameter version, Fptas Section 4 shown monotone (Lehmann et al.,
2002; Briest et al., 2011), one carefully fixes tie-breaking rule. monotone allocation
algorithm ensures that: (single-parameter) bidder allocated single demand di
declares truthfully hvi , di i, receives (declared) demand d0i ,
declares hvi0 , d0i i, vi0 vi d0i di (i.e., intuitively, asks less items offering
money). exact monotone allocation algorithm yield truthful mechanism
single-parameter setting, incorporation critical value payments see
work Lehmann et al. (2002) details.
Let us note that, generalize MdKP further, following manner. Instead
packing constraints (of form ) dimensions knapsack,
handle mix packing covering constraints (i.e., forms {, }),
long constant number dimensions, = O(1), one covering
packing constraint per dimension. generalized scenario follow
732

fiMechanisms Multi-unit Combinatorial Auctions

approach similar approach Section 4 obtain truthful Fptas fully
optimizes total value fitted items violates constraints factor
(1 + ). Violation constraints needed reason mentioned above,
note computational hardness, end Section 4.

5. Generalized Dobzinski-Nisan Method
discuss direct generalization method designed Dobzinski Nisan (2010),
truthful single-good multi-unit auction mechanisms. use methods generalization multiple goods next subsection, obtain truthful Ptas bidders
submodular valuation functions (over multisets). Let polynomial-time MiR
allocation algorithm = O(1) bidders s` units good ` = 1, . . . , m,
time complexity TA (t, s), = (s1 , . . . , sm ), approximation ratio 1. Then, algorithm
used routine within procedure Figure 1, obtain polynomial-time

MiR algorithm n bidders, approximation ratio ( t+1
).
Given = O(1), procedure executes algorithm every subset bidders
every combination certain pre-specified quantities goods. output
allocation considers rest bidders allocates optimally integral
number (multi-unit) bundles good. main result shown Dobzinski
Nisan (2010) single good proved goods:
Theorem 2 Let Maximal-in-Range algorithm complexity TA (t, (s1 , . . . , sm )),
bidders s` units good ` = 1, . . . , m. Dobzinski-Nisan Method
MiR runs time polynomial log s1 , . . . , log sm , n, TA (t, (s1 , . . . , sm )), every

= O(1). Moreover, outputs allocation value least fraction ( t+1
)
optimum Social Welfare.
proof direct extension proof given Dobzinski Nisan (2010) single
good. Consider MiR algorithm A, used within Dobzinski-Nisan method;
executes polynomial time = O(1) bidders = O(1) distinct goods,
limited supply s` , ` [m]. Let RA denote range algorithm. verified
method outputs allocations (R, t, 1 , . . . , )-round, given following
definition round allocations (Dobzinski & Nisan, 2010):
Definition 3 = O(1), allocation (R, t, 1 , . . . , )-round if:
R set allocations and, X R, bidders allocated nonempty bundles. bidders allocated together s` ` units good
` = 1, . . . , m.
exists set |T | bidders, allocated according
allocation R.
`

P
bidder [n] \ receives exact
multiple max b 2n
units good `
2 c, 1

`
and:
x
(`)

n

max
b
c,
1
,

`
=
1,
.
.
.
,

i[n]\T
2n2

733

fiKrysta, Telelis, & Ventre

1. ` = 1, . . . , do:
1
(a) define u` := (1 + 2n
)



blogu s` c
2
`
(b) define L` := 0, 1, bu` c, bu` c, . . . , u`
, s`

2. every subset [n] bidders, |T | t, do:


1. every (1 , . . . , )
L
`=1 ` do:
1 Run s` ` units good ` [m] bidders .
2 Split remaining ` units (if ` > 0) fromeach good
` [m]
`
c,
1
units.
2n2 bundles (per good), max b 2n
2
3 Find optimal allocation equi-sized bundles among bidders [n] \ .
3. Return best allocation found.
Figure 1: Dobzinski-Nisan Method multiple goods.
definition, R corresponds range A, parameterized subset
bidders , i.e., R = RA (T ), executed. Then, = O(1), range
method subset allocations (RA (T ), , 1 , . . . , )-round, that:
(1 , . . . , ) (m
`=1 L` ), L` defined step 1.(b) method Figure 1,
[n], = |T | t. Formally, methods range RDN subset allocations:

n

L
)


=
|T
|


RDN = X X (RA (T ), , 1 , . . . , )-round, (` )` (m
`=1 `
Example Part (I) continuing analyze methods range, let us exemplify
concept (R, t, 1 , . . . , )-round allocations. consider small instance
multi-minded bidders, similar considered previous section. argue
later, Dobzinski-Nisan method yield truthful Ptas (that respects supply
constraints goods), multi-minded bidders. Assume = 2 distinct goods, n = 5
bidders. assume supplies s1 = 200 = s2 goods. bidders demands
follows:
Bidder
Demand Set
1
D1 = { (75, 51), (49, 73) }
2
D2 = { (51, 27), (25, 49) }
3
D3 = { (48, 1) }
4
D4 = { (1, 1) }
D5 = { (1, 48) }
5
Let us exhibit round allocation instance, according Definition 3. = 2
1 = 2 = 100, consider first allocation:
X = ( (75, 51), (25, 49), (48, 2), (2, 2), 0 ),
734

fiMechanisms Multi-unit Combinatorial Auctions

x1 = (75, 51), x2 = (25, 49), x3 = (48, 2), x4 = (2, 2), x5 = 0. allocation
(R, 2, 100, 100)-round, according Definition 3, R denotes subset allocations
2 bidders receiving non-empty multisets remaining ones receiving appropriate multi-unit bundles per good. Indeed, set = {1, 2} (for corresponding
subset 2 bidders); bidders 1 2 obtains one demands. total
number units allocated two bidders per good exactly 100 = s` ` .
remaining 100 = ` units good, make 50 bundles ` /(2n2 ) = 2 units per
bundle. Bidder 3 receives 24 2-units bundles good 1 one 2-units bundle
good 2. Bidder 4 obtains one 2-units bundle good. Finally, bidder 5 receives
empty allocation. Notice x3 x4 essentially satisfy unique demands (48, 1)
(1, 1) bidders 3 4 respectively.
Another (R, 2, 100, 100)-round allocation (according Definition 3) is:
X0 = ( (75, 51), (52, 28), (48, 2), 0, 0 ),
required subset bidders = {1}. Bidder 1 obtains one demands;
bidders 2 3 receive 2-units bundles good; bidders 4 5 receive empty
allocations (i.e., zero 2-units bundles good). Notice X0 (R, 1, 100, 100)round (i.e., set = 1). let us choose algorithm Dobzinski-Nisan
method, exhaustive search procedure, optimizes welfare (thus, approximation ratio = 1). Notice range RA (T ) A, chosen values
1 , 2 , trivially contains allocation bidders 1 2 receive X (when = {1, 2})
allocation bidder 1 X0 (when = {1, 2} = {1});
optimizes feasible allocations supplies 200 1 = 100 200 2 = 100
two choices . Thus, allocations X X0 belong range RDN ,
defined above.
show optimization RDN approximates socially optimal allocation within

factor ( t+1
).
Lemma 1 Let X = (x1 , . . . , xn ) socially optimal allocation. exists allocation

X RDN SW (X) ( t+1
) SW (X ).
Proof. proof make use notation L` u` , defined Figure 1. Without
loss generality (because monotonicity valuation functions), assume units
goods allocated X v1 (x1 ) v2 (x2 ) P
vn (xn ). every good
` = 1, . . . , choose largest value ` L` s` ` ti=1 xi (`). executed
subset bidders = {1, . . . , t} s` P
` units good
P ` = 1, . . . , m, algorithm
outputs allocation (x1 , . . . , xt ) ti=1 vi (xi ) ti=1 vi (xi ).
consider good ` = 1, . . . , bidder jP
` {t + 1, . . . , n} maximum

number units X good. Define r` = ni=t+1 xi (`). xj` (`) rn` .
definition r` ` good `, r` ` . Also, ` chosen
Pt
2
largest possible value L` = { 0, 1, bu` c, bu` c, . . . , s` } satisfying s` ` + i=1 xi (`),
r`
. every bidder + 1 6= j` ` = 1, . . . , m,
must ` ur`` r` 2n
`

round allocation respect good ` multiple max b 2n
2 c, 1 . extra
units good ` take bidders j` may obtain unit good.
735

fiKrysta, Telelis, & Ventre

`
`
Observe may need add n 2n
2 2n extra units good `,
`
r`
take bidder j` , least n n units.
Thus, bidders except j` , ` = 1, . . . , increased units P
goods

1

obtain. j` + 1 v1 (x1 ) vn (xn ), vj` (xj` ) t+1
i=1 vi (xi )
vi (xi ) vi (xi ) 6= j` , ` = 1, . . . m. Then:

SW (X) =

X

vi (xi )






X

=

X

X

i=1

vi (xi )

X

vi (xi )

it+1

vi (xi )

it+1



t+1

vi (xi ) +

i=1

vi (xi ) +

i=1




X


X

vi (xj` )

`=1

+

X

vi (xi )




it+1



t+1



SW (X )
2

concludes proof.
lemma completes proof Theorem 2.

Example Part (II) revisit example discussed right statement
proof Lemma 1, order exemplify approximation implied Lemma.
end, assign values bidders demands described following table,
v > 0 small positive number V >> v large one. before,
s1 = s2 = 200.
Bidder
Valuation Function
1
v1 ( (75, 51) ) = v v1 ( (49, 73) ) = V
2
v2 ( (51, 27) ) = V v2 ( (25, 49) ) = v
3
v3 ( (48, 1) ) = V
4
v4 ( (1, 1) ) = v
5
v5 ( (1, 48) ) = V

D1
D2
D3
D4
D5

=
=
=
=
=

Demand Set
{ (75, 51), (49, 73) }
{ (51, 27), (25, 49) }
{ (48, 1) }
{ (1, 1) }
{ (1, 48) }

following socially optimal allocation X instance welfare 4V + v:
X = ( (49, 73), (51, 27), (48, 1), (1, 1), (1, 48) )
choosing = 2 = {1, 2}, exhibit welfare-approximate allocation
implied Lemma 1, follows. maximum value possible 1 2
satisfying s` ` x1 (`) + x2 (`) 100 = 1 = 2 . remaining bidders, bidder
3 maximum number units good 1 X bidder 5 maximum
number units good 2 X . Thus, j1 = 3 j2 = 5. Then, round
allocations bidders 3 4 w.r.t. good 2, one 2-units bundle (for them),
taking two units bidder j2 = 5. Accordingly, round allocations bidders
4 5 w.r.t. good 1, taking two units bidder j1 = 3. resulting allocation is:
X = ( (49, 73), (51, 27), (46, 2), (2, 2), (2, 46) )
welfare 2V + v, approaches half optimal welfare (as v becomes vanishingly small). Lemma 1 example guarantees least 1/3 optimal welfare,
736

fiMechanisms Multi-unit Combinatorial Auctions

algorithm used within Dobzinski-Nisan method welfare-optimizing exhaustive
search procedure. hand notice that, particular example = 2,
1 = 2 = 100, allocation = ( (49, 73), (51, 27), (48, 2), 0, (2, 48) ) almost optimal welfare, 4V , round according Definition 3. Thus, Dobzinski-Nisan
method examine return allocation least good.
Let us explain find optimal allocation multi-unit bundles goods (i.e.,
bundles identical units) bidders [n] \ , step 2.1.3 algorithm (Figure 1).
use dynamic programming. re-indexing bidders appropriately, assume
= {n + 1, . . . ,n}, thus [n]\ = {1, . . . , n t}. every = 1, . . . , n every
2
q = (q1 , . . . , qm )
i=1 [2n ] , define V(i, q) = V(i, (q1 , . . . , qm )) maximum value
welfare obtained allocating q` equi-sized bundles (of units)
good ` = 1, . . . , bidders 1, . . . , i. entry V(i, q) dynamic programming
table computed using:


0
0
0
V(i, q) = max
v
(q

b
,
.
.
.
,
q

b
)
+
V(i

1,
q

q
)
,

1

1

0
q q

q0 q taken component-wise; i.e., maximization occurs vectors q0
q 0 (`) q(`) ` = 1, . . . , m.
5.1 Simple Application: Multi-minded Bidders
generalized Dobzinski-Nisan method multiple distinct goods applied immediately setting multi-minded bidders, yield Ptas respects fully supply
constraints goods. = O(1) goods constant number bidders
optimum assignment found exhaustively polynomial time log s` , ` = 1, . . . , s,
m. particular, every bidders demand sets contains k demands,
exactly O(k ) cases examined exhaustively, optimum found. Plugging
algorithm procedure Figure 1, yields Ptas that, complementarily developments previous section, approximates optimum Social Welfare within factor
(1 + ) respects supply constraints.
5.2 Submodular Valuation Functions
consider submodular valuation functions multisets U, defined Kapralov,
Post, Vondrak (2013):
Definition 4 ` = 1, . . . , let e` unary vector e` (`) = 1 e` (j) = 0,
j 6= `. Let x denote two multisets U, x y, holds
component-wise. Then, non-decreasing function v : U 7 R+ submodular v(x + e` )
v(x) v(y + e` ) v(y).
assume valuation functions, exponentially large describe,
accessed algorithm value queries; i.e., algorithm asks bidders
value, particular multiset needs process.
design MiR approximation algorithm A, needed method. range
consider setting extension one considered Dobzinski Nisan
737

fiKrysta, Telelis, & Ventre

(2010). > 0, define = 1 + ; assigning bidders multi-unit bundles
good ` [m], cardinality equal integral power . every good
` [m], one n bidders (possibly different bidder per good) always obtain
remaining units specific good. show optimization range provides
good approximation unrestricted optimum Social Welfare; also, optimizing
range yields Fptas constant number n bidders. This, used within generalized
Dobzinksi-Nisan method yield Ptas number bidders.
Lemma

2 optimum assignment within defined range recovers least factor
2
socially optimal welfare.
2+2
Proof. Let X = (x1 , . . . , xn ) denote welfare maximizing assignment. round
iteratively particular good ` [m] iteration assignment units
bidder X , integral power . Let X[`] assignment rounding
respect `-th good. final assignment X X[m] approximate welfare
X[0] X .
beginning `-th iteration process assignment X[`1] , rounding
[`1]
[`1]
assignment multi-unit bundles good `. Assume w.l.o.g. x1 (`) x2 (`)
[`1]
xn (`). w.l.o.g., assume every bidder except bidder 1 receives
integral power units good `; bidder 1 receives remaining units. Let set
bidders partitioned [n] = E contains odd indices bidders E
even ones. consider two cases:
X [`1] X [`1]
X [`1] X [`1]
v xi

vi x

v xi
<
vi xi
.
(3)
iO

iE

iO

iE
[`1]

first case, every \ {1} round xi
(`) closest integral
[`1]
power , obtaining extra units rounding xi1 (`), 1 E,
[`]

[`1]

nearest appropriately chosen integral power . obtain xi (`) xi
[`1]

[`1]

[`1]

xi1 (`) = xi1 (`) ( 1)xi
[`1]

[`1]

(`) and:

[`1]

(`) xi1 (`) ( 1)xi1 (`)

[`1]

thus, xi1 (`) (2 )xi1 (`). ensure bidder 1 obtain integral power
[`1]

[`]

[`1]

, may need divide xi1 (`) , thus: xi1 (`) 1 xi1 (`) =
welfare emerging assignment X[`] is:

X X X
[`]
[`]
[`]
SW X[`] =
vi xi =
v xi +
vi xi
iO

i[n]



X



[`1]

vi x



iE

2 X [`]
+
v xi

iE

iO


X

2
[`1]
=
vi
+
SW X[`1]
v xi

iO
iO


2 2 X [`1] 2
v xi
+
SW X[`1]
=


X



[`1]
xi



iO

738

!

2 [`1]
xi1 (`).

fiMechanisms Multi-unit Combinatorial Auctions




2




1
1
SW X[`1] +
SW X[`1] =
SW X[`1]


1+
[`]

[`1]

second line follows submodularity; ` [m], xi1 (`) 2
xi1 (`),




[`]
[`1]
2
vi1 xi1 vi xi1 . last inequality, recall examining
P
[`1]
left-hand side case (3), thus, use that:
) 12 SW (X[`1] ).
iO vi (xi



P
P
[`1]
[`1]
Consider second case (3), iO vi xi
< iE vi xi
.
[`1]

E \ {2} round xi
(`) closest integral power ; extra units
[`1]
obtain 1 O, rounding xi1 (`) appropriately chosen
[`1]

closest integral power . x2 (`) rounded closest integral power
[`1]
[`1]
[`]
(contrary rest xi
(`), E), i.e., x2 (`) 1 x2 (`). E \ {2}
[`]

[`1]

xi (`) xi

(`) take:
[`]

xi1 (`)

2
1 [`1]
[`1]
[`1]
xi1 (`) ( 1)xi
(`)
xi1 (`)



(4)

Then, Social Welfare X[`] have:
X X X

[`]
[`]
[`]
v xi =
v xi +
v xi
SW X[`] =
i[n]

iO

iE


X
2 X [`1] 1 [`1]
[`]

v xi
+ v 2 x2
+
v xi


iO
iE\{2}
!
X




X
1 [`1]
2
[`1]
[`1]
SW X[`1]
v xi
+ v 2 x2
+
v xi
=


iE
iE\{2}






X
2
2 2
1
[`1]
[`1]
v2 x2
+
SW X[`1]
=
vi xi
+



iE\{2}


1
2

1 X
[`1]
[`1]
>
vi x
+
v 2 x2
+
SW X[`1]



iE\{2}

2




1
2

SW X[`1] +
SW X[`1] =
SW X[`1]
2

2 + 2
second line derivation due submodularity: factors sum
[`1]
[`]
[`1]
odd-indexed bidders v2 (x2 ) follow (4) x2 (`) 1 x2 (`).
last inequality, used fact examining right-hand side case
P
[`1]
(3); then, iE vi ( xi
) 12 SW (X[`1] ).
Thus, > 0, assignment
range approximates
within
p thedescribed
q
2
1
optimum Social Welfare within factor 2+2 1+ , integers p, q,
p + q = m. result follows

1
1+



2
2+2 .

obtain following (intermediate) result:
739

2

fiKrysta, Telelis, & Ventre

Theorem 3 multi-unit combinatorial auctions n = O(1) submodular bidders,
= O(1) distinct goods, good ` [m] available arbitrary supply, exists
truthful deterministic Fptas that, 1, approximates optimum Social Welfare
within factor (1 + ).
Proof. fixed > 0 search specified range exhaustively polynomial
time; find allocation maximum Social Welfare, try O(log s` ) cases
n 1 bidders, given fixed bidder assigning remaining units. Thus
time required trying possible bundle assignments ofa specific good `
possible choices remainders bidder n(log s` )n1 . every fixed
allocation specific good need try possible allocations remaining 1
goods, overall complexity total nm (log max` s` )(n1)m , polynomially
bounded constant n. notice that, 1 obtain Fptas, because:
log max s` = (log2 (1 + ))1 (log2 max s` )
`

`

log21 (1 + ) 1 .

2

Using Theorem 3 within general Dobzinski-Nisan method, obtain:
Corollary 1 exists truthful Ptas multi-unit combinatorial auctions constant number distinct goods submodular valuation functions.

6. General Valuation Functions
Interestingly, direct generalization Dobzinski-Nisan method constant number multiple goods immediately yield, general valuation functions, result
comparable one shown Dobzinski Nisan (2010) single good; = 1
truthful 2-approximation mechanism obtained (and factor shown optimal). = 1, relevant MiR algorithm involved Theorem 2 solves optimally
case = 1 bidder, allocating units goods him. monotonicity
valuation functions guarantees allocation optimal = 1 bidder. factor 2
approximation follows. > 1 goods however, Theorem 2 appears require different
algorithm (for, possibly, > 1 bidders), yield comparable (constant approximation)
result. Instead, constant (m+1)-approximation case general valuation functions
accessed value queries obtained, simple modification direct approach
given Dobzinski Nisan, general valuation functions.
describe scratch MiR allocation algorithm. algorithm splits every
good number units n2 equi-sized bundles size b` = b ns`2 c; creates single
extra bundle (per distinct good, `), containing remaining units r` , n2 b` +r` = s` .
algorithm allocates optimally whole bundles units good n bidders.
First show range approximates factor (m + 1) optimum Social
Welfare. Let X = (x1 , . . . , xn ) denote socially optimal allocation. Beginning
X , produce allocation range within algorithm optimizes,
approximates SW (X ) within factor (m + 1). Assume w.l.o.g. items allocated
X (by monotonicity valuation functions) and, good ` = 1, . . . , m, let
740

fiMechanisms Multi-unit Combinatorial Auctions

j` = arg maxi xi (`). xj` (`)
here.
Either:


X

vj` (xj` )

`=1



s`
n.

X

Define L = {j1 , . . . , jm }. consider two cases

vi (xi ),

i6L

or:


X
`=1

vj` (xj` ) <

X

vi (xi ).

i6L

first case, let us denote Y` = (y1` , y2` , . . . , yn` ) ` = 1, . . . ,
allocation assigns bundles goods bidder j` L (thus, yi` = (0, . . . , 0),
every 6= j` ). allocations, consider = arg maxY` vj` (yj`` ). Then, SW (Y)
P
1 Pm


i6L vi (xi ). Putting inequalities together
`=1 vj` (xj` ), thus, also: SW (Y)

1
yields SW (Y) m+1 SW (X ). Notice allocation examined MiR
algorithm. second case build allocation X, rounding separately
good ` (optimal) allocation bidders 6 L nearest multiple b` .
units needed purpose find good ` corresponding bidder
j` L, may obtain unit X. possible add n ns`2 =
s`

X gives
n xj` (`) units total rounding. way make allocation P
multi-unit bundles good bidders [n] \ L satisfies SW (X) i6L vi (xi ),
1 Pm
1


thus, also: SW (X) >
`=1 vj` (xj` ). Then, deduce SW (X) m+1 SW (X ). Notice
allocation X examined MiR algorithm. Thus, exists solution
within range, approximates SW (X ) within constant factor, (m + 1).
complete analysis, show compute MiR allocation described
range, using dynamic programming. Let r = (r1 , . . . , rm ) denote vector amounts
correspond bundles remainders per good described above. Given L 2{1,...,m}
denote r[L] projection r indices L; remaining coordinates set
0. Let b = (b1 , . . . , bm ). subset L 2{1,...,m} , define V L (i, q), q = (q1 , . . . , qm )
maximum welfare achievable allocating q` multi-unit bundles
good ` = 1, . . . , among bidders 1, . . . , remainders bundle goods
` L. compute V L (i, q) follows:
n


0
0
0
L\L0
0
V L (i, q) = max
max
v
(q

b
,
.
.
.
,
q

b
)
+
r[L
]
+
V
(i

1,
q

q
)

1

1

0
0
0 q
L L q1 q1 ,...,qm


= O(1), entries dynamic programming table computed
polynomial time. Thus:
Theorem 4 exists truthful polynomial-time mechanism multi-unit Combinatorial Auctions constant number distinct goods, m, general valuation functions
that, using value queries, approximates welfare socially optimal assignment within
constant factor, (m + 1).

7. Conclusions
paper analyzed deterministic mechanisms multi-unit Combinatorial Auctions
constant number distinct goods, limited supply. analyzed particular
Maximal-in-Range allocation algorithms (Nisan & Ronen, 2007), optimizing Social
Welfare multi-unit combinatorial setting that, paired VCG payments, yield
741

fiKrysta, Telelis, & Ventre

truthful auctions. main results include (i) truthful Fptas multi-minded bidders,
approximates supply constraints within factor (1 + ) optimizes Social
Welfare; (ii) deterministic truthful Ptas submodular bidders, approximates
Social Welfare within factor (1 + ) without violating supply constraints. achieving
(ii), used direct generalization single-good multi-unit allocation method proposed
Dobzinski Nisan (2010). discussed developments best possible
terms time-efficient approximation, follows relevant hardness results. Finally,
showed treat general (unrestricted) valuation functions setting, appropriately adjusting analysis Dobzinski Nisan (2010). Closing gap
communication complexity lower bound 2 (for single good) Dobzinski Nisan
(m + 1)-approximation result = O(1) goods, requires understanding
communication complexity general setting.

Acknowledgments
thank three anonymous reviewers helping us significantly improving presentation work. thank Jinshan Zhang, pointing technical inconsistency
earlier version paper, Fabrizio Grandoni Stefano Leonardi,
useful discussions early stage work.
Piotr Krysta acknowledges support EPSRC grant EP/K01000X/1.
Carmine Ventre acknowledges support EPSRC grant EP/M018113/1.
Orestis Telelis acknowledges support research project DDCOD(PE6-213), implemented within framework Action Supporting Postdoctoral Researchers
Operational Program Education Lifelong Learning (Actions Beneficiary: General Secretariat Research Technology), co-financed European Union
(European Social Fund ESF) Greek State.

References
Archer, A., Papadimitriou, C. H., Talwar, K., & Tardos, E. (2003). Approximate Truthful Mechanism Combinatorial Auctions Single Parameter Agents. Internet
Mathematics, 1 (2), 129150.
Ausubel, L. M., & Milgrom, P. (2010). Lovely Lonely Vickrey Auction. Cramton,
P., Shoham, Y., Smith, V. L., & Steinberg, R. (Eds.), Combinatorial Auctions, pp.
1740. MIT Press.
Bartal, Y., Gonen, R., & Nisan, N. (2003). Incentive Compatible Multi Unit Combinatorial Auctions. Halpern, J. Y., & Tennenholtz, M. (Eds.), Proceedings 9th
Conference Theoretical Aspects Rationality Knowledge (TARK-2003), pp.
7287. ACM.
Bikhchandani, S., de Vries, S., Schummer, J., & Vohra, R. (2011). Ascending Vickrey
Auction Selling Bases Matroid. Operations Research, 59 (2), 400413.
742

fiMechanisms Multi-unit Combinatorial Auctions

Blumrosen, L., & Nisan, N. (2007). Combinatorial Auctions. Nisan, N., Roughgarden,
T., Tardos, E., & Vazirani, V. V. (Eds.), Algorithmic Game Theory, pp. 267299.
Cambridge University Press.
Briest, P., Krysta, P., & Vocking, B. (2011). Approximation Techniques Utilitarian
Mechanism Design. SIAM Journal Computing, 40 (6), 15871622.
Chekuri, C., & Khanna, S. (2005). Polynomial Time Approximation Scheme
Multiple Knapsack Problem. SIAM Journal Computing, 35 (3), 713728.
Clarke, E. (1971). Multipart Pricing Public Goods. Public Choice, 11 (1), 1733.
Daniely, A., Schapira, M., & Shahaf, G. (2015). Inapproximability Truthful Mechanisms
via Generalizations VC Dimension. Servedio, R. A., & Rubinfeld, R. (Eds.),
Proceedings 47th Annual ACM Symposium Theory Computing, STOC
2015, Portland, OR, USA, June 14-17, 2015, pp. 401408. ACM.
Dobzinski, S., & Dughmi, S. (2013). Power Randomization Algorithmic Mechanism Design. SIAM Journal Computing, 42 (6), 22872304.
Dobzinski, S., & Nisan, N. (2010). Mechanisms Multi-Unit Auctions. Journal Artificial
Intelligence Research, 37, 8598.
Dobzinski, S., Nisan, N., & Schapira, M. (2010). Approximation Algorithms Combinatorial Auctions Complement-Free Bidders. Mathematics Operations Research,
35 (1), 113.
Grandoni, F., Krysta, P., Leonardi, S., & Ventre, C. (2014). Utilitarian Mechanism Design
Multi-Objective Optimization. SIAM Journal Computing, 43 (4), 12631290.
Groves, T. (1973). Incentives Teams. Econometrica, 41 (4), 617631.
Hastad, J. (1996). Clique Hard Approximate Within n1 . 37th Annual Symposium Foundations Computer Science (FOCS96), pp. 627636. IEEE Computer
Society.
Holzman, R., Kfir-Dahav, N. E., Monderer, D., & Tennenholtz, M. (2004). Bundling Equilibrium Combinatorial Auctions. Games Economic Behavior, 47 (1), 104123.
Kapralov, M., Post, I., & Vondrak, J. (2013). Online Submodular Welfare Maximization:
Greedy Optimal. Khanna, S. (Ed.), Proceedings Twenty-Fourth Annual
ACM-SIAM Symposium Discrete Algorithms (SODA13), pp. 12161225. SIAM.
Kelly, T. (2004). Generalized Knapsack Solvers Multi-Unit Combinatorial Auctions:
Analysis Application Computational Resource Allocation. Faratin, P., &
Rodrguez-Aguilar, J. A. (Eds.), Agent-Mediated Electronic Commerce VI, Theories
Engineering Distributed Mechanisms Systems (AAMAS 2004 Workshop, AMEC 2004), Vol. 3435 LNCS.
Khot, S., Lipton, R. J., Markakis, E., & Mehta, A. (2008). Inapproximability Results
Combinatorial Auctions Submodular Utility Functions. Algorithmica, 52 (1),
318.
Kothari, A., Parkes, D. C., & Suri, S. (2005). Approximately-Strategyproof Tractable
Multiunit Auctions. Decision Support Systems, 39 (1), 105121.
743

fiKrysta, Telelis, & Ventre

Lavi, R., & Swamy, C. (2011). Truthful Near-Optimal Mechanism Design via Linear
Programming. Journal ACM, 58 (6), 25.
Lehmann, B., Lehmann, D. J., & Nisan, N. (2006). Combinatorial Auctions Decreasing
Marginal Utilities. Games Economic Behavior, 55 (2), 270296.
Lehmann, D., Muller, R., & Sandholm, T. (2010). Winner Determination Problem.
Cramton, P., Shoham, Y., Smith, V. L., & Steinberg, R. (Eds.), Combinatorial
Auctions. MIT Press.
Lehmann, D. J., OCallaghan, L., & Shoham, Y. (2002). Truth Revelation Approximately
Efficient Combinatorial Auctions. Journal ACM, 49 (5), 577602.
Milgrom, P. (2004). Putting Auction Theory Work. Cambridge University Press.
Mirrokni, V. S., Schapira, M., & Vondrak, J. (2008). Tight Information-Theoretic lower
bounds Welfare Maximization Combinatorial Auctions. Proceedings 9th
ACM Conference Electronic Commerce (ACM EC), pp. 7077.
Mualem, A., & Nisan, N. (2002). Truthful Approximation Mechanisms Restricted
Combinatorial Auctions. Dechter, R., & Sutton, R. S. (Eds.), Proceedings
Eighteenth National Conference Artificial Intelligence Fourteenth Conference
Innovative Applications Artificial Intelligence (AAAI/IAAI 2002), pp. 379384.
AAAI Press / MIT Press.
Mualem, A., & Nisan, N. (2008). Truthful Approximation Mechanisms Restricted
Combinatorial Auctions. Games Economic Behavior, 64 (2), 612631.
Nisan, N. (2014). Algorithmic Mechanism Design, Lens Multi-Unit Auctions.
Aumann, R., & Hart, S. (Eds.), Handbook Game Theory, Vol. IV. Elsevier NorthHolland.
Nisan, N., & Ronen, A. (2007). Computationally Feasible VCG Mechanisms. Journal
Artificial Intelligence Research, 29, 1947.
Nisan, N., & Segal, I. (2006). Communication Requirements Efficient Allocations
Supporting Prices. Journal Economic Theory, 129 (1), 192224.
Nisan, N., & Ronen, A. (2001). Algorithmic Mechanism Design. Games Economic
Behavior, 35 (1-2), 166196.
Sandholm, T. (2010). Optimal Winner Determination Algorithms. Cramton, P., Shoham,
Y., Smith, V. L., & Steinberg, R. (Eds.), Combinatorial Auctions. MIT Press.
Vazirani, V. V. (2003). Approximation Algorithms. Springer-Verlag.
Vickrey, W. (1961). Counterspeculation, Auctions, Competitive Sealed Tenders. Journal Finance, 16 (1), 837.
Vocking, B. (2012). Universally Truthful Approximation Scheme Multi-Unit Auctions.
Rabani, Y. (Ed.), Proceedings Twenty-Third Annual ACM-SIAM Symposium
Discrete Algorithms (SODA12), pp. 846855. SIAM.

744


