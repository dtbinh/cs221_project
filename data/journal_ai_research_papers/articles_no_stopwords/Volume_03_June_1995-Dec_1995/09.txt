Journal Artificial Intelligence Research 3 (1995) 325-348

Submitted 5/95; published 12/95

Vision-Based Road Detection Automotive Systems:
Real-Time Expectation-Driven Approach
Alberto Broggi
Simona Berte

Dipartimento di Ingegneria dell'Informazione
Universita di Parma
Viale delle Scienze
I-43100 Parma, Italy

broggi@ce.unipr.it
simona@ce.unipr.it

Abstract

main aim work development vision-based road detection system
fast enough cope dicult real-time constraints imposed moving vehicle
applications. hardware platform, special-purpose massively parallel system,
chosen minimize system production operational costs.
paper presents novel approach expectation-driven low-level image segmentation, mapped naturally onto mesh-connected massively parallel Simd architectures capable handling hierarchical data structures. input image assumed
contain distorted version given template; multiresolution stretching process used
reshape original template accordance acquired image content, minimizing
potential function. distorted template process output.

1. Introduction
work discussed paper forms part Eureka Prometheus activities, aimed
improved road trac safety. Since processing images fundamental importance
automotive applications, current work aimed development
embedded low-cost computer vision system. Due special field application,
vision system must able process data produce results real-time. therefore
necessary consider data structures, processing techniques, computer architectures
capable reducing response time system whole.
system considered currently integrated Mob-Lab land vehicle (Adorni,
Broggi, Conte, & D'Andrea, 1995). MOBile LABoratory, result Italian work
within Prometheus project (see Figure 1.a), comprises camera acquisition
digitization images, pipelines data on-board massively parallel computer
processing. illustrated Figure 2, current output configuration comprises set
warnings driver, displayed means set Leds control-panel (shown
Figure 1.b). But, due high performance levels achieved, possible replace
output device heads-up display showing enhanced features superimposed
onto original image.
paper presents move toward use top-down control (the following feature
extraction mechanism based model-driven approach), instead traditional datadriven approach, generally used data-parallel algorithms.

c 1995 AI Access Foundation Morgan Kaufmann Publishers. rights reserved.

fiAlberto Broggi, Simona Berte

Figure 1: (a) Mob-Lab land vehicle; (b) control panel used output display
processing results

Heads-up
Display

(a)

LED-based
Control Panel

(b)

Road Detection
System
Camera

Input

Processing

Output

Figure 2: Block diagram complete system: (a) planned heads-up display output
(b) current Led-based output
Starting experience gained development different approach (Broggi,
1995c) based parallel detection image edges pointing Focus Expansion,
work presents model-driven low-level processing technique aimed road detection
enhancement road (or lane) image acquired moving vehicle. model
contains a-priori knowledge feature extracted (road lane) encoded
traditional data structure handled low-level processing: two-dimensional array.
case, binary image representing two different regions (road off-road) chosen.
Hereinafter image referred Synthetic Image. obvious different
synthetic images must used according different acquisition conditions (camera position,
orientation, optics, etc., fixed) environment (number lanes, one way two
way trac, etc., may change run-time). final system implementation
326

fiVision-Based Road Detection

a-priori world knowledge enables correct synthetic model selection. example,
Figure 3 presents several different synthetic images different conditions.

(a)

(b)

Figure 3: Synthetic images used road models for: (a) different camera positions and/or
orientations (b) different number lanes (assuming driving right)
following Section presents survey vision-based lane detection systems; Section
3 explains choice multiresolution approach; Section 4 presents details
complete algorithm; Section 5 discusses performances current implementation
Paprica system; Section 6 presents results critical analysis approach
leads present development; finally Section 7 presents concluding remarks.

2. Comparison Related Systems
Many different vision-based road detection systems developed worldwide,
relying various characteristics different road models (two three dimensional),
acquisition devices (color monochromatic camera, using mono stereo vision), hardware systems (special- general-purpose, serial parallel), computational techniques
(template matching, neural networks, etc.).

Scarf system (tested Navlab vehicle Carnegie Mellon University)

uses two color cameras color-based image segmentation; different regions
classified grouped together form larger areas; finally Hough-like transform
used vote different binary model candidates. Due extremely high amount
data processed, two incoming color images (480 512) reduced
60 64 pixel. Nevertheless, high performance computer architecture, 10 cell
Warp (Crisman & Webb, 1991; Hamey, Web, & Wu, 1988; Annaratone, Arnould,
T.Gross, H.Kung, & J.Webb, 1987), chosen speed-up processing.
system, capable detecting even unstructured roads, reaches processing rate
1 Hz (Crisman & Thorpe, 1993, 1991, 1990; Thorpe, 1989). addition heavy
3
computational load, main problems approach found implicit
models assumed: road curves sharply changes width, assumed shape
model becomes invalid detection fails (Kluge & Thorpe, 1990).
Vits system (tested Alv vehicle developed Martin Marietta)
relies two color cameras. uses combination red blue color bands
segment image, effort reduce artifacts caused shadows. Information
vehicle motion used aid segmentation process. Tested successfully
327

fiAlberto Broggi, Simona Berte

straight, single lane roads, runs faster Scarf, sacrificing general capability
speed (Turk, Morgenthaler, Gremban, & Marra, 1988).
Alvinn (tested Navlab, Cmu) neural network based 30 32 video retina
designed, Scarf, detect unstructured roads, road
model: learns associations visual patterns steering wheel angles, without considering road location. implemented Warp system,
reaching processing rate 10 Hz (Jochem, Pomerleau, & Thorpe, 1993;
Pomerleau, 1993, 1990).
different neural approach developed Cmu tested Navlab:
256 256 color image segmented 16k processor MasPar MP-2 (MasPar
Computer Corporation, 1990). trapezoidal road model used, road width
assumed constant throughout sequence: means although
trapezoid may skewed left right, top bottom edges maintain
constant length. high performance offered powerful hardware platform
limited low I/O bandwidth; therefore simpler reduced version (processing
128 128 images) implemented, working rate 2.5 Hz (Jochem &
Baluja, 1993).
Due high amount data (2 color images) complex operations involved (segmentation, clustering, Hough transform, etc.) system discussed, even implemented extremely powerful hardware machines, achieve low processing rate. Many
different methods considered speed-up processing, including processing
monochromatic images use windowing techniques (Turk et al., 1988) process
regions interest, thus implementing Focus Attention mechanism (Wolfe &
Cave, 1990; Neumann & Stiehl, 1990).

example, VaMoRs (developed Universitat der Bundeswehr, Munchen)

monochromatic images processed custom hardware, focusing regions
interest (Graefe & Kuhnert, 1991). windowing techniques supported
strong road vehicles models predict features incoming images (Dickmans &
Mysliwetz, 1992). case, vehicle driven high speeds (up 100 kph)
German autobahns, constant lane width, road specific
shapes: straight, constant curvature, clothoidal. use single monochromatic
camera together simple road models allows fast processing based
simple edge detection; match structured road model used discard
anomalous edges. approach disturbed shadow conditions, overall
illumination changes, road imperfections found (Kluge & Thorpe, 1990).
Lanelok system (developed General Motors) relies strong road models:
estimates location lane boundaries curve fitting method (Kenue &
Bajpayee, 1993; Kenue, 1991, 1990), using quadratic equation model. addition
disturbed presence vehicles close road markings, lane detection
generally fails shadow conditions. extension correct interpretation
shadows therefore introduced (Kenue, 1994); unfortunately technique
relies fixed brightness thresholds far robust general
approach.
328

fiVision-Based Road Detection

main aim approach discussed paper, hand, build
low-cost system capable achieving real-time performance detection structured roads (with painted lane markings), robust enough tolerate severe illumination
changes shadows. Limitation analysis structured environments allows
use simple road models which, together processing monocular monochromatic
images special-purpose hardware allows achievement low-cost high performances.
use high performance general-purpose architecture, 10 cell Warp
16k MasPar MP-2 (as case Carnegie Mellon's Navlab), involves high costs
compatible widespread large-scale use. reason execution
low-level computations (eciently performed massively parallel systems) usually
implemented general purpose processors, case VaMoRs. design
implementation special-purpose application-oriented architectures (like Paprica,
Broggi, Conte, Gregoretti, Sansoe, & Reyneri, 1995, 1994), hand, keep
production costs down, delivering high performance levels. generally,
features enable integration architecture generic vehicle are:
(a) low production cost,
(b) low operational cost,
(c) small physical size.

2.1 Computing Architecture

Additional considerations power consumption show mobile computing moving
direction massively parallel architectures comprising large number relatively
slow-clocked processing elements. power consumption dynamic systems
considered proportional CfV 2 , C represents capacitance circuit, f
clock frequency, V voltage swing. Power saved three different ways
(Forman & Zahorjan, 1994), minimizing C , f , V respectively:
using greater level Vlsi integration, thus reducing capacitance C ;
trading computer speed (with lower clock frequency f ) lower power consumption
(already implemented many portable PCs);
reducing supply voltage VDD .
Recently, new technological solutions exploited reduce IC supply voltage
5 V 3.3 V. Unfortunately, speed penalty pay reduction:
Cmos gate (Shoji, 1988), device delay Td (following first order approximation)
VDD 2 , shows reduction VDD determines quasiproportional
(VDD , VT )
linear increment (until device threshold value VT ) circuit delay Td .
hand, reduction VDD determines quadratic reduction power consumption.
Thus, power saving reasons, desirable operate lowest possible speed, but,
order maintain overall system performance, compensation increased delays
required.
use lower power supply voltage investigated different architectural solutions considered overcome undesired side effects caused
reduction VDD (Courtois, 1993; Chandrakasan, Sheng, & Brodersen, 1992).
329

fiAlberto Broggi, Simona Berte

reduction power consumption, maintaining computational power, achieved
using low cost Simd computer architectures, comprising large number extremely
simple relatively slow-clocked processing elements. systems, using slower device
speeds, provide effective mechanism trading power consumption silicon area,
maintaining computational power unchanged. 4 major drawbacks approach
are:

solution based hardware replication increases silicon area, thus

suitable designs extreme area constraints;
parallelism must accompanied extra-routing, requiring extra-power; issue
must carefully considered optimized;
use parallel computer architectures involves redesigning algorithms
different computational model;
since number processing units must high, system size constraints
processing elements must extremely simple, performing simple basic operations.

paper investigates novel approach real-time road following based use
low-cost massively parallel systems data-parallel algorithms.

3. Multiresolution Approach
image encoding model (Synthetic Image) image camera (Natural
Image) cannot directly compared local computations, latter contains
much detail former. known methods used decrease
presence details, necessary choose one decrease strength
feature extracted. purpose, low-pass filter, 3 3 neighborhoodbased anisotropic average filter, would reduce presence details,
sharpness road boundaries, rendering detection dicult. Since road
boundaries exploit long-distance correlation, subsampling natural
synthetic image would lead comparison less dependent detail content.
generally, much easier detect large objects low resolution,
main characteristics present, high resolution, details
specific represented object make detection dicult. complete recognition
description process, hand, take place high resolutions,
possible detect even small details preliminary results obtained
coarse resolution.
considerations lead use pyramidal data structure (Rosenfeld, 1984;
Ballard & Brown, 1982; Tanimoto & Kilger, 1980), comprising image different
resolutions. Many different architectures developed recently support computational paradigm (Cantoni & Ferretti, 1993; Cantoni, Ferretti, & Savini, 1990; Fountain,
1987; Cantoni & Levialdi, 1986): computing architecture contains number
processing elements smaller number image pixels external processor virtualization mechanism (Broggi, 1994) used. useful side effect due resolution
reduction decrease number computations performed. Thus, choice
330

fiOutput image

Input image

Synthetic image

Vision-Based Road Detection

1

256
X
256

1

1

128
X
128

undersampling

8

256
X
256

8

8

8

average

...

1

32
X
32

8

32
X
32

128
X
128

8

8

8

average

...

undersampling

8
1

256
X
256

DBS

1

1

oversampling

1

undersampling

undersampling

8
1

1

1

8
1

128
X
128

1

1

oversampling

DBS

...

1

DBS

Figure 4: Block diagram whole algorithm; step depth every image
shown (in bit/pixel)
pyramidal computational paradigm, addition supported theory, offers
advantage terms computational eciency.

4. Algorithm Structure

shown Figure 4, subsampling natural image filtered. way
possible decrease uence noise redundant details, distortion due
aliasing (Pratt, 1978) introduced subsampling process. image partitioned
non-overlapping square subsets 2 2 pixels each; filter comprises simple average
pixels values given subset, reduces signal bandwidth. set
resulting values forms subsampled image.
stretching synthetic image performed iterative algorithm
(Driven Binary Stretching, Dbs), much simpler morphological (Haralick, Sternberg,
& Zhuang, 1987; Serra, 1982) version \snake" technique (Blake & Yuille, 1993; Cohen & Cohen, 1993; Cohen, 1991; Kass, Witkin, & Terzopolous, 1987). result
oversampled, improved using Dbs algorithm, original resolution reached. boundary stretched template represents final result
process.

4.1 DBS Filter

purpose Dbs filter, illustrated Figure 5, stretch binary input model
accordance data encoded grey-tone natural image produce reshaped
version synthetic model output.
Usually boundary generic object represented brightness discontinuities
image reproducing it, therefore, first version, first step Dbs filter
comprises extremely fast simple gradient-based filter computed 3 3 neighborhood pixel. Then, shown Figure 5, threshold applied gradient
image, order keep significant edges. threshold value fixed,
automatic tuning based median filtering currently tested (Folli, 1994).
331

fiAlberto Broggi, Simona Berte

precisely, two different threshold values computed left right halves
image, order detect road boundaries even different illumination
conditions.
8
8
1

1

gradient

DBS

8

threshold

threshold
value

1

DT
8
1

1

iterative algorithm

Figure 5: Block diagram Dbs filter
Since 2D mesh-connected massively parallel architecture used, iterative algorithm
must performed order stretch synthetic model toward positions encoded
thresholded image. advantage pyramidal approach number
iterations required successful stretching low coarse resolution since image
size small; again, iterations required high-resolution refinement,
due initial coarse low-resolution stretching. border pixel synthetic image
attracted towards position nearest foreground pixel thresholded image,
shown Figure 6.

Model
section

Threshold

(a)

(b)

Figure 6: attraction boundary pixels model (in grey) toward thresholded image (the rectangular contour): (a) two-dimensional case; (b) monodimensional section
purpose, scalar field V defined E 2. Field V : E 2 ! E , links position
pixel p 2 E 2 scalar value V (p) 2 E , represents potential associated
pixel itself. set values encoded potential image. difference
V (p) , V (q) represents cost moving pixel p toward position q. scalar field
defined way negative cost corresponds movement toward nearest
332

fiVision-Based Road Detection

position foreground pixels ti thresholded image. consequence, iterative
process designed explicitly enable pixel movements associated negative cost.
Thus, value V (p) depends minimum distance pixel p pixels ti :
V (p) = , min
(1)
d(p; ti) ;

: E 2 E 2 ! E represents distance two pixels, measured respect
given metric. case, due special simplicity implementation, city
block (Manhattan distance) metric chosen (see Figure 7).
4

3

2

3

4

3

2

1

2

3

2

1

0

1

2

3

2

1

2

3

4

3

2

3

4

Figure 7: City block Manhattan distance central pixel
ecient method computation potential image using 2D mesh-connected
architectures based iterative application morphological dilations (Haralick et al.,
1987; Serra, 1982):
1. scalar counter initialized 0; parallel architectures cannot run
fragment scalar code, counter associated every pixel image, thus
constituting \parallel" counter;
2. counter decremented;
3. binary input image dilated using 4-connected structuring element N , formed
following elements:
n


N = (0; 1); (0; ,1); (0; 0); (1; 0); (,1; 0) = "! ;


(2)

4. value counter assigned potential image positions
pixel, due previous dilation, changes state background foreground.
5. process repeated step 2, output morphological dilation
equal input.
shows potential image generated application Distance
Transform, DT (Borgefors, 1986) binary thresholded image. Due ecient
implementation-dependent data handling, final version potential image DT
obtained adding constant every coecient, work positive
values: represents maximum value allowed grey-tone images1. Thus new
definition scalar field V is:
V (p) = , min
(3)
d(p; ti) :
1. specific case, since 8-bit images considered, = 255.

333

fiAlberto Broggi, Simona Berte

Linear profile
input image
[8 bit/pixel]

threshold value

Gradient
[8 bit/pixel]

Threshold
[1 bit/pixel]

Distance
Transform (DT)
[8 bit/pixel]

Synthetic
input image
[1 bit/pixel]
Synthetic
output image
[1 bit-pixel]

Figure 8: Example 4 iterations Dbs algorithm (monodimensional case)
Furthermore, since `distance' information used pixels belonging
border synthetic image neighbors, iterative process stopped
DT computed pixels, producing noticeable performance improvement.
already mentioned, crux algorithm iterative process whose purpose
move edge pixels synthetic image directions DT gradient
maximum. Figure 8 shows example monodimensional stretching. shown
Appendix A, strength approach lies fact stretching algorithm
expressed simply sequence morphological operations, therefore
mapped eciently mesh-connected massively parallel architectures, achieving higher
performance levels approaches (Cohen & Cohen, 1993; Cohen, 1991; Kass et al.,
1987).
order describe Dbs algorithm, let us introduce definitions using Mathematical Morphology operators (Haralick et al., 1987; Serra, 1982) dilation (),
erosion ( ), complement (). two-dimensional binary image represented
subset E 2, whose elements correspond foreground pixels image:

n

= 2 E 2 = (x; y); x; 2 E ;
(4)
vector (x; ) represents coordinates generic element s.
334

fiVision-Based Road Detection

external edge defined set elements representing difference
dilation 4-connected structuring element N shown expression (2):
(5)
Be(S ) = (S N ) \ :
similar way, set elements representing difference erosion
using structuring element N defined internal edge :

Bi(S ) = (S N ) \ :

(6)

4.1.1 Iterative Rules

set elements B(S ) = (S ) [ Bi (S ) elements inserted
removed set application single iteration Dbs algorithm.
precisely, two different rules applied two edges: first, applied external
edge (S ), determines elements included set ; second, applied
internal edge Bi (S ), determines elements removed set .

Rule external edge:
{ pixel external edge computes minimum value DT
associated 4-connected neighbors belonging set ;
{ pixels, whose associated DT greater value previously computed, inserted set .

application rule effect expanding synthetic image towards
foreground pixels ti included synthetic model (see right
hand side Figure 6.b).

Rule internal edge:
{ pixel internal edge computes minimum value DT
associated 4-connected neighbors belonging set ;
{ pixels, whose associated DT greater value previously computed, removed set .
application rule effect shrinking synthetic image (see
left hand side Figure 6.b).
Note rule 2 inverse rule 1: latter tends stretch foreground onto
background, former acts opposite way, using complement
synthetic image.
4.1.2 Flat Handling

Figure 8 refers monodimensional stretching. Unfortunately, dealing 2D data
structures, DT image present strictly increasing decreasing behavior, even
locally. Thus, extension previous rules must considered correct at-handling
2D space.
335

fiAlberto Broggi, Simona Berte

2

1

2

3

4

5

4

3

2

1

0

1

2

2

1

2

3

4

5

4

3

2

1

0

1

2

2

1

2

3

4

5

4

3

2

1

0

1

2

1

0

1

2

3

4

3

2

1

0

0

0

1

1

0

1

2

3

4

3

2

1

0

0

0

1

1

0

1

2

3

4

3

2

1

0

0

0

1

0

1

2

3

4

4

3

2

1

0

1

1

2

0

1

2

3

4

4

3

2

1

0

1

1

2

0

1

2

3

4

4

3

2

1

0

1

1

2

1

0

1

2

3

4

3

2

1

0

1

2

3

1

0

1

2

3

4

3

2

1

0

1

2

3

1

0

1

2

3

4

3

2

1

0

1

2

3

1

0

1

2

3

4

3

2

1

0

1

2

3

1

0

1

2

3

4

3

2

1

0

1

2

3

1

0

1

2

3

4

3

2

1

0

1

2

3

1

0

1

2

3

4

3

2

1

0

1

2

3

1

0

1

2

3

4

3

2

1

0

1

2

3

1

0

1

2

3

4

3

2

1

0

1

2

3

1

0

1

2

3

4

4

3

2

1

0

1

2

1

0

1

2

3

4

4

3

2

1

0

1

2

1

0

1

2

3

4

4

3

2

1

0

1

2

2

1

0

1

2

3

4

4

3

2

1

0

1

2

1

0

1

2

3

4

4

3

2

1

0

1

2

1

0

1

2

3

4

4

3

2

1

0

1

2

1

0

1

2

3

4

4

3

2

1

0

1

2

1

0

1

2

3

4

4

3

2

1

0

1

2

1

0

1

2

3

4

4

3

2

1

0

1

3

2

1

2

3

4

5

5

4

3

2

1

2

3

2

1

2

3

4

5

5

4

3

2

1

2

3

2

1

2

3

4

5

5

4

3

2

1

2

a) Input image

b) Stretching without flat-handling

c) Stretching flat-handling

Figure 9: Two-dimensional stretching: different square markings represent different states
input binary image; dark grey areas represent stretching area
Figure 9.a shows modulus DT coecients (in case = 0), together
input binary image (shown grey). output iterative Dbs algorithm
presented Figure 9.b.
Since movement generic pixel towards positions holding equal DT coecient expressly disabled, resulting binary image completely follow shape
encoded DT image. minor revision definition rule 1 thus required.
Figure 9.c obtained following rule applied external edge.

Rule external edge, including handling:
{ pixel external edge computes minimum value DT
associated 4-connected neighbors belonging set ;
{ pixels, whose associated DT greater value previously computed, pixels belonging thresholded image, whose associated DT equal value previously computed inserted set .

specific requirement pixels moving toward region, belonging
thresholded image, ensures binary image follow DT chain maxima.
requirement, specific case Figure 9, maxima upper-right
hand area included resulting binary image.

5. Performance Analysis Current Implementation

Since final aim work integrate road detection system mobile
vehicle, main requirement achieve real-time performance. choice specialpurpose massively parallel architecture already justified Section 1; moreover,
algorithm discussed paper maps naturally onto single-bit mesh-connected Simd
machine, whole computation eciently expressed sequence binary
morphological operators, shown Appendix (which presents morphology-based
description whole Dbs algorithm).
complete processing, first tested Connection Machine CM-2 (Hillis, 1985),
implemented special-purpose massively parallel Simd architecture Paprica.
336

fiVision-Based Road Detection

Paprica system (PArallel PRocessor Image Checking Analysis), based hierarchical morphology computational model, designed specialized coprocessor
attached general purpose host workstation: current implementation, consisting 16 16 square array processing units, connected Sparc-based workstation
via Vme bus, installed Mob-Lab. current hardware board (a single 6U Vme
board integrating Processor Array, Image Program Memories, frame
grabber device direct acquisition images Paprica Image Memory)
result full reengineering first Paprica prototype extensively
analyzed tested (Gregoretti, Reyneri, Sansoe, Broggi, & Conte, 1993) several years.
Paprica architecture developed explicitly meet specific requirements real-time image processing applications (Broggi, 1995c, 1995b; Adorni, Broggi,
Conte, & D'Andrea, 1993); specific processor virtualization mechanism utilized Paprica architecture allows handling pyramidal data structures without additional
overhead equipment.
shown Figure 2, output device be:
(a) heads-up display road (or lane) boundaries highlighted;
(b) set Leds indicating relative position road (or lane) vehicle.
Starting 256 256 grey-tone images resolution reduction process,
first case (a) initial resolution must recovered order superimpose result onto
original image. second case (b), hand, due high quantization
output device, processing stopped low resolution (e.g., 64 64),
stripe resulting image analyzed drive Leds. Table 1 presents
computational time required step algorithm (considering 5 DT iterations
5 Dbs iterations pyramid level).
Operation
Image size
Time [ms]
Resolution Reduction
2562!322
149.70
2
2
DT, Dbs & Oversampling
32 !64
18.55
DT, Dbs & Oversampling
642!1282
69.13
DT, Dbs & Oversampling
1282!2562
296.87
Total (Led output)
2562!322 !642
168.25
2
2
2
Total (heads-up display output) 256 !32 !256
534.25
Table 1: Performance Paprica system; numbers refer 5 iterations DT
process 5 iterations Dbs filter pyramid level.
current Mob-Lab configuration, output device (shown Figure 1.b) consists
set 5 Leds: Table 1 shows 2562 ! 322 ! 642 filtering single frame takes
150180 ms (depending number iterations required), allowing acquisition
processing 6 frames per second.
Moreover, due high correlation two consecutive sequence frames,
final stretched template used input model stretched processing
following frame. conditions lower number Dbs DT iterations
337

fiAlberto Broggi, Simona Berte



b

c



e



b

c



e



b

c



e

Figure 10: detection road markings removal perspective effect
three different conditions: straight road shadows, curved road shadows, junction. (a) input image; (b) reorganized image, obtained non-uniform
resampling (a); (c) result line-wise detection black-white-black transitions horizontal direction; (d) reintroduction perspective effect,
grey areas represent portion image shown (c); (e) superimposition (d) onto brighter version original image (a).
needed complete template reshaping, thus producing noticeable performance
improvement. reduction time required process single frame increases
correlation current following frame sequence, thus allowing
reduction computation time2 .
Images acquired many different conditions environments used
extensive experimentation, performed first off-line functional simulator
implemented 8k processor Connection Machine CM-2 (Hillis, 1985) realtime Paprica hardware Mob-Lab. complete system demonstrated
final Prometheus project meeting Paris, October 1994: Mob-Lab land
vehicle driven around two-lane track Mortefontaine, different conditions
(straight curved roads, shadows changing illumination conditions
vehicles path).
2. processing highly correlated sequences (namely road conditions change slowly
off-line slow-motion tape playback laboratory) computational time required processing
single frame reach minimum value 150 ms.

338

fiVision-Based Road Detection

performances obtained demonstration allowed main limitations
system detected enabled critical analysis approach, thus leading
proposals development.

6. Critical Analysis Evolution

approach discussed achieves good performances terms output quality
model matches (or suciently similar to) road conditions, namely road markings
painted road surface (on structured roads, see Figures 11.a 12.a) inducing
suciently high luminance gradient. approach successful road lane
boundaries extracted input image gradient thresholding operation
(see Figures 11.b 12.b). Unfortunately, always possible, example
road region patch shadow sunlight, Figure 13.a. case computation
DT starting thresholded image (see Figure 13.b) longer significant:
different method must devised determination binary image used
input Distance Transform.



b

c



e

Figure 11: Lane detection straight road: (a) input image; (b) image obtained
thresholding gradient image; (c) image obtained perspective-based
filter; (d) stretched template; (e) superimposition edges stretched
template onto original image. case thresholded gradient (b)
perspective-based filtered (c) images used input DT.



b

c



e

Figure 12: Lane detection curved road: case thresholded gradient
(b) perspective-based filtered (c) images used input
DT.
recent work (Broggi, 1995a) approach based removal perspective
effect presented performances discussed. transform, non-uniform resampling
similar happens human visual system (Zavidovique & Fiorini, 1994; Wolfe &
339

fiAlberto Broggi, Simona Berte

Cave, 1990), applied input image (Figures 10.a); assuming road, every pixel
resampled image (Figures 10.b) represent portion road3. Due
constant width within overall image, road markings easily enhanced
extracted extremely simple morphological filters (Broggi, 1995a) (Figures 10.c).
Finally perspective effect reintroduced (Figures 10.d).



b

c



e

Figure 13: Lane detection straight road shadows: case thresholded gradient (b) cannot used determine DT image due noise
caused shadows. hand, perspective-based processing able
filter shadows extract road markings: DT fact
determined using image (c) instead (b).



b

c



e

Figure 14: Lane detection straight road vehicle path:
case Dbs algorithm cannot stretch binary model successfully,
due presence vehicle occluding road markings. use
pair stereo cameras remove problem currently investigated.
Due high effectiveness filter, test version system currently
operational laboratory, Dbs filter improved replacing gradient
thresholding perspective-based filter. extended version Dbs filter
shown Figure 15.
Since removal (and reintroduction) perspective effect reduced
mere image resampling filter based simple morphological operators (Broggi,
1995a), implementation Paprica system straightforward. preliminary
results obtained current test version system encouraging
output quality (the problems caused shadows resolved) computation
3. Note that, due perspective effect, pixels lower part original image (Figures 10.a)
represent cm2 road region, central pixels represent tens cm2 . nonuniform resampling original image explicitly designed homogeneous distribution
information among pixels image.

340

fiVision-Based Road Detection

8
8
1

extended
DBS

persp. eff.
removal

1

8

morph.
filter
1

persp. eff.
reintrod.
1

DT
8
1

1

iterative algorithm

Figure 15: Diagram extended Dbs filter including perspective-based filtering
time: single frame processed less 100 ms, thus allowing processing
10 frames per second. improvement Dbs process means perspectivebased filter, addition allowing correct road (or lane) detection presence shadows,
implemented extremely eciently Paprica system, taking advantage
specific hardware extension designed explicitly purpose (non uniform-resampling)
(Broggi, 1995a).
Figures 11, 12, 13, 14 show results processing different conditions:
straight curved road, shadows vehicles path, respectively4 .
last case lane cannot detected successfully due presence obstacle
use pair stereo images currently investigated overcome
problem: removal perspective effect stereo images would lead
image iff road at, namely obstacles found vehicle path.
difference two reorganized images (namely obstacle detected) would cause
algorithm stop lane detection warn driver.
general nature presented approach enables detection suciently
large-sized features: example, using different synthetic models possible detect
road lane boundaries, shown Figure 16.

7. Conclusions
paper novel approach detection road (or lane) boundaries visionbased systems presented. multiresolution approach, together top-down
control, allows achievement remarkable performances terms computation time
(when mapped massively parallel architectures) output quality.
4. sequences MPEG format (200 1000 frames respectively) available via World Wide
Web http://WWW.CE.UniPR.IT/computer vision, showing lane detection particularly challenging
conditions. images shown Figures 11, 12, 13, 14, 16 part sequences available
previously mentioned WWW page.

341

fiAlberto Broggi, Simona Berte



b

c



e

Figure 16: (a) input image; (b) synthetic model used lane detection; (c) superimposition
edges stretched model onto original input image; (d) synthetic
model used road detection; (e) superimposition edged stretched
model onto original input image.
perspective-based filter introduced improve system performance shadow
conditions. However, even perspective-based filter alone able extract road
markings high degree confidence, hierarchical application Dbs filter
(and extension handling image sequences) basic importance since allows
exploitation temporal correlation successive sequence frames (performing
solution tracking).
presence obstacle vehicle path still open problem, currently
approached using stereo vision (Broggi, 1995a).
algorithm implemented Paprica system, massively parallel lowcost Simd architecture; specific hardware features, Paprica capable
processing 10 frames per second.

Appendix A. Morphological Implementation DBS Filter

appendix, rule external edge considered, assuming step n
iterative process. Recalling Mathematical Morphology notations used identify
grey-tone two-dimensional image, DT image subset E 3:

DT = fd 2 E 3 j = (u; v); v = V (u); 8 u 2 E 2g ;

(7)

u represents position element E 2, v represents value.
pixelwise masking operation binary grey-tone image defined
function
: E2 E3 ! E3
(8)
B represents subset B containing elements b = (u; v ) whose
position vector u 2 E 2 belongs A:

B = fx 2 E 3 j x = (u; v) 2 B; u 2 Ag

(9)

order compute minimum value DT specified neighborhood, let us
consider image Ke(n)



Ke(n) = Se(n) DT [ Se(n) L ;
(10)
342

fiVision-Based Road Detection

Se(n) represents binary image step n, subscript e indicates rule
external edge considered, finally

L = fl 2 E 3 j l = (u; ); 8 u 2 E 2g :

(11)

shown (Haralick et al., 1987), order compute minimum value grey-tone
image Ke(n) 4-connected neighborhood, following grey-scale morphological erosion
used:
Me(n) = Ke(n) Q ;
(12)

Q = f(1; 0; 0); (,1; 0; 0); (0; 1; 0); (0; ,1; 0)g ;
(13)
shown Figure 17.
0
0

0
0

z


Q = { (1, 0, 0) ; (0, 1, 0) ; (-1, 0, 0) ; (0, -1, 0) }

x

Figure 17: Structuring element Q
order determine set elements Me(n) value smaller DT ,
new function required:
: E3 E3 ! E2 :
(14)
function defined

M(A; B) = fx 2 E 2 j V (A; x) < V (B; x)g ;

(15)

V : E 3 E 2 ! E defined

V (A; x) =

(

9 2 E j (x; a) 2 (A) :
,1 otherwise

(16)

equation (16), (A) represents top (Haralick et al., 1987), defined

(A) = ft 2 A; = (u; v) j 6 9 t0 = (x; v0) 2 v0 > vg :

(17)

set elements included set Se(n+1) given logical intersection
M(Me(n); DT ) set elements belonging external edge Se(n) :








Ee(n) = Me(n); DT \ Se(n) :
343

(18)

fiAlberto Broggi, Simona Berte

Distance
Transform (DT)
[8 bit/pixel]

Distance
Transform (DT)
[8 bit/pixel]
Input
image
[1 bit/pixel]

Input
image
[1 bit/pixel]

Synthetic image
complemented
[1 bit/pixel]

Masked
image K
[8 bit/pixel]

Masked
image K
[8 bit/pixel]

DT

DT
Eroded
image
[8 bit/pixel]

Dilated
image
[8 bit/pixel]

(M,DT)
[1 bit/pixel]

(M,DT)
[1 bit/pixel]

External edge
[1 bit/pixel]

Internal edge
[1 bit/pixel]

Output image
[1 bit/pixel]

Output image
[1 bit/pixel]

Figure 18: Monodimensional stretching case external edge (left) internal edge
(right)
Thus, final result iteration n given
Se(n+1) = Se(n) [ Ee(n) :
(19)
Figure 18.a shows execution individual iteration rule 1 monodimensional
image profile.
Following similar steps, possible formalize rule 2. order compute
maximum value DT specified neighborhood, let us consider image Ki(n)

Ki(n) = Si(n) DT ;

(20)
subscript indicates rule internal edge considered.
shown above, order compute maximum value grey-tone image Ki(n)
4-connected neighborhood, following morphological dilation used:
Mi(n) = Ki(n) Q ;
(21)
Q shown Figure 17.
set elements removed set Si(n+1) given logical intersection M(Mi(n); DT ) set elements belonging internal edge Si(n) :




Ei(n) = Mi(n); DT \ Bi Si(n) :
(22)
344

fiVision-Based Road Detection

Thus, final result iteration n given




Si(n+1) = Si(n) [ Ei(n) = Si(n) \ Ei(n) :

(23)

Figure 18b shows execution individual iteration rule 2 monodimensional
profile image.

Acknowledgements
work partially supported Italian Cnr within framework Eureka
Prometheus Project { Progetto Finalizzato Trasporti contracts n. 93.01813.PF74
94.01371.PF74.
authors indebted Gianni Conte valuable constructive discussions
continuous support throughout project.

References

Adorni, G., Broggi, A., Conte, G., & D'Andrea, V. (1993). self-tuning system realtime Optical Flow detection. Proceedings IEEE System, Man, Cybernetics
Conf, Vol. 3, pp. 7{12.
Adorni, G., Broggi, A., Conte, G., & D'Andrea, V. (1995). Real-Time Image Processing
Automotive Applications. Laplante, P. A., & Stoyenko, A. D. (Eds.), Real-Time Image Processing: Theory, Techniques Applications. IEEE SPIE Press. press.
Annaratone, M., Arnould, E., T.Gross, H.Kung, & J.Webb (1987). Warp Computer: Architecture, Implementation Performance. IEEE Trans Computers,
C-36 (12), 1523{1538.
Ballard, D. H., & Brown, C. M. (1982). Computer Vision. Prentice Hall.
Blake, A., & Yuille, A. (1993). Active Vision. MIT Press.
Borgefors, G. (1986). Distance Transformations Digital Images. Computer Vision,
Graphics Image Processing, Vol. 34, pp. 344{371.
Broggi, A. (1994). Performance Optimization Low-Cost Cellular Array Processors.
Proceedings IEEE Intl Conf Massively Parallel Computing Systems, pp. 334{338.
Broggi, A. (1995a). Massively Parallel Approach Real-Time Vision-Based Road Markings Detection. Masaky, I. (Ed.), Proceedings IEEE Intelligent Vehicles'95, pp.
84{89.
Broggi, A. (1995b). Novel Approach Lossy Real-Time Image Compression: Hierarchical
Data Reorganization Low-Cost Massively Parallel System. Real-Time Imaging
Journal, 1 (2).
Broggi, A. (1995c). Parallel Local Feature Extraction: Real-Time Approach Road
Boundary Detection. IEEE Trans Image Processing, 4 (2), 217{223.
Broggi, A., Conte, G., Gregoretti, F., Sansoe, C., & Reyneri, L. M. (1995). Evolution
PAPRICA System. Integrated Computer-Aided Engineering Journal - Special
Issue Massively Parallel Computing. press.
345

fiAlberto Broggi, Simona Berte

Broggi, A., Conte, G., Gregoretti, F., Sansoe, C., & Reyneri, L. M. (1994). PAPRICA
Massively Parallel Processor. Proceedings IEEE Intl Conf Massively Parallel
Computing Systems, pp. 16{30.
Cantoni, V., & Ferretti, M. (1993). Pyramidal Architectures Computer Vision. Plenum
Press, London.
Cantoni, V., Ferretti, M., & Savini, M. (1990). Compact Pyramidal Architectures. Tou,
J., & Balchen, J. (Eds.), Highly Redundant Sensing Robotic Systems, Vol. 58, pp.
157{174. NATO ASI Series F.
Cantoni, V., & Levialdi, S. (1986). Pyramidal Systems Computer Vision. Springer
Verlag, Berlin.
Chandrakasan, A., Sheng, S., & Brodersen, R. (1992). Low-Power CMOS Digital Design.
IEEE Journal Solid-State Circuits, 27 (4), 473{484.
Cohen, L. D. (1991). Note Active Contour Models Balloons. CGVIP: Image Understanding, 53 (2), 211{218.
Cohen, L. D., & Cohen, I. (1993). Finite-Element Methods Active Contour Models
Balloons 2-D 3-D Images. IEEE Trans PAMI, 15 (11), 1131{1147.
Courtois, B. (1993). CAD Testing ICs systems: going?. Tech.
rep., TIMA & CMP.
Crisman, J., & Thorpe, C. (1990). Color Vision Road Following. Thorpe, C. E. (Ed.),
Vision Navigation. Carnegie Mellon Navlab, pp. 9{24. Kluwer Academic
Publishers.
Crisman, J., & Thorpe, C. (1991). UNSCARF, Color Vision System Detection
Unstructured Roads. Proceedings IEEE Intl Conf Robotics Automation,
pp. 2496{2501.
Crisman, J., & Thorpe, C. (1993). SCARF: Color Vision System Tracks Roads
Intersections. IEEE Trans Robotics Automation, 9 (1), 49{58.
Crisman, J. D., & Webb, J. A. (1991). Warp Machine Navlab. IEEE Trans
PAMI, 13 (5), 451{465.
Dickmans, E. D., & Mysliwetz, B. D. (1992). Recursive 3-D Road Relative Ego-State
Recognition. IEEE Trans PAMI, 14, 199{213.
Folli, A. (1994). Elaborazione parallela di immagini per applicazioni tempo reale su
autoveicolo. Master's thesis, Universita degli Studi di Parma, Facolta di Ingegneria.
Forman, G. H., & Zahorjan, J. (1994). Challenge Mobile Computing. Computer,
27 (4), 38{47.
Fountain, T. (1987). Processor Arrays: Architectures applications. Academic-Press,
London.
Graefe, V., & Kuhnert, K.-D. (1991). Vision-based Autonomous Road Vehicles. Masaki,
I. (Ed.), Vision-based Vehicle Guidance, pp. 1{29. Springer Verlag.
Gregoretti, F., Reyneri, L. M., Sansoe, C., Broggi, A., & Conte, G. (1993). PAPRICA
SIMD array: critical reviews perspectives. Dadda, L., & Wah, B. (Eds.),
Proceedings ASAP'93 - IEEE Intl Conf Application Specific Array Processors, pp.
309{320 Venezia, Italy.
346

fiVision-Based Road Detection

Hamey, L. G. C., Web, J. A., & Wu, I. (1988). Low-level vision Warp Apply
Programming Model. Kowalik, J. S. (Ed.), Parallel Computations Computers
Artificial Intelligence, pp. 185{200. Kluwer Academic Publishers.
Haralick, R. M., Sternberg, S. R., & Zhuang, X. (1987). Image Analysis Using Mathematical
Morphology. IEEE Trans PAMI, 9 (4), 532{550.
Hillis, W. D. (1985). Connection Machine. MIT Press, Cambridge, Ma.
Jochem, T. M., & Baluja, S. (1993). Massively Parallel Road Follower. Bayoumi,
M. A., Davis, L. S., & Valavanis, K. P. (Eds.), Proceedings Computer Architectures
Machine Perception '93, pp. 2{12.
Jochem, T. M., Pomerleau, D. A., & Thorpe, C. E. (1993). MANIAC: Next Generation Neurally Based Autonomous Road Follower. Proceedings Intl Conf
Intelligent Autonomous Systems: IAS -3 Pittsburgh, Pennsylvania, USA.
Kass, M., Witkin, A., & Terzopolous, D. (1987). Snakes: Active Contour Models. Intl
Journal Computer Vision, 1, 321{331.
Kenue, S. K. (1990). LANELOK: detection lane boundaries vehicle tracking using
image-processing techniques. Proceedings SPIE - Mobile Robots IV, Vol. 1195,
pp. 221{233.
Kenue, S. K. (1991). LANELOK: Algorithm Extending Lane Sensing Operating
Range 100 Feet. Proceedings SPIE - Mobile Robots V, Vol. 1388, pp. 222{233.
Kenue, S. K. (1994). Correction Shadow Artifacts Vision-based Vehicle Guidance.
Proceedings SPIE - Mobile Robots VIII, Vol. 2058, pp. 12{26.
Kenue, S. K., & Bajpayee, S. (1993). LANELOK: Robust Line Curvature Fitting
Lane Boundaries. Proceedings SPIE - Mobile Robots VII, Vol. 1831, pp. 491{503.
Kluge, K., & Thorpe, C. E. (1990). Explicit Models Robot Road Following. Thorpe,
C. E. (Ed.), Vision Navigation. Carnegie Mellon Navlab, pp. 25{38. Kluwer
Academic Publishers.
Kluge, K. (1994). Extracting Road Curvature Orientation Image Edge Points
without Perceptual Grouping Features. Proceedings IEEE Intelligent Vehicles'94.
MasPar Computer Corporation, Sunnyvale, California (1990). MP-1 Family Data-Parallel
Computers.
Neumann, H., & Stiehl, H. (1990). Toward computational architecture monocular
preattentive segmentation. G.Hartmann, R., & G.Hauske (Eds.), Parallel Processing Neural Systems Computers. Elsevier (North Holland).
Newman, W. M., & Sproull, R. F. (1981). Principles Interactive Computer Graphics.
McGraw-Hill, Tokyo.
Pomerleau, D. A. (1990). Neural Network Based Autonomous Navigation. Thorpe,
C. E. (Ed.), Vision Navigation. Carnegie Mellon Navlab, pp. 83{93. Kluwer
Academic Publishers.
Pomerleau, D. A. (1993). Neural Network Perception Mobile Robot Guidance. Kluwer
Academic Publishers, Boston.
Pratt, W. K. (1978). Digital Image Processing. John Wiley & Sons.
347

fiAlberto Broggi, Simona Berte

Rosenfeld, A. (1984). Multiresolution Image Processing Analysis. Springer Verlag,
Berlin.
Serra, J. (1982). Image Analysis Mathematical Morphology. Academic Press, London.
Shoji, M. (1988). CMOS Digital Circuit Technology. Prentice Hall.
Tanimoto, S. L., & Kilger, K. (1980). Structured Computer Vision: Machine Perception
trough Hierarchical Compuation Structures. Academic Press, NY.
Thorpe, C. (1989). Outdoor Visual Navigation Autonomous Robots. Kanada, T.,
Groen, F. C. A., & Hertzberger, L. O. (Eds.), Intelligent Autonomous Systems, Vol. 2,
pp. 530{544.
Tsai, R. (1986). Ecient Accurate Camera Calibration Technique 3D Machine
Vision. Proceedings IEEE Intl Conf Computer Vision Pattern Recognition,
pp. 364{374.
Turk, M. A., Morgenthaler, D. G., Gremban, K. D., & Marra, M. (1988). VITS - Vision
System Autonomous Land Vehicle Navigation. IEEE Trans PAMI, 10 (3).
Wolfe, J. M., & Cave, K. R. (1990). Deploying visual attention: guided model. AI
eye, pp. 79{103. A.Blake T.Troscianko.
Zavidovique, B., & Fiorini, P. (1994). Control View Vision Architectures. Cantoni,
V. (Ed.), Human Machine Vision: Analogies Divergencies, pp. 13{56. Plenum
Press.

348


