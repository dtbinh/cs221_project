journal artificial intelligence

submitted published

opus efficient admissible
unordered search
geoffrey webb

webb deakin edu au

deakin university school computing mathematics
geelong vic australia

abstract
opus branch bound search enables efficient admissible search
spaces order search operator application significant
search efficiency demonstrated respect large machine learning
search spaces use admissible search potential value machine learning
community means exact learning biases employed complex learning
tasks precisely specified manipulated opus potential application
areas artificial intelligence notably truth maintenance

introduction
many artificial intelligence involve search consequently development
appropriate search central advancement field due complexity search spaces involved heuristic search often employed however heuristic
cannot guarantee targets seek contrast admissible search one guaranteed uncover nominated target
exists nilsson greater utility usually obtained significant computational
cost
describes opus optimized pruning unordered search family
search provide efficient admissible search search spaces
order application search operators significant search efficiency
achieved use branch bound techniques employ domain specific pruning
rules provide tightly focused traversal search space
wide applicability within beyond scope
artificial intelligence focuses application classification learning
particular significance demonstrated efficiently process many
common classification learning contrasts seemingly widespread
assumption sizes search spaces involved machine learning require use
heuristic search
use admissible search potential value machine learning enables better
experimental evaluation alternative learning biases search used machine learning
attempt uncover classifiers satisfy learning bias heuristic search
used difficult determine whether search technique introduces additional implicit
biases cannot properly identified implicit biases may confound experimental
contrast admissible search employed experimenter assured
c

ai access foundation morgan kaufmann publishers rights reserved

fiwebb

search technique introducing confounding unidentified implicit biases
experimental situation
use opus admissible search already led developments machine
learning may otherwise possible particular webb compared
classifiers developed true optimization laplace accuracy estimate obtained heuristic search sought failed optimize measure general
latter proved higher predictive accuracy former surprising
could obtained without use admissible search led quinlan
cameron jones develop theory oversearching
offers two distinct contributions fields computing artificial intelligence machine learning first offers efficient admissible search
unordered search second demonstrates admissible search possible range
machine learning tasks previously thought susceptible efficient exploration
non admissible heuristic search

unordered search spaces
search order operators applied significant
example attempting stack blocks matters whether red block placed
blue block blue block placed green attempting navigate
point point b possible move point c point b moving
point c however search order operators applied
significant example searching space logical expressions effect
conjoining expression expression b conjoining expression
c identical obtained conjoining c followed b sequences
operations expressions equivalent meaning general search space
unordered sequence operator applications state states
reached permutation identical type search
search unordered search spaces subject investigation
special cases search unordered search spaces provided subset
selection narendra fukunaga minimum test set moret shapiro
search subset selection involves selection subset objects maximizes
evaluation criterion minimum test set involves selection set
tests maximizes evaluation criterion search encountered many
domains including machine learning truth maintenance pattern recognition rymon
demonstrated reiters de kleer mackworth reiters
approaches diagnosis recast subset selection
opus traverse search space search tree root
search tree initial state branches denote application search operators
nodes lead denote states application operators
different variants opus suited optimization search satisficing search
optimization search goal state optimal solution satisficing search goal
state acceptable solution possible search space may include multiple goal
states


fian efficient admissible unordered search

opus take advantage properties unordered search spaces
optimize effect pruning search tree may occur particular
expanding node n search tree opus seek identify search operators
excluded consideration search tree descending n without
excluding sole goal node search tree opus differ
previous admissible search employed machine learning clearwater provost
murphy pazzani rymon segal etzioni webb
operators identified removed consideration branches
search tree descend current node contrast
remove single branch time without altering operators considered sibling
branches thereby pruning fewer nodes search space
possible apply operator path search
space search unordered operators considered subset selection
select subset operators whose application order leads goal state single
operator may applied multiple times single path search space search
unordered operators considered sub multiset selection problemselect
multiset operators whose application leads desired
search tree traverses unordered search space multiple applications
single operator allowed may envisioned figure example includes
four search operators named b c node search tree labeled
set operators reached thus initial state labeled empty
set depth one sets containing single operator depth two sets containing
two operators depth four two nodes identical labels represent
equivalent states
considerable duplication nodes search tree label b c occurs
times figure following figures number unique nodes listed
depth search tree number derived number
combinations considered derivation indicated
common search prune regions search tree basis investigations determine goal state cannot lie within regions figure shows
search tree sub tree c pruned note due duplication inherent
search tree number unique nodes remaining tree identical
unpruned tree however deemed node descending c
may goal nodes elsewhere search tree identical labels
reached via identical sets operator applications nodes occur pruned
region tree could pruned figure shows search tree remaining
nodes c duplicates deleted seen number
unique nodes remaining search tree tree depths pruned
half similar obtained case multiple applications
single operator allowed nodes consequently labeled multisets
opus provide pruning rulesmechanisms identifying sections
search tree may pruned rather take pruning rules input seek
optimize effect pruning action application rules
opus designed use admissible pruning rules
used solely admissible pruning rules admissible


fiwebb

b



c



b

b

b c

b

b c

b c

b

b c

b c

b c

c

b c

b

b c

c

b c

b c

b c

b

b c

b c

b c

b c

b c

b

b c

c b

b c

b c

b c

c

b c

b c

b c

b c

b c

c

b c


c

c

b c

c





b

c
c


c


c


b c

b c

b

b c

c

b c

b

b c

b c

b c

c

b c

b c

b c

c


c


figure simple unordered operator search tree
guaranteed goal state one exists search space however
may used non admissible pruning heuristics obtain efficient non admissible
search
opus admissible used admissible pruning
rules systematic pearl addition guaranteeing goal
found one exists guarantee state visited
search long possible reach single node application
different sets operators

fixed order search
number recent machine learning performed restricted admissible search
clearwater provost rymon schlimmer segal etzioni webb
organization search tree
considering search illustrated figures traverse search space
manner depicted figure organization achieved arranging operators
predefined order applying node operators higher
order operator appears path leading node strategy


fian efficient admissible unordered search

b



c



b

b

b c

b

b c

b c

b

b c

b c

b c

c

b c

b

b c

c

b c

b c

b c

b

b c

b c

b c

b c

b c

b

b c

c b

b c

b

b c

c

b c

b

b c

b c

b c

c

b c

b c

b c



c





b

c
c


c


c


c


c


figure simple unordered operator search tree pruning beyond application operator c

called fixed order search fixed order search used non admissible search
example buchanan feigenbaum lederberg
figure illustrates effect pruning sub tree descending operator c
fixed order search seen substantially less effective optimized
pruning illustrated figure schlimmer ensures pruning effect illustrated
figure obtained within efficient search tree organization illustrated figure
maintaining explicit representation nodes pruned resulting search tree
depicted figure requires considerable computational overhead
identifying marking pruned states following every pruning action restrictive
storage overhead maintaining representation one search tackled
contains states represent whether state pruned requires single bit
thus bits would required represent required information
requirement well beyond capacity computational machinery foreseeable
future open debate whether truly prune identified
nodes search space nodes pruned still need
generated encountered previously unexplored regions search tree order


fiwebb

b

b


b


b

b

b
b
b


c

b

b


c


c


b

c


c


c


figure simple unordered operator search tree maximal pruning beyond application
operator c

b

b c

b c

b


c

c


b c


b c

b
b
c

c


c


c


c


c


c


figure static search tree organization used fixed order search



fian efficient admissible unordered search

b c
b


c

b c

b
c




b

b c

b c

b
c


c


c


c




c


figure effect pruning fixed order search
b

b





b

b

c

c


c


c


c


c


figure optimal pruning fixed order search
checked list pruned nodes consider example node labeled
figure expanding node necessary generate node labeled
c even node marked pruned generated possible
identify node pruned node could principle pruned
anyway application variant technique identified prunable
first place viewed light argued schlimmers
reduce number nodes must generated fixed order search
saves computational cost determining nodes whether
require pruning assumes optimistic pruning mechanism able
determine node n search space pruned node n
pruned irrespective n encountered search tree optimistic
pruning mechanism deficient cannot schlimmers
increase amount true pruning performed extent overcomes
deficiency

feature subset selection
fixed order search traverses search space naive mannerthe topology search
tree determined advance takes account efficiency resulting search
contrast feature subset selection fss narendra fukunaga
performs branch bound search unordered search spaces traversing search space


fiwebb

c

b

b






b

b


c


c


c


c


c


figure pruning fss search
visit state dynamically organizing search tree
maximize proportion search space placed unpromising operators
viewed form fixed order search order altered node
search tree manipulate topology search tree sake search
efficiency unlike schlimmer pruning mechanism ensures nodes
identified prunable generated
power measure illustrated figure figure fixed order search
performed simple example illustrated figures order
changed operator pruned c placed first seen achieves
amount pruning achieved optimal pruning effect achieved
negligible computational storage overhead
however fss severely limited applicability
restricted optimization search
restricted tasks operator may applied subset
selection
restricted search single solution
requires values states search space monotonically decreasing
value state cannot increase operator application

form pruning supports optimistic pruning

opus
opus generalize idea search space reorganization fss two
variations opus defined opuss variant satisficing search search
qualified object sought opuso variant optimization search search
object optimizes evaluation function sought whereas fss uses node values
pruning opuso uses optimistic evaluation search space node
removes requirement values states search space monotonically
decreasing opens possibility performing types pruning addition
optimistic pruning


fian efficient admissible unordered search

analysis follow comments apply equally variants name
opus employed comment applies one variant
distinguished respective superscript
opus uses branch bound lawler wood search strategy traverses
search space manner similar illustrated figure guarantee
two equivalent nodes search space visited however organizes
search tree optimize effect pruning achieving effect illustrated
figure without significant computational storage overhead
rather maintaining operator order opus maintains node n set
operators n active applied search space n node
expanded operators n active examined determine pruned
operators pruned removed n active nodes created
operators remaining n active sets active operators initialized
ensure every combination operators considered one node
search tree
kept mind possible many states search space may
goal states satisficing search states satisfy given criteria goal states
optimization search states optimize evaluation criteria goal states
efficiency sake opus allow sections search space pruned even
contain goal state long remain goal states remaining search
space
opuss
opuss presented figure description opuss follows
conventions employed search descriptions provided pearl
definition opuss assumes single operator cannot applied
along single path search space operator may applied multiple
times order steps b reversed unless otherwise specified
following discussion opus assumes operator may applied
along single path
desired obtain solutions satisfy search criterion
step altered exit successfully returning set solutions
step b altered exit rather add current node set
solutions
domain specific pruning mechanisms employed step modified
goal state may pruned search space
form search could used assumption truth maintenance system
set maximally general consistent assumptions would provide efficient search
without need maintain search explicit database inconsistent assumptions
atms good set de kleer et al unless otherwise specified
discussion opus assumes single solution sought
specify order nodes selected expansion
step nodes may selected random domain specific selection function


fiwebb

data structure
node n search tree associated three items information
n state state search space associated node
n active set operators explored sub tree descending node
n mostrecentoperator operator applied parent nodes state create current nodes state

initialize list called op en unexpanded nodes follows
set op en contain one node start node
b set active set operators
c set state start state
op en empty exit failure goal state exists
remove op en node n next node expanded
initialize n active set containing operators yet examined called
remainingoperators
initialize set nodes called n ewn odes contain descendants n
pruned
generate children n performing following steps every operator n active
generate n node n state set state formed application
n state
b n state goal state exit successfully goal represented n
c set n mostrecentoperator
add n n ewn odes
node n n ewn odes pruning rules determine sole remaining goal state accessible n operators remainingoperators prune
nodes search tree n search tree n follows
remove n n ewn odes
b remove n mostrecentoperator remainingoperators
allocate remaining operators remaining nodes processing node n
n ewn odes turn follows
remove n mostrecentoperator remainingoperators
b set n active remainingoperators
add nodes n ewn odes op en
go step

figure opuss


fian efficient admissible unordered search

order nodes placed op en first first node selection
breadth first search last first node selection depth first search
order processing unspecified steps depending upon
domain practical advantage may obtained specific orderings steps
opuss used machine learning context search space generalizations may formed deletion conjuncts highly specific classification
rule goal search uncover set general rules cover
identical objects training data covered original rule webb
opuso
number changes warranted opus applied optimization search
following definition opuso variant opus optimization search assumes
two domain specific functions available first functions value n returns
value state node n higher value returned higher
preference state second function optimisticv alue n returns value
exists node b created application combination
operators set operators state node n b represents best solution
maximizes value search space optimisticv alue n less value b
used pruning sections search tree general lower values returned
optimisticv alue greater efficiency pruning time possible prune
node optimistic value less equal best value node
explored date
opuso able take advantage presence optimistic values optimize
effect pruning beyond obtained solely maximizing proportion
search space placed nodes immediately pruned generalizing heuristic
used fss nodes lower optimistic values given active operators thus
greater proportions search space placed beneath nodes higher
optimistic values achieved order processing step rationale
strategy lower optimistic value higher probability
node associated search tree pruned expanded maximizing
proportion search space located nodes low optimistic value maximizes
proportion search space pruned thus explicitly explored
figure illustrates effect respect simple machine learning tasksearch
propositional expression describes target examples non target
examples seven search operators represent conjunction specific proposition
male f emale single married young mid old respectively search starts
expression anything total expressions may formed conjunction
combination expressions twelve objects defined
male single young target
male single mid target
male single old target
male married young non target
ease exposition assumed optimization means maximization value would
trivial transform discussion accommodate forms optimization



fiwebb

male married mid non target
male married old non target
female single young non target
female single mid non target
female single old non target
female married young non target
female married mid non target
female married old non target
objects first three distinguished targets value expression
determined two functions negcover poscover negcover expression
number non target objects matches poscover expression
number target objects matches expression anything matches objects
value expression negcover equal zero otherwise value equals
poscover preference function avoids expressions cover negative objects
favors expressions cover negative objects expressions cover
positive objects optimistic value node equals poscover nodes
expression
figure depicts nine nodes considered opuso search task
node following listed
expression
number target number non target objects matched cover
value
potential value
operators placed nodes set active operators hence included
search tree node
search space traversed follows first node anything expanded producing seven children values optimistic values determined node
pruned potential values greater best value far encountered
active operators distributed maximizing proportion search space
placed nodes low optimistic values two nodes highest optimistic
values male single one receives active operator receives first
sole active operator one expanded one active
operators single nodes generated male expanded generating single node male single value immediately node generated
remaining open nodes pruned none optimistic value greater
maximum value
note nodes pruned node malesingle considered
point node encountered lower optimistic value best actual
value consequently search tree distributed accord potential value
set active operators node male would f emale single married young mid old
instead considering single node male expanded would necessary


fian efficient admissible unordered search

male
cover
value infinity
potval
ao single

male single
cover
value
potval
ao

female
cover
value infinity
potval
ao male married
single young mid old
single
cover
value infinity
potval
ao
anything
cover
value infinity
potval
ao male female
married single
young mid old

married
cover
value infinity
potval
ao male single young
mid old
young
cover
value infinity
potval
ao male single
mid old
mid
cover
value infinity
potval
ao male single old
old
cover
value infinity
potval
ao male single

figure effect pruning search tree ordered optimistic value



fiwebb

consider six nodes search space complex continued depth three
beyond would commensurate increase proportion search space
explored unnecessarily
note search example terminate goal node first
encountered system cannot determine goal node nodes
might higher values explored pruned
opuso
opuso achieving effect defined figure note
optimistic pruning need performed step performed step
irrespective
definition opuso assumes single operator cannot applied
along single path search space allow multiple applications single
operator order steps b reversed
could modified identify return maximal solutions
modification similar outlined allow opuss return solutions
possible improve performance opuso lower limit
acceptable solution objective search highest valued node
long value greater pre specified minimum case nodes whose
potential value less equal minimum may pruned step
opuss opuso specify order nodes open
expanded step selection node highest optimistic value minimize
size search tree single node n optimizes optimistic value
search cannot terminate n expanded node lower
optimistic value may yield solution value higher optimistic value n
however expansion n may yield solution value higher candidates optimistic values allowing candidates discarded without expansion
thus selecting single node highest optimistic value optimal respect
number nodes expanded maximizes number nodes may pruned
without expansion multiple nodes maximize optimistic value least one
must expanded search terminate search
terminate expansion node leads node value equal optimistic
value
many cases important consider number nodes explored
rather number nodes expanded node explored evaluated
every time node expanded children explored many children
may pruned however never expanded addition minimizing number
nodes expanded form best first search minimize number nodes
explored within constraint nodes equal optimistic values
possible anticipate one select order minimize number nodes explored
due strategy employs distribute operators beneath nodes
nodes opuso expands best first search highest optimistic
value opuso allocates fewer active operators node higher optimistic value
node lower optimistic value number nodes examined node


fian efficient admissible unordered search


initialize list called op en unexpanded nodes follows
set op en contain one node start node
b set active set operators
c set state start state
initialize best best node examined far
op en empty exit successfully solution represented best
remove op en node n next node expanded
initialize n active set containing operators yet examined called
remainingoperators
initialize set nodes called n ewn odes contain descendants n
pruned
generate children n performing following steps every operator n active
generate n node n state set state formed application
n state
b value n greater value best
set best n
ii prune search tree removing op en nodes x
optimisticv alue x x active less value best
c add n n ewn odes
set n mostrecentoperator
node n n ewn odes pruning rules determine sole remaining goal state accessible n operators remainingoperators prune
nodes search tree n search tree n follows
remove n n ewn odes
b remove n mostrecentoperator remainingoperators
allocate remaining operators remaining nodes processing node n
n ewn odes turn follows time selecting previously unselected node minimizes optimisticv alue n remainingoperators
remove n mostrecentoperator remainingoperators
b set n active remainingoperators
perform optimistic pruning adding remaining nodes op en processing
node n n ewn odes turn follows
optimisticv alue n n active greater value best
add n op en
go step

figure opuso



fiwebb

n expanded equals number active operators n hence number nodes
examined nodes expanded minimized within constraints use
information derived current state operators
active state
however best first minimizes number nodes expanded may
storage optimal due large potential storage overheads storage overhead
concern depth first rather best first traversal may employed cost
potential increase number nodes must expanded depth first search
employed nodes added op en order optimistic value step
ensure nodes open single depth expanded best first manner
benefits outlined
relation previous search
opuso viewed amalgamation fss narendra fukunaga
hart nilsson raphael fss performs branch bound search unordered
search spaces traversing search space visit state dynamically organizing search tree maximize proportion search space placed
unpromising operators however fss requires values states search
space monotonically decreasing value state cannot increase
operator application opuso generalizes fss employing actual
values states optimistic evaluation nodes search tree manner similar
consequence two minor constraints upon values states
optimistic values nodes search spaces opuso search
requirements
least one goal state g node n g lies node n search
tree optimistic value n lower value g
states maximal value goal states
follows opuso wider applicability fss
opuso differs fss integrating pruning mechanisms optimistic
pruning search process facility crucial searching large search spaces
encountered machine learning
innovation opus use restricted set operators
available node search tree enable focused pruning would otherwise
case may circumstances would possible reach goal
state node n application operators active
n pruning rules able take account active operators provide pruning
contextpruning would otherwise possible similarly set active
operators used calculate concise estimate optimistic value
would otherwise possible
opuso differs manner dynamically organizes search tree
maximize proportion search space placed unpromising operators
differs relies upon value node equivalent


fian efficient admissible unordered search

sum costs operations lead node whereas opus allows method
determining nodes value
rymon discusses dynamic organization search tree admissible search
unordered search spaces purpose altering topology data structure se tree produced contrasts use dynamic organization search
tree opuso increase search efficiency
opus non admissible search
pointed although opus designed admissible
search applied non admissible pruning rules may used
non admissible search may useful efficient heuristic search required
non admissible heuristic search strategies embed heuristics search technique
example beam search relies upon use fixed maximum number alternative options
considered stage search heuristic prune
n best solutions stage search precise implications heuristic
particular search task may difficult evaluate contrast use opus
non admissible pruning rules places non admissible heuristic clearly defined rule
may manipulated suit circumstances particular search
another feature opuso stages available best solution encountered date search means search terminated
time terminated prematurely current best solution would returned
understanding solution may optimal employed
context may desirable employ best first search opening nodes highest
actual opposed optimistic value first assumption lead
early investigation high valued nodes
complexity efficiency considerations
opus ensures state examined unless identical states
formed different combinations operator applications similar search tree organization strategy fixed order search differs however instead placing
largest subsection search space highest ordered operator second
largest subsection second highest ordered operator whenever pruning
occurs largest possible proportion search space placed pruned node
hence immediately pruned
n operators active node e expanded search tree
including node contain every combination number operators
application none operators e thus search tree including
e contain n nodes exactly half n label including single
operator opus ensures operator pruned node e expanded
nodes containing removed search tree e never examined
except course node reached single application must examined
order determine pruned thus search tree node almost
exactly halved single operator pruned subsequent operator pruned
node reduces remaining search tree proportion thus size


fiwebb

remaining search tree divided almost exactly p p number operators
pruned
contrast number nodes pruned fixed order search depends upon
ranking operator within fixed operator ranking scheme highest
ranked operator proportion search tree pruned opus
general operator pruned nodes whose labels include operator
combination exclusively lower ranked operators pruned effect illustrated
figure pruning c removes c search tree thus
nr nodes immediately pruned search tree n number
operators active node expanded r ranking within operators
operator pruned highest rank contrasts n
nodes pruned opus
however difference number nodes explored two strategies
quite great analysis might suggest assuming availability reasonable
optimistic pruning mechanism fixed order search prune operator every time
examined deeper search tree combination higher ranked operators
thus figure eventually examined pruning would occur nodes
b c c b c thus b c c b c would pruned
search tree words fixed order search operator pruned
considered combination lower ranked operator considered
every combination number higher ranked operators r combinations
higher ranked operator follows fixed order search considers many nodes
opus single operator pruned thus operator pruned
node n opus explores r less nodes n fixed order search
rank order operators pruned tend grow number operators
grows follows average case advantage accrued use opus
grow exponentially number operators grows opus tend greatest
relative advantage largest search spaces
note opus able guarantee maximal possible pruning
occurs single pruning action example opus used
search space subsets set items determined superset
set node may solution items active current
node supersets contain items active may explored elsewhere
search tree could prune supersets could perform
pruning opus might claimed schlimmers search method
performs pruning recalled prevent pruned nodes
generated elsewhere tree rather ensures nodes pruned
generated opus armed suitable pruning rules able prune
nodes encountered opus maximizes pruning performed within constraints
localized information access
however constraint provided active operators prevents opus
performing pruning enables perform pruning would otherwise possible necessary considering whether prune
node determine whether nodes reached active operators may contain
solution thus continue example subset search even supersets set


fian efficient admissible unordered search

current node n potential solutions still possible prune search tree
n supersets potential solutions contain items active
n schlimmers allow pruning context
illustrate effect let us revisit search space examined figures even
though search space c pruned optimal pruning cannot take
account optimistic evaluations nodes mechanism
information communicated optimistic evaluation function
actually exploring space node evaluated defeats purpose
optimistic evaluation example evaluating optimistic value node
optimistic evaluation function cannot return different value would case
c pruned contrast optimistic evaluation function employed
opuso take account taking active operators current node
consideration optimistic evaluation function described section
often possible use information particular operators available
search tree node substantially improve quality optimistic evaluation
node
noted employ backtracking guarantee minimize number nodes expanded depth first search
poor node chosen expansion depth first search system stuck
explore search space node return explore alternatives
guarantee poor selection unless optimistic evaluation function
high enough accuracy prevent need backtracking follows
requires backtracking guarantee minimize number nodes
expanded thus opus heuristic respect minimizing computational complexity
depth first search
storage requirements opus depend upon whether depth breadth bestfirst search employed depth first search employed maximum storage requirement
less maximum depth search tree multiplied maximum branching factor however breadth best first search employed worst case storage
requirement exponential stage search storage requirement
storing frontier nodes search number frontier nodes cannot exceed
number leaf nodes complete search tree search operator may
applied subset selection pruning number leaf nodes
n n number operators assertion justified follows
order operators considered invariant nodes reached via last operator considered leaf node search admissible last operator must
considered every combination operators n combinations
operators order operators considered alter number
leaf nodes absence pruning search limit number
applications single operator sub multiset selection upper limit
potential storage requirements
irrespective storage requirements worst case opus explore
every node search space occur pruning possible search
operators applied per solution number nodes search space
equal n n number operators thus worst case computational


fiwebb

complexity opus exponential irrespective whether depth breadth best first
search employed
opus clearly inappropriate terms computational breadth
best first search storage requirements search substantial proportions search space cannot pruned domains substantial pruning
possible however average case complexity computational storage may turn
polynomial experimental evidence indeed case machine
learning tasks presented section
search efficiency opus might improved
noted section opus able guarantee
maximum possible amount pruning performed noted one restriction upon
amount pruning performed localization inherent use active operators
localization allows pruning would otherwise possible
potential restrict number supersets set operators pruned
node pruned may value developing mechanisms enable
pruning propagated beyond node pruning action occurs
sub tree node
another aspect positive negative aspects type
information returned pruning mechanisms mechanisms allow pruning
branch search tree long least one goal branch
contrasts alternative strategy pruning branches lead
goal strategy used beneficial maximizes amount pruning
performed however possible branch containing goal could
found little exploration pruned favor branch containing goal
requires extensive exploration uncover potential gain augmenting
current pruning mechanisms means estimating search cost uncovering
goal beneath branch tree

evaluating effectiveness opus
theoretical analysis demonstrated opus explore fewer nodes fixed order
search magnitude advantage increase size search
space increases however precise magnitude gain depend upon extent
distribution within search tree pruning actions interest
number distinct elements opus includingoptimistic pruning
pruning pruning addition optimistic pruning dynamic reorganization
search tree maximization proportion search space placed nodes
low optimistic value following experiments evaluate magnitude advantage
opus obtained real world search tasks explore relative contribution
distinct elements opus
end opuso applied class real search tasksfinding pure conjunctive
expressions maximize laplace accuracy estimate respect training set
preclassified example objects example search task cn purports
heuristically approximate clark niblett forming disjuncts disjunc

fian efficient admissible unordered search

tive classifier machine learning systems employed opuso manner develop
rules inclusion sets decision rules webb decision lists webb
b current experiments performed cover learning system
default performs repeated search pure conjunctive classifiers within cn covering develops disjunctive rules extended search disjunctive
rules used experiments makes difficult compare alternative search
two alternative different pure conjunctive
rules first disjunct subsequent search explore different search spaces
numerous efficient admissible search exist developing classifiers
consistent training set examples two classic purpose
least generalization plotkin version space mitchell
least generalization finds specialized class description
covers objects training set containing positive examples version space finds class descriptions complete consistent respect training
set positive negative examples hirsh generalized version space
class descriptions complete consistent within defined
bounds training examples least generalization version space
usually require strong inductive bias class description language restriction
types class descriptions considered useful class descriptions
mitchell se tree learning rymon demonstrates admissible search
set consistent class descriptions within complex class description languages
may usefully employed least generalization version space oblow
describes employs admissible search pure conjunctive terms
within heuristic outer search k dnf class descriptions consistent
training set
however many learning tasks desirable consider class descriptions
inconsistent training set one reason training set may contain
noise examples inaccurate another reason may possible accurately describe target class available language expressing class descriptions
case necessary consider approximations target class reason
training set may contain insufficient information reliably determine exact
class description case best solution may approximation known
incorrect strong evidence level error low
clearwater provost segal etzioni use admissible fixedorder search explore classifiers inconsistent training set however
admissible search clearwater provost computationally feasible large
search spaces segal etzioni bound depth search space considered
order maintain computational tractability smyth goodman use optimistic
pruning search optimal rules structure search ensure states
searched multiple times previous admissible search
employed machine learning classifiers inconsistent training
set maximize arbitrary preference function following experiments seek
demonstrate search feasible opus
allowed class description may inconsistent training set
helpful employ explicit preference function function applied


fiwebb

class description returns measure desirability evaluation usually take
account well description fits training set may include bias toward
particular types class descriptions example preference syntactic simplicity
preference function expresses inductive bias mitchell
opuso may employed admissible search contexts provided search space
defined may traversed finite number unordered search operators
example opuso may employed search class description language
pure conjunctive descriptions examining search space starting general
possible class description true employing search operators effect
conjoining specific clause current description search may performed
arbitrary preference function provided appropriate optimistic evaluation functions
defined
next section describes experiments opuso applied manner
search task
pure conjunctive expressions consisted conjunctions clauses form attribute
value attributes two values language expressive
language allowing conjunctions clauses form attribute value indeed
equivalent expressiveness language supports internal disjunction example respect attribute values x z language restricted
conjunctions equality expressions cannot express x whereas language restricted
conjunctions inequality expressions express x expression z
internal disjunctive michalski terms x equivalent z
noted
attributes two values search space conjunctions inequality expressions far larger search space conjunctions equality
expressions attribute size search space multiplied n
former n latter n number values attribute
software employed experimentation used search smaller
search spaces equality expressions effects demonstrated
following experiments
search starts general expression true operator performs conjunction current expression term v attribute v
single value attribute
laplace clark boswell preference function used determine goal
search function provides conservative estimate predictive accuracy
class description e defined
value e

poscover e
poscover e negcover e noof classes

poscover e number positive objects covered e negcover e
number negative objects covered e noof classes number classes
learning task


fian efficient admissible unordered search

laplace preference function trades accuracy generality favors class
descriptions cover positive objects class descriptions cover fewer
favors class descriptions lower proportion cover negative
higher following study laplace preference function employed
pruning mechanism step opuso pruned sections
search space optimistic values less equal value class description
covered objects solution value higher obtained
class description covered objects rule developed class
optimistic value function derived observation cover specializations expression must subsets cover expression thus specializations
expression may cover positive objects may cover fewer negative objects
covered original expression laplace preference function maximized positive cover maximized negative cover minimized specialization
expression node may higher value obtained positive
cover expression smallest negative cover within sub tree node
smallest negative cover within sub tree node n obtained expression
formed applying operators active n expression n
pruning performed application cannotimprove n n
boolean function true two nodes n n search tree n
child sibling n specialization n may higher value
highest value search tree n inclusive excluding search tree
n function may defined
cannotimprove x neg x neg pos x pos
neg n denotes set negative objects covered description node n
pos n denotes set positive objects covered description node n
cannotimprove n n search n cannot lead higher valued
obtained search specializations n excluding nodes search space
n shown n parent n child node follows
n parent n expression n must specialization expression
n operators available n must available n expression g
specialization neg g neg neg g neg specialization
decrease cover follows specialization n n obtained
applications operators must specialization n obtained application
operators n generalization n identical negative cover
n n generalization n must cover positive objects covered n
therefore n must equal greater positive cover equal negative cover n
consequently must equal greater value follows must possible
reach n node least great value greatest valued node n
without applying operator led n n
next consider case n n siblings follows definition
cannotimprove neg n neg n pos n pos n let operators
led parent node p n n respectively follows
cannot exclude negative objects expressions p excluded
cannot exclude positive objects expressions p excluded


fiwebb

table summary experimental data sets

domain
audiology
house votes
lenses
lymphography
monk
monk
monk
multiplexor f
mushroom
primary tumor
slovenian breast cancer
soybean large
tic tac toe
wisconsin breast cancer

description
medical diagnosis
predict us senators political
affiliation voting record
spectacle lens prescription
medical diagnosis
artificial data
artificial data
artificial data
artificial data requiring disjunctive concept description
identify poison mushrooms
medical diagnosis
medical prognosis
botanical diagnosis
identify lost positions
medical diagnosis


values




objects




classes













































therefore application n effect negative cover
expression may reduce positive cover expression e reached n
sequence operator applications application n cannot expression
lower positive higher negative cover e
cannotimprove function employed prune nodes step opuso

experimental method
search performed fourteen data sets uci repository machine learning
databases murphy aha data sets repository
researcher could time experiments identify capable readily expressed
categorical attribute value learning tasks fourteen data sets described
table number attribute values presented column treats missing values
distinct values space class descriptions opus considers domain
hence size search space examined pure conjunctive rule developed
n n number attribute values thus audiology domain
class description developed search space size columns present
number objects number classes represented data set respectively
search repeated class data set search
objects belonging class question treated positive objects
objects data set treated negative objects search performed


fian efficient admissible unordered search

following search methodsopuso opuso without optimistic pruning opuso
without pruning opuso without optimistic reordering fixed order search
performed clearwater provost rymon schlimmer segal
etzioni webb
optimistic pruning disabled removing condition step opuso
words step performed
pruning disabled removing step opuso
optimistic reordering disabled changing step process node predetermined fixed order rather order optimistic value treatment
topology search tree organized fixed order operators pruned
node removed consideration entire subtree node
fixed order search emulated disabling step b disabling optimistic reordering described
extent specified opuso optimistic pruning
pruning leave unspecified order operators leading nodes
equal optimistic values considered step ambiguities resolved
following experiments ordering operators leading nodes higher actual
values first two operators tied optimistic actual values operator
mentioned first names file describes data selected first
optimistic reordering fixed order search leave unspecified fixed order
employed traversing search space fixed order search representative previous approaches unordered search employed machine learning thus
important obtain realistic evaluation performance ten alternative random
orders generated employed fixed order search task due
high variability performance different orderings would desirable
explore ten alternative orderings infeasible due tremendous
computational demands comparison optimistic reordering
considered less crucial used solely evaluate effectiveness one aspect
opuso thus due tremendous computational expense
single fixed ordering used employing order attribute values
mentioned names file
leave unspecified order nodes equal optimistic
values selected op en best first search directly expanded
depth first search best first search nodes equal optimistic values removed
op en last first order depth first search nodes equal optimistic
value expanded order employed allocating operators step
note fixed order search opuso disabled optimistic reordering conditions used optimistic pruning note fixed order search
ordered topology search tree manner depicted figure explored
tree best depth first manner
experimental
tables present number nodes examined search experiment
data set total number nodes explored condition indicated


fiwebb

table number nodes explored best first search

data set
audiology
house votes
lenses
lymphography
monk
monk
monk
multiplexor f
mushroom
primary tumor
slovenian b c
soybean large
tic tac toe
wisconsin b c

opuso
















optimistic
pruning

















pruning
















optimistic
reordering















fixed order
mean















execution terminated exceeding virtual memory limit megabytes
one ten runs completed

fixed order search mean ten runs presented tables present
fixed order search number runs completed successfully minimum number
nodes examined successful run mean number nodes examined successful runs
repeated tables standard deviations runs every node
generated step counted tally number nodes explored hyphen
indicates search could completed number open nodes made
system exceed predefined virtual memory limit megabytes asterisk
indicates search terminated due exceeding pre specified compute time
limit twenty four cpu hours comparison longest cpu time taken data
set opuso sixty seven cpu seconds wisconsin breast cancer data
depth first search
noted one pure conjunctive rule developed class
separate search performed rule number searches performed equals
number classes thus audiology data best first search opuso explored
nodes perform admissible searches node search space
two search tasks opuso best first search explore nodes
alternative lenses data opuso explores nodes optimistic reordering
explores monk data opuso explores nodes best ten fixedorder runs different random fixed orders explores nodes possible
outcomes arisen situations two sibling nodes share optimistic
value case two approaches select different nodes expand first one


fian efficient admissible unordered search

table number nodes explored depth first search

data set
audiology
house votes
lenses
lymphography
monk
monk
monk
multiplexor f
mushroom
primary tumor
slovenian b c
soybean large
tic tac toe
wisconsin b c

opuso
















optimistic
pruning

















pruning
















optimistic
reordering















fixed order
mean















execution terminated exceeding cpu hour limit
three ten runs completed

table number nodes explored best first fixed order search
data set
audiology
house votes
lenses
lymphography
monk
monk
monk
multiplexor f
mushroom
primary tumor
slovenian b c
soybean large
tic tac toe
wisconsin b c

runs















minimum















mean

sd































execution terminated ten runs exceeding
virtual memory limit megabytes



fiwebb

table number nodes explored depth first fixed order search
data set
audiology
house votes
lenses
lymphography
monk
monk
monk
multiplexor f
mushroom
primary tumor
slovenian b c
soybean large
tic tac toe
wisconsin b c

runs















minimum















mean

sd































execution terminated ten runs exceeding
cpu hour limit

may turn better choice leading exploration fewer
nodes test plausibility explanation opuso run lenses
data set step altered ensure two siblings equal optimistic value
ordered order employed optimistic reordering
resulted exploration nodes fewer alternative opuso
fixed order run fixed order order attribute declaration data
file determine operator order opuso order order siblings
equal optimistic values numbers nodes explored monk data
opuso fixed order search
notable effect apparent small search spaces
significant suggests effect small magnitude resulting
poor choice node expand two nodes equal optimistic value
expected consider case two nodes n n equal highest
optimistic value v n leads goal whereas n n expanded first
long child n optimistic value greater equal v next node
expanded n n node highest optimistic value
child n optimistic value greater v optimistic evaluation function cannot
good fact n optimistic value v means node n
value greater v thus number unnecessary node expansions due
effect never exceed number times nodes equal highest optimistic
values encountered search
contrast case best first search discussed section opus
heuristic respect minimizing number nodes expanded depth first search


fian efficient admissible unordered search

nonetheless one search task monk data set opuso explore
nodes depth first search alternative optimistic reordering
fixed order search explore nodes respectively
demonstrate heuristic optimal data noted however
single exception depth first search occurs relatively small search
space suggests efficient exploration search space poor choice
node much minimize damage done poor choice even
backtracking case depth first search
five data sets house votes lymphography mushroom primary tumor
soybean large disabling optimistic pruning little effect best first search disabling optimistic pruning large effect depth first search best first
search smallest increase caused disabling optimistic pruning increase
one node lymphography mushroom data sets data sets
possible complete search without optimistic pruning biggest effect
almost fold increase number nodes explored tic tac toe
data depth first search data sets processing could completed
without optimistic pruning smallest increase five fold increase monk
data largest increase fold increase lymphography data
seven data sets house votes lenses monk monk monk f multiplexor
tic tac toe disabling pruning little effect best first depth first
search largest effects fold increases soybean large wisconsin
breast cancer data sets best first search audiology soybean large
wisconsin breast cancer data sets depth first search
apparent data sets
pruning technique little effect long employed
data sets pruning halves amount search space explored
data sets optimistic pruning reduces amount search space explored
thousandths would otherwise explored
effect optimistic reordering highly variable two search tasks bestfirst search lenses data set depth first search monk data set use
actually resulted slight increase number nodes explored discussed
many cases however effect disabling optimistic reordering far greater
disabling optimistic pruning processing could completed without
optimistic reordering three best first search tasks one depth first search
tasks tasks search could completed largest effect best first
search fold increase number nodes explored soybean large data
depth first search tasks search could completed largest
effect fold increase slovenian beast cancer data would
desirable evaluate effect alternative fixed orderings operators
seems optimistic reordering critical general success
one data set monk data depth first search fixed order search
average explores substantially nodes opuso asserted section
average case advantage use opuso opposed fixed order search
tend grow exponentially number search operators increases number
search operators search tasks equal number attribute values


filog advantage

webb




































best first search
depth first search






search space size

figure plot difference nodes explored fixed order opuso search
search space size

corresponding data sets analysis tables reveals relative advantage
opuso data sets fewest attribute values lenses monk
f multiplexor approximately two fold reduction number nodes examined
number attribute values increases relative advantage four
data sets greatest number attribute values audiology mushroom soybean
large wisconsin breast cancer one case depth first search mushroom
data fixed order search terminate one case opuso enjoys fold
advantage lend credibility claim opusos average case advantage
fixed order search exponential respect size search space
illustrated figure figure searches fixed order search terminated
within resource constraints size search space plotted log f
f number nodes explored fixed order search number nodes
explored opuso
seems clear admissible fixed order search practical
many search tasks within scope current technology
interesting observe best first search four artificial data
sets monk monk monk f multiplexor fixed order search often explores
slightly fewer nodes opuso optimistic reordering disabled difference two types search latter deletes pruned operators sets
active operators higher ordered operators whereas former thus
latter prunes nodes search tree pruning operation seems


fian efficient admissible unordered search

counter intuitive increased pruning sometimes lead exploration
nodes understand effect necessary recall pruning prune
solutions search tree long alternative solutions available
artificial data sets question retaining alternative solutions search tree cases
leads slight increase search efficiency alternative encountered earlier
first solution despite minor advantage number artificial data sets
fixed order search opuso optimistic reordering disabled latter enjoys large
advantage data sets processing could completed house
votes data fixed order search explores times many nodes best first
search times many depth first search
seen reason believe average case number
nodes explored opuso polynomial respect search space size
machine learning search tasks numbers nodes explored three largest
search spaces certainly suggestive exponential explosion numbers
nodes examined audiology nodes search space nodes examined soybean large nodes search space nodes examined
mushroom nodes search space nodes examined
interesting little difference number nodes explored opuso
best depth first search data sets surprisingly slightly fewer nodes
explored depth first search three data sets audiology lenses mushroom similar reasons presented context occasional slight advantage enjoyed fixed order search opuso optimistic reordering
disabled cases depth first search fortuitously encounters alternative solutions
found best first search evaluate plausibility explanation opuso
run three data sets question fixed order ordering order operators
equal optimistic values resulting numbers nodes explored audiology
lenses mushroom seen numbers cases lower
numbers nodes explored depth first search case opuso
outperformed best first strategies effect appears small magnitude
thus significant small numbers nodes need explored four
data sets depth first search explores substantially nodes best first search
slovenian breast cancer monk primary tumor tic tac toe

summary experimental
experiments demonstrate admissible search pure conjunctive classifiers feasible opuso types learning task contained uci repository
support theoretical findings opuso general explore fewer
nodes fixed order search magnitude advantage tend grow
exponentially respect size search space
optimistic pruning pruning demonstrated individually provide
large decreases number nodes explored search spaces little
effect others optimistic reordering demonstrated large impact upon
number nodes explored


fiwebb

respect search largest search spaces suggest
average case complexity less exponential respect search
space size

summary future
opus potential application many areas endeavor
used replace admissible search unordered search spaces maintain
explicit lists pruned nodes currently used atms de kleer
may support admissible search number application domains learning
classifiers inconsistent training set previously tackled
heuristic search
addition applications admissible search opus may
used efficient non admissible search application non admissible pruning
rules opuso able return solution prematurely terminated
time although solution may non optimal
availability admissible search important step forward machine learning
studies employed opuso optimize laplace
preference function could used optimize learning bias means
first time possible isolate effect explicit learning bias
implicit learning bias might introduced heuristic search
interaction explicit bias
application opuso provide admissible search machine learning already
proved productive webb used opuso demonstrate heuristic search
fails optimize laplace accuracy estimate within covering frequently
inference better classifiers found admissible search optimize preference function explain quinlan cameron jones
developed theory oversearching
reported herein demonstrated opus provide efficient admissible search pure conjunctive classifiers categorical attribute value data sets
uci repository would interesting see techniques extended
powerful machine learning paradigms continuous attribute value first order logic
domains
demonstrated power pruning issue given
scant attention context search machine learning although presented
context admissible search pruning rules presented equally applicable
heuristic search development pruning rules may prove important
machine learning tackles ever complex search spaces
opus provides efficient admissible search unordered search spaces creating
machine learning system necessary consider search
explicit learning biases search appropriate search
assumed previously must necessarily heuristic techniques
approximating desired explicit biases admissible search decouples two issues
removing confounding factors may introduced search
guaranteeing search uncovers defined target admissible search makes possible


fian efficient admissible unordered search

systematically study explicit learning biases supporting efficient admissible search
opus first time brings machine learning ability clearly explicitly
manipulate precise inductive bias employed complex machine learning task

acknowledgements
supported australian council grateful
riichiro mizoguchi pointing potential application opus truth maintenance grateful mike cameron jones jon patrick ron rymon richard
segal jason wells leslie wells simon yip numerous helpful comments previous
drafts especially indebted anonymous reviewers whose insightful
extensive detailed comments greatly improved quality
breast cancer lymphography primary tumor data sets provided
ljubljana oncology institute slovenia thanks uci repository maintainers
patrick murphy david aha donors providing access data sets used
herein

references
buchanan b g feigenbaum e lederberg j heuristic programming
study theory formation science ijcai pp
clark p boswell r rule induction cn recent improvements
proceedings fifth european working session learning pp
clark p niblett cn induction machine learning

clearwater h provost f j rl tool knowledge induction
proceedings second intl ieee conf tools ai pp los alamitos ca
ieee computer society pres
de kleer j assumption tms artificial intelligence
de kleer j mackworth k reiter r characterizing diagnoses proceedings aaai pp boston
hart p nilsson n raphael b formal basis heuristic determination
minimum cost paths ieee transactions system sciences cybernetics
ssc
hirsh h generalizing version spaces artificial intelligence
lawler e l wood e branch bound methods survey operations

michalski r theory methodology inductive learning michalski
r carbonell j g mitchell eds machine learning artificial
intelligence pp springer verlag berlin


fiwebb

mitchell version spaces candidate elimination rule learning
proceedings fifth international joint conference artificial intelligence
pp
mitchell need biases learning generalizations technical report
cbm tr rutgers university department computer science brunswick
nj
moret b e shapiro h minimizing set tests siam journal
scientific statistical computing
murphy p aha uci repository machine learning databases machinereadable data repository university california department information
computer science irvine ca
murphy p pazzani exploring decision forest empirical investigation
occams razor decision tree induction journal artificial intelligence

narendra p fukunaga k branch bound feature subset
selection ieee transactions computers c
nilsson n j solving methods artificial intelligence mcgraw hill
york
oblow e implementing valiants learnability theory random sets machine learning
pearl j heuristics intelligent search strategies computer solving
addison wesley reading mass
plotkin g note inductive generalisation meltzer b mitchie
eds machine intelligence pp edinburgh university press edinburgh
quinlan j r cameron jones r oversearching layered search
empirical learning ijcai pp montreal morgan kaufmann
reiter r theory diagnosis first principles artificial intelligence

rymon r search systematic set enumeration proceedings kr pp
cambridge
rymon r se tree characterization induction proceedings international conference machine learning san mateo ca
morgan kaufmann
schlimmer j c efficiently inducing determinations complete systematic
search uses optimal pruning proceedings international
conference machine learning pp san mateo ca morgan kaufmann


fian efficient admissible unordered search

segal r etzioni learning decision lists homogeneous rules aaai
smyth p goodman r information theoretic rule induction
databases ieee transactions knowledge data engineering

webb g techniques efficient empirical induction barter c j
brooks j eds ai proceedings third australian joint conference
artificial intelligence pp adelaide springer verlag
webb g systematic search categorical attribute value data driven machine
learning rowles c liu h foo n eds ai proceedings sixth
australian joint conference artificial intelligence pp melbourne world
scientific
webb g generality significant complexity toward alternatives
occams razor zhang c debenham j lukose eds ai proceedings seventh australian joint conference artificial intelligence pp
armidale world scientific
webb g b recent progress learning decision lists prepending inferred
rules spicis proceedings second singapore international conference
intelligent systems pp b b singapore




