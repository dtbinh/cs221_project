journal artificial intelligence

submitted published

datalog ontology consolidation
cristhian ariel deagustini
mara vanina martnez
marcelo falappa
guillermo r simari

cadd cs uns edu ar
mvm cs uns edu ar
mfalappa cs uns edu ar
grs cs uns edu ar

ai r lab institute computer science engineering icic
consejo nacional de investigaciones cientficas tecnicas conicet
universidad nacional del sur uns alem
b cpb baha blanca argentina

abstract
knowledge bases form ontologies receiving increasing attention
allow clearly represent available knowledge includes knowledge constraints imposed domain users particular datalog
ontologies attractive property decidability possibility
dealing massive amounts data real world environments however
case many ontological languages application collaborative environments
often lead inconsistency related issues introduce notion incoherence regarding datalog ontologies terms satisfiability sets constraints
specific conditions incoherence leads inconsistent datalog ontologies
main contribution work novel restore consistency
coherence datalog ontologies proposed kernel contraction
restoration performed application incision functions select formulas
delete nevertheless instead working minimal incoherent inconsistent sets encountered ontologies operators produce incisions non minimal structures called
clusters present construction consolidation operators along properties
expected satisfied finally establish relation construction properties means representation theorem although proposal
presented datalog ontologies consolidation operators applied
types ontological languages description logics making apt used
collaborative environments semantic web

introduction
integration different systems interaction resulting integration led
host pervasive practical challenging opportunities
interesting ones occurs webs collaborative environments e g e commerce
arrival semantic web ontology engineering however
collaboration among systems brings along conflicting pieces information
likely appear knowledge repositories evolve admittedly management
conflicting information important challenging issue faced gomez
chesnevar simari haase van harmelen huang stuckenschmidt sure
huang van harmelen ten teije bell qi liu specially integrating
c

ai access foundation rights reserved

fideagustini martinez falappa simari

knowledge coming different sources black hunter pan baral kraus
minker amgoud kaci knowledge expected exploited
reasoning process context knowledge bases form ontologies becoming useful device provide convenient way represent intensional
extensional knowledge application domain moreover expressive power ontologies allows perform important tasks data integration lenzerini plays
role great importance aforementioned semantic web berners lee hendler
lassila work adopt datalog ontologies family rule ontology
languages cal gottlob lukasiewicz datalog enables modular rule
style knowledge representation represent syntactical fragments first order
logic fol answering boolean conjunctive query bcqs q set
datalog rules input database equivalent classical entailment check
q tractable fragments datalog guarantee termination query answering
procedures polynomial time data complexity first order rewritability moreover ontologies described existential rules generalize several well known description
logics dls particular linear guarded datalog two basic tractable fragments
family strictly expressive whole dl lite family calvanese de giacomo lembo lenzerini rosati guarded datalog strictly expressive
el brandt baader brandt lutz therefore presented
extend directly dls well properties datalog together
expressive power fact keeps syntax closer used relational
databases greater readability make useful modeling real applications
ontology querying web data extraction data exchange ontology data access
data integration
focus two particular arise integration evolution
information systems inconsistency incoherence inconsistency refers lack
theory hand ontological settings incoherence refers set
ontological rules cannot applied without leading violations constraints
imposed knowledge making unsatisfiable incoherence inconsistency
arise automated procedures data integration ontology matching may
serious issues real world applications since standard ontology languages adhere
classical fol semantics classical inference semantics fails presence kind
thus important focus formalization methods address
inconsistency incoherence ontologies able cope users expectations
terms effectiveness procedures query answering meaning
answers potential conflict exists
addresses handling inconsistencies incoherences
may appear datalog ontologies regard propose general framework
aims consolidation datalog ontologies e solving every conflict coherence
consistency consolidation operator takes input possibly
incoherent inconsistent datalog ontology returns another datalog ontology
conflicts amended thus ensuring coherent consistent
usual setting assumption minimal change made say
expected consolidation process changes original ontology little possible
presented use incision functions hansson


fidatalog ontology consolidation

belief revision literature instead operators account
information included conflicts knowledge base work aim capture
consolidation operators consider information included kb solving
conflicts main contributions work following
introduce notion incoherence tailored datalog achieve adapt
setting similar notions description logics look relationship incoherence inconsistency impacts consolidation process
provide set properties expected satisfied consolidation operators
datalog ontologies means postulates postulates provide formal
characterization consolidation operator without focusing consolidation
process actually performed thus providing formal comparison framework
consolidation operators postulates consider intuitions classic belief
revision nevertheless adapted datalog ontological setting
could adapted suit ontological languages meaning
two versions one addressing incoherence another one inconsistency
present complete construction consolidation operators take possibly
incoherent inconsistent datalog ontology gives consistent
coherent one noteworthy characteristic operators involves two
steps first considering incoherence conflicts solving inconsistency
conflicts latter step helping improve final terms information
needs deleted solve conflicts
study relationship formal properties operator
construction propose demonstrating equivalent thus shows
consolidation operator satisfying properties corresponds construction
introduced work
organized follows section introduce necessary notions
datalog belief revision next though inconsistency incoherence related
two distinct setting ontological knowledge bases
particular clear separation intensional extensional knowledge
therefore section discuss two notions datalog ontologies relate
reasons need treated combination separately
section present properties ontology consolidation operator must
satisfy section introduce process used restore consistency coherence
datalog ontologies relate presented process given properties means
representation theorem next present complete example depicting entire
consolidation process finally sections discuss related work different
areas artificial intelligence database theory provide conclusions future
lines respectively

preliminaries background
facilitate reading begin introducing notions datalog belief
revision needed rest


fideagustini martinez falappa simari

preliminaries datalog
first recall basic notions datalog ontologies used
see cal et al details datalog extends datalog allowing existential
quantification rule heads together extensions enumerate
limiting interaction elements order achieve tractability
assume domain discourse datalog ontology consists
countable set data constants countable set nulls n place holders unknown
values countable set variables v assume different constants represent
different values unique names assumption distinguish constants variables
adopt standard notation logic programming variable names begin
uppercase letters constants predicate symbols begin lowercase letters
assume relational schema r finite set predicate symbols simply predicates term constant null variable atom form p tn
p n ary predicate tn terms atom ground iff terms
constants let l first order language r l lr denotes
sublanguage generated r database instance r finite set atoms predicates r terms n homomorphism constants nulls variables
mapping h n v n v c implies h c c ii
c n implies h c n iii h naturally extended atoms sets atoms
conjunctions atoms
given relational schema r tuple generating dependency tgd first order
formula form xy x z x z x x z conjunctions atoms r called body denoted body head denoted head
respectively consider database relational schema r tgd r
form x z x z applicable exists homomorphism
h maps atoms x atoms let applicable h
homomorphism extends h follows xi x h xi h xi
zj z h zj zj zj fresh null e zj n zj occur zj
lexicographically follows nulls already introduced application adds
atom h x z already application say
satisfied chase database set tgds denoted chase
exhaustive application tgds cal et al breadth first level saturating fashion leads possibly infinite chase important
remark bcqs q evaluated chase e
q equivalent chase q cal et al
negative constraints ncs first order formulas form x x
x conjunction atoms without nulls head truth constant false
denoted nc satisfied database set tgds iff
exist homomorphism h maps atoms x every
tgd satisfied e atoms body cannot true together
equality generating dependencies egds first order formulas form
x x xi xj x conjunction atoms xi xj variables x egd satisfied database r iff whenever exists
homomorphism h h x holds h xi h xj work


fidatalog ontology consolidation

focus particular class egds called separable cal et al intuitively
separability egds w r set tgds states egd violated atoms
contained reason violation application tgds e
egd e violated apply tgds database egd
violated separability standard assumption datalog ontology one
important features family languages focus decidable cal
lembo rosati actually tractable fragments datalog
ncs egds play important role matter conflicts datalog ontologies
fact present work ensure neither ncs egds
violated resulting ontology important remark note restriction
separable egds makes certain cases conflicts considered
proposal treatment cases though interesting technical point view
outside scope work since focus tractable fragments datalog
usual case literature general universal quantifiers tgds
negative constraints egds omitted sets dependencies constraints
assumed finite presented different ways expressing
knowledge datalog ready formally define datalog ontologies
definition datalog ontology datalog ontology kb
e nc consists database instance finite set ground atoms without
nulls set tgds set separable egds e set ncs nc
otherwise explicitly said clear context refer
component kb set constraints ontology without distinguishing
dependencies constraints given database r set constraints
e nc set denoted mods set
databases b b every formula satisfied following
example shows simple datalog ontology ontology describes knowledge
therapy psychology domain
example datalog ontology

therapy charlie dating kate charlie




therapist kate belongs g charlie






therapy patrick belongs g ed





belongs g kate







nc treating p dating p
kb


e treating p treating p








therapy p patient p




therapist belongs g leads g




leads g belongs g p treating p



treating p therapist













































set tgds expresses dependencies tgd states person p
therapy p patient establishes therapist belongs group


fideagustini martinez falappa simari

g leader group nc states patient cannot dating
therapist egd states every patient treatment one therapist
following classical notion consistency say consistent datalog ontology
non empty set
definition consistency datalog ontology kb consistent iff
mods say kb inconsistent otherwise
example consider datalog ontology example ontology clearly

inconsistent database instance clearly model since least tgd
applicable superset satisfies tgds constraints time instance tgds applicable creating atom
leads kate g making applicable resulting atom treating kate charlie
together dating kate charlie already violate nc
therapist dating one patients
rest otherwise explicitly stated kb denote datalog
ontology e nc database instance set
tgds e set separable egds nc set ncs
background belief revision
establishing origins scientific ideas difficult task sometimes controversial nevertheless could argued origins belief change theory go back
work isaac levi discussed concerning field
william harpers proposal rational way interrelate belief change operators harper however main advances belief change theory came
carlos alchourron david makinson studied changes legal codes alchourron makinson peter gardenforss introduced rational postulates
change operators gardenfors three authors produced foundational containing became known agm model alchourron gardenfors
makinson core contribution agm model presentation
general formal framework study belief change today work
considered cornerstone belief change theory evolved
since introduction agm model different frameworks belief dynamics
respective epistemic proposed epistemic model corresponds
formalism beliefs represented providing framework different
kinds operators defined agm model conceived idealistic theory
rational change epistemic states represented belief sets sets sentences
closed logical consequence commonly denoted boldface epistemic input
represented sentence agm model three basic change operators defined
expansion contraction revision rest section whenever use term
consistent inconsistent refer traditional notion inconsistency knowledge
base let k belief set change operations follows


fidatalog ontology consolidation

expansions expanding k sentence possibly larger set
infers intuitively belief hopefully consistent given epistemic state
directly added k
contractions contracting k possibly smaller set
infer unless tautology
revisions revising k set neither extends part
set k general fallacy consistently inferred
revision k
great importance agm comes providing axiomatic characterizations contraction revision terms rationality postulates rationality postulates regard
operators black boxes characterizing explaining
words behavior constrained regard inputs basic cases
without describing internal mechanisms used achieving behavior crucial
say contraction revision operators obtained via constructive
approaches agm contractions realized partial meet contractions
selection among maximal subsets k imply via levis
identity gardenfors associated revision operations called partial meet revisions
obtained another possible contraction selection among
minimal subsets k contribute make k imply safe contraction alchourron makinson general variant known
kernel contraction introduced later hansson shown safe
contractions kernel contractions equivalent partial meet contractions hence
agm contraction hansson
particularly interesting characteristic kernel contraction may concerned
changes symbolic level since suitable applied belief bases set
sentences closed consequence relation well belief sets thus matters
beliefs actually represented happen agm
studies changes knowledge level since uses belief sets distinction
knowledge symbolic level proposed allen newell according newell
knowledge level lies symbolic level latter used somehow represent
former belief bases different symbolic content may represent
knowledge importance although statically equivalent
represent beliefs equivalent belief bases could dynamically different
choose use working directly kernel contraction
besides three basic operations mentioned years additional operations
developed belief revision achieve different behaviors instance
belief base inconsistent removal enough sentences lead consistent
state additional operation called consolidation consolidation belief base
k denoted k see hansson focus last operation
inherently different contraction revision since ultimate goal obtain
consistent belief base possibly inconsistent one without given epistemic
input rather revising knowledge base specific formula removing
particular formula consolidation k obtained natural way belief


fideagustini martinez falappa simari

bases contracting falsum e k k represents contraction
operator process restores consistency attending every conflict k hansson

incoherence inconsistency related datalog
ontology consolidation
obtaining consistent knowledge inconsistent knowledge base
natural many computer science fields knowledge evolves contradictions likely
appear inconsistencies handled way affect
quality information obtained database
setting consistent query answering cqa repairing relational databases
inconsistency tolerant query answering ontological languages arenas bertossi
chomicki lembo lenzerini rosati ruzzi savo lukasiewicz martinez
simari often assumption made set expresses semantics
data component internal conflict set constraints
constraints subject changes time means first set
satisfiable sense application inevitably yield consistency
second assumption must case conflicts come
data contained database instance part ontology
must modified order restore consistency although reasonable assumption
make specially case single ontology work focus
general setting consider data constraints change time
become conflicting general scenario knowledge evolves ontology
represents data related issues appear constraint related ones
argue important identify separate sources conflicts
datalog ontologies previous section defined inconsistency datalog
ontology lack operational point view conflicts appear
datalog ontology whenever nc egd violated whenever body
one constraint mapped atoms atoms obtained
application tgds beside conflicts
focus relationship set tgds set ncs egds
could happen subset tgds cannot applied without leading
violation ncs egds note case clearly data
database instance database tgds applicable
inevitable produce inconsistent ontology issue related unsatisfiability
concept ontology known description logics community
incoherence flouris huang pan plexousakis wache schlobach cornet
borgida beneventano bergamaschi kalyanpur parsia sirin hendler
schlobach huang cornet van harmelen qi hunter incoherence
particularly important combining multiple ontologies since constraints
imposed one data could possibly represent conflicting
application hand clearly notions incoherence inconsistency highly
related fact flouris et al work establish relation incoherence
inconsistency considering incoherence particular form inconsistency


fidatalog ontology consolidation

later section present complete definition incoherence datalog
concept unsatisfiability sets tgds nevertheless sufficient
know proposed notion incoherence states given set unsatisfiable
constraints possible set atoms kb consistent
ontology time tgds applicable means
datalog ontology consistent even set constraints incoherent long
database instance make dependencies applicable hand
datalog ontology inconsistent even set constraints satisfiable
e g kb tall peter small peter tall x small x empty
set dependencies trivially satisfiable thus ontology coherent ontology
nevertheless inconsistent
formalizing notion incoherence use datalog setting
need identify set atoms relevant given set tgds intuitively say
set atoms relevant set tgds atoms set
application generates atoms needed apply tgds e
triggers application every tgd
definition relevant set atoms set tgds let r relational
schema set tgds possibly existentially closed non empty set
atoms r say relevant iff form
xy x z x z holds chase xy x
clear context singleton set relevant
say atom relevant
example relevant set atoms consider following constraints

supervises x supervisor x
supervisor x makes decisions x leads department x
employee x works x
consider set supervises walter jesse makes decisions walter employee jesse
set relevant set atoms set constraints since
directly applicable becomes applicable apply e
chase entails atom supervisor walter together makes decisions walter
triggers
however set supervises walter jesse makes decisions gus relevant
note even though applicable tgds never applied
chase since atoms bodies never generated chase
instance consider tgd chase create atom
supervisor walter nevertheless still cannot trigger since
cannot generate atom makes decisions walter atom makes decisions gus
already match constant value
present notion coherence datalog adapts efforts made
dls schlobach cornets flouris et al conception


fideagustini martinez falappa simari

coherence notion satisfiability set tgds w r set
constraints intuitively set dependencies satisfiable relevant set
atoms triggers application dependencies set produce
violation constraint nc e e tgds satisfied along ncs
egds kb
definition satisfiability set tgds w r set constraints let r
relational schema set tgds n nc e r set
satisfiable w r n iff set possibly existentially closed atoms r
relevant mods n say unsatisfiable w r
n iff satisfiable w r n furthermore satisfiable w r nc e iff
unsatisfiable w r n n nc e
rest sometimes write set tgds un satisfiable omitting
set constraints context particular ontology
fixed set constraints nc e since set tgds satisfiable w r nc e
satisfiable w r subset hand set tgds unsatisfiable
w r subset nc e unsatisfiable w r whole set constraints
example unsatisfiable sets dependencies consider following constraints

nc risky job p unstable p
dangerous work w works w p risky job p
therapy p unstable p
set satisfiable set tgds even though simultaneous application
may violate formula nc e hold every relevant
set atoms consider example relevant set dangerous work police
works police marty therapy rust relevant set however
mods nc e satisfiable
hand example unsatisfiability consider following constraints
nc sore throat x sing x
rock singer x sing loud x sing loud x sore throat x
rock singer x sing x
set unsatisfiable set dependencies application tgds
relevant set atoms cause violation instance consider
relevant atom rock singer axl application rock singer axl
causes violation considered together therefore
mods rock singer axl nc e note set relevant atoms
cause violation
ready formally define coherence datalog ontology intuitively
ontology coherent subset tgds unsatisfiable w r
constraints ontology


fidatalog ontology consolidation

definition coherence ontology kb coherent satisfiable
w r nc e kb said incoherent iff coherent
example coherence consider sets dependencies constraints defined ex

ample arbitrary database instance see datalog ontology
kb nc e coherent kb nc e incoherent
considering incoherence set tgds important consolidation process
datalog ontologies since treated appropriately within consolidation process
incoherent set tgds may lead trivial solution removing every single relevant
atom worst case entire database instance may adequate
particular domains seem desirable outcome general case
looking definitions see close relationship
concepts incoherence inconsistency fact inferred definitions
incoherent kb induce inconsistent kb database instance contains
set atoms relevant unsatisfiable sets tgds captured
following proposition proofs presented appendix
proposition kb incoherent exists relevant
unsatisfiable set u kb inconsistent
instance relationship consider following representative example
example relating incoherence inconsistency consider following ontology

kb


sing simone rock singer axl sing loud ronnie




fans ronnie rock singer ronnie rock singer roy




manage band richard








nc sore throat x sing x




private life x famous x



e

























manage x manage x z z






rock singer x sing loud x
sing loud x sore throat x
fans x famous x
rock singer x sing x
fans x private life x

















































hinted previously example set rock singer axl
unsatisfiable set tgds u rock singer x sing loud x
sing loud x sore throat x rock singer x sing x since relevant
u conditions proposition fulfilled indeed ontology kb
inconsistent since violated
set constraints one presented example may appear consider scenarios components ontology evolve perhaps collaboratively


fideagustini martinez falappa simari

maintained pool users long constraints added incoherence
may arise particular scenario would seem sensible identify modify
somehow set incoherent constraints make satisfiable instead deleting
information ontology proceed solve remaining inconsistencies could beneficial define consolidation processes
changes performed achieve coherence given higher priority changes needed
consistency possible address present twofold proposal consolidation datalog ontologies obtain kb begin addressing issues
component w r components e nc original ontology obtain
coherent set constraints giving tgds necessary address
arising component obtaining one consistent
e nc next section characterize means set postulates
consolidation operator takes account considerations

characterizing consolidation postulates datalog ontology
consolidation operators
belief revision one main areas deals defined principled methods solve
incoherences inconsistencies explained section common characterize
change operators means postulates properties operators must satisfy section introduce set postulates objective characterizing
consolidation operators datalog ontologies start briefly defining scenario
underlying consolidation process introducing characteristics sets formulas focus friedman halpern

defining consolidation environment
depending type knowledge base two main streams work belief
revision one hand works sets formulas closed
consequence relation called belief sets alchourron et al known
belief revision literature coherence model hand option
choose belief bases katsuno mendelzon fuhrmann hansson
falappa kern isberner simari e non closed sets formulas
referred foundational model
opposite traditional closed world assumption found established areas
relational databases one important characteristic datalog open world
assumption unknown data represented means null values consequence
generation information language application rules susceptible
infinite cal gottlob kifer seems make foundational
model appealing choice working setting therefore consolidation
datalog ontologies chosen follow foundational model model
epistemic state possibly incoherent inconsistent datalog ontology


fidatalog ontology consolidation

expected properties consolidation operator postulates
present set properties consolidation operator datalog ontologies
must satisfy use following notation rest let kb
original datalog ontology consolidated e nc
kb denotes datalog ontology kb resulting consolidation kb
consolidated components kb respectively
necessary differentiate kbs subscripts cases given kb denote
consolidation kb di
ready introduce ontology consolidation postulates ocp expected
satisfied consolidation operators let set datalog ontologies
datalog ontology consolidation operator function must
satisfy following properties
ocp inclusion
consolidation process includes resulting ontology formulas belonging original ontology
ocp consistency kb consistent
ontology obtained consolidation process must consistent e
negative constraints equality generating dependencies
violated apply tgds atoms therefore
mods
ocp coherence kb coherent
ontology obtained consolidation process must coherent e
must satisfiable respect nc e
ocp minimality kb kb coherent consistent holds
kb kb
coherent consistent ontology obtained original ontology strictly contains consolidated ontology
postulates presented inspired properties proposed hansson konieczny pino perez nevertheless adapted
suit particularities ontological setting datalog particular take
account distinction incoherence inconsistency instance inclusion
direct adaptation hanssons homonymous postulate hansson states
contraction knowledge base necessarily proper subset
original one consistency coherence hand adapting
setting konieczny pino perezs postulate ic intuitively ask
resulting merging must consistent ask resulting consolidation
consistent coherent minimality postulate added ensure
quality consolidation w r loss information aspect adapted
particular work rather general notion belief revision noted


fideagustini martinez falappa simari

hansson given many names conservatism harman conservativity gardenfors minimum mutilation quine minimal change rott

proposed postulates capture notion changes made respect
original ontology necessary resulting ontology expected
coherent consistent given original ontology consolidation process
removes constraints tgds atoms somehow involved making
original ontology incoherent inconsistent makes way unnecessary
removal made

datalog ontology consolidation operator
previous sections presented examples incoherences inconsistencies
arise datalog ontologies additionally stated properties consolidation
operator satisfy order make adequate changes original ontology regaining
coherence consistency propose construction consolidation operator
addresses incoherence inconsistency datalog ontologies
possible construction consolidation operator
literature belief revision several constructions revision contraction operators studied hansson presents contraction operation belief
bases modeled means application incision functions functions
contract belief base formula taking minimal sets entail called kernels
producing incisions sets longer entail resulting belief base
conformed union formulas removed function
known kernel contraction task restoring consistency known
belief revision literature contraction falsum hansson work
define consolidation process application incision functions nevertheless
instead directly considering minimal inconsistent subsets formulas different
components ontology equivalent kernels work perform incisions structures called clusters martinez pugliese simari subrahmanian prade
lukasiewicz et al groups together related kernels specifically
solve incoherence begin establishing dependency kernels analogous way
define data kernels solve inconsistencies w r
obtain dependency clusters data clusters exploiting overlapping relation
identifying relation among conflicts
first step towards conflict resolution framework calculate minimal coherence consistency conflicts identify possible relations among conflicts
dependency kernels sets tgds unsatisfiable w r set ncs egds
datalog ontology minimal set inclusion sets known minimal unsatisfiability preserving sub tboxes mups minimal incoherence preserving
sub tboxes mips schlobach cornet dl community



fidatalog ontology consolidation

definition
dependency kernels set dependency kernels kb denoted
q
kb set x x unsatisfiable set dependencies
w r nc e every proper subset x x x x satisfiable w r nc e
example dependency kernels consider following sets constraints

datalog ontology kb

nc counselor x regent x




cannot rule x heir x








e advise x k advise x k k k







advise x k counselor x
kb
propose law x k regent x




prince p heir p




son p k king k prince p




counselor c regent c




bastard son x son x



bastard son x k king k cannot rule x









































kb exist two dependency kernels e
q
kb



easy dependency kernels datalog ontology independent
particular component ontology thus obtained looking
component even replace component ontology
empty set atoms dependency kernels ontology empty database
original one


lemma let kb
q
q kb two datalog ontologies
kb kb

addition removal tgds make set unsatisfiable thus making
ontology incoherent solve inconsistencies may need remove atoms components order address data inconsistency well analogously definition
dependency kernels define data kernels minimal subset atoms
makes kb inconsistent


definition data kernels set data kernels kb denoted kb set
x mods x every x x holds mods x


fideagustini martinez falappa simari

example data kernels consider following coherent inconsistent kb pro

posed lukasiewicz et al

kb


directs john directs tom directs tom




supervises tom john works john works tom








nc supervises x manager




supervises x works x directs



e

















directs x directs x
works x employee x
directs x employee x
directs x works x manager x





































kb set data kernels

kb



supervises tom john directs john works john
supervises tom john directs john works tom



directs tom directs tom

know minimal conflicts ontology identify relations among
relation exists group related kernels together structure called
cluster makes possible achieve optimal solution related kernels clusters
obtained overlapping relation defined follows
definition overlapping equivalence let l first order language r l
relational schema lr sublanguage
generated r given lr b lr
say overlap denoted b iff b furthermore given multi set first
equivalence relation obtained
order formulas lr denote
reflexive transitive closure
exploiting overlapping among dependency kernels data kernels define
dependency clusters data clusters respectively
q
definition dependency clusters let kb
set dependency kernels
q

kb let overlapping relation k kb q
quotient set equivkb
q

alence relation obtainedq
qover kb constraint cluster set c
k denote kb set constraint clusters kb

definition data clusters
let kb set data kernels kb let

overlapping relation k kb
quotient set equivalence relation
kb


obtained
kb data cluster set c k denote


set data clusters kb
kb
intuitively dependency cluster groups dependency kernels tgd
common transitive fashion data clusters groups data kernels analogous way


fidatalog ontology consolidation

example dependency clusters data clusters assume kb

q


kb
two dependency clusters kernels grouping first two kernels due
remaining kernel another cluster e
kb

q
q
kb



hand case data clusters


kb



following proposition states since clusters equivalence classes every
kernel included one one cluster
q
q
q
propositionq
kb x x kb x
q


x analogously
kb x



x kb x


x kb x x kb x x
corollary proposition formula kernel included
one cluster
q
corollary corollary

proposition

let








kb

q
q


forq
x x kb
x


qsome kb











x


x

x kb x x analogously
kb



x x kb x x
following lemma shall use shows example
ontological setting datalog leibnizs indiscernibility identicals von leibniz
holds w r clusters datalog ontologies two kbs equivalent
set clusters
ontologies kb kb
lemma
let kb q
kbq
two datalog






q
q




kb
kb
kb
kb

solving conflicts incision functions
identified clusters establish incoherences inconsistencies solved incision function selects formulas deleted
data dependency clusters
definition general incision function general incision function kb
function lr lr lr following conditions holds
sq
q


kb kb kb
q
q
q
x kb kb x holds kb



x kb kb x holds kb


fideagustini martinez falappa simari

q
q
x kb holds x kb exists r x
r satisfies conditions r


x kb holds x kb exists r x
r satisfies conditions r
definition states general incision function selects dependency data
respectively cluster tgds atoms respectively deletion order restore coherence
consistency incision function complies definition used base
consolidation operator however note operator may differentiate
restoring coherence consistency classic literature
belief revision since notion incoherence distinction
rules facts languages propositional logic thus consistency conflicts
appear avoiding need treat incoherences nevertheless ontological setting
datalog opportunity exploiting fact two different although
related kinds conflicts address separately goal finding solution
better suits needs applications rely kind knowledge bases
point trying make knowledge bases form
datalog ontologies important differentiate adequately handle incoherence
inconsistency quality consolidated ontology heavily depends
assuming strive minimal loss process complex setting needs
careful definition constitutes kernel see could happen done
properly consider following example
example influence incoherence consolidation consider kb exam

ple e nc unsatisfiable explained example singleton set rock singer axl nc sore throat x
sing x violated making rock singer axl inconsistent
rock singer axl data kernel data cluster since cannot overlap
kernel verifiable every singleton set relevant dependency cluster thus



kb


rock singer axl



rock singer ronnie

rock singer roy



fans ronnie









consider cluster rock singer axl cluster
rock singer axl rock singer axl






situation holds every cluster kb thus kb kb
example data kernels hence data clusters
computed w r original component case contain unsatisfiable sets
constraints seen example becomes utter importance
atoms relevant unsatisfiable sets case general incision function
inconsistency management technique deletion treat incoherence
conflicts necessarily delete atoms


fidatalog ontology consolidation

proposition let general incision function relevant x
kb

q
kb

clearly corollary proposition every atom relevant
unsatisfiable set remove every atom restore consistency
corollary corollary proposition letq general incision function
holds relevant x kb kb
seen incoherence great influence consolidation treated properly
previously consistency restoration would seem better compute
data clusters retained satisfiable part components lemma
dependency kernels obtained independently component
original ontology unsatisfiable sets violate negative
constraint equality generating
dependency relevant set atoms therefore
q
q
first obtain


use

incision function
kb

dependency clusters select
tgds deleted q
qthen calculate kb application
incision function kb way paying attention constraints
prevail consolidation process
next define constraint incision functions data incision functions
used select candidates deletion original ontology restore coherence
consistency respectively first define incision function dependency clusters
helps solve incoherence constraints
definition constraints incision function constraint incision function kb
function lr lr lr following conditions hold
sq
q
kb kb
q
q
q
x kb kb x holds kb
q
q
x kb holds x kb exists r x
r satisfies conditions r
intuitively constraint incision function takes dependency clusters removes tgds
way resulting kb coherent analogously
constraints
incision functions define data incision functions solve inconsistencies



kb
definition data incision function data incision function function
lr lr lr following conditions hold


kb kb



x kb kb x holds kb


x kb holds x kb exists r x
r satisfies conditions r


fideagustini martinez falappa simari

finally necessary make significant remark regarding usage incision
functions let us first consider following excerpt quoted hanssons
cf p regarding possible parameters passed selection functions
case incision functions choice affects possible outcomes
proof uniformity makes essential use fact selection functions defined remainder sets form pairs
form ha instead defined selection functions follows
non empty subset non empty
empty

would operation similar partial meet contraction respects would possible
hold standard definition allow
thus extending hanssons observation incision functions use consolidation
take sets conflicts arguments incisions formulas
removed two different ontologies set conflicts operator
incision function identical reason operator could
tell difference ontologies since parameter conflicts
exactly however chosen restrict family operators
behaviors instead model operators whose behavior could select removal
formula equal conflicts restricted choice achieve
chosen take ontologies parameters fits application domain
operators exploited formulas conflict could affect
outcome consolidation
presented incision function consider tgds
effect cluster global effect whole knowledge base reason
requirement unlike classic belief revision language used
greater expressivity fact tgd generates multiple inferences instance
framework tgd form xy x z x z possible
infer multiple instances x z
see reason behind choice clearly consider following example
example consider following ontologies


p q





nc p x r x
kb





q x r x








kb








p q








nc p x r x












q x r x
p x x
p x x






















kb set data clusters equal


fidatalog ontology consolidation



kb





kb





p q



use standard take clusters arguments incisions must
remove formula ontologies explained incision
function therefore cannot choose differently argument
nevertheless suppose particular scenario want remove atoms
information help infer case kb remove
p kb take q since kb formula p triggers
tgds thus inferring atoms achieve type behavior necessary pass
ontologies parameters since provides adequate context
cluster contraction consolidation operator
lastly define consolidation operator datalog ontologies represents two
different parts consolidation first coherence restoration component
obtained dependency clusters component original ontology
second restoration consistency component obtained data
clusters w r component obtained applying constraint incision function
original way achieve behavior stated earlier sense
give incoherence resolution higher priority since retain atoms addressing
unsatisfiable sets tgds instead choose follow path cluster contractionbased consolidation operator formally defined follows
definition cluster contraction consolidation operator
let kb datalog ontology constraint incision function data incision
function let kb kb datalog ontology resulting deleting
kb tgds selected cluster contraction consolidation operator
kb defined follows
kb kb kb
kbq
datalog ontology obtained removing
first tgds


q
selected
atoms selected
original
kb
kb
ontology kb important note one hand tgds removed
dependency clusters contain egds ncs hand data
incision function uses kb instead kb atoms conflicts
kb removed data clusters calculated constrains
obtained consolidation
relation postulates construction representation theorem
section introduced properties datalog consolidation operator
must satisfy means following representation theorem establish
relationship set postulates datalog ontology consolidation operator
cluster contraction consolidation operator proposed previous
section follows denote consolidation operator defined definition
correspond arbitrary constraint data incision functions respectively


fideagustini martinez falappa simari

theorem representation theorem operator consolidation cluster
contraction datalog ontology consolidation operator datalog ontology kb
iff satisfies inclusion coherence consistency minimality

complete example datalog ontologies consolidation
introduced operator allows us consolidate datalog ontologies
satisfies set expected properties expressed postulates section
section complete process consolidation datalog ontologies depicted
following example
example consolidation datalog ontologies suppose

coherent inconsistent ontology kb shown figure expresses information
collected certain company






























nc













e
kb


















































boss walter supervises walter jesse
makes decisions walter makes decisions jesse
supervises skyler walter employee walter
charge jesse distribution
charge walter cooking
strike mike

follows orders x makes decisions x
supervises x supervisor x
absent x strike x
charge x charge x
employee x supervised x
supervised x follows orders x
boss x makes profit x
supervises x supervisor
supervises x employee x
supervised x makes decisions x
supervised x work x
work x get paid x
work x charge x
strike x absent x





















































































figure original ontology consolidated
begin first part consolidation process e solving incoherences making set satisfiable obtain first step towards obtaining
dependency clusters dependency kernels kb
q
kb



kernels calculate set dependency clusters kb
q
q

kb


fidatalog ontology consolidation

q
q
q
note overlap among dependency kernels kb kb next
use cluster incision function solve incoherency sake example
assume guide contraction process means quantitative criterion e
choosing among possible incisions ones removes fewer formulas
plausibility among formulas cardinality incisions
following possible incisions e satisfying conditions definition
sets
cluster could remove since two incisions remove
number atoms assume example plausible
thus prefer retain former
cluster remove
particular incision example follows


move next part consolidation process consistency recovery
explained part operator considers tgds effectively
included consolidation particular example
let kb kb calculate data kernels
q

kb
obtain data clusters
q
q

kb
solve inconsistencies need consider sets intersection
kernels included clusters empty instead
analyze possible incisions sets respecting conditions
definition light number atoms deleted plausibility formulas
different possible incisions cluster
remove
remove
remove
remove
sets presented removal induce operator
satisfies postulates thus captured framework nonetheless explained
example choose remove atoms possible
choose remove

datalog ontology consolidation operator contraction
clusters one introduced definition obtain coherent consistent
ontology shown figure


fideagustini martinez falappa simari

kb


boss walter makes decisions jesse




supervises skyler walter employee walter




charge jesse distribution




charge walter cooking




strike mike








nc follows orders x makes decisions x




supervises x supervisor x




absent x strike x



e










































































charge x charge x







employee x supervised x




supervised x follows orders x




boss x makes profit x




supervises x supervisor




supervises x employee x




supervised x work x




work x get paid x



work x charge x

figure ontology resulting consolidation

related work
closely related work work croitoru rodriguez
work authors present consolidation operators used basis definition
semantics inconsistency tolerant ontology query answering datalog
expressive language datalog cal et al case work
work croitoru rodriguez use hanssons incision functions
hansson solve conflicts nevertheless remarkable differences
works well among important ones operators presented
croitoru rodriguez deal inconsistent ontologies acknowledgment
incoherence made shown work
significant impact quality consolidation analysed respect minimal
loss information moreover fact makes even though set postulates
works similar spirit family operators characterized croitoru
rodriguez subset ones characterized due fact setting
consider e inconsistent incoherent ontologies general
since instance operators remove facts tgds croitoru
rodriguezs operators since focus inconsistency
another closely related work one lukasiewicz et al authors define general framework inconsistency tolerant query answering datalog
ontologies notion incision functions nevertheless work focused
enforcing consistency query time obtaining lazy consistent answers inconsistent ontology instead consolidating one clearly process must carried
every query posed system obtain knowledge base


fidatalog ontology consolidation

offline manner knowledge base queried without considering inconsistency issues approaches prove useful depending application domain
additionally one kb used rational assumption conflicts
constraints made therefore notions unsatisfiability
incoherence stated order gain generality chosen drop
assumption treat incoherence well inconsistency ones addition
works croitoru rodriguez lukasiewicz et al several works
solve inconsistency incoherence means adapting approaches belief
revision techniques knowledge representation formalism
propositional knowledge bases
numerous works revision merging propositional knowledge bases see
instance konieczny perez katsuno mendelzon lin mendelzon
liberatore schaerf everaere konieczny marquis konieczny perez
delgrande dubois lang booth meyer varzinczak wassermann
delgrande delgrande jin falappa kern isberner reis simari
provided foundations work fragments first order logics
expected works deep connections remarkable
differences shall see
mentioned throughout work sven ove hansson
provides inspiration foundations work follow akin kernel
contraction several intuitions adapted ontological language datalog
consequence besides treating incoherence provide complete inconsistency
resolution process takes advantage ontological setting exploiting relation
components ontology define coherence consistency
restored classic incision functions introduced hansson produce incision
minimal conflicts however work clusters groupings
kernels thus minimal propose particularization
hanssons incision functions focusing incision functions successfully work
clusters
konieczny pino perez made one main contributions merging
conflicting information work follow intuitions proposed
nevertheless main difference besides obvious one
aims works merging vs consolidation state final merging
consistent presence consistent terminology coherent set
integrity constraints analyze alternative case
respect work lin mendelzon besides difference
focus merging vs consolidation main difference inconsistency
management strategy chosen work conflict solving strategy relies
votes majority establish formulas retained merging instead
chosen introduce particular strategy nevertheless possible adapt
framework use preference relations choose possible incisions
similar way shown example relations indeed designed
comply majority intuition providing votes


fideagustini martinez falappa simari

apply ontology consolidation environment since one ontology thus
obtaining similar strategy
work katsuno mendelzon knowledge base revision
propositional case addressed language used
express facts world constraints imposed kb
nevertheless difference case update kb
consolidation kb arises treatment integrity constraints work
integrity constraints considered invariant updates restore consistency
restricted facts
works delgrande delgrande jin authors present
revising propositional knowledge base set sentences every
sentence set independently accepted inconsistencies
considering whole set main idea follows agm theory differs
necessary alter success postulate suits intuition every
sentence set final revision since set inconsistent
guided principle informational economy characterize revision
plausible worlds among maximally consistent subsets set sentences
parallel datalog ontology environment revising component
ontology solve inconsistencies set sentences inconsistent union
original kb inconsistent nonetheless important difference
works works authors first solve inconsistencies
set sentences decide subset characterize revision
different directly consider inconsistent kb order solve
setting necessary consider union kb
entire set sentences apply consolidation operator
knowledge expressed description logics ontologies logic programs
relational databases
focus knowledge representation formalisms closely related
datalog mainly family description logics baader calvanese mcguinness
nardi patel schneider logic programming lloyd nilsson maluszynski gelfond remarkable work belief revision solve conflicts dls
one qi liu bell agm theory alchourron
et al gardenfors makes work stand
introduce generalizations agm postulates case dls define two
operators knowledge bases formulas weakening satisfy postulates
main difference take account consistency ontologies incoherence treatment provided pointed earlier
incoherence lead extreme weakening information may
take every individual name general concept inclusion
previously mentioned notion incoherence inspired schlobach
cornets work among others authors focus definition
processes capable detecting unsatisfiabilities incoherences dls ontologies introducing complete along empirical analysis nevertheless


fidatalog ontology consolidation

main focus work authors set aside issue recover
coherence conflict detected consider inconsistencies
work presented consolidation process treats incoherence inconsistency
use belief revision techniques thus presented schlobach
cornet could potentially useful regarding implementation operators presented work providing effective way obtaining set kernels
set clusters
black et al propose capable information coming
several dl ontologies order answer queries taking care process incoherence inconsistency agents argumentative capabilities
one personal knowledge base form dl ontology agents use
dialogue games interchange arguments reach agreement answer
certain query thus agents use possible incoherent inconsistent union
ontologies without merging still obtain answer influenced every
ontology play moreover advantage information lost
formula deleted ontologies inferences obtained
superset obtained ontology resulting
consolidation union dl ontologies even though authors argue one
advantage proposed need waste time effort
performing consolidation kb one disadvantage computational complexity
associated argumentative reasoning parsons wooldridge amgoud dunne
wooldridge cecchi fillottrani simari process conducted
query issued online manner even though consolidation process
computationally expensive necessary perform
done offline query answering system becomes available choice one depends highly environment used e
size ontologies used often updates issued kb
critical time consumption system among considerations course
set inferences obtained every may differ
taken account consolidation could suitable
time dependant systems real time systems query intensive systems data
tractability associated consolidated datalog ontology may proven handy
another work worth mentioning kalyanpur parsia horridge sirins
work verses justifications entailments description
logics ontology justification simply precise set axioms ontology responsible
particular entailment kalyanpur et al words minimal set
axioms sufficient produce entailment related use kernels mean
obtain clusters part consolidation strategy used moreover horridge parsia
sattler state justifications important repairing inconsistent ontologies
thus could important definition consolidation processes similar
cluster consolidation least one axioms justifications
entailment removed ontology corresponding entailment longer
holds kalyanpur et al p one main contributions work
definition practical black box e reasoner independent techniques allows us
justifications entailments ontology efficient way evident


fideagustini martinez falappa simari

work verses different direction still benefit findings
particular may possible use developed part implementation
strategy consolidation operators adapting used datalog
dual incoherence inconsistency setting
regarding logic programming several works address
merging knowledge bases expressed logic programs solving inconsistency issues
process instance hue papini wurbel introduce merging process
stable model semantics logic turner hue
et al consider merging strategy pre orders among deletion candidates called
potential removed sets establish particular way obtain preorders instead assume strategy p given pre order defines
p case lin mendelzons work although falls scope
present work certainly adapt framework use similar techniques
choosing incision prevails
another notorious work logic programming field one delgrande schaub
tompits woltran work two different approaches proposed first
one follows arbitration selecting program differs least
w r programs work case unsatisfiable programs
studied similar way consider incoherence leaded unsatisfiable sets tgds
nevertheless consider unsatisfiability certain program concept
union programs furthermore strategy solve unsatisfiability simply
leaving unsatisfiable program consideration merging instead trying
solve conflict somehow second selection
special program p thought constraints guiding merging process
least variations w r programs merging
seen particular instance proposed konieczny perez
area databases one influential works one arenas et al
consistent query answering authors propose model theoretic definition consistent answers query relational database potentially inconsistent
set integrity constraints intuitively consistent answers query set atoms
classical answers query every repair inconsistent database
repair set atoms satisfy set constraints close possible
original database different notions repairs studied literature well
different notions means set atoms close possible original
database proposals repairing inserting deleting tuples
database actually possible actions depend form integrity
constraints expressiveness notion closeness defined via set inclusion
cardinality work arieli denecker bruynooghe however proposes
uniform framework representing implementing different approaches database
repairing minimizing domain dependent distances main idea work
thinking terms different distances express preferences among repairs
leads different preferences applied different scenarios authors
set repairs obtained proposed distance functions deviate
obtained set inclusion furthermore besides insertion deletion entire tuples several domain independent approaches e g cardinality


fidatalog ontology consolidation

complex objective functions proposed wijsen updates
considered primitive theoretical framework bohannon et al present
cost framework allows finding good repairs databases exhibit inconsistencies form violations functional inclusion dependencies allowing
updates attribute values work two heuristics defining constructing repairs equivalence classes attribute values presented
greedy selection least repair cost number performance optimizations explored quite different semantics repairing proposed caroprese
greco zumpano caroprese truszczynski active integrity
constraints aics short aic production rule body conjunction
literals false database consistent whereas head
disjunction update atoms performed body true constraint violated repairs defined minimal sets set inclusion update
actions tuple deletions insertions aics specify set update actions used
restore data consistency hence among set possible repairs subset
founded repairs consisting update actions supported aics considered
works area propose different semantics repairing explicitly implicitly
considering preference relation among set repairs cf andritsos fuxman miller
staworko chomicki marcinkowski greco molinaro
recently area ontology data access obda lembo et al
study adaptation cqa dl lite ontologies called ar abox semantics
work intersection iar semantics presented sound approximation consistent answers semantics consists computing intersection repairs answers
obtained though possibly many ar answers cannot obtained iar semantics latter computationally easy obtain dl lite family
e necessary compute whole set repairs order compute intersection data combined complexity semantics studied rosati
wider spectrum dls rosati presents intractability
query answering el intersection semantics non recursive segment
language proved computable polynomial time recently bienvenu
rosati propose another family approximations cqa dl lite
family k support semantics allows soundly approximate set queries entailed
cqa semantics k subsets database consistently entail q
hand k defeater semantics approximates complete approximations seeking
sets contradict supporters q semantics fo rewritable ontological language standard cq answering fo rewritable well used
conjunction approximate consistent answers
much black et al treatment inconsistencies proposed
semantics related particular queries instead inconsistency whole database
thus attempt obtain final consistent database queried without
considering restrictions furthermore address issues incoherence
inconsistency together instead approaches assume set integrity
constraint correctly defines semantics database instance room
incoherence treat constraints data alike moment removing ignoring
information leads type discuss example


fideagustini martinez falappa simari

techniques may suitable case one single database presence
incoherence set ics case consider several databases together
would lead meaningless empty answers since subset database
could satisfy constraints would case lukasiewicz
et al
related databases field work lin mendelzon
database viewed first order theory without rules ics used ensure
consistency final work konieczny perez presenting ways
solve known database merging synonyms homonyms nonetheless
konieczny pino perezs work consider related set ics
instead set ics used merging process unique choice set
expected performed merge designer unlike lin mendelzon made
assumption consolidation environment set ics conflict free
cholvy introduces another used reason contradictory information framework represented set axioms inference
rules additionally several applications framework introduced
e g solving conflicts among beliefs represented first order databases facts
ground literals rules integrity constraints deduction rules
scenario contradiction obtained application constraints considering several databases together establishes certain parallel case
inconsistency datalog ontology however main difference work lies
strategy inconsistency management process defined work
preference order databases assumed instead chosen restrict
achieve consolidation thus presenting general nevertheless stated
adapt incision functions suit intuition every formula equally
desirable choosing instance preferences ontologies guideline
tasks rather consolidation single ontology obtaining
inconsistency management strategy akin one introduced cholvy
finally meyer lee booth use two well known techniques knowledge
integration propositional case adapted refined expressiveness dls
proposed takes knowledge bases produces disjunctive knowledge
base dkb integration one disadvantage dkbs state
possible options take conflicting knowledge expected exploited
reasoning process rather choosing one thus contrary
final consolidated ontology given definitive final merging moreover
set aside related incoherence integration process

conclusions future work
collaborative work information exchange becoming key aspects almost system thus uttermost importance automatic adequate ways solve
conflicts knowledge evolves collaborative environment incoherence inconsistency prone arise knowledge often represented ontologies
collaboratively built often shared among entities use modify one particular way deal conflicts appear application environments


fidatalog ontology consolidation

try modify information contained ontology order regain coherence
consistency shown achieve consolidation datalog
ontologies introduced concept incoherence datalog ontologies terms
unsatisfiability sets tgds showed relationship classical notion
inconsistency logical theory lacks
proposed construction consolidation operators construction inspired kernel contraction uses incision functions groupings minimal unsatisfiable inconsistent sets called clusters solve conflicts finally stated properties
datalog ontology consolidation operator expected satisfy showed
operators satisfy respective properties obtaining consolidation
datalog ontology coherent consistent minimizing changes
made conflict resolution
final remark notice operators take care incoherences ontology however rare cases ontology designer introduce unsatisfiable
concepts ontology purpose model particular feature application domain case remove incoherence rather
delete atoms triggering clearly since defined setting
mind behavior cannot achieved operators presented nevertheless
modify present suit setting almost straightforward provide
identify whether unsatisfiable set tgds made purpose
future work intend study constructions datalog consolidation
operators first plan change general e operators
formalisms kernel contraction mainly agm theory alchourron
makinson alchourron et al proposed framework
cluster contraction consolidation operators fully constructive depending
application domain may certainly difficult asses effect incisions e
may hard decide among family possible incisions one select
design point view may easier select perform consolidation
additional information formulas knowledge base
preference relation example elicited domain experts general
could easier expert provide guidelines information application
domain hand could modeled preference relation formulas
ontology rather trying single desired incisions direction want
explore constructions exploiting preference relations among formulas
ontologies define different strategies choose formulas delete possibly tailored
particular scenarios mainly plan analyze two different aspects relation
operators preference relations respect ones presented
work different strategies affect behavior
work make point differentiating concept inconsistency
incoherence therefore need focus languages separate extensional
intensional knowledge otherwise two notions indistinguishable
case propositional logic sense choice datalog due desirable
property generalizing several popular languages classical datalog dl lite elh
f logic lite etc even though perform particular analysis
effects nulls proposed solutions consolidation datalog family languages


fideagustini martinez falappa simari

chosen offers wide variety languages high computational tractability
fo rewritable others ptime inference
work pave way continue line next natural step
whether different syntactic semantic properties yield tractability
query answering allow us obtain tractability consolidation
much way happened already area consistent query answering
repairs extensional part kb considered example
rewriting capability value invention plays important role
value invention process controlled general syntactic restrictions order
keep low complexity reasoning tasks mind future
look role processes value invention consolidation datalog
ontologies impact conflicts solved computational
efficiency
currently working implementation operators plan study different techniques used order produce efficient implementation possibly
tailored specific fragments datalog explained introduced
schlobach cornet proven useful regarding aspect since may
provide way calculate kernels datalog ontology thus providing first step
towards incoherence resolution another important work regarding implementation
consolidation operators one wassermann author shows
minimal incision functions knowledge base obtained kernels kb
finding minimal hitting sets reiter several works
area ontology debugging repairs e g halaschek wiener katz horridge
et al way justifications inconsistency exploited reiters
order implement frameworks among others plan study
adequate techniques operators almost direct relation
minimal incision functions reiters minimal hitting sets way may possible adapt reiter techniques attend incoherences inconsistencies moreover
already discussed plan analyze relation cluster incision functions
preference relations regarding implementation hold conjecture relations
exploited refine implementation operators reiters
expansion directed acyclic graph expansion made
breadth first fashion end generates possible values minimal incision
functions acknowledged wassermann kind ordering among formulas
present ordering used choose branch expand words
may possible implement construction operators proposed work
means exploiting reiters hitting sets use preference
relation equivalent incision guide consolidation process
may possible adapt chooses expand branch less
preferred set formulas thus guiding graph expansion process

appendix proofs
proof proposition


fidatalog ontology consolidation

proof consider u u unsatisfiable set dependencies w r
nc e set atoms relevant u
follows definition satisfiability set dependencies w r set
constraints u unsatisfiable exist relevant set atoms
makes mods u e nc otherwise u satisfiable
mods u e nc moreover since u
chase u chase thus nc egd violated chase u
violated chase thus mods e nc e kb inconsistent
proof lemma
proof let kb e nc kb q


e nc twoqdatalog ontologies kb
dependency kernels kb kb dependency kernels kb respectively
q
consider x kb definition x unsatisfiable
set dependencies w r e nc every x x satisfiable w r e nc
since e e nc nc thus holds
x unsatisfiable set dependencies w r e nc every x x
satisfiable w r e nc
q
q
definition q

q x kb since holds arbitrary
kernel kb kb kb
proof proposition
proof focus case dependency clusters omitting theqproof data
clusters analogous consider arbitrary kb
begin showing kernel

q
q part
q
qis part cluster


cluster e x x kb x x kb
x x

obtained directly definition clusters x q

equivalence class equivalence relation obtained kb
clearly x therefore since definition two
equivalence
classes equal disjoint holds
let





x holds x x x since holds
q
q
arbitrary equivalence
class holds x x kb x
q
q
x kb x x

cluster e
q
q exist kernel belong
q
q

x x kb x x x x kb q
arise
q
use equivalence classes definitions x x kb
x x holds

ssince equivalence classes form
partition must holds therefore x x
q
q
x kb x x x
proof corollary


fideagustini martinez falappa simari

q
proof consider
kb q
proposition
x
q
q
q
x
x kb onlyq



x


x x thus
kb
q
q
q
x x kb
x x kb x x



analogously










x
kb






x kb
x x kb x x
proof lemma
q
proof consider x kb x minimal unsatisfiable set tgds w r
nc e since kb kb holds x kb e e nc nc
x unsatisfiable set tgds w r nc e exist x x
x unsatisfiable set
contradict
q tgds w r nc e since otherwise wouldq
hypothesis x kb nc
e
q nc e q
qx kb
since holds arbitrary x kb kb kb
q
q
q
consider
arbitrary x kb xy since
kb
kb

q
q
q
q
q


x kb thus q
equivalent q
kb kb
kb
kb



since




x
likewise consider

arbitrary
x
kb
kb


kb









thus kb kb
equivalent
x kb therefore
kb

kb

proof proposition
q
proof consider x kb relevant x definition
x unsatisfiable w r n e nc definition
fact relevant x mods x n since
singleton clearly
mods x n


definition follows kb definition
kb since cannot overlap kernel singleton
consider incision definition follows kb
kb thus kb
proof corollary
q
proof consider arbitrary since relevant x kb
proposition holds kb thus since holds arbitrary
kb
proof theorem
proof let kb kb two datalog ontologies
kb kb
construction postulates
consider operator defined definition prove satisfies every
postulate theorem let kb kb two datalog
ontologies resulting consolidation kb kb means respectively
ontology
furthermore let kb kb kb kb q

resulting removing tgds selected kb kb let kb kb




fidatalog ontology consolidation

q

set dependency data kernels kb kb respectively kb kb
q
q


sets dependency data kernels kb kb finally let kb kb
q
q


set dependency data clusters kb kb respectively kb kb

sets dependency data clusters kb kb
inclusion
definition kb kb thus
similar way definition kb kb thus

coherence kb coherent
prove kb coherent satisfiable
e nc sufficient minimal conflicts
attended operator e dependency kernel included
q
exists
consider
q
q arbitrary x kb proposition q
q

x definition holds
kbq
kb

x kb x holds kb x exists
x kb x thus
therefore
x
q
e conflict solved since holds arbitrary x kb every
unsatisfiable set included thus satisfiable
e nc e kb coherent
consistency proof analogous coherence
minimality kb kb coherent consistent holds kb
kb

letq
kb coherent consistent let cf



qkb kb
kb cf kb set formulas belong
kernel respectively

suppose
reductio kb skb

definition kb kb

q
q
kb kb kb cf kb cf kb
therefore cf kb cf kb
q
q


since kb kb must exist kb kb kb

kb kb coherent consistent exists
dependency cluster data cluster removal optimal since could
included consolidation rest proof simplicity reasons
consider case belongs dependency cluster made without
loss generality since proof case included data cluster
analogous one presented
q
q
let us consider
kb corollary
kb
q
q
x x kb let x kb incision performed
cluster let r x kb kb formulas removed xqwhen
obtaining kb clearly since kb coherent x kb



fideagustini martinez falappa simari

holds r otherwise
kb make kb incoherent
q
q
besides since r r kb thus r satisfies first two conditions
definition
definition exists set tgds
satisfies first two conditions definition time holds
r
since
kb x kb thus however know
x kb thus
r therefore r
r r absurd coming
original assumption kb kb holds kb kb coherent
consistent kb kb
postulates construction
second part proof consider operator satisfies postulates
theorem let function defined follows
q
q
kb x x x x kb x
kb
let kb kb ontology resulting removing kb
tgds selected let another function defined follows


kb
kb x x x x kb x


define operator follows
kb kb kb
datalog ontology consolidation operator cluster
contraction first prove well defined data incision function
well defined constraint incision function given
prove
well defined e kb kb kb kb
q
q
definition kb x x x x
kb
x
kb
consider
arbitrary
x kb since kb kbq
lemma
q
q
q q
q
kbq


since
x


kb


x

x

thus holds


kb
kb


q
x x kb
q
q
besides since x x kb x thus since x
kb x
kb
since kb kb fact function kb kb
holds x
kb thus x
kb
q
qit follows x kb holds x


kb definition kb
kb
thus kb kb kb kb


fidatalog ontology consolidation

kb

sq
q
kb

follows directly q
definition since every x kb holds
q
x x x kb first condition definition
x

q
q

ey

q

x kb
q
q
q
suppose reductio
exists x kb kb

x kb
q
q
holds
kb

e



x

kb

kb
q
hypothesis kb x thus x therefore
must hold kb extension kb
kb

kb

since holds arbitrary definition
holds minimal unsatisfiable set tgds w r e nc
relevant set atoms holds mods e nc since
relevant set holds mods e nc
tgds triggered unsatisfiable set tgds w r
e nc
however coherence kb coherent thus satisfiable
w r e nc
satisfiable w r e nc unsatisfiable
w r e q
nc absurd
coming initial supposition
q
q
exists
x kb kb








x


kb

q
q
q
andtit holds x kb kb x
kb
q
q
holds x kb exists
x
kb
r x r satisfies two previous conditions r
prove sufficient clusters disjoint sets election
cluster optimal otherwise exists cluster incision
function choose optimal way
q
q minimality would satisfied
suppose reductio exists x kb x kb
exist r x r satisfies two previous conditions r
q
q
let us consider kb kb x holds
kb r kb kb formulas removed
obtaining kb r since r r q

q
two conditions

definition


satisfied
besides
let
cf






kb


cf kb set formulas belong kernel
respectively let kb cf cf
fact every formula conflict belongs kb kb
built way election cluster different x
kb kb makes kb x kb kb kb x kb
difference kb kb difference arise
election formulas remove x


fideagustini martinez falappa simari

finally supposition exists r x r satisfies two
previous conditions r let kb r r x kb kb
set formulas removed x obtaining kb kb
coherent consistent since every conflict clusters kb solved whether
removing r cluster x sets r every cluster different x besides
since kb x kb kb kb x kb r
q
kb kb kb kb kb q
r r
x
kb

r kb kb r x kb kb holds kb kb
formulas involved conflicts belong kb kb
cluster different x formulas removed set formulas
removed x obtain kb strict subset removed kb
obtain kb kb strict subset kb e removed formulas
deleting deleting r
hand since kb coherent consistent minimality
kb kb

therefore kb kb kb
q
q kb absurd
x
coming initial supposition exists x
kb
kb exists r x
r
satisfies

two
previous
conditions
q
q
r x

holds



x


kb
kb
exists r x r satisfies two previous conditions
r
omit proof well defined data incision function consistency
minimality since analogous proof well defined constraint
incision function coherence minimality
shown well defined data incision functions
constraint incision functions respectively conclude second part proof
coincides inclusion follows
definition follows kb
definition follows kb
kb kb thus
kb kb therefore coincides

references
alchourron c gardenfors p makinson logic theory change
partial meet contraction revision functions journal symbolic logic

alchourron c makinson hierarchies regulation logic
studies deontic logic
alchourron c makinson logic theory change safe contraction
studia logica
amgoud l kaci argumentation framework merging conflicting knowledge bases prioritized case proc th european conferences symbolic


fidatalog ontology consolidation

quantitative approaches reasoning uncertainty ecsquaru pp

andritsos p fuxman miller r j clean answers dirty databases
probabilistic proc nd international conference data engineering icde p
arenas bertossi l e chomicki j consistent query answers inconsistent databases proc th acm sigact sigmod sigart symposium
principles database systems pods pp
arieli denecker bruynooghe distance semantics database repair
annals mathematics artificial intelligence
baader f brandt lutz c pushing el envelope proc th
international joint conference artificial intelligence ijcai pp
baader f calvanese mcguinness l nardi patel schneider p f eds
description logic handbook theory implementation applications
cambridge university press
baral c kraus minker j combining multiple knowledge bases transactions knowledge data engineering
bell qi g liu w approaches inconsistency handling descriptionlogic ontologies proc move meaningful internet systems
otm workshops pp
beneventano bergamaschi incoherence subsumption recursive
views queries object oriented data data knowledge engineering

berners lee hendler j lassila semantic web scientific american

bienvenu rosati r tractable approximations consistent query answering
robust ontology data access proc rd international joint conference
artificial intelligence ijcai pp
black e hunter pan j z argument multiple ontologies proc rd international conference scalable uncertainty
management sum pp
bohannon p flaster fan w rastogi r cost model effective heuristic repairing constraints value modification proc th acm
sigmod international conference management data principles database
systems pods pp
booth r meyer varzinczak j wassermann r horn belief change
contraction core proc th european conference artificial intelligence
ecai pp
borgida description logics data management transactions knowledge
data engineering


fideagustini martinez falappa simari

brandt polynomial time reasoning description logic existential restrictions gci axioms else proc th european conference
artificial intelligence ecai pp
cal gottlob g kifer taming infinite chase query answering
expressive relational constraints brewka g lang j eds proc th
international conference principles knowledge representation reasoning
kr pp aaai press
cal gottlob g kifer taming infinite chase query answering
expressive relational constraints journal artificial intelligence

cal gottlob g lukasiewicz general datalog framework
tractable query answering ontologies journal web semantic
cal lembo rosati r decidability complexity query answering inconsistent incomplete databases proc nd acm sigmod
symposium principles database systems pods pp acm
calvanese de giacomo g lembo lenzerini rosati r dl lite
tractable description logics ontologies aaai pp
caroprese l greco zumpano e active integrity constraints database
consistency maintenance transactions knowledge data engineering

caroprese l truszczynski active integrity constraints revision programming theory practice logic programming
cecchi l fillottrani p simari g r complexity delp
game semantics dix j hunter eds proc th international workshop non monotonic reasoning nmr pp
cholvy l reasoning merged information belief change vol pp
springer netherlands
croitoru rodriguez r kernel consolidation query answering
inconsistent obda proc joint ontology workshops episode
argentine winter ontology
delgrande j p revising inconsistent set formulas proc nd
international joint conference artificial intelligence ijcai pp
delgrande j p dubois lang j iterated revision prioritized merging
proc th international conference principles knowledge representation
reasoning kr pp
delgrande j p jin parallel belief revision revising sets formulas
artificial intelligence
delgrande j p schaub tompits h woltran merging logic programs
answer set semantics proc th international conference logic programming iclp pp


fidatalog ontology consolidation

dunne p wooldridge argumentation artificial intelligence chap complexity abstract argumentation pp springer
everaere p konieczny marquis p conflict merging operators
proc th international conference principles knowledge representation
reasoning kr pp
falappa kern isberner g reis l simari g r prioritized
non prioritized multiple change belief bases journal philosophical logic

falappa kern isberner g simari g r belief revision explanations
defeasible reasoning artificial intelligence
flouris g huang z pan j z plexousakis wache h inconsistencies
negations changes ontologies proc st national conference artificial
intelligence aaai pp
friedman n halpern j belief revision critique computer
repository corr cs ai
fuhrmann theory contraction base contraction journal philosophical logic
gardenfors p rule rational changes belief philosophical essay dediccated
lennart aqvist fiftieth birthday
gardenfors p knowledge flux modeling dynamics epistemic states mit
press
gelfond answer sets handbook knowledge representation chap pp
elsevier
gomez chesnevar c simari g r reasoning inconsistent
ontologies argumentation applied artificial intelligence
greco molinaro c probabilistic query answering inconsistent databases
annals mathematics artificial intelligence amai
haase p van harmelen f huang z stuckenschmidt h sure framework handling inconsistency changing ontologies proc th international
semantic web conference iswc pp
halaschek wiener c katz belief base revision expressive description
logics proc international workshop owl experiences directions
owled
hansson belief base dynamics ph thesis uppsala university department
philosophy uppsala sweden
hansson theory contraction base contraction unified journal symbolic
logic
hansson kernel contraction journal symbolic logic
hansson semi revision journal applied non classical logics



fideagustini martinez falappa simari

hansson textbook belief dynamics solutions exercises kluwer
academic publishers norwell usa
harman g change view principles reasoning cambridge university press
harper w rational belief change popper functions counterfactuals synthese
horridge parsia b sattler u explaining inconsistencies owl ontologies
scalable uncertainty management pp springer
huang z van harmelen f ten teije reasoning inconsistent ontologies
proc th international joint conference artificial intelligence ijcai
pp
hue j papini wurbel e merging belief bases represented logic programs proc th european conference symbolic quantitative approaches reasoning uncertainty ecsqaru pp
kalyanpur parsia b horridge sirin e finding justifications
owl dl entailments springer
kalyanpur parsia b sirin e hendler j debugging unsatisfiable classes
owl ontologies web semantics science services agents world wide
web
katsuno h mendelzon difference updating knowledge base revising proc nd international conference principles
knowledge representation reasoning kr pp
katsuno h mendelzon propositional knowledge base revision minimal change artificial intelligence
konieczny perez r p merging information constraints logical
framework journal logic computation
konieczny perez r p logic merging journal philosophical logic

lembo lenzerini rosati r ruzzi savo f inconsistencytolerant semantics description logics proc th international conference
web reasoning rule systems rr pp
lenzerini data integration theoretical perspective proc st acm
sigmod symposium principles database systems pods pp
levi subjunctives dispositions chances synthese
liberatore p schaerf arbitration merge knowledge bases
knowledge data engineering
lin j mendelzon merging databases constraints international
journal cooperative information systems
lin j mendelzon knowledge base merging majority applied logic
series


fidatalog ontology consolidation

lloyd j w foundations logic programmming springer verlag
lukasiewicz martinez v simari g inconsistency handling
datalog ontologies proc th european conference artificial intelligence ecai pp
martinez pugliese simari g subrahmanian v prade h dirty
relational database axiomatic mellouli k ed proc
th european conference symbolic quantitative approaches reasoning
uncertainty ecsqaru vol lecture notes computer science pp
springer
meyer lee k booth r knowledge integration description logics
veloso kambhampati eds proceedings aaai twentieth national
conference artificial intelligence pp aaai press
newell knowledge level artificial intelligence
nilsson u maluszynski j logic programming prolog ed john wiley
sons ltd
parsons wooldridge amgoud l properties complexity
formal inter agent dialogues journal logic computation
qi g hunter measuring incoherence description logic ontologies
proc th international semantic web conference nd asian semantic
web conference iswc aswc pp
qi g liu w bell knowledge base revision description logics
proc th european conference logics artificial intelligence jelia
pp
quine w v philosophy logic harvard university press
reiter r theory diagnosis first principles artificial intelligence

rosati r complexity dealing inconsistency description logic
ontologies proc international joint conference artificial intelligence ijcai
pp
rott h modellings belief change prioritization entrenchment theoria

schlobach cornet r non standard reasoning services debugging
description logic terminologies proceedings eighteenth international joint
conference artificial intelligence ijcai pp
schlobach huang z cornet r van harmelen f debugging incoherent
terminologies journal automated reasoning
staworko chomicki j marcinkowski j prioritized repairing consistent query answering relational databases annals mathematics artificial
intelligence


fideagustini martinez falappa simari

turner h strong equivalence made easy nested expressions weight constraints
theory practice logic programming
von leibniz g w f philosophical papers letters selection vol springer
wassermann r belief revision proc international conference principles knowledge representation reasoning kr pp

wijsen j database repairing updates acm transaction database systems




