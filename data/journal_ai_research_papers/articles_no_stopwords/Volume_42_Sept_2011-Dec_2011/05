journal artificial intelligence

submitted published

finding consensus bayesian network structures
jose pena

jose pena liu se

adit
department computer information science
linkoping university
se linkoping
sweden

abstract
suppose multiple experts learning provide us alternative
bayesian network bn structures domain interested combining
single consensus bn structure specifically interested
consensus bn structure represents independences given bn structures agree
upon parameters associated possible prove
may exist several non equivalent consensus bn structures finding one
np hard thus decide resort heuristics approximated
consensus bn structure consider heuristic proposed matzkevich
abramson builds upon two called methods b efficiently
deriving minimal directed independence map bn structure relative given node
ordering methods b claimed correct although proof provided
proof sketched methods b correct
propose correction

introduction
bayesian networks bns popular graphical formalism representing probability distributions bn consists structure parameters structure directed acyclic
graph dag induces set independencies represented probability distribution
satisfies parameters specify conditional probability distribution node given
parents structure bn represents probability distribution
product conditional probability distributions typically single expert
learning consulted construct bn domain hand therefore
risk constructed bn accurate could instance
expert bias overlooks certain details one way minimize risk consists
obtaining multiple bns domain multiple experts combining
single consensus bn received significant attention literature matzkevich abramson b maynard reid ii chajewska nielsen
parsons pennock wellman richardson domingos del sagrado
moral relevant references probably work pennock
wellman shows even experts agree bn structure
method combining experts bns produces consensus bn respects
reasonable assumptions whose structure agreed bn structure unfortunately
often overlooked avoid propose combine experts bns
c

ai access foundation rights reserved

fipena

two steps first finding consensus bn structure finding consensus
parameters consensus bn structure focuses first step
briefly discuss second step section specifically assume multiple experts
provide us alternative dag domain interested combining
single consensus dag specifically interested consensus
dag represents independences given dags agree upon many
possible words consensus dag dag represents independences among minimal directed independence mdi maps intersection
independence induced given dags knowledge whether
consensus dag cannot found efficiently still open see work
matzkevich abramson b information redefine
consensus dag dag fewest parameters associated among
mdi maps intersection independence induced given dags
definition line finding dag represent probability distribution p
desired dag typically defined mdi map p fewest parameters
associated rather mdi map p represents independences see
instance work chickering et al number parameters associated
dag measure complexity dag since number parameters
required specify probability distributions represented dag
prove may exist several non equivalent consensus dags
finding one np hard thus decide resort heuristics
approximated consensus dag consider following heuristic due
matzkevich abramson b see work matzkevich abramson
related information first let denote ordering nodes given
dags denote g gm mdi map gi gi relative
finally let approximated consensus dag dag whose arcs exactly
union arcs g gm
mentioned formulation
heuristic differs matzkevich abramson b following two
points first heuristic introduced original definition consensus dag
justify later heuristic makes sense definition consensus dag
second originally required consistent one given dags remove
requirement key step heuristic finding mdi map gi
gi since task trivial matzkevich abramson b present two
called methods b efficiently deriving gi gi methods b claimed
correct although proof provided proof sketched
methods b correct propose correction
said first study finding consensus dag addition works discussed matzkevich abramson b pennock
wellman works devoted maynard reid
ii chajewska nielsen parsons richardson domingos
worth mentioning term consensus dag different meaning computational biology
jackson et al consensus dag given set dags g gm defined
dag contains arcs g gm therefore difficulty lies keeping many
arcs possible without creating cycles note unlike present work dag interpreted
inducing independence model jackson et al



fifinding consensus bayesian network structures

del sagrado moral elaborate differences works
maynard reid ii chajewska propose adapt existing score learning dags data case learning data replaced
bns provided experts suffers pointed pennock
wellman consists essentially learning consensus dag
combination given bns somehow related proposed richardson
domingos specifically propose bayesian learning dags
data prior probability distribution dags constructed dags
provided experts since requires data combine
given dags single dag addresses rather different one
moreover construction prior probability distribution dags ignores
fact given dags may different equivalent unlike
present work dag interpreted inducing independence model work
relatively close del sagrado moral specifically
construct mdi map intersection union independence
induced dags provided experts however three main differences
work first unlike us assume given dags
defined set nodes second unlike us assume exists
node ordering consistent given dags third goal mdi
map whereas mdi map fewest parameters associated among
mdi maps e consensus dag finally nielsen parsons develop
general framework construct consensus dag gradually framework general
sense tailored particular definition consensus dag instead
relies upon score defined user expert use score different
extensions current partial consensus dag individual scores combined
choose extension perform unfortunately see framework could
applied definition consensus dag
worth recalling deals combination probability distributions expressed bns readers interested combination probability distributions expressed non graphical numerical forms referred instance work
genest zidek note interested combination
data observed readers interested combination data
observed expert updated beliefs accordingly referred instance
work ng abramson finally note aim combining given
dags dag consensus dag readers interested finding dag
graphical features e g arcs paths significant number experts agree upon may
want consult works friedman koller hartemink et al pena et
al since works deal similar
rest organized follows start reviewing preliminary
concepts section analyze complexity finding consensus dag section
discuss heuristic finding approximated consensus dag detail
section introduce methods b section correct
correct section analyze complexity corrected methods
b section efficient think
solve close discussion section


fipena

preliminaries
section review concepts used dags probability
distributions independence defined v unless otherwise
stated b dag g say b adjacent g moreover
say parent b b child g denote parents b g
p ag b node called sink node g children g route
two nodes b g sequence nodes starting ending b
every two consecutive nodes sequence adjacent g note nodes
route necessarily distinct length route number necessarily
distinct arcs route treat nodes g routes length zero route
b called descending b arcs route directed
towards b descending route b b called descendant
note descendant since allow routes length zero given subset
x v node x called maximal g descendant node x
g given route b g route b c g
denotes route c g resulting appending
p
q
number parameters associated dag g bv ap ag b ra rb
ra rb numbers states random variables corresponding
node b arc b g said covered p ag p ag b
covering arc b g mean adding g smallest set arcs b
becomes covered say node c collider route dag exist two
nodes b c b subroute route note b may
coincide let x z denote three disjoint subsets v route dag said
z active every collider node route z ii every non collider node
route outside z route dag g node x
node z active say x separated given z g denote
x g z denote x g z x g z hold definition
separation equivalent common definitions studeny section
let x z w denote four disjoint subsets v let us abbreviate x
xy independence model set statements form x z meaning
x independent given z given subset u v denote u
statements x z u given two independence n
denote n x z x n z say graphoid
satisfies following properties symmetry x z x z decomposition
x yw z x z weak union x yw z x zw contraction
x zw x w z x yw z intersection x zw x
w zy x yw z independence model induced probability distribution p
denoted p set probabilistic independences p independence model
induced dag g denoted g set separation statements x g z
known g graphoid studeny bouckaert lemma moreover g
satisfies composition property x g z x g w z x g yw z chickering
meek proposition two dags g h called equivalent g h
dag g directed independence map independence model g
moreover g minimal directed independence mdi map removing arc


fifinding consensus bayesian network structures

g makes cease directed independence map say g
ordering nodes consistent every arc b g precedes b
node ordering say dag g mdi map independence model
relative node ordering g mdi map g consistent
graphoid g unique pearl thms specifically node
p ag smallest subset x predecessors p
p x x

finding consensus dag np hard
recall defined consensus dag given set dags g gm

dag fewest parameters associated among mdi maps
g
sensible way start quest consensus dag investigating whether
exist several non equivalent consensus dags following theorem answers question
theorem exists set dags two non equivalent consensus dags
proof consider following two dags four random variables number
states


k



j







l

k



j

l

following two non equivalent dags consensus dag two dags



k







k

j

l





j

l

natural follow question investigate whether consensus dag found
efficiently unfortunately finding consensus dag np hard prove specifically prove following decision np hard
consensus
instance set dags g gm v positive integer

question exist dag g v g
g
number parameters associated g greater

proving consensus np hard implies finding consensus dag
np hard existed efficient finding consensus dag
could use solve consensus efficiently proof makes use following two


fipena

decision
feedback arc set
instance directed graph g v positive integer k
question exist subset b b k b least
one arc every directed cycle g
learn
instance probability distribution p v positive integer
question exist dag g v g p number
parameters associated g greater
feedback arc set np complete garey johnson feedback arc
set remains np complete directed graphs total degree vertex
three gavril degree bounded feedback arc set used
chickering et al prove learn np hard proof chickering
et al use following polynomial reduction instance degree bounded
feedback arc set instance learn
let instance degree bounded feedback arc set consist directed
graph f vf af positive integer k
let l denote dag whose nodes arcs determined f follows
every arc vif vjf af create following nodes arcs l

vif



aij

bij

cij

hij







dij

eij

fij



gij



vjf



number parenthesis besides node number states corresponding random variable let hl denote nodes hij l let vl denote
rest nodes l
specify join probability distribution p hl vl p hl vl l
let instance learn consist marginal probability distribution p vl
positive integer computed f k shown work
chickering et al equation
describe instance learn resulting reduction
reduced instance consensus polynomial time
let c denote dag vl arcs l whose
endpoints vl


fifinding consensus bayesian network structures

let c denote dag vl arcs bij cij fij
j
let c denote dag vl arcs cij fij eij
j
let instance consensus consist dags c c c positive
integer
theorem consensus np hard
proof start proving polynomial reduction instance f
degree bounded feedback arc set instance c consensus first reduce
f instance l learn shown work chickering et al
reduce l c shown
prove solution f iff solution c chickering et
al thms prove solution f iff solution l
therefore remains prove solution l iff solution
c note parameter l parameter c let l
p hl vl denote dag probability distribution constructed reduction
f l recall p hl vl l moreover
let l denote dag hl vl arcs l whose
endpoints vl
let l denote dag hl vl arcs bij cij hij fij
j
let l denote dag hl vl arcs cij hij fij eij
j
note separation statement holds l holds l l l
p hl vl l li thus p vl li vl li vl
let c c c denote dags constructed reduction l c note
li vl c p vl c thus solution
l solution c prove opposite proof essentially
work chickering et al thm let us define vi vj
edge component dag g vl subgraph g arcs
g whose endpoints vi aij bij cij dij eij fij gij vj given solution
c c create another solution c c follows
initialize c c
every vi vj edge component c directed path c vi
vj add c arcs eij cij fij
every vi vj edge component c directed path c vi vj
add c arcs bij fij cij


fipena

note c acyclic c acyclic moreover c c
c c order able conclude c solution c
remains prove number parameters associated c greater
specifically prove c parameters associated c
less parameters associated solution c
seen c c likewise c c c solution c
thus exists sequence resp covered arc reversals arc additions
transforms c c resp c chickering thm note covered arc
reversal modify number parameters associated dag whereas arc
addition increases chickering thm thus monotonically increase
number parameters associated c transform recall c consists
series edge components form

vif



aij

bij

cij

dij

eij

fij



gij



vjf



number parenthesis besides node number states corresponding
random variable let us study sequences modify edge component
c simply adds arcs bij fij cij arcs eij cij fij note
adding first pair arcs increase parameters whereas adding
second pair arcs increase parameters unlike may reverse
arc edge component case must cover arc first implies
increase least parameters covering fij vj adding eij vj implies
increase exactly parameters whereas arc covering implies larger increase
implies larger increase number parameters hand
reverse arc edge component simply adds arcs
c c note cij fij cij fij c otherwise
cij c fij z z vl contradicts fact c solution c since
cij c fij z cij fij c bij fij bij fij c
otherwise bij c fij z z vl cij z contradicts fact
c solution c since bij c fij z bij fij would create cycle c bij fij
c therefore adds arcs bij fij cij construction c
adds thus implies increase least many parameters
hand cij fij c cij eij cij eij c otherwise
cij c eij z z vl fij z contradicts fact c
solution c since cij c eij z cij eij would create cycle c cij eij
c therefore adds arcs eij cij fij construction c adds
arcs eij cij fij arcs bij fij cij case implies increase
least many parameters consequently c parameters
associated c
finally note p vl c chickering et al lemma thus
solution c solution l


fifinding consensus bayesian network structures

worth noting proof contains two restrictions first number
dags consensuate three second number states random variable
vl arbitrary prescribed first restriction easy relax proof
extended consensuate three dags simply letting c dag vl
arcs however open question whether consensus remains
np hard number dags consensuate two number states
random variable vl arbitrary
following theorem strengthens previous one
theorem consensus np complete
proof theorem remains prove consensus np e
verify polynomial time given dag g solution given instance
consensus
let denote node ordering consistent g causal list g relative
set separation statements g p p ag p ag node
known g coincides closure respect graphoid properties

causal list g relative pearl corollary therefore g
g iff

gi p p ag p ag
g graphoid del
sagrado moral corollary let n ai denote respectively number
nodes g number arcs g number arcs gi let b max im ai
checking separation statement gi takes ai time geiger et al p

checking whether g
g takes mnb time finally note computing
number parameters associated g takes

finding approximated consensus dag
since finding consensus dag given dags np hard decide resort
heuristics approximated consensus dag mean discard
existence fast super polynomial simply means pursue
possibility specifically consider following heuristic
due matzkevich abramson b see work matzkevich
abramson related information first let denote ordering nodes
given dags denote g gm mdi map gi
gi relative finally let approximated consensus dag dag whose
arcs exactly union arcs g gm
following theorem justifies taking
union arcs specifically proves dag returned heuristic
consensus dag required consistent
theorem dag h returned heuristic dag fewest

parameters associated among mdi maps
g relative

proof start proving h mdi map
g first




h
g suffices note h g g subm





graph h g g g g



fipena

assume contrary dag h resulting removing arc b h


satisfies h
g construction h b g say
j note b h p b p ah b p ah b implies b gj p b



p agi b p agi b p ah b p agi b

h
g note b gj p b p agj b p agj b implies b gj p b p agj b p agj b gj gj therefore b gj


p b p agj b p agj b intersection however contradicts



fact gj mdi map gj relative h mdi map
g
relative

finally note
g graphoid del sagrado moral corollary

consequently h mdi map
g relative

key step heuristic course choosing good node ordering unfortunately fact consensus np hard implies np hard
best node ordering e node ordering makes heuristic return mdi

map
g fewest parameters associated see note
existed efficient finding best node ordering theorem would
imply could solve consensus efficiently running heuristic best
node ordering
last sentence implicitly assumed heuristic efficient
implies implicitly assumed efficiently mdi map gi
gi rest shows assumption correct

methods b correct
matzkevich abramson b propose heuristic discussed previous section present two called methods b efficiently
deriving mdi map g dag g relative node ordering work
iteratively covering reversing arc g resulting dag consistent
obvious way working produces directed independence map g
however order arrive g arc cover reverse iteration must
carefully chosen pseudocode methods b seen figure method
starts calling construct derive node ordering consistent g
close possible line close possible mean
number arcs methods b later cover reverse kept minimum
methods b use choose arc cover reverse iteration
particular method finds leftmost node interchanged left
neighbor line repeatedly interchanges node left neighbor lines
interchanges preceded covering reversing corresponding arc g line method b essentially identical method differences
word right replaced word left vice versa
lines arcs point opposite directions line note methods
b reverse arc


fifinding consensus bayesian network structures

construct g
given dag g node ordering returns node ordering
consistent g close possible














g g
let denote sink node g
let denote rightmost node sink node g
add leftmost node
let b denote right neighbor
b
p ag b right b
interchange b
go line
remove incoming arcs g
g go line
return
method g
given dag g node ordering returns g











construct g
let denote leftmost node whose left neighbor right
let z denote left neighbor
z right
z g cover reverse z g
interchange z
go line
go line
return g
method b g
given dag g node ordering returns g











construct g
let denote leftmost node whose right neighbor left
let z denote right neighbor
z left
z g cover reverse z g
interchange z
go line
go line
return g

figure construct methods b correction construct consists
replacing line line comments ii removing lines


fipena

figure counterexample correctness methods b
methods b claimed correct work matzkevich abramson
b thm corollary although proof provided proof sketched
following counterexample shows methods b actually correct let g
dag left hand side figure let k j l make
use characterization introduced section see g dag center
figure however methods b return dag right hand side figure
see follow execution methods b step step first methods
b construct calling construct runs follows
initially g g
select sink node g remove incoming arcs
g
select sink node l g l interchange performed
l p ag remove l incoming arcs g
select sink node k g k l interchange performed
k left l remove k incoming arcs g
select sink node j g j k l interchange performed
j p ag k
select sink node g j k l interchange
performed left j
construct ends methods b continue follows


fifinding consensus bayesian network structures

initially j k l
add arc j reverse arc j k g interchange j k
k j l
add arc j reverse arc l g interchange l
k j l
add arcs k reverse arc j g interchange j
k j l
reverse arc k g interchange k k j l
reverse arc g interchange k j l

matter fact one see early step methods b
fail one see separated dag resulting step
implies separated dag returned methods b
covering reversing arcs never introduces separation statements however
separated g
note constructed selecting first l k j finally
however could selected first k l finally j would
resulted j l k methods b return g therefore
makes difference sink node selected line construct however construct
overlooks detail propose correcting construct replacing line let
denote rightmost node sink node g ii removing lines since
never executed hereinafter assume call construct call
corrected version thereof rest devoted prove methods
b return g

corrected methods b correct
proving methods b correct introduce auxiliary lemmas
proof found appendix let us call percolating right left
iterating lines method possible let us modify method replacing
line let denote leftmost node considered
adding check z line pseudocode resulting
call method seen figure method percolates right left one
one nodes order appear
lemma method g method g return dag
lemma method g method b g return dag
let us call percolating left right iterating lines method b
possible let us modify method b replacing line let denote rightmost
node considered adding check z line
pseudocode resulting call method b seen figure


fipena

method g
given dag g node ordering returns g










construct g
let denote leftmost node considered
let z denote left neighbor
z z right
z g cover reverse z g
interchange z
go line
go line
return g
method b g
given dag g node ordering returns g











construct g
let denote rightmost node considered
let z denote right neighbor
z z left
z g cover reverse z g
interchange z
go line
go line
return g

figure methods b
method b percolates left right one one nodes reverse order
appear
lemma method b g method b g return dag
ready prove main
theorem let g denote mdi map dag g relative node ordering
method g method b g return g
proof lemmas suffices prove method b g returns g evident
method b transforms thus halts point therefore
method b performs finite sequence n modifications arc additions covered arc
reversals g let gi denote dag resulting first modifications g
let g g specifically method b constructs gi gi reversing
covered arc z ii adding arc x z x p agi p agi z
iii adding arc x x p agi z p agi note gi gi
n thus gn g


fifinding consensus bayesian network structures

start proving gi dag consistent n since
true g due line suffices prove gi dag consistent
gi n consider following four cases
case method b constructs gi gi reversing covered arc z
gi dag reversing covered arc create cycle chickering
lemma moreover note z interchanged immediately
covered arc reversal thus gi consistent
case method b constructs gi gi adding arc x z x
p agi p agi z note x left left z
gi consistent x left z thus gi
dag consistent
case method b constructs gi gi adding arc x x
p agi z p agi note x left z gi consistent
left neighbor z recall line x left
thus gi dag consistent
case note may get modified method b constructs gi gi specifically happens method b executes lines arc
z gi however fact gi consistent z
interchanged fact z neighbors recall line imply
gi consistent z interchanged
since method b transforms follows proven gn
dag consistent order prove theorem e gn g
remains prove g gn see note gn g follows
g gn gn g fact gn dag consistent
fact g unique mdi map g relative recall g guaranteed
unique g graphoid
rest proof devoted prove g gn specifically prove
g gi g gi n note implies
g gn g g definition mdi map first prove
method b constructs gi gi reversing covered arc z
arc reversed covered implies gi gi chickering lemma thus
g gi g gi
prove g gi g gi n
method b constructs gi gi adding arc specifically prove
active route v ab
two nodes b gi
active route b g prove induction number
occurrences added arc ab
assume without loss generality added
ab
arc occurs fewer times active route b

gi call minimality property ab
number occurrences
difficult number occurrences added arc ab
two
see case intuition however proof theorem simpler ignore fact



fipena

figure different cases proof theorem relevant subgraphs gi
g depicted undirected edge two nodes denotes nodes
adjacent curved edge two nodes denotes active route
two nodes curved edge directed route descending
grey node denotes node

ab
added arc ab
zero active route b gi
thus active route b g since g gi assume
induction hypothesis holds k occurrences added arc ab

prove k occurrences consider following two cases case
illustrated figure

case method b constructs gi gi adding arc x z x

ab
ax
zb
p agi p agi z note x z occurs ab
let x zi
ax
ab
note x
active gi otherwise would
note maybe x b z



fifinding consensus bayesian network structures

active gi active route ax
x g

zb
induction hypothesis moreover otherwise ax
x z
would active route b gi would violate minimality
property ab
note z g z adjacent
g since g gi ii z left recall line note
x g see note x adjacent g since
g gi recall method b percolates left right one one
nodes reverse order appear method b currently
percolating thus nodes right right
x g x would right thus x would
right however would contradict fact x
left follows fact gi consistent thus x
g consider two cases
case assume z
zb
active gi otherwise
ab
would active gi active route zb

z b g induction hypothesis ax

x



z zb


active route b g
wb
case assume z zb

z w note w
w
b
ab
active gi otherwise would active gi
b w b g induction
active route w


hypothesis note w z adjacent g since g gi
fact proven z g imply w adjacent
g otherwise gi w u g w u u v
z u would contradict g gi fact w
g see recall nodes right right
w g w would right thus
w would right however would contradict fact
w left follows fact w left
z gi consistent fact left neighbor
wb
z recall line thus w g ax
x w
active route b g

case method b constructs gi gi adding arc x x

ab
ax
yb
p agi z p agi note x occurs ab
let x
ax
ab
note x
active gi otherwise would
active gi active route ax
x g

induction hypothesis note z g z adjacent
g since g gi ii z left recall line note
x z adjacent g since g gi fact z
g imply x adjacent g otherwise x gi u
x g u u v z u would contradict
wb
note maybe w b note w x otherwise ax
x x would
active route b gi would violate minimality property ab

note maybe x b



fipena

g gi fact x g see recall method b percolates
left right one one nodes reverse order appear
method b currently percolating thus nodes right
right x g x would
right thus x would right however would
contradict fact x left follows fact
x left z gi consistent fact
left neighbor z recall line thus x g consider three
cases
b x xb note xb active
case assume yi


ab
gi otherwise would active gi
active route xb
x b g induction hypothesis

ax
x x xb
active route b g

b w w b note w
case assume yi


w
b
active gi otherwise ab
would


active
gi

b w b g induction
active route w


hypothesis note w g see note w
adjacent g since g gi recall nodes right
right w g w would
right thus w would right
however would contradict fact w left
follows fact gi consistent thus w g
w b active route b g
ax

x w

case assume
proof case step
work chickering lemma let denote node maximal
g set descendants gi note guaranteed
unique chickering lemma g gi note
z descendant gi shown z
g descendant z gi consider three cases
case assume z descendant z gi
case assume z descendant z g recall
method b percolates left right one one nodes
reverse order appear method b currently percolating
thus yet percolated z z left
recall line therefore none descendants z g among
left z fact consistent gi
imply z node maximal gi set descendants
z g actually z node chickering lemma
gi g descendants z g descendants
z gi thus descendant z gi
note maybe w b note w x case w x covered case




fifinding consensus bayesian network structures

case assume z descendant z g
shown case descendants z g descendants z
gi therefore none descendants z g left
otherwise descendant z thus gi would
left would contradict definition
fact descendant z g imply still
g z became sink node g construct recall figure
therefore construct added added z recall lines
left z definition reason
method b interchanged z recall line thus
currently still left z implies left
left neighbor z recall line however
contradicts fact gi consistent descendant
gi thus case never occurs
b
continue proof case note
implies yi
active gi otherwise ab
would active gi note
descendant z gi otherwise would
xy b
active route xy
x gi thus ax



would active route b gi would violate
minimality property ab
shown
implies
descendant z gi implies active descending
zd active route
route zd
z gi ax

x z
zd active route
gi likewise
z

b gi denotes route resulting reversing
b therefore active routes ad bd
yi


b g induction hypothesis
consider subroute ab
starts arc x continues
direction arc reaches node e e b e
note e descendant gi thus e descendant g
definition let de
denote descending route e g

assume without loss generality g descending route
b node shorter de
implies e b
de
de
active g shown
thus ad

active route b g hand e e
de ed db active route

thus ad



ed
b g db
denote

routes resulting reversing

bd
de





finally correctness method b leads alternative proof
called meeks conjecture given two dags g h h g
meeks conjecture states transform g h sequence arc additions
covered arc reversals operation sequence g dag
note statement true thanks correction construct



fipena

method g h g h
given two dags g h h g transforms
g h sequence arc additions covered arc reversals
operation sequence g dag h g




let denote node ordering consistent h
g method b g
add g arcs h g

figure method g h
h g importance meeks conjecture lies allows develop efficient
asymptotically correct learning bns data mild assumptions
chickering chickering meek meek nielsen et al meeks
conjecture proven true work chickering thm developing
constructs valid sequence arc additions covered arc reversals
propose alternative construct sequence pseudocode
called method g h seen figure following corollary proves
method g h correct
corollary given two dags g h h g method g h g h
transforms g h sequence arc additions covered arc reversals
operation sequence g dag h g
proof note method g hs line denotes node ordering consistent
h let g denote mdi map g relative recall g guaranteed
unique g graphoid note h g implies g subgraph
h see note h g implies obtain mdi map g relative
removing arcs h however g mdi map g relative
follows proof theorem method g hs line transforms
g g sequence arc additions covered arc reversals
operation sequence g dag g g thus operation
sequence h g h g since shown g subgraph
h moreover method g hs line transforms g g h sequence arc
additions course arc addition g dag h g g
subgraph h

corrected methods b efficient
section methods b efficient solution
think let n denote respectively number
nodes arcs g moreover let us assume hereinafter dag implemented


fifinding consensus bayesian network structures

adjacency matrix whereas node ordering implemented array entry per
node indicating position node ordering since g graphoid first
solution think consists applying following characterization g
node p ag smallest subset x p g p x x
solution implies evaluating node n subsets p evaluating
subset implies checking separation statement g takes time geiger et al
p therefore overall runtime solution n
since g satisfies composition property addition graphoid properties
efficient solution consists running incremental association markov boundary
iamb pena et al thm node p ag iamb
first sets p ag proceeds following two steps
first step consists iterating following line p ag change
take node b p p ag g b p ag add p ag
second step consists iterating following line p ag
change take node b p ag considered
g b p ag b remove p ag first step iamb
add n nodes p ag addition implies evaluating n candidates
addition since p n nodes evaluating candidate implies checking
separation statement g takes time geiger et al p
first step iamb runs time similarly second step
iamb runs time therefore iamb runs time
since iamb run n nodes overall runtime
solution
analyze efficiency methods b exact analyze
methods b recall figure rather original methods b recall
figure former efficient latter methods b run
n time first note construct runs n time iterates n
times lines iterations iterates n times lines
moreover line takes n time line takes time line takes n time
note methods b iterate n times lines
iterations iterate n times lines moreover line takes time
line takes n time covering arc implies updating adjacency matrix
accordingly consequently methods b efficient solution
think
finally analyze complexity method g h method g h runs n time
constructed n time calling construct h node
ordering running method b takes n time adding g arcs h
g done n time recall method g h alternative
work chickering unfortunately implementation details
provided work chickering thus comparison runtime
possible however believe efficient


fipena

discussion
studied combining several given dags consensus
dag represents independences given dags agree upon
parameters associated possible although definition consensus dag reasonable
would leave number parameters associated focus solely
independencies represented consensus dag words would define
consensus dag dag represents independences given dags
agree upon many possible currently investigating whether
definitions equivalent proven may exist several nonequivalent consensus dags principle equally good able
conclude one represents independencies rest would prefer
one proven finding consensus dag np hard
made us resort heuristics approximated consensus dag mean
discard existence fast super polynomial general case
polynomial constrained cases given dags bounded
degree question currently investigating
considered heuristic originally proposed matzkevich abramson b
heuristic takes input node ordering shown finding best
node ordering heuristic np hard currently investigating application
meta heuristics space node orderings good node ordering
heuristic preliminary experiments indicate highly beneficial
best node ordering almost never coincides node orderings
consistent given dags
said section aim combining bns provided multiple experts
learning single consensus bn robust individual
bns proposed combine experts bns two steps avoid
discussed pennock wellman first finding consensus bn
structure finding consensus parameters consensus bn structure
focused first step currently working second
step along following lines let g gm denote bns provided
experts first element pair denotes bn structure whereas second denotes
bn parameters let p pm denote probability distributions represented
bns provided experts call p f p pm consensus probability
distribution f combination function e g weighted arithmetic geometric
mean let g denote consensus bn structure obtained g gm described
propose obtain consensus bn parameterizing g
p p ag p p ag v p probability distribution
represented consensus bn motivation parameterization minimizes
kullback leibler divergence p p koller friedman thm
hints speed computation parameterization performing
inference experts bns found work pennock wellman
properties section alternatively one could first sample p
parameterize g p p ag p p ag v p
empirical probability distribution obtained sample motivation


fifinding consensus bayesian network structures

parameterization minimizes kullback leibler divergence p p
koller friedman thm course p p sample sufficiently
large note use p parameterize g construct g discussed
section allows us avoid discussed pennock wellman
finally note present work combines dags g gm although
guarantee gi mdi map pi e gi may superfluous arcs
therefore one may want check gi contains superfluous arcs remove
combination takes place general several mdi maps pi may exist
may differ number parameters associated would interesting
study number parameters associated mdi map pi chosen affects
number parameters associated consensus dag obtained method
proposed

acknowledgments
thank anonymous referees editor thorough review manuscript
thank dr jens nielsen dag sonntag proof reading manuscript
work funded center industrial information technology ceniit socalled career contract linkoping university

appendix proofs lemmas
lemma method g method g return dag

proof evident methods transform thus halt
point prove return dag prove
induction number times method executes line halting
evident holds number executions one methods
share line assume induction hypothesis holds k executions
prove k executions let z denote nodes involved first
k executions since induction hypothesis applies remaining k executions
run method summarized

z g cover reverse z g
interchange z
n
percolate right left leftmost node percolated

n number nodes g assume percolated j note
first j percolations involve nodes left thus run
equivalent


fipena

j
percolate right left leftmost node percolated
z g cover reverse z g
interchange z
percolate right left
percolate z right left
j n
percolate right left leftmost node percolated
let w denote nodes left z first k executions
line note fact z nodes involved first execution implies
nodes w left z note z percolated
latter run nodes left z exactly w since
nodes w left z percolation z latter run
perform arc covering reversal node interchange thus latter run
equivalent
j
percolate right left leftmost node percolated
percolate z right left
percolate right left
j n
percolate right left leftmost node percolated
exactly run method consequently methods return
dag

lemma method g method b g return dag
proof prove lemma much way lemma simply need
replace z vice versa proof lemma

lemma method b g method b g return dag
proof evident methods b b transform thus halt
point prove return dag prove
induction number times method b executes line halting
evident holds number executions one methods b b
share line assume induction hypothesis holds k executions
prove k executions let z denote nodes involved first
k executions since induction hypothesis applies remaining k executions
run method b summarized


fifinding consensus bayesian network structures

z g cover reverse z g
interchange z
n
percolate left right rightmost node percolated
n number nodes g assume j th rightmost node
note j th rightmost node wi right
wi percolated run see assume contrary wi
left implies wi left z z
neighbors however contradiction wi would selected
line instead first execution line thus first j percolations
run involve nodes right z run equivalent
j
percolate left right rightmost node percolated
z g cover reverse z g
interchange z
j n
percolate left right rightmost node percolated
exactly run method b

references
chickering transformational characterization equivalent bayesian network
structures proceedings eleventh conference uncertainty artificial intelligence
chickering optimal structure identification greedy search journal machine
learning
chickering meek c finding optimal bayesian networks proceedings
eighteenth conference uncertainty artificial intelligence
chickering heckerman meek c large sample learning bayesian networks
np hard journal machine learning
friedman n koller bayesian network structure bayesian
structure discovery bayesian networks machine learning
gavril f np complete graphs proceedings eleventh conference information sciences systems
garey johnson computers intractability guide theory npcompleteness w h freeman


fipena

geiger verma pearl j identifying independence bayesian networks networks

genest c zidek j v combining probability distributions critique annotated bibliography statistical science
hartemink j gifford k jaakkola young r combining location
expression data principled discovery genetic regulatory network
pacific symposium biocomputing
jackson b n aluru schnable p consensus genetic maps graph theoretic proceedings ieee computational systems bioinformatics
conference
koller friedman n probabilistic graphical principles techniques mit
press
matzkevich abramson b topological fusion bayes nets proceedings
eight conference conference uncertainty artificial intelligence
matzkevich abramson b complexity considerations combination
belief networks proceedings ninth conference conference uncertainty
artificial intelligence
matzkevich abramson b deriving minimal map belief network relative
target ordering nodes proceedings ninth conference conference
uncertainty artificial intelligence b
maynard reid ii p chajewska u agregating learned probabilistic beliefs proceedings seventeenth conference uncertainty artificial intelligence

meek c graphical selecting causal statistical phd thesis carnegie
mellon unversity
ng k c abramson b probabilistic multi knowledge base systems journal applied
intelligence
nielsen j kocka pena j local optima learning bayesian networks
proceedings nineteenth conference uncertainty artificial intelligence

nielsen h parsons application formal argumentation fusing bayesian
networks multi agent systems artificial intelligence
pearl j probabilistic reasoning intelligent systems networks plausible inference
morgan kaufmann
pennock wellman p graphical representations consensus belief proceedings fifteenth conference uncertainty artificial intelligence



fifinding consensus bayesian network structures

pena j nilsson r bjorkegren j tegner j towards scalable data efficient
learning markov boundaries international journal approximate reasoning
pena j kocka nielsen j featuring multiple local optima assist user
interpretation induced bayesian network proceedings tenth
international conference information processing management uncertainty
knowledge systems
richardson domingos p learning knowledge multiple experts proceedings twentieth international conference machine learning
del sagrado j moral qualitative combination bayesian networks international
journal intelligent systems
studeny bayesian networks point view chain graphs proceedings
fourteenth conference conference uncertainty artificial intelligence

studeny bouckaert r r chain graph description conditional
independence structures annals statistics




