Journal Artificial Intelligence Research 42 (2011) 887916

Submitted 04/11; published 12/11

Multi-Robot Adversarial Patrolling:
Facing Full-Knowledge Opponent
Noa Agmon

agmon@cs.utexas.edu

Department Computer Science
University Texas Austin
TX, USA

Gal Kaminka
Sarit Kraus

galk@cs.biu.ac.il
sarit@cs.biu.ac.il

Computer Science Department
Bar Ilan University
Israel

Abstract
problem adversarial multi-robot patrol gained interest recent years, mainly
due immediate relevance various security applications. problem, robots
required repeatedly visit target area way maximizes chances
detecting adversary trying penetrate patrol path. facing strong
adversary knows patrol strategy robots, robots use deterministic
patrol algorithm, many cases easy adversary penetrate undetected
(in fact, cases adversary guarantee penetration). Therefore
paper presents non-deterministic patrol framework robots. Assuming
strong adversary take advantage knowledge try penetrate
patrols weakest spot, hence optimal algorithm one maximizes chances
detection point. therefore present polynomial-time algorithm determining
optimal patrol Markovian strategy assumption robots,
probability detecting adversary patrols weakest spot maximized. build
upon framework describe optimal patrol strategy several robotic models
based movement abilities (directed undirected) sensing abilities (perfect
imperfect), dierent environment models - either patrol around perimeter (closed
polygon) open fence (open polyline).

1. Introduction
problem multi-robot patrol gained interest recent years (e.g., Ahmadi & Stone,
2006; Chevaleyre, 2004; Elmaliach, Agmon, & Kaminka, 2007; Paruchuri, Tambe, Ordonez,
& Kraus, 2007; Amigoni, Gatti, & Ippedico, 2008), mainly due immediate relevance
various security applications. multi-robot patrol problem, robots required
repeatedly visit target area order monitor it. Many researchers focused
frequency-based approach, guaranteeing point-visit frequency criteria met
patrol algorithm, example maximizing minimal frequency guaranteeing uniform frequency (e.g., refer Elmaliach et al., 2007; Chevaleyre, 2004; Almeida, Ramalho,
Santana, Tedesco, Menezes, Corruble, & Chevaleyr, 2004).
contrast, advocate approach robots patrol adversarial settings,
goal patrol way maximizes chances detecting adversary
c
2011
AI Access Foundation. rights reserved.

fiAgmon, Kaminka & Kraus

trying penetrate patrol path. Thus decisions adversary must
taken account. objective is, therefore, develop patrol paths robots,
following paths robots maximize chance adversarial detection.
problem adversarial planning specically adversarial patrolling wide problem,
generally computational tractable results exist. paper presents problem
restrictive environment perimeter patrol set homogenous robots, providing
computational tractable optimal result.
opposed frequency-driven approaches, adversarial settings point-visit frequency criteria becomes less relevant. Consider following scenario. given cyclic
fence length 100 meters 4 robots must patrol around fence moving
velocity 1m/sec. Clearly, optimal possible frequency point around fence,
terms maximizing minimal frequency, 1/25, i.e., location visited
every 25 seconds. optimal frequency achieved robots placed uniformly
along fence (facing direction) move forward without turning around. Assume takes adversary 20 seconds penetrate area fence.
robots move deterministic path, adversary knowing patrol algorithm
guarantee penetration simply enters position recently visited
patrolling robot. hand, robots move non-deterministically, i.e.,
turn around time time probability greater 0, choice
penetration position becomes less trivial. Moreover, assume adversary may
penetrate time, motivates use nondeterministic patrol behavior indenitely.
rst consider problem patrolling around closed polygon, i.e., perimeter.
introduce non-deterministic framework patrol rst order Markovian assumption robots strategy, robots choose next move random
probability p. probability value p characterizes patrol algorithm.
model system Markov chain (e.g., Stewart, 1994), using model calculate polynomial time probability penetration detection point along
perimeter function p, i.e., depends choice patrol algorithm.
Based functions dening probability penetration detection, nd optimal patrol algorithm robots presence strong adversary, i.e., adversary
full knowledge patrolling robotstheir algorithm current placement.
case, adversary uses knowledge order maximize chances penetrating
without detected. therefore assumed adversary penetrate
weakest spot path, hence goal robots maximize probability
penetration detection weakest spot. provide polynomial time algorithm
(polynomial input size, depending number robots characteristics
environment) nding optimal patrol robots facing full knowledge
adversary. show non-deterministic patrol algorithm advantageous, guarantees lower bound criteria performance robots, i.e., ability
block adversary.
use patrol framework consider additional environment robotic models. Specically, consider case robots required patrol along
open polyline (fence). show although case inherently dierent patrolling
along perimeter, basic framework still used (with changes) order nd
optimal patrol algorithm robots. investigate dierent movement models
888

fiMulti-Robot Adversarial Patrolling

robots, namely robots directionality associated movement (and
turning around could cost system time), omnidirectional. addition,
model various types sensing capabilities robots, specically, sensing capabilities perfect imperfect, local long-range. cases show
basic framework extended include various models.
paper organized follows. Section 2 discuss previous work, related
research. Section 3 describes basic robot environment model. introduce
Section 4 framework patrolling robots, describe polynomial-time algorithm
determining probability penetration detection every point along patrol
path (Section 4.2). show Section 4.3 algorithm dening optimal patrol
algorithm robots, assuming face full-knowledge adversary, Section 4.4
provides interesting results implementation algorithms. Section 5
show basic framework used order consider various robotic sensing
movement models dierent environment (open fences). Section 6 concludes.

2. Related Work
Systems comprising multiple robots cooperate patrol designated area
studied various contexts (e.g., Chevaleyre, 2004; Elmaliach, Agmon, & Kaminka,
2009). Theoretical (e.g., Chevaleyre, 2004; Elmaliach et al., 2009; Amigoni et al., 2008)
empirical (e.g., see Sak, Wainer, & Goldenstein, 2008; Almeida et al., 2004) solutions
proposed order assure quality patrol. denition quality depends
context. studies concentrate frequency-based patrolling, optimizes
frequency visits throughout designated area (e.g. refer Elmaliach et al., 2009;
Almeida et al., 2004; Chevaleyre, 2004). Ecient patrol, case, patrol guaranteeing high frequency visits parts area. contrast, adversarial patrolling
(addressed paper) deals detection moving adversaries attempting
avoid detection. Here, ecient patrol one deals eciently intruders (e.g.,
see Sak et al., 2008; Basilico, Gatti, & Amigoni, 2009b; Amigoni et al., 2008).
rst theoretical analysis frequency-based multi-robot patrol problem
concentrated frequency optimization presented Chevaleyre (2004). introduced
notion idleness, duration point patrolled area visited.
work, analyzed two types multi-robot patrol schemes graphs respect
idleness criteria: partitioning area subsections, section visited
continuously one robot; cyclic scheme patrol path provided along
entire area robots visit parts area, consecutively. proved
latter approach, frequency visiting points area considerably higher.
Almeida et al. (2004) oered empirical comparison dierent approaches towards
patrolling regards idleness criteria, shows great advantage cycle based
approach.
Elmaliach et al. (2007, 2009) oered new frequency optimization criteria evaluating
patrol algorithms. provide algorithm multi-robot patrol continuous areas
proven maximal minimal frequency well uniform frequency, i.e.,
point area visited highest-possible frequency. work based

889

fiAgmon, Kaminka & Kraus

creating one patrol cycle visits points area minimal time, robots
simply travel equidistantly along patrol path.
Sak et al. (2008) considered case multi-agent adversarial patrol general graphs
(rather perimeters, work). concentrated empirical evaluation
(using simulation) several non-deterministic patrol algorithms roughly
divided two: divide graph patrolling agents,
allow agents visit parts graph. considered three types adversaries:
random adversary, adversary always chooses penetrate recently-visited
node adversary uses statistical methods predict chances node
visited soon. concluded patrol method outperformed
others domains checked, optimality depends graph
structure. contrast investigation, provide theoretical proofs optimality
dierent settings.
work adversarial multi-robot patrol examined using game-theoretic
approaches (e.g., see Basilico et al., 2009b; Basilico, Gatti, & Amigoni, 2009a; Pita, Jain,
Ordonez, Tambe, Kraus, & Magorii-Cohen, 2009; Paruchuri, Tambe et al., 2007). Note
work described herein modeled game theoretic problem: Given two
players, robots adversary, possible set actions side, determine
optimal policy robots maximize utility gained adversarial
detection. zero-sum game. Since assume strong (full knowledge) adversarial
model, adopt minmax approach, namely, minimizing maximal utility
opponent (or case: equivalent maximizing minimal probability detection
robots). However, work use game theoretic tools nding
equilibrium strategy, use tailored ad-hoc solution nds optimal policy
robots polynomial time, taking account robots possible sensing movement
capabilities.
closely related work Amigoni et al. (2008) Basilico et al. (2009b, 2009a)
used game-theoretic approach using leader-follower games determining optimal
strategy single patrolling agent. considered environment patrolling
robot move two nodes graph, opposed perimeter model
use. solution suitable one robot heterogenous environments, i.e., utility
agent adversary changes along vertices graph. formulate
problem mathematical programming problem (either multilinear programming
mixed integer linear programming). Consequently, computation optimal strategy
exponential, yet using optimization tools manage get good approximation
optimal solution.
Paruchuri, Tambe et al. (2007) considered problem placing stationary security
checkpoints adversarial environments. Similar assumptions, assume
agents work adversarial environment adversary exploit predictable behavior agents, adversary full knowledge patrolling
agents. model system using Stackelberg games, uses policy randomization
agents behavior order maximize rewards. problem formulated
linear program single agent, yielding optimal solution case. Using
single agent policy, present heuristic solution multiple agents,
optimal solution intractable. Paruchuri, Pearce et al. (2007) study problem
890

fiMulti-Robot Adversarial Patrolling

cases adversarial model unknown agents, although adversary still
full knowledge patrol scheme. provide heuristic algorithms optimal strategy selection agents. Pita et al. (2009) continued research consider
case adversaries make choices based bounded rationality
uncertainty, rather make optimal game-theoretic choice. considered three
dierent types uncertainty adversarys choices, provided new mixed-integer
linear programs Stackelberg games deal types uncertainties.
opposed works based using game-theoretic approaches
provide approximate heuristic solutions intractable optimal solutions, work
focus specic characteristics robots environment, provide optimal
polynomial-time algorithms nding optimal patrol strategy multi-robot team
using minmax approach.
Theoretical work based stochastic processes related work cat
mouse problem (Coppersmith, Doyle, Raghavan, & Snir, 1993), known predatorprey (Haynes & Sen, 1995) pursuit evasion problem (Vidal, Shakernia, Kim, Shim, &
Sastry, 2002). problem, cat attempts catch mouse graph
mobile. cat knowledge mouses movement, therefore far
cat concerned, mouse travels similarly simple random walk graph.
We, hand, worst case assumptions adversary. consider
robotic model, movement cat correlated movement
robot, possible directionality movement, possible cost changing directions
possible sensorial abilities. Moreover, model robots travel around perimeter
fence, rather general graph. Thus sense, research concerned
pursuit-evasion polyline - open closed.
theoretical work Shieh Calvert (1992), based computational geometry
solutions, attempts nd optimal viewpoints patrolling robots. try maximize view robots area, show problem N P-Hard, nd
approximation algorithms problem.

3. Robot Environment Model
following section, provide description robotic model, environment model
adversarial model. describe basic model patrolling around perimeter
(closed polygon). environments robotic models discussed Section 5.
3.1 Environment
consider patrol circular path around closed polygon P . path around P
divided N segments length uniform time distance, i.e., robot travels
one segment per cycle sensing (its velocity 1 segment / 1 time cycle).
division segments makes possible consider patrols heterogeneous paths.
areas, diculty passing terrains varies one terrain another,
example driving muddy tracks vs. driving road. addition, riding around corners
requires vehicle slow down. Figure 1 demonstrates transition given area
discrete cycle. area, left, given along velocity constraints. path
divided segments robot travels one segment per time cycle
891

fiAgmon, Kaminka & Kraus

monitoring it, i.e., length segment determined velocity
robot (corresponding time takes travel specic segment)
sensorial capabilities robot. path divided segments uniform
travel time, equivalent considering simple cycle appears right Figure
1.
Note distance robots calculated respect number
segments them, i.e., distance travel time. example, say
distance R1 R2 7, 7 segments them, R1
remained still, would taken R2 7 time cycles reach R1 (assuming R2
headed towards right direction).

equivalent
Figure 1: example creating discrete segments circular path property
robots travel one segment per cycle. dierent line structures along perimeter left
correlate dierent velocity constraints, converted (in middle gure) N segments
robots travel one time cycle. gure equivalent gure right,
simple cycle divided N uni-time segments.

3.2 Patrolling Robotic Model
consider system k > 1 homogenous mobile robots R1 , . . . , Rk , required
patrol around closed polygon. robots operate cycles, cycle consists
two stages.
1. Compute: Execute given algorithm, resulting goal point, denoted pG ,
robot travel.
2. Move: Move towards point pG .
model synchronous, i.e. robots execute cycle simultaneously. concentrate attention Compute stage, i.e., compute next goal point.
assume robots movement model directed pG behind robot,
physically turn around. Turning around costly operation, model
cost time, i.e., robot turns around resides segment time units.
case movement model directed discussed Section 5.1. Throughout
paper assume simplicity = 1, unless stated otherwise.
key result research (Section 4) optimal patrolling necessitates robots
placed uniform distance = N/k one another along perimeter. Consequently, require robots coordinated sense robots move
direction, decided turn around simultaneously. requirement
guarantees uniform distance maintained throughout execution
892

fiMulti-Robot Adversarial Patrolling

patrol algorithm. Note tightly-coordinated behavior achievable centralized
systems, systems communication exists team members. practical implementations may exist (for example uniformly seeding pseudorandom number
generator robots), require coordination inside team. Distributed
systems cannot assume reliable communication left future work.
3.3 Adversarial Model
basic assumption system consists adversary tries penetrate
patrolling robots path without detected. adversary decides,
unknown time, segment penetrate. penetration time
instantaneous, lasts time units, stays segment.
Denition 1. Let si discrete segment perimeter P patrolled one robot
more. Probability Penetration Detection si , ppdi , probability
penetrator going si time units detected robot going
si period time.
words, ppdi probability patrol path robot pass
segment si time penetration attempted segment, hence
calculated segment respect current location robots given
time (since robots maintain uniform distance throughout execution,
relative location remains times). use general acronym ppd
referring general term probability penetration detection (without reference
certain segment).
Recall time distance every two consecutive robots around perimeter
= N/k. Therefore consider values boundaries d+
2 < d. reason
takes robot time units turn, robot adjacent s0
probability > 0 arriving every segment si , 0 t, robot adjacent
sd probability > 0 arriving segments si , (t ) leqd. Hence segment
st+1 probability > 0 visited (t ) + 1 d+2+1 t, otherwise
least one segment, st+1 , probability 0 visited time
units. Therefore adversary full knowledge patrol always manage
successfully penetrate regardless actions taken patrolling robots. Note
appears equation since inuences number segments reachable robot
located segment sd+1 turning around (sd , sd1 , . . . , sd/2+ ). hand,
segments si ppdi = 1 simply using deterministic algorithm.
dene patrol scheme robots
1. Number robots, distance current position.
2. movement model robots characterization movement.
3. robots patrol algorithm.
patrol scheme reects knowledge obtained adversary patrolling robots
given time (hence necessarily time dependent).

893

fiAgmon, Kaminka & Kraus

consider strong adversarial model adversary full knowledge
patrolling robots. Therefore full knowledge adversary knows patrol scheme,
take advantage knowledge order choose penetration spot
weakest spot patrol, i.e., segment minimal ppd. solution concept adopted
(as stated Section 2) similar game-theoretic minmax strategy, yielding
strategy equilibrium (none playersrobots adversaryhas initiative
diverge strategy). adversary learn patrol scheme observing
behavior robots sucient amount time. Note security applications,
strong adversaries exist. applications, adversary models behavior
system worst case scenario patrolling robots point view (similar
classical Byzantine fault model distributed systems, see Lynch, 1996).
environment, robots responsible detecting penetrations
handling penetration (which requires task-allocation methods). Therefore case
adversary issues multiple penetrations similar handling single penetration,
robots detect, report continue monitor rest path, according
algorithm.

4. Framework Adversarial Patrolling Perimeters
environment consider linear environment, step robots
decide either go straight turn around. framework suggest nondeterministic
sense time step decision done independently, random,
probability p. Formally,
{
p
Go straight
Probability next move =
1 p Turn around
Since dierent patrol algorithms consider vary probability p next
step, assert probability p characterizes patrol algorithm.
Assume robot currently located segment si . Therefore robot facing
segment si+1 , probability p go straight probability
1 p turn around face segment si1 . Similarly, facing segment si1 ,
probability p reach segment si1 probability 1 p face
segment si+1 .
Note probability penetration detection segment si , 1 d,
determined probability p characterizing patrol algorithm, therefore ppdi function
p, i.e., ppdi (p). However, whenever possible use abbreviation ppdi .
denition ppdi , need nd probability si visited time units
robot. Assuming perfect detection capabilities robots, ppdi determined
first visit robot si , since intruder detected detection
mission successful (specically, segment visited, game over). Note
ppdi calculated regardless actions adversary.
stated previously, order guarantee optimality patrol algorithm, robots
uniformly distributed along perimeter distance = N/k
every two consecutive robots, coordinated sense

894

fiMulti-Robot Adversarial Patrolling

supposed turn around, simultaneously. following theorem supporting lemmas prove optimality assumptions full-knowledge adversarial
environment.
Lemma 1 follows directly fact movement robots continuous,
thus robot Rl cannot move segment si segment si+j , j > 0, without visiting
segments si+1 , . . . , sj1 between. Note since k > 1 follows number
segments unvisited Rl greater 2t (otherwise simple deterministic algorithm
would suce detect adversary probability 1). Therefore time units
Rl residing initially segment s0 cannot visit segment si , < t, arriving
direction perimeter without visiting segments closer current location (s0 )
rst (this argument holds segments left right s0 ).
Lemma 1. given p, function ppdli : N [0, 1] constant Rl residing
segment s0 monotonic decreasing function, i.e., distance robot
segment increases, probability reaching time units decreases.
Lemma 2. distance two consecutive robots along cyclic patrol path
smaller, ppd segment higher vice versa.
Proof. Consider sequence S1 segments s1 , . . . , sw two adjacent robots, Rl
Rr , s1 adjacent current location Rl sw adjacent current
location Rr . Let S2 similar sequence, w 1 segments, i.e., distance
Rl Rr decreases one segment. Assume robots distance
greater equal w 1 Rl Rr , w 1 < t. Since robot may
inuence ppd segments distance (as probability
0 arriving segment greater distance within time units), probability
penetration detection, ppd, sequences inuenced possible visits Rl
Rr .
Denote probability penetration detection segment si Sj ppdi (j), 1 w,
j {1, 2}, probability penetrator detected robot Rx ppdxi (j),
x {l, r}. Therefore, segment si Sj , ppdi (j) = ppdli (j) + ppdri (j) ppdli (j)ppdri (j)
(either Rl Rr detect adversary, both). Note either ppdli (j), ppdri (j)
equal 0. need show ppdi (2) ppdi (1), 1 w,
least one segment sm , ppdm (2) > ppdm (1). Specically, sucient show
ppdli (2) + ppdri (2) ppdli (2)ppdri (2) {ppdli (1) + ppdri (1) ppdli (2)ppdri (2)} 0,
inequality strict.
every segment si , ppdli (1) = ppdli (2) (there change relative location),
hence need prove ppdri (2) ppdri (1) ppdli (2){ppdri (2) ppdri (1)}. Since 0
ppdli (2) 1, order inequality hold, left show ppdri (2) ppdri (1) 0.
Lemma 1 know ppdri (j) monotonically decreasing, therefore i,
ppdri (2) ppdri (1), completes proof inequality.
left show = m, ppdrm (2)ppdrm (1) > ppdlm (2){ppdrm (2)ppdrm (1)},
i.e., ppdlm (2) = 1, ppdrm (2) > ppdrm (1). Robot Rr may inuence
ppd sides - segments located left right current
position. Denote number inuenced segments right (y may equal
0). > 0, ppdrwy+1 (2) > ppdrwy (1). words, Rr probability 0
895

fiAgmon, Kaminka & Kraus

reaching segment distance + 1 S1 , S2 segments
away it, therefore Rr probability greater 0 reach it. = 0,
ppdrw (2) = 1 > ppdrw (1), Rr lies exactly segment sw S2 , ppdrw (1) = 0.
Theorem 3. team k mobile robots engaged patrol mission maximizes minimal ppd
following conditions satisfied. a. time distance every two consecutive
robots equal b. robots move direction speed.
Note condition b means robots move together direction, i.e.,
change direction, k robots change direction simultaneously.
Proof. Following Lemma 2, sucient show combination conditions
b yield minimal distance two consecutive
robots along cyclic path.
(N )
Since N segments k robots, k possibilities initial placement
robots along cycle (robots homogenous, regardless order).
robots positioned uniformly along cycle, time distance pair
consecutive robots N/k. minimal value reached. Therefore,
clearly, condition guarantees minimality.
robots coordinated, possible two consecutive robots along
cycle, Ri Ri+1 , move opposite directions. Therefore distance
increase Nk Nk + 2, Lemma 2 ppd segments
smaller. Ri Ri+1 move towards one another, distance
Nk 2 ppd segments become higher.
hand, pair Rj Rj+1 exists distance increases,
total sum distances consecutive robots remains N , hence minimal ppd
around cycle become smaller.
Therefore way achieving minimal distance (maximal ppd) assuring
condition satised, maintaining achieved satisfying condition b.
Since facing full-knowledge adversary, goal robots maximize
minimal ppd along perimeter, following corollary follows.
Corollary 4. full-knowledge adversarial model, optimal patrol algorithm must
guarantee robots positioned uniformly along perimeter throughout execution patrol.
4.1 Penetration Detection Problem
general denition problem follows.
Penetration detection (PD) problem: Given circular fence (perimeter) divided N segments, k robots uniformly distributed around perimeter distance
= N/k (in time) every two consecutive robots, assume takes time
units adversary penetrate, adversary known full-knowledge
patrol scheme. Let p probability characterizing patrol algorithm
robots, let ppdi (p), 1 description ppdi function p. Find

896

fiMulti-Robot Adversarial Patrolling

optimal value p, popt , minimal ppd throughout perimeter maximized.
Formally,
popt = argmax{ min ppdi (p)}
0p1

1id

summarize model Theorems presented above, optimal algorithm
multi-robot perimeter patrol Markovian strategy assumption robots
following characteristics.

robots placed uniformly around perimeter segments every
two consecutive robots.
robots coordinated sense decide turn around,
simultaneously.
time step, robots continue straight probability p turn around
probability 1 p, turn around stay segment
time units.

Note framework (i.e. framework homogenous robots),
division perimeter sections segments creates equivalent symmetric environment sense order calculate optimal patrol algorithm sucient
consider one section segments, entire perimeter N segments.
due fact section completely equivalent other, remains
throughout execution.
divide goal solving PD problem, i.e., nding optimal patrol algorithm
two stages.
1. Calculating ppdi functions 1 d. determined according
robotic movement model (directed undirected), environment model (perimeter/fence) sensorial model (perfect/imperfect, local/extended).
2. Given ppdi functions, nd solution PD problem, i.e., maximize
ppd segment(s) minimal ppd.
two steps independent sense incorporating various dierent robotic
models change process determining solution PD problem, long
result procedure functions representing ppd values segment.
hand, would consider dierent goal functions
maximizing minimal ppd (for example maximizing expected ppd), done
without change rst stage, i.e., determining ppd functions. important
result framework applied dierent environment robotic
models (for example fence patrol), dierent goal functions (corresponding dierent
adversarial settings).
897

fiAgmon, Kaminka & Kraus

rst stage basic model (perimeter patrol, directed movement model
robots, robots perfect local sensing) described Section 4.2, second stage
described Section 4.3. Extensions rst stage dierent robot motion models
sensing models described Section 5.
4.2 Determining Probability Penetration Detection
order nd optimal patrol algorithm, necessary rst determine probability
penetration detection segment si (ppdi ), function p (the probability
characterizing patrol algorithm, shown Section 4.1). section present
polynomial time algorithm determines probability.
stated previously, based symmetric nature system, need consider
one section segments lie two consecutive robots, without loss
generality, R1 R2 . use Markov chain order model possible states
transition states system.
order calculate probability detection segment along time cycles,
use graphic model G illustrated Figure 2. segment si original
path, 1 d, create two states G: One moving clockwise direction (scw
),
moving counterclockwise direction (scc
).

R

R
reach
one
1
2

si segments within time units, adversary discovered, i.e.,
matter segment visited time units. Therefore
would calculate probability first arrival segment,
done dening state sdt (corresponding s0 s0 ) absorbing states, i.e.,
robot passes si once, additional visits segment path
considered. edges G follows. One outgoing edge scw
scc

exists
cw
probability 1 p turning around, one outgoing edge si1 exists
probability p continuing straightforward. Similarly, one outgoing edge scc

cw
cc
si exists probability 1 p turning around, one outgoing edge si+1 exists
probability p continuing straightforward.
cc

S0

S1

S2

S3

S4

S0

cc

0

1p p

cw

1p 0

S1

R2


dt

cw

p



4

1

cw

p



p

cw

cc

3

p



2

1p



4



3

1p
cc

p

1

1p



cc

cc

1

1

p

cw

cc

cw

S3

S4

S4

dt

0

0

0

0

0

0

0

0

0

0

0

0

p

1p p

0

0

0

0

0

0

0

0

p

1p 0

0

0

0

0

0

cc

0

0

0

0

0

1p p

0

0

cw

0

0

0

p

1p 0

0

0

0

cc

0

0

0

0

0

0

0

1p p

S4

cw

0

0

0

0

0

p

1p 0

0

dt

0

0

0

0

0

0

0

0

1

S3

1p



2

dt

cc

S3

cw

S2
p

cw

S2

S2

cc

S2

cw

cc

S1

S1

R1

cw

S1

S3
S4

Figure 2: Conversion initial segments robot locations graphical model,
respective stochastic matrix . segment corresponds two states: one going clockwise one
going counterclockwise. ppdi paths starting scw
ending sdt .


898

fiMulti-Robot Adversarial Patrolling

following theorem, prove probability detecting adversary
robot segment si (i.e., probability arriving segment time units)
equivalent nding paths size absorbing state starting state
scc
. Therefore possible use Markov chain representation determining ppdi ,
shown Algorithm FindFunc.
Theorem 5. Determining probability penetration detection segment si , ppdi ,
equivalent finding paths length start scw
end sdt

Markov chain described above.
Proof. simplicity reasons, proof distinguish sldt srdt ,
absorbing state left right Markov chain (respectively), although
practically represented state sdt .
Clearly, due values considered, ppdi determined visits
two robots surrounding section segments s1 , . . . , sd , denoted Rl Rr .
Recall probability penetration detection segment si dened ppdi =
ppdli + ppdri ppdli ppdri , ppdri (ppdli ) probability adversary, penetrating
si , detected Rr (Rl ). claim ppdli equivalent computing
r
r
l
paths starting scw
ending absorbing state sdt (similarly ppdi state sdt ).
r
l
Clearly, claim, since path length cannot reach sdt sdt ,
follows ppdli ppdri = 0, theorem follow. prove claim ppdli ,
ppdri follows directly.
ppdli probability Rl reach si least time units. Therefore,
must construct paths starting current location Rl passes si ,
take account rst visit segment (everything beyond rst visit
results anyway probability detection = 1). step Rl continues straight
probability p turns around probability 1 p. equivalent keeping Rl
place, moving segments towards Rl probability p switch segments
direction probability 1 p. Hence, every path starting state scw
(without loss
generality; computing paths starting scc

equivalent,

requires
switching
locations

Rl Rr representation) reaching srdt equivalent path started Rl
passing si . Since srdt set absorbing state, every path passing
considered again, i.e., rst visit Rl si considered, required.
Using Markov chain, dene stochastic matrix describes
state transitions system. Figure 2 illustrates Markov chain corresponding
stochastic matrix used computing ppd functions. probability arrival
segment si time units, hence probability penetration detection segment,

cw
scc
2d+1 + s2d+1 entry result Vi , Vi vector 0s, except
1 2i 1th location. formal description algorithm given Algorithm
1. Note algorithm makes symbolic calculation, hence result set
functions p. time complexity Algorithm FindFunc depends calculation time
, generally (2d)3 . However, since sparse, methods multiplying
matrices eciently exist (e.g., see Gustavson, 1978), reducing time complexity
t(2d)2 , i.e. O(td2 ). Since bounded 1, time complexity O(d3 ).

899

fiAgmon, Kaminka & Kraus

Algorithm 1 Algorithm FindFunc(d, t)
1: Create matrix size (2d + 1)(2d + 1), initialized 0s
2: Fill entries follows:
3: [2d + 1, 2d + 1] = 1
4: 1 2d
5:
[i, max{i + 1, 2d + 1}] = p
6:
[i, min{1, 2}] = 1 p
7: Compute =
8: Res = vector size initialized 0s
9: 1 loc
V = vector size 2d + 1 initialized 0s.
10:
11:
V [2loc] 1
Res[loc] = V [2d + 1]
12:
13: Return Res
4.2.1 Handling Higher Values
Algorithm FindFunc Figure 2 demonstrate case = 1, i.e., robot
turns around (with probability 1 p) remains current position one time step.
general case, robot turns around, cost turningmodeled time
higher. cases, Markov chain modied represent value .
ccw
Specically, segment si , instead two corresponding states (scw
si ),
cw
ccw
2( ) states: si si , one set 1 states turning around
direction (from cw ccw vice versa). probabilities assigned edges
ccw
1 p rst outgoing edge scc
rst intermediate state towards si
ccw
cc
1 edge direction, similarly path si si . See Figure
3 illustration. matrix lled according new chain, time
complexity creating matrix grows factor (2d + 1)t (2 + 1)t .
However, long constant, total time complexity change.
S0

S1

S2

S3

S4

S0

R1

R2


p

cw



4

p

cw



3

p

cw



2

1p

1 1p

1 1p

1 1p

1

1

1

1

cw

1

p

dt

1
1

1

dt

1

1
1



cc

4

p

1

1p



1

1

1p
p

1

1
cc

3

p

1p



cc

2

p

1p



cc

1

Figure 3: Illustration Markov chain > 1, specically, = 3.

900

fiMulti-Robot Adversarial Patrolling

4.3 Optimal Adversarial Patrol Algorithm Full-Knowledge Adversaries
cases robots face full knowledge adversary, assumed adversary
take advantage knowledge nd weakest spot patrol, i.e., segment
minimal probability penetration detection. Therefore optimal patrol algorithm
handle adversary one maximizes minimal ppd throughout
perimeter. Hence need nd optimal p, popt , minimal ppd throughout
perimeter maximized.
here, since environment symmetric, need consider entire
patrol path, section segments two consecutive robots. input
procedure set ppdi (p) functions calculated previous section
(Section 4.2).
establishing equations representing probability detection segment,
must nd p value maximizes minimal possible value segment,
p continuous range p [0, 1]. Denote equations ppdi (p), 1 d.
maximal minimal value looking p value yielding maximal value inside
intersection integrals ppdi (p). intersection integrals known
lower envelope functions (Sharir & Agarwal, 1996).
Observing problem geometrically, consider vertical sweep line sweeps
section [0, 1] intersects curves. seeks point p minimal
intersection point sweep line curves, denoted ppd (p), maximal.
p maximin point. Since segment [0, 1] functions ppd1 , . . . , ppdd
continuous, sweep line solution cannot implemented. prove following
lemma point either intersection point two curves, local maxima
one curve (see Figure 4). See Algorithm 2 formal description Algorithm FindP.

Figure 4: illustration two possible maximin points (marked full circle). curves represent
ppdi (p) functions p [0, 1]. left, maximin point created intersection two
curves. right, maximin point local maxima lowest curve.

following, prove Algorithm FindP nds point p maximin
property satised.
Lemma 6. point p yields maximin value ppd (p) following two properties
satisfied.
a. ppd (p) ppdi (p) 1 d.

901

fiAgmon, Kaminka & Kraus

b. One two following conditions holds: ppd (p) intersection two curves (or
more), ppdi (p) ppdj (p) local maxima curve ppdk (p).
Proof. Property a. derived denition maximin point. Therefore
looking maximal point satises property a. must still show point,
ppd (p), obtained either intersection two curves local maxima.
Clearly, maximal point integral found border integral (the curve
itself). area intersections curves lies beneath parts curves,
ppdi1 , . . . , ppdim , ppdij minimal curve section two points

j
j j
[lj , rj ]
j=1 [l , r ] = [0, 1]. nding maximal point section ppdmax =
max{f (x), x [lj , rj ]}, choosing maximal them, i.e., max{ppdjmax , 1 j
m}, obtain ppd (p). section [lj , rj ] maximal point either inside
section borders section. former case precisely local maxima
ppdij . latter intersection point two curves ppdij1 , ppdij ppdij , ppdij+1 .
Lemma 7. point p exists yielding maximin value ppd (p) > 0.
Proof. order prove lemma, need show intersection integrals
ppd1 , . . . , ppdd x section [0, 1], section (0, 1] empty. suces
show every ppdi , ppdi (x) > 0, 0 < x < 1.
function ppdi , 1 represents ppd segment si two robots.
requirement d2 + 1 (for = 1), follows models consider,
0 < p < 1 ppd = 0. Note p = 0 p = 1, ppd either 0 1,
contradict fact point guaranteeing ppd (p) > 0.
Algorithm FindP nds point scanning possible points satisfying conditions
given Lemma 6, reporting x-value (corresponding p value) y-value
dominated ppdi . input algorithm vector functions ppdi , 1
value t. Computing intersections every pair functions costs d2 t2 :
d2 pair computation, t2 nding root polynomial using, example,
Lindsey-Fox method presented Sitton, Burrus, Fox, Treitel (2003). Computing
dominance resulting points respect curves d2 well. Therefore
time complexity Algorithm FindP complexity Algorithm FindFunc, O(( Nk )3 ),
additional cost O(t2 d2 ) = O(( Nk )4 ) (the algorithm itself), i.e., jointly O(( Nk )4 ).
Theorem 8. Algorithm FindP(F, t) finds point p yielding maximin value ppd.
Proof. Algorithm FindP checks intersection points pair curves,
points local maxima curves. checks dominance points, i.e.,
whether location points lower value compared curves,
picks maximal them. Therefore, point found, Lemma 6, point
precisely maximin point. Moreover, Lemma 7 point exists.
4.4 Examples
fully implemented Algorithm FindP order nd optimal maximin p pairs
ds ts. use following examples illustrate relation
reected ppd values. Recall running deterministic patrol algorithm
902

fiMulti-Robot Adversarial Patrolling

Algorithm 2 Algorithm FindP(d, t)
1: F Algorithm FindFunc(d, t).
2: Set popt 0.
3: Fpivot F1,...,d
4:
Compute local maxima (pmax , Fpivot (pmax )) Fpivot
5:
, 1
6:
Compute intersection point pi Fpivot
7:
Fpivot (pi ) > Fpivot (pmax ) Fpivot (pi ) Fk (pi )k
8:
popt pi .
9:
Fpivot (pmax ) > Fpivot (pi ) Fpivot (pi ) Fk (pi )k
popt pmax .
10:
11: Return (pmax , Fpivot (pmax )).

range (0, 1).
range (0, 1).



scenarios handle, minimal ppd 0. assume robots initially heading
clockwise direction.
First all, seen minimal ppd achieved running FindP always
0. t/d 1, i.e., increases, value maximin ppd increases,
vice versa, i.e., t/d 1/2, value maximin ppd decreases. seen
clearly Figure 5. case, xed value 8 checked maximin
ppd 9 15. t/d close 1 (d = 9, = 8) maximin ppd = 0.423,
value decreases 0.05 t/d close 1/2 (d = 15, = 8). Similar results seen
x value check dierent values t.

Figure 5: left, results maximin ppd xed = 8 dierent values d: possible
maximin ppd decreases increases. right, results maximin ppd xed = 16
dierent values t: possible maximin ppd increases increases.

Figure 6, present values ppd 16 segments, dierent possible
values (9 15). seen clearly, value ppd usually decreases
distance left robot increases, reaches segment maximin ppd,
value rises reaching current location robot right.
reason lies fact segments left segment maximin ppd
inuenced mostly robot left, segments right point
mostly inuenced robot right. Since ps yielding maximin point
example value greater 0.8 ts, segment maximin
value right midpoint.
903

fiAgmon, Kaminka & Kraus

Figure 6: ppd values 16 segments values (9 15)

5. Accounting Movement Constraints Sensing Uncertainty
section describe various ways basic framework multi-robot patrol
used solve problem nding optimal patrol algorithm various
settings. First, describe case movement model robots
necessarily directed. discuss various sensing capabilities robots perimeter
patrol: imperfect local sensing, perfect long-range sensing imperfect long-range sensing.
Finally, describe case robots travel along open polyline (fence)
rather perimeter.
5.1 Dierent Movement Models
basic assumption robotic framework robots movement model directed
sense robot go back visit point behind it, physically
turn around. directed movement model suitable various robotic types, example dierential drive robots commonly used robotic labs. However, cases
robots movement undirected, example robot travels along train tracks.We
demonstrate section basic framework used latter case,
i.e., robot movement undirected.
examine dierence Markov chain resulting ppd three dierent
cases:
1. Bidirectional Movement model, denoted BMP. Here, robots movement pattern
similar movement tracks camera going back forth along xed course
(omnidirectional robots). model, robots movement directionality
sense switching directionsright left vice versadoes require
physically changing direction robot (turning around).

904

fiMulti-Robot Adversarial Patrolling

2. Directional Costly-Turn model, denoted DCP, basic framework discussed
far 1. robots movement directed, turning around special
operation attached cost time. Specically, show results
= 1.
3. Directional Zero-Cost model, denoted DNCP, special case DCP
model = 0. robots movement directed, yet turning around
take extra time. coherently dierent BMP, step robot
go either right left, straight back (where could either
right left, depending current heading robot).
basic framework used handling three models simply adapting
Markov chain current model. changes lines 5 6 Algorithm FindFunc.
description Markov chains described Figure 7. BMP model, moves one
step right (segment + 1) probability p one step left (segment
i1) probability 1p. model similar random walk. corresponding
Markov chain simple: edges exist si si+1 probability p si
si1 probability 1 p (with related direction). DNCP DCP
models, assume directionality movement, hence robot continues movement
current direction probability p, turns around (rewinds) probability
1 p. DCP, robot turns around remain segment (as described
Figure 2). DNCP model, chain similar one above, however edges
cc
cc
cw
exist scw
si+1 si si1 probability 1 p. See Figure 7
illustration DNCP, DCP BMP Markov chain.
S0

S1

S2

S3

S4

S0

R1

R2


dt

cw

p



4

DCP

cw

1p
p



cc

cc

cw

DNCP

cw



cc



4

dt





cc



3

p

p

p

p

1

p

cc

1

cw

p



2

cw

1

p





4

1p

3

dt

1p

cc



2

cc

1

1p

p
p
p

1p

dt

1p



2

1p

cc

cw

p

p

3

1p
p

BMP



p

2

p

p

1p 4

cw

1p



3

p

dt


1p



4

p

3


1p



2

dt

1

1p

Figure 7: Conversion initial segments robot locations graphical model three
movement models.

905

fiAgmon, Kaminka & Kraus

examined dierence resulting ppd values three models
case = 16, = 12 (Figure 8). clearly noticeable DCP model yields
less equal values ppd compared DNCP model throughout segments. reason
turning around, DCP model, operation costs extra cycle,
therefore probability arriving segment decreases, compared case
turning around costly. Another interesting phenomena ppd values
BMP considerably higher (and close 1) values obtained models
segments closer location righthand side robot. value decreases
dramatically around value increases back again. Recall
directionality movement, therefore probability going right 0.707 going
left 1 0.707 = 0.293, explains phenomena. One might expected
p = 0.5 random walk model (BMP), however choosing equal probability
going right left, robots necessarily neglect segments away
(the mid segments two consecutive robots), resulting lower minimal ppd.

Figure 8: Results maximin ppd values = 16 = 12 three models: DNCP, DCP
BMP. maximin ppd values circled.

5.2 Perimeter Patrol Imperfect Penetration Detection
Uncertainty perception robots taken consideration practical
multi-robot problems. Therefore consider realistic case robots
imperfect sensorial capabilities. words, even adversary passes
sensorial range robot, still necessarily detect it.
introduce ImpDetect model, robot travels one segment per
time cycle along perimeter monitoring it, imperfect sensing. Denote

906

fiMulti-Robot Adversarial Patrolling

probability adversary penetrating segment si monitored
robot R R actually detect pd 1.
Note pd < 1, revisiting segment robot could worthwhileit could
increase probability detecting adversary. Therefore probability detection
segment si (ppdi ) equivalent probability first arriving si (as illustrated
Section 4.2), probability detecting adversary visit si ,
0 t. Denote probability yth visit robot segment si wiy .
Therefore ppdi dened follows.
ppdi = wi1 pd + wi1 (1 pd ) {wi2 pd + wi2 (1 pd ) {. . . {wit pd }}}

(1)

words, probability detecting penetration probability
detected rst visit (wi1 pd ) plus probability detected
then, later stages. probability detected
second visit (wi2 pd ) later stages, on.
Note time units, wit = 0 currently unoccupied segments si ,
robot resides si , wit precisely (1 pd )t .
One building blocks upon optimal patrol algorithms based,
assumption probability detection decreases remains distance
robot increases, i.e., monotonic decreasing function. fact used
Section 4 proving order maintain optimal ppd, robots must placed
uniformly around perimeter (with uniform time distance), maintain distance
coordinated. order show well, rst prove probability
detection monotonically decreases distance location robot.
Lemma 9. Let = {st+ , . . . , s1 , s0 , s1 , . . . , st } sequence 2t segments, robot
Ra resides s0 time 0. 0, ppdi ppdi+1 , 0, ppdi ppdi1 .
Proof. First, assume > 0 (positive indexes). Equation 1, need compare
1 p + w 1 (1
wi1 pd + wi1 (1 pd ) {wi2 pd + wi2 (1 pd ) {. . . {wit pd }}} wi+1

i+1
2 p + w 2 (1 p ) {. . . {w
pd ) {wi+1


i+1
i+1 pd }}}. therefore sucient show
, 1 t. prove induction m. base case, consider
wim wi+1
1 . accurately proven Lemma 1, based
= 1, i.e., need show wi1 wi+1
fact movement robots continuous, therefore order get
segment must visit segments (the formal proof uses conditional
probability law).
. Denote
assume correctness < m, prove wim wi+1
probability robot placed segment si return si within r time units xi (r).
symmetric environment, every
j, xi (r) = xj (r). Moreover, r, xi (r)
=
xi (r 1). Therefore wim described r+ut wim1 (u) xi (r), similarly wi+1

m1
m1
m1
wi+1
, since xi (r) =
r+ut wi+1 (u) xi+1 (r). induction assumption, wi


xi+1 (r), follows wi wi+1 , proving lemma positive indexes.
negative indexes reective image positive indexes, time
units. Since induction proven values, proof negative indexes
directly follows.

907

fiAgmon, Kaminka & Kraus

following Theorem follows directly Lemma 9. idea behind
since probability penetration detection decreases distance robots
grow, minimal ppd average ppd maximized distance robots
small possible. Since patrol path cyclic, achieved distance
every two consecutive robots uniform, remains uniform. Note Theorem
10 generalization Theorem 3 imperfect sensing (based fact
general structure ppd function remains even robots might benet
revisiting segment, increasing ppd segment).
Theorem 10. full knowledge adversarial model, patrol algorithm ImpDetect
model optimal satisfies two conditions: a. robots placed uniformly
around perimeter. b. robots coordinated sense turn around,
simultaneously. assuring two conditions, robots preserve uniform
distance throughout execution.
Algorithm nding ppdi imperfect sensorial detection:
Find probability penetration detection pd 1 results dierent Markov
chain, hence dierent stochastic matrix . Figure 9 demonstrates new graphical
model new resulting stochastic matrix (compared Figure 2, pd = 1).
cc
dierence algorithm division s0 two states, scw
0 s0 ,
addition absorbing state sdt represents detected state transitions
states. ppdi therefore obtained + 1 steps (compared steps)
sdt location result vector.
time complexity algorithm remains O(d4 ).
S0

S1

S2

S3

S4

S0
cc

R1

R2



cw



4

1p

cw



4

p



3

1p
cc

p

p

cw



2

1p



cc

3

p

1



2

p



cw

0

pd

(1p)(1pd )

1p
cc

p



cc

1

p(1pd )



cc

0

pd

cc

cw

cc

cw

S4

S4

S0

S0

dt

0

0

0

0

0

0

0

0

0

0

0

0

0

0

0

0

cc

0

0

0

1p p

0

0

0

0

0

0

cw

0

p

1p 0

0

0

0

0

0

0

0

cc

0

0

0

0

0

1p p

0

0

0

0

cw

0

0

0

p

1p 0

0

0

0

0

0

cc

0

0

0

0

0

0

1p

0

0

S3
S4

cw

S4

cc

p

cw

S3

p

S3
1

cc

S3

1p 0

S2

dt

cw

S2

0

S1

cw

1p p

S2

cc

S2
p

cc

S1

cw

S1
p(1pd )

cw

S1

S0

0
p(1pd )

0

p

0

0

0

0

p

1p 0

0

0

0

0

0

0

0

0 (1p)(1p


0

0

0
)

pd

S0

cw

0

0

0

0

0

0

0 p(1pd ) (1p)(1p
)0

pd

dt

0

0

0

0

0

0

0

1

0

0

0

Figure 9: Conversion initial segments robot locations graphical model,
respective stochastic matrix imperfect sensing model.

908

fiMulti-Robot Adversarial Patrolling

5.3 Improving Sensing Capabilities Perimeter Patrol
section present enhancements considering various sensing capabilities
robots. Specically, rst consider case robot sense beyond
currently visited segment. oer solution case robot
sense beyond current position, yet sensing capabilities perfect, change
function distance current position.
5.3.1 Extending (Perfect) Sensing Range
section consider LRange model, sensorial range robot exceeds
section currently resides in. Use L denote number segments robot
senses beyond segment currently occupies. L > 0, refer L segments
shaded segments. Note location shaded segments depends direction
robot shading them, always direction robot facing.
trivial solution dealing situation enlarge size segment,
thus enlarge length time unit used base system,
force L 0. However, case lose accuracy analysis system,
length time cycle small possible suit velocity robots
value t.
general, values handled system bounded relation
(the distance every two robots along path) - see Section 4. L > 0,
changes. Specically, L = 0, possible values considered d+
2 1.
However, L > 0, possible handle even smaller values t, i.e., even
penetration time adversary short. Formally, possible values given
following equation.
d+
LtdL1
2
smaller d+
2 L, adversary full knowledge manage
penetrate probability 1, i.e., segment (sL+1 ) unreachable within
time units. hand, greater L 1, simple deterministic
patrol algorithm detect penetrations probability 1. assume
time units robot turns around, sense current segment.
change sensing model robot reected Markov chain, seen
cw
Figure 10. change add 2L arrows absorbing state sdt , scw
1 , . . . , sL
cc
cc
sd , . . . , sdL+1 . stochastic matrix changes accordingly, probability
penetration detection segment si becomes result vector multiplication t+1 Vi ,
Vi vector size 2d + 1 entries 0 except entry corresponding
location scw
, holds value 1, similar process described Algorithm
FindFunc (1).
5.3.2 Extending Sensorial Range Along Imperfect Detection
many cases, actual sensorial capabilities robot composed two characteristics described previous sections, i.e., robot sense beyond current
segment, however sensing ability imperfect. Therefore section introduce
909

fiAgmon, Kaminka & Kraus

L=1
cc

S0

S1

S2

S3

S4

S0

S1

cc

0

cw

cc
cw



cw

p



4

cw

1p





cw

p



cc

3

p

p



2

1p

cc

4

p

3

1

cc

1p



cc

1

2

p

1p



cc

1

dt

cw

cc

cw

S4

dt

1p p

0

0

0

0

0

0

0

0

0

0

0

0

0

0

1

0

0

0

1p p

0

0

0

0

0

p

1p 0

0

0

0

0

0

0

0

0

0

0

1p p

0

0

0

0

0

p

1p 0

0

0

0

cc

0

0

0

0

0

0

1

0

0

S4

cw

0

0

0

0

0

p

1p 0

0

dt

0

0

0

0

0

0

0

0

1

S3
1

cw

S4

S2
1

cc

S3

S2

cw

cw

S3

S1

R2

cc

S2

S1

R1

cw

S1

S3
S4

S2

Figure 10: illustration L segments shaded robot R. case R facing right, therefore
shaded segments right. Markov chain changes accordingly, therefore stochastic
matrix .

ImpDetLRange sensorial model, combination LRange ImpDetect
models. robot sense L segments beyond current segment, yet pd
segment varies necessarily 1. therefore describe compute ppdi
case, deals realistic form sensorial capabilities (Duarte & Hu,
2004): imperfect, long range sensing.
information regarding sensorial capabilities robots includes two parameters. rst describes quantity sensing ability, i.e., number segments
exceeds current segment robot resides, sensing abilities,
denoted L. second parameter describes quality sensing segments
robot sense. given form vector VS = {v0 , v1 , . . . , vL }, vi
probability robot residing s0 detect penetration occurs segment si .
assume values VS decrease monotonically, i.e., increases, vi decreases
remains same.
Markov chain model, illustrated Figure 11, changes order reect
imperfect sensing along long range sensing. absorbing state sdt exist
addition states scw
0 s0 cc. transition probabilities added 2L
segments: i, j 0 L; L + 1 j d, transition scw
s0 probability vi
cc
sj s0 probability vdj+1 . addition, transition scw
si cc
cw probability (1 p)(1 v
probability (1 p)(1 vi ), scc


dj+1 ), hence
j
j
cw
cw
cc
cc
transition probability si si1 p(1 vi ) sj sj+1 p(1 vdj+1 ).
probability penetration detection segment si result t+1 multiplied
Vi location s0 result vector. Note here, similar solution described
Section 5.2, since added new absorbing state (which takes extra step reach),
ppdi result product stochastic matrix Vi location s0 + 1
time steps (not t).

910

fiMulti-Robot Adversarial Patrolling

v0<1 v1<1
S0

S1

S2

S3

S4

S0
cc

R1

S1

R2

cc

S1
p(1v0 )

cw

S1

v1



p



4

1p

cw



4

p



3

1p
cc

p

cw

2

1p



cc

3

p



p

1

p(1v1 )



cw

0

(1p)(1v
1 )

(1p)(1v0 )

cc

cc

cc

2



cw



p(1v1 )

1

p(1v0 )



0

v0

v0

cw

cc

cw

S4

S0

S0

dt

0

v1

) 0

0

0

0

0

0

0

0

0

0

0

0 p(1v1 ) v1

0

0

1p p

0

0

0

0

0

0

p

1p 0

0

0

0

0

0

0

0

cc

0

0

0

0

0

1p p

0

0

0

0

cw

0

0

0

p

1p 0

0

0

0

0

0

cc

0

0

0

0

0

0

0

1p

cw

0

0

0

0

0

p

1p 0

0

p(1v0 ) 0

0

0

0

0

0

0 (1p)(1v
0

S3
S4
S4

cc

v1

cc

S4

0

S0

p

cw

S3

0

S3
1

cc

S3

0

(1p)(1v
)
1
0 p(1v

(1p)(1v
0 )0

cw

S2

cw

S2

dt

cc

S2

cc

S2
cw

0

cw

S1

0

p

0

0

0

0
)

v0

cw

S0

0

0

0

0

0

0

0 p(1v0 ) (1p)(1v
0 )0

v0

dt

0

0

0

0

0

0

0

1

0

0

0

Figure 11: illustration L segments shaded robot R, probability detection
necessarily 1. case R facing right, therefore shaded segments right. Markov
chain stochastic matrix changes accordingly.

5.4 Multi-Robot Adversarial Patrolling Along Fences
general work, specically previous sections, assumed robots travel
around closed, circular, area. section discuss patrolling along open polyline,
known fence patrol. First, discuss patrol dierent perimeter
patrol. describe algorithm determining ppdi fence patrol assuming
robots perfect sensing capabilities, nally provide algorithm
robots imperfect sensing.
5.4.1 Patrolling Along Closed Polyline vs. Open Polyline
following, describe patrolling along open polyline challenging
patrolling cyclic environments (closed polyline).
rst reason lies fact robots required go back forth along
part (or parts) open polyline. result, elapsed time two visits
robot point along line almost twice long elapsed time
circular setting. Figure 12, given two environments: closed polyline (circle) (a)
open polyline (b). Note open polylines b. c. equivalent sense
robot travels one segment per time step, regardless shape
section. lines a. b. total length l number
robots (4). circular environment, takes adversary l/4 time units
penetrate - never able penetrate even robots simply continuously travel
uniform distance them. However, robots travel along open polyline
(b), maximal time duration two visits roboteven best case,
2l/4 2 (Elmaliach, Shiloni, & Kaminka, 2008). Therefore weaker adversary

911

fiAgmon, Kaminka & Kraus

penetration time almost twice long circular fence might still able
penetrate.

a.

b.

c.

Figure 12: Illustration dierence patrolling along line patrolling along circle,
dierent polylines

Another reason added complication analyzing probability penetration
detection open polyline environments lies asymmetric nature traveling
segments along time. circular environment, robots coordinated switch
directions unison, placement robots symmetric time unit. Therefore segments distance robot (with respect direction)
probability penetration detection. Hence order calculate optimal way
movement (in case probability p turning around), sucient consider
one section segments, resulted p equivalent throughout execution.
open polyline environment case. probability penetration detection diers respect current location direction robot. Therefore
algorithm nds ppd segment, needs calculate ppd function
p segment si possible initial location robot inside section.
Therefore results matrix size ppd functions (as opposed vector
functions circular fence).
5.4.2 Determining ppdi Open Polyline (Fence)
Following framework multi-robot patrol along open line proposed Elmaliach
et al. (2008), assume robot assigned patrol back forth along one section
segments. Given framework, would compute optimal patrol algorithm
robots along section. Similar perimeter patrol case (Section 4.2), describe
system Markov chain (see Figure 13), relative stochastic matrix . Since
robots directionality associated movement, create two states
segment: rst traveling segment clockwise direction, second
traveling counterclockwise direction. probability turning around end
section 1, otherwise robot continue straight probability p,
turn around probability 1 p.
Note main dierence perimeter patrol calculation ppdi lies
number resulting ppdi functions. perimeter patrol, due symmetric nature,
one ppdi function segment current location robot, representing
probability robot arriving time units. Here, however, ppdi depends
current location robot, hence location robot functions
probability penetration detection, therefore total d2 functions (compared
perimeter patrol).
912

fiMulti-Robot Adversarial Patrolling

Denote probability penetration detection segment si given robot
currently segment sj ppdji . order calculate ppdji function 1 i, j d,
create dierent matrices: M1 , . . . , Md . matrix Mi corresponds calculating ppdji ,
i.e., probability penetration detection segment si , calculate ppdji
every current location sj robot (similar done perimeter patrol).
Figure 13 demonstrates matrix M2 ppd2i calculated. gure describes
general case pd 1, i.e., robot might imperfect sensing.
cc

S1

S2

S3

S4

S1

cc

0

cw

S1

cw

1



p



4

cw

3

p



cw

4

p



(1p)(1p
)

1p

cc

p(1pd )

2



cc

3



cc

2

p

1

1



p(1pd )

dt
1p

cc

1

1

cw

cc

cw

dt

S4

S4

1p p

0

0

0

0

0

0

1

0

0

0

0

0

0

0

0

cc

0

0

0

)0

0

0

pd

cw

0 p(1pd )(1p)(1p
) 0

0

0

0

0

pd

cc

0

0

0

0

0

1p p

0

0

cw

0

0

0

p

1p 0

0

0

0

cc

0

0

0

0

0

0

0

1p

cw

0

0

0

0

0

p

1p 0

0

0

0

0

0

0

0

1

S3
S3
S4
S4

pd

cc

S3

S2

cw

cw

S3

S2



cc

S2

S1
pd

cw

S1

dt

p

S2

(1p)(1p
)p(1pd

0

p

Figure 13: Description system Markov chain, along stochastic matrix
calculating ppd segment s2 .

5.4.3 Optimal Algorithm Fence Patrol
case fence patrolling, ppd value depends current location robot.
Consequently, optimal p value characterizing patrol robots dierent
segment si , 1 d. Therefore could dierent optimal p values
respect location orientation robot (2d values). However, sucient
calculate ppd values times (and 2d times)only one direction,
direction reective image rst.
order nd maximin point fence patrolling case, use algorithm
MaximinFence, nds value p minimal ppd maximized, using
Algorithm FindP computes point nding maximal point integral
intersection curves (ppdi ). complete description algorithm shown
Algorithm 3.
Algorithm 3 Procedure MaximinFence(d, t)
1: FindFencePPD(d, t)
2: 1
3:
OpP [i] FindP(d, t) additional given input [i] vector ppd functions.
4: Return OpP

913

fiAgmon, Kaminka & Kraus

6. Summary
paper presents problem multi-robot patrolling strong, full-knowledge, adversarial environments. problem team robots required repeatedly visit
path, basic case perimeter, detect penetrations controlled
adversary. assume robots act strong adversarial model, adversary
full knowledge patrolling robots uses knowledge order penetrate
weakest spot patrol. describe framework basic case multirobot patrol around closed polygon, use framework developing, polynomial
time, optimal patrol algorithm, i.e., algorithm strengthens weakest spot
patrol. framework extended order solve problem open
fence environment various movement sensing models robots.
paper makes several assumptions allowing computation optimal strategy
patrolling robots. One assumption rst order Markovian strategy
patrolling robots. Although proving disproving optimality using rst order Markovian strategy hard, could interesting examine case higher order Markovian
strategies compare time complexity performance solution discussed
here. Another direction future work involves non-uniform environments,
utility obtained detecting penetrations one hand succeeding penetration
uniform throughout environment. challenges left future work
include handling heterogenous robots non linear environments.

7. Acknowledgments
Preliminary results appeared Proceedings IEEE International Conference
Robotics Automation (2008), Proceedings Tenth Conference Intelligent
Autonomous Systems (2008) Proceedings IJCAI Workshop Quantitative Risk
Analysis Security Applications (QRASA) (2009). research supported part
ISF grant #1357/07 #1685/07, grant #3 6797. thank anonymous
reviewers constructive comments helpful suggestions, always, thanks K.
Ushi.

References
Agmon, N., Kaminka, G. A., & Kraus, S. (2008). Multi-robot fence patrol adversarial
domains. Proceedings Tenth Conference Intelligent Autonomous Systems
(IAS-10), pp. 193201. IOS Press.
Agmon, N., Kraus, S., & Kaminka, G. A. (2008). Multi-robot perimeter patrol adversarial settings. Proceedings IEEE International Conference Robotics
Automation (ICRA).
Agmon, N., Kraus, S., & Kaminka, G. A. (2009). Uncertainties adversarial patrol. Proc.
IJCAI 2009 workshop Quantitative Risk Analysis Security Applications
(QRASA).

914

fiMulti-Robot Adversarial Patrolling

Ahmadi, M., & Stone, P. (2006). multi-robot system continuous area sweeping tasks.
Proceedings IEEE International Conference Robotics Automation
(ICRA).
Almeida, A., Ramalho, G., Santana, H., Tedesco, P., Menezes, T., Corruble, V., & Chevaleyr, Y. (2004). Recent advances multi-agent patrolling. Lecture Notes Computer
Science, 3171, 474483.
Amigoni, F., Gatti, N., & Ippedico, A. (2008). Multiagent technology solutions planning
ambient intelligence. Proceedings Agent Intelligent Technologies (IAT-08).
Basilico, N., Gatti, N., & Amigoni, F. (2009a). Extending algorithms mobile robot
patrolling presence adversaries realistic settings. Proceedings
IEEE/WIC/ACM International Conference Intelligent Agent Technology
(IAT), pp. 565572.
Basilico, N., Gatti, N., & Amigoni, F. (2009b). Leader-follower strategies robotic patrolling environments arbitrary topologies. AAMAS, pp. 5764.
Chevaleyre, Y. (2004). Theoretical analysis multi-agent patrolling problem. Proceedings Agent Intelligent Technologies (IAT-04).
Coppersmith, D., Doyle, P., Raghavan, P., & Snir, M. (1993). Random walks weighted
graphs applications on-line algorithms. Journal ACM, 40 (3).
Duarte, M. F., & Hu, Y. H. (2004). Distance-based decision fusion distributed wireless
sensor network. Telecommunication Systems, 26 (2-4), 339350.
Elmaliach, Y., Agmon, N., & Kaminka, G. A. (2007). Multi-robot area patrol frequency constraints. Proceedings IEEE International Conference Robotics
Automation (ICRA).
Elmaliach, Y., Agmon, N., & Kaminka, G. A. (2009). Multi-robot area patrol frequency constraints. Annals Math Artificial Intelligence, 57 (3-4), 293320.
Elmaliach, Y., Shiloni, A., & Kaminka, G. A. (2008). realistic model frequencybased multi-robot fence patrolling. Proceedings Seventh International Joint
Conference Autonomous Agents Multi-Agent Systems (AAMAS-08).
Gustavson, F. G. (1978). Two fast algorithms sparse matrices: Multiplication
permuted transposition. ACM Trans. Math. Softw., 4, 250269.
Haynes, T., & Sen, S. (1995). Evolving behavioral strategies predators prey. IJCAI95 Workshop Adaptation Learning Multiagent Systems, pp. 3237.
Lynch, N. A. (1996). Distributed Algorithms. Morgan Kaufmann.
Paruchuri, P., Pearce, J. P., Tambe, M., Ordonez, F., & Kraus, S. (2007). ecient
heuristic approach security multiple adversaries. Proceedings
Sixth International Joint Conference Autonomous Agents Multi-Agent Systems
(AAMAS-08).
Paruchuri, P., Tambe, M., Ordonez, F., & Kraus, S. (2007). Security multiagent systems
policy randomization. Proceedings Sixth International Joint Conference
Autonomous Agents Multi-Agent Systems (AAMAS-07).
915

fiAgmon, Kaminka & Kraus

Pita, J., Jain, M., Ordonez, F., Tambe, M., Kraus, S., & Magorii-Cohen, R. (2009). Eective solutions real-world stackelberg games: agents must deal human
uncertainties. Proceedings Eighth International Conference Autonomous
Agents Multiagent Systems (AAMAS-09).
Sak, T., Wainer, J., & Goldenstein, S. K. (2008). Probabilistic multiagent patrolling.
Proc. 19th Brazilian Symposium Artificial Intelligence (SBIA-08), pp. 124
133.
Sharir, M., & Agarwal, P. K. (1996). Davenport-Schinzel sequences geometric
applications. Cambridge University Press.
Shieh, J. S., & Calvert, T. W. (1992). View route planning patrol exploring
robots. Advanced Robotics, 6 (4), 399430.
Sitton, G., Burrus, C., Fox, J., & Treitel, S. (2003). Factoring very-high-degree polynomials.
Signal Processing Magazine, IEEE, 20 (6), 27 42.
Stewart, W. J. (1994). Introduction Numerical Solution Markov Chains. Princeton
University Press.
Vidal, R., Shakernia, O., Kim, H. J., Shim, D. H., & Sastry, S. (2002). Probabilistic pursuitevasion games - theory, implementation, experimental evaluation. Robotics
Automation, IEEE Transactions on, 18 (5), 662669.

916


