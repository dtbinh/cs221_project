Journal Artificial Intelligence Research 15 (2001) 189-206

Submitted 2/01; published 9/01

ATTac-2000: Adaptive Autonomous Bidding Agent
Peter Stone
Michael L. Littman

pstone@research.att.com
mlittman@research.att.com

AT&T Labs Research, 180 Park Avenue
Florham Park, NJ 07932 USA

Satinder Singh
Michael Kearns

satinder.baveja@syntekcapital.com
michael.kearns@syntekcapital.com

Syntek Capital, 423 West 55th Street
New York, NY 10019 USA

Abstract

First Trading Agent Competition (TAC) held June 22nd July 8th,
2000. TAC designed create benchmark problem complex domain emarketplaces motivate researchers apply unique approaches common task.
article describes ATTac-2000, first-place finisher TAC. ATTac-2000 uses principled bidding strategy includes several elements adaptivity . addition success
competition, isolated empirical results presented indicating robustness
effectiveness ATTac-2000's adaptive strategy.

1. Introduction
first Trading Agent Competition (TAC) held June 22nd July 8th, 2000, organized group researchers developers led Michael Wellman University
Michigan Peter Wurman North Carolina State University (Wellman, Wurman,
O'Malley, Bangera, Lin, Reeves, & Walsh, 2001). goals included providing benchmark problem complex rapidly advancing domain e-marketplaces (Eisenberg,
2000) motivating researchers apply unique approaches common task. key
feature TAC required autonomous bidding agents buy sell multiple
interacting goods auctions different types.
Another key feature TAC participating agents competed
preliminary round many practice games leading finals. Thus, developers
changed strategies response others' agents sort escalating arms race.
Leading competition day, wide variety scenarios possible. successful
agent needed able perform well possible circumstances.
article describes ATTac-2000, first-place finisher TAC. ATTac-2000 uses
principled bidding strategy, includes several elements adaptivity . addition
success competition, isolated empirical results presented indicating robustness
effectiveness ATTac-2000's adaptive strategy.
remainder article organized follows. Section 2 presents details
TAC domain. Section 3 introduces ATTac-2000, including mechanisms behind
adaptivity. Section 4 describes competition results results controlled
experiments testing ATTac-2000's adaptive components. Section 5 compares ATTac-2000
c 2001


AI Access Foundation Morgan Kaufmann Publishers. rights reserved.

fiStone, Littman, Singh, & Kearns

TAC participants. Section 6 presents possible directions future
research concludes.

2. TAC

TAC game instance pits 8 autonomous bidding agents one another. TAC
agent simulated travel agent 8 clients, would travel TACtown Boston back common 5-day period. client characterized
random set preferences possible arrival departure dates; hotel rooms
(The Grand Hotel Le Fleabag Inn); entertainment tickets (symphony, theater,
baseball). obtain utility client, agent must construct travel package
client purchasing airline tickets TACtown securing hotel reservations;
possible obtain additional utility providing entertainment tickets well. TAC
agent's score game instance difference sum clients' utilities
packages receive agent's total expenditure.
TAC agents buy ights, hotel rooms entertainment tickets different types
auctions. TAC server, running University Michigan, maintains markets
sends price quotes agents. agents connect Internet send bids
server update markets accordingly execute transactions.
game instance lasts 15 minutes includes total 28 auctions 3 different
types.

Flights (8 auctions): separate auction type airline ticket: ights
Boston (in ights) days 1{4 ights Boston (out ights) days 2{5.
unlimited supply airline tickets, ask price periodically increases
decreases randomly $0 $10. cases, tickets priced $150
$600. server receives bid ask price, transaction
cleared immediately ask price. resale airline tickets allowed.

Hotel Rooms (8): two different types hotel rooms|the Boston Grand Hotel

(BGH) Le Fleabag Inn (LFI)|each 16 rooms available days 1{4.
rooms sold 16th-price ascending (English) auction, meaning
8 types hotel rooms, 16 highest bidders get rooms 16th highest
price. example, 15 bids BGH day 2 $300, 2 bids $150,
number lower bids, rooms sold $150 15 high bidders plus one
$150 bidders (earliest received bid). ask price current 16th-highest
bid. Thus, agents knowledge of, example, current highest bid. New
bids must higher current ask price. bid withdrawal resale
allowed. Transactions clear auction closes. prevent agents
waiting end game bid hotel rooms, hotel auctions close
unspecified period (roughly one minute) inactivity (no new bids received).

Entertainment Tickets (12): Baseball, symphony, theater tickets sold
days 1{4 continuous double auctions. Here, agents buy sell tickets,
transactions clearing immediately one agent places buy bid price least
high another agent's sell price. Unlike auction types
190

fiATTac-2000: Adaptive Autonomous Bidding Agent

goods sold centralized stock, agent starts random endowment
entertainment tickets. prices sent agents bid-ask spreads, i.e.,
highest current bid price lowest current ask price (due immediate clears, ask
price always greater bid price). bid beats current bid (ask)
price arrives, sale price standing bid (ask) price, opposed arriving
ask (bid) price. case, bid withdrawal ticket resale permitted.
addition unpredictable market prices, sources variability game instance game instance client profiles assigned agents random initial
allotment entertainment tickets. TAC agent 8 clients randomly assigned
travel preferences. Clients parameters ideal arrival day, IAD (1{4); ideal departure day, IDD (2{5); grand hotel value, GHV ($50{$150); entertainment values, EV
($0{$200) type entertainment ticket.
utility obtained client determined travel package given
combination preferences. obtain non-zero utility, client must assigned
feasible travel package consisting arrival day AD corresponding ight,
departure day DD corresponding ight, hotel rooms type (BGH
LFI) day AD < DD. one entertainment ticket
assigned day AD < DD, client given one
entertainment ticket type. Given feasible package, client's utility defined
1000 , travelPenalty + hotelBonus + funBonus

travelPenalty = 100(jAD , IAD j + jDD , IDD j)
hotelBonus = GHV client GBH, 0 otherwise.
funBonus = sum relevant EV's entertainment ticket type assigned
client.
TAC agent's final score simply sum clients' utilities minus agent's
expenditures. Throughout game instance, must decide bids place
28 auctions. end game, must submit final allocation purchased
goods clients.
client preferences, allocations, resulting utilities one particular game
TAC finals (Game 3070 TAC server) shown Tables 1 2.
full details design mechanisms TAC server, see Wellman et al. (2001).

3.

ATTac-2000
ATTac-2000 finished first Trading Agent Competition using principled bidding
strategy, included several elements adaptivity . adaptivity gave ATTac-2000
exibility cope wide variety possible scenarios competition.
section, describe ATTac-2000's bidding strategy, method determining best
allocation goods clients, three forms adaptivity. ATTac-2000's high-level
strategy summarized Table 3.
191

fiStone, Littman, Singh, & Kearns

Client
1
2
3
4
5
6
7
8

IAD
Day 2
Day 1
Day 4
Day 1
Day 1
Day 2
Day 1
Day 1

IDD GHV BEV
Day 5 73 175
Day 3 125 113
Day 5 73 157
Day 2 102 50
Day 3 75
12
Day 4 86 197
Day 5 90
56
Day 3 50
79

SEV TEV
34
24
124 57
12 177
67
49
135 110
8
59
197 162
92 136

Table 1: ATTac-2000's client preferences game 3070. BEV, SEV, TEV EVs
baseball, symphony, theater respectively.

Client
1
2
3
4
5
6
7
8

AD
Day 2
Day 1
Day 3
Day 1
Day 1
Day 2
Day 1
Day 1

DD
Day 5
Day 2
Day 5
Day 2
Day 2
Day 3
Day 5
Day 2

Hotel Ent'ment Utility
LFI
B4
1175
BGH
B1
1138
LFI
T3, B4
1234
BGH
None
1102
BGH
S1
1110
BGH
B2
1183
LFI S2, B3, T4 1415
BGH
T1
1086

Table 2: ATTac-2000's client allocations utilities game 3070. Client 1's \B4"
\Ent'ment" indicates baseball day 4.

3.1 Bidding Strategy

TAC defined simple enough low barrier entry, yet complex
enough prevent tractable solution via direct game-theoretic analysis. Given
optimal solution attainable, use principled approach takes advantage
details TAC scenario. general, ATTac-2000 aims robust parameter
space defined TAC well conceivable opponent strategies.
every bidding opportunity, ATTac-2000 begins computing profitable
allocation goods clients (which shall denote G ), given goods currently
owned current prices hotels ights. (See Section 3.3 caveat.)
purposes computation, ATTac-2000 allocates, consider buying selling,
entertainment tickets. cases, G computed using integer linear programming,
described Section 3.2.
ATTac-2000's high-level bidding strategy based following two observations:
192

fiATTac-2000: Adaptive Autonomous Bidding Agent

1. auctions open:
Obtain updated market prices.
Compute G: profitable allocation goods given current holdings
prices.
Bid 1 2 different modes
Passive: bid keep options open
Active: end, bid aggressively packages
2. Allocate:
Compute G closed auctions allocate purchased goods clients.
Table 3: overview ATTac-2000's high-level strategy.
1. Since airline prices periodically increase decrease equal probability, expected change price airline auction $0. Indeed, shown
airline auction considered isolation, waiting end game
purchase tickets optimal strategy (except rare case price reaches
lowest allowed value).
2. Since hotel prices monotonically increasing, game proceeds, hotel prices
approach eventual closing prices.
Therefore, ATTac-2000 aims delay purchases, particularly airline
purchases, late game. ATTac-2000's high-level bidding strategy based
premise best delay \committing" current G long possible.
Although continually reevaluates G, therefore never technically committed
anything, markets rarely advantageous change client's travel
package would mean wasting airline ticket expensive hotel room (thus requiring
additional ones purchased).
ATTac-2000 accomplishes delay commitment bidding two different modes:
passive active. passive mode, lasts game, designed keep
many options open possible. passive mode, ATTac-2000 computes average
time takes compute place bids, Tb (Tb average time takes go
one iteration loop step 1 Table 3). found Tb ranged 10
seconds well minute, primarily dependent upon server's load. Call
time left game Tl . Tl 2 Tb , ATTac-2000 switches active mode,
buys airline tickets required current G places high bids
required hotel rooms. Note ATTac-2000 expects run 2 bidding iterations
active mode. fact, 1 iteration necessary, huge cost failing
complete iteration end game. Planning 2 active iterations leaves
room error.
Based current G , current mode, Tl, ATTac-2000 bids ights, hotel
rooms, entertainment tickets.
193

fiStone, Littman, Singh, & Kearns

3.1.1 Flights

passive mode, ATTac-2000 bid airline auctions. active mode,
ATTac-2000 buys currently unowned airline tickets needed current G.
cases, means bids airline tickets first bidding opportunity
active mode. However, face drastically changing (hotel entertainment
ticket) prices, G could change suciently necessitate purchasing additional ights, instead simply using ones already purchased.
3.1.2 Hotels

passive mode, ATTac-2000 bids hotel auctions either try win hotels
cheaply auction close early, try prevent hotel auctions closing
early. might advantageous prevent hotel auction closing rooms
currently desired order keep open option switching hotel future
market prices warrant it.
hotel room type (such \Grand Hotel, night 3"), let Hi number
rooms type needed G . Based current price i, Pi , ATTac-2000 tries
acquire n rooms

8
>>
< max(8Hi; 4)
n = > max(H ; 2)
>: max(Hi; 1)


Pi = 0 (only true outset game)
Pi 10
Pi 20
Pi 50:

ATTac-2000's outstanding bids would already win n rooms auction close
current price, ATTac-2000 nothing: auction close prematurely,
ATTac-2000 wins n rooms cheaply, competitors lose opportunity get
rooms type later game. Otherwise, ATTac-2000 bids n rooms $1
current ask price. formula computing n selected risk wasting
$40{$50 per room type benefit maintaining exibility later game.
exact parameters chosen ad-hoc fashion without detailed experimentation.
intuition ATTac-2000's performance sensitive exact values.
active mode, ATTac-2000 bids hotel rooms based marginal value within
allocation G . Let V (G ) value G (the income clients, minus cost
yet-to-be-acquired goods). Let G0c optimal allocation client c fail get
hotel rooms. Note G0c might differ G distribution entertainment
tickets well ights hotels client c. ATTac-2000 bids hotel rooms
assigned client c G price V (G ) , V (G0c ). Since point ights
sunk cost, price tends $1000.
Notice ATTac-2000 bids full marginal utility hotel room required
client's travel package. alternative would divide marginal utility
number rooms package, would eliminated risk spending
hotels itinerary worth. hand, failing win single hotel
room enough invalidate entire itinerary. ATTac-2000 bids full marginal utility
maximize chance valid itineraries obtained clients. combinatorial
194

fiATTac-2000: Adaptive Autonomous Bidding Agent

auction, bidder would able place bid conjunction desired rooms
would therefore need choose two alternatives.
3.1.3 Entertainment Tickets

ATTac-2000's bidding strategy entertainment tickets hypothesizes

ticket, opponent buy (sell) price remains constant course single game
(but may vary game game). avoid underbidding (overbidding)
price, ATTac-2000 gradually decreases (increases) bid course game.
initial bids always optimistic possible, end game, ATTac-2000
willing settle deals minimally profitable. addition, strategy serves
hedge ATTac-2000's early uncertainty final allocation goods clients.
every bidding iteration, ATTac-2000 places buy bid type entertainment
ticket, sell bid type entertainment ticket currently owns. cases,
prices depend amount time left game (Tl), becoming less aggressive
time goes (see Figure 1).
Buy value

200

}$50
Bid Price ($)

Owned, unallocated
sell value

}$20

100
Owned,allocated
sell value
$30

0

5

10

Game Time (min.)

15

Figure 1: ATTac-2000's bidding strategy entertainment tickets. black circles indicate calculated values tickets ATTac-2000. lines indicate bid
prices corresponding values. example, solid line (which increases
time) corresponds buy price relative buy value. Correspondence text lines indicated similar line types boxes
surrounding text.
owned entertainment ticket E , E assigned G, let V (E ) value
E client assigned G (\owned, allocated sell value" Figure 1).
ATTac-2000 offers sell E min(200; V (E ) + ) decreases linearly 100
20 based Tl.1 current bid price greater resulting sell price,
ATTac-2000 raises sell price 1 cent lower current bid price order get
high price possible.
E owned assigned G (because clients either unavailable night
already scheduled type entertainment G ), let V (E ) maximum value
1. Recall $200 maximum possible value E client TAC parameters.

195

fiStone, Littman, Singh, & Kearns

E clients, i.e. greatest possible value E given client profiles (\owned,
unallocated sell value" Figure 1). ATTac-2000 offers sell E max(50; V (E ) , )
increases linearly 0 50 based Tl . again, ATTac-2000 raises price
meet existing bid price greater target price. strategy ects
increasing likelihood game progresses G close final client
allocation, thus currently unused tickets needed end.
active mode, ATTac-2000 assumes G final offers sell unneeded tickets
$30 order obtain least value (represented discrete point
bottom right Figure 1). $30, ATTac-2000 would rather waste ticket
allow competitor make large profit.
Finally, ATTac-2000 bids buy type entertainment ticket E (including
offering sell) based increased value would derived owning
E . Let G0E optimal allocation would result E owned (\buy value"
Figure 1). Note G 0E could different ight hotel assignments G
make effective use E . Then, ATTac-2000 offers buy E V (G0E ) , V (G) , ,
decreases linearly 100 20 based Tl.
parameters described section chosen arbitrarily without detailed
experimentation. intuition that, unless opponents know explicitly exploit
values, ATTac-2000's performance sensitive them.

3.2 Allocation Strategy
evident Section 3.1, ATTac-2000 relies heavily computing current
profitable allocation goods clients, G . Since G changes prices change, ATTac-2000
needs recompute every bidding opportunity. using integer linear programming
approach, ATTac-2000 able compute optimal final allocations every game instance
tournament finals|one 2 entrants so.2
TAC participants used form greedy strategy allocation (Greenwald
& Stone, 2001). computationally feasible quickly determine maximum utility
achievable client 1 given set purchased goods, move client 2 remaining
goods, etc. However, greedy strategy lead suboptimal solutions. example,
consider 2 clients B identical travel days IAD IDD well identical
entertainment values EV , A's GHV = $50 B 's GHV = $150. agent
exactly one type hotel room day, optimal assignment clearly
assign BGH client B . However, client A's utility optimized first,
assigned BGH, leaving B stay LFI. agent's resulting score would 100 less
could been.
improvement basic greedy strategy, implemented heuristic approach
implements greedy strategy 100 random client orderings chooses
profitable resulting allocation. Empirically, resulting allocation often optimal,
never far optimal. addition, always quick compute. set seven
games tournament, greedy allocator run approximately 600
times produced allocations averaged 99.5% optimal value.
2. computed Shou-de Lin TAC organizing team.

196

fiATTac-2000: Adaptive Autonomous Bidding Agent

competition drew near, however, became clear every point would count.
therefore implemented allocation strategy guaranteed find optimal
allocation goods.3 integer linear programming approach used ATTac-2000 works
defining set variables, constraints variables, objective function.
assignment variables represents allocation clients constraints
ensure allocation legal. objective function encodes fact seek
allocation maximum value (utility minus cost).
following notation needed describe integer linear program. formal notation included completeness; equivalent English description follows equation.
symbol c client (1 8). symbol f feasible travel package,
consists of: arrival day AD(f ) (1 4); departure day DD(f ) (2 5),
choice hotel H (f ) (BGH LFI). 20 travel packages. Symbol e
entertainment ticket, consists of: day event D(e) (1 4),
type event (e) (baseball b, symphony s, theater t). 12 different
entertainment tickets. Symbol r resource (AD, DD, BGH, LFI).
Using notation, 272 variables are: P (c; f ), indicates whether client c
allocated feasible travel package f (160 variables); E (c; e), indicates whether client
c allocated entertainment ticket e (96 variables); and, Br (d) number copies
resource r would buy day (16 variables).
several constants define problem: (d) number tickets
resource r currently owned day d, pr (d) current price resource r day d,
(c; f ) utility customer c travel package f , uE (c; e) utility customer
c entertainment ticket e.
Given notation, objective maximize utility minus cost

X
c;f

(c; f )P (c; f ) +

,
,

X
d2f2;3;4;5g

X
c;e

uE (c; e)E (c; e)

pDD (d)BDD(d)

X

d2f1;2;3;4g;r2fBGH;LFI;ADg

pr (d)Br (d)

subject following 188 constraints:
c, Pf P (c; f ) 1: client gets one travel package (8 constraints).
2 f1; 2; 3; 4g,

X X

c f jAD(f )=d

P (c; f ) oAD (d) + BAD (d);

2 f1; 2; 3; 4g h 2 fBGH; LFIg,

X

X

P (c; f ) oh (d) + Bh (d);
c f jH (f )=h & AD(f )d<DD(f )
3. general allocation problem NP-complete, equivalent set-packing problem (Garey &
Johnson, 1979). Exhaustive search computationally intractable even 8 clients.
197

fiStone, Littman, Singh, & Kearns

2 f2; 3; 4; 5g,

X X
c f jDD(f )=d

P (c; f ) oDD (d) + BDD (d) :

demand resources selected travel packages must exceed sum
owned bought resources (16 constraints).

e, Pc E (c; e) oE (e): total quantity entertainment ticket allocated
exceed owned (12 constraints).

c e, Pf jAD(f )D(e)<DD(f ) P (c; f ) E (c; e): entertainment ticket

used day arrival departure day selected travel
package (96 constraints).

c 2 f1; 2; 3; 4g, PejD(e)=d E (c; e) 1: client use one
entertainment ticket per day (32 constraints).

c 2 fb; s; tg, PejT (e)=y E (c; e) 1: client use type
entertainment ticket (24 constraints).

variables integers.
solution resulting integer linear program value-maximizing allocation
owned resources customers along list resources need purchased.
Using linear programming package \LPsolve", ATTac-2000 usually able find
globally optimal solution one second 650 MHz Pentium II.
Note means possible formulation allocation.
Greenwald, Boyan, Kirby, Reiter (2001) studied variant found performed
extremely well collection large, random allocation problems.
approach guaranteed find optimal allocation, usually
quickly. However, since integer linear programming NP-complete problem, inputs
lead significantly longer solution times. sample 32 games taken shortly
finals, allocator called 1866 times. 93% cases, optimization took
second less. Less 1% took 6 seconds. However, 3 longest running times
minute came game. ATTac-2000 used strategy
integer linear program takes 6 seconds solve, above-mentioned
greedy strategy random client orderings used fall-back strategy rest
game. fall-back strategy needed tournament finals.

3.3 Adaptivity

TAC game instance, information available agents ask prices|
individual bids visible. game, transaction-by-transaction data available,
lack within-game information precluded competitors using detailed models
opponent strategies decision making. ATTac-2000 instead adapts behavior on-line
three different ways: adaptable timing bidding modes; adaptable allocation strategy;
adaptable hotel bidding.
198

fiATTac-2000: Adaptive Autonomous Bidding Agent

3.3.1 Timing Bidding Modes

ATTac-2000 decides switch passive active bidding mode based

observed server latency Tb current game instance (see Section 3.1).
3.3.2 Allocation

ATTac-2000 adapts allocation strategy based amount time takes

integer linear programming approach determine optimal allocations current game
instance (see Section 3.2).
3.3.3 Hotel Bidding

Perhaps significantly, ATTac-2000 predicts closing prices hotel auctions based
closing prices previous games. Hotel bidding TAC particularly challenging
due extreme volatility prices near end game. stated Section 3.1.2,
end game ATTac-2000 bids marginal utility desired hotel room,
often excess $1000.
preliminary competition, agents bid marginal utilities hotel
rooms. did, however, generally dominated competitors; agents
high-bidders, bidding $1000, always winning hotels bid, paying far
less bids. observed dominant strategy preliminary rounds,
agents, including ATTac-2000, adopted high-bidding strategy actual
competition. result many negative scores, prices skyrocketed last moments
game 16 high bids given room.
Section 3.1, stated ATTac-2000 computes G based current prices
hotel rooms. prices eventually become high, ATTac-2000 would either
end paying high price hotel rooms else fail get travel packages
clients. alternative avoid counting obtaining contentious
hotel rooms.
Since strategies changing last minute finals, way
identify priori hotels would contentious whether hotel prices would
actually skyrocket tournament. Therefore, ATTac-2000 divided 8 hotel rooms
4 equivalence classes, exploiting symmetries game (hotel rooms days 1
4 equally demand rooms days 2 3), assigned priors
expected closing prices rooms, adjusted priors based observed
closing prices tournament.
expected, Grand Hotel days 2 3 turned contentious
finals. Le Fleabag Inn days fairly contentious. Whenever
actual price hotel less predicted closing price, ATTac-2000 used
predicted hotel closing price computing allocation values.
One additional method predicting whether hotel prices would skyrocket given
game notice participants whether tended highbidders past games (see Figure 2). Although information available via
server's API, game's participants always published beforehand TAC web page.
automatically downloading information web (a practice whose ethicality
questioned competition), matching precompiled database
199

fiStone, Littman, Singh, & Kearns

agents high-bidders past, ATTac-2000 would use predicted hotel closing
prices games 3 high-bidders involved: games fewer high-bidders,
prices hotel rooms almost never skyrocketed4 . turned out, one ATTac2000's games semi-finals, games finals, involved several high-bidders,
thus triggering use predicted hotel closing prices.
RiskPro grand day 2 recent

aster grand day 2

250

1400

Aster: Grand Day 2

1200

Bid Price ($)

200

Bid Price ($)

1200

RiskPro: Grand Day 2

200
150

100
100

1000

800
800

600

400
400

50
200

0
0

0

100

200

300

5

400

500

600

10

Game Time (min.)

700

800

0
0

900

15

0

100

200

5

300

400

500

10

600

Game Time (min.)

700

800

900

15

Figure 2: Graphs two different agents' bidding patterns many games. line
represents one game's worth bidding single auction. Left: RiskPro never
bids $250 games plotted. Right: Aster consistently bids $1000
rooms.
Empirical testing (Section 4) indicates strategy extremely beneficial situations hotel prices indeed escalate, lead significantly degraded
performance not.

4. Results

TAC consisted preliminary round ran course week involved
roughly 80 games 22 participants. top 12 finishers invited
semi-finals finals Boston, July 8th. Since agents conditions
constantly changing, since 13 games played agent semi-finals
finals, competition provide controlled testing environment.
section, describe ATTac-2000's success tournament, present empirical
results controlled tests demonstrate effectiveness robustness ATTac-2000's
adaptive strategy.

4.1 Competition

ATTac-2000's scores 88 preliminary-round games ranged ,3000 4500
(mean 2700, std. dev. 1600). good score game instance 3000 4000 range.
noticed many bad scores (12 less 1000 seven less 0).
4. 2 high-bidders, way price escalate would bid combined
total 16 rooms hotel type. could happen clients stay
hotel night, unlikely scenario given TAC parameters.

200

fiATTac-2000: Adaptive Autonomous Bidding Agent

largely result ATTac-2000 yet imbued adaptive timing
bidding modes. preliminary round, ATTac-2000 shifted passive active
bidding mode 50 seconds left game instance. 50 seconds usually plenty
time allow least 2 iterations ATTac-2000's bidding loop,
occasions network server lags would take 50
seconds obtain updated market prices submit bids. case, ATTac-2000 would
either fail buy airline tickets, worse still, would buy airline tickets get
final hotel bids time. Noticing server lag tended consistent within
game instance (perhaps due trac patterns generated participating agents),
introduced adaptive timing bidding modes described Section 3.3.
change, ATTac-2000 always able complete least one, usually two, bidding
loops active bidding phase.
adaptive allocation strategy never came play finals, ATTac-2000
able optimally solve allocation problems came finals
quickly using integer linear programming method.
However, adaptive hotel bidding play big role. ATTac-2000 performed well
best teams early TAC games hotel prices (surprisingly) stayed low,
out-performed competitors final games tournament hotel
prices suddenly rose high levels. Indeed, last 2 games, popular hotels
closed $400. ATTac-2000 steered clear hotel rooms effectively
closest competitors.
Table 4 shows scores 8 TAC finalists (Wellman et al., 2001). ATTac-2000's
consistency (std. dev. 443 opposed 1600 preliminaries) apparent: avoided
disastrous games, presumably due large part adaptivity regarding timing
hotel bidding.
Rank
1
2
3
4
5
6
7
8

Team

Avg. Score Std. Dev.
ATTac-2000 3398
443
RoxyBot
3283
545
aster
3068
493
umbctac1 3051
1123
ALTA
2198
1328
rajatish 1873
1657
RiskPro
1570
1607
T1
1167
1593

Institution
AT&T Labs { Research
Brown University, NASA Ames Research
STAR Lab, InterTrust Technologies
University Maryland Baltimore County
Artificial Life, Inc.
University Tulsa
Royal Inst. Technology, Stockholm University
Swedish Inst. Computer Science, Industilogik

Table 4: scores 8 TAC finalists semi-finals finals (13 games).

4.2 Controlled Testing

order evaluate ATTac-2000's adaptive hotel bidding strategy controlled manner,
ran several game instances ATTac-2000 playing two variants itself:
201

fiStone, Littman, Singh, & Kearns

1. High-bidder always computed G based current hotel prices (as opposed
using priors averages past closing prices).
2. Low-bidder always computed G variant 1, bid hotel rooms
$50 current ask price (as opposed marginal utility, tended
$1000).
extremes, ATTac-2000 7 high-bidders playing, least one hotel price
skyrockets every game since agents bid high hotel rooms.
hand, ATTac-2000 7 low-bidders playing, hotel prices never skyrocket since
agents ATTac-2000 bid close ask price. goal measure whether ATTac2000 could perform well extreme scenarios well various intermediate ones.
Table 5 summarizes results.
#high agent 2
7 (14)
,
6 (87)
,
5 (84)
,
4 (48)
,
3 (21)
,
2 (282)
,

agent 3 agent 4 agent 5 agent 6 agent 7 agent 8

9526 |||||||||||||,!
10679 ||||||||||,!
1389
10310 |||||||,!
, 2650
10005 ||||,!
,|||| 4015
5067 ,!
,||||||| 3639
209
,|||||||||| 2710

Table 5: difference ATTac-2000's score score
seven agents averaged games controlled experiment. differences
statistically significant 0:001 level, except one marked italics.
row corresponds different number high-bidders (excluding ATTac2000 itself). first column presents number high-bidders well
number experiments ran scenario (in parentheses). column
labeled \agent i" shows much better ATTac-2000 average agent i.
Scores stair-step line high-bidders (variant 1) scores
line low-bidders (variant 2). Results identical agents averaged
obtain single average score difference type agent row.
cases, ATTac-2000 beats agents.
row Table 5 corresponds different number high-bidders game;
example, row labeled 4 high-bidders corresponds ATTac-2000 playing
4 copies variant 1 3 copies variant 2. Results identical agents averaged
obtain single average score difference type agent row. first
column, show parentheses number games played results
row|each row ects different number runs. cases, ran enough game instances
achieve statistically significant results. However, cases ran instances
turned required. column labeled agent shows difference
ATTac-2000's score score agent averaged games. scenarios,
202

fiATTac-2000: Adaptive Autonomous Bidding Agent

differences positive, showing ATTac-2000 outscored agents average.5
Statistical significance computed paired T-tests; results significant
0:001 level except one marked italics. mentioned before, number
high-bidders greater equal 3, expect price contentious hotels rise,
scenarios ATTac-2000 significantly outperforms agents.
large score differences appearing top rows Table 5 mainly due fact
agents get large, negative scores since end buying many expensive hotel
rooms.
experiments, ATTac-2000 always uses adaptive hotel price expectations, even
2 high-bidders. last row, number high-bidders 2,
little bidding hotel prices expected case, get statistical
significance relative two high-bidders (agent 2 agent 3), since strategies
nearly identical ATTac-2000's case. get high statistical significance relative
agents (copies variant 2), however. Thus, ATTac-2000's adaptivity
hotel prices seems help lot hotel prices skyrocket seem
prevent ATTac-2000 winning average don't.
results Table 5 provide strong evidence ATTac-2000's ability adapt robustly
varying number competing agents bid hotel prices near end game.
Note ATTac-2000 designed perform well itself. 8 copies ATTac2000 play repeatedly, favor hotel rooms thus
consistently get large negative scores. would interesting determine whether
exists strategy harmful ATTac beneficial adversary.

5. Related Work
Although good deal research auction theory, especially perspective auction mechanisms (Klemperer, 1999), studies autonomous bidding agents
interactions relatively recent. TAC one example. FM97.6 another auction test-bed, based fishmarket auctions (Rodriguez-Aguilar, Martin,
Noriega, Garcia, & Sierra, 2001). Automatic bidding agents created
domain (Gimenez-Funes, Godo, Rodriguez-Aguiolar, & Garcia-Calves, 1998).
number studies agents bidding single good multiple auctions (Ito,
Fukuta, Shintani, & Sycara, 2000; Anthony, Hall, Dang, & Jennings, ; Preist, Bartolini, &
Phillips, 2001). Outside of, related to, auction scenario, automatic shopping
pricing agents internet commerce studied within simplified model (Greenwald & Kephart, 1999).
Twenty-two agents 6 countries entered TAC, 12 qualified compete
semi-finals finals Boston. designs agents motivated
wide variety research interests including machine learning, artificial life, experimental
economics, real-time systems, choice theory (Greenwald & Stone, 2001).
approach motivated research interests multiagent learning (Littman,
1994; Stone, 2000; Singh, Kearns, & Mansour, 2000). Based problem description,
expected find several learning opportunities domain. noted above, detailed
5. general, ATTac-2000's average score decreased increasing numbers high-bidders, games
became volatile.

203

fiStone, Littman, Singh, & Kearns

opponent modeling precluded system dynamics. Nonetheless, ATTac-2000's
adaptivity one keys success, particularly avoiding skyrocketing hotels.
2nd 3rd place agents used different strategy prepare possibility
skyrocketing hotels. Rather avoiding popular hotels entirely tracking closing
prices across game instances, discouraged agents bidding many
particular hotel room, thus spreading demand across rooms (Greenwald &
Stone, 2001). strategy safer limit (i.e., continues work even
everyone uses it), greater potential cost agent event hotel prices
skyrocket, since agent still distribute demand less desirable rooms.
hand, ATTac-2000 would notice prices skyrocketing thus
bid optimal travel packages given current prices.

6. Conclusion Future Work

TAC-2000 first autonomous bidding agent competition. successful event, minor improvements would increase interest multiagent learning
perspective.

Currently, incentive buy airline tickets end game.

price ights tend increase, supply limited, agents would
balance advantage keeping options open savings committing
travel packages earlier6 .

information structure TAC setup impossible observe

bidding patterns individual agents games. Nonetheless, strategic
behavior individual agents often profoundly affected market dynamics|particularly
hotel auctions. seems would beneficial able directly observe
behavior individual agent. information available regarding
bidding behavior agents game (such agents could infer
clients' preferences, therefore market supply, demand, prices), TAC agents
would potentially able learn predict market behavior game proceeds.

without modifications, hope able participate future TACs,
goal adding additional adaptive elements ATTac-2000.
Another direction future research apply lessons learned TAC real
simultaneous interacting auctions. straightforward write bidding agents participate on-line auctions single good value client fixed ahead time:
agent bid slightly ask price auction closes price exceeds
value. However, values multiple goods interact, case TAC,
agent deployment nearly straightforward.
One real application Federal Communications Commission's auctioning
radio spectrum (Weber, 1997; Cramton, 1997). Especially companies trying
achieve national coverage, values different licenses interact complex ways.
Perhaps autonomous bidding agents able affect bidding strategies future
6. change adopted specification TAC-01.

204

fiATTac-2000: Adaptive Autonomous Bidding Agent

auctions. Indeed, related research begun path creating straightforward bidding agents realistic FCC Auction Simulator (Csirik, Littman, Singh, &
Stone, 2001).
obvious application, extended version ATTac-2000 could potentially
become useful real travel agents, end users wish create travel
packages.

Acknowledgements
would thank TAC team University Michigan, including Michael Wellman, Peter Wurman, Kevin O'Malley, Daniel Reeves, William Walsh, constructing
TAC server responding promptly cordially many requests conducting research reported here. would thank anonymous reviewers
helpful comments suggestions.

References

Anthony, P., Hall, W., Dang, V. D., & Jennings, N. R. Autonomous agents participating
multiple on-line auctions..
Cramton, P. C. (1997). FCC spectrum auctions: early assessment. Journal
Economics Management Strategy, 6 (3), 431{495.
Csirik, J. A., Littman, M. L., Singh, S., & Stone, P. (2001). FAucS: FCC spectrum auction simulator autonomous bidding agents. Proceedings Second International Workshop Electronic Commerce. appear. Available
http://www.research.att.com/~pstone/papers.html.
Eisenberg, A. (2000). online auctions future, it'll bot vs. bot vs. bot. New
York Times. August 17th.
Garey, M. R., & Johnson, D. S. (1979). Computers Intractability: Guide
Theory NP-completeness. Freeman, San Francisco, CA.
Gimenez-Funes, E., Godo, L., Rodriguez-Aguiolar, J. A., & Garcia-Calves, P. (1998). Designing bidding strategies trading agents electronic auctions. Proceedings
Third International Conference Multi-Agent Systems, pp. 136{143.
Greenwald, A., Boyan, J., Kirby, R. M., & Reiter, J. (2001). Bidding algorithms simultaneous auctions. Proceedings Third ACM Conference E-Commerce, p.
appear.
Greenwald, A., & Kephart, J. O. (1999). Shopbots pricebots. Proceedings
Sixteenth International Joint Conference Artificial Intelligence, pp. 506{511.
Greenwald, A., & Stone, P. (2001). Autonomous bidding agents trading agent competition. IEEE Internet Computing, 5 (2), 52{60.
205

fiStone, Littman, Singh, & Kearns

Ito, T., Fukuta, N., Shintani, T., & Sycara, K. (2000). Biddingbot: multiagent support
system cooperative bidding multiple auctions. Proceedings Fourth
International Conference MultiAgent Systems, pp. 399{400.
Klemperer, P. (1999). Auction theory: guide literature. Journal Economic
Surveys, 13 (3), 227{86.
Littman, M. L. (1994). Markov games framework multi-agent reinforcement learning. Proceedings Eleventh International Conference Machine Learning,
pp. 157{163 San Mateo, CA. Morgan Kaufman.
Preist, C., Bartolini, C., & Phillips, I. (2001). Algorithm design agents participate multiple simultaneous auctions. Agent Mediated Electronic Commerce III
(LNAI), pp. 139{154. Springer-Verlag, Berlin.
Rodriguez-Aguilar, J. A., Martin, F. J., Noriega, P., Garcia, P., & Sierra, C. (2001). Towards
test-bed trading agents electronic auction markets. AI Communications.
press. Available http://sinera.iiia.csic.es/~pablo/pncve.html.
Singh, S., Kearns, M., & Mansour, Y. (2000). Nash convergence gradient dynamics
general sum games. Proceedings Sixteenth Conference Uncertainty
Artificial Intelligence (UAI), pp. 541{548.
Stone, P. (2000). Layered Learning Multiagent Systems: Winning Approach Robotic
Soccer. MIT Press.
Weber, R. J. (1997). Making less: Strategic demand reduction FCC
spectrum auctions. Journal Economics Management Strategy, 6 (3), 529{548.
Wellman, M. P., Wurman, P. R., O'Malley, K., Bangera, R., Lin, S.-d., Reeves, D., & Walsh,
W. E. (2001). trading agent competition. IEEE Internet Computing, 5 (2), 43{51.

206


