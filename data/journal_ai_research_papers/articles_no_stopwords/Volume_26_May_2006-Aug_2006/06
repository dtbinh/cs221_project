journal artificial intelligence

submitted published

landscape random job shop scheduling
instances depends ratio jobs machines
matthew j streeter
stephen f smith

matts cs cmu edu
sfs cs cmu edu

carnegie mellon university
forbes avenue pittsburgh pa usa

abstract
characterize search landscape random instances job shop scheduling
jsp specifically investigate expected values backbone size
distance near optimal schedules makespan random schedules vary
n
n
n
function job machine ratio
limiting cases


n
provide analytical intermediate values perform experiments
n
n
prove
backbone size approaches
backbone
n
n
vanishes process resp simple priority rules
almost surely generate optimal schedule providing theoretical evidence easyhard easy pattern typical case instance difficulty job shop scheduling draw
connections theoretical big valley picture jsp landscapes

introduction
motivations
goal work provide picture typical landscape random instance
job shop scheduling jsp determine picture changes
n
function job machine ratio
picture potentially useful
n
understanding typical case instance difficulty varies function
designing
selecting search heuristics take advantage regularities typical instances
jsp

understanding instance difficulty function

n


job shop scheduling literature contains much empirical evidence square jsps
n

difficult solve rectangular instances fisher thompson
work makes theoretical empirical contributions toward understanding
phenomenon empirically random schedules random local
n
analytically prove two
optima furthest optimality
n
n
limiting cases exist simple priority rules almost surely
produce optimal schedule providing theoretical evidence easy hard easy pattern
instance difficulty jsp
c

ai access foundation rights reserved

fistreeter smith

informing design search heuristics
heuristics local search example tabu search glover laguna nowicki
smutnicki iterated local search lourenco martin stutzle
shown excellent performance benchmark instances job shop scheduling
jain meeran jones rabelo order design effective heuristic one
must explicitly implicitly make assumptions search landscape instances
heuristic applied example nowicki smutnicki motivate
use path relinking state art tsab citing evidence
jsp big valley distribution local optima nowicki smutnicki one
conclusions work typical landscape random instances
n
n
thought big valley values
close larger values
including values
common benchmark instances landscape breaks many big valleys suggesting
modifications tsab may allow better handle case discuss tsab

contributions
contributions twofold first design novel set experiments
run experiments random instances jsp second derive analytical
confirm provide insight trends suggested experiments
main contributions empirical work follows
n
low makespan schedules clustered small
low values
region search space many attributes e directed disjunctive graph edges
n
common low makespan schedules
increases low makespan schedules
become dispersed throughout search space attributes common
low makespan schedules

introduce statistic neighborhood exactness used quantitatively
measure smoothness search landscape estimate expected value
statistic random instances jsp combination
clustering suggest landscape typical instances jsp
n
n
described big valley low values
high values

many separate big valleys
limiting cases
prove

n




n


derive analytical specifically

n

expected size backbone e set variables
n
common value global optima approaches

expected backbone size approaches
n
n

resp
randomly generated schedule almost surely
located close search space optimal schedule b near optimal
makespan



fithe landscape random job shop scheduling instances

related work
least three threads conducted search space analyses
related ones conduct include literature big valley distribution
common number combinatorial optimization studies backbone size
boolean satisfiability statistical mechanical analysis tsp briefly review
three areas well relevant work phase transitions easy hardeasy pattern instance difficulty
big valley
term big valley originated boese et al examined
distribution local optima traveling salesman tsp sample
local optima obtained next descent starting random tsp tours boese calculated
two correlations
correlation cost locally optimal tour average distance
locally optimal tours
correlation cost locally optimal tour distance
tour best tour sample
distance two tsp tours defined total number edges minus
number edges common two tours fact
correlations surprisingly high boese conjectured local optima tsp
arranged big valley adapted work boese et al figure
gives intuitive picture big valley set local minima appears convex
one central global minimum boese et al offer formal definition
big valley landscape
boeses analysis applied combinatorial kim moon
including permutation flow shop scheduling watson barbulescu whitley
howe reeves yamada jsp nowicki smutnicki correlations observed jsp generally weaker observed tsp
related study mattfeld examined cost distance correlations famous
jsp instance ft beasley found evidence massif central many
near optimal solutions reside laying closer together local optima contains
related backbone size ft
backbone size
backbone instance set variables assigned common value
globally optimal solutions instance example boolean satisfiability
sat backbone set variables assigned fixed truth value
satisfying assignments jsp backbone defined number
disjunctive edges common orientation globally optimal schedules
formal definition given
large literature backbones combinatorial optimization including many empirical analytical slaney walsh monasson zecchina


fistreeter smith

figure intuitive picture big valley landscape
kirkpatrick selman troyansky analysis difficulty jsp
watson et al present histograms backbone size random x job machine
x job machine jsp instances summarizing experiments reported
watson et al note job machine ratios bias toward small backbones becomes pronounced ratios bias toward larger backbones
magnified generalizes observations proves two theorems give
insight phenomenon occurs
statistical mechanical analyses
large growing literature applies techniques statistical mechanics analysis
combinatorial optimization martin monasson zecchina least
one obtained literature concerns clustering low cost solutions study
tsp mezard parisi obtain expression expected overlap number
common edges random tsp tours drawn boltzmann distribution
temperature parameter boltzmann distribution lowered placing
probability mass low cost tsp tours expected overlap approaches though
use boltzmann weighting examines expected overlap
random jsp schedules changes probability mass placed low makespan
schedules
phase transitions easy hard easy pattern
loosely speaking phase transition occurs system expected value
statistic varies discontinuously asymptotically function parameter
example holds random instances sat satisfiable
probability asymptotically approaching clause variable ratio
n
satisfiable probability approaching clause variable ratio
similar statement conjectured hold sat critical value k
n exists
must satisfy k achlioptas peres
exhibit phase transitions notably sat average case instance
difficulty typical solvers appears first increase decrease one increases
relevant parameter hardest instances appearing close threshold value


fithe landscape random job shop scheduling instances

jsp instance

j

j

j

j j









j

j


b jsp schedule

j

j

j





j





j

j



time

c disjunctive

graph




j

j

j

j

j
j



j




j


j j



j


j


j

figure jsp instance

b afeasibleschedule instance c disjunctive graph representation schedule boxes represent operations operation
durations proportional width box machine
operation performed represented texture c solid arrows represent
conjunctive arcs dashed arrows represent disjunctive arcs arc weights
proportional duration operation arc points

cheeseman kanefsky taylor yokoo phenomenon referred
easy hard easy pattern instance difficulty mammen hogg
discuss evidence easy hard easy pattern instance difficulty jsp though
knowledge associated phase transition
empirical previously presented conference streeter smith

job shop scheduling
adopt notation n n
definition
definition jsp instance n jsp instance j j j n set n
k sequence operations operation
jobs job j k j k j k jm
k
ji associated duration max machine require
job uses machine exactly e j k
exactly one jik define
ops jik k n
j k

pm

k
ji




fistreeter smith

job predecessor j jik operation jik
j jik




k
ji



otherwise

fictitious operation undefined
definition jsp schedule jsp schedule instance function ops
associates operation ops start time operation performed
machine time time preemption allowed make
following definitions
completion time operation
machine predecessor operation ops



arg maxooprev


oprev
otherwise

oprev ops set operations
scheduled run os machine
feasible schedule max j ops
quantity
max
oops

called makespan
consider makespan minimization version jsp goal
schedule minimizes makespan
remainder whenever refer jsp schedule shall adopt
convention shall assume
max j ops



e called semi active schedule french words ignore schedules
superfluous idle time start schedule end one operation
start another
figure b depict respectively jsp instance feasible schedule
instance
disjunctive graphs
schedule satisfying uniquely represented weighted directed graph called
disjunctive graph disjunctive graph representation schedule jsp
instance operation ops vertex directed edge indicates
operation completes starts


fithe landscape random job shop scheduling instances

definition disjunctive graph disjunctive graph g g schedule
w defined follows
jsp instance weighted directed graph g v e
v ops fictitious operation
undefined
c


e


j ops j k k n called set conjunctive
c

arcs specify cannot start j completes
ops called set

disjunctive arcs specify pair operations performed
machine two operations performed first
w
figure c depicts disjunctive graph schedule depicted figure b
connection schedule disjunctive graph established following
proposition roy sussmann
proposition let feasible schedule satisfying let g g
corresponding disjunctive graph equal length longest weighted
path g
proof operation let l denote length longest weighted path
g suffices ops l follows
induction number edges path base case l
undirected version disjunctive arc called disjunctive edge
definition disjunctive edge let jsp instance disjunctive edge set
ops define following notation
e set disjunctive edges
let schedule let e disjunctive edge denote
e unique arc appears disjunctive graph g
arc called orientation e
measure distance two schedules jsp instance
counting number disjunctive edges oriented opposite directions g
g
definition disjunctive graph distance disjunctive graph distance ks k
two schedules jsp instance defined
ks k e e e e


fistreeter smith

random schedules instances
define uniform distribution jsp instances follows distribution identical
one used taillard
definition random jsp instance random n jsp instance generated
follows
let n random permutations
let g probability distribution max mean variance
define j j j n jik k jik drawn independently random g
note definition likewise theoretical assumes maximum
operation duration max makes assumptions form distribution
operation durations empirical reported choose operation
durations uniform distribution
proofs frequently make use priority rules priority rule greedy schedulebuilding assigns priority operation step greedy
assigns earliest possible start time operation minimum priority
definition priority rule priority rule function given instance
operation ops returns priority schedule associated
defined following procedure
u nscheduled ops
u nscheduled
ready u nscheduled j
u nscheduled
b element ready least priority
c max j
remove u nscheduled
priority rule called instance independent n jsp instance
integers k n value jik depends k n
obtain random schedule assigning random priorities operation
resulting distribution equivalent one used mattfeld
definition random schedule random schedule n jsp instance
generated performing following steps
create list l containing occurrences integer k k n think
occurrences k representing operations job j k
shuffle l obtaining permutation equal probability
return schedule rand rand jik index ith occurrence
k l


fithe landscape random job shop scheduling instances

number common attributes function makespan
backbone jsp instance set disjunctive edges common orientation schedules whose makespan globally optimal define
backbone set disjunctive edges common orientation schedules whose makespan within factor optimal related definition appears slaney
walsh
definition backbone let jsp instance optimal makespan min
let opt min set schedules whose makespan
within factor optimal
backbone e e e e opt
section compute expected value backbone function
random n jsp instances examine shape curve changes
n
function

computing backbone
compute backbone use following proposition
proposition let jsp instance optimal makespan min let e
disjunctive edge orientations disjunctive
arc let min denote optimum makespan among schedules whose disjunctive graph
contains arc
e backbone max min min lmin
proof e backbone e must common orientation say schedules
min implies min min e
backbone
must opt e e implies
max min min min

thus compute backbone need compute min n
possible choices given disjunctive arc compute min branch
bound branch bound jsp nodes search tree represent
choices orientations subset disjunctive edges constructing root search
tree node fixed arc determine min use branch bound
due brucker et al efficient code
freely available via orsep brucker jurisch
sievers


n
computing min possible choices requires n runs
branch bound first run used globally optimal schedule
gives

n
n
value min possible choices namely disjunctive arcs

present globally optimal schedule separate run used
n remaining choices
figure graphs fraction disjunctive edges belong backbone
function instance ft job machine instance library beasley


fistreeter smith

instance ft
normalized backbone























figure normalized backbone function library instance ft
note definition curve non increasing respect
curve exact noteworthy among schedules whose makespan within
factor optimal disjunctive edges fixed orientation see
n
behavior typical jsp instances


plotted backbone function instances library
fewer jobs fewer machines available online streeter smith
b inspection graphs revealed shape curve largely function
job machine ratio investigate repeat experiments large
number randomly generated jsp instances
use randomly generated instances different combinations n study
n
n
instances
equal
use x x x instances
n
n



use
x

x
instances



use x x instances
generate random instances combination n
figure parts b c graph expected fraction edges belonging
n
backbone function combination n grouped according

n
figure compares curves different values plots
quantiles purposes study two important observations figure
follows
curves depend size instance e n shape e
n
n
two factors far stronger influence shape
curves
values expected fraction edges belonging backbone decreases
n

increases


fithe landscape random job shop scheduling instances

job machine ratio

b job machine ratio




e frac edges backbone

e frac edges backbone



x instances
x instances



x instances






x instances
x instances

































c job machine ratio

comparison







frac edges backbone

e frac edges backbone



x instances



x instances







x instances
x instances



x instances


































figure expected fraction edges backbone function random jsp
n
instances graphs b c depict curves random instances
respectively graph compares curves depicted b
c curves largest instance sizes shown
top bottom error bars represent quantiles respectively



fistreeter smith

analysis
give insight figure analyzing two limiting cases prove
n
expected fraction disjunctive edges belong backbone approaches
n

expected fraction approaches
n
intuitively happens follows
e n held constant
jobs becomes long individual disjunctive edges represent precedence
relations among operations performed far apart time example
machines job consists operations disjunctive
edge might specify whether operation job performed operation
job b clearly waiting job b complete operations allowing
job complete operations likely produce inefficient schedule thus
orienting single disjunctive edge wrong direction likely prevent schedule
optimal particular edge likely common orientation
globally optimal schedules
n
contrast
workloads machines become long
order jobs processed particular machine matter much
long machine longest workload kept busy fact particular
edge oriented particular way unlikely prevent schedule optimal
formalized
make use following well known definition
definition whp sequence events n occurs high probability whp limn
p n
lemma theorem constant n randomly chosen edge random
n jsp instance backbone whp lemma theorem
constant randomly chosen edge random n jsp instance
backbone whp n
lemma let random n jsp instance let schedule
obtained instance independent priority rule arbitrary job j
define sj jm j e sj n
proof assume n generalization larger n straightforward
cases n trivial let j j let j j
let sequence operations selected ready line
b definition priority rule constructing say operation
ji overlaps operation jj
jj appears ji
j j
jj jj ji



additionally ji jj say ji contends jj intuitively ji
overlaps jj start time might delayed os machine
used contends start time actually delayed


fithe landscape random job shop scheduling instances

let j resp j indicator event ji overlaps resp contends



let
ci jj j set operations j ji overlaps
ci ci thus

jj

x


ci

x


ci



ci



x


ci



ci





let random n jsp instance define j j ci
analogously j




p j ji jj p j
true p j function joint distribution operations
set ji jj j j far joint distribution concerned
conditioning event ji jj deleting operations use
machine ji
h







p j ji jj
p j
e j
thus e j p j
therefore
pm pm
pm pm
j e j

j e j

pm pm

j e j
pm
e ci

last step used follows e sj max max
maximum operation duration defined consider arbitrary n get e sj
max n
corollary lemma simple priority rule almost surely
n

generates optimal schedule case
definition priority rule given n jsp instance let k arg maxk n
j k index longest job priority rule first schedules operations

j k schedules remaining operations fixed order


k k
k
ji
k otherwise
corollary let random n jsp instance fixed n holds
whp schedule optimal makespan
maxk n j k
proof define priority rule k k jik k k k otherwise k
instance independent equivalent k thus j
e j

x

e jk n

k



fistreeter smith



define j j
second step uses lemma markovs inequal

ity j j whp central limit theorem
j asymptotically
normally distributed mean standard deviation follows whp




j k j k k k implies j k j k lower
bound makespan schedule corollary follows
theorem let random n jsp instance let e randomly selected
element e fixed n holds whp e backbone
proof let e ji jj j let jj ji proposition corollary
suffices whp disjunctive graphs containing contain path
weighted length maxk n j k


assume j holds whp j selected uniformly
random consider path
p j j jj ji ji jm


passes p vertices weighted length w p want
w p maxji j whp central limit theorem fixed
j w p
p asymptotically normally distributed mean p standard
deviation p
j j asymptotically normally distributed
mean standard deviation w p maxji j whp follows
chebyshevs inequality
n
simple priority rule almost surely generates
lemma shows
schedule machine idle operations performed machine
completed schedule property clearly optimal

definition priority rule given n jsp instance priority rule
first schedules first operation job taking jobs order ascending indices
second operation job forth defined jik k
lemma let random n jsp instance fixed holds whp
n schedule property
ops
proof suppose executing replace line max j
line c definition priority rule given
resulting feasible replacement must effect thus suffices
resulting feasible whp equivalently want whp
j ops constructed modified version line
c
let ops jik ops set operations first
job suffices j max ops end consider
arbitrary operation jik ops number operations lower


fithe landscape random job shop scheduling instances

priority n k number operations lower priority

jik run machine expectation equal
n k
switch n n due fact operation job j k
uses machine follows
e


n k



k

e j e jik ji

n



appendix use martingale tail inequality establish following claim
claim high probability ops

j e j

lemma follows fact e j max n sufficiently
large
computational experiments taillard conjectured
optimal makespan almost surely equal maximum machine workload
following corollary lemma confirms conjecture
n


corollary let random n jsp instance optimal makespan min
let ops denote workload machine fixed
holds whp n min maxm
theorem let random n jsp instance let e randomly selected
element e fixed holds whp n e
backbone
proof let e ji jj remove j j create n instance
comes distribution random n jsp instance lemma

shows whp exists optimal schedule property described
statement lemma
denote workload machine
let ops

instance central limit theorem
asymptotically normally distributed
mean n standard deviation n follows whp

n
thus whp one machine still processing operations interval

n max j j max use interval
construct optimal schedules containing disjunctive arc ji jj well optimal
schedules containing disjunctive arc jj ji


fistreeter smith

clustering function makespan
section estimate expected distance random schedules whose makespan
within factor optimal function combinations n
n
examine shape curve changes function
formally
random n jsp instance optimal makespan min
opt min
drawn independently random opt
wish compute e ks k
note experiments provide upper bound quantity

n
e backbone
e ks k

provide lower bound low backbone size evidence mean distance
global optima large experiments section viewed test
degree upper bound provided tight
methodology
generate random samples opt running simulated annealing
van laarhoven et al finds schedule precisely procedure
sampling distances follows
generate random n jsp instance
branch bound brucker et al determine optimal
makespan
perform k runs r r rk van laarhoven et al simulated annealing
restart run many times necessary schedule whose
makespan optimal
first schedule call si run
ri whose makespan within factor optimal k pairs
runs ri rj add distance si sj sample distances
associated
ran procedure random jsp instances combinations n
used smallest instance sizes ratio e x x
x instances generate random jsp instances run procedure k
setting k allows us measure variation instance specific expected values
combinations n performing simulated annealing runs
computationally expensive instead generate random jsp instances run
procedure k


fithe landscape random job shop scheduling instances

figure b c plot expected distance random optimal schedn
ules function three values
figure shows
quantiles instance specific sample means three smallest
instance sizes examining figure see variation among random instances
n small relative differences curves different
n
values

discussion
examining figure see expected distance random n
optimal schedules increases
increases indeed global optima dispersed widely
n
n
throughout search space
true lesser extent

immediate implication figure whether exhibit two
correlations operational definition big valley typical landscapes jsp
n
cannot expected big valleys sense central
instances
cluster optimal near optimal solutions anything one might posit existence
multiple big valleys leading separate global optimum next section expands
upon observations

big valley
section define formal properties big valley landscape conduct experiments determine extent random jsp instances exhibit properties
n
n
n
vary
present analytical limiting cases


considering intuitive picture given figure take following
necessary though perhaps sufficient conditions function f x big valley
small improving moves x global minimum f must exist nearby
x f x f x
clustering global optima maximum distance two global minima
f small
note direct relationship two properties cost distance
correlations considered boese et al
formalization
following four definitions allow us formalize notion big valley landscape
definition neighborhood nr let arbitrary jsp instance let u set
schedules let r positive integer neighborhood nr u u defined

nr u ks k r
definition local optimum l n let u let n u u
arbitrary neighborhood function let schedule l n schedule
returned following procedure finds local optimum performing next descent
starting neighborhood n


fistreeter smith

job machine ratio

b job machine ratio


e dist schedules

e dist schedules






x instances
x instances



x instances






x instances



x instances






















c job machine ratio





comparison





e dist schedules

e dist schedules









x instances



x instances





x instances
x instances



x instances































figure expected distance random schedules within factor optimal
function graphs b c depict curves random instances
n
respectively graph compares curves depicted
b c curves smallest instance sizes shown
top bottom error bars represent quantiles respectively
instance specific sample means



fithe landscape random job shop scheduling instances

r valley

b three r valleys

r

r

r

r









figure two landscapes comprised r valleys single r valley
values r shown figure b viewed three
distinct r valleys single r valley values r shown
figure slightly larger necessary

let n n elements n indexed fixed
arbitrary manner
least si exists return otherwise set
si go
definition r valley let u let r non negative
integers set v u r valley v following two properties
v schedule l nr v globally optimal
two globally optimal schedules v ks k
figure illustrates definition r valley would say landscape
depicted figure big valley depicted b comprised three
big valleys
definition r p landscape let u let random schedule
r p landscape exists v u
v r valley
p v p



jsp instance trivially n n landscape r n

nr includes possible schedules jsp instance r n landscape
globally optimal schedule found starting random schedule
applying next descent neighborhood nr
say jsp instance big valley landscape r p landscape
small r combination p near contrast small r combination
p near require large say landscape consists multiple big valleys


fistreeter smith

neighborhood exactness
section seek determine extent random jsp instances
small improving moves property require following definition
definition neighborhood exactness let u n let
random schedule exactness neighborhood n instance
probability l n global optimum

exactness nr p r n p landscape let v consist
schedules l n global optimum estimate expected exactness
nr function r combinations n examining resulting
curves able draw conclusions extent landscapes
random n jsp instance typically small improving moves property
n
determine presence absence property depends


fixed n compute expected exactness nr r n
repeatedly executing following procedure
generate random n jsp instance
brucker et al compute optimal makespan
repeat k times
random feasible schedule r opt f alse
b opt f alse
l nr
global optimum opt true
record pair r opt
r r
c r r r

n




record pair r true

pairs recorded procedure step c third bullet point b
used obvious way estimate expected exactness specifically r
estimated expected exactness nr fraction pairs r x x true
implementation first bullet point step b deserves discussion
determine l nr step next descent must able determine best schedule
ks k r large r impractical brute force instead
developed radius limited branch bound given arbitrary center
schedule sc radius r finds schedule arg min ksc kr radius limited
branch bound uses branching rule balas combined
lower bounds branch ordering heuristic brucker et al


fithe landscape random job shop scheduling instances


n
use three combinations n
x x x instances three
n
n
combinations x x x instances two combinations

x x instances smallest instance sizes ratio e x x
x instances generate random jsp instances run procedure
k otherwise generate random jsp instances run procedure
k

figure b c plot expected exactness function neighborhood radius
n
normalized number disjunctive edges three values
figure
shows quantiles instance specific sample means
three smallest instance sizes
discussion
examining figure see normalized neighborhood radius neighborhood
n
exactness lowest instances
higher two extreme ratios

n
n
view neighborhood exactness measuring smoothness
landscape data suggest typical jsp landscapes least smooth
n
n
n
intermediate value
become smooth


suggests easy hard easy pattern typical case instance difficulty jsp
phenomenon explored fully next section
methodology found expected proportions backbone
edges x x x instances respectively
expected distance global optima three cases contrast
expected proportions backbone edges x x instances near zero
expected distances global optima respectively conclude
landcapes random n jsp instances typically clustering global
n
n
optima property

however figure suggests small
n
n
improving moves property present

accordingly would
n

n
say typical landscapes big valleys
landscape
comprised many big valleys rather one
n
data
typical landscapes clustering
global optima property examining figure b see able descend
random schedule globally optimal schedule probability normalized
neighborhood radius reason think landscapes random
n
jsp instances
small improving moves property extent
combination curve figure shows expected distance
random optimal schedules function leads us say typical landscapes
n
random jsp instances
still roughly described big valleys however
valley much rougher meaning larger steps required move random
schedule global optimum via sequence improving moves extreme
n
values


table summarizes empirical findings discussed


fistreeter smith

job machine ratio

b job machine ratio






x instances


e exactness

e exactness



x instances



x instances

x instances


x instances
x instances























normalized radius

normalized radius

c job machine ratio

comparison






e exactness



e exactness



x instances


x instances


x instances



x instances


x instances
























normalized radius

normalized radius

figure expected exactness nr function normalized neighborhood radius
n
r graphs b c depict curves random instances

respectively graph compares curves depicted b
c curves largest instances shown top
bottom error bars represent quantiles respectively instancespecific exactness



fithe landscape random job shop scheduling instances

n




n
table landscape attributes three values

clustering
small
improving
description
global optima moves
yes
yes
big valley



yes

somewhat

rough big valley





yes

multiple big valleys

analysis
first establish behavior curves depicted figure limiting cases
n
n
use characterize landscapes random
jsp instances r p notation introduced
n
n
following two lemmas
resp
random schedule
almost surely close optimal schedule proofs given appendix
lemma let random n jsp instance let random schedule
let optimal schedule ks sk minimal let f
unbounded increasing function fixed n holds whp
ks sk f
lemma let random n jsp instance let random schedule
let optimal schedule ks sk minimal fixed
holds whp n ks sk n
following immediate corollaries lemmas
corollary fixed n expected exactness nf approaches
f unbounded increasing function
corollary fixed expected exactness nn approaches
n

total number disjunctive edges n two corollaries imply
n
n
resp
curve depicted figure approaches horizontal line

height
lemmas theorems characterize landscape random jsp
instances r p notation presenting theorems slight
disclaimer order lemmas proofs fairly involved indicate
n
n
extreme cases

jump random schedule
globally optimal schedule via single small move strongly believe cases
possible go random schedule global optimum sequence many
smaller improving moves although proving seems difficult nevertheless
understood theoretical strictly imply existence landscapes
depicted figure starting points sequence two
small improving moves leading global optimum
n
theorem shows
random jsp instance almost certainly

r p landscape r grows arbitrarily slowly function n


fistreeter smith

n
p arbitrarily close words
landscape small
improving move property clustering global optima property contrast
n
theorem shows
random jsp instance almost surely
r p landscape unless n instead landscape contains n r valleys
n
r n thus
landscape small improving move
property clustering global optima property analytical confirm
trend suggested figure discussed

theorem let random n jsp instance let f unbounded
increasing function fixed n holds whp
r p landscape r f n p
proof let v set schedules l nr global optimum follows
corollary whp exactness r least p means v
probability least p remains v r valley whp part
definition r valley satisfied definition v part follows theorem

theorem let random n jsp instance let random schedule
exists set v ni vi schedules fixed v
following properties whp
v
vi r valley r n n
n n
max v ks k n
proof let sn set globally optimal schedules define vi
l n si property holds whp lemma property holds definition
vi
fact property holds whp consequence lemma recall lemma
n
showed
priority rule generates optimal schedule whp
k
ji k indices assigned jobs arbitrary lemma
applies priority rule jik k permutation n
n possible choices let f number choices fail yield globally
optimal schedule property fail hold f n lemma e f
n hence f n whp markovs inequality
establish property choose permutations list elements n
reverse order e n n lemma schedules
globally optimal whp disjunctive edge
e j j must e e hence ks k j j j


j n
n obtain expression n
pigeonhole
principle


fithe landscape random job shop scheduling instances

quality random schedules
methodology
section examine quality randomly generated schedules changes
function job machine ratio specifically combinations n
estimate expected value following four quantities
makespan random schedule
b makespan locally optimal schedule obtained starting random schedule
applying next descent n move operator
c makespan optimal schedule
lower bound makespan optimal schedule given maximum
maximum job duration maximum machine workload


x
max max j max

ji



oops

n
considered experiments set r
values


consider combinations n set
n
rr sr sr n
r min n max n n
n estimate expected value resp b generating
random n jsp instances instance generating random schedules
resp local optima estimate generating random jsp instances
n combinations n ssmall practical compute
n
quantity c let nr ssmall sr number combinations n
r

computed c chose ssmall nr r n

n ssmall estimate c random jsp instances


figure plots mean values b c respectively mean value
combinations n data points combination n
n
assigned symbol value
top bottom error bars represent
quantiles respectively instance specific sample means note width
error bars small relative differences curves different values
n


n
examining figure see set data points value
approximately though exactly collinear furthermore three graphs slope line
n
formed data points
r maximized r decreases r gets
away see figure
investigate trend performed least squares linear regression set
n
data points value
slopes resulting lines shown function
n
figure
examination figure apparent


fistreeter smith

random schedules
mean makespan






ratio



ratio
ratio



ratio



ratio






mean lower bound

b random local optima
mean makespan






ratio



ratio
ratio



ratio



ratio






mean lower bound

c optimal schedules
mean makespan






ratio



ratio
ratio



ratio



ratio






mean lower bound

figure expected makespan random schedules b random local optima c
optimal schedules vs expected lower bound combinations n
n
grouped symbol according
top bottom error bars represent
quantiles respectively instance specific sample means


fithe landscape random job shop scheduling instances

least squares regression

slope e makespan
vs e lower bound



random schedules
random local optima
optimal schedules












job machine ratio

b branch bound search cost


num tree nodes








































log search space size



















figure graphs slope least squares fits data figure b
n
n
c function
includes values
depicted figure b
th
graphs number search tree nodes percentile used branch
bound brucker et al optimal schedule



fistreeter smith

n
value
becomes extreme e approaches expected makespan random schedules resp random local optima comes closer
expected value lower bound makespan

difference expected makespan random schedules resp random
local optima expected value lower bound makespan maximized
n
value

n
first two observations suggests
approaches
random schedule almost certainly near optimal contains two theorems confirm

second two observations suggests expected difference
makespan random schedule makespan optimal schedule maximized
n
value
somewhere neighborhood observation particularly interesting
n
light empirical fact square instances jsp e

harder solve rectangular ones fisher thompson
figure b graphs number search tree nodes th percentile required
branch bound brucker et al optimally solve random n
instances function log base search space size take size
search space n jsp instance number possible disjunctive graphs

namely n note disjunctive graphs contain cycles therefore
correspond feasible schedules expression overestimates size search
space data points given combination n could afford
run branch bound e combination n computed quantity
n
c data points grouped curves according

examining figure b see curves steepest ratios
n
curves substantially less steep extreme values

thus least point view particular branch bound
random jsp instances exhibit easy hard easy pattern instance difficulty discuss
pattern

analysis
following two theorems
almost surely near optimal

n


approaches random schedule

theorem let random n jsp instance optimal makespan min
let random schedule fixed n holds whp
min
proof priority rule rand associates priority operation ops let
sequence contain elements ops sorted ascending order priority
schedule rand depends n possible choices thus
rand seen choosing random set n instance independent priority
rules instance independent priority rules subject lemma rand

lemma thus j e sj n thus e min
palso subject


j e j n min exceed min whp markovs
inequality


fithe landscape random job shop scheduling instances

theorem let random n jsp instance optimal makespan min
let random schedule fixed holds whp n
min
proof see appendix
idea behind proof theorem following shown lemma
priority rule almost surely generates optimal schedule relevant property
operations sorted order ascending priority number
operations j n key proof theorem
expectation rand shares property operations ops
easy hard easy pattern instance difficulty
n
n
proofs corollary resp lemma
resp
exist
simple priority rules almost surely produce optimal schedule moreover theorems
two limiting cases even random schedule almost surely
n
n
makespan close optimal thus

almost
jsp instances easy
n
contrast
figure suggests random schedules well random
local optima far optimal literature jsp well depicted
n
figure b attests fact random jsp instances
hard
thus conjecture sat typical instance difficulty jsp follows easyhard easy pattern function certain parameter contrast sat easyhard easy pattern jsp knowledge associated phase transition
n
e identified quantity undergoes sharp threshold

furthermore although empirical figures b support idea
typical case instance difficulty jsp follows easy hard easy pattern
n
claim isolated particular value
point maximum
difficulty shown figure b random jsp n jsp instances difficult
n
branch bound brucker et al
may
true branch bound jsp heuristics local search
leave task characterizing easy hard easy pattern precisely future
work
related work beck studied constraint satisfaction opposed makespanminimization version jsp gave empirical evidence probability
random jsp instance satisfiable undergoes sharp threshold function quantity
called constrainedness instance

limitations extensions
primary limitation work reported theoretical
empirical apply random instances job shop scheduling
guarantee observations generalize instances drawn distributions
interesting structure watson et al difficulty extending
analysis distributions analytical similar ones presented


fistreeter smith

may become much difficult derive however least three
distributions studied scheduling literature believe
difficult adapt proofs conclusions may change part
adaptation process
random workflow jsp instances workflow jsp instance set machines
partitioned sets say mk j job must use
machines mi machines mj mattfeld et al define
random distribution workflow jsps generalizes natural way
distribution defined difference permutations n
chosen uniformly random set permutations satisfy workflow
constraints
random instances permutation flow shop scheduling instance
flow shop scheduling fsp jsp instance jobs use
machines order equivalently fsp instance workflow jsp instance
k permutation flow shop pfsp special case fsp
additionally machine must process jobs order
large literature p fsp framinan et al hejazi saghafian
provide relevant surveys
job correlated machine correlated jsp instances job correlated jsp instance
distribution operation durations drawn depends job
operation belongs similarly machine correlated jsp instance distribution
depends machine operation performed watson et al
studied job correlated machine correlated instances pfsp
regarding difficulty instances drawn three distributions computational
experience shows random workflow jsps harder random jsps ii random pfsps easier random jsps iii job correlated machine correlated
pfsps easier random pfsps extending theoretical analysis
distributions may give insight relevant differences
big valley vs cost distance correlations
defined big valley landscape one exhibits two properties small improving moves clustering global optima analytical experimental
definition although believe definition captures properties jsp
landscapes important designers heuristics understand properties
e g cost distance correlations likely important well particular may
possible exploit cost distance correlations landscapes neither
small improving moves clustering global optima properties
existing literature term big valley used amorphously mean
landscape depicted figure landscape exhibits high costdistance correlations making sharper distinction two distinct concepts
improve understanding jsp landscapes well landscapes
combinatorial


fithe landscape random job shop scheduling instances

conclusions
summary experimental
n
empirically demonstrated low values job machine ratio
lowmakespan schedules clustered small region search space backbone
n
size high
increases low makespan schedules become dispersed throughout
n
search space backbone vanishes function
smoothness
landscape measured statistic called neighborhood exactness starts small
n
n
n
low values
e g
relatively high
becomes small
n
n
n
high values e g extremely low extremely high values

expected makespan random schedules comes close optimal schedules
quality random schedules resp random local optima appears worst
n
value

discussed implications big valley picture jsp search
n
concluded typical landscape described big
landscapes
n
n
valley larger values
e g
many big valleys discussed
data support idea jsp instance difficulty exhibits easy hard easy
n

pattern function

summary theoretical
table shows asymptotic expected values attributes random n
n
n
jsp instance limiting cases


table attributes random jsp instances
fixed n fixed n
optimum makespan

max job length
corollary

max machine workload
corollary

normalized backbone size

theorem

theorem

normalized maximum distance global optima
normalized distance random
schedule nearest global optimum
ratio makespan random schedule
optimum makespan

theorem

theorem

lemma

lemma

theorem

theorem

rules thumb designing jsp heuristics
though claim deep insights solve random instances
jsp suggest two general rules thumb
n
n

low say
lower attempt locate
cluster global optima exploit



fistreeter smith

n
n

high say
attempt isolate one
clusters global optima deal separately

briefly discuss ideas relation two recent backbone guided local
search zhang tsab nowicki smutnicki
backbone guided local search
several recent attempt use backbone information bias move operator employed local search example zhang describes called
backbone guided local search frequency attribute e g assignment particular value particular variable boolean formula appears
random local optima used proxy frequency attribute appears global optima improved performance walksat
selman kautz cohen large instances satlib hoos stutzle
similar successfully applied tsp zhang looks
improve performance iterated lin kernighan martin otto felten
zhang writes
method built upon following working hypothesis
whose optimal near optimal solutions form cluster local search reach close vicinities solutions effective
finding information solution structures backbone particular
zhang p
working hypothesis satisfied random jsps
lower seems plausible backbone guided local search could used boost
performance early local search heuristics jsp van laarhoven
et al taillard whether would competitive
recent tsab separate question
n
hypothesis typically violated random jsp instances larger values

cases makes sense attempt exploit local clustering optimal
near optimal schedules
n


tsab
nowicki smutnicki present jsp heuristic called tsab employs multiple
runs tabu search tsab nowicki smutnicki tsab employs path
relinking localize center bv big valley probably close global minimum
nowicki smutnicki words tsab designed intuitive
picture depicted figure inaccurate typical random jsp instances
n
n
note although random jsp instances become easy instances
n

means easy evidenced figure b
concreteness briefly describe tsab works initially tsab performs
number independent runs tsab adds best run schedule pool elite
solutions performs additional runs tsab uses best run schedules
additional runs replace schedules pool elite solutions starting points


fithe landscape random job shop scheduling instances

additional tsab runs random elite solutions ii schedules obtained
performing path relinking random pair elite solutions given two schedules
path relinking uses move operator generate schedule midway
terms disjunctive graph distance pool elite solutions
thought cloud particles hovers search space hopefully
converges region space containing global optimum
n
random jsp instances
consistent idea
cloud elite solutions converges center big valley random jsp
n
instances
however cloud must converge one many big valleys
converge alternate one imagine multiple clouds
intention cloud specializes particular big valley seems plausible
ideas could improve performance tsab random jsp instances
n
larger values


appendix additional proofs
p
proofs section define oo set operations
make use following inequality spencer
azumas perimetric inequality p let x x x xn vector n independent random variables let function f x take input vector x x x xn
xi realization xi n produce output real number suppose
holds two vectors x x differ one
component
f x f x






p x e x n exp


inequality holds p x e x n
lemma let random n jsp instance fixed holds whp
n schedule property
ops
proof remains prove claim proof says whp
ops

j e j

pick arbitrary operation ops suppose random choices used
construct made following order
randomly choose j
k n


fistreeter smith

randomly choose order job j k uses machines j k
part choice already made step
b randomly choose jik
let random variable xk denote sequence random bits used steps
b k th iteration loop define j fixed choices
function n independent events x x xn easy
check altering particular xi changes value max thus
h




p e p e n

h

n
p e



exp n

max
first step used fact proof e nm
last step used p taking union bound n operations
ops proves claim

lemma let random n jsp instance let random schedule
let optimal schedule ks sk minimal let f
unbounded increasing function fixed n holds whp
ks sk f
proof let proof corollary showed j e sj n
thus holds whp sj log f j proof theorem procedure
used produce mixture instance independent priority rules subject
lemma thus j e sj n whp sj log f j
p
p
let onear ji jj j j ji j j jj log f onear ji
set operations would scheduled near time ji ignored fact
machine may perform one operation time let enear e ji jj
e jj onear ji assumptions previous paragraph
hold whp ks sk enear ji e onear ji n log f thus


e ks sk e enear

x
oops



e onear n log f


ks sk f whp markovs inequality
purpose remaining proofs convenient introduce additional
notation let sequence operations define
ti
im ti ti


fithe landscape random job shop scheduling instances

lemma let random n jsp instance let random schedule
let optimal schedule ks sk minimal fixed
holds whp n ks sk n
proof let sequence operations ops sorted ascending order priority
rand rand random priority rule used create note
ops j j must appear let ti denote ith operation

consider schedule defined following procedure
ops
q let qj denote j th operation q
let function ready return true j false otherwise
n
ready ti set ti otherwise append ti onto q
b j q
ready qj set qj qj remove qj q
schedule remaining operations q manner specified last
paragraph proof
construction construction except manipulations
involving q purpose q delay scheduling operation
scheduled immediately might produce schedule first
ks sk n whp optimal whp
let p
qi denote q exists iterations step performed let
nm

iterations q claim
q

p q number
n

letting e e e e e
ks sk oops q n q
ks sk e e e qn e e e qn
e e e qn n qn
p
suffices e e e qn
oops q see let


n

e e e q
must q q charge e
operation inserted q first easy see operation
charged one edge perpiteration spends q establishing claim
thus suffices ks sk oops q n qn n whp








divide construction n n epochs consisting n
iterations step specified let zj denote number iterations
step occur end j th epoch zj j convention let

cjm z
qzj set operations scheduled run
j

end j th epoch


fistreeter smith


onear j n zj zj j zj zj set operations whose
job predecessor belongs nearby epoch




n p ti onear n thus j n e onear

zj zj n p straightforward whp
onear zj zj n




j n



claim whp following statements hold j n


qi onear



izj

j qzj j qzj qzj j qzj
zj

zjm

q q

qzj n

j













prove induction step induction fails exponentially
small probability j hold trivially true
operations z onear first operations jobs hence cannot added
q follows
consider case j let arbitrary operation zj zj onear
j

induction hypothesis specifically equation j cj




j

cj
cj induction hypothesis

thus q











j

j

cj cj
zj n zj
letting denote right hand side inequality e







mn



p used k independent n p
mn


exp k n thus holds probability least exp k n
let j j qzj let ji qzj
chosenso
j ji
j ji
j
minimal j ji cj
thus ji qzj cj
cj


induction hypothesis equation qzj n

technique holds probability least exp k n
k independent n
implies together imply thus whp
hold j n



x



e
q e onear n n
oops




fithe landscape random job shop scheduling instances



e qn e znm zn onear n
p
setting gives ks sk oops q n qn n whp
remains optimal whp first prove following claim
claim non negative integers b probability b contains
two operations job

ba
n

proof claim let x denote number pairs operations b belong

ba
job p x e x ba
n
n
see optimal whp note operations scheduled prior step
cause idle time machine operations qn cause
sub optimal let ops denote workload machine
let arg maxm following hold whp
set z
last holds



consists operations belonging jobs use

n n n
whp z z

z



n n n

z contains

operation job use last z must contain two operations
job claim probability happens

n n


n z z follows applying
central limit theorem z
thus whp holds prior execution step contains period length

least z n operations processed z

ops j z assuming qn n holds whp
schedule operations qn guarantee implies optimal

theorem let random n jsp instance optimal makespan min
let random schedule fixed holds whp n
min
proof proof lemma let sequence operations ops sorted
ascending order priority rand rand random priority rule used
create note ops j j must appear
let ti denote ith operation
rather analyze directly analyze schedule defined following procedure

n


fistreeter smith

set ti max j ti ti
b j ti ti set maxi ti
procedure identical one used construct except whenever
operation ti assigned start time ti ti procedure inserts artificial
delays schedule order synchronize machines clear
thus suffices min whp
divide construction n epochs update step b defines beginning epoch let zi number operations scheduled
end ith epoch z convention let ti maxi zi oi updated
p


value end ofpthe ith epoch define

ptni maxi ti ti
n
min suffices min whp
p

let p
n let l zi zi n first consider il
consider ii l


let arbitrary integers n n let

function outcome
im e
events namely definition jobs j j
alters value max follows p



n

p e n
exp
max

thus holds whp e n possible choices

particular whp
n zi zi l implies
p
p
p





n n n
il n
il
p
consider
ii l shown proof lemma claim
non negative integers b probability b contains two operations





job ba
n thus probability arbitrary subsequence size n


contains two operations job n e l n clearly
p


max n l e ii l n
p
p




thus e ii n ii n whp easy
see min n whp

references
achlioptas peres threshold random k sat k log k
journal ams
balas e machine sequencing via disjunctive graphs implicit enumeration
operations
beasley j e library distributing test electronic mail journal
operational society


fithe landscape random job shop scheduling instances

beck j c jackson w k constrainedness phase transition job
shop scheduling tech rep cmpt school computing science simon fraser
university
boese k kahng b muddu adaptive multi start technique
combinatorial global optimizations operations letters
brucker p jurisch b sievers b job shop c codes european journal operational code available http optimierung
mathematik uni kl de orsep contents html
brucker p jurisch b sievers b branch bound
job shop scheduling discrete applied mathematics
cheeseman p kanefsky b taylor w really hard
proceedings twelfth international joint conference artificial intelligence
ijcai sidney australia pp
fisher h thompson g l probabilistic learning combinations local job shop
scheduling rules muth j f thompson g l eds industrial scheduling
pp prentice hall englewood cliffs nj
framinan j gupta j n leisten r review classification
heuristics permutation flow shop scheduling makespan objective journal
operational society
french sequencing scheduling introduction mathematics
job shop wiley york
glover f laguna tabu search kluwer academic publishers boston
hejazi r saghafian flowshop scheduling makespan criterion review international journal production
hoos h h stutzle satlib online resource sat
gent p v maaren h walsh eds proceedings sat pp
satlib available online www satlib org
jain meeran state art review job shop scheduling techniques
tech rep department applied physics electronic mechanical engineering
university dundee dundee scotland
jones rabelo l c survey job shop scheduling techniques tech rep
national institute standards technology gaithersburg md
kim h moon b r investigation fitness landscapes graph bipartitioning empirical study journal heuristics
lourenco h martin stutzle iterated local search glover f
kochenberger g eds handbook metaheuristics kluwer academic publishers
boston
mammen l hogg look easy hard easy pattern combinatorial search difficulty journal artificial intelligence


fistreeter smith

martin c otto w felten e w large step markov chains
traveling salesman complex systems
martin c monasson r zecchina r statistical mechanics methods
phase transitions combinatorial theoretical computer science

mattfeld c evolutionary search job shop investigations genetic
production scheduling physica verlag heidelberg
mattfeld c bierwirth c kopfer h search space analysis job shop
scheduling annals operations
mezard parisi g replica analysis traveling salesman
journal de physique
monasson r zecchina r kirkpatrick selman b troyansky l determining computational complexity characteristic phase transitions nature

nowicki e smutnicki c fast taboo search job shop
management science
nowicki e smutnicki c ideas ts job shop scheduling tech
rep university wroclaw
nowicki e smutnicki c advanced tabu search job shop
journal scheduling
reeves c r yamada genetic path relinking flowshop
sequencing evolutionary computation
roy b sussmann b les problemes dordonnancement avec contraintes disjonctives note bis sema paris france decembre
selman b kautz h cohen b noise strategies local search proceedings
aaai pp
slaney j walsh backbones optimization approximation proceedings th international joint conference artificial intelligence ijcai pp
spencer j modern probabilistic methods combinatorics http www cs nyu
edu cs faculty spencer papers stirlingtalk pdf
streeter j smith f characterizing distribution low makespan
schedules job shop scheduling biundo myers k rajan k
eds proceedings icaps pp
streeter j smith f b supplemental material icaps
characterizing distribution low makespan schedules job shop scheduling
http www cs cmu edu matts icaps
taillard e benchmarks basic scheduling european journal operational


fithe landscape random job shop scheduling instances

taillard e parallel taboo search techniques job shop scheduling
orsa journal computing
van laarhoven p aarts e lenstra j job shop scheduling simulated
annealing operations
watson j p barbulescu l whitley l howe contrasting structured
random permutation flow shop scheduling search space topology
performance informs journal computing
watson j p beck j c howe e whitley l toward understanding
local search cost job shop scheduling cesta ed proceedings sixth
european conference
yokoo adding constraints makes easier hill climbing
analyzing landscapes csps principles practice constraint
programming pp
zhang w configuartion landscape analysis backbone guided local search part
satisfiability maximum satisfiability artificial intelligence
zhang w looks novel local search traveling salesman exploits backbones proceedings th international joint
conference artificial intelligence pp




