Journal Artificial Intelligence Research 38 (2010) 633-685

Submitted 03/10; published 08/10

Non-Transferable Utility Coalitional Games
via Mixed-Integer Linear Constraints
Gianluigi Greco

ggreco@mat.unical.it

Dipartimento di Matematica
Universita della Calabria
I-87036 Rende, Italy

Enrico Malizia
Luigi Palopoli
Francesco Scarcello

emalizia@deis.unical.it
palopoli@deis.unical.it
scarcello@deis.unical.it

DEIS
Universita della Calabria
I-87036 Rende, Italy

Abstract
Coalitional games serve purpose modeling payoff distribution problems scenarios agents collaborate forming coalitions order obtain higher worths
acting isolation. classical Transferable Utility (TU) setting, coalition worths
freely distributed amongst agents. However, several application scenarios,
case Non-Transferable Utility setting (NTU) must considered,
additional application-oriented constraints imposed possible worth distributions.
paper, approach define NTU games proposed based describing allowed distributions via set mixed-integer linear constraints applied
underlying TU game. shown games allow non-transferable conditions
worth distributions specified natural succinct way. properties
relationships among prominent solution concepts NTU games hold
applied (mixed-integer) constrained games investigated. Finally, thorough analysis carried assess impact issuing constraints computational
complexity solution concepts.

1. Introduction
Cooperative game theory providesunder concept coalitional gamesan elegant
framework modeling multi-agent systems agents might collaborate
agents, forming coalitions order guarantee advantage. Within
framework, coalition N (where N set players, called
grand-coalition), assigned certain worth v(S) R, outcome game
vector real payoffs (xi )iN meant specify distribution worth granted
players result game.
Coalitional games often classified according mechanisms underlying payoff
distributions. best known widely studied class therein coalitional
games transferable utility (or TU games) (Osborne & Rubinstein, 1994),
constraints whatsoever imposed way coalitional worths distributed
amongst coalition members. context, several outcomes might associated

c
2010
AI Access Foundation. rights reserved.

fiGreco, Malizia, Palopoli, & Scarcello

given game, hence relevant question understand outcomes properly
capture rational behavior players. matter extensively studied
economics social sciences (Aumann & Hart, 2002). fact, various solution concepts
proposed literature identify worth distributions embody
rational concept stability, i.e., somehow immune deviations caused
groups players may decide leave grand-coalition form sub-coalitions
order claim higher worths.
cases, however, players cannot freely distribute coalition worth
pure TU framework appropriate modeling purposes (Aumann & Peleg,
1960). deal scenarios, coalitional games without transferable utility (or NTU
games) introduced literature, worth function defined
return allowed worth distributions (called consequences, setting) associated
given coalition, rather associating one real value it. fact,
easily understood NTU games general TU ones, since game
latter kind expressed NTU game possible worth distribution among
members coalition consequence S.
1.1 Modeling NTU Specifications via Mixed-Integer Linear Constraints
TU Games
Enhancing TU games application-oriented constraints set possible outcomes approach exploited literature order model nontransferable scenarios. first occurrence name constrained games goes back
seventies, due Aumann Dreze (1974), considered games coalition structures, players partitioned groups S1 , . . . , Sk , outcome
(xi )iN must allocate total payoff v(S
P j ) exactly amongst members group Sj ,
is, satisfy equalities iSj xi = v(Sj ), 1 j k. However, Aumann
Dreze noticed turn considering constraints TU games novel
idea, since core nucleolus (which two prominent solution concepts TU
games) indeed defined Gillies (1959) Schmeidler (1969), respectively, games
outcomes restricted subsets R|N | .
Recently, constrained games reconsidered pragmatic perspective
modeling relevant application scenarios, price formation (Byford, 2007)
autonomic wireless networks (Jiang & Baras, 2007). matter fact, however,
received considerably little attention years. particular, general framework proposed literature systematic study (analytical, well
computational) properties kind approaches conducted far.
paper, embark systematic formalization constrained games,
investigate framework allowing succinctly specify non-transferable conditions
outcomes underlying TU game, via set constraints expressed mixed-integer
linear (in)equalities.1 Note constrained games defined top underlying
TU specification, hence expected retain nice properties
transferable setting. However, ability restricting set possible outcomes makes
1. good source basic notions results mixed-integer linear programming book
Nemhauser Wolsey (1988).

634

fiMixed-Integer Constrained Coalitional Games

fit general framework NTU games, smoothly inherit
solution concepts shall use.
allowing integer variables, constrained games studied paper improve
expressiveness classical NTU formalizations, admissible outcomes might
possibly restricted non-convex non-comprehensive regions (definitions
properties recalled Section 3.2). Indeed, NTU games attracted much attention earlier literature allow specify arbitrary consequences (Aumann & Hart,
2002). Rather, according classical definition due Aumann Peleg (1960),
NTU game actually game must satisfy additional conditions as, particular, convexity comprehensiveness. view features several nice properties
mathematical perspective (Weber, 1994; McLean, 2002), influenced several proposals defining NTU games appeared literature, additional
conditions often considered. However, view appropriate model application
scenarios required properties naturally hold.
fact, framework constrained games proposed paper viewed
framework (succinctly) define NTU games convexity comprehensiveness
necessarily hold. important peculiarity approach knowledge representation perspective. intuitive exemplification scenarios peculiarity
might useful illustrated below.
Example 1.1. Three brothers, Tim, John Jim, aged 10, 8 5, resp., collected
piggy money-box small Euro coins (values 1, 2, 5, 10 cents) Mom
every week given since age four. Now, time come
break money-box divide content. order avoid quarrels among kids,
Mom decides distribution go ages, Tim deserve
least 10/8 money John get John, turn, receive least 8/5 Jims
money share. (Jim happy that, agrees comply Moms rule).
money-box gets broken little treasure seven Euros ninety Euro cents,
resulting available coin set including one-hundred 1-cent coins, seventy 2-cent
coins, fifty 5-cents coins, thirty 10-cent coins, divided amongst kids.
Note scenario based non-transferable condition treasure
cannot freely distributed amongst brothers. specific distribution rule, however,
fit classical NTU formalization Aumann Peleg (1960).
hand, easily seen scenario modeled means
set linear (in)equalities, variables taking values set Z integer
numbers. example, admissible outcomes indeed identified solutions
following set mixed-integer linear (in)equalities (the three brothers Tim, John
Jim denoted using indexes 1, 2 3, respectively):

635

fiGreco, Malizia, Palopoli, & Scarcello





























xi = 1 i1 + 2 i2 + 5 i5 + 10 i10 , 1 3
11 + 21 + 31 = 100
12 + 22 + 32 = 70
15 + 25 + 35 = 50
110 + 210 + 310 = 30
x1 10/8 x2
x2 8/5 x3
i1 , i2 , i5 , i10 0, 1 3
xi R, i1 , i2 , i5 , i10 Z, 1 3

Note auxiliary variables ij denote number coins value j taken
player i, first five equalities encode restrictions domains variables defined
available coin set, subsequent two inequalities encode Moms rule (which
seen, instance, playing role central market regulation authority).
1.2 Contribution Organization
Despite intuitiveness modeling approach adopted Example 1.1,
reference framework literature accounting it, specificity
Moms rule money distribution constrained available coin set,
allowed outcomes form convex set.
Proposing investigating framework may serve model kinds scenarios
main contribution paper. detail:
define formal framework NTU games based mixed-integer linear constraints applied underlying TU game, discuss modeling capabilities,
show main solution concepts NTU gamesin particular, core, bargaining
set, kernel, nucleolus, Shapley valuespecialize within novel framework.
analyze impact constraints basic properties solution concepts.
Moreover, highlight similarities differences featured constrained games
opposed TU games, investigating particular whether outcome stable
(under concepts) TU game remains stable constraints issued.
assess impact adding constraints computational complexity underlying concepts. particular, consider games characteristic function
form (von Neumann & Morgenstern, 1944) within setting worths given
oracles. context, discuss intrinsic difficulty checking whether
given worth distribution core bargaining set, deciding
non-emptiness solutions. Complexity results constrained games
compared characterizing TU games.
rest paper organized follows. Section 2, overview basic
notions cooperative game theory. formal framework constrained games defined
Section 3. properties novel framework illustrated Section 4,
analysis computational viewpoint carried Section 5. discussion
concluding remarks reported Section 6.

636

fiMixed-Integer Constrained Coalitional Games

2. Coalitional Games
important issue cooperative game theory determine payoff distributions
agents scenarios collaborate forming coalitions, order obtain
higher worths acting isolation. context, one usually take care
relevant problems emerging coalition formation process, coalition
value calculation coalition structure generation problemsan excellent overview
problems state-of-the-art algorithm facing latter one found
work Rahwan, Ramchurn, Jennings, Giovannucci (2009).
Coalitional games introduced von Neumann Morgenstern (1944)
order model payoff distributions problems scenarios utility freely transferred among players. cases, coalitional games described associating
payoff possible coalition. Thus, coalitional game transferable utility (TU)
pair hN, vi, N finite set players, v function (v : 2N 7 R)
associates every coalition N real number v(S), called worth S.
Scenarios utility cannot freely transferred among players first formalized
Aumann Peleg (1960). scenarios, games described specifying
possible payoff distributions players coalition, rather one
(global) payoff. coalition N , let |S| denote cardinality S, let RS
|S|-dimensional real coordinate space, whose coordinates labeled members
S; particular, given payoff vector x RS , xi denotes component associated
player S. Then, coalitional game without transferable utility (NTU)
pair hN, V i, N finite set players, V function associating every
coalition N set payoff vectors V (S) RS , called consequences.
Note NTU games generalizations TU games. particular, according
standard encoding2 discussed, e.g., handbook edited Aumann Hart (2002)
book Peleg Sudholter (2007), TU game hN, vi viewed throughout
paper NTU game hN, Vv i, where:


fiX
Sfi
Vv (S) = x R
xi v(S) , N.
(1)


Let G = hN, V NTU game. consequence x V (N ) imputation G
following two properties hold (see, e.g., Peleg, 1963; Peleg & Sudholter, 2007):

(1) Efficiency: V (N ), player N xi yi property
known weak Pareto optimality;
(2) Individual Rationality: player N , xi max{ yi | yi V ({i}) }.
set imputations NTU game G denoted X(G). G actually TU
game, i.e., G = hN, vi (or, equivalently, G = hN, Vv i), immediate check that:


fiX
Nfi
X(G) = x R
xi = v(N ) xj v({j}), j N .


2. Indeed, encoding allows solution concepts originally defined TU games smoothly
generalized NTU frameworkas shall discuss later section.

637

fiGreco, Malizia, Palopoli, & Scarcello

particular, note xj v({j}) encodes individual rationality player j x.
outcome G imputation taken X(G) specifying payoff distribution
players game. outcome represent kind agreement amongst
players, stable respect possibility subsets players get
incentive deviate it, forming coalitions own. Depending criterium adopted define concept stability, various (solution) concepts coalitional
games defined. relevant solution concepts coalitional gamessuch
core, bargaining set, nucleolus, kernel, Shapley valuehave
originally defined within TU framework (see, e.g., Osborne & Rubinstein, 1994). Several
efforts subsequently paid apply concepts within general NTU
framework (see, e.g., Aumann & Hart, 2002). Natural extensions defined
cases, natural counterparts still missing looked others.
following, shall provide overview definitions basic solution
concepts TU games canonical extensions NTU games.
2.1 Core
concept core goes back work Edgeworth (1881). TU framework,
formalized Gillies (1959), first extended NTU framework
Aumann (1961). fact, solution concept enjoys canonical
extension NTU case, one presented next.
Let G = hN, V NTU game. coalition N , vector RS
real numbers called S-feasible V (S). Let x consequence RN . Then,
pair (y, S) objection x S-feasible payoff vector yk > xk
k Sin case, coalition said block x via y.
Definition 2.1. core C (G) NTU game G = hN, V set imputations
x objection; is,
C (G) = {x X(G) |S N, V (S) yk > xk , k } .



Thus, imputation x core stable coalition whose members receive higher payoff x leaving grand-coalition.
application Definition 2.1 TU games exactly coincides original
formulation Gillies (1959). Moreover, easily seen that, applied TU
games, Definition 2.1 equivalently restated illustrated next (see, e.g., Osborne &
Rubinstein, 1994). coalition
N payoff vector x RN , define x(S)
P
value expression xi .
Definition 2.2. core C (G) TU game G = hN, vi set imputations
x X(hN, Vv i) that, coalition N , x(S) v(S).


Thus, core coalitional game transferable utility |N | players defined
set inequalities |N | variables and, fact, polytope RN .

638

fiMixed-Integer Constrained Coalitional Games

2.2 Bargaining Set
concept bargaining set defined Aumann Maschler (1964), many
variants even within TU context (see, e.g., Maschler, 1992). natural extension
NTU framework given Peleg (1963), discussed next.
Let G = hN, V NTU game, x consequence V (N ). Let N
coalition, S-feasible payoff vector (i.e., V (S)). pair (y, S)
objection player player j x S, j
/ S, yk > xk k S.
counterobjection objection (y, S) j x pair (z, ) j ,

/ , z -feasible payoff vector zk xk k \ zk yk
k S. exist counterobjection (y, S), say (y, S)
justified objection.
Definition 2.3. bargaining set B(G) NTU game G set imputations
x justified objection.

Note definitions straightforwardly apply TU games, coincide
one originally proposed Aumann Maschler (1964). sake
completeness, recall (resp., z) S-feasible (resp., -feasible) payoff
vector TU game hN, vi Vv (S)
P(resp., z Vv (T )) holds;
P is, y(S) v(S)
(resp., z(T ) v(T ))recall y(S) = yi (resp., z(T ) = zi ).
2.3 Nucleolus

nucleolus solution concept introduced Schmeidler (1969). definition based
notion excess e(S, x, V ) coalition imputation x, measure
dissatisfaction x.
case TU games (where v denotes worth function), widely accepted
canonical definition excess e(S, x, Vv ) = v(S) x(S). Then, vector
x RN , let us define (x) vector excesses associated coalitions
(but empty one) arranged non-increasing order:
(x) = (e(S1 , x, V ), e(S2 , x, V ), . . . , e(S2|N| 1 , x, V )).
Let (x)[i] denote i-th element (x). pair imputations x y, say
(x) lexicographically smaller (y), denoted (x) (y), exists
positive integer q (x)[i] = (y)[i] < q (x)[q] < (y)[q].
Since excess measure dissatisfaction, imputations lexicographically minimizing vector excesses natural candidates stable outcomes
game. indeed idea underlying definition nucleolus,
defined Schmeidler (1969) TU games.
Definition 2.4. nucleolus N (G) TU game G = hN, vi set
N (G) = {x X(hN, Vv i) | X(G) (y) (x)}.



games fit TU framework, definition still used
provided suitable generalization concept excess conceived.
639

fiGreco, Malizia, Palopoli, & Scarcello

influential approach define excess functions NTU games proposed Kalai (1975),
axiomatized properties functions satisfy retain
nice features underlying TU specifications. properties follows:
1. Let x, RN . xi = yi players S, e(S, x, V ) = e(S, y, V ) holds,
function V ;
2. Let x, RN . xi < yi players S, e(S, x, V ) > e(S, y, V ) holds,
function V ;
3. Let x RS . vector V (S) that, S, yi > xi ,
e(S, x, V ) = 0 holds, function V ;
4. e(S, x, V ) continuous jointly x V .
example, prototypical excess function discussed Kalai following:



, .
eK (S, x, V ) = sup R | V (S) yi = xi +
|S|

(2)

function coincides canonical excess function v(S)x(S) whenever applied
TU games (Kalai, 1975).
2.4 Kernel
kernel solution concept originally introduced TU framework Davis
Maschler (1965) help understand properties bargaining set.
TU game hN, vi, define surplus si,j (x) player player j
imputation x value si,j (x) = maxS|iS,j / e(S, x, Vv ) = maxS|iS,j / (v(S) x(S)).
Definition 2.5. kernel K (G) TU game G = hN, vi set:
K (G) = {x X(hN, Vv i) | si,j (x) > sj,i(x) xj = v({j}), i, j N, 6= j}.



Note definition TU games based notion excess.
Intuitively, surplus player j x highest payoff player
gain (or minimal amount lose, negative value) without cooperation
j, forming coalitions players satisfied x; thus, si,j (x)
weight possible threat j. particular, player bargaining
power j x si,j (x) > sj,i (x); however, player j immune threat whenever
xj = v({j}), since case j obtain v({j}) even operating alone. say
player outweighs player j x si,j (x) > sj,i(x) xj > v({j}). kernel
set imputations player outweighs another one.
Generalizing kernel NTU games based considering generalizations
excess function, nucleolus. Again, influential approach, recalled next,
due Kalai. However, worthwhile noticing approaches
proposed literature (see, e.g., Orshan & Zarzuelo, 2000; Peleg & Sudholter, 2007).
Indeed, differently solution concepts discussed far, variations kernel (and
640

fiMixed-Integer Constrained Coalitional Games

related concepts, prekernel, focus extensions cited above)
NTU games still subject research debate (cf. Serrano, 1997).
Let G = hN, V NTU game. say payoff vector RN transfer
player j player tj 0, ti 0, tk = 0, player k N \ {i, j}. transfer
justified imputation x, every real number , 0 < < 1, vector = x +
(such yk = xk + tk , k N ) individually rational vector V (N )
(x + t) (x)of course, excess function G satisfying Kalais axiomatization must
used order define excess vectors. kernel K (G) G set: K (G) =
{x X(G) | justified transfer player j player x, i, j N, 6= j}.
2.5 Shapley Value
Shapley value solution concept introduced TU framework Shapley (1953).
concept associates every TU game G = hN, vi unique payoff vector (G) RN ,
component (G)i , called Shapley value player i, indicates
worth assigned player i, based upon ability cooperation measured
expected marginal contribution player forming coalitions (as formalized below).
Let permutation set N players. player i, denote pi
set players preceding . marginal contribution player coalition pi
v(pi {i}) v(pi ). permutations chosen uniformly random set
possible permutations,
P expected marginal contribution player game G
value (G)i = |N1 |! v(pi {i}) v(pi ) or, equivalently:
(G)i =

X

SN \{i}

|S|!(|N | |S| 1)!
(v(S {i}) v(S)) .
|N |!

Shapley value unique payoff vector satisfying following properties,
constitute axiomatic characterization3 :
P
(1) Efficiency:
(G)i = v(N ).

(2) Symmetry: Two players j symmetric if, N i, j
/ S,
v(S {i}) = v(S {j}). players players j symmetric, (G)i = (G)j .
(3) Dummy: player dummy if, N \ {i}, v(S {i}) v(S) = v({i}).
player dummy player, (G)i = v({i}).
(4) Additivity: Let G = hN, wi TU game, G = hN, v + wi TU game
(v+w)(S) = v(S)+w(S) coalition N . Then, (G )i = (G)i +(G )i .

Note Shapley value might satisfy individual rationality, thus
necessarily imputation. Payoff distributions efficient, necessarily
individually rational, called pre-imputations literature.
Generalizing Shapley value NTU framework straightforward. Different
extensions Shapley value NTU games proposed. them,
3. characterization reported one found often literature. However,
original axiomatic formulation Shapley requires carrier axiom instead efficiency
dummy axioms; two axiomatizations equivalent (Shapley, 1953; Winter, 2002).

641

fiGreco, Malizia, Palopoli, & Scarcello

evaluated NTU version TU game, coincides standard Shapley value
TU games. discuss generalization proposed Shapley (1969)
formulation reported McLean (2002), refer interested reader latter
work extended treatment subject values NTU games, paper
Hart (2004) comparison notable three them.
Let G = hN, V NTU game. vector RN strictly positive real numbers,
let G game hN, v
(
)
X
v (S) = sup
zi | z V (S) .


TU game G said defined G v (S) finite S.
Definition 2.6. Let G = hN, V NTU game. vector x RN Shapley NTU
value payoff G exists vector RN strictly positive real numbers
that: x V (N ); G defined G; xi = (G )i player N . set
Shapley NTU values G denoted (G).

Shapley NTU values fulfill, adaptations, axioms characterizing
standard TU Shapley values. Actually, axioms suffice uniquely characterize
NTU counterpart, axioms issued order define unambiguously
NTU Shapley value. axiomatization NTU case given Aumann (1985).
interested reader referred work McLean (2002), issue.
2.6 Properties Solution Concepts TU Games
conclude recalling well-known properties solution concepts discussed
above, applied TU games.
Proposition 2.7 (see, e.g., Osborne & Rubinstein, 1994). Let G = hN, vi TU game
X(G) 6= . Then:
(1) |N (G)| = 1;
(2) N (G) K (G) (hence, K (G) 6= );
(3) K (G) B(G) (hence, B(G) 6= );
(4) C (G) B(G); and,
(5) C (G) 6= implies N (G) C (G).
Note relationship Shapley value solution
concepts (just recall Shapley value necessarily imputation).

3. Constrained Games via Mixed-Integer Linear (In)Equalities
Assume TU game G = hN, vi given consider problem modeling
dealing constraints imposed feasible worth distributions amongst players G.
642

fiMixed-Integer Constrained Coalitional Games

constraints might implied nature domain hand (e.g.,
worth arbitrarily divisible), reflect hard preferences expressed
players regulation authorityrecall Example 1.1. approach
encode application-oriented constraints within classical coalitional TU game setting
defining set mixed-integer linear (in)equalities, satisfied
imputations game G. approach first formalized below; subsequently, shall
illustrate modeling capabilities discuss relationships TU framework.
start recalling mixed-integer linear (in)equality linear (in)equality
variables might constrained take values set Z integers.
set LC mixed-integer linear (in)equalities, denote real (LC) int(LC) sets
variables LC defined R Z, respectively. Moreover, assume worth
distributions constrained defining inequalities via player auxiliary variables.
player variable form xi , N player underlying TU game,
meant encode worth assigned player outcomes
game. (possibly empty) set auxiliary variables LC set
real (LC) int(LC) \ {xi | N }. Auxiliary variables sometimes useful modeling
purposes, illustrated Example 1.1.
Let us proceed formalization. Let G = hN, vi TU game, recall
Section 2 G viewed NTU game hN, Vv i. Let LC set mixedinteger linear (in)equalities. Define (LC) set solutions LC. Moreover,
coalition N , let (LC)[S] denote projection (LC) onto subspace associated
payoff domains players S; is, vector index set belongs (LC)[S]
vector x (LC) xi = yi holds, S.
Intuitively, constrained game LC defined restricting consequences
underlying TU game G belonging solution space set LC mixed-integer
linear (in)equalities projected onto subspace associated player variablesrecall
auxiliary variables may occur LC. formalized below.
Definition 3.1 (Mixed-Integer Constrained Games). Let G = hN, vi TU game
let LC set mixed-integer linear (in)equalities. Then, (mixed-integer) constrained
game G|LC NTU game hN, VLC VLC (S) = Vv (S) (LC)[S]. is,


fiX
Sfi
VLC (S) = x R
xi v(S) x (LC)[S] , N.


3.1 Modeling Capabilities Constrained Games

Constraining TU game G via set LC (in)equalities involve integer variables
(i.e., int(LC) = ) abstraction approaches literature consider
specific sets (in)equalities real variables (such Aumann & Dreze, 1974; Byford,
2007; Jiang & Baras, 2007). particular, capability might exploited to:
(1) State hard preferences worth distributions.
example, consider game G = hN, vi set players N = {1, 2, 3, 4},
v(N ) = 10. Assume players 3 4 together require get least

643

fiGreco, Malizia, Palopoli, & Scarcello

half worth. Then, requirement modeled as:

x3 + x4 5
x1 , x2 , x3 , x4 R
Moreover, allowing integer variables, completely novel modeling capabilities emerge
setting w.r.t. earlier approaches. Indeed, integer variables used isolate
non-convex regions, might needed model specific application requirements
NTU nature, exemplified below.
(2) Consider alternative scenarios.
allowing integer variables, may model alternative preferences players, i.e.,
may enforce disjunctions preferences. instance, consider scenario
either players 1 2 must get together 3, players 2 3 must get
together 5. case, two constraints (i.e., x1 + x2 3
x2 + x3 5) goal define set (in)equalities prescribing least
one satisfied. end, auxiliary integer variable used:

x1 + x2 3 + U




x2 + x3 5 + U (1 y)
0y1



x ,x ,x R

1 2 3
yZ

constant value U upper bound worth coalition. Indeed,
case = 1, constraint x1 + x2 3 + U trivially satisfied (because U
sufficiently large), thus, enforce x2 +x3 5. Symmetrically, = 0,
constraint x2 + x3 5 + U trivially satisfied, thus, enforce x1 + x2 3.
course, simple manipulations, one may easily specify kinds alternatives, e.g., fact least (or most) k given constraints satisfied.

(3) Restrict worth functions specific domains.
domains required integer intervals, rather obvious. instance,
assume x3 take values domain {4, 5, 6, 7, 8, 9, 10}. Then, may
simply consider following constraints:

4 x3 10
x ,x ,x R
1 2 4
x3 Z

order model general scenarios, (as point (2) above) mixedinteger linear (in)equalities defined auxiliary variables. instance, assume
player 2 wants either take whole worth (even forming
coalitions players) or, whenever possible, get nothing.
modeled constraints, additional variable win fact, notice

644

fiMixed-Integer Constrained Coalitional Games

v(N ) constant value game given hand:

x2 = v(N ) w



0w1
x ,x ,x ,x R


1 2 3 4
wZ

Note Example 1.1 basically presents realistic case, several auxiliary
variables used restrict money distributions available coin set.
basic modeling capabilities constrained games discussed,
order illustrate possible applications resulting framework, convenient
preliminarily observe two properties (which related use integer variables).
First, easy check that, constrained games, may deal imputation
sets arbitrary sizes.4
Proposition 3.2. Let G = hN, vi TU game let X X(G) arbitrary finite
set imputations. Then, finite set constraints LC X(G|LC ) = X .
addition, integer variables might used succinctly specify exponentially many
imputations via polynomially many (in)equalities.
Proposition 3.3. exists class C = {G|nLC }n>0 constrained games
game G|nLC n + 1 players, LC consists 2 n + 1 inequalities, |X(G|LC )| = 2n .
believe setting emerging properties rather appealing
knowledge representation perspective. Indeed, one may exploit constrained games
naturally model scenarios non-transferable conditions emerge, devising
compact specifications desired restrictions utilities may transferred among
coalition members. fact, various circumstances envisaged usage
constrained games natural choice; instance, whenever worth distributed
among agents comes set indivisible goods, exemplified below.
Example 3.4 (Distributing indivisible goods). certain region country
famous hosting several producers two kinds goods, named .
producer {1, . . . , n}, let denote quantity pieces produced i,
respectively. assembling together one piece one piece , novel kind indivisible
good obtained and, fact, commercializing assembled product much
advantageous business selling separately. Therefore, agreement found
amongst producers area order assemble pieces overall
available, provided resulting units assembled product (fairly) distributed
amongst involved producers, would independently commercialize them.
scenario easily modeled within framework follows. First, associate
every coalition {1, . . . , n}, number pieces assembled product
produce. Thus, define:
X
X
v(S) = min(
,
).




4. sake exposition, proofs propositions stated section reported Appendix.

645

fiGreco, Malizia, Palopoli, & Scarcello

Then, since assembled product indivisible, possible worth distribution
vector non-negative integers, immediately modeled via following set
constraints LC = {xi 0, xi Z, 1 n}. particular, (LC) convex region,
earlier modeling perspectives NTU games, present handbook
edited Aumann Hart (2002), apply here.

cases, however, worth might practically assumed divisible,
specific constraints regulate actual distribution. Notably, even cases, integer
variables may play crucial role illustrated next.
Example 3.5 (Service composition). Assume service acquired 100
Eurosfor sake simplicity, assume money divisible, otherwise worth
distributions might simply restricted discrete domain Example 3.4
Example 1.1. Supplying service implies executing tasks, named t1 , . . . , tm .
Assume set {1, . . . , n} agents, one capable carrying
tasks, let sij denote ability agent perform task tj (sij = 1
means agent able perform tj , whereas sij = 0 means capable
so).PThus, coalition {1, . . . , n} capable supporting service case
sij 1, j {1, . . . , m}.
Assume, moreover, order complete , tasks must completed, agents contributing must able exchange partial results returned
performing required tasks. Establishing communication infrastructure guaranteeing
needed result-transfers take place specific cost coalition S,
denote com(S) < 100. Hence, amount money might finally distributed
amongst players described following worth function:

P

100 com(S)
sj 1, j {1, . . . , m}
v(S) =
0
otherwise.
Note scenario defines classical TU game G = h{1, . . . , n}, vi. However,
things may significantly different assume agent sustain internal
cost, say cij , whenever actually performing task tj , that, hence, may decide
perform task all, convenient. Indeed, case, letting ji {0, 1}
variable denoting whether actually performing tj , P
natural state


total internal cost agent (which given expression
j=1 j cj )
exceed agent gets worth distribution. Hence, utilities cannot freely
distributed and, proper modeling realistic scenario, game
enriched following set constraints:
X

ji = 1, j {1, . . . , m}










X



ji cij , {1, . . . , n}
xi
j=1
LC =



0 ji sij , {1, . . . , n}, j {1, . . . , m}






x1 , . . . , xn R




j Z, {1, . . . , n}, j {1, . . . , m}
646

fiMixed-Integer Constrained Coalitional Games

respect formalization, worthwhile noting (LC) empty
service cannot provided all, indeed X(G|LC ) would empty turn. Otherwise,
i.e., (LC) 6= , imputations G|LC correspond worth distributions associated
legal staffing tasks, rather arbitrary possible worth distributions
(as would plain TU case).
worthwhile contrasting formulation alternative TU one,
constraints LC directly encoded definition worth function, instead
using separate component thereof, done NTU framework proposing here.
instance, one may add condition v(S) = 100 com(S) requirement
exists element x (LC) task tj , player
ji 6= 0 (in x). way, ensure payoff 100 com(S) assigned
coalition formed players perform task conforming
cost constraints, jointly complete refined modeling perspective
exactly one underlying class linear programming games (see, e.g., Owen, 1975).
However, approach would prescribe payoff 100 com(S) actually
distributed amongst players S. fact, focusing accurately modeling
worth function, cannot guarantee outcome game (according chosen
solution concept) fulfils desired constraints distribution payoffs single
players. words, using constraints definition worth function may
useful certain cases careful modeling purposes, cannot general replace
use external constraints actually constrain allowed worth distributions.
important remark, note structure example may
well used guideline formalization application scenarios. Indeed,
basic idea use mixed-integer linear constraints define solutions combinatorial problems associated feasible worth distributions (reflecting, e.g., costs
solutions). Thus, contextualized approach case staffing
problem, similar encodings used define constrained games suited deal
scheduling planning problems, cite few.
3.2 Closer Look Constrained Games
resort presentation framework constrained games analyzing structure consequences, role played individual rationality
requirement context. analysis provide important bases subsequent
treatment analytical computational properties NTU solution concepts
applied constrained games.
3.2.1 Consequences Constrained Games
order understand nature constrained games, convenient take closer
look structure function VLC . fact, principle NTU game hN, V
impose requirement function associating set consequence V (S)
coalition N , NTU games attracted much attention literature
actually allow arbitrary consequences specified (Aumann & Hart, 2002). Indeed,
sets consequences usually required satisfy additional conditions,
(de facto) conceived guarantee nice properties hold solution concepts
647

fiGreco, Malizia, Palopoli, & Scarcello

interest. assumptions often considered literature
(not necessarily required simultaneously hold) recalled next. N , V (S)
might required be:
(1) (Upper) Bounded: real number R x V (S),
S, xi holds;
(2) Closed: V (S) contains boundaries;
(3) Compact: V (S) closed bounded;
(4) Comprehensive: x V (S), RN (i S)(yi xi ), V (S);
(5) Convex: pair x, V (S), real number t, 0 < < 1, vector
(1 t)x + ty belongs V (S).
(6) Non-empty: |V (S)| > 0.
case constrained games, explicitly ask requirements
satisfied, thereby giving rise setting powerful modeling capabilities (as
discussed Section 3.1). differences constrained games classical NTU
games illustrated next.
Consider function VLC associated constrained game G|LC . first difference
concerns property (1), VLC (S) required bounded (as TU case,
individual payoffs players bounded general, since requirement sum exceed worth v(S) associated Ssee Equation (1)
Section 2). Actually, substantial difference given that, possible worth
distribution G|LC corresponding solution concept illustrated Section 2,
payoff player bounded.
Similarly, easy see might cases property (2) hold
context constrained games. Indeed, VLC (S) might closed whenever LC
contains strict inequality excludes boundary VLC (S). However, known
cases undesirable solution concepts, hence shall consider
constraints based non-strict inequalities only. Property (3) combination
first two properties, thus lines reasoning still apply.
differences remaining three properties, instead, characterize framework
constrained games basis modeling capabilities. fact, ability
handle sets consequences comprehensive convex, possibly
empty coalition, important peculiarity constrained games knowledge
representation perspective. Indeed, may lose comprehensiveness time constraint
payoff distribution given states players required get least
certain worth; may lose convexity (as well comprehensiveness) time integrality
constraints involved. Moreover, may deal empty set consequences
coalition whenever feasible way distribute worth associated
according constraints players must satisfy.
Example 3.6. Consider TU game G = hN, vi N = {1, 2, 3}, v({1, 2, 3}) = 3,
v(S) = 0 {1, 2, 3}. Consider scenario worth G restricted
648

fiMixed-Integer Constrained Coalitional Games

integer value (i.e., payoff distributions taken Z{1,2,3} ), players
1 2 require get least 2. constraints modeled follows:

x1 + x2 2
LC =
x1 , x2 , x3 Z
Note (LC)[{1, 2, 3}] = {x Z{1,2,3} | x1 + x2 2}, (LC)[{1, 2}] = {x Z{1,2} |
x1 +x2 2}, (LC)[{1, 3}] = Z{1,3} , (LC)[{2, 3}] = Z{2,3} , (LC)[{1}] = Z{1} , (LC)[{2}] =
Z{2} , (LC)[{3}] = Z{3} . Then, constrained game G|LC = hN, VLC that:
VLC ({1, 2, 3}) =
=
VLC ({1, 2})
=
VLC ({1, 3})
=
=
VLC ({2, 3})
VLC ({i})
=

{x R{1,2,3} | x1 + x2 + x3 3} (LC)[{1, 2, 3}] =
{x Z{1,2,3} | x1 + x2 + x3 3, x1 + x2 2};
{x R{1,2} | x1 + x2 0} (LC)[{1, 2}] = ;
{x R{1,3} | x1 + x3 0} (LC)[{1, 3}] = {x Z{1,3} | x1 + x3 0};
{x R{2,3} | x2 + x3 0} (LC)[{2, 3}] = {x Z{2,3} | x2 + x3 0};
{x R{i} | xi 0} (LC)[{i}] = {x Z{i} | xi 0}; (i {1, 2, 3})

Despite simple constraints considered G, immediate check (e.g.)
VLC (N ) comprehensive convex, VLC ({1, 2}) empty. Indeed,
integrality constraints immediately lead loose comprehensiveness convexity. Moreover, fact players 1 2 require get least 2 implies coalition {1, 2}
never form deviate grand-coalition, given two players cannot
guarantee worth acting without player 3 (indeed, v({1, 2}) = 0).
3.2.2 Individual Rationality Constrained Games
important issue pointed constrained games related individual
rationality requirement set imputations. Let G = hN, V NTU game,
recall Section 2 imputation x X(G) must player
N , xi max{ yi | yi V ({i}) }.
Consider constrained game G|LC G = hN, Vv underlying TU game.
Definition 3.1, set VLC ({i}) coincides Vv ({i}) (LC)[{i}]. Then, individual rationality requirement, player i, xi max{ yi | yi Vv ({i})(LC)[{i}] }.
Note special case occurs VLC ({i}) = Vv ({i}) (LC)[{i}] = . case,
indeed, max{ yi | yi VLC ({i}) } defined (as real value). approach might
therefore observe game over-constrained, stop analysis.
approach is, fact, consistent several NTU formalizations requiring set
consequences non-empty, possible coalition (see Section 3.2.1).
However, Example 3.6 already pointed empty sets consequences
may naturally emerge constrained games, VLC (S) = reflects fact
coalition cannot form deviate grand-coalition, worth distribution
principle granted members alone (according underlying TU
game), satisfies constraints hand. Consequently, finer-grained perspective
considered deal individual rationality requirement, special case
VLC ({i}) = , player N .
basic observation VLC ({i}) = necessarily implies xi > v({i}) holds,
imputation x VLC (N ). Thus, extreme scenarios, individual rationality
649

fiGreco, Malizia, Palopoli, & Scarcello

constraint conceptually satisfied (though formally undefined) possible imputation
x, since constraints LC require xi larger v({i}). Technically, stress
conclusion implied defining max{} = , standard extension
max empty sets.
light perspective, show individual rationality preserved constraints added given TU game.
Proposition 3.7. Let G = hN, vi TU game let x payoff vector
individually rational w.r.t. G (i.e., xi v({i}), player N ). Then, set
LC constraints, x individually rational w.r.t. constrained game G|LC .

4. Solution Concepts Constrained Games
Constrained coalitional games special cases NTU games, therefore inherit
various solution concepts discussed Section 2. Thus, constrained (and, such, NTU) game G|LC , interest compute core, bargaining
set, nucleolus, kernel, Shapley value. section, study properties concepts, highlighting similarities differences featured constrained
games opposed TU games.
nutshell, show properties TU games stated Proposition 2.7
still hold constrained games solution concepts, bargaining set
might empty games. Moreover, portion core TU game G
satisfies constraints preserved, sense subset core
constrained game G|LC built top G. hand, solutions
concepts, preservation property holds special cases only.
illustrating results, useful state property relating imputation
set constrained game imputation set underlying TU game.
Proposition 4.1. Let G|LC constrained game G = hN, vi.
(LC)[N ] X(G|LC ).

Then, X(G)

Proof. Let x payoff vector X(G) (LC)[N ]. Since x X(G) x Vv (N ).
assuming x (LC)[N ] hence x VLC (N )recall,
Definition 3.1, VLC (N ) = Vv (N ) (LC)[N ]. x X(G), x efficient w.r.t.
G, meaning Vv (N ), player N xi yi . Moreover, since
VLC (N ) Vv (N ), x efficient w.r.t. G|LC . Finally, Proposition 3.7, know x
individually rational w.r.t. G|LC . Thus, x X(G|LC ).
Based result, show imputation x X(G) belongs X(G|LC ),
following shall show x satisfies constraints LC, thereby avoiding
explicitly reason efficiency individual rationality x.
4.1 Relationships Among Solution Concepts
start analysis investigating whether properties basic solution concepts
(as appear Proposition 2.7) preserved setting constrained games.

650

fiMixed-Integer Constrained Coalitional Games

4.1.1 Counterparts Proposition 2.7.(1) Proposition 2.7.(2)
Let us begin focusing first two properties Proposition 2.7, pertain
nucleolus. TU framework, nucleolus always consists exactly one imputation.
constrained framework, properties solution concept intimately related
closeness (LC) (and, turn, X(G|LC )), i.e., whether (LC) contains
boundaries. Recall Section 3 (LC) might closed due
occurrence strict inequalities LC.
Proposition 4.2. exists constrained game G|LC (with int(LC) = )
X(G|LC ) 6= N (G|LC ) = (for excess function eK Equation (2)
page 640).
Proof. Consider game G players {1, 2}, v({1, 2}) = 1 v({1}) = v({2}) =
0. Given constraint LC = {x1 < 12 , x1 R}, one may note X(G|LC ) 6= . Indeed,
observe max{x1 | x1 VLC ({1})} = max{x2 | x2 VLC ({2})} = 0, since VLC ({i}) =
Vv ({i}) (LC)[{i}] = {xi R{i} | xi 0} (LC)[{i}] = {xi R{i} | xi 0},
{1, 2}. Thus, payoff vector x X(G|LC ) required satisfy x1 0
x2 0, order individually rational. particular, claim X(G|LC ) = {x
R{1,2} | x1 + x2 = 1, x1 < 12 , x1 0, x2 0}. Indeed, vector x VLC (N ) = {x RN |
x1 + x2 1, x1 < 12 } x1 < 12 x2 < 12 efficient, given
vector VLC (N ) x1 < y1 < 12 x2 < y2 < 12 , y1 + y2 < 1. Moreover,
vector x VLC (N ) x1 < 12 , x2 > 12 , x1 + x2 < 1 efficient,
given existence vector VLC (N ) x1 < y1 = x1 + 1x22 x1 < 12
x2 < y2 = x2 + 1x22 x1 , (therefore) y1 + y2 = 1.
Consider imputation x x1 + x2 = 1 x1 < 12 (and hence x2 > 12 ).
Then, always build imputation 6= x y1 = x1 + ( 12 x1 )/2 > x1
y2 = 1 y1 < x2 ; notice y1 < 12 holds. new imputation, case
(y) (x) holds w.r.t. excess function eK Equation (2). Indeed, recalling
VLC ({i}) = {xi R{i} | xi 0} xi 0 yi 0 hold, {1, 2},
(x) = (0, x1 , x2 ) (y) = (0, y1 , y2 ). Thus, imputation x
belongs N (G|LC ), i.e., N (G|LC ) = . Note (LC) closed.
practical applications linear programming, one may deal non-strict inequalities
(see, e.g., Papadimitriou & Steiglitz, 1998); cases (i.e., whenever X(G|LC )
closed hence compact, since always bounded), nucleolus empty.
property observed hold Kalai (1975) along relationship nucleolus
kernel. properties restated context follows.
Proposition 4.3 (cf. Kalai, 1975). Let G|LC constrained game X(G|LC ) 6= .
Then,
(1) X(G|LC ) compact, |N (G|LC )| 1;
(2) N (G|LC ) K (G|LC ) (hence, K (G|LC ) 6= whenever X(G|LC ) compact).
following, examples counterexamples built avoiding use strict
inequalities.
651

fiGreco, Malizia, Palopoli, & Scarcello

4.1.2 Counterparts Propositions 2.7.(3), (4), (5)
Let us move analyze counterpart Proposition 2.7.(3). end, first
notice that, unlike TU case, bargaining set sometimes empty.
Proposition 4.4. exists constrained game G|LC (with int(LC) = )
X(G|LC ) 6= B(G|LC ) = .
Proof. Consider TU game G players {1, 2, 3, 4}, whose worths follows:
v({1, 2, 3, 4}) = 3, v({1, 2}) = 2, v({2, 3, 4}) = 3, v({1, 3, 4}) = 3, v({2}) = 1, v(S) = 0
coalition {1, 2, 3, 4}. Consider moreover following set constraints:

x1 + x2 + x3 + x4 = 3




x
2 + x3 + x4 = 3
x1 + x3 = 1
LC =


x + x4 = 1


1
x1 , x2 , x3 , x4 R

Let x payoff vector x1 = 0 x2 = x3 = x4 = 1. Observe x satisfies
constraints LC. Moreover, x imputation X(G); thus, Proposition 4.1, x
belongs X(G|LC ). fact, x vector (LC) and, therefore,
imputation X(G|LC ). Thus, prove B(G|LC ) = , show x
contained B(G|LC ). end, consider objection (y, {1, 2}) player 1
player 3, y1 = 13 y2 = 53 . Note y1 + y2 = v({1, 2}) = 2, y2 > 1 y1 > 0,
thus {1, 2}-feasible. Moreover, recall v({3}) = v({3, 4}) = v({2, 3}) = 0.
follows counterobjections 3 1 (y, {1, 2}) may constructed
coalition {2, 3, 4}. Assume (z, {2, 3, 4}) one counterobjection. player
2, belongs intersection two coalitions {1, 2} {2, 3, 4}, z2 y2 > 1
holds. constraint z2 + z3 + z4 = 3, entails z3 + z4 < 2. However,
impossible since z3 x3 = 1 z4 x4 = 1. Thus,
possible counterobjections objection (y, {1, 2}) x. follows x
belong B(G|LC ) and, hence, B(G|LC ) = , even though X(G|LC ) 6= .
consequence, derive counterpart Proposition 2.7.(3) hold
constrained games. Indeed, may consider game G|LC defined proof
Proposition 4.4 observe that, since X(G|LC ) 6= , Proposition 4.3, know
K (G|LC ) 6= .
Corollary 4.5. constrained game G|LC (with int(LC) = ) B(G|LC ) =
K (G|LC ) 6= (and thus K (G|LC ) 6 B(G|LC )).
complete picture pertaining bargaining set, showing
core always included it. provides counterpart Proposition 2.7.(4).
Proposition 4.6. Let G|LC constrained game. Then, C (G|LC ) B(G|LC ).
Proof. Consider imputation x C (G|LC ) assume contradiction x
/ B(G|LC ).
this, must exist objection (y, S) x. Therefore, must case
S-feasible payoff vector G|LC yk > xk , k S. implies x
/ C (G|LC ):
contradiction. Thus, x B(G|LC ).
652

fiMixed-Integer Constrained Coalitional Games

Figure 1: Illustration Solution Concepts Example 4.8.
finally stress counterpart Proposition 2.7.(5) already known
work Kalai (1975), restated settings constrained games follows.
Proposition 4.7 (cf. Kalai, 1975). Let G|LC constrained game. Then, C (G|LC ) 6=
implies N (G|LC ) C (G|LC ).
4.2 Preservation Solution Concepts
continue investigation turning problem assessing whether outcome
stable (under solution concept) TU game remains stable constraints
issued. crucial issue extent imputation set affected
constraints imposed game. issue illustrated next.
Example 4.8. Consider TU game G = hN, vi N = {1, 2}, v({1, 2}) = 2,
v({1}) = v({2}) = 0. immediate check X(G) = {x R{1,2} | x1 + x2 = 2 x1
0 x2 0}. solution concepts G follows (see Figure 1 illustration):
Core. imputation x X(G) coalition {1, 2}, case
x(S) v(S). Thus, C (G) = X(G).
Bargaining Set. Since C (G) B(G) (recall Proposition 2.7) since B(G) X(G),
immediately B(G) = C (G) = X(G).
Nucleolus. Let x X(G) imputation. Considering standard excess function
TU games, either (x) = (0, x2 , x1 ) (x) = (0, x1 , x2 ),
depending whether x1 x2 x2 > x1 . Indeed, recall v({1, 2}) =
x({1, 2}) = 2 v({1}) = v({2}) = 0. Thus, lexicographically minimum excess
vector obtained imputation x x1 = x2 = 1, i.e., N (G) = {x}.
Kernel. Since N (G) K (G) (recall Proposition 2.7), x K (G). Consider
imputation x X(G) x 6= x. Assume x1 > 1 (the line
reasoning applies case x2 > 1), thus x2 < 1. standard
excess function TU games, s1,2 (x) = x1 s2,1 (x) = x2 surpluses x,
653

fiGreco, Malizia, Palopoli, & Scarcello

v({1}) = v({2}) = 0. Then, s2,1 > s1,2 holds, order x K (G),
x1 = v({1}) = 0, case, x1 > 1. follows
K (G) = {x}.
Shapley Value. Note two players G symmetric hence Shapley
value must same. Thus, (G) = (1, 1).
Now, consider constraints LC = {x1 +x2 1, x1 , x2 R}. Then, easily checked
X(G|LC ) = {x R{1,2} | x1 + x2 = 1 x1 0 x2 0}, hence X(G) X(G|LC ) = .
applying line reasoning (and considering Kalais excess function
Equation (2) nucleolus kernel), derive C (G|LC ) = B(G|LC ) = X(G|LC )
N (G|LC ) = K (G|LC ) = {y}, y1 = y2 = 12 (see, again, Figure 1).
Moreover, Shapley NTU values G|LC , note vectors = (1 , 2 )
1 = 2 = > 0 G|LC definedfor
every vector
P G|LC . fact,
= (1 , 2 ) 1 6= 2 value v|LC (N ) = sup
zi | z V (N ) infinite.
Indeed, pre-imputations players necessarily individually rational, hence
game one player may get unbounded negative value, long one gets
unbounded positive value sum 2. Now, every = (, ), worth
function TU game G|LC v|LC ({1}) = v|LC ({2}) = 0, v|LC (N ) = . Since
two players symmetric, Shapley values family games form
(G|LC ) = ( 2 , 2 ). Therefore, consequence x V |LC (N ) different ( 12 , 12 ) admits
vector = (1 , 2 ), 1 = 2 , xi = (G|LC )i players 1 2.
conclude singleton {y} set Shapley NTU values G|LC .
Thus, solutions concepts constrained game G|LC completely unrelated
G.

Note that, example, fact solution concept preserved
chance. Indeed, recall core, bargaining set, nucleolus, kernel defined
refinements set possible imputations. Therefore, extreme scenario
X(G) X(G|LC ) = holds (for constrained game G|LC built top TU game G),
none solution concepts preserved.
Fact 4.9. Let G|LC constrained game X(G) X(G|LC ) = . Then,
(1) C (G) C (G|LC ) = ;
(2) B(G) B(G|LC ) = ;
(3) N (G) N (G|LC ) = ; and,
(4) K (G) K (G|LC ) = .
Moreover, recall Shapely NTU values refinements set possible payoff
distributions associated grand-coalition (and, particular, pre-imputations
TU games). Thus, (G) 6 VLC (N ) (as Example 4.8), solution concept cannot
preserved. general, since (G) pre-imputation, following holds.
Fact 4.10. Let G|LC constrained game, G = hN, vi. Assume VLC (N ) {x
Vv (N ) | x efficient } = . Then, (G) 6 (G|LC ).
654

fiMixed-Integer Constrained Coalitional Games

light observations, however interest analyze whether
preservation properties hold respect (pre)imputations G G|LC .
example, interest establish relationship payoff vectors
C (G) X(G|LC ) (i.e., vectors core TU gameand thus imputations
gameand imputations constrained game) payoff vectors
C (G|LC ) X(G) (i.e., vectors core constrained gameand thus
imputations gameand imputations TU game). Exploring
relationships, solution concept, addressed rest section.
4.2.1 Core
first result concerns core, shows imputations core
TU game satisfy constraints core resulting constrained game.
Proposition 4.11. Let G|LC constrained game. Then, C (G) X(G|LC ) C (G|LC )
X(G).
Proof. Let G = hN, vi TU game, recall Section 2 G equivalently
viewed NTU game hN, Vv i. Assume x payoff vector C (G), hence
X(G). Then, coalition N vector Vv (S) yi > xi , S.
Definition 3.1, NTU game G|LC = hN, VLC i, case VLC (S) Vv (S),
N . Therefore, coalition N vector VLC (S)
yi > xi , S. is, x X(G|LC ), x belongs C (G|LC ).
However, inclusion strict cases, even imputation affected
constraints, i.e., even X(G) = X(G|LC ).
Proposition 4.12. exists constrained game G|LC (with int(LC) = )
X(G) = X(G|LC ), C (G) = C (G|LC ) 6= . Thus, C (G) X(G|LC ) C (G|LC ) X(G).
Proof. Consider TU game G = hN, vi N = {1, 2, 3}, v({1}) = 1, v({2}) = 1,
v({3}) = 2, v({1, 2}) = 3, v({1, 3}) = 0, v({2, 3}) = 0, v({1, 2, 3}) = 4. Notice
X(G) = {x} x1 = 1, x2 = 1, x3 = 2; C (G) = . particular,
latter equality, consider pair (y, {1, 2}) y1 = y2 = 32 . Since y({1, 2}) =
v({1, 2}), y1 > x1 y2 > x2 , (y, {1, 2}) objection x, therefore
belong C (G).
Consider following set constraints:

x1 + x2 2
LC =
x1 , x2 R
easily seen x satisfies LC. Thus, x X(G|LC ) holds Proposition 4.1. Moreover,
since (LC)[{i}] = R{i} holds player N , constraint
worths singleton coalitions, individual rationality constraint G|LC prescribes
x X(G|LC ): x1 v({1}) = 1, x2 v({2}) = 1, x3 v({3}) = 2. Since
v({1, 2, 3}) = 4, x fact imputation X(G|LC ). Thus, X(G) = X(G|LC ).
conclude proof, let us observe that, constrained game G|LC ,
{1, 2}-feasible vector z z1 > x1 z2 > x2 ; indeed, observe z1 + z2 2
holds constraints, x1 + x2 = 2. is, objection x,
therefore imputation C (G|LC ).
655

fiGreco, Malizia, Palopoli, & Scarcello

4.2.2 Bargaining Set
far bargaining set concerned, show constrained games
whose bargaining set completely unrelated underlying TU games.
objections counterobjections necessarily restricted set
possible imputations. Thus, constraints may radically alter feasibility properties
certain payoff vectors, yet without affecting imputation set. shown
following two propositions.
Proposition 4.13. exists constrained game G|LC (with int(LC) = )
X(G) = X(G|LC ), B(G) X(G|LC ) 6 B(G|LC ) X(G).
Proof. Consider TU game G = hN, vi N = {1, 2, 3, 4, 5}, v({1, 2, 3, 4, 5}) = 8,
v({2, 3, 4}) = 8, v({1, 3, 4}) = 7, v({1, 2}) = 2, v({5}) = 1, v(S) = 0
coalition N . Consider imputation x x1 = 0, x2 = 1, x3 = 3, x4 = 3,
x5 = 1. claim x B(G). Indeed, let (y, S) objection x. objection
carried three different coalitions, counterobjection:
First, = {2, 3, 4}, y2 > x2 = 1, y3 > x3 = 3, y4 > x4 = 3, y2 + y3 +
y4 v({2, 3, 4}) = 8. case (y, S) objection player 1
player 5. former case, (z, {1}) z1 = x1 = 0 trivial counterobjection
(y, S); latter case, (z, {5}) z5 = x5 = 1 counterobjection (y, S).
Second, = {1, 3, 4}, y1 > x1 = 0, y3 > x3 = 3, y4 > x4 = 3,
y1 + y3 + y4 v({1, 3, 4}) = 7. case, (y, S) objection player
player 2 player 5. observed above, (z, {5}) z5 = x5 = 1
trivial counterobjection objection 5. Thus, let us assume
(y, S) objection player 2. (y, S) objection player 3 4,
may consider pair (z, {1, 2}) z1 = y1 z2 = x2 . Indeed, note
y1 < 1 holds and, thus, z1 + z2 < 1 + x2 = 2 = v({1, 2}). Therefore, z
{1, 2}-feasible, (z, {1, 2}) counterobjection (y, S). hand,
(y, S) objection player 1 player 2 x, may consider pair
(w, {2, 3, 4}) w2 = x2 , w3 = y3 , w4 = y4 . Note y3 + y4 < 7 and,
thus, w2 + w3 + w4 < x2 + 7 = 1 + 7 = v({2, 3, 4}). Then, w {2, 3, 4}-feasible,
(w, {2, 3, 4}) counterobjection (y, S).
Finally, = {1, 2}, y1 > x1 = 0, y2 > x2 = 1, y1 +y2 v({1, 2}) = 2.
case, (y, S) objection player 3, 4, 5. Let us consider
first two cases, since (z, {5}) z5 = x5 = 1 trivial counterobjection
objections 5. (y, S) objection player 1 (against player 3 4),
may consider pair (z, {2, 3, 4}) z2 = y2 , z3 = x3 , z4 = x4 . Note
y2 < 2 and, thus, z2 +z3 +z4 < 2+x3 +x4 = 2+6 = v({2, 3, 4}) = 8. Hence, (z, {2, 3, 4})
counterobjection (y, S). (y, S) objection player 2 (against player 3
4), may consider pair (w, {1, 3, 4}) w1 = y1 , w3 = x3 , w4 = x4 .
Note y1 < 1 and, thus, w1 + w3 + w4 < 1 + x3 + x4 = 1 + 6 = v({1, 3, 4}) = 7.
Hence, (w, {1, 3, 4}) counterobjection (y, S).

656

fiMixed-Integer Constrained Coalitional Games

Consider following set constraints:

x2 + x3 + x4 7
LC =
x2 , x3 , x4 R
immediate check X(G) = X(G|LC ); indeed, individual rationality
player 5 forces x5 1; given v({1, 2, 3, 4, 5}) = 8, constraint therefore
logically implied individually rational vectors VLC (N ). However, LC plays crucial
role concerning formation coalition {2, 3, 4}. Indeed, consider objection
(y, {1, 2}) player 1 player 3 x, y1 = 12 y2 = 32 . counterobjection
(z, ) (y, {1, 2}) must = {2, 3, 4}. Thus, z2 y2 = 32 , z3 x3 = 3,
z4 x4 = 3 must hold. follows z2 + z3 + z4 > 7 and, hence, z 6 VLC (T ). Since (y, S)
justified objection, x 6 B(G|LC ).
Proposition 4.14. exists constrained game G|LC (with int(LC) = )
X(G) = X(G|LC ), B(G|LC ) X(G) 6 B(G) X(G|LC ).
Proof. Consider TU game G = hN, vi N = {1, 2, 3}, v({1}) = v({2}) = 1,
v({3}) = 0, v({1, 3}) = v({2, 3}) = 4, v({1, 2}) = 5, v({1, 2, 3}) = 3. Consider
imputation x x1 = x2 = x3 = 1. observe x
/ B(G). Indeed, consider
objection (y, {1, 2}) player 1 player 3 y1 = 1 + 12 y2 = 3 + 12
(observe y({1, 2}) = v({1, 2}). Player 3 cannot counterobject either singleton,
since v({3}) < x3 , coalition {2, 3}, since vector z R{2,3}
z2 y2 > 3 z3 x1 = 1, z({2, 3}) > 4 = v({2, 3}). follows x 6 B(G).
Consider following set constraints:

x1 + x2 4
LC =
x1 , x2 R
immediate check X(G) = X(G|LC ). Moreover, let us notice player
justified objection player 1 2 x, since counterobject singletons;
indeed, observe v({i}) = 1 = xi , {1, 2}. Consider, then, objection
(y, {1, 2}) player 1 player 3, y1 x1 = 1 y2 x2 = 1. Since, must
belong VLC ({1, 2}), y2 3 holds. Thus, pair (z, {2, 3}) z2 = 3 y2
z3 = x3 = 1 counterobjection (y, {1, 2}), z({2, 3}) = 4 = v({2, 3}).
symmetry game definition, line reasoning applies show
player 2 justified objections player 3. Therefore, x B(G|LC ).
4.2.3 Nucleolus Kernel
Let us move analyze nucleolus kernel. case bargaining set,
preservation property holds, demonstrated next.
Proposition 4.15. exists constrained game G|LC (with int(LC) = )
X(G) = X(G|LC ) 6= , K (G) K (G|LC ) = , N (G) N (G|LC ) = (for Kalais excess
function Equation (2) page 640).

657

fiGreco, Malizia, Palopoli, & Scarcello

Proof. Consider TU game G = hN, vi N = {1, 2, 3}, v({1, 2, 3}) = 3,
v({1, 2}) = 5, v({1, 3}) = 4, v({2, 3}) = 3, v(S) = 0, coalition N .
Consider imputation x belongs K (G), consider expressions: s1,3 (x)
s3,1 (x) = (5 x1 x2 ) (3 x2 x3 ) = 2 x1 + x3 s1,2 (x) s2,1 (x) = (4 x1 x3 )
(3 x2 x3 ) = 1 x1 + x2 . Definition 2.5, get 2 x1 + x3 > 0 implies
x3 = 0, 2 x1 + x3 < 0 implies x1 = 0, 1 x1 + x2 > 0 implies x2 = 0,
1 x1 + x2 < 0 implies x1 = 0. simple algebraic calculations, relationships
together individual rationality x (i.e., x1 0, x2 0, x3 0) entail
x1 x2 = 1 x1 x3 = 2 must hold. turn, since x1 + x2 + x3 = 3, latter two
equations uniquely determine value x. particular, K (G) singleton {x}
x1 = 2, x2 = 1 x3 = 0. Moreover, since N (G) K (G) |N (G)| = 1 (see
Proposition 2.7), N (G) = K (G).
Consider following set constraints:

x1 + x2 3



x1 + x3 3
LC =
x + x3 3


2
x1 , x2 , x3 R

Notice constraints modify imputation set, is, X(G) =
X(G|LC ) 6= . Moreover, observe V |LC = Vv , v worth function game
G = hN, v v ({1, 2, 3}) = v ({1, 2}) = v ({1, 3}) = v ({2, 3}) = 3, v (S) = 0
coalitions N . this, excess function eK reported Equation (2) coincides canonical TU excess, definitions kernel NTU nucleolus NTU
coincide TU games (cf. Kalai, 1975). kernel nucleolus G|LC
G . Finally, easily checked K (G ) singleton {x } x1 = 1,
x2 = 1 x3 = 1 (and, thus, K (G ) = N (G )). follows K (G) K (G|LC ) =
N (G) N (G|LC ) = .
4.2.4 Shapley Value
Let us conclude analysis Shapley value. Below, show solution concept preserved whenever set pre-imputations modified constraints.
Proposition 4.16. Let G|LC constrained game. sets pre-imputations G
G|LC coincide, (G|LC ) = {(G)}.

Proof. Let pX(G) = {x RN | x(N ) = v(N )} set pre-imputations TU
G = hN, vi; fact, recall pX(G) contains efficient payoff vectors Vv (N ) = {x
RN | x(N ) v(N )}. Let pX(G|LC ) = {x Rn | x(N ) v(N )x (LC)[N ]x efficient}
set pre-imputations G|LC . Since pX(G) = pX(G|LC ), must case
(LC)[N ] Vv (N ) = {x Rn | x(N ) v(N )}. Therefore, VLC (N ) = Vv (N ) (LC)[N ] =
Vv (N ). coalition vector RS , consider vector x RN
xi = yi , S, xi = (v(N ) y(S))/|N \ S|, (N \ S). Note
x(N ) = v(N ) and, hence, x Vv (N ) x (LC)[N ]. Therefore, belongs (LC)[S].
Thus, (LC)[S] = RS and, hence, VLC (S) = Vv (S) (LC)[S] = Vv (S), N .
Finally, since VLC (N ) = Vv (N ) holds (and thus VLC (S) = Vv (S), N ),
follows (G|LC ) = {(G)} (see, e.g., McLean, 2002).
658

fiMixed-Integer Constrained Coalitional Games

However, Shapley value (G) preserved general, even (G) imputation, imputation sets affected constraints.
Proposition 4.17. exists constrained game G|LC (with int(LC) = )
(G) X(G), X(G) = X(G|LC ), (G)
/ (G|LC ).
Proof. Consider TU game G = hN, vi N = {1, 2, 3}, v({1, 2, 3}) = 3,
v({1, 2}) = 4, v({1, 3}) = 3, v({2, 3}) = 3, v(S) = 0, coalition N .
simple calculations, one may compute Shapley value (G), notice (G)1 = 7/6,
(G)2 = 7/6, (G)3 = 4/6. Thus, (G) X(G).
Consider following set constraints:

x1 + x2 3
LC =
x1 , x2 R
notice modify imputation set, is, X(G) = X(G|LC ) 6= .
Indeed, inequality x1 + x2 3 logically implied worth grand-coalition
(which forces x1 + x2 + x3 3) individual rationality players (i.e., x1 0,
x2 0, x3 0). sake completeness, note constrained game G
fit hypothesis Proposition 4.16 since pX(G) 6= pX(G|LC ) (indeed, payoff
vector x x1 + x2 > 3 x(N ) v(N ) = 3 pre-imputation G G|LC ,
x1 + x2 3 satisfied).
Moreover, observe V |LC = Vv , v worth function game G =
hN, v v ({1, 2, 3}) = v ({1, 2}) = v ({1, 3}) = v ({2, 3}) = 3, v (S) = 0
coalitions N . suffices conclude (G|LC ) = {(G )} (see, e.g., McLean,
2002). However, easily checked (G ) (G )1 = (G )2 = (G )3 = 1.
Thus, (G)
/ (G|LC ).

5. Complexity Analysis
section, shall look core bargaining set (constrained) coalitional
games computational viewpoint. particular, aim shed light impact
issuing constraints w.r.t. intrinsic complexity notions, assess whether
price paid increased expressiveness constrained gamesfor sake
completeness, background notions complexity theory reported Appendix.
argue fact sensible analyze computational properties,
corresponds analyzing feasibility using concepts thesis bounded
rationality, is, decisions taken realistic agents cannot involve unbounded resources support reasoning (Simon, 1972). Moreover, worthwhile noting studying
matters might hopefully guide design effective computation algorithms.
leave future work complexity analysis solution concepts,
would interesting consider various kinds Kalais excess functions different
computational properties.
5.1 Setup Problems Analyzed
analysis follows, assume games provided characteristic function form,
i.e., deal scenarios coalition worths returned given function (von
659

fiGreco, Malizia, Palopoli, & Scarcello

Neumann & Morgenstern, 1944). instance, games discussed Example 3.4
Example 3.5 characteristic function form. Moreover, following general
framework proposed Bilbao (2000), assume input reasoning problem
consists constrained game G|LC worth function v given oracle.
particular, shall consider two types oracles:
(1) Oracles computable polynomial time size ||G|LC || game representation.
5 instance, game Example 3.4 fits framework, well game
Example 3.5, provided cost function com(S) (of establishing communication
infrastructure agents S) comes oracle computable polynomial time.
(2) Oracles computable non-deterministic polynomial time size ||G|LC ||
game representation. instance, game Example 3.5 may fit setting
cautious perspective require that, coalition S, value
v(S) = 100 com(S) actually obtained imputation. is,
add condition element x (LC) task tj ,
player ji 6= 0 (in x), i.e., task actually
performed coalition conforming costs constraints. Here,
require course com(S) computable non-deterministic polynomial
time. Note powerful worth-functions used encode NP-complete
problems reflecting results complex algorithmic procedures, arising
allocation, scheduling routing scenarios, name few.
Let us remark framework worth function oracle computable
polynomial time encompasses settings games (implicitly) described
kind compact structures, simple calculations encodings
performed compute worth given coalitionnoticeable influential
settings type graph hypergraph games (Deng & Papadimitriou, 1994),
marginal contribution nets (Ieong & Shoham, 2005), games multi-issue domains
(Conitzer & Sandholm, 2004), weighted voting games (Elkind & Pasechnik, 2009;
Elkind, Goldberg, Goldberg, & Wooldridge, 2009). Therefore, membership results
immediately carry various classes games cited above, whereas hardness results
specific oracle setting, hold general (sub)settings.
Within setting discussed above, shall next focus checking whether given
imputation satisfies conditions needed core bargaining set. Thus,
given constrained game G|LC vector x, following problems considered:
Core-Check: x C (G|LC )?
BargainingSet-Check: x B(G|LC )?
addition, recall Section 4 core bargaining set might empty
constrained games. Thus, sensible well study following problems:
5. usual, implicitly assumed game representation includes list players, that,
every coalition S, ||S|| ||G|LC ||. Otherwise, one formally say, e.g., oracles
computable polynomial time combined size G|LC S.

660

fiMixed-Integer Constrained Coalitional Games

Problem

Constrained

Constrained
(int(LC) {xi |i N })

Constrained
(int(LC) = )

TU

Core-Check
BargainingSet-Check
Core-NonEmptiness
BargainingSet-NonEmptiness

DP -complete
P
2 -complete
P
2 -complete
P
3 -complete

co-NP-complete
P
2 -complete
P
2 -complete
P
3 -complete

co-NP-complete
P
2 -complete
P
2 -complete
P
3 -complete

co-NP-complete
P
2 -complete
co-NP-complete
trivial

Figure 2: Complexity Results Constrained Games. Hardness results hold even cohesive games worth functions given polynomial-time oracles. Membership
results hold non-deterministic polynomial-time worth-function oracles, without assumption representation real numbers.

Core-NonEmptiness: C (G|LC ) 6= ?
BargainingSet-NonEmptiness: B(G|LC ) 6= ?
Overview Results. summary results reported Figure 2. Note
four settings emerge analysis: TU games, constrained games without integer
variables (i.e., int(LC) = ), constrained games without auxiliary integer variables (i.e.,
int(LC) {xi | N }), arbitrary constrained games. fact, stress hardness
results established without use auxiliary real variables, membership results
(for constrained games) hold even variables kind actually occur. Thus, auxiliary
real variables play computational role setting constrained games.
Concerning checking problems, Figure 2 evidences Core-Check co-NPhard TU games, co-NP constrained games auxiliary integer variables
allowedas said above, bound membership result number
considered auxiliary real variables. allowing use auxiliary integer variables,
Core-Check becomes DP -hard, fact complete class. Thus, auxiliary integer
variables cause slight increase complexity solution concept. hand,
emerged occurrence real variableseither player variables auxiliary ones
integer player variables completely immaterial computational perspective.
far BargainingSet-Check concerned, deliver good news
adding constraints alter complexity w.r.t. TU case. Indeed, problem
P
P
2 -hard TU games, 2 whichever constraints considered.
Concerning non-emptiness problems, show instead constraints may radically
alter computational properties. Indeed, CoreNonEmptiness raises one level
polynomial hierarchy, co-NP absence constraints (Malizia, Palopoli, &
Scarcello, 2007) P
2 , BargainingSet-NonEmptiness trivial TU games
(since concept always non-empty there), becomes P
3 -complete constrained
games. Interestingly, cases, auxiliary integer variables play role.
Indeed, hardness results established basic case int(LC) = (and without
auxiliary variables), membership results hold arbitrary constraints.
following, hardness results shown hold simplest case
(deterministic) polynomial-time worth-function oracles. Moreover, membership results
assume a-priori bound representation size real numbers. end,
661

fiGreco, Malizia, Palopoli, & Scarcello

non-trivial technical matters faced next, show algorithms safely work
polynomially many bits, solution concept considered paper.
5.2 Hardness Results (on Cohesive Games Polynomial-Time Oracles)
section, shall establish hardness results. particular, order highlight
intrinsic difficulty associated solution concepts, constructions reported
kinds worth functions simple computational viewpoint,
given via oracles computable polynomial time, algebraic
viewpoint, induce cohesive games.
recall (TU) game cohesive
worth function v that,
P
partition players N , v(N ) SS v(S) holds (Osborne & Rubinstein, 1994)a
condition often imposed order guarantee grand-coalition actually forms. Note
earlier proofs complexity results compactly specified games (see, e.g., Deng &
Papadimitriou, 1994; Greco, Malizia, Palopoli, & Scarcello, 2009b; Ieong & Shoham, 2005)
generally exploit constructions games cohesive and, hence,
entail hardness results stated paper. fact, results interestingly show
cohesivity simplify reasoning solution concepts coalitional games.
order establish hardness results, exploit number reductions refer
Boolean formulae. Let Boolean formula, let vars() = {W1 , . . . , Wn } set
Boolean variables occurring . Recall literal either Boolean variable Wi
negation Wi . former called positive literal, latter called negative
literal. denote vars() = {Wi | Wi vars()} set negative literals
variables occurring . Literals associated game players proofs.
set players S, define (S) truth assignment Wi vars() true Wi
occurs S, false, otherwise. fact (S) satisfies denoted (S) |= .
Moreover, say coalition vars()vars() consistent w.r.t. set variables
vars() if, Wi , |{Wi , Wi } S| = 1 holds. case = vars(),
simply say consistent.
start demonstrating hardness results various membership-checking problems. first result co-NP-hardness Core-Check, established
basis rather standard arguments reported sake completeness.
particular, reader may find useful check reduction exploited proof
based games cohesive, makes different earlier complexity results
given literature specific kinds compactly specified games.
Theorem 5.1. Core-Check co-NP-hard, even cohesive TU games polynomialtime oracles input vector imputation.
Proof. Recall deciding whether Boolean formula variables X1 , . . . , Xn
satisfiable, i.e., deciding whether exists truth assignment variables
making true, co-NP-complete problem (Johnson, 1990).
Given formula , build polynomial time TU game G() = hN, vi,
N = vars() {w, e} where, set players S, v that:

1 = N,
v(S) =
1 e
/ w (S) |= ,

0 otherwise.
662

fiMixed-Integer Constrained Coalitional Games

Consider, now, vector x xe = 1 xp = 0 player p, note
x imputation. claim that: x C (G()) satisfiable.
() x C (G()) implies coalition S-feasible payoff vector
yi > xi , S. Consider coalition/assignment e
/
w S, observe x(S) = 0. Since x C (G()), must v(S) = 0,
entails (S) satisfy , definition worth function. Given
one-to-one correspondence coalitions (with e
/ w S)
truth assignments , conclude satisfiable.
() x
/ C (G()), must exist coalition N x(S) < v(S),
possible x(S) = 0 v(S) = 1. construction worth function,
follows N , e
/ S, w (S) |= . is, satisfiable.
Finally, observe role player w guarantee game cohesive.
Indeed, partition N , one set contains w, hence
may get 1 coalition worth.
considering constrained games arbitrary input vectors (i.e., necessarily
imputations), Core-Check turns slightly difficult previous
case. fact, stress use auxiliary integer variables crucial order
establish result illustrated next.
Theorem 5.2. Core-Check DP -hard, even cohesive constrained games polynomial-time oracles.
Proof. Given pair Boolean formulae (, ), deciding whether satisfiable
satisfiable prototypical DP -complete problem (Johnson, 1990). Assume, w.l.o.g.,
= c1 . . .cm , ci = ti,1 ti,2 ti,3 , {1, . . . , m}. is, conjunctive
normal form every clause contains exactly three literals. Moreover, let vars( ) =
{Y1 , . . . , } vars() = {X1 , . . . , Xn }, assume w.l.o.g. vars() vars( ) = .
Consider TU game G() = hN, vi built proof Theorem 5.1, recall
N = vars() {w, e} vector x (where xe = 1 xp = 0, player
p N p 6= e) belongs C (G()) satisfiable.
Consider following set constraints:

1 TYj 0, j {1, . . . , }



(ti,1 ) + (ti,2 ) + (ti,3 ) 1, {1, . . . , m}
LC =
x R, p N


p
TYj Z, j {1, . . . , }

(ti,h ) denotes expression 1 Tti,h ti,h negative literal, expression
Tti,h ti,h positive literal. Note players N actually constrained LC.
Therefore, (LC) = , (LC)[N ] = trivially holds (since (LC)[N ] restriction
empty set RN ). Otherwise, i.e., (LC) 6= , (LC)[N ] = RN therefore
constraints immaterial. course, (LC) = , imputation
G()|LC ; otherwise, solution concepts G() preserved G()|LC , since
constraints play role case.
663

fiGreco, Malizia, Palopoli, & Scarcello

Observe that, j {1, . . . , }, TYj constrained domain {0, 1}
encode truth value Boolean variable Yj . Clearly, LC computed
polynomial time , immediate check (LC) 6=
satisfiable. follows vector x core G()|LC x belongs
core G() (i.e., satisfiable) (LC) 6= (i.e., satisfiable).
turn study bargaining set. Notice class graph games
(which instance general framework considering here) completeness
BargainingSet-Check P
2 recently established Greco et al. (2009b).
Clearly enough, result already implies BargainingSet-Check P
2 -hard
TU games polynomial-time oracles. Below, show hardness result still
holds games polynomial-time oracles moreover cohesive.
Theorem 5.3. BargainingSet-Check P
2 -hard, even cohesive TU games
polynomial-time oracles input vector imputation.
Proof. show polynomial-time reduction problem deciding whether quantified Boolean formula H = Y1 , . . . , Yn Z1 , . . . , Zq valid, well-known P
2complete problem (Johnson, 1990). Let = {Y1 , . . . , Yn } Z = {Z1 , . . . , Zq } denote
sets universally existentially quantified variables, respectively.
Based H, build game G(H) = hN, vi, N = vars() vars() {a, }
where, set players S, v that:

2 = N,



1 |S| = n consistent w.r.t. {Y1 , . . . , Yn },
v(S) =
1 consistent, |{a, } S| = 1, (S) |= ,



0 otherwise.
Let x imputation xa = xa = 1 xp = 0, player p.
construction G(H) x defined guarantee two basic properties,
intuitively illustrated next:

(1) Recall objection (y, S) player player j x S,
j
/ S, y(S) v(S) yk > xk , k S. Since v(S) > x(S) must hold
objection (y, S), case objections one-to-one associated truth
assignments variables Y; indeed, v(S) = 1 (and x(S) = 0).
Let (Y \ S) truth assignment associated coalition S.
(2) Recall counterobjection (z, ) objection (y, S) player player j
x
/ , j , z(T ) v(T ), zk yk , k S, zk xk ,
k \ S. (y, S) objection player j
/ {a, }, (z, {j})
zj = 0 trivial counterobjection. hand, counterobjections (z, )
objections (y, S) necessarily = , z(T )
1 xa = xa = 1. particular, z(T ) = 1 must hold. Thus, counterobjections
one-to-one associated possible satisfying truth assignments
variables H, moreover obtained extensions assignment (Y \ S).

664

fiMixed-Integer Constrained Coalitional Games

Definition 2.3, x bargaining set G(H) objection
(i.e., assignment (Y \ S) variables Y), counterobjection (i.e., satisfying
assignment obtained extending (Y \ S)). Therefore, following claim holds, whose
formal proof reported Appendix:
Claim A. x B(G(H)) H valid.
conclude proof, note game cohesive. Indeed, coalition
v(S) = 1, case |S {Y1 , . . . , Yn , Y1 , . . . , Yn }| = n. Thus, given three
coalitions S1 , S2 S3 v(S1 ) = v(S2 ) = v(S3 ) = 1, must case two
overlap players. Therefore, partition N contains two
coalitions getting worth greater 0, result follows since v(N ) = 2.
remainder section prove hardness results non-emptiness problems.
start showing adding constraints game causes complexity nonemptiness problem core raise one level polynomial hierarchyfrom
co-NP absence constraints (Malizia et al., 2007) P
2 . Note proof
below, integer auxiliary variables play role.
Theorem 5.4. Core-NonEmptiness P
2 -hard, even cohesive constrained games
polynomial-time oracles, integer auxiliary variables allowed.
Proof. Deciding whether quantified Boolean formula F = X1 , . . . , Xn Y1 , . . . , Yq
valid well-known P
2 -complete problem (Johnson, 1990).
Based F , build polynomial time game G(F ) = hN, vi, N = vars()
vars() {a} where, set players S, v that:

3 n = N,
v(S) =
n
consistent (S) 6|= ,

0
otherwise.

addition, build polynomial time set LC that, 1 n, contains
following constraints:

xXi + xXi = 1




x Xi 0



xXi 0
LC =
xa = 2 n





,x R
x

Xi Xi
xa R
First, note LC forces xXi + xXi = 1, forces xa take value 2 n. Thus, since
v(N ) = 3 n, imputation x constrained game G(F )|LC distribute
worth players associated variables {Y1 , . . . , Yq }. imputation x
associated assignment (x) variables {X1 , . . . , Xn } Xi true
(x) xXi < 1note associating 1 false, here.
understand salient features reduction, recall objection (y, S)
imputation x VLC (S) yk > xk k S. Since y(S) > x(S)
holds, take care coalitions N consistent (S)
satisfying truth assignment. Recall VLC (S) = {x RS | x(S) v(S)} (LC)[S];
665

fiGreco, Malizia, Palopoli, & Scarcello

thus, objection (y, S) Xi (resp., Xi S), yXi 1 (resp.,
yXi 1). Therefore, cannot include players {X1 , X1 , ..., Xn , Xn } getting worth 1
x. follows set possible objections (y, S) imputation x corresponds
superset truth assignments (S) satisfying extensions
(x). correspondence allows us establish following result (whose formal proof
deferred Appendix).
Claim B. C (G(F )|LC ) 6= F valid.
conclude proof, notice G(F )|LC cohesive. Indeed, coalition
v(S) = n must consistent, thus |S (vars() vars())| = n + q. Therefore, given
three coalitions S1 , S2 S3 v(S1 ) = v(S2 ) = v(S3 ) = n, must case
two overlap players. follows partition N contains
two coalitions getting worth n.
non-emptiness problems bargaining set trivial TU games, since
concept always non-empty there. longer case constrained games,
problem turns quite difficult. proof Theorem 5.4, integer
auxiliary variables play role result shown below.
Theorem 5.5. BargainingSet-NonEmptiness P
3 -hard,even cohesive constrained
games polynomial-time oracles,and integer auxiliary variables allowed.
Proof. Deciding validity formula P = X1 , . . . , Xm Y1 , . . . , Yn Z1 , . . . , Zq
well-known P
3 -complete problem (Johnson, 1990).
Based P , build polynomial time game G(P ) = hN, vi, N = vars()
vars() {a, w} where, set players S, v that:


+ 1 = N


1
w |S| = n + 1




consistent w.r.t. {Y1 , . . . , Yn },

v(S) =
1
= {Xi , Xi },


1
\ {a} consistent





(S) |= ,


0
otherwise.
build polynomial time set LC that, 1 m, contains following
constraints:

xXi + xXi = 1




x Xi 0



xXi 0
xa = 1




xXi , xXi R

xa R

First, observe that, constraints fact v(N ) =
m+1, imputation game players Yj , 1 j n, players Zr , 1 r q,
get payoff 0. Moreover, imputation x index i, 1 m,
xXi > 0 xXi > 0 cannot belong bargaining set G(P )|LC , objection
666

fiMixed-Integer Constrained Coalitional Games

1
(y, {w, Y1 , ..., Yn }) player yYj = n+1
justified. Indeed, (z, )
counterobjection , would za xa = 1 (indeed, xa = 1 prescribed
LC). Moreover, definition worth function, would
\ {a} consistent, i.e., {1..., m}, |T {Xi , Xi }| = 1. Assume Xi
(the line reasoning applies Xi ). Then, zXi xXi > 0 must hold
would z(T ) > 1, impossible since v(T ) 1 since v(T ) z(T ) holds
counterobjection. Thus, set imputations x might possibly belong
bargaining set restricted variables xXi xXi take distinct values
set {0, 1}. result, associate imputation x constrained game
G(P )|LC assignment (x) variables {X1 , . . . , Xm } Xi true
(x) xXi = 0. Note associating 0 true here.
fact, order show correctness reduction, may basically follow
spirit proof Theorem 5.4. imputation x (with properties illustrated
above), set possible objections (y, S) corresponds set possible truth
assignments (Y \ S) variables = {Y1 , ..., Yn }. Objections might
possibly justified restricted player a, counterobjections
correspond satisfying assignments extending (x) (Y \ S). Thus, following
shown, whose detailed proof reported Appendix.

Claim C. B(G(P )|LC ) 6= P valid.
Finally, note game cohesive. Indeed, consider partition players
N , coalition v(S) = 1. case consistent
w.r.t. vars(), cannot exist coalition v(S ) = 1
= {Xi , Xi } i. addition, exist one coalition
SP
v(S ) = 1 (for |S | = n + 1, w , consistent w.r.t. {Y1 , . . . , Yn }).
Thus, SS v(S) 2. Similarly,
P coalition
consistent w.r.t. vars(), SS v(S) + 1. Indeed, might contain coalitions
{X1 , X1 }, . . . , {Xm , Xm }, plus one coalition consistent w.r.t. {Y1 , . . . , Yn }
gets worth 1. particular, cannot contain two coalitions consistent
w.r.t. {Y1 , . . . , Yn } v(S ) = v(S ) = 1, w contained both.
5.3 Membership Results
complete picture complexity arising context constrained games
proving membership results that, together proofs previous section, provide
completeness results reported Figure 2. particular, shall consider case
worth function v oracle computed deterministic polynomial time
size ||G|LC || constrained game, deferring discussion
results extended case v oracle computable non-deterministic
polynomial time Section 5.3.1.
start analysis stating complexity checking whether vector
imputation.
Lemma 5.6. Deciding whether vector imputation DP constrained games.
particular, problem co-NP constrained games without auxiliary integer
variables, P constrained games without integer variables.
667

fiGreco, Malizia, Palopoli, & Scarcello

Proof. Let G = hN, vi TU game let LC set constraints. Let x vector
assigning payoff value player N . Recall x imputation X(G|LC )
if: (1) x VLC (N ) = {x RN | x(N ) v(N )} (LC)[N ]; (2) x efficient; (3) x
individually rational.
(1) Checking whether x(N ) v(N ) feasible polynomial time. Moreover, checking
whether x (LC)[N ] feasible NP. Indeed, consider set linear
inequalities LC derived LC replacing player variables values according x. Note LC mixed integer linear program defined variables
(if any) real (LC) int(LC) \ {xi | N }, x (LC)[N ] LC
satisfiable. well-known results mixed integer linear programming (see, e.g.,
Nemhauser & Wolsey, 1988), LC admits solution admits solution
represented polynomially many bits (in size LC ). Thus,
problem solved first guessing NP vector x assigning value
variable real (LC) int(LC) \ {xi | N }, subsequently checking whether x
satisfies constraints LC (which feasible polynomial time). course,
int(LC) {xi | N }, LC linear program without integer variables.
special case, satisfiability LC checked P (see, e.g., Papadimitriou &
Steiglitz, 1998).
(2) Recall x efficient x VLC (N ), player N
xi xi . Consider set linear inequalities LC derived LC adding
|N | + 1 inequalities: x(N ) v(N ), xi > xi N . Then, x efficient
LC satisfiable. latter task feasible co-NP, since LC
mixed integer linear program whose satisfiability checked NPsee (1).
special case int(LC) = , LC contain integer variables and, hence,
(un)satisfiability checked polynomial time.
(3) Recall x individually rational player N , xi max{ xi | xi
VLC ({i}) }. Consider set linear inequalities LC
derived LC adding
two inequalities xi v({i}) xi > xi . individual rationality holds
LC
satisfiable, N . point (2) above, task feasible
co-NP general, polynomial time whenever int(LC) = .
conclude deciding whether x imputation conjunction
problem (1), feasible NP, problems (2) (3), feasible
co-NP. Thus, problem DP .
case int(LC) {xi | N } holds, (1) feasible polynomial time and,
hence, deciding whether x imputation co-NP.
Finally, int(LC) = , problems (1), (2), (3) feasible polynomial time.
Let us consider membership Core-Check. proof routine
reported sake completeness only.
Theorem 5.7. Core-Check DP . particular, co-NP constrained
games without auxiliary integer variables.

668

fiMixed-Integer Constrained Coalitional Games

Proof. Let x input vector game G|LC , G = hN, vi. check
x satisfies conditions core x indeed imputation.
Concerning former task, recall complementary problem deciding whether
x core amounts finding coalition vector x VLC (S)
xi > xi , S. Consider set linear inequalities LCS derived LC adding
|S| + 1 inequalities x(S) v(S), xi > xi S. Then, x core
coalition LCS satisfiable. task therefore solved guessing
NP coalition together vector x assigning value variable LCS ,
subsequently checking x indeed satisfy constraints LCS . follows
deciding whether x satisfies conditions core feasible co-NP.
Concerning task checking whether x imputation, use results
Lemma 5.6. Thus, general games, Core-Check solved conjunction
problem co-NP problem DP . course, problem feasible DP .
Moreover, int(LC) {xi | N } holds, Core-Check feasible co-NP.
Deriving membership result BargainingSet-Check constrained games requires sophisticated line reasoning. start recalling that, TU games,
shown BargainingSet-Check P
2 (Greco et al., 2009b). fact,
result established exploiting characterization bargaining set
hold presence constraints. Below, exploiting completely different
proof technique, shall show that, surprisingly, presence constraints
alter computational properties problem.
following proofs, recall given set LC linear (in)equalities n
real variables, set (LC) polyhedron Rn , whose faces given halfspaces
associated (in)equalities LC, whose vertices given intersection n
inequalities LC, hence represented polynomially many bits size
LC (see, e.g., Papadimitriou & Steiglitz, 1998; Nemhauser & Wolsey, 1988). bounded
polyhedron called polytope. Moreover, use following notation. Let N
set players let yS set variables {yk | k S}. denote LCyS copy
system mixed-integer linear inequalities LC every player variable xi ,
S, renamed yi , every variable v LC renamed vyS .
Lemma 5.8. Let G = hN, vi TU game, LC set constraints, x
imputation G|LC belong B(G|LC ). Then, exists justified objection
x representable polynomially many bits.
/ S,
Proof. Since x
/ B(G|LC ), two players j, coalition j
S-feasible vector (y, S) justified objection j x. Let
LCi,j,S system consisting (in)equalities LCyS plus |S| + 1 inequalities:
y(S) v(S) yk > xk , k S. Then, set (LCi,j,S )[yS ] consists S-feasible
vectors (y, S) objection j x.
Let us consider possible candidate counterobjections. N j

/ , let LCi,j,S,T system including (in)equalities LCyS LCzT , plus
inequalities y(S) v(S), yk > xk , k S, z(T ) v(T ), zk yk , k S,
zk xk , k \ S. Note (LCi,j,S,T )[yS ] contains vectors index set
exists counterobjection , hence form (z, ),
669

fiGreco, Malizia, Palopoli, & Scarcello

Figure 3: Illustration Claim D, coalitions T1 , T2 , T3 .
objection (y, S) j x. follows set vectors (y, S)
justified objection j x set:
[
(LCi,j,S )[yS ] \
(LCi,j,S,T )[yS ].
|iT
/ jT

conclude proof claim following.

i,j,S,T )[y ] contains point (i.e., justified obClaim D. (LCi,j,S )[yS ] \ |iT

/ jT (LC
jection x) represented polynomially many bits.
prove claim, let us consider following geometrical arguments: Consider first
case LCi,j,S LCi,j,S,T (for |
/ j ST ) contain integer variables,
i,j,S,T )[y ].
let P maximal convex subset (LCi,j,S )[yS ] \ |iT

/ jT (LC

vertices P , points R , given intersection |S| (independent) halfspaces facets (LCi,j,S )[yS ] (LCi,j,S,T )[yS ], thus
represented polynomially many bits. fact, P might contain
boundaries. Thus, vertices actually belongs P , result straightforwardly holds. hand, P possibly open segment endpoints b
(representable polynomially many bits), middle point ym necessarily belongs
P (since P convex) represented polynomially many bits. Finally,
polytope P two vertices (as shown Figure 3), must
least three vertices , b , c belong face P . Therefore,
barycenter triangle vertices , b , c belongs P ,
represented polynomially many bits, case , b , c .
670

fiMixed-Integer Constrained Coalitional Games

conclude proof, observe integer variables LCi,j,S LCi,j,S,T (for
|
/ j ) easily preprocessed. Roughlythe technical details
reported Appendix, since (LCi,j,S )[yS ] polytope construction LCi,j,S
since, therefore, vertices represented polynomially many bits, integer
components interest (basically falling within (LCi,j,S )[yS ]) represented
polynomially many bits, well. Thus, find point polynomially many bits
asked Claim D, iterate possible combinations
integer values

i,j,S
i,j,S,T )[y ]
and, step, evaluate expression (LC
)[yS ] \ |iT

/ jT (LC
replacing integer values combination values hand. course, resulting
expression involve integer variables, inequalities still representable
polynomially many bits, therefore line reasoning applies.
Armed lemma, state complexity BargainingSet-Check.
Theorem 5.9. BargainingSet-Check P
2.
Proof. show complementary problem deciding whether vector x
bargaining set given constrained game G|LC P
2 . start checking whether
x imputation DP (cf. Lemma 5.6)recall DP contained P
2 .
case, Lemma 5.8 guess non-deterministic polynomial time justified objection
x, is, coalition S, two players j
/ S, vector (y, S)
objection j x. Consider system LC (in)equalities obtained
LCi,j,S (recall definition proof Lemma 5.8) replacing player variables
associated coalition respective values y. course, (y, S) objection
LC satisfiable. well-known results mixed integer linear programming
(see, e.g., Nemhauser & Wolsey, 1988), LC admits solution admits
solution represented polynomially many bits. Therefore, within
non-deterministic step, guess assignment (call w ) variables
LC , check polynomial time w actually satisfies constraints (i.e.,
actually objection).
conclude algorithm solving BargainingSet-Check, check
counterobjection (z, ) objection (y, S) j x. task
requires co-NP oracle call. particular, oracle works checking complementary
condition NP. end, non-deterministic step, first guesses coalition
j
/ . Consider system LC including (in)equalities LCzT , plus
inequalities z(T ) v(T ), zk yk , k S, zk xk , k \ S. Then,
counterobjection (z, ) (y, S) vector z LC satisfiable.
case above, solution LC guaranteed exist represented
polynomially many bits, solution (call w ) guessed within
non-deterministic step oracle. fact, check w actually satisfies LC
trivially feasible polynomial time.
turn analyze non-emptiness problems. start non-emptiness
core, co-NP-complete problem TU games (Malizia et al., 2007).
Constraints play role here, since shown Core-NonEmptiness P
2hard (cf. Theorem 5.4). Below, confirm exact complexity problem.

671

fiGreco, Malizia, Palopoli, & Scarcello

Theorem 5.10. Core-NonEmptiness P
2.
Proof. Let us adopt notation used proof Lemma 5.8. Let N
coalition, LCS set mixed-integer linear (in)equalities including (in)equalities
LCxN LCyS , plus inequalities y(S) v(S) yi > xi , S. get:
[
C (G|LC ) = X(G|LC ) \
(LCS )[xN ].
SN

Let LCX set (in)equalities LCxN plus inequality x(N ) v(N ). Moreover,
player i, let LCi set (in)equalities LCxN LCy , plus inequalities
{i}

x(N ) v(N ) xi < yi v({i}). Then, set (LCi )[xN ] consists vectors
individually rational (w.r.t. player i). Thus,

C (G|LC ) =

X

(LC )[xN ] \

[



!

(LC )[xN ]



\

[

(LCS )[xN ].

SN

particular, note efficiency condition imputations guaranteed. Indeed,
points efficient removed, belong set (LCN )[xN ],
considered = N .
applying line reasoning Claim (in Lemma 5.8)
expressions, that, C (G|LC ) empty, contains imputation
representable polynomially many bits. Thus, decide non-emptiness
core first guessing NP vector x. Then, may call DP oracle (corresponding
invocation NP co-NP oracle) check x imputation (cf.
Lemma 5.6), finally verify x core call co-NP
oracle. particular, latter oracle works checking complementary condition
NP, i.e., checks whether x core. end, oracle guesses nondeterministic step coalition S. Consider system LC formed (in)equalities
LCyS plus |S| + 1 inequalities: y(S) v(S) yk > xk , k S. Then,
objection (y, S) x vector LC satisfiable. Again, LC admits
solution admits solution represented polynomially many
bits. Therefore, within non-deterministic step, guess assignment
(call w ) variables LC , check polynomial time w actually
satisfies constraints.
Now, complete picture bargaining set.
Theorem 5.11. BargainingSet-NonEmptiness P
3.
Proof. Consider setting proof Lemma 5.8. Let j two players
N . coalition j 6 S, let LCi,j,S system consisting
(in)equalities LCxN LCyS plus |S| + 1 inequalities: y(S) v(S) yk > xk ,
k S. Moreover, pair sets players \ j \ S,
let LCi,j,S,T system mixed integer inequalities including inequalities
systems LCxN , LCyS , LCzT , plus inequalities y(S) v(S), yk > xk k S,
672

fiMixed-Integer Constrained Coalitional Games

z(T ) v(T ), zk yk k S, zk xk k \ S. is,
proceed way proof Lemma 5.8, components vector
x variables linear program, previous lemma fixed values.
Observe (LCi,j,S,T )[xN yS ] contains pairs hx, yi exists
counterobjection (z, ) objection (y, S) j x, (LCi,j,S )[xN yS ]
consists pairs hx, yi S-feasible vector j 6
(y, S) objection x. Then, set
[
(i, j, S) = (LCi,j,S )[xN yS ] \
(LCi,j,S,T )[xN yS ]
|iT
/ jT

set pairs hx, yi (y, S) justified objection j x.
Therefore,
[
B(G|LC ) = X(G|LC ) \
(i, j, S)[xN ],
SN iSj
/

where, considering efficiency individual rationality (see notation proof
Theorem 5.10),
[
(LCi )[xN ].
X(G|LC ) = (LCX )[xN ] \ (LCN )[xN ] \


slightly adapting proof Claim (in Lemma 5.8), one may show
bargaining set empty, exists vector x B(G|LC ) represented
polynomially many bits. Therefore, BargainingSet-NonEmptiness solved
first guessing non-deterministic polynomial time vector x. Then, may call
DP oracle check x imputation (cf. Lemma 5.6), finally verify
x indeed bargaining set call P
2 oracle, order solve
BargainingSet-Check input x (cf. Theorem 5.9).
5.3.1 Extension General Worth Functions
membership results above, assumed worth functions polynomial-time computable and, within setting, shown various hardness results
indeed tight. Thus, reader might inclined believe that, considering
powerful worth functions, complexity problems may consistently increase. Surprisingly, case. Indeed, show nothing paid
powerful worth functions encode NP-complete problems considered.
end, let vG|LC denote worth function game G|LC , define worthfunction graph class C constrained games set tuples WC = {h(G|LC , S), wi |
G|LC C vG|LC (S) = w}. Recall, e.g., work Johnson (1990),
function computable non-deterministic polynomial time integer k
WC (i) k-balanced, i.e., ||w|| (||G|LC || + ||S||)k , (ii) k-decidable, i.e.,
non-deterministic Turing machine decides whether given tuple belongs WC
O(||t||k ) time. precisely, since vG|LC partial (standard) single-valued function
(multi-valued functions considered literature), class functions
consider called NPSV (see, e.g., Selman, 1994).
673

fiGreco, Malizia, Palopoli, & Scarcello

complexity various solution concepts TU games within setting worth
functions given oracles computable NPSV analyzed extended
version work Greco et al. (2009b). There, emerged membership
results Figure 2 hold class C games worth functions. roughly,
basic observation consider NPSV worth-functions, non-deterministic
algorithm guesses polynomial-time coalition game G|LC C,
time (with polynomial-time delay) guess worth w additional
string c (of polynomial size w.r.t. ||G|LC || + ||S||), acts certificate decide
whether tuple h(G|LC , S), wi belongs NP set WC . Thus, complexity
(non-deterministic) algorithm uses value vG|LC (S) guess coalition
affected replacing polynomial-time worth-functions NPSV worth-functions.
exploiting line reasoning, easy adapt proofs membership results order
deal general worth functions.
Theorem 5.12. membership results Figure 2 hold class C games whose
worth functions NPSV.

6. Discussion Conclusion
Imposing linear constraints outcomes games approach explored
several authors context non-cooperative strategic games (e.g., Charnes, 1953;
Semple, 1997; Ryan, 1998). However, context cooperative games approach
received considerably less attention and, indeed, general framework proposed
literature analysis properties conducted far.
paper, faced issue conducting systematic study constrained
games within framework constraints defined mixed-integer linear (in)equalities imposed underlying TU game. Seemingly close class constrained
games class linear programming games (see, e.g., Owen, 1975), worth
v(S) coalition implicitly given linear program (e.g., maximum
given objective function feasible region (LC) defined terms set linear
(in)equalities LC). course, approach differs setting constrained games
role LC is, instead, govern distribution worths within NTU
perspective. Moreover, differently classical NTU formalizations, constrained games
allow define non-convex non-comprehensive sets worth distributions,
appealing modeling capability emerged useful several application domains.
Finally, resulting game framework analyzed respect preservation
computational properties relevant solution concepts.
worthwhile noticing framework discussed paper shares
spirit recent arguments Shoham (2008), advocated use broader vocabulary fairly terse one characterizing early foundations game theory.
relevant proposals reconsidered basic concepts cooperative games
light modeling perspective closer requirements computer science applications: seminal influential directions type give rise, particular, coalitional
skill games (Bachrach & Rosenschein, 2008), qualitative coalitional games (Wooldridge &
Dunne, 2004), coalitional resource games (Wooldridge & Dunne, 2006), Bayesian coalitional
games (Ieong & Shoham, 2008), multi-attribute coalitional games (Ieong & Shoham, 2006),
674

fiMixed-Integer Constrained Coalitional Games

temporal qualitative coalitional games (Agotnes, van der Hoek, & Wooldridge, 2006),
cooperative Boolean games (Dunne, van der Hoek, Kraus, & Wooldridge, 2008).
light approaches, interesting avenue research may consider
expressive kinds constraints, formulated instance via logic-based languages,
preference criteria adopted place hard constraints.
avenues research related technical questions explored
paper. First, complexity analysis focused notions core
bargaining set, founded concepts objections counterobjections.
course, would interesting complement results analysis kernel,
nucleolus, Shapely value. Actually, hardness results kernel nucleolus
TU (graphical) games recently illustrated Greco et al. (2009b), indeed
trivially provide lower bounds complexity solution concepts
setting constrained games. However, providing tighter computational bounds requires
deeper understanding computational aspects underlying Kalais axiomatization,
outside scope paper. Furthermore, Shapley value, interest
study extensions provided literature NTU games
assess behavior applied constrained games.
Moreover, hardness results shown hold even restricting underlying TU games use cohesive worth functions only. might interest study
complexity different specific kinds functions considered (for instance, monotone,
superadditive, weakly superadditive, convex ones6 ). Similarly, assessing extent
considering specific kinds worth functions affects analytical properties studied
Section 4 interesting question leave research.
Finally, modeling viewpoint, recall framework proposed paper
exploits one set linear (in)equalities constrain outcomes coalitions. Thus,
light adding modeling power framework, might interest study natural generalization coalition equipped specific set linear (in)equalities.
particular, setting would call conceiving suitable mechanisms compactly represent (exponentially many) different sets constraints, defining formal measures
expressivity compact representations constraint-based NTU games.
Acknowledgments
coalitional game framework dealing linear constraints imposed TU games
first illustrated authors extended abstract published proceedings
8th International Conference Autonomous Agents Multiagent Systems (Greco,
Malizia, Palopoli, & Scarcello, 2009a). There, solution concepts defined
studied, based proposing ad-hoc adaptations solution concepts
TU games. Following suggestions anonymous referees, constrained game
framework proposed present paper fits instead framework NTU games,
general form. Thus, solution concepts studied paper given
suitable specializations standard solution concepts defined NTU games.
6. worth function v : 2N 7 R monotone v(S) v(T ) holds, pair coalitions S, N
; v superadditive v(S ) v(S) + v(T ) holds, pair coalitions S, N
= ; v weakly superadditive v(S {i}) v(S) + v({i}), N N \ S; v
convex v(S ) + v(S ) v(S) + v(T ), S, N (see, e.g., Peleg & Sudholter, 2007).

675

fiGreco, Malizia, Palopoli, & Scarcello

Appendix A. Computational Complexity
appendix recall basic definitions complexity theory, referring
reader work Johnson (1990) topic.
A.1 Complexity Decision Problems: P, NP, co-NP
Decision problems maps strings (encoding input instance fixed alphabet,
e.g., binary alphabet {0, 1}) set {yes, no}. class P set decision
problems solved deterministic Turing machine polynomial time
respect input size, is, respect length string encodes
input instance. given input x, size usually denoted ||x||.
Throughout paper, often refer computations carried non-deterministic
Turing machines, too. Recall Turing machines that, points
computation, may one single next action perform, choice several
possible next actions. non-deterministic Turing machine answers decision problem
given input x: (i ) least one sequence choices leading halt
accepting state x yes instance; (ii ) possible sequences choices lead
rejecting state x instance.
class decision problems solved non-deterministic Turing machines
polynomial time denoted NP. Problems NP enjoy remarkable property:
yes instance x certificate yes instance, polynomial length
checked polynomial time (in size ||x||). example, problem
deciding whether Boolean formula variables X1 , . . . , Xn satisfiable, i.e.,
deciding whether exists truth assignment variables making true,
well-known problem NP; fact, satisfying truth assignment obviously
certificate yes instance, i.e., satisfiable.
class problems whose complementary problems NP denoted co-NP.
example, problem deciding whether Boolean formula satisfiable
co-NP. course, class P contained NP co-NP.
class DP class problems defined conjunction two
problems, one NP one co-NP, respectively. instance, DP
decide whether, given pair Boolean formulae (, ), satisfiable not.
A.2 Complexity Classes: Polynomial Hierarchy
Throughout paper, refer particular type computation called computation
oracles. Intuitively, oracles subroutines unary cost.
P
P
classes P
k , k , k , forming polynomial hierarchy, defined follows:
P
P
P
P
k1 , P = Pk1 , P = co-P
P
0 = 0 = P k 1, k = NP
k
k
k
co-P
denotes

class

problems
whose
complementary
problem

solvable
P
k
k.
P
P
Here, k (resp., k ) models computability non-deterministic (resp., deterministic)
P
polynomial-time Turing machine may use oracle P
k1 . Note 1 coincides
NP, P
1 coincides co-NP.
well-known problem k-th level polynomial hierarchy deciding
validity quantified Boolean formula k quantifier alternations. quantified Boolean
676

fiMixed-Integer Constrained Coalitional Games

formula (short: QBF) k quantifier alternations form Q1 X1 Q2 X2 ...Qk Xk ,
k 1, Xi (1 k) set variables, Qi {, } (1
Sk k), Qi 6= Qi+1
(1 < k), Boolean formula variables i=1 Xi . set
quantified Boolean formulae k quantifier alternations Q1 = (resp., Q1 = )
denoted QBFk, (resp., QBFk, ). Deciding validity quantified Boolean formula
P
QBFk, (resp., QBFk, ) well-known problem P
k (resp., k ). Note
k = 1, problem coincides problem deciding whether Boolean formula
satisfiable (resp., satisfiable), indeed NP (resp., co-NP).
A.3 Reductions Among Decision Problems
decision problem A1 polynomially reducible decision problem A2 , denoted
A1 p A2 , polynomial time computable function h that, every x, h(x)
defined x yes instance A1 h(x) yes instance A2 .
decision problem complete class C polynomial hierarchy (beyond P)
belongs C every problem C polynomially reducible A. Thus, problems
complete class C difficult problems C.
worthwhile observing problems discussed section known
complete classes membership pointed out. particular,
deciding validity QBFk, (resp., QBFk, ) formula prototypical P
k -complete
(resp., P
-complete)
problem.
k

Appendix B. Proofs Section 3
Proposition 3.2 Let G = hN, vi TU game let X X(G) arbitrary finite
set imputations. Then, finite set constraints LC X(G|LC ) = X .
Proof. Consider game G = hN, vi, set X = {x1 , . . . , xk } imputations G,
set constraints:

xi = x1i 1 + + xki k , 1 |N |




0 yj 1, 1 j k
LC =
y1 + + yk = 1


x , . . . , xn R


11
, . . . , yk Z
x1i , . . . , xki (for 1 |N |) constants.
immediate check VLC (N ) = X . Moreover, observe vector
xj VLC (N ) (1 j k) efficient, since cannot dominated vector
X (just notice X set imputations G). Finally, notice imputation
x X individually rational w.r.t. G. Thus, Proposition 3.7, x individually rational
w.r.t. constrained game too. follows VLC (N ) = X(G|LC ).
Proposition 3.3 exists class C = {G|nLC }n>0 constrained games
game G|nLC n + 1 players, LC consists 2 n + 1 inequalities, |X(G|LC )| = 2n .

677

fiGreco, Malizia, Palopoli, & Scarcello

Proof. Consider class C = {G|nLC }n>0 game G n = hN, vi N =
{1, . . . , n, n + 1}, v(N ) = n, v(S)
Pn= 0, coalition N , LC = {0n xi n1, xi
Z, 1 n} {xn+1 n i=1 xi }. easily checked |X(G|LC )| = 2 .

Proposition 3.7 Let G = hN, vi TU game let x payoff vector individually rational w.r.t. G (i.e., xi v({i}), player N ). Then, set LC
constraints, x individually rational w.r.t. constrained game G|LC .
Proof. Let x payoff vector xi v({i}), player N . Consider
constrained game G|LC player N . VLC ({i}) = Vv ({i}) (LC)[{i}] = ,
trivially xi > . Otherwise, i.e., VLC ({i}) 6= , notice
max{ yi | yi VLC ({i}) } v({i}). Thus, xi max{ yi | yi VLC ({i}) }.

Appendix C. Proofs Claims Section 5
Claim A. x B(G(H)) H valid.
Proof. Let us study structure possible objection x. Recall (y, S)
objection player player j x if: S, j
/ S, y(S) v(S)
yk > xk , k S. Thus, observe v(S) = 1 must hold, order improve
payoffs members, worth value equal 2 obtained
grand-coalition. addition, since xa = xa = 1 since y(S) v(S) = 1, must
case {a, } = , players get 1 current imputation x. Due
definition worth function, entails consistent variables Y,
i.e., set n players corresponding literals universally quantified variables.
thus associate possible objection (y, S) x (where y(S) 1 yk > 0,
k S) truth-value assignment variables that, 1 n, Yi assigned
false Yi (and true Yi S). According notation, means
objection associated truth-value assignment (Y \ S). define
converse, well. truth-value assignment universally quantified variables,
associated objection pair (y, S) = {Yk | (Yk ) = false} {Yk |
1
Yk Y, (Yk ) = true}, yp = |S|
, p S. Note (y, S) objection

player player x, (Y \ S) = .
Indeed, (y, S) objection player j
/ {a, }, (z, {j}) zj = 0
trivial counterobjection, since v({j}) = xj = 0 j
/ S. follows set
objections possibly justified restricted player player
. Next, consider case objection a, exactly arguments
hold objections . Let (y, S) objection player x.
counterobjection (z, ) must (and
/ ). Thus, order
za xa = 1, must case v(T ) 1 and, actually, v(T ) = 1, due
definition worth function. particular, latter (with fact za = 1) entails
that, player p 6= p , holds zp = 0. Thus, must empty,
members get something according y, \{a} consistent, (T ) |= .
particular, since = , according satisfying assignment, Yi true (T )
Yi
/ S. follows (T ) coincides (Y \ S) universally
quantified variables, thus fact extension truth-value assignment
678

fiMixed-Integer Constrained Coalitional Games

set variables occurring formula . Conversely, note every satisfying
assignment extends (Y \ S) corresponds counterobjection (y, S).
Given observations, show claim: x B(G(H)) H valid.
() Assume x B(G(H)). Let truth-value assignment universally
quantified variables, let (y, S) objection x associated .
particular, (Y \ S) = , construction. Since x B(G(H)), exists valid
counterobjection (z, ) (y, S), seen corresponding truthvalue assignment (T ) extension (Y \ S) set variables vars(),
(T ) |= . follows H valid.
() Assume x
/ B(G(H)). Then, justified objection (y, S) (or
) x. follows discussion truth-value assignment
able extend assignment (Y \ S) variables vars(),
satisfy . Indeed, extension would associated counterobjection
(y, S). follows H valid.
Claim B. C (G(F )|LC ) 6= F valid.
Proof.
() Assume x C (G(F )|LC ), i.e., N , S-feasible payoff vector
yi > xi S. claim (x) truth assignment
variables {X1 , . . . , Xn } witnessing validity F . Indeed, assume, sake
contradiction, truth assignment variables {Y1 , . . . , Yq }
(x) 6|= . Consider coalition consistent
(S) = (x) . definition worth function, v(S) = n. Moreover, observe
x(S) < n holds, definition assignment (x) given xYj = 0
xYj = 0, imputation x variable Yj (1 j q). Note, fact,
Xi Xi true (x) xXi < 1, Xi Xi false
miniS (1xi )
(x) xXi = 0 (because case xXi = 1 holds). Now, let =
n+q
notice > 0, since xi < 1 is, particular, prescribed definition
(x). Consider vector RS yi = xi + S. Note
y(S) n |S| = n + q; moreover, VLC (S) holds v(S) = n
constraints satisfied (just notice contains exactly one player
{Xi , Xi }, variable Xi , associated payoff less equal
1 constraints xXi + xXi = 1 play role
one player Xi Xi hence given variable yXi (resp., yXi ) yXi 1
(resp., yXi 1) always exists non negative value yXi (resp., yXi )
yXi + yXi = 1). Since yi > xi , S, conclude x
/ C (G(F )|LC ),
impossible.
() Assume truth assignment variables {X1 , . . . , Xn } witnessing
validity F , let x imputation (x) coincides ,
particular xXi = 1 (resp., xXi = 0) Xi false (resp., true) . claim
x C (G(F )|LC ). Indeed, assume sake contradiction,
coalition S-feasible payoff vector yi > xi S. Since
679

fiGreco, Malizia, Palopoli, & Scarcello

v(S) y(S) > x(S) since x(S) 0, given definition worth function,
actually case consistent (and, thus, (S) truth assignment)
(S) satisfying. particular, recall VLC (S) = {x RS | x(S)
v(S)} (LC)[S]; thus, player Xi (resp., Xi S), yXi 1 (resp.,
yXi 1). Therefore, cannot include player {X1 , X1 , ..., Xn , Xn } getting
worth 1 x. follows (S) extension (x), moreover
satisfying. Thus, (x) would witness validity F , impossible.
Claim C. B(G(P )|LC ) 6= P valid.
Proof. Consider imputation x xa = 1, xXi xXi take distinct values
set {0, 1}, variable Xi {X1 , ..., Xm }. objection (y, S) x must
v(S) = 1 (which indeed maximum available worth coalition
N ) player xi = 1. follows objections necessarily
form (y, S) w S, |S| = n+1, consistent w.r.t. {Y1 , . . . , Yn }. words,
objection (y, S) x contains w plus one universal player per universally
quantified variable, thus uniquely associated truth-value assignment
universally quantified variables = {Y1 , . . . , Yn }. Let (Y \ S) denote assignment,
set Yj = true Yj
/ S, 1 j n. define converse:
given truth value assignment universally quantified variables, associated
objection pair (y, S) = {Yj | (Yj ) = false}{Yj | (Yj ) = true}{w},
1
, every k S.
yk = |S|
Now, (y, S) objection player j
/ {a, X1 , . . . , Xm , X1 , . . . , Xm },
(z, {j}) zj = 0 trivial counterobjection. Indeed, player j belong
may either element {Y1 , . . . , Yn } element {Z1 , . . . , Zq }. either
cases, v({j}) = xj = 0. hand, (y, S) objection player Xi (or,
Xi ), (z, {Xi , Xi }) zXi = xXi zXi = xXi counterobjection,
v({Xi , Xi }) = z({Xi , Xi }) = 1 {Xi , Xi } = . follows set objections
possibly justified restricted objections player a. Let (y, S)
objection player x. counterobjection (z, ) must
. Thus, order za xa = 1, must case v(T ) 1 and, actually,
v(T ) = 1, due definition worth function. particular, latter entails
player p 6= p , holds zp = 0. Thus, must empty
and, particular, possibility \ {a} consistent, (T ) |= . Finally,
since = x(p) = 0 p p 6= a, (T ) satisfying
assignment where: Xi true (T ) Xi true (x); Yi true
(T ) Yi
/ S, thus Yi true (Y \ S). is, (T ) complete
assignment extends partial assignments (x) (Y \ S).
exploiting observations, prove claim.
() Assume exists x B(G(P )|LC ). seen imputation x
associated truth-value assignment (x) variables {X1 , . . . , Xm }
recall imputation x index i, 1 m, xXi > 0
xXi > 0 cannot belong bargaining set G(P )|LC . Moreover, seen
every assignment universally quantified variables corresponds
680

fiMixed-Integer Constrained Coalitional Games

possible objection (y, S) x, since x belongs bargaining set must
exist valid counterobjection (z, ) (y, S) associated satisfying truth-value
assignment extends partial assignments (x) . means
x witness validity P .
() P valid assignment X variables {X1 , . . . , Xm }
witnesses validity. Consider imputation x that, 1 m, xXi = 0
xXi = 1 X (Xi ) = true, xXi = 1 xXi = 0 otherwise. Moreover,
xa = 1 players get 0. Since, every extension X universally
quantified variables (corresponding possible objection (y, S) x), exists
extension variables satisfies (corresponding counterobjection
(y, S)), follows x B(G(P )|LC ).

i,j,S,T )[y ] contains point (i.e., justified obClaim D. (LCi,j,S )[yS ] \ |iT

/ jT (LC
jection x) represented polynomially many bits.
Proof. case (LCi,j,S )[yS ] (LCi,j,S,T )[yS ] (for |
/ j )
contain integer variables already addressed proof Lemma 5.8. next
show preprocess integer variables, occur programs hand.
Recall first (LCi,j,S )[yS ] bounded, since LCi,j,S contains |S| + 1 inequalities:
y(S) v(S) yk > xk , k S. implies assume, w.l.o.g., (LCi,j,S )
bounded turn. Indeed, standard arguments linear programming follows
point (LCi,j,S )[yS ] obtained projection point (LCi,j,S ) whose
auxiliary components (i.e., associated variables yS ) bounded
polynomial size LCi,j,S . Thus, bound made explicit definition
LCi,j,S , without altering projection (LCi,j,S )[yS ].
Second, observe assume, w.l.o.g, (LCi,j,S,T ) bounded too,

/ j . Indeed, definition LCi,j,S,T , may constrain
variable yS range within minimum maximum values may assume
(LCi,j,S )[yS ]note extreme values represented polynomially many
bits, since achieved
vertices (LCi,j,S )[yS ]. modification
i,j,S
i,j,S,T )[y ]. Thus, (LCi,j,S,T )[y ] bounded,
alter set (LC
)[yS ] \ |iT


/ jT (LC
(LCi,j,S,T ) assumed bounded, toosee above.
resume main proof show integer variables easily prefC denote
processed. Let LC program {LCi,j,S } {LCi,j,S,T |
/ j }, let L
fC) represented
linear relaxation LC, recall vertex polytope (L
f
polynomially many bits. Since (LC) contained (LC), values components vertices bounds every integer component vector (LC),
thus represented polynomially many bits. Let U set admissible
values integer components. Let I(LC) denote set possible assignments values integer variables LC U , assignment z I(LC),
let LChzi denote linear program integer variable int(LC) replaced
corresponding value z. Now, pair assignments z w belonging I(LCi,j,S )
I(LCi,j,S,T ), respectively, let us say w matches z (w.r.t. yS ) z w
coincide restrictions yS int(LCi,j,S )int(LCi,j,S,T ).
Furthermore, let W
i,j,S,T )).
set non-integer variables yS , is, yS \ (int(LCi,j,S ) |iT
/ jT int(LC
681

fiGreco, Malizia, Palopoli, & Scarcello


i,j,S,T )[y ] contains point
Then, set (LCi,j,S )[yS ] \ |iT

/ jT (LC
represented polynomially many bits (resp., empty) element
z I(LCi,j,S ) (resp., element z I(LCi,j,S )):


[
[
(LCi,j,S hzi)[W] \
(LCi,j,S,T hwi)[W]
|iT
/ jT

wI(LCi,j,S,T ) | w matches z

contains element represented polynomially many bits (resp., empty).
Note expression form original one, integer
variable occurs it. conclude, observe LCi,j,S hzi LCi,j,S,T hwi (T |
/
j ) represented polynomially many bits (w.r.t. size original
mixed-integer linear programs), since obtained mapping integer variables
values representable polynomially many bits.

References
Agotnes, T., van der Hoek, W., & Wooldridge, M. (2006). Temporal qualitative coalitional
games. Nakashima, H., Wellman, M. P., Weiss, G., & Stone, P. (Eds.), Proceedings
5th International Conference Autonomous Agents Multiagent Systems
(AAMAS 2006), pp. 177184, Hakodate, Japan.
Aumann, R. J. (1961). core cooperative game without side payments. Transactions
American Mathematical Society, 98, 539552.
Aumann, R. J. (1985). axiomatization non-transferable utility value. Econometrica, 53 (3), 599612.
Aumann, R. J., & Dreze, J. H. (1974). Cooperative games coalition structures. International Journal Game Theory, 3 (4), 217237.
Aumann, R. J., & Hart, S. (Eds.). (1992, 1994, 2002). Handbook Game Theory
Economic Applications, Volume 1,2 3, Vol. 11 Handbooks Economics.
North-Holland, Amsterdam, Netherlands.
Aumann, R. J., & Maschler, M. (1964). bargaining set cooperative games.
Advances Game Theory, pp. 443476. Princeton University Press, Princeton, NJ,
USA.
Aumann, R. J., & Peleg, B. (1960). Von Neumann-Morgenstern solutions cooperative
games without side payments. Bulletin American Mathematical Society, 66 (3),
173179.
Bachrach, Y., & Rosenschein, J. S. (2008). Coalitional skill games. Padgham, L., Parkes,
D. C., Muller, J., & Parsons, S. (Eds.), Proceedings 7th International Conference Autonomous Agents Multiagent Systems (AAMAS 2008), pp. 10231030,
Estoril, Portugal.
Bilbao, J. M. (2000). Cooperative Games Combinatorial Structures, Vol. 26 Theory
Decision Library C. Kluwer Academinc Publishers, Reading, MA, USA.
Byford, M. C. (2007). constrained coalitional approach price formation. North
American Summer Meetings Econometric Society, Durham, NC, USA.
682

fiMixed-Integer Constrained Coalitional Games

Charnes, A. (1953). Constrained games linear programming. Proceedings National
Academy Sciences United States America, 39 (7), 639641.
Conitzer, V., & Sandholm, T. (2004). Computing shapley values, manipulating value division schemes, checking core membership multi-issue domains. McGuinness,
D. L., & Ferguson, G. (Eds.), Proceedings 19th National Conference Artificial
Intelligence (AAAI-04), pp. 219225, San Jose, CA, USA.
Davis, M., & Maschler, M. (1965). kernel cooperative game.. Naval Research
Logistics Quarterly, 12, 223259.
Deng, X., & Papadimitriou, C. H. (1994). complexity cooperative solution concepts. Mathematics Operations Research, 19 (2), 257266.
Dunne, P. E., van der Hoek, W., Kraus, S., & Wooldridge, M. (2008). Cooperative boolean
games. Padgham, L., Parkes, D. C., Muller, J., & Parsons, S. (Eds.), Proceedings
7th International Conference Autonomous Agents Multiagent Systems
(AAMAS 2008), pp. 10151022, Estoril, Portugal.
Edgeworth, F. Y. (1881). Mathematical Psychics: essay mathematics moral
sciences. C. Kegan Paul & Co., London.
Elkind, E., Goldberg, L. A., Goldberg, P. W., & Wooldridge, M. (2009). computational complexity weighted voting games. Annals Mathematics Artificial
Intelligence, 56 (2), 109131.
Elkind, E., & Pasechnik, D. (2009). Computing nucleolus weighted voting games.
Mathieu, C. (Ed.), Proceedings 20th Annual ACM-SIAM Symposium
Discrete Algorithms (SODA09), pp. 327335, New York, NY, USA.
Gillies, D. B. (1959). Solutions general non-zero-sum games. Tucker, A. W., & Luce,
R. D. (Eds.), Contributions Theory Games, Volume IV, Vol. 40 Annals
Mathematics Studies, pp. 4785. Princeton University Press, Princeton, NJ, USA.
Greco, G., Malizia, E., Palopoli, L., & Scarcello, F. (2009a). Constrained coalitional games:
formal framework, properties, complexity results (extended abstract). Sierra,
C., Castelfranchi, C., Decker, K. S., & Sichman, J. S. (Eds.), Proceedings
8th International Conference Autonomous Agents Multiagent Systems (AAMAS 2009), pp. 12951296, Budapest, Hungary.
Greco, G., Malizia, E., Palopoli, L., & Scarcello, F. (2009b). complexity compact coalitional games. Boutilier, C. (Ed.), Proceedings 21th International Joint Conference Artificial Intelligence (IJCAI-09), pp. 147152, Pasadena,
CA, USA. extended version available technical report arXiv:0810.3136
(http://arxiv.org/abs/0810.3136).
Hart, S. (2004). comparison non-transferable utility values. Theory Decision,
56 (12), 3546.
Ieong, S., & Shoham, Y. (2005). Marginal contribution nets: compact representation
scheme coalitional games. Riedl, J., Kearns, M. J., & Reiter, M. K. (Eds.), Proceedings 6th ACM Conference Electronic Commerce (EC05), pp. 193202,
Vancouver, BC, Canada.
683

fiGreco, Malizia, Palopoli, & Scarcello

Ieong, S., & Shoham, Y. (2006). Multi-attribute coalitional games. Feigenbaum, J.,
Chuang, J., & Pennock, D. M. (Eds.), Proceedings 7th ACM Conference
Electronic Commerce (EC06), pp. 170179, Ann Arbor, MI, USA.
Ieong, S., & Shoham, Y. (2008). Bayesian coalitional games. Fox, D., & Gomes, C. P.
(Eds.), Proceedings 23rd National Conference Artificial Intelligence (AAAI08), pp. 95100, Chicago, IL, USA.
Jiang, T., & Baras, J. S. (2007). Fundamental tradeoffs constrained coalitional games
autonomic wireless networks. Proceedings 5th International Symposium
Modeling Optimization Mobile, Ad Hoc, Wireless Networks (WiOpt07),
pp. 18, Limassol, Cyprus.
Johnson, D. S. (1990). catalog complexity classes. van Leeuwen, J. (Ed.), Handbook
Theoretical Computer Science, Volume A: Algorithms Complexity, pp. 67161.
MIT Press, Cambridge, MA, USA.
Kalai, E. (1975). Excess functions cooperative games without sidepayments. SIAM
Journal Applied Mathematics, 29 (1), 6071.
Malizia, E., Palopoli, L., & Scarcello, F. (2007). Infeasibility certificates complexity
core coalitional games. Veloso, M. M. (Ed.), Proceedings 20th
International Joint Conference Artificial Intelligence (IJCAI-07), pp. 14021407,
Hyderabad, India.
Maschler, M. (1992). bargaining set, kernel, nucleolus. Aumann, R. J., & Hart,
S. (Eds.), Handbook Game Theory, Volume 1, Vol. 11 Handbooks Economics,
chap. 18. North-Holland, Amsterdam, Netherlands.
McLean, R. P. (2002). Values non-transferable utility games. Aumann, R. J., & Hart,
S. (Eds.), Handbook Game Theory, Volume 3, Vol. 11 Handbooks Economics,
chap. 55. North-Holland, Amsterdam, Netherlands.
Nemhauser, G. L., & Wolsey, L. A. (1988). Integer combinatorial optimization. WileyInterscience Series Discrete Mathematics Optimization. Wiley-Interscience,
New York, NY, USA.
Orshan, G., & Zarzuelo, J. M. (2000). bilateral consistent prekernel ntu games.
Games Economic Behavior, 32 (1), 6784.
Osborne, M. J., & Rubinstein, A. (1994). Course Game Theory. MIT Press,
Cambridge, MA, USA.
Owen, G. (1975). core linear production games. Mathematical Programming,
9 (1), 358370.
Papadimitriou, C., & Steiglitz, K. (1998). Combinatorial Optimization: Algorithms
Complexity (2nd edition). Dover Publications.
Peleg, B. (1963). Bargaining sets cooperative games without side payments. Israel Journal
Mathematics, 1 (4), 197200.
Peleg, B., & Sudholter, P. (2007). Introduction Theory Cooperative Games (2nd
edition). Theory Decision Library. Springer, Berlin, Germany.

684

fiMixed-Integer Constrained Coalitional Games

Rahwan, T., Ramchurn, S. D., Jennings, N. R., & Giovannucci, A. (2009). Anytime algorithm optimal coalition structure generation. Journal Artificial Intelligence
Research, 34, 521567.
Ryan, M. J. (1998). Constrained games, intervening duality experimenter-experiment
interactions. European Journal Operational Research, 110 (2), 326341.
Schmeidler, D. (1969). nucleolus characteristic function game. SIAM Journal
Applied Mathematics, 17 (6), 11631170.
Selman, A. L. (1994). taxonomy complexity classes functions. Journal Computer
System Sciences, 48 (2), 357381.
Semple, J. (1997). Constrained games evaluating organizational performance. European
Journal Operational Research, 96 (1), 103112.
Serrano, R. (1997). Reinterpreting kernel. Journal Economic Theory, 77 (1), 5880.
Shapley, L. S. (1953). value n-person games. Kuhn, H. W., & Tucker, A. W. (Eds.),
Contributions Theory Games, Volume II, Vol. 28 Annals Mathematics
Studies, pp. 307317. Princeton University Press, Princeton, NJ, USA.
Shapley, L. S. (1969). Utility comparison theory games. La Decision, pp.
251263. Editions du Centre National de le Recherche Scientifique, Paris.
Shoham, Y. (2008). Computer science game theory. Communications ACM,
51 (8), 7479.
Simon, H. A. (1972). Theories bounded rationality. McGuire, C. B., & Radner, R.
(Eds.), Decision Organization, Vol. 12 Studies Mathematical Managerial
Economics, pp. 161176. North-Holland, Amsterdam, Netherlands.
von Neumann, J., & Morgenstern, O. (1944). Theory Games Economic Behavior
(1st edition). Princeton University Press, Princeton, NJ, USA.
Weber, R. J. (1994). Games coalitional form. Aumann, R. J., & Hart, S. (Eds.),
Handbook Game Theory, Volume 2, Vol. 11 Handbooks Economics, chap. 36.
North-Holland, Amsterdam, Netherlands.
Winter, E. (2002). shapley value. Aumann, R. J., & Hart, S. (Eds.), Handbook
Game Theory, Volume 3, Vol. 11 Handbooks Economics, chap. 53. North-Holland,
Amsterdam, Netherlands.
Wooldridge, M., & Dunne, P. E. (2004). computational complexity qualitative
coalitional games. Artificial Intelligence, 158 (1), 2773.
Wooldridge, M., & Dunne, P. E. (2006). computational complexity coalitional
resource games. Artificial Intelligence, 170 (10), 835871.

685


