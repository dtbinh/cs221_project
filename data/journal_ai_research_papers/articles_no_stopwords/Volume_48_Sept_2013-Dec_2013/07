journal artificial intelligence

submitted published

constraint solver flexible protein
federico campeotto

campe nmsu edu

dept computer science mexico state university
depts math computer science university udine

alessandro dal palu

alessandro dalpalu unipr

dept math computer science university parma

agostino dovier

agostino dovier uniud

dept math computer science university udine

ferdinando fioretto

ffiorett cs nmsu edu

dept computer science mexico state university
depts math computer science university udine

enrico pontelli

epontell cs nmsu edu

dept computer science mexico state university

abstract
proposes formalization implementation novel class constraints aimed modeling related placement multi body systems
dimensional space multi body system composed body elements connected
joint relationships constrained geometric properties emphasis investigation use multi body systems model native conformations protein
structureswhere body represents entity protein e g amino acid
small peptide geometric constraints related spatial properties
composing atoms explores use proposed class constraints support
variety different structural analysis proteins loop modeling structure
prediction
declarative nature constraint encoding provides elaboration tolerance
ability make use additional knowledge analysis studies filtering
capabilities proposed constraints allow control number representative
solutions withdrawn conformational space protein means
criteria driven uniform distribution sampling principles scenario possible
select desired degree precision number solutions filtering component
automatically excludes configurations violate spatial geometric properties
composing multi body system illustrates implementation constraint
solver multi body perspective empirical evaluation protein structure
analysis

introduction
constraint programming cp declarative programming methodology gained
predominant role addressing large scale combinatorial optimization
paradigm cp provides tools necessary guide modeling resolution search
problemsin particular offers declarative modeling terms variables
constraints ability rapidly propagate effects search decisions flexible
efficient procedures explore search space possible solutions field cp
c

ai access foundation rights reserved

ficampeotto dal palu dovier fioretto pontelli

roots seminal work sutherland sketchpad system
successive efforts systems constraints sussmann steele thinglab
borning years cp become paradigm choice address hard search
drawing integrating ideas diverse domains artificial intelligence
operations rossi van beek walsh declarative nature
cp enables fast natural modeling facilitating development
rapid exploration different resolution techniques e g modeling choices
search heuristics
recent years several groups started appreciating potential constraint programming within realm bioinformatics field bioinformatics presents
number open grounded critical exploration combinatorial search space highly suitable manipulated constraint search
constraint methodologies applied analyze dna sequences instance
locate cis regulatory elements guns sun marchal nijssen dna restriction
maps construction yap chuan pair wise multiple sequence alignment yang yap tsai huang yu lu constraint methodologies
applied biological networks corblin trilling fanchon larhlimi
bockmayr ray soh inoue gay fages martinez soliman gebser
schaub thiele veber biological inference haplotype inference graca marques silva lynce oliveira erdem ture
phylogenetic inference erdem
particular area bioinformatics witnessed extensive use cp techniques
domain structural biologyi e branch molecular biology biochemistry
deals molecular structure nucleic acids proteins structure
affects behavior functions constraint programming progressively gained pivotal
role providing effective ways explore space conformations macromolecules
address secondary tertiary structure prediction flexibility motif discovery docking backofen bornberg bauer krippahl barahona
thebault de givry schiex gaspin dal palu dovier pontelli mann
dal palu shih hwang krippahl barahona dal palu spyrakis
cozzini b chelvanayagam knecht jenny benner gonnet yue dill
two comprehensive surveys use constraint methods structural
bioinformatics recently proposed dal palu dovier fogolari pontelli
barahona krippahl
focus work use constraint technology support structural
studies proteins proteins macromolecules fundamental importance way
regulate vital functions biological processes structural properties critical
determining biological functions proteins skolnick fetrow kolinski baker
sali investigating protein protein interactions central virtually cellular processes alberts johnson lewis raff roberts walter
refer protein structure prediction psp determining
tertiary structure protein knowledge primary structure knowledge structures e g secondary structure components templates homologous
proteins psp often broken specialized classes
related specific aspects tertiary structure protein side chain geometry


fia constraint solver flexible protein

prediction dunbrack loop modeling prediction go scheraga xiang soto
honig rufino donate canard blundell soto fasnacht zhu forrest
honig protein flexibility investigation bennett huber
classes share common rootsthe need track possible conformations chains amino acids variations relate factors
length chain considered short peptides case loop modeling
entire proteins general psp case diverse criteria employed selection
solutions instance lowest basin effective energy surface composed
intra molecular energy protein plus solvation free energy karplus
shakhnovich lazaridis archontis karplus
modeling variability protein chain involves many degrees freedom
needed represent different protein conformations tracking variability requires
exploration vast conformational space model simplifications adopted reduce
computational cost instance backbone represent backbone
proteins side chain representation could simplified single central point centroid
describing center mass one adopt approximated representation space
though lattice
nevertheless even strong simplifications search space remains intractable
prevents use brute force search methods space possible conformations
crescenzi goldman papadimitriou piccolboni yannakakis
constraint programming methodologies found natural use addressing psp
related problemswhere structural chemical properties modeled terms
constraints spatial positions atoms transforming search conformations
constraint satisfaction optimization proposed approaches range
pure ab initio methods backofen et al dal palu et al methods
nmr data krippahl barahona methods fragments assembly dal
palu dovier fogolari pontelli spite efforts design effective
approaches filter space conformations lead feasible search remains
challenging open
work present constraint solver targeted modeling general class protein
structure studies particular solution suitable address protein structure analysis
study requiring generation set unbiased sampled diverse conformations
satisfy certain given restraints one unique features solution presented
work capability generate uniformly distributed sampling target protein regions
among given portion cartesian space selected granularityaccounting
spatial rotational properties
abstract general multi body system composing body
constrained means geometric properties related bodies joint
relationships body represent entity protein individual amino
acid small peptide e g protein fragment bodies relate spatial positions
organization individual atoms composing
view exploration protein structures multi body systems suggests number different constraints used model different classes structural studies
applied filter infeasible unlikely conformations propose investigation
several classes constraints terms theoretical properties practical use


ficampeotto dal palu dovier fioretto pontelli

filtering particular emphasis given joined multibody jm constraint whose
satisfaction prove np complete realistic protein require assembly
hundreds different body versions making intractable study efficient
approximated propagator called jm filtering jmf allows us efficiently compute
classes solutions partitioned structural similarity controlled tolerance error
perspective novel holds strong potential structural investigating computationally intractable use global constraints specifically designed
meet needs enables effective exploration search space greater
potential effective approximations
multi body model provides interesting perspective exploring space
conformationswhile actual search operates discrete sets alternatives e g sets
fragments filtering process avails reasoning processes operates continuous
domain allows propagation filtering effective
proposed multi body constraints filtering techniques constitute core
resolution engine fiasco fragment interactive assembly protein structure
prediction constraints efficient c constraint solver demonstrate
flexibility efficiency fiasco engine model solve class
derived loop modeling instances throughout
ability fiasco providing uniform efficient modeling platform studying
different structural properties far addressed significantly
distinct methods tools declarative nature constraint methods supports
level elaboration tolerance offered frameworks protein structure
prediction facilitating integration additional knowledge guiding studies e g
availability information secondary structure elements
rest organized follows section provide high level
background biological chemical properties proteins review commonly used approaches address structural studies section develop constraint
framework dealing fragments multi body structures section describes
implementation constraints propagation schemes fiasco system
section report experimental fiasco collection
benchmarks loop modeling section provides concluding remarks
preliminary version pursued presented campeotto
dal palu dovier fioretto pontelli work campeotto et al focused
one class constraints targeting loop closure work presented
provides comprehensive constraint system focused modeling structural
protein properties investigating different types e g structure prediction
studies flexibility present manuscript includes precise detailed
formalization extensive experimentation comparison

background general context related work
section briefly review basic biology notions introduce
tackling refer selection related literature


fia constraint solver flexible protein

h

side
chain

n

c

h

h

n
c

h
c


c
side
chain



figure schematic sequence two amino acids showing amino acid backbone
side chains arrow c n denotes peptidic bond
general background
protein molecule made smaller building blocks called amino acids one amino acid
connected another one peptidic bond several amino acids pairwise
connected linear chain forms whole protein backbone protein
illustrated figure formed sequence n c c atoms contained amino
acid backbone rather flexible allows large degree freedom protein
amino acid characterized variable group atoms influences specific
physical chemical properties group named side chain ranges atoms
connects c atom amino acid kinds amino acids found
common eukaryotic organisms
proteins made amino acids average globular protein
amino acids long amino acid contains atoms therefore number
atoms arrangements space grow easily beyond computational
power since beginning protein simulation studies different exploring conformations devised molecular dynamics local search monte
carlo genetic constraint approaches well different geometric representations neumaier
literature several geometric proteins proposed one choice
influences quality complexity computational approaches number
points describe single amino acid
simplest representation one amino acid represented one
point typically c atom given robust geometric property distance
c atoms two consecutive amino acids preserved low variance roughly
usually volumetric constraints enforced points order simulate
average occupancy amino acid representation visualized chain
beads moved space
refined representation store points backbone plus
centroid mass cg represents whole side chain connects c atom
amino acid described different c cg distances cg volumes
centroid approximation side chain flexibility allows refined
energetic number points taken care still low



ficampeotto dal palu dovier fioretto pontelli

figure native structure intact influenza virus protein indexed ea
pdb modeled full atom model simple c c model
left right secondary structures helices emphasized

figure amino acid concatenation model
use particular case simplified model described precisely
particular instance coarse grained protein clementi
shehu end spectrum atom amino acid represented
one point representation accurate time allows
accurate energetic considerations drawback computational demand
handling backbone side chain flexibility increases significantly
figure report three representations protein
select intermediate representation amino acids atoms
n c c backbone centroid side chain cg accounted
include oxygen atom attached c atom atom together
c n identifies triangle chemically stable along backbone used
assembly amino acids see complete formalization position
two h atoms backbone deduced position atoms
deal explicitly conclusion deal atomic elements per amino
acid atoms n c c centroid cg briefly refer representation
model figure illustrates atoms involved concatenation
two consecutive amino acids inter atomic distances consecutive atoms fixed
due chemical bonds thus differences structures identified
differences angles involved common substructures



fia constraint solver flexible protein

protein consecutive amino acids arranged according repeated characteristic
patterns property found almost every protein refer typical patterns
secondary structure elements common examples helices sheets
see figure
context proposed work
present tool assembling reasoning amino acids
space similar approaches e g simons kooperberg huang baker
system relies set admissible elementary shapes fragments represents
spatial dictionary arrangements every part protein
element dictionary general enough describe specific atomic structure
single amino acid longer sequence even hundreds amino acids long
amino acid sequence several alternative arrangements expected populate
database offer hypothesis local shape sequence
protein partitioned contiguous fragments arranged according one
possible shapes recorded database
sequence amino acids free rotate bonds space typically two degrees
freedom along backbone several others along side chain however due
chemical properties physical occupancy specific types amino acids
involved surrounding environment arrangements impossible unlikely core assumption assembling approaches rely statistical database
arrangements describe local feasible behavior order direct search candidates high probability energetically favorable presence multiple
candidate fragments every part protein requires combinatorial search among
possible choices assembled together leads alternative putative configurations
protein search process charge verifying feasibility assembly
since combination local arrangements could generate non feasible global shape e g
one leads spatial clash atoms different fragments one
fragment described one single arrangement part protein rigidly imposed
particular degenerate case exploited describe rigid parts protein
specific combination fragment length number instances fragment determines type protein modeled range complete backbone
flexibility fragments made hundreds choices amino acids secondary structure loop interleaving longer fragments modeling helices strands shorter
fragments
library fragments usually derived content protein data bank
pdb www pdb org contains protein structures design adopted
study parametric choice library fragments use example
experiments use library fragments derived subset pdb known
top lovell davis arendall de bakker word prisant richardson richardson
contains non redundant proteins preserves statistical relevance alternative libraries fragments obtained use sophisticated protein database
search fread choi deane retrieve information depending specific amino acid sequence since local properties greatly influence typical



ficampeotto dal palu dovier fioretto pontelli

arrangements observed moreover build libraries different sequences lengths h even
longer sequences statistical coverage becomes weak nevertheless micheletti seno
maritan conjectured relatively small set fragment shapes dozens
length able describe virtually protein handl knowles vernon baker
lovell demonstrate size structure search space affected
choice fragment length used optimize search process similar considerations explored others hegler latzer shehu clementi
wolynes recent work efficiently build dictionaries fogolari
corazza viglino esposito easily accommodated
framework
considered sequence associated several configurations placed
according standardized coordinate system activity consider c
group preceding amino acid n atom following amino acid
extra information needed fragments combination assuming fragment
connected two peptidic bonds therefore specific sequence store
occurrences
c n c c n
z
h times
relative positions order reduce impact specific properties
database used cluster set way two fragments rmsd less
given threshold one stored example length h
rmsd threshold derive fragment database roughly fragments per
amino acid
cg information added later statistical considerations side chain mobility accounted clustering described fogolari esposito
viglino cattarinussi
protein structure prediction
protein structure prediction sequence amino acids composing protein known primary structure given input task predict three
dimensional shape known native conformation tertiary structure
protein standard conditions
common assumption anfinsens work structure
minimizes given energy function modeling atomic force fields candidate best approximates functional state protein setting choice
number atoms used represent amino acid controls quality
computational complexity
moreover spatial domains proteins points e g atoms centroids
placed impact type search performed
domain continuous often represented floating point coordinates
discrete often derived discretization space crystal lattice structure
root mean square deviation captures overall similarity space corresponding atoms
performing optimal roto translation best overlap two structures



fia constraint solver flexible protein

geometric model determined necessary introduce energy
function mostly atoms considered distances structure prediction energy function used assign score geometrically feasible
candidate candidate optimal score represents solution prediction

let us briefly review popular approaches particular emphasis solutions rely constraint programming technology
natural investigating protein conformations simulations
physical movements atoms molecules unfortunately beyond current computational capabilities jauch yeo kolatkar clarke ben david noivirt brik paz
prilusky sussman levy kinch yong shi cong cheng liao grishin
originated variety alternative approaches many comparative modelingi e small structures related protein family members used templates
model global structure protein interest jones fujitsuka chikenji
takada simons et al lee kim joo kim lee karplus karchin
draper casper mandel gutfreund diekhans source methods often
referred fragments assembly protein structure assembled small protein subunits templates present relevant sequence similarities homologous affinity w r
target sequence
literature constraint programming cp techniques shown potential
structural variability protein modeled constraints constraint solving
performed order deduce optimal structure backofen barahona
krippahl dal palu dovier fogolari dal palu et al cp
used provide approximated solutions ab initio lattice modeling protein
structures local search large neighboring search shmygelska hoos
dotu cebrian van hentenryck clote exact resolution lattice
spaces cp along clever symmetry breaking techniques investigated backofen approaches solve constraint optimization
simple energy function hp precise energy function used
dal palu et al information secondary structures e helices
sheets taken consideration due approximation errors introduced
lattice discretization approaches scale medium size proteins lattice
idea fragment assembly implemented constraint logic
programming finite domains presented dal palu et al dal palu
dovier fogolari pontelli applied structure prediction
structural analysis instance dal palu et al b use generate sets feasible conformations studies protein flexibility use
cp analyze nmr data related protein docking
investigated barahona krippahl
context ab initio prediction recent work olson molloy shehu
shown increasing complexity conformational search spaceby
refined fragment libraryin combination sampling strategy enhances
generation near native structure sets work shehu molloy saleh
shehu illustrates enhancement fragment assembly process leading
faster computations improved sampling conformation spacee g


ficampeotto dal palu dovier fioretto pontelli

tree methods inspired motion guarantee progress towards minimal
energy conformations maintaining geometrically separate conformations terms
energy landscape native state generally lower free energy non native structures
extremely difficult locate hence targeted conformational sampling may aid
protein structure prediction different near native structure used guide
search several schemes monte carlo movements sampling conformation
space fragments assembly proposed shmygelska levitt xu
zhang debartolo hocky wilde xu freed sosnick methods
non uniform probabilistic mass functions derived previously generated decoys
proposed aid simoncini berenger shrestha zhang
sampling however remains great challenge protein complex topologies
large sizes kim blum bradley baker shmygelska levitt
widely accepted proteins native state considered dynamic
entities instead steady rigid structures indeed recent years focus
shifted towards prediction schemes take account non static nature proteins
supported recent observations magnetic resonance techniques processes
enzyme catalysis protein transport antigen recognition rely ability proteins
change conformation according required conditions dynamic nature
visualized set different structures coexist time generation
sets capture non redundant structures pure geometric terms great
challenge kim et al robotics inverse kinematics methods extensively
explored sampling proteins conformational space zhang kavraki cortes
al bluwi molecular simulations al bluwi simeon cortes moll
schwarz kavraki noonan obrien snoeyink kirillova cortes stefaniu
simeon
motivation work provide ability generating protein set
contains optimal sub optimal candidates order capture dynamic information
behavior protein desirable property conformations returned
pool sufficiently diverse uniformly distributed space
protein loop modeling
protein loop modeling restricted version structure prediction use working example remaining part
context protein structure already partially defined e g large number
atoms already placed space usually common scenario derives xray crystallography analysis spatial resolution atoms degenerates presence
regions protein exposed surface presents increased
instability since crystal contains several copies protein order perform measurement regions appear fuzzy therefore placement atoms
regions may ambiguous usually regions referred loops involved
secondary structures instead stable dealing homology modeling protein found another organism typically shows variations
sequence due evolution especially loop regions since less essential
protein stability functionality starting homologous protein structure usually



fia constraint solver flexible protein

loops need recomputed specialized loop modeling use
minimization techniques
length loop typically range amino acids nevertheless
compared secondary structures flexibility loops produces large physically
consistent conformation search spaces constraints mutual positions orientations dihedral angles loop atoms deduced used simplify search
restrictions defined loop closure constraints figure simple
possible scenario two macro structures two helices connected loop
setting assume know position two helices loop atoms
determined
procedure protein loop modeling typically consists phases sampling filtering
ranking jamroz kolinski sampling commonly loop candidate generation dihedral angles sampled structural databases felts gallicchio
chekmarev paris friesner levy subsequent candidate modification order
satisfy loop closure constraints conformations checked w r loop constraints geometries rest structure loops detected
physically infeasible e g causing steric clashes discarded filtering procedure
popular methods used loop modeling include cyclic coordinate descent ccd
method canutescu dunbrack inverse kinematics kolodny
guibas levitt koehl shehu kavraki self organizing sos liu zhu rassokhin agrafiotis simultaneously satisfy loop
closure steric clash restrictions iteratively superimposing small fragments amide
c adjusting distances atoms wriggling method cahill cahill
cahill employs suitably designed monte carlo local moves satisfy loop
closure constraints multi method approaches proposede g lee lee
park coutsias seok propose loop sampling method combines fragment
assembly analytical loop closure set torsion angles satisfying imposed
constraints ab initio methods rapp friesner fiser sali jacobson
pincus rapp day honig shaw friesner spassov flook yan deane
blundell felts et al xiang et al methods templates
extracted structural databases choi deane explored
finally ranking stepe g statistical potential energy dope shen
sali dfire zhou zhou one proposed fogolari et al
used select best loop candidates
sampling filtering procedures work together direct search towards structurally diverse admissible loop conformations order maximize
probability including candidate close native one reduce time needed
analyze candidates work motivated need controlling properties resulting set candidates particular model structural diversity
distance orientation backbone make sampling phase guided loop
constraints
fragment assembly methods investigated context loop
modeling lee et al zhang hauser shehu kavraki review
great detail loop modeling techniques



ficampeotto dal palu dovier fioretto pontelli

figure left two fragments b light grey b dark grey
points b points b
arrows address initial points right observe rotating b degrees translating units x axis last three points b last b
first three points b first b perfectly overlap thus end b front b

constraint solving fragments
assume reader familiarity basic principles constraint programming constraint satisfaction csp reader referred e g handbook constraint programming rossi et al section introduce
formalization effective solution tackle practical applications concerning
placement fragments applications described combinatorial
modeled set variables representing entities deals set
constraints representing relationships among entities context constraint
programming system variables constraints adopted provide solution
csp assignment variables satisfies constraints extend
concept enabling constraint solver representative solution csp
satisfies additional properties expressed among variables whole solution set
terminology
fragment b composed ordered list least three distinct points denoted
points b number points fragment referred length front
end anchors fragment b denoted front b end b two lists containing
first three last three points points b b denote th point
fragment b two ordered lists points p q write p q
perfectly overlapped rigid coordinate translation rotation briefly rototranslation see figure let us assume z coordinate points omitted
simplicity
non empty set fragments length called body body
used model set possible shapes sequence points say body
length k fragment contains length k
multi body sequence sn bodies



fia constraint solver flexible protein

figure left right body composed unique fragment bodies
composed two fragments arrows address initial points fragments
constitutes multi body rightmost
three bodies length
figure report spatial shapes associated four rigid bodies obtained
one identified full lines three dashed
multi body
lines observe rigid body identified
obtained rotation degrees fragment
x axis flipping translation units x units observe
moreover rigid body identified contains
point twice
sn rigid body
sequence fragments
given multibody
b bn bi si n end bi front bi n
rigid body uniquely identified sequence b bn however consecutive
fragments overlapped rigid body alternatively identified list points
form spatial shape figure report examples bodies multi bodies rigid
bodies previous example assume z coordinate points
remark working example concepts related loop modeling points atoms fragment spatial shape atoms last three atoms
one fragment overlap first three atoms another fragment join
body set admissible shapes given list atoms multi body sn
sequence elements corresponding sequence atoms amino acids
idea last three atoms body si first three successive
body si rigid body possible complete shape atoms provided last three
atoms fragment selected set si overlap first three atoms fragment
selected si
overlapping points end bi front bi constitute th joint rigid
body number rigid bodies obtained single multi body sn
bounded ni si figure provides schematic general representation rigid
body
rigid body defined overlap joints relies chain relative rototranslations fragments points points bi therefore positioned according
homogeneous coordinate system associated fragment bi note
reference system b defined whole rigid body completely positioned
exception case points joint collinear points p pn n
collinear points p p pn belongs straight line containing two points p p



ficampeotto dal palu dovier fioretto pontelli

figure schematic representation rigid body joints connecting two adjacent
fragments emphasized points points b fragment represented
circles fragment extends first point joint last point
successive joint
relative positions two consecutive fragments bi bi rigid body n
defined transformation matrix ti r matrix depends standard
denavit hartenberg parameters hartenberg denavit obtained start
end fragmentsthe reader referred work lavalle details
denote product ti x z ti x z
let us analyze first matrix fragment b forced start given
point oriented given way case matrix defines roto translation
b fulfilling constraints absence constraints assume b
normalized e first point second point aligned along z axis
third belongs plane formed x z axes orientation referred
reference system
n coordinate system conversion x z point x z
points bi coordinate system b obtained
x z ti x z ti x z



homogeneous transformations last value tuple
rest focus model however proposed formalization
methods used e g c c model latter
case points bi contains least amino acids joints guaranteed noncolinear due chemical properties backbone combining c fragments
specific rotational angles full atom backbone lost imprecise multibody assembly produced
fragment body associated sequence amino acids fragment sequence
h amino acids described body length h modeling concatenation
atoms represented regular expression c n c c h n representation first last sequence c atoms coincide front end anchor
respectively employed process assembling consecutive fragments e
used roto translation
discretized r space represented regular lattice composed cubic cells
side length equal given parameter k cell referred voxel
simply voxel assume voxel receives unique identifier denote
voxel p k identifier voxel contains point p context
discretization space cubes side length equal k spatial quantization
allows efficient treatment approximated propagation required
geometric constraints introduced following sections


fia constraint solver flexible protein

variables domains
let us define variables adopted describe entities fragments
domain variable v set allowable values v denoted
dv deal fragments placements space adopt two distinct types
variables
finite domain variables fdvs domain finite domain variable finite
set non negative integer numbers
point variables pvs variables assume coordinates point r
domains initially boxes identified two opposite vertices hmin maxi
done discrete solver cola dal palu dovier pontelli
remark working example following remark fdvs identifiers
fragments body pvs used represent coordinates assigned
structural points e g atoms centroids interest molecule
considered clearly values pvs depend deterministically values fdvs
vice versa
variable assigned domain contains unique value case point variables
happens dv hmin maxi min max
constraints
section formalize constraints define fragments placement
used describe protein structure context fragment assembly
distance constraints
distance constraints model spatial properties point variables operating space
point variables p q related distance constraint form
kp qk op



k k euclidean norm r op
built global constraint alldistant associates minimal radius di point
variable pi n ensures spheres surrounding pair point variables
intersect
alldistant p pn dn

constraint equivalent constraints kpi pj k di dj j n
j used avoid steric clashes among different atoms centroids
different volumes checking consistency alldistant constraint given domains
variables pi np complete dal palu dovier pontelli proof
encoding bin packing alldistant constraint holds true
even particular setting point variables intervals r domains
remark working example alldistant constraint introduced avoid clashes
rigid body obtained multi body sn distance constraints


ficampeotto dal palu dovier fioretto pontelli

figure fragments assembled overlapping plane r described rightmost
c n atoms first fragment left plane l described leftmost
c n atoms second fragment right common nitrogen atom
useful extra information known e g one might inferred biological
arguments pair amino acid stay within certain distance
fragment constraint
fragment constraints relate finite domain variables point variables let us assume
database f fragments f represents th fragment database
thus given fdv variable v f v denotes fragment indexed v v
instantiated fragments stored f ordered list points
given list point variables p constraint
fragment v p f



states exists roto translation rot p rot f v namely v
list points p take form fragment f simplicity
omit database f clear context intuitively constraints ensure
fragment choice reproduce correct shape associated point
regardless space orientation fragment orientation determined
joined multi body constraint presented following section
centroid constraint
centroid constraint enforces relation among four pvs intuitively first three
associated atoms n c c amino acid fourth related
centroid cg constraint parametric w r type amino acid
deterministically establishes position cg depending position points
centroid pn pc pc pcg



figure centroids displayed along backbone purple circles labeled
cg constraint used database fragment contains full backbone information centroid information used place missing full atom side
chain side chain centroid computed taking account average c side chain
center mass distance average bend angle formed side chain center massc c torsional angle formed n c c side center mass fogolari et al


fia constraint solver flexible protein

abstraction allows us reduce number fragments consider removing
fragments would geometrically conflict position cg consider
single side chain may main configurations rotamers
table constraint
constraint used restrict assignments set fdvs representing fragments
specific tuples choices useful modeling specific local collaborative
behavior involves one fragment example happens modeling
secondary structure multiple arrangements underlying amino acids specific
approximation strategies employed
k tuple fdvs table
let f set k tuples integer values v
combinatorial constraint form
f
table v



assumes values restricted tuples listed f e
requires list variables v

exists f v k
remark working example going back loop modeling role
fragment constraint evident relates ids selected fragments multibody positions atoms involved centroid constraint
instead introduced add position centroid represents side chain
representation table constraint common constraint constraint languages
useful info consecutive fragments rigid body known due external
knowledge
joined multibody constraint
joined multibody jm constraint enforces relation list fdvs encoding
multibody limits spatial domains fragments composing multibody
order retain fragments assemble properly compenetrate
v

e

joined multibody jm constraint described tuple j hs
sn multi body let b b bk set fragments


sn
e b si
v vn list fdvs domains dvi j bj si
v
e e e n lists sets points

set admissible points front b b
e e e set admissible points end b b si n
constant used express minimal distance constraint different point
b exist
solution jm constraint j assignment v
matrices tn used following properties
domain n vi dvi
joint n let end b vi b b b front b vi
holds j
ti ajx ajy ajz ti bjx bjy bjz


ficampeotto dal palu dovier fioretto pontelli

spatial domain let front b v aj aj
n let e e e end b vi
ti ejx ejy ejz e j
j ti ti matrices overlap end b vi
front b vi
minimal distance j n j points points b vj
b points b v holds
ktj ax ay az bx bz k
proved establishing consistencyi e existence solutionof jm
constraints np complete campeotto et al proved remains
np complete even assuming fragments three
atoms spatial position holds last three atoms
course fragments allowed contain three atoms otherwise
trivial proof reported www cs nmsu edu fiasco
remark working example jm constraint contains exactly ingredients
corresponding fds
needed modeling loop multi body
set possible points loop starts
set possible
v

points loop ends e weak version alldistant constraint pair

atoms avoid clashes solutions non clashing rigid bodies starts

ends e
let us observe jm constraint explicitly forbid spatial positions pvs
variables save first three last three points loop however
additional constraints explicitly required domain definition pvs variables
used encoding
remark choice three points overlap resembles method proposed
kolodny guibas levitt koehl hand observe
technical exercise modify jm constraints allow parametric
overlap contiguous fragments

fiasco constraint solver
present overall structure implementation hybrid constraint solver capable
handling classes constraints described previous section
constraint solving
distinctive feature fiasco possibility handle continuous domains cost
keeping discrete library choices finite domain variables handling fragments
allows us reason spatial properties efficient descriptive way
pure domain modeling adopted previous proposals moreover fiasco allows
product necessary use homogeneous coordinates
let us observe weak form alldistant constraint different distances
point allowed sense closer alldifferent constraint



fia constraint solver flexible protein

solver uniformly sample search space means spatial equivalence relation
used control tradeoff accuracy efficiency particularly
effective finite domains heavily populated critical component
model real world
constraint solver builds classical prop labeling tree exploration constraint propagation phases interleaved non deterministic branching phases used
explore different value assignments variables apt solver able handle
point variables finite domain variablesthis reason refer
hybrid solver particular assignments finite domain variables guide search
values imply assignments point variables turn may propagate reduce
domains point variables finite domain variables moreover propagation technique implemented jm constraint classical filtering techniqueit
approximated technique describe later
presence point variables allows principle infinite number domain values
r however noted information carried assembling fragments encoded
finite domain variables much informative complex demanding
model continuous space e g oct trees csg goods particular direct
kinematics encoded jm constraint able efficiently identify set admissible
regions point variable fast approximated controlled way therefore
point variables seen internal aid propagation variables updated
jm propagation phase interact jm propagator prune
corresponding fragment variables distance constraints point variables included
standard ac propagation loop domains updates
aspect extends classical solver structure capability controlling amount search tree explored search tree contains large number
branches similar point view geometric distance
corresponding point variables goal produce subset feasible solutions
exhibit significant differences accomplished introducing
possibility explore subtree given depth enumerating specific limited
number branches rather following standard recursion propagation expansion achieve behavior necessary selectively interfere standard
recursive call solver implement non deterministic assignment partial tuples
finite domain variables resembles implementation table constraint
dynamically created search strategy allows us significantly reduce
number branches explored subtree produces significant
selection branches controlled adequate partitioning function work
propose effective partitioning function measure similarity point
variables used direct search along specific branches controlled depth
adequately separated partitioning function practically realized
introducing form look ahead controlled jm propagator returns set
partial assignments well filtered domains finite domain variables
hybrid solver



ficampeotto dal palu dovier fioretto pontelli

p
c
search v
p
c
require v

v

output p

return
end
fragment index f dv
p


ac c v f v
nm


get table jm

n

non deterministically select n

j

c c v j j

end
p
c

search v

else
p
c

search v

end

end
end
general structure solver highlighted solver designed
v vn finite domains variables together domains
process list v
dv dvn intuitively domain set indices set fragments
moreover solver receives list p p p n n point variables
variables p p related fragment domain dvi point variable

pj turn spatial domain dpj c represents constraints elements v
p finally solver receives input current level exploration
search tree set first time procedure called sake simplicity
choice variables assigned ordering input list
sophisticated selection strategies easily introduced enter level
assume variables v v already assigned
already assigned
let us briefly describe variables v
lines search terminates returns computed solution represented values assigned variables p otherwise non deterministically select
fragment index domain variable v assign variable lines
indicate execution standard constraint propagation step ac propagation step fails assume another non deterministic choice made possible
every reference non deterministic choice corresponds creation
choice point target backtracking case failure simplicity
assume chronological backtracking succeeds leading possible reduction
computation proceed table constraint might produced
domains
propagation jm constraint ac procedure see details
case lines variables non deterministically assigned
values table lines search continues less variables


fia constraint solver flexible protein

assigned line case search continue one less
variable v assigned line
peculiar feature constraint solver reported abstract
defined used avoid search solutions similar others
let us assume space partitioned cubic voxels size k given list
list pvs p user state
fdvs v
p k
uniqueseq v



constraint forces solver prune search tree following way given
variable assigned next step
partial assignment let v v

p ph p pvs consequently instantiated constraint ensures
two assignments extending v p ph holds exists least
one h pi pi belong voxel
constraint propagation
section discuss propagation rules associated constraints introduced section applied within call ac procedure line
constraint propagation used reduce domain size pvs
fdvs ensuring constraint consistency ac standard implementation fixpoint
propagation loop apt rossi et al
joined multibody constraint
jm constraint complex constraint triggered leftmost points involved constraint anchors instantiated jm propagation jmf
analysis distribution space points involved goal propagation reduce domains fdvs identification fragments
cannot contribute generation rigid body compatible corresponding point variable domains viewed form hyper arc consistency
set fragments moreover due complexity precision considerations
propagator approximated use spatial equivalence relation identifies
classes tuples fragments classes property spatially different
one another
allows compact handling combinatorics multi body controlled
error threshold allows us select precision filtering equivalence relation
captures rigid bodies geometrically similar allowing search compact
small differences among
v

e
along
jmf receives input jm constraint hs
set g points available placement bodies
equivalence relation
sake readability assume domain information variables avail tab process
able builds table constraint table v
makes use function lines function takes input two lists b
points computes homogeneous transformation overlap b call


ficampeotto dal palu dovier fioretto pontelli

jmf
v

e
g
require
ensure tab
tab
n v



start b






end b e e e



r b b
p points b q g k p qk





c c involving p consistent c
p end b b r
n

pi ri

e
pi

e start b fail






end b e e e

ri ri b si
p points b q g k p qk





c c involving p consistent c

pi e start b end b b ri

end

compute pi filter ri accordingly
end
representative l pn

tab tab l
end
function fail b simplicity fourth component
homogeneous transformation explicitly reported
computes sets ri pi respectively
n v
contain fragments si still lead solution corresponding allowed
positions end points fragment b ri denote parent b
set fragments b ri end b front b via fragment b
denote label b corresponding fd value associated
computing updating ri pi fragments end anchors contained
bounds e e e kept fragments would cause points collapsei e
due distance smaller previously placed pointsare filtered lines
moreover spatial positions points first fragment validated
line finally enforce consistency check constraint c c involving points
points b si retain points potentially reach admissible positions
lines
iterations lines first ri pi computed
performs v
basis sets end anchors previous level pi starting point
selected fragment b filtering overlapping lead
wrong portions space lines filtering applied line
step set triples points pi clustered representative
equivalence class chosen within pi corresponding fragment ri identified
non identified fragments filtered ri let us note



fia constraint solver flexible protein

filtering clustering performed initial step p typically
already captured restrictions imposed
fragments reachable last iteration determined representatives
selected populate tab set tuples associated representative l
allows us overlap last point
function l returns assignments v
l
jmf parametric w r clustering relation function selecting
representative express degree approximation rigid bodies
built proposed clustering relation loop modeling takes account two factors positions end anchors space b orientation
plane formed fragments anchor l w r fixed reference system adopted
fiasco c f figure combination clusterings allows capture local geometrical
similarities since spatial rotational features taken account
spatial clustering used following given set fragments three end
points c end anchors cluster considered centroid triangle
c computed use three parameters kmin kmax n kmin kmax r r
r start selecting set kmin fragments pairwise distant least r
fragments selected representatives equivalence class fragments fall
within sphere radius r centered centroid representative clustering
ensures rather even initial distribution clusters however fragments may fall
within kmin clusters allow create kmax kmin clusters
covering sphere radius r remaining fragments assigned closest
cluster employed technique variant k means clustering called
leader clustering allows fast implementation acceptable
orientation clustering b partitions fragments according relative orientation planes r w r plane spatial orientation described euler angles
frame w r produces variable number partitions depending particular given threshold possible partitions
describing equal regions sphere though interval
fragment allotted partition determined
final cluster intersection two partitioning defines
equivalence relation depending kmin kmax r representative selection
function selects fragment partition according preferences e g
frequent fragment closest center etc
note r kmax unbounded clustering performed
would cause combinatorial explosion every possible end anchor whole
spatial error introduced depends r error
introduced step bounded r dimension iteration
errors linearly increased since fragment placed initial error gathered
previous iterations thus resulting nr bound last end anchor clearly
bound coarse average experimental better performances
similar considerations argued rotational errors however intersection
two clusterings provide general much tighter bound



fif campeotto et al

campeotto dal palu dovier fioretto pontelli

figure
graphical
representation
propagation
jm constraint
theconstraint
variables viover
vthe
variables vi vi
figure
graphical
representation
theofpropagation

jm
simultaneous placement elements domain variable vi simulated
simultaneous placement elements domain variable vi simulated
overlapping corresponding fragment end anchor fragment associated element
overlapping
eachsetcorresponding
fragment
end anchor
fragment
element
domain
vi
points pi
computedwith
clustered
theofrelation
pointsassociated
within
domain
vieach

set one
points
pi
computed
andchosen
clustered
fragments
relation points
dotted
ellipses offor
cluster
fragment
representative
hence
highlighted
dotted
ellipses
forcollection
cluster
one fragment
representative
hence
highlighted fragmen
filled
rightmost
circle
representatives
constitutes
set ri
b thechosen
previous
step iswith
performed
circle
basis
end anchors
fragmentsconstitutes
representatives
ini b previo
filled
rightmost

collectionrelated
representatives
thechosen
set r
previous
filled
box
represents

setthe
points
g
available
placement
step islevel
performed

basis
end anchors
related
thefor
fragments
representatives chosen
bodies instance due distance constraint fragment falling area discarded

previous
level

filled
box
represents

set

points
g



available
placeme
c last iteration jmf set points pi clustered

bodies

instance
due


distance
constraint


fragment
falling


area
discarde
reach desired position retained instance front anchor associated fragment next
c


last
iteration


jmf


set

points
p


clustered


th
variable sequence fragments able lead condition marked thick
lines selected
populate

table
tab
reach desired position retained instance front anchor associated fragment ne
variable sequence fragments able lead condition marked thick lines select
populate table tab


fia constraint solver flexible protein

p
p q

q
figure effect distance constraint p q propagation empty boxes
represent original pvs domains full boxes represent reduced pvs domains
effect constraint propagation
distance constraints
propagation distance constraints approximated technique reduces
size box domains introduce following operations pvs box domains
two variables p q used describe propagation rule
following subsections
domain intersection dp dq hmax pmin qmin min pmax qmax
domain union dp dq hmin pmin qmin max pmax qmax
domain dilatation
dp hpmin pmin di
max p q max px qx max py qy max pz qz similarly min
p px py pz
given two point variables p q domains dp dq respectively simplification rule constraint p q updates domains follows
dp dq dp

dq dp dq



ensures points dp dq positioned within approximation
sphere radius sphere approximated considering box inscribing cube
side illustrated figure
propagation constraint p q harder coarse representation
box domains adopted work model pvs allow description
complex polyhedron hence apply simple form bound consistency described
following rule

dp dq hl ui u l
p

p q
dq


establishes unsatisfiability constraint




ficampeotto dal palu dovier fioretto pontelli

fragment constraint
propagation fragment constraints fragment v p exploited solution
search enforce assembly process fragment v along point variables
p pn p recall dv domain v containing references j jk
database fragments
p

p dp p dp p dv j jk


fragment v p
jk
n



p p p f f
dpi dpi






f j

p p p f roto translation applied overlap first three
points fragment f start anchor p p p
conjunction bottom part rule evaluates domains p p p
may reduce singleton domains empty whenever compatible
selected fragment
centroid constraint
positions atoms n c c amino acids determined
propagation enforces value pv pcg involved centroid constraint

p
n pn dc pc dpc pc

centroid pn pc pc pcg p

cg dpcg cg pn pc pc
cg pn pc pc support function returns center mass
side chain amino acid considering points pn pc pc described
sect
implementation details
proposed solver relies efficient c implementation carefully designed
allow additional tailored solving capability without need reshaping core structures
internal representation domains finite domain variables abstracted two arrays length size initial domain one array points
values boolean bit mask states whether value still
domain flags set current partial assignment cannot part solution
overall constraint exactly one set variable assigned value
representation implies linear scan domains propagation
justified reasonably small size domains target application typically less
values internal representation domains point variables simply
pair hmin maxi uniquely characterizes box r since variables used
mostly distance constraints representation expressive enough oct trees
considered significant advantage
point variables propagation described variables instantiated
fragment selection


fia constraint solver flexible protein

management uniqueseq property implemented dedicated data
structure hash tables every time pv assigned value mapped
voxel fixed size grid implemented via hash table voxel indexes keys
points contained voxels values operations performed
amortized complexity
one jm constraints
briefly describe modeled two fiasco jm constraint
able model geometrically assembly fragments therefore used every
protein model single jm covers protein ensures flexibility however long
proteins computational precision issues arise beneficial model
protein multiple jm constraints e g jm j jm j k amino acids
j covered jm constraints overlap common amino acid
practical choice improves approximate search allows increase number
different solutions produced practice protein section handled jm constraint
potentially combined different arrangements sections therefore
expected number solutions found grows exponentially number jm
constraints jm constraint parameters used control clustering precision
number conformations found

experimental
report experimental obtained fiasco system available
http www cs nmsu edu fiasco experiments conducted linux intel core
ghz memory gb machine solver implemented c
fragment database adopted fread database shown effective loop structure prediction choi deane parameters analysis
use database fragments length fragments classified amino
acid class frequency occurrence whole top
set system model two applications described particular
section analyze loop modeling scenario focus performances jm
filtering examining filtering power computational costs next compare
quality loop conformations generated measuring rmsd proposed loop
respect native conformation present relationships among
jm parameters control quality efficiency
section examples ab initio protein structure prediction
conclude comparison fiasco constraint solvers protein
described common subset constraints
loop modeling
loop modeling formalized presence two known large fragments
fixed space sequence amino acids length n given connecting
two parts protein jm constraint defined sequence particular
attention starting ending points fixed start first fragment


ficampeotto dal palu dovier fioretto pontelli

figure example loop computed tool
end last fragment namely sequence c initial points coordinates
sequence c final points coordinates e e e e
known one caveat end points due discrete nature fragment
assembly unlikely exactly reach final points accommodate errors
require jm constraint produces fall within threshold
corresponding final points
figure example loop computed tool parts protein
connected shown left connecting loop right
additional spatial constraints points e g good regions determined presence
atoms given constant asserts minimum distance
pairs atoms
filtered search space performances
selected protein targets set non redundant x ray crystallography structures
done canutescu dunbrack partitioned proteins classes
according loop region lengths n model csp uses
fragment assembly model loop particular jm constraint loop
region
assess filtering capabilities fiasco perform exhaustive search generating solution protein targets clusterization number
different fragments length found amino acid see fig size
domains corresponding fdvs bound adequate sampling
describe reasonable amino acid flexibility cases number fragments
exceeds frequent ones kept
increases likelihood generating loop structure similar native
one loop length n generates exponential search space size bounded n
selected variable leftmost one fragments selected decreasing frequency order
imposed jm constraint every consecutive amino acids clustering
parameters set follows kmin value equal size domains











n different fragments

constraint solver flexible protein



c



e

f

g

h



k

l



n

p

q

r





v

w



amino acids

figure number different fragments clustering per amino acid dataset
used different values kmax loop lengths values r set
setting summary parameters listed table
table report average times needed exhaustively explore loop search
space average number solutions generated
n




jm




jm parameters
kmin kmax







r




full jm
solutions time







table loop modeling settings average running times seconds number
solutions generated

jm approximated propagator quality
even approximated jm produces small set solutions
good representation overall variability protein structure test
compare solutions means rmsd original structures experiments
carried protein targets settings described table
exception kmax loop set size set
figure bar chart rmsd predictions protein
loop within group targets analyzed precisely x axis
loop length protein targets bar reports best rmsd dark average
rmsd grey worst rmsd light grey found numbers bars represent
number loops found multiplied factors indicated underneath
biased fragment database use excluded fragments belong



























































best rmsd
avg rmsd
worst rmsd






rmsd angstrm



campeotto dal palu dovier fioretto pontelli





length

length



length

figure rmsd comparison loop set x axis protein targets

deposited protein targets therefore possible reconstruct original
target loop none searches expected reach rmsd equal
loops length exploration whole conformational search space
simple search procedure would excessively long computation time
enforces need propagator jm filtering successfully removes
redundant conformations allows us cover whole search space short period
time
fig loop predictions calculated fragments length study
choice affects time accuracy sampling model loops length
fragment length best rmsds reported figure
experiments kept settings used kmax moreover jm constraint
imposed fragments order cover whole fragment e g fragments
length set jm constraint every three consecutive amino acids set time
seconds
notice increasing length fragments accuracy decreases due
reduced size domains nevertheless time reduced since sampling
performed smaller search space jm constraints cover longer sequences amino
acids average times seconds fragments length
respectively









rmsd angstrm





constraint solver flexible protein

len

len

len

figure rmsd comparison loop sampling loops length fragments
length



ficampeotto dal palu dovier fioretto pontelli

comparison state art loop samplers
section compare method three state art loop samplers cyclic
coordinate descent ccd canutescu dunbrack self organizing
sos liu zhu rassokhin agrafiotis falcm method lee
lee park coutsias seok
table shows average best rmsd benchmarks length
computed four programs report given table canutescu
dunbrack ccd table liu et al sos table ii lee et al
falcm method rmsds obtained adopting settings jmf provided
best previous section see subsection noted
line produced systems
loop
length




average best rmsd
ccd
sos
falcm
jmf













table comparison loop sampling methods
execution time reported appear competitive e g considered
reported soto et al
jm parameters analysis
section analyze impact jm parameters quality best
solutions found execution times particular aim experiments
shed light relationship jm constraint settings
figure analyze impact kmax execution times left
precision right filtering jm constraint top bottom use
tests performed protein loops length see section
adopting cluster parameters r kmin dot
plots represents average best rmsd found predictions left
average execution time right rmsd values tend decrease smaller clustering
parameters r number clusters increases filtering time increases
kmax increases
figure study relation rmsd number jms
cover given target loop protein voxel side parameter experiments
used values kmax set r
averaged rmsds values resulting sample set structures relation
rmsd number jm well average worst computational times
shown fig left use medium length loop taken protein xpc
res vary number jms cover loop side voxel
set figure observe increasing number jms e
covering less amino acids single jm rmsd decreases computational
cost higher notice best rmsd given loop covered jm



fia constraint solver flexible protein















r




r

time


rmsd

















































jm kmax



jm kmax












r












time


rmsd


r





































jm kmax





jm kmax













r











time


rmsd



r

































jm kmax







jm kmax

figure comparison best rmsd values execution times varying
kmax clustering parameter top center bottom




rmsd

le
mxn
fdf
























rmsd











campeotto dal palu dovier fioretto pontelli













n jm











voxelside

figure left rmsd best average time average worst values increasing
number jm constraints completely cover target loop length right
average dotted line best solid line rmsd targets le length top
mxn length medium fdf length low jm voxel side parameter
voxels clustering varies jm kmax parameter varies
targets completely covered multiple jm constraints
constraint e jm constraint four consecutive amino acids rule thumb
suggest use jm constraint cover consecutive amino acids since
setting produces best within acceptable time fig right report
best rmsd solid line average rmsd dotted line structures found
multiple jm constraints cover sequences consecutive amino acids whole
target proteins namely protein target length n set jm constraints
j j n experiments considered three proteins
relatively short length order obtain complete exploration search space
reasonable computational time le length mxn length fdf length
moreover used values side voxels used
clustering
figure observe voxel size enabled uniqueseq
impact clustering values lower recall proteins diameter
less voxel sides lower observe substantial improvement
terms quality time required solver compute solutions increases
exponentially
summary default parameters
provide guidelines may helpful tune jm parameters given
protein modeling suggest several levels parametrization might used
according user needs respect running time prediction accuracy stress



fia constraint solver flexible protein

merely guidelines outlined empirical evaluations several
tests done establish desired tuning
suggest set jm model sequence least amino acids general
longer payoff computational load jm clustering default choice
kmin set average size variable domains involved jm constraint
suggest set kmax least kmin greater latter
together number consecutive jm constraints greatest impact
computational cost prediction accuracy computational costs grow number
consecutive jm increases time produce general higher
accuracy trend exhibited growing kmax parameter table illustrates
five basic settings could used incrementally establish trade running
times prediction accuracy first level lev associated faster computational
times lower accuracy last one lev slowest accurate
second column table indicates length amino acid sequence modeled
single jm
lev






n jm






kmin






kmax













r






speed






accuracy






table jm default parameters

application protein structure prediction
protein structure prediction model generic backbone multiple
jm constraints principle unique jm constraint model whole
previous cases split smaller parts moreover presence secondary
structure valid help placement jm constraints handle loops
consecutive pair simple search generate pool conformations energy
scoring select best candidate used statistical energy function developed
model energy function used instead
section study applicability fiasco protein structure prediction
particular consider prediction secondary structure
elements protein given furthermore order assess potential structure
introduce energy functionthe adopted previous studies
precisely described http www cs nmsu edu fiasco
modeling used information location type
secondary structure elements primary sequence provided directly protein
data bank imposed sequence jm constraints every consecutive
pair secondary structure elements number consecutive jm constraints varied
according length unstructured sequence modeled covering
amino acids single jm constraint addition one jm constraint imposed
first amino acid beginning first secondary structure element another


ficampeotto dal palu dovier fioretto pontelli

end last secondary structure element last amino acid tails
protein domains initial end points jm constraints set
admissible points box large enough contain protein search phase
first secondary structure deterministically set space labeling proceeds
jm constraint attached leading next secondary structure
tails instantiated end
propagation constraints generates set admissible structures represents possible folds target protein set select structure
minimum energy extract structure minimum rmsd order evaluate
quality energy function tests adopt fread database table
reports best energy values found fiasco rmsd columns reported
corresponding rmsd associated conformation best energy found solver
jm column reports total number jm used model protein together
maximum number consecutive jm adopted model contiguous sequence
amino acids within parentheses
protein id
zdd
gp
k
enh
igd
sn
ail
b r
jhg

len










jm










energy










rmsd










time min










table ab initio prediction fiasco
quality predictions computed fiasco average
rmsd competitive shown following section par better
produced methods particularly encouraging proteins longer
length sampling search space aids development admissible structures
time required fiasco completely explore search space depends strongly
type mutual arrangement secondary structure elements target
example protein k protein enh length fiasco
significantly faster first protein second one observation
made proteins igd sn reported table promising
suggest feasible solve ab initio prediction
future work explore integration local search techniques e g largeneighboring search order sample search space decrease time
needed explore



fia constraint solver flexible protein

comparison fiasco state art constraint solvers
section motivate choice designing ad hoc solver instead
general purpose constraint solver particular provide comparison fiasco
state art constraint solving justify choice implementing
solver scratch instead available constraint programming library constraint programming language solver chosen comparison gecode gecode
team efficient solver winner recent minizinc challenges stuckey becket fischer
gecode recently introduced version handling floating point variables
nevertheless since gecode fastest solver fd variables first encoded
psp discretizing fragments positions particular multiplied real
number scaling factor obtain integer values spatial position encoded
triple variables representing coordinates point operation e g
multiplications applied variables requires scaling unfortunately
leads ineffective propagation particularly evident dealing distance
constraints require implementation euclidean distance pairs triples
variables
order understand solvers capabilities propagate constraints placement overlapping fragment implemented three versions code considered
different number constraints precisely
implementation uses jm constraint jm
implementation adds alldistant constraint
implementation adds alldistant centroid constraints
cases use complete search particular clustering tabling constraints
lines disabled
table report execution times required fiasco gecode
considered constraints determine increasing number solutions
solutions computed target protein zdd length
table shows execution time solvers increases proportionally
number solutions found however fiasco one order magnitude faster gecode
unconstrained case two orders magnitude faster cases main
reason fiasco specifically developed handle finite domains point
variables approximated fd variables gecode constraints
approximations propagate poorly slowly moreover approximation fragments
finite domain variables introduces approximation errors grow search
phase consequently less solutions returned constrained cases errors
may final structures relatively imprecise coordinates atoms
converted back real values
table consider small sequence four amino acids ser trp thr trpthe
first four amino acids protein le generate solutions report
values best average rmsd among structures sets solutions computed fiasco gecode implementation complete enumeration


ficampeotto dal palu dovier fioretto pontelli

number
solutions





jm





fiasco
alldistant alldistant centroid









jm





gecode
alldistant alldistant centroid









table comparison execution times fiasco gecode increasing number
solutions different sets considered constraints
domains observe fiasco significantly faster exploring search space
moreover approximation introduces errors leads loss feasible solutions

jm
alldistant
alldistant centroid

n sol




fiasco
time sec rmsd







avg rmsd




n sol




gecode
time sec rmsd







avg rmsd




table number solutions time best rmsd average rmsd set structures
found fiasco gecode complete enumeration solution space
different constraints
encoded constraint satisfaction version
gecode allows employ float variables labeled finite domain variables
allow select fragments values point variables obtained constraint
propagation since constraint propagation float variables interval arithmetics
turns amino acids intervals large able reconstructing protein evaluating energy value instance complete
assignment variables related fragments protein zdd domains
float variables associated position first two amino acids singletons
related tenth amino acids intervals size one two even worse
domains atoms eleventh amino acids unbounded stage
labeling float variables required computational time orders magnitude higher
reported table finite domain gecode implementation
constraint solvers eclipse cheadle harvey sadler schimpf shen wallace choco choco team support mixed use integer
real variables eclipse prolog language handles integer real variables together however great number matrix operations required application fit well prolog implementation furthermore current trend
eclipse replace direct constraint solving translation flatzinc
case choco current support real variables still development c f
http choco sourceforge net userguide pdfpage things may change
next releases
experimented another constraint solver implementing multi body
constraints jacop library jacop team similar way done
gecode eventually tested protein used reported table



fia constraint solver flexible protein

observe substantial difference terms execution time
gecode implementation
terms protein structure prediction design fiasco influenced
previous work tuples system dal palu et al tuples
constraint solver protein structure prediction fragments assembly figure
compares performance tuples fiasco set proteins discussed
section make comparison fair make use energy function
systems assume secondary structure elements known note
important differences two systems tuples implemented
constraint logic programming techniques specifically sicstus prolog swedish institute
computer science tuples make use floating point variables
hand tuples introduces heuristic search mechanism large neighboring
search
quality predictions computed fiasco average
rmsd better quality predictions computed tuples average
rmsd complete sampling search space allows us obtain better
proteins longer length benchmark instead shorter proteins
obtain comparable similarity quality depends use
energy function systems notice energy function used designed
simpler model adopted tuples c c moreover tuples prolog
implementation provide floating point variables hence value must
rounded approximated aspects explain quality differences
rmsd best rmsd found fiasco behavior
proteins e g zdd gp energy rmsd values better fiasco even
corresponding energy rmsd values higher tuples execution times
fiasco significantly faster tuples spite fiascos lack sophisticated
search heuristic
performed comparison state art online robetta predictor raman vernon thompson tyka sadreyev pei kim kellogg dimaio lange kinch sheffler kim das grishin baker first four proteins table built
dictionary amino acid long peptides robetta interface
disabled homology inference order maintain fair comparison
zdd computed rmsd gp computed rmsd k
computed rmsd enh computed rmsd noted
line robetta predictor
let us conclude section mentioning reported previous section
compared fiasco tuples provide implicit comparison another shelf solver sicstus prolog constraint logic programming solver swedish
institute computer science

conclusions
presented novel constraint joined multibody model rigid bodies
connected joints constrained degrees freedom space presented
polynomial time approximated filtering joined multibody constraint


ficampeotto dal palu dovier fioretto pontelli

figure comparison rmsd execution time tuples fiasco



fia constraint solver flexible protein

exploits geometrical features rigid bodies particular filtering
combined search heuristics produce pool admissible solutions
uniformly sampled allows direct control quality number solutions
filtering clustering procedure able cope
high variability rigid bodies preserving computational cost practical
advantages joined multibody constraint shown extensive set real protein
simulations two main categories protein loop reconstruction structure prediction
ab initio tests showed parameters constraint able control
effectively quality computational cost search conclusion constraint
solver fiasco able model effectively common protein case studies analyses
future work applications side plan explore protein loop closure
use specific databases scoring functions close
protein flexibility plan use fiasco solver generate conformational space
long scale movements nuclear receptors dal palu et al b finally plan use
fiasco general context protein structure prediction combination local
search methods protein ligand spatial constraints constraint side plan
integrate jm filtering distance constraints order generate
accurate clusters plan integrate spatial constraints inferred bounds
energy terms e g favorable contributions provided pairing secondary structure
elements translate energy bounds distance constraints plan investigate
use multiple jm constraints model super secondary structures placement
useful capture important functional structural protein features latter
thought imposing several spatial path preferences given chain points finally
intend integrate constraint solver visual interface make easily available
biologist practitioners porting parts tool within gpu
framework recently explored campeotto dovier pontelli

acknowledgments
thank federico fogolari comments several parts work authors
would express gratitude jair reviewers helped us sensibly improve
presentation

references
al bluwi simeon cortes j motion molecular
simulations survey computer science review
alberts b johnson lewis j raff roberts k walter p molecular
biology cell th edition edition garland science
anfinsen c b principles govern folding protein chains science

apt k principles constraint programming cambridge university press
backofen r constraint fast exact structure
prediction dimensional protein constraints


ficampeotto dal palu dovier fioretto pontelli

backofen r bornberg bauer e application constraint programming techniques structure prediction lattice proteins extended alphabet
bioinformatics
baker sali protein structure prediction structual genomics science

barahona p krippahl l constraint programming structural bioinformatics
constraints
ben david noivirt brik paz prilusky j sussman j l levy
assessment casp structure predictions template free targets proteins

bennett w huber r structural functional aspects domain motions
proteins crit rev biochem
borning programming language aspects thinglab constraintoriented simulation laboratory acm transactions programming languages
systems
cahill cahill cahill k kinematics protein folding journal
computational chemistry
campeotto f dovier pontelli e protein structure prediction gpu
declarative multi agent framework international conference
parallel processing icpp pp ieee computer society press
campeotto f dal palu dovier fioretto f pontelli e filtering
technique fragment assembly proteins loop modeling constraints
milano ed cp vol lecture notes computer science pp
springer
canutescu dunbrack r cyclic coordinate descent robotics
protein loop closure protein sci
cheadle harvey w sadler j schimpf j shen k wallace g
eclipse introduction technical report ic parc ic parc imperial college
london
chelvanayagam g knecht l jenny benner gonnet g combinatorial distance constraint predicting protein tertiary
known secondary structure folding design
choco team choco open source java constraint programming library
workshop open source software integer constraint programming available http www emn fr z info choco solver
choi deane c fread revisited accurate loop structure prediction
database search proteins
clementi c coarse grained protein folding toy predictive
tools curr opin struct biol


fia constraint solver flexible protein

corblin f trilling l fanchon e constraint logic programming modeling
biological system described logical network workshop constraintbased methods bioinformatics
cortes j al bluwi robotics apporach enhance conformational sampling proteins international design engineering technical conferences
computers information engineering conference vol pp asme
crescenzi p goldman papadimitriou c piccolboni yannakakis
complexity protein folding proceedings thirtieth annual acm
symposium theory computing pp acm press
dal palu dovier fogolari f pontelli e protein structure analysis
constraint programming cozzini p kellogg g eds computational
approaches nuclear receptors chap pp royal society chemistry
dal palu spyrakis f cozzini p b investigating protein
flexibility constraint logic programming first application case
estrogen receptor european journal medicinal chemistry
dal palu dovier fogolari f constraint logic programming
protein structure prediction bmc bioinformatics
dal palu dovier fogolari f pontelli e clp protein fragment
assembly theory practice logic programming
dal palu dovier fogolari f pontelli e exploring protein fragment
assembly clp walsh ed proceedings international joint
conference artificial intelligence ijcai pp ijcai aaai
dal palu dovier pontelli e constraint solver lattices
application protein folding international conference logic
programming artificial intelligence reasoning pp springer verlag
dal palu dovier pontelli e constraint solver discrete lattices
parallelization application protein structure prediction software practice
experience
dal palu dovier pontelli e computing approximate solutions
protein structure determination global constraints discrete
crystal lattices international journal data mining bioinformatics

deane c blundell coda combined predicting structurally variable regions protein protein sci
debartolo j hocky g wilde xu j freed k sosnick protein
structure prediction enhanced evolutionary diversity speed protein science

dotu cebrian van hentenryck p clote p lattice protein structure
prediction revisited ieee acm trans comput biology bioinform



ficampeotto dal palu dovier fioretto pontelli

dunbrack r rotamer libraries st century curr opin struct biol

erdem e applications answer set programming phylogenetic systematics
logic programming knowledge representation nonmonotonic reasoning pp
springer verlag
erdem e ture f efficient haplotype inference answer set programming
national conference artificial intelligence aaai pp aaai mit
press
felts gallicchio e chekmarev paris k friesner r levy r prediction protein loop conformations agbnp implicit solvent model
torsion angle sampling j chem theory comput
fiser r sali modeling loops protein structures protein sci

fogolari f esposito g viglino p cattarinussi modeling polypeptide
chains c chains c chains c c chains ellipsoidal lateral
chains biophysical journal
fogolari f pieri l dovier bortolussi l giugliarelli g corazza esposito g
viglino p scoring predictive reduced representation
proteins model energy definition bmc structural biology
fogolari f corazza viglino p esposito g fast structure similarity
searches among protein efficient clustering protein fragments
molecular biology
fujitsuka chikenji g takada simfold energy function de novo
protein structure prediction consensus rosetta proteins
gay fages f martinez soliman constraint program subgraph
epimorphisms application identifying model reductions systems biology
workshop constraint methods bioinformatics
gebser schaub thiele veber p detecting inconsistencies large
biological networks answer set programming theory practice logic
programming
gecode team gecode generic constraint development environment available
http www gecode org
go n scheraga h ring closure local conformational deformations
chain molecules macromolecules
graca marques silva j lynce oliveira haplotype inference
pseudo boolean optimization annals
guns sun h marchal k nijssen cis regulatory module detection
constraint programming ieee international conference bioinformatics
biomedicine bibm pp


fia constraint solver flexible protein

handl j knowles j vernon r baker lovell dual role
fragments fragment assembly methods de novo protein structure prediction
proteins structure function bioinformatics
hartenberg r denavit j kinematic notation lower pair mechanisms
matrices journal applied mechanics
hegler j latzer j shehu clementi c wolynes p restriction versus
guidance protein structure prediction proc natl acad sci u

jacobson pincus rapp c day honig b shaw friesner r
hierarchical atom protein loop prediction proteins
jacop team jacop web page visited november
http www jacop eu

available

jamroz kolinski modeling loops proteins multi method bmc struct biol
jauch r yeo h kolatkar p r clarke n assessment casp structure
predictions template free targets proteins
jones predicting novel protein folds fragfold proteins

karplus k karchin r draper j casper j mandel gutfreund diekhans
source r h combining local structure fold recognition fold
methods protein structure prediction proteins
karplus shakhnovich e protein folding theoretical studies thermodynamics dynamics protein folding pp wh freeman
kim e blum b bradley p baker sampling bottlenecks de novo
protein structure prediction journal molecular biology
kinch l yong shi cong q cheng h liao grishin n v casp
assessment free modeling target predictions proteins
kirillova cortes j stefaniu simeon nma guided path computing large amplitude conformational changes proteins
proteins structure function bioinformatics
kolodny r guibas l levitt koehl p inverse kinematics biology
protein loop closure international journal robotics

krippahl l barahona p psico solving protein structures constraint
programming optimization constraints
krippahl l barahona p applying constraint programming rigid body
protein docking principles practice constraint programming pp
springer verlag
krippahl l barahona p applying constraint programming protein structure determination principles practice constraint programming pp
springer verlag


ficampeotto dal palu dovier fioretto pontelli

larhlimi bockmayr constraint description steadystate flux cone metabolic networks discrete applied mathematics

lavalle cambridge university press
lazaridis archontis g karplus enthalpic contribution protein
stability atom calculations statistical mechanics adv protein chem

lee j kim joo k kim lee j prediction protein tertiary structure
profesy novel method fragment assembly conformational
space annealing proteins
lee j lee park h coutsias e seok c protein loop modeling
fragment assembly analytical loop closure proteins
liu p zhu f rassokhin agrafiotis self organizing
modeling protein loops plos comput biol
lovell davis arendall w de bakker p word j prisant richardson j
richardson structure validation c geometry c deviation
proteins
mann dal palu lattice model refinement protein structures
workshop constraint methods bioinformatics
micheletti c seno f maritan recurrent oligomers proteins optimal scheme reconciling accurate concise backbone representations automated
folding design studies proteins
moll schwarz kavraki l roadmap methods protein folding humana press
molloy k saleh shehu probabilistic search energy guidance
biased decoy sampling ab initio protein structure prediction ieee acm trans
comput biology bioinform preprint
neumaier molecular modeling proteins mathematical prediction
protein structure siam review
noonan k obrien snoeyink j protein backbone motion inverse
kinematics international journal robotics
olson b molloy k shehu search protein native state
probabilistic sampling j bioinformatics computational biology

raman vernon r thompson j tyka sadreyev r pei j kim kellogg e
dimaio f lange kinch l sheffler w kim b h das r grishin n v
baker structure prediction casp atom refinement
rosetta proteins suppl
rapp c friesner r prediction loop geometries generalized
born model solvation effects proteins


fia constraint solver flexible protein

ray soh inoue k analyzing pathways asp approaches
algebraic numeric biology th international conference pp springer
verlag
rossi f van beek p walsh handbook constraint programming elsevier
science inc
rufino donate l canard l blundell predicting conformational
class short medium size loops connecting regular secondary structures
application comparative modeling j mol biol
shehu ab initio tree exploration enhance sampling low energy
protein conformations proceedings robotics science systems v
shehu conformational search protein native state pp john
wiley sons inc
shehu kavraki l modeling structures motions loops protein
molecules entropy
shen sali statistical potential assessment prediction protein
structures protein sci
shih e hwang j use distance constraints protein protein
docking computations proteins structure function bioinformatics

shmygelska hoos h ant colony optimisation
hydrophobic polar protein folding bmc bioinformatics
shmygelska levitt generalized ensemble methods de novo structure
prediction proceedings national academy science usa

simoncini berenger f shrestha r zhang k probabilistic fragmentbased protein structure prediction plos one e
simons k kooperberg c huang e baker assembly protein tertiary
structures fragments similar local sequences simulated annealing
bayesian scoring functions j mol biol
skolnick j fetrow j kolinski structural genomics importance
gene function analysis nat biotechnology
soto c fasnacht zhu j forrest l honig b loop modeling sampling
filtering scoring proteins structure function bioinformatics

spassov v flook p yan l looper molecular mechanics protein loop prediction protein eng
stuckey p j becket r fischer j philosophy minizinc challenge
constraints
sussmann g steele g constraints language expressing almosthierarchical descriptions artificial intelligence


ficampeotto dal palu dovier fioretto pontelli

sutherland sketchpad man machine graphical communication system tech
rep lincoln laboratory mit
swedish institute computer science sicstus prolog home page http www
sics se sicstus
thebault p de givry schiex gaspin c combining constraint processing pattern matching describe locate structured motifs genomic
sequences fifth workshop modeling solving constraints
pp
tsai huang yu c lu c music tool multiple sequence
alignment constraints bioinformatics
xiang z soto c honig b evaluating conformal energies colony energy
application loop prediction pnas
xu zhang ab initio protein structure assembly continuous
structure fragments optimized knowledge force field proteins

yang r multiple protein dna sequence alignment constraints international conference practical applications constraint programming
yap r parametric sequence alignment constraints constraints
yap r chuan h constraint logic programming framework constructing
dna restriction maps artificial intelligence medicine
yue k dill k constraint assembly tertiary protein structures
secondary structure elements proteins science
zhang kavraki l method fast accurate derivation
molecular conformations journal chemical information computer sciences

zhang hauser k unbiased scalable sampling protein loop conformations probabilistic priors bmc structural biology appear http
www indiana edu motion slikmc papers bmc zhang pdf
zhou h zhou distance scaled finite ideal gas reference state improves
structure derived potentials mean force structure selection stability prediction protein sci




