journal artificial intelligence

submitted published

protecting moving targets multiple mobile resources
fei fang
albert xin jiang
milind tambe

feifang usc edu
jiangx usc edu
tambe usc edu

university southern california
los angeles ca usa

abstract
recent years stackelberg security games successfully applied solve resource allocation scheduling several security domains however previous
work mostly assumed targets stationary relative defender
attacker leading discrete game finite numbers pure strategies
contrast focuses protecting mobile targets leads continuous set strategies
players motivated several real world domains including protecting ferries escort boats protecting refugee supply lines contributions include
game model multiple mobile defender resources moving targets
discretized strategy space defender continuous strategy space attacker
ii efficient linear programming solution uses compact representation
defenders mixed strategy accurately modeling attackers continuous strategy novel sub interval analysis method iii discussion analysis multiple
heuristic methods equilibrium refinement improve robustness defenders mixed
strategy iv discussion approaches sample actual defender schedules defenders mixed strategy iv detailed experimental analysis ferry
protection domain

introduction
last years game theoretic decision support systems successfully deployed several domains assist security agencies defenders protecting critical infrastructure ports airports air transportation infrastructure tambe gatti
marecki tesauro segal jakob vanek pechoucek decision support systems assist defenders allocating scheduling limited resources
protect targets adversaries particular given limited security resources
possible cover secure target times simultaneously attacker observe defenders daily schedules deterministic schedule defender
exploited attacker paruchuri tambe ordonez kraus kiekintveld
islam kreinovich vorobeychik singh conitzer sandholm
one game theoretic model deployed schedule security resources
domains stackelberg game leader defender follower
attacker model leader commits mixed strategy randomized
schedule specified probability distribution deterministic schedules follower
observes distribution plays best response korzhyk conitzer parr
decision support systems model successfully deployed including
armor lax airport pita jain marecki ordonez portway tambe western
c

ai access foundation rights reserved

fifang jiang tambe

paruchuri kraus iris us federal air marshals service tsai rathi
kiekintveld ordonez tambe protect us coast guard shieh
yang tambe baldwin direnzo maule meyer
previous work game theoretic security assumed stationary
targets airport terminals pita et al targets stationary relative
defender attacker e g trains yin jiang johnson kiekintveld leyton brown
sandholm tambe sullivan planes tsai et al players
move along targets protect attack stationary nature leads
discrete game finite numbers pure strategies focus
security domains defender needs protect mobile set targets
attacker attack targets point time movement leading
continuous set strategies defender deploy set mobile escort resources called
patrollers short protect targets assume game zero sum allow
values targets vary depending locations time defenders
objective schedule mobile escort resources minimize attackers expected utility
call multiple mobile resources protecting moving targets mrmt
first contribution novel game model mrmt called mrmtsg
mrmtsg attacker defender stackelberg game model continuous set strategies attacker contrast defenders strategy space continuous
discretize mrmtsg three reasons firstly let defenders strategy space
continuous space mixed strategies defender would infinite
dimensions makes exact computation infeasible secondly practice patrollers
able fine grained control vehicles makes actual
defenders strategy space effectively discrete one finally discretized defender strategy space subset original continuous defender strategy space optimal
solution calculated formulation feasible solution original game
gives lower bound guarantee defender terms expected utility original continuous game hand discretizing attackers strategy space
highly problematic illustrate later particular deploy
randomized schedule defender assumption attacker could
attack certain discretized time points actual attacker could attack
time point leading possibly worse outcome defender
second contribution cass solver continuous attacker strategies efficient
linear program exactly solve mrmtsg despite discretization defender strategy
space still exponential number pure strategies overcome shortcoming
compactly representing defenders mixed strategies marginal probability variables
attacker side cass exactly efficiently attackers continuous strategy
space sub interval analysis observation given defenders
mixed strategy attackers expected utility piecewise linear function along way
presenting cass present dass solver discretized attacker strategies
finds minimax solutions mrmtsg games constraining attacker attack
discretized time points clarity exposition first derive dass cass
case targets move one dimensional line segment later dass
cass extended case targets move two dimensional space


fiprotecting moving targets multiple mobile resources

third contribution focused equilibrium refinement game multiple
equilibria defender strategy found cass suboptimal respect uncertainties attackers model e g attacker attack certain time
intervals present two heuristic equilibrium refinement approaches game
first route adjust iteratively computes defender strategy dominates earlier strategies second flow adjust linear programming experiments
flow adjust computationally faster route adjust route adjust
effective selecting robust equilibrium strategies
additionally provide several sampling methods generating practical patrol routes
given defender strategy compact representation finally present detailed experimental analyses ferry protection domain cass deployed
us coast guard since april
rest article organized follows section provides statement
section presents mrmtsg model initial formulation dass cass
one dimensional setting section discusses equilibrium refinement followed section
gives generalized formulation dass cass two dimensional settings
section describes sample patrol route section provides experimental
ferry protection domain section discusses related work followed section
provides concluding remarks section discusses future work
end article appendix provides table listing notations used article
appendix b provides detailed calculation finding intersection points
case

statement
one major example practical domains motivating protecting ferries carry passengers many waterside cities packed hundreds
passengers may present attractive targets attacker example attacker
may ram suicide boat packed explosives ferry happened attacks
french supertanker limburg uss cole greenberg chalk willis
case intention attacker detected gets close ferry
small fast well armed patrol boats patrollers provide protection ferries
figure detecting attacker stopping armed weapons however often limited numbers patrol boats e cannot protect ferries
times locations first focus case ferries patrol boats move
one dimensional line segment realistic setting simplifies exposition
discuss two dimensional case section
domain description
l moving targets f f fl assume targets
move along one dimensional domain specifically straight line segment linking two terminal points name b sufficient capture real world domains
ferries moving back forth straight line two terminals
many ports around world example green line shown figure b
provide illustration geometric formulation figure


fifang jiang tambe



b

figure protecting ferries patrol boats b part map york harbor commuter ferry routes straight line linking st george terminal
whitehall terminal indicates public ferry route run york city department transportation

targets fixed daily schedules schedule target described continuous function sq q l index target
continuous time interval e g representing duration typical daily patrol shift
continuous space possible locations normalized corresponding
terminal terminal b thus sq denotes position target fq
specified time assume sq piecewise linear
defender w mobile patrollers move along protect targets
denoted p p pw although capable moving faster targets
maximum speed vm defender attempts protect targets attacker
choose certain time certain target attack rest denote
defender attacker probability attack success depends
positions patrollers time specifically patroller detect try
intercept anything within protection radius cannot detect attacker prior
radius thus patroller protects targets within protective circle radius
centered current position shown figure
















figure example three targets triangles two patrollers squares
protective circles patrollers shown protection radius patroller
protects targets protective circle patroller p protecting f p
protecting f



fiprotecting moving targets multiple mobile resources

symmetrically target protected patrollers whose protective circles cover
attacker attacks protected target probability successful attack
decreasing function number patrollers protecting target formally
use set coefficients cg describe strength protection
definition let g w total number patrollers protecting target fq
e g patrollers fq within radius g patrollers
cg specifies probability patrollers successfully stop attacker
require cg cg g g e patrollers offer better protection
previous work security games tambe yin et al kiekintveld
jain tsai pita ordonez tambe model game stackelberg game
defender commits randomized strategy first attacker respond
strategy patrol schedules domains previously created hand
hence suffer drawbacks hand drawn patrols including lack randomness
particular informed randomness reliance simple patrol patterns tambe
remedy
defender strategy
pure strategy defender designate movement schedule patroller
analogous targets schedule patrollers schedule written continuous
function ru u w index patroller ru must compatible
patrollers velocity range mixed defender strategy randomization
pure strategies denoted f
attacker strategy
attacker conducts surveillance defenders mixed strategy targets schedules may execute pure strategy response attack certain target certain
time attackers pure strategy denoted hq ti q index target
attack time attack
utility function
assume game zero sum attacker performs successful attack target fq
location x time gets positive reward uq x defender gets uq x
otherwise players get utility zero positive reward uq x known function
accounts many factors practice example attacker may effective
attack target stationary terminal point target
motion targets position decided schedule utility function
written uq uq sq assume target fq uq represented
piecewise linear function
equilibrium
since game zero sum strong stackelberg equilibrium calculated finding
minimax maximin strategy fudenberg tirole korzhyk et al


fifang jiang tambe

optimal defender strategy finding strategy minimizes maximum
attackers expected utility
definition single patroller case attacker expected utility attacking target fq
time given defender mixed strategy f
atteuf fq c f fq uq



uq reward successful attack f fq probability patroller
protecting target fq time c protection coefficient single patroller
drop subscript f obvious context c uq constants given
attackers pure strategy hq ti atteu fq purely decided fq definition
multiple patrollers given section denote attackers
maximum expected utility
atteum
f max atteuf fq
q



optimal defender strategy strategy f atteum
f minimized formally
f arg minf atteum
f



assumptions
following assumptions made discussions domain
experts provide justifications assumptions appropriate
current domain application relaxing assumptions future applications remains
issue future work provide initial discussion section
attackers plan decided line e attacker take account
patrollers current partial route partial pure strategy executing attack
assumption similar assumption made applications security games
justified elsewhere kempe kiekintveld shieh singh tambe vorobeychik pita jain ordonez portway tambe western paruchuri kraus
tambe one key consideration given attackers limited
resources well generate execute complex conditional plans
change line observations defenders pure strategy difficult
risky
single attacker assumed instead multiple attackers assumption arises
performing even single attack already costly attacker thus
coordinating attackers time even harder therefore
significantly less likely attacker
game assumed zero sum case objectives defender
attacker direct conflict preventing attack higher potential damage
bigger success defender game


fiprotecting moving targets multiple mobile resources

schedules targets deterministic domains focus potential
delays targets schedules usually within several minutes
targets try catch fixed schedules soon possible therefore
even delays occur deterministic schedule target viewed
good approximation actual schedule


section introduce mrmtsg model uses discretized strategy space
defender continuous strategy space attacker clarity exposition
introduce dass compute minimax solution discretized attacker
strategy space section followed cass attackers continuous strategy space
section first assume single patroller sections
generalize multiple patrollers section
representing defenders strategies
subsection introduce discretized defender strategy space compact
representation used represent defenders mixed strategy compact
representation equivalent intuitive full representation followed several properties
compact representation
since defenders strategy space discretized assume patroller
makes changes finite set time points tm evenly spaced across
original continuous time interval starting time tm normalized
ending time denote distance two adjacent time points tk
tk set small enough target fq schedule sq
utility function uq linear interval tk tk k e
target moving uniform speed utility successful attack changes
linearly intervals thus breakpoint sq uq
q represented tk k integer
addition discretization time discretize line segment ab
targets move along set points dn restrict patroller
located one discretized points di discretized time point tk note
necessarily evenly distributed targets locations restricted tk
time interval tk tk patroller moves constant speed location di
time tk location dj time tk movements compatible speed limit
vm possible points dn ordered distance terminal
refers dn refers b since time interval discretized points
patrollers route ru represented vector ru dru dru dru ru k
indicates index discretized distance point patroller located time
tk
explained section discretized defenders strategy space
computational reasons even clear whether equilibrium exists original
game continuous strategy space players discretization made
practical constraint patrollers


fifang jiang tambe

expository purpose first focus case single defender resource
generalize larger number resources later single defender resource
defenders mixed strategy full representation assigns probability patrol
routes executed since time step patroller choose go
n different locations n possible patrol routes total number
achievable speed limit vm large enough exponentially growing
number routes make analysis full representation intractable
therefore use compact representation defenders mixed strategy
definition compact representation single defender resource compact
way represent defenders mixed strategy flow distribution variables f j k
f j k probability patroller moving di time tk dj time tk
complexity compact representation n much efficient
compared full representation
proposition strategy full representation mapped compact representation
proof sketch h possible patrol routes r r rh mixed defender
strategy represented full representation probability vector p r p rh
p ru probability taking route ru taking route ru means patroller
moves dru k dru k time tk tk edge eru k ru k k taken
route ru chosen total probability taking edge ei j k sum
probabilities routes ru ru k ru k j therefore given
strategy full presentation specified probability vector p r p rh
construct compact representation consisting set flow distribution variables
f j k
x
f j k
p ru

ru ru k ru k j

figure shows simple example illustrating compact representation numbers
edges indicate value f j k use ei j k denote directed edge linking
nodes tk di tk dj example f probability patroller moving
time shown edge e node node
similar compact representation used earlier yin et al
use continuous setting
note different mixed strategies full representation mapped
compact representation table shows two different mixed defender strategies full representations mapped mixed strategy compact representation
shown figure probability route labeled edges route full
representation adding numbers particular edge ei j k routes full
representation together get f j k compact representation
theorem compact representation lead loss solution quality




protecting moving targets multiple mobile resources













figure compact representation x axis shows time intervals axis discretized
distance points one dimensional movement space

r




r




full representation
r
r


r



full representation
r
r

r





table two full representations mapped compact representation
shown figure

proof sketch complete proof theorem relies calculations section
provide sketch recall goal optimal defender
strategy f minimizes maximum attacker expected utility atteum
f
next subsections fq calculated compact representation
f j k two defender strategies full representation mapped
compact representation f j k function
atteu function according equation thus value atteum
f
two defender strategies optimal mixed defender strategy compact representation
still optimal corresponding defender strategies full representation
exploit following properties compact representation
property
forpany time interval tk tk sum flow distribution variables
pn
n
equals

j f j k
property sum flows go particular node equals sum
p flows
go node denote sum node tk di p k p k n
j f j k
pn
j f j k p k equal marginal probability patroller
location di time tk
p
property combining property n
p k


fifang jiang tambe

dass discretized attacker strategies
subsection introduce dass mathematical program efficiently finds minimax solutions mrmtsg games assumption attacker attack
one discretized time points tk need minimize v v
maximum attackers expected utility v maximum atteu fq
target fq discretized time point tk
equation know atteu fq decided fq probability
patroller protecting target fq time given position target sq
define protection range q max sq min sq dn patroller
located within range q distance target patroller
thus patroller protecting fq time fq probability
patroller located within range q time discretized time points
tk patroller located discretized distance point di define
following

definition q k function two values q k di q tk
otherwise q k

words q k means patroller located di time tk protect target fq note value q k calculated directly input
parameters di sq stored look table particular q k
variable formulations follow simply encodes relationship di
location target fq tk probability patroller di time tk
p k
fq tk

x


atteu fq tk

c

q k

p k

x
q k


p k uq tk





equation follows equations expressing attackers expected utility
discretized time points finally must address speed restrictions patroller set
flows corresponding actions achievable zero f j k
dj di vm thus dass formulated linear program linear program

besides speed limit model practical restrictions domain placing constraints
f j k



fiprotecting moving targets multiple mobile resources

solves number targets one defender resource
min

z



f j k p k

f j k

j k



f j k

j k dj di vm



p k

n
x

f j k

k



f j k

k



k



q k



j

p k

n
x
j

n
x

p k



z atteu fq tk

constraint describes probability range constraint describes speed limit constraints describes property constraint exactly property property
derived property listed constraint constraint shows
attacker chooses strategy gives maximal expected utility among
possible attacks discretized time points atteu described equation
cass continuous attacker strategies
subsection generalize one continuous attacker strategy set
provides linear programming solution cass cass efficiently finds optimal
mixed defender strategy assumption attacker attack time
continuous time interval assumption dasss solution quality
guarantee may fail attacker chooses attack tk tk may get
higher expected reward attacking tk tk consider following example
defenders compact strategy tk tk shown figure
defenders strategy three non zero flow variables f k f k
f k indicated set three edges e e k e k e k
target fq moves constant speed tk tk schedule depicted
straight line segment sq dark lines l q l q parallel sq distance
area indicates protection range q time tk tk
consider time points edge e intersects one l q l q label
r r figure intuitively time points defender
qk
patrol could potentially enter leave protection range target simplify


notation denote tk qk
k qk example patroller moving

equivalently taking edge e k protects target qk
qk
distance target less
e k l l qk
qk
r r
equal protection radius consider sub intervals qk
qk
r since within five sub intervals patroller enters leaves


fifang jiang tambe

protection range probability target protected constant
sub interval shown figure
























figure example target moving tk tk pror r patroller protects target
tected sub interval qk
qk
never protects target equivalently target within
protective circle patroller outside circle

suppose uq decreases linearly tk tk c
calculate attackers expected utility function atteu fq tk tk plotted
figure b atteu fq linear sub interval function discontinuous
patroller leaving entering protection
intersection points qk
qk
r left
range target denote limit atteu approaches qk
r
lim atteu fq atteu fq qk


r
tqk

similarly right limit denoted
r
lim atteu fq atteu fq qk


r
tqk


fq target attacker choose attack time immediately qk
getting expected utility arbitrarily close according equation

get atteu fq tk atteu fq tk lower atteu fq qk

thus attacker get higher expected reward attacking tk tk
violating dasss quality guarantee
however discontinuities attackers expected utility function maximum might exist implies minimax solution concept might welldefined game thus define solution concept minimizing supremum
atteu fq



fiprotecting moving targets multiple mobile resources






























probability target protected
constant sub interval











b attackers expected utility linear
sub interval

figure sub interval analysis tk tk example shown figure
definition supremum attackers expected utility smallest real number
greater equal elements infinite set atteu fq denoted
sup atteu fq
supremum least upper bound function atteu fq cass
model equation modified
atteum
f sup atteuf fq



q

defender strategy f minimax atteum
f maximized e
f arg minf sup atteuf fq


example supremum attackers expected utility tk tk atteu fq qk
rest specify supremum used instead maximum easily inferred context
deal possible attacks discretized points
optimal defender strategy generalize process called sub interval analysis
possible edges ei j k make use piecewise linearity atteu fq
fact potential discontinuity points fixed allows us construct
linear program solves optimality name cass
solver continuous attacker strategies
first introduce general sub interval analysis target fq time
interval tk tk calculate time points edges ei j k l q l q intersect
denoted intersection points sort intersection points increasing order denoted
r r

qk
qk
qk total number intersection points set qk tk


qkqk



r r r
tk thus tk tk divided sub intervals qk
qk
qk

lemma given target fq atteu fq piecewise linear furthermore
exists fixed set time points independent defenders mixed strategy
atteu fq linear adjacent pair points specifically points
r defined
intersection points qk


fifang jiang tambe

r r target f feasible edge e
proof sub interval qk
q
j k
qk


totally lq similarly lq otherwise intersection
point contradicts definition sub intervals edge ei j k l q
l q distance patroller taking edge target fq less meaning
target protected patroller edge ei j k taken probability f j k
total probability target protected fq sum f j k whose
corresponding edge ei j k two lines sub interval fq constant
sub interval thus attackers expected utility atteu fq linear
sub interval according equation uq linear tk tk discontinuity
exist intersection points upper bound number points
target fq n
r r
define coefficient arqk j c edge ei j k l q l q qk
qk
otherwise according equation fact fq sum f j k whose
r r
corresponding coefficient arqk j c following equation qk
qk


n x
n
x


atteu fq
arqk j f j k uq
j

piecewise linearity atteu fq means function monotonic sub interval
supremum found intersection points linearity supremum
r r chosen one sided limits endpoints
atteu qk
qk
r

r
atteu fq qk
furthermore uq decreasing tk tk
atteu fq qk
supremum
r
r
otherwise atteu fq qk
words attackers
atteu fq qk
r
r r thus cass
r
strategies qk qk dominated attacking time close qk
qk
adds constraints constraints consider attacks occur tk tk
add one constraint sub interval respect possible supremum value
sub interval

min

z



f j k p k

subject constraints
r

r
z max atteu fq qk
atteu fq qk





k q l r mqk
linear program stands core cass differentiate name
solver name linear program following linear constraints included constraint added cass input
include targets schedules sq protection radius speed limit
vm set discretized time points tk set discretized distance points di
function calint l q l q vm line returns list intersection time points

possible edges ei j k parallel lines l q l q additional points tk qk




r r line returns coefficient
tk qkqk function calcoef l q l q vm qk
qk
r
r
matrix aqk aqk easily decided checking status midpoint time set



fiprotecting moving targets multiple mobile resources

r r denote patrollers position
tmid qk
mid edge ei j k taken
qk
ei j tmid thus arqk j c ei j tmid q tmid lines add constraint respect
r

r
larger value atteu fq qk
atteu fq qk
cass sub interval
r
r
qk qk means attacker chooses attack fq sub interval best
r r
choice decided larger value two side limits atteu qk
qk

add constraints described constraint
input sq vm tk di
k
q l
l q sq l q sq




qk
calint l q l q vm
qk
qk
r mqk
r r
arqk calcoef l q l q vm qk
qk
uq decreasing tk tk
r
add constraint z atteu fq qk

end
else
r
add constraint z atteu fq qk

end
end
end
end

theorem cass computes polynomial time exact solution minimax
game discretized defender strategies continuous attacker strategies
proof according lemma atteu fq piecewise linear discontinuity
r intersection points divide time space
occur intersection points qk
sub intervals piecewise linearity supremum atteu fq equals
limit endpoint least one sub interval defenders strategy f
feasible feasible z linear program less limit values
intersection points according constraint values discretized time points tk
according constraint thus v upper bound atteu fq f z
minimized objective function z greater supremum atteu fq
given defender strategy f z minimum set supremum
corresponding defender strategies thus get optimal defender strategy f
total number variables linear program n number constraints represented n l number intersection points
n target number constraints represented constraints
n thus linear program computes solution polynomial time
corollary solution cass provides feasible defender strategy original
continuous game gives exact expected value strategy


fifang jiang tambe

generalized model multiple defender resources
subsection generalize dass cass solve multiple defender resources multiple patrollers patrollers coordinate
recall protection coefficient cg definition target better protected
patrollers close within radius protection provided
target determined patrollers locations known thus sufficient
calculate probability individual edge taken single patroller case
presence multiple patrollers need complex representation explicitly describe defender strategy illustrate generalization multiple defender
resources case first take two patrollers example two patrollers
patrol strategy represented flow distribution variables f j j k
flow distribution variables defined cartesian product two duplicated sets
feasible edges ei j k f j j k joint probability first patroller
moving di dj second patroller moving di di time tk
tk e taking edge ei j k ei j k respectively corresponding marginal distribution variable p k represents probability first patroller di
second di time tk protection coefficients c c used one two
patrollers protecting target respectively
attackers expected utility written
atteu fq c fq c fq uq
fq probability one patroller protecting target fq time
fq probability patrollers protecting target attacks
happen discretized points tk make use q k definition
q k q k total number patrollers protecting ferry time tk
x
fq tk
p k
q k q k
x
fq tk
p k
q k q k

constraints attacks occurring tk tk calculated
looks main difference coefficient matrix arqk
expression atteu set values coefficient matrix arqk j j c
edges ei j k ei j k l q l q c one edges
r r
protects target attackers expected utility function qk
qk
x
atteu fq
arqk j j f j j k uq
j j

general case w defender resources use f j iw jw k represent patrol strategy
definition compact representation multiple defender resources compact way
represent defenders mixed strategy flow distribution variables f j iw jw k
f j iw jw k joint probability patroller moving diu time tk
dju time tk u w


fiprotecting moving targets multiple mobile resources

given generalized compact representation get following equations calculating attackers expected utility function protection probability


w
x
atteu fq
cq q fq uq
q

q fq tk

x
iw

w
p

p iw k
iu q k q

u

q number patrollers protecting target modify apply
multiple defender resource case set arqk j iw jw cq q edges
eiu ju k l q l q
conclude linear program generalized cass multiple patrollers follows
min

z



f j iw jw k p iw k

f j iw jw k iw j jw u dju diu vm

n
n
x
x
p iw k

f j jw iw k iw k
j

jw

n
x

n
x


p iw k



j

f j iw jw k iw k

jw


n
x




n
x

p iw k k



iw

z atteu fq tk q k
z

r
r
max atteu fq qk
atteu fq qk
k q r




number variables linear program n w number constraints n w reasonable examine potentially efficient alternatives
summarize examination concluding current
linear program would appear currently offer best tradeoff terms solution quality time least current domains application although discussed
significant future work might reveal alternatives approaches future domains
first question examine computational complexity
hand generating optimal patrolling strategies multiple patrollers graph unfortunately despite significant attention paid topic currently complexity remains
unknown specifically question computational complexity generating patrols
multiple defenders graphs different types received significant attention letchford korzhyk et al studies illustrate several cases
np hard cases known polynomial time despite significant effort complexity many cases remains unknown letchford conitzer


fifang jiang tambe

unfortunately graph turns different cases considered
work indeed dass model explained game homogeneous defender
resources patrolling graph similar cases already considered
however prior cannot explain complexity game structure
graph fit prior graphs
given computational complexity directly available may examine
approaches provide efficient approximations provide overview two
approaches providing experimental section first attempts
provide compact representation hope providing speedup end
apply intuitive uses individual strategy profile patroller
calculates best possible mixed strategy combination unfortunately
inefficient run time even dass model may suboptimal solution
thus although compact fails achieve goal explain
next
assume patroller independently follows mixed strategy denote individual mixed strategy patroller u fu iu ju tk probability target
protected q players represented polynomial expression fu iu ju tk
order q optimization converted minimizing objective function z
non linear constraints assume two patrollers potential attack
target q time tk denote probability patroller u protecting target
u u linear fu attackers expected utility attack represented

atteu fq tk c c uq tk
constraint z atteu fq tk quadratic f due fact joint probability
represented product individual probability patroller constraints ensured convex feasible region known polynomial
solving kind non convex optimization attempt solve
converting mathematical program non convex objective function linear constraints e instead minimizing z constraints z atteu fq tk
incorporate constraints objective function
z max atteu fq tk
q k



section solve mathematical program matlab function fmincon interior point method dass model
fails get feasible solution efficiently even enough time given solution
still suboptimal may get stuck local minimum conclude although
compact helps saving memory inefficient run time may
loss solution quality
second takes step reduce run time complexity making
polynomial approximation lead high degradation solution quality iteratively compute optimal defender strategy
newly added resource unit given existing strategies previous defender resources
namely first calculate f j tk one patroller available calculate


fiprotecting moving targets multiple mobile resources

f j tk given value f j tk way need solve w linear programs
complexity n much faster compared former one unfortunately fails capture coordination patrollers effectively
thus may high degradation solution quality example suppose
two targets constant utility u one target stays terminal one
stays terminal b suppose protection coefficient target
protected one patrollers two patrollers available optimal solution would protect one targets way targets protected
probability expected utility function attacker defender
strategy calculated patroller sequentially discussed solution would
protect target probability players making attackers expected
utility u words reach suboptimal solution wasting resources
patrollers end protecting target probability case
already see probability target unprotected clearly
optimal solution existed protected targets probability thus even
two patrollers solution leads potentially significant loss expected utility
therefore solution clearly appears inadequate purposes
given discussion would appear fast approximation may lead
significant losses solution quality may efficient enough fortunately current
application domains current deployment cass protecting ferries e g
staten island ferry york number defender resources limited
lack resources main reason optimization security games becomes critical
current cass adequate current domains ferry
protection scale issue future work

equilibrium refinement
game often multiple equilibria since game zero sum equilibria achieve
objective value however attacker deviates best response
equilibrium strategies defender may provide better others
consider following example game two targets moving
discretization one moves moves see
figure suppose one patroller
available protection coefficient c targets utility functions decrease
see figure b one equilibrium f f e
patroller randomly chooses one target follows way another equilibrium
f f e patroller stays equilibrium
attackers best response attack maximum expected utility
however attacker physically constrained e g due launch point locations
attack earlier intersection time point
defender strategies choose attack
targets attackers expected utility uq first equilibrium
probability patroller following target however second
equilibrium assured succeed get utility uq distance
chosen target larger e chosen target unprotected


fifang jiang tambe

case defender strategy first equilibrium preferable one
second indeed first defender strategy dominates second one mean
first equally good better second matter strategy attacker
chooses provide formal definition dominance section






























two targets moves schedules








b utility function
targets decreasing linearly
time

figure example one equilibrium outperforms another attacker
constrained attack
goal improve defender strategy robust constrained
attackers keeping defenders expected utility unconstrained attackers
task selecting one multiple equilibria game instance
equilibrium refinement received extensive study game theory
van damme fudenberg tirole miltersen srensen finite
security games tambe ordonez shieh kiekintveld proposed techniques
provide refinement stackelberg equilibrium however little prior
computation equilibrium refinements continuous games
section introduce two equilibrium refinement approaches route adjust
section flow adjust section approaches applied improve
feasible defender strategy applied optimal defender strategy
existing equilibrium get equilibria robust optimal defender
strategies
expository simplicity still use single resource case example
methods applicable multiple resources case shown evaluation
section experimentally illustrates two refinement methods significantly improve
performance
route adjust
given f defender strategy one equilibrium game defender
strategy f attacker strategy q defenders expected utility
f equal higher one f one f strictly higher
one f least one specific attacker strategy say f dominates f
intuitively defender choose f instead f f least good f


fiprotecting moving targets multiple mobile resources

attacker strategy achieve better performance attacker strategies
equilibrium strategy f robust unknown deviations attacker side
give formal definition dominance follows
definition defender strategy f dominates f q defeuf fq defeuf fq
q defeuf fq defeuf fq equivalently zero sum game q
atteuf fq atteuf fq q atteuf fq atteuf fq
corollary defender strategy f dominates f q fq fq q
fq fq
definition simply restates commonly used weak dominance definition game
theory specific game corollary follows equation
section introduce route adjust gives procedure
finding defender strategy f dominates given defender strategy f route adjust
provides final routes steps decompose flow distribution f component
routes ii route greedily route provides better protection targets
iii combine resulting routes flow distribution f dominates f
f different f detailed process listed illustrate
simple dominated strategy shown figure
accomplish step decompose flow distribution iteratively finding route
contains edge minimum probability shown figure first randomly
choose route contains edge e f minimum among flow
variables choose r set p r f
edge route r subtract original flow resulting residual flow
continue extract routes residual flow route left denote z
number non zero edges flow distribution graph z decreased least
iteration terminate z steps z
routes found step sparse description defender mixed strategy
full representation discuss section decomposition constitutes one
method executing compact strategy
step ii adjust routes greedily end first introduce
r coefficient
dominance relation edges routes intersection points qk
r
matrix aqk j defined section
definition edge ei j k dominates edge ei j k tk tk arqk j arqk j
q l r mqk q r arqk j arqk j
dominance relation edges comparison protection provided
targets sub interval following dominance relation routes denote
edge eru k ru k k e u k simplify notation
definition route ru dru dru dominates ru dru dru
k e u k e u k e u k dominates e u k k e u k
dominates e u k
route ru dominates ru edge ru dominates
corresponding edge ru least one edge ru dominates corresponding edge
ru


fifang jiang tambe

route adjust
input mixed defender strategy f
output updated mixed defender strategy f
decompose f multiple routes iteratively finding route contains
edge minimum probability
initialize remaining flow distribution f f route set
initialize probability distribution routes p ru u
b max f j k
set j k arg mini j k f j k f j k
ii set fmin f j k
iii arbitrary route ru ru k ru k
j e edge ei j k route f ru k ru k k
k e edges route non zero remaining flow
iv add ru set p ru fmin
v set f j k f j k fmin ru k ru k j
end
ii adjust route greedily get set routes corresponding probability distribution p
initialize set probability distribution p ru
u
b
pick route ru
ii adjust ru get route ru given ru specified
k set ru k ru k k k set ru k
e u k e u k meet speed constraint ru dominates ru choice ru dominated route
choice exists set ru k ru k
iii add ru set p ru p ru
iv remove ru
end
iii reconstruct compact representation f p according
equation



fiprotecting moving targets multiple mobile resources


p r


p r







































p r
















figure step decomposition every time route containing minimal flow variable
subtracted residual graph left decomposition original flow distribution thus decomposed three routes r r r
probability respectively

denote original route adjusted ru route ru greedy
way improve route replace one node route want replace
node time tk ru k ru k k k dru k original
route replaced dru k patrollers route changes tk tk thus
edges e u k e u k original route replaced e u k
e u k route
trying route ru dominates original route provide equal
protection targets selection ru k needs meet requirements
specified first one describes speed limit constraint second
one actually requires changed edges e u k e u k equal
dominate corresponding edges original route dominance relation exist
least one edge third requirement attains local maximum node
exist specified k return original route ru
iterate process route get final route denoted ru
several iterations state convergence reached state convergence
reached resulting route ru keeps unchanged matter k chosen
next iteration
example figure assume targets moving schedule
utility function constant adjust route
one iteration changing patrollers position time e ru
last discretized time point edge e u may changed r
enumerate possible patrollers positions time choose one according
three constraints mentioned case candidates
corresponding routes r unchanged r respectively note
edge ed dominates ed former one protects target way
thus r dominates r chosen patrollers position r


fifang jiang tambe

chosen route adjustment routes non zero probability
decomposition shown table
ru
r
r
r

p ru decomposition




adjusted routes
r
r
r

table step ii adjust route greedily

r
r
r
r

ru





p ru adjustment





composed flow distribution









table step iii compose compact representation
routes get step ii original routes dominate
original routes whenever route ru chosen according defender mixed
strategy resulting step equally good better choose corresponding route ru instead ru provides equal protection
targets ru suppose h possible routes defender strategy step
denoted r rh adjusting routes get defender strategy
p r p r p rh full representation see table routes taken
higher probability e g p r lower probability
e g p r compared original strategy step iii reconstruct
compact representation according equation accomplished via process
inverse decomposition exactly map strategy full
representation compact representation example shown
table
theorem steps iii get defender strategy f dominates
original one f f different f
proof continue use notation decomposition step yields
routes r rh flow distribution variable original distribution f j k
decomposed h sub flows fu j k according route decomposition fu j k
p ru ru k j ru k fu j k otherwise thus following
equation
xh
f j k
f j k

u u
x

fu j k

u ru k ru k j

adjust route separately non zero sub flow fu j k edge e u k moved
edge e u k route ru adjusted ru reconstructing flow distribution f


fiprotecting moving targets multiple mobile resources

regarded adding sub flows adjustment together edge
means f composed set sub flows adjustment denoted fu j k
subscript u represents index original route indicate moved
edge e u k fu j k fu ru k ru k k ru k j ru k
otherwise fu j k similarly equation following equation f
f j k


xh

f j k
u u

x
u ru k ru k j


fu j k



adjustment made ru dominates ru thus e u k
dominates e u k edge e u k protects target fq time
corresponding edge e u k adjustment protects target fq time
recall section fq sum f j k whose corresponding edge
ei j k protect target fq time denote fq fq probabilities protection corresponding f f respectively according equation
fq viewed sum non zero sub flows fu j k corresponding e u k protects target fq time fu j k term summation
calculate fq means e u k protects fq thus corresponding e u k
protects fq corresponding sub flow fu ru k ru k k f term
summation calculate fq leads conclusion fq fq note
q fq fq routes kept unchanged step ii otherwise
contradicts fact route dominates original route according
corollary f dominates f different f
example figure f decomposed two non zero terms f
f along routes r r see figure adjustment
get corresponding subflows f f recall targets
schedule flow distribution adjustment see table gives
protection target since flow equal therefore
protection overall strategy dominates old strategy
therefore apply route adjust optimal defender strategy calculated cass
get robust equilibrium step iii allows us prove theorem notice
end step ii probability distribution set routes
sample actual patrol routes two defender resources generalized
version definition used define dominance relation edge tuple
ei j k eiw jw k coefficient matrix multiple patrollers arqk j iw jw
ways adjust route instead adjusting one node
route adjust consecutive nodes time example adjust
ru k ru k checking edges e u k e u k e u k however
need tradeoff performance efficiency tradeoff
discussed section
flow adjust
whereas route adjust tries select equilibrium robust attackers playing
suboptimal strategies second flow adjust attempts select equilibri

fifang jiang tambe

um robust rational attackers constrained attack time interval tk tk discuss flow adjust focuses weaker form dominance
implies larger set strategies dominated thus could potentially
eliminated compared standard notion dominance used route adjust however flow adjust guarantee elimination dominated strategies
denote defeukf defender expected utility attacker constrained attack
time interval tk tk attacker provides best response given defender strategy f formally defeukf minq l tk tk defeuf fq give
following definition local dominance
definition defender strategy f locally dominates f defeukf defeukf k
corollary defender strategy f locally dominates f
min
q l tk tk

defeuf fq

min
q l tk tk

defeuf fq k

equivalently zero sum game
max
q l tk tk

atteuf fq

max
q l tk tk

atteuf fq k

corollary follows fact attacker plays best response given
defender strategy means f locally dominates f maximum attacker
expected utilities time interval tk tk given f greater f
compared definition gives standard condition dominance local
dominance weaker condition f dominates f f locally dominates f
however converse necessarily true intuitively whereas definition attacker
play possibly suboptimal strategy attackers possible deviations
best response restricted set locally dominated strategies
includes set dominated strategies definition f locally dominates f
attacker rational e still playing best response constrained attack
time interval tk tk f preferable f defender corollary
even rational attacker constrained attack union
intervals f still preferable f f locally dominates f one intuition local
dominance concept following suppose suspect attacker restricted
unknown subset time due logistical constraints logistical constraints
would likely make restricted time subset contiguous union small number
contiguous sets since sets well approximated unions intervals tk tk
local dominance serve approximate notion dominance respect
attackers
flow adjust looks defender strategy f locally dominates original defender
strategy f achieve simply adjust flow distribution variables f j k
keeping marginal probabilities p k figure shows example game
two discretized intervals first interval shown suppose
maximal attacker expected utility u equilibrium attained second
dont require exists least one k defeukf defeukf



fiprotecting moving targets multiple mobile resources

interval attackers utility success constant u first interval
defender strategy could arbitrarily chosen attackers
expected utility worst case smaller attackers best response
however attacker constrained attack defender strategy
first interval make difference example one target moving
schedule ferry shown dark lines parallel
lines l l respect protection radius shown dashed
lines marginal distribution probabilities p k protection coefficient
c f defenders strategy taking edges e e probability
attackers maximum expected utility u achieved around time
neither two edges e e within targets protection
range adjust flows edge e e shown figure b attackers
maximum expected utility reduced u edge e within targets
protection range way rational attacker constrained attack
get lower expected utility given defender strategy f given f thus
equilibrium f robust kind deviation attacker side




















f patroller taking
edges e e
probability










b f patroller taking
edges e e
probability

figure example flow adjust rational attacker constrained attack
choose attack around time get utility u given f
attack around get utility u given f

flow adjust construct linear programs one time interval
tk tk k set flow distribution probabilities f j k
achieve lowest local maximum tk tk unchanged p k p k


fifang jiang tambe

linear program interval tk tk shown
min v

f j k

f j k dj di vm
n
x

p k
f j k n
j

p k

n
x

f j k n

j

v atteu fq tk q l k k k
r

r
v max atteu fq qk
atteu fq qk



q l r mqk
linear program appears similar linear program cass
significant differences unlike cass marginal probabilities p k known
constants provided input mentioned separate program
tk tk thus get f j k local maximum tk tk
minimized denote minimum vk original flow distribution f get
atteuf fq denote original local maximum value tk tk vk
subset f j k original flow distribution f feasible solution linear
program vk vk noting equality happens interval
attackers best response chosen
note change made f j k interval tk tk affect
performance f intervals marginal probabilities p k kept
e changing f j k linear program independent change
f j k k k solve linear programs independently
calculating f j k k get defender strategy f
combining solutions f j k different linear programs together vk vk

max
q l tk tk

atteuf fq

max
q l tk tk

atteuf fq

k e f locally dominates f
hand restricted strategies p k
may exist another strategy f different set p k locally dominates f
finding locally dominating strategies different p k original topic
future
although two refinement approaches provide necessarily lead nondominated strategy corresponding dominance definition two approaches
guaranteed robust least indifferent equilibrium faced
constrained attackers compared original equilibrium obtain cass clearly
two refinement approaches exhaust space refinement approaches
refinement approaches possible may lead equilibria better


fiprotecting moving targets multiple mobile resources

e g dominate one found cass however likely different defender
strategies resulting different equilibrium refinements comparable
terms dominance e constrained attackers one equilibrium might turn
better constrained attackers another equilibrium might better
computational costs may differ well thus understanding space refinement
approaches terms computational cost output quality determining
adopted circumstances important challenge future
work

extension two dimensional space
dass cass presented section assumption
targets patrollers move along straight line however complex model
needed practical domains example figure shows part route map
washington state ferries several ferry trajectories number patroller
boats tasked protect ferries area necessarily optimal simply
assign ferry trajectory patroller boat calculate patrolling strategies
separately according cass described section ferry trajectories close
patrolling strategy take account ferries area
much efficient e g patroller protect ferry moving seattle bremerton
first change direction halfway protect another ferry moving bainbridge
island back seattle

figure part route map washington state ferries
section extend previous model complex case targets patrollers move two dimensional space provide corresponding linearprogram solution use single defender resource example generalize multiple defenders end section
defender strategy
one dimensional case need discretize time space defender
calculate defenders optimal strategy time interval discretized set
time points tk let g v e represents graph set vertices v
corresponds locations patrollers may discretized time points
e set feasible edges patrollers take edge e e satisfies


fifang jiang tambe

maximum speed limit patroller possibly practical constraints e g small
island may block edges
dass
attack occurs discretized time points linear program dass
described section applied two dimensional settings distance
constraint substituted euclidean distance space nodes vi vj
min

v



f j k p k

f j k j k



f j k j k vj vi vm



p k

n
x

f j k k



f j k k



j

p k

n
x
j

n
x

p k k





v atteu fq tk q k



note f j k represents probability patroller moving node vi
vj tk tk recall figure patroller protects targets within protective
circle radius however one dimensional space care straight
line ab used q max sq min sq dn protection
range target fq time essence line segment contrast whole
circle needs considered protection range two dimensional space
extended protection range written q v x v sq
change affects value q k thus value atteu fq tk constraint
cass
attacking time chosen continuous time interval need
analyze similar way section protection radius
means patrollers located within circle whose origin sq radius
protect target fq assume target change speed direction
time tk tk circle move along line space track
circle space x axes indicate position z axis
time get oblique cylinder similar cylinder except top
bottom surfaces displaced see figure patroller moves
vertex vi v vertex vj time tk tk protects target
within surface space described patrollers movement
represented straight line


fiprotecting moving targets multiple mobile resources







v



v









r

figure illustration calculation intersection points two dimensional
setting x axes indicates position z axis
time simplify illustration z axis starts time tk example
two intersection points occurring time points ta tb

intuitively two intersection points patrollers route
space surface proved analytically calculating exact
time intersection points assume patroller moving v x
v x target moving sq tk x sq tk x
tk tk illustration shown figure get time intersection points
solve quadratic equation coordination parameters protection radius
present detailed calculation appendix b root quadratic equation
within interval tk tk indicates patrollers route intersects
surface time point two intersection points
intersection points analysis section applies claim
lemma conclude need consider attackers strategies
r one dimensional case denote
intersection points use notation qk
sorted intersection points get following linear program case
min

v



f j k p k

subject constraints
r

r
v max atteu fq qk
atteu fq qk





k q l r mqk
still used add constraints linear program cass
case main difference compared cass case since euclidean
distance used constraint need use extended definition q
deciding entries coefficient matrix arqk j
multiple defender resources linear program described section applicable extended definition q used calculate atteu constraint


fifang jiang tambe

substituted following constraint
f j iw jw k iw j jw u kvju viu k vm

route sampling
discussed generate optimal defender strategy compact representation however defender strategy executed taking complete route
need sample complete route compact representation section
give two methods sampling corresponding defender strategy full
representation methods applied
first method convert strategy compact representation markov
strategy markov strategy setting defender strategy patrollers
movement tk tk depends location patroller tk denote
j k conditional probability moving di dj time tk tk given
patroller located di time tk words j k represents chance
taking edge ei j k given patroller already located node tk di thus given
compact defender strategy specified f j k p k
j k f j k p k p k



j k arbitrary number p k get sampled route first
determining start patrolling according p tk randomly choose
go tk tk according conditional probability distribution j k
distribution sampling procedure matches given marginal variables
edge ei j k sampled probability p k j k f j k sampling method
actually leads full representation route ru dru dru dru sampled
q
probability p ru
k ru k ru k k product probability
initial distribution probability taking step method intuitively
straightforward patrol route decided online patrol e
position patroller tk decided patroller reaches position tk
makes defender strategy unpredictable downside method
number routes chosen non zero probability high n
case patroller located node vi time tk sampling process exactly
j k used denote probability moving vi vj
tk tk
second method sampling decomposition process mentioned
section step discussed first sampling method sampling
essentially restoring full representation compact representation shown
table multiple ways assign probabilities different routes decomposition process route adjust constructively defines one make use
information get process sample route according probability
assigned decomposed route number routes chosen non zero probability
n much less first method thus becomes feasible describe
strategy full representation providing routes chosen positive probability different sampling approaches may necessitated different application


fiprotecting moving targets multiple mobile resources

requirements applications might require defender obtain strategy full
representation presented small number pure strategies however
applications strategy decided line potentially hand held smartphone luber yin fave jiang tambe sullivan may preferred
therefore needs application different sampling strategies might
selected

evaluation
use different settings ferry protection domain compare performance
terms attackers expected utility atteu fq zero sum game lower
value atteu indicates higher value defenders expected utility
run experiments setting evaluate performance
cass sampling evaluate improvement two
refinement approaches section shows setting section
setting
experiments one dimensional setting
setting first evaluate performance solvers much
performance improved refinement methods sampled
routes example setting evaluate cass varying number patrollers
experimental settings
used following setting experiments one dimensional case complex
spatio temporal game rather discrete security game previous work
three ferries moving terminals b total distance ab
simulation time minutes schedules ferries shown figure
x axis indicates time axis distance terminal ferry
ferry moving b ferry moving b maximum speed
patrollers vm min protection radius experiments
one dimensional case patrollers c c except
section report experiments different numbers patrollers

distance








ferry
ferry
ferry



time





figure schedules ferries



fifang jiang tambe

performance solvers
compare strategies calculated cass dass baseline strategy
baseline strategy two patrollers choose ferry probability uniformly
random move alongside offer full protection leaving two unprotected
strategy observed practice first wished stress test cass complex
utility functions realistic case follows therefore tested different
discretization levels details discretization levels included table random
utilities discretization level created instances
instances different across levels ferry protection domain utility function
ferry usually depends ferrys position instance utilities uniformly
randomly chosen discretized distance points example shown
figure chosen discretization levels ensured uq linear
time interval tk tk target fq figure x axis indicates distance
terminal axis indicates utility successful attack ferry located
distance figure b x axis plots four discretization levels axis plots
average attacker expected utility plays best response instances baseline
dass cass cass shown outperform dass baseline differences
statistically significant p note different sets instances generated
different discretization levels cannot compare across levels directly
however helpful better understanding figure
solution quality dass varies lot sometimes worse naive strategy
e g level dass calculates optimal solution considers
attacks discretized time points figure b solution quality measured
atteu calculated maximum continuous attacker strategy set
gap optimal objective function dass actual atteu given
optimal solution dass may vary different strategies different discretization levels
another interesting observation average solution quality cass almost
discretization levels despite difference instance sets implies
improvement finer discretization may limited cass
level





minutes

















n





table details discretization levels experiments mentioned section
distance space evenly discretized parameterized di di

next turn realistic utility function ferry domain u shape
inverse u shape figure shows sample utility curve attacker gains
higher utility closer shore fix utility shore vary utility
middle denoted umid value floor u shape top
inverse u shape evaluate strategies figure b umid shown x axis


fiprotecting moving targets multiple mobile resources



ave atteum

u utility









distance



randomized attacker utility function

naive
dass
cass






level level level level

b average solution quality different
strategies

figure performance different randomized utility function settings utility
function set experiments function distance terminal
utility function piece wise linear value discretized distance
points di chosen randomly


sup atteu

u utility








distance







realistic attacker utility function
umid



naive
dass
cass




umid





b solution quality different strategies

figure performance different realistic utility function settings utility function u shape inverse u shape utility around distance denoted
umid compare defender strategy given dass cass
baseline umid changing

compare performance strategies terms attackers expected utility
plays best response axis conclude strategy calculated cass
outperforms baseline dass dass may actually achieve worse
baseline
among different experiment settings discretization utility function
choose one instance provide detailed analysis refer instance
example setting following section example setting discretization
level used utility curve shown figure parameters involved
described section figure compares attacker expected utility function
dass cass used respectively x axis indicates time axis
indicates attackers expected utility attacks ferry time strategy calculated dass worst performance discretized time points atteu f
however supremum atteu f high atteu f


fifang jiang tambe



atteu







dass
cass


time



figure attackers expected utility function given defender strategy calculated
dass vs cass example setting expected utilities discretized
time points indicated squares cass dots dass maximum
atteu cass less maximum atteu
dass

experimentally shows taking consideration attacks discretized time points necessary strategy calculated cass supremum
atteu f reduced
improvement refinement methods
compare refinement approaches described section analyze tradeoff
performance improvement runtime three approaches considered comparison route adjust flow adjust variation route adjust denoted route adjust
step ii route adjust replace every node route one one sequence
step ii route adjust replace every consecutive pair nodes route sequence
first example setting figure compare atteu fq
function defender strategy given cass one route adjust ferry
shows attack aiming target time defender strategy
route adjust refinement equally good better one original equilibrium
thus defender performs equally better matter attacker constrained
time e defender strategy route adjust dominates original strategy figure
b comparison atteu function defender strategy route adjust
one route adjust ferry one route adjust dominate
one route adjust overall former appears perform better latter
frequently larger amounts use average value atteu function
metric performance route adjust better route adjust
example setting later table figure c shows comparison atteu
function defender strategy given cass defender strategy
supplementary experiments tested route adjust iterations e g repeating
process replacing every node sequence five times extra benefit insignificant
runtime increases proportionally number iterations light choose replace
node experiments reported article











atteu

atteu

protecting moving targets multiple mobile resources



cass
routeadjust






time









atteu function ferry
route adjust one node time

routeadjust
routeadjust


time





b atteu function ferry
route adjust two nodes time

atteu







cass
flowadjust


time





c performance flow adjust

figure performance equilibrium refinement approaches
flow adjust ferry strategy given cass dominated one
flow adjust definition investigate maximum atteu time
interval tk tk shown table defender strategy flow adjust
locally dominates original strategy
list worst case performance average performance atteu function
ferries example setting four defender strategies cass route adjust routeadjust flow adjust table conclude worst case performance
strategies flow adjust means defender achieves exactly
expected utility towards unconstrained rational attacker average performance
flow adjust slightly better cass outperformed route adjust
route adjust takes much less time run compared two
example setting adjust two consecutive nodes time performance better
adjusting one node time difference significant much
expensive terms run time
strategies
cass
route adjust
route adjust
flow adjust

worst case performance





average performance





runtime minutes




table comparison different refinement approaches terms average performance
runtime runtime refinement process calculated



fifang jiang tambe

time interval tk tk








maximum









maximum









time interval tk tk








maximum









maximum









table maximum attackers expected utility time interval decreases
flow adjust used

figure figure b shows maximum average improvement
route adjust route adjust flow adjust averaged instances level
randomized utilities used figure b figure c shows
average runtime maximum improvement largest difference atteu
function given defender strategy calculated cass one refinement
average improvement average difference two functions standard
deviations instances shown error bars figure confirms refinement approaches improve defender strategy calculated cass terms
maximum performance average performance thus provide better defender strategies given possible constrained attackers route adjust achieves improvement
route adjust flow adjust least flow adjust achieves much less improvement
compared two approaches one explanation constraints
strong require marginal probabilities unchanged likely
little changes made original defender strategy difference routeadjust route adjust significant terms run time flow adjust least
expensive route adjust second route adjust route adjust significantly expensive compared two conclude route adjust
better choice considering tradeoff improvement runtime
sampled routes
first convert defender strategy example setting markov strategy
sample pair patrol routes defender strategy used one
route adjust sample pair routes chosen step step two patrol
boats according joint conditional probability distribution j j k
routes two patrol routes chosen simultaneously coordinating
cannot pair separately samples instead figure
shows frequency taken samples edge x axis
indicates time axis distance terminal width edge
indicates frequency chosen least one patroller although figure
precisely depict samples provides rough view routes taken
patrol boats


fiprotecting moving targets multiple mobile resources



routeadjust
routeadjust
flowadjust



ave improvement

max improvement







routeadjust
routeadjust
flowadjust








runtime minutes

average maximal improvement

b average average improvement
routeadjust
routeadjust
flowadjust







c average runtime

figure comparison refinement approaches

figure b shows pair routes highest probability use
decomposition method sampling solid lines patrol boats routes
dashed lines ferries schedules get different pair patrol routes total
decomposition process shown pair routes chosen probability



distance

distance




























time

patrol boat
patrol boat















time



b

figure sampling example setting frequency edge
chosen first sampling method markov strategy used b
decomposed routes highest probability superimposed ferry schedules
second sampling method decomposition used



fiattacker eu




log runtime seconds

fang jiang tambe

patroller
patrollers
patrollers
patrollers










attacker eu



b runtime level
log runtime seconds

solution quality level


patroller
patrollers
patrollers
patrollers



patroller
patrollers
patrollers






c solution quality level




patroller
patrollers
patrollers






runtime level

figure performance varying number patrollers

number patrollers
figure shows improvement performance cass increasing number
patrollers discretization level x axis shows number patrollers
axis indicates average attackers maximal expected utility e expected reward
plays best response averaged random utility settings
discretization level fewer patrollers performance defender varies lot
depending randomized utility function indicated standard deviation shown
error bar variance gets much smaller patrollers means
defender sufficient resources different instances figure b shows run time
cass axis indicates average natural logarithm runtime surprisingly
run time increases number patrollers increases
figure c average performance run time cass discretization level set utility settings used level
patrollers shown program runs memory patrollers
n flow distribution variables least n constraints note
average solution quality level better level e g
average attacker eu patroller level level indicates
higher level granularity improve solution quality however granularity clearly
affect ability scale means need consider tradeoff
solution quality memory used one way combat scaling
reduce level granularity nonetheless number patrollers encountered
real world scenarios york order cass capable
least key real world scenarios


fiprotecting moving targets multiple mobile resources

approximation multiple defender resources
tested first approximation multiple defender resources described
section example setting used fmincon function interior point
method matlab minimize non linear objective function equation table
lists different run time value objective function achieved given different
iteration number denoted maxiter function ensured provide feasible
solution iteration number large enough shown first two rows
compared lp formulation dass implemented
matlab linprog function dass solved within seconds provides
optimal solution atteum approximation outperformed
run time efficiency solution quality fails provide feasible solution
efficiently even sufficient time given times run time
lp formulation maximum attacker expected utility larger optimal
solution mainly formulation approximation
longer linear convex making difficult global maximum
axiter




run time sec




atteum
infeasible
infeasible


table performance approximation

experiments two dimensional setting
settings space complex even single patroller
example setting motivated ferry system seattle bainbridge island
bremerton shown figure example setting three terminals denoted b
c non collinear space shown figure ferry ferry
moving trajectory terminal b c denoted trajectory
ferry ferry moving trajectory terminal b denoted
trajectory schedules four ferries shown figure b x axis
time axis distance common terminal b ferry moves
c b ferry moves b c ferry moves b ferry moves
b similar one dimensional scenario ferry domain assume utility
decided ferrys position utility function shown figure c
x axis distance common terminal b axis utility two
trajectories respectively space discretized grid shown figure
x indicating interval x axis axis patroller
located one intersection points grid graph discretized time points
simulation time minutes e tk tk minutes speed limit
patroller available edges patroller take
tk tk shown figure one patroller involved protection radius
set protection coefficient c


fifang jiang tambe

c





distance terminal b

terminals
trajectory
b



trajectory











x

ferry schedules










edges available


ferry trajectory
ferry trajectory





utility



b ferry schedules

utility function




time

three terminals


ferry
ferry
ferry
ferry





























x

distance terminal b
c utility function

available edges

figure example setting two dimensional space
figure compares performance dass cass ferry ferry chosen
strategies attackers best response attack ferry x axis
time axis attacker expected utility attacking ferry time
maximum atteu cass lower compared dass
figure b c two sampled route given strategy calculated
cass map dashed lines represents ferry trajectories
patroller starts node text start follows arrowed route ends
node text end end patrol may stay nodes text
stay patrol routes shown intuitive way ambiguous exact
route listed table time position routes sampled
converted markov strategy total number patrol routes may chosen
non zero probability

related work
section discuss literature related work first discuss work
computation game theoretic patrolling strategies discuss work continuous
games finally discuss work equilibrium refinement
mentioned introduction stackelberg games widely applied security domains although work considered static targets e g korzhyk
et al krause roper golovin letchford vorobeychik kiekintveld


fiprotecting moving targets multiple mobile resources

sampled route cass



stay




atteu






stay
staystart
end



dass
cass







time











x

solution quality dassand cass
ferry

b sampled route superimposed ferry
trajectories

sampled route cass
staystart





stay
end












x
c sampled route superimposed ferry
trajectories

figure experimental two dimensional settings

et al agmon kraus kaminka proposed computing
mixed strategies setting perimeter patrol adversarial settings mobile robot
patrollers similarly basilico gatti amigoni computed randomized leader strategies robotic patrolling environments arbitrary topologies even
players mobile e g hider seeker games halvorson conitzer parr
infiltration games alpern search games gal targets assumed static tsai et al applied stackelberg games domain scheduling
federal air marshals board flights targets e flights domain mobile
players restricted move along targets protect attack
stationary nature leads discrete game finite numbers pure strategies
bosansky lisy jakob pechoucek vanek jakob hrstka pechoucek
studied protecting moving targets however considered
model defender attacker targets discretized movements
directed graph discretization attacker strategy spaces introduce suboptimality
solutions shown dass work generalize strategy space attacker continuous realm compute optimal strategies even
setting furthermore provide efficient scalable linear formulation
bosansky et al presented formulation non linear constraints faced
scaling larger games even single defender resource


fifang jiang tambe

yin et al considered domain patrolling public transit networks
la metro subway train system order catch fare evaders players
ride along trains follow fixed schedule domain inherently discrete
modeled patrolling finite zero sum bayesian game yin et al proposed
compact representation defender mixed strategies flows network adapt
compact representation idea continuous domain particular domain need
model interaction defenders flow attackers continuous strategy
space proposed sub interval analysis used spatio temporal reasoning efficiently
reduce finite lp
games continuous strategy spaces well studied game theory much
economics literature focused games whose equilibria solved analytically
thus question computation arise example classical theory
auctions see e g krishna recent computational approaches analysis
design auctions focused discretized versions auction games e g
thompson leyton brown daskalakis weinberg
efficiently solving two player continuous games specific types utility functions
zero sum games convex concave utility functions owen separable
continuous games polynomial utility functions stein ozdaglar parrilo
johnson fang tambe studied continuous game model protecting forests
illegal logging model target e forest stationary
simplifying assumptions e g forest circular shape able solve
game efficiently contrast existing work game model moving targets
continuous domain resulting utility functions discontinuous thus existing
approaches applicable cass solves game optimally without
needing discretize attackers strategy space
extensive literature equilibrium refinement however existing work
computation equilibrium refinement focuses finite games simultaneousmove finite games solution concepts perfect equilibrium proper equilibrium
proposed refinements nash equilibrium fudenberg tirole miltersen
srensen proposed efficient computing proper equilibria finite zero sum games finite security games et al proposed refinement
stackelberg equilibrium techniques computing refinements resulting
defender strategy robust possibilities constrained capabilities attacker
existing approaches rely finiteness action sets thus applicable
setting simon stinchcombe proposed definitions perfect equilibrium
proper equilibrium infinite games continuous strategy sets however
propose computational procedure resulting solution concepts exact computation equilibrium refinements continuous games mrmtsg remains challenging
open

conclusion
makes several contributions computing optimal strategies given moving targets mobile patrollers first introduce mrmtsg novel stackelberg game model
takes consideration spatial temporal continuity model targets move


fiprotecting moving targets multiple mobile resources

fixed schedules attacker chooses attacking time continuous time
interval multiple mobile defender resources protect targets within protection
radius bring continuous space analysis second develop fast solution
cass compact representation sub interval analysis compact representations dramatically reduce number variables designing optimal patrol
strategy defender sub interval analysis reveals piece wise linearity attacker
expected utility function shows finite set dominating strategies attacker third propose two approaches equilibrium refinement casss solutions
route adjust flow adjust route adjust decomposes patrol routes greedily improves
routes composes routes together get defender strategy flowadjust fast simple adjusts flow distribution achieve optimality
time interval keeping marginal probability discretized time points
unchanged additionally provide detailed experimental analyses ferry protection
domain cass deployed us coast guard since april

future work
several important avenues future work include use decreasing
function model protection provided targets instead fixed protection
radius ii handle practical constraints patrol boat schedule easily implementable iii efficiently handle complex uncertain target schedules utility
functions
provide initial discussion relaxation assumptions
listed section used throughout
allow complex uncertain target schedules may model
game targets follow stochastic schedules framework may still apply
may need enriched e g approaches use mdps represent
defender strategies see jiang yin zhang tambe kraus coordinating
multiple defenders becomes important challenge may helpful
cases appeal prior work multi agent teamwork given
significant uncertainty cases leading need line coordination
tambe stone kaminka kraus rosenschein kumar zilberstein
yin tambe
focus environments multiple attackers coordinate attacks
may need enhance framework prior korzhyk
conitzer parr stationary targets discrete time would helpful
addressing challenge although case moving targets continuous space
time cases provides significant challenge combining
previous item future work complex multiple defender multiple attacker scenario
would appear significant computational challenge



fifang jiang tambe

acknowledgments
thank uscg officers particularly craig baldwin joe direnzo francis
varrichio officers sector york exceptional collaboration views
expressed herein author construed official reflecting
views commandant u coast guard supported
us coast guard grant hshqdc muri grant w nf
thank anonymous reviewers valuable suggestions
preliminary version work appears conference fang jiang
tambe several major advances article whereas earlier work
confined targets move space provide significant extension
dass cass article enable targets patrollers move space provide detailed experimental extension ii
provide additional novel equilibrium refinement approaches experimentally compare
performance equilibrium refinement offered earlier work
allows us offer improved understanding equilibrium refinement space iii
discuss several sampling methods detail sample actual patrol routes mixed
strategies generate discussion missing earlier work iv provide
detailed proofs omitted previous version work



fiprotecting moving targets multiple mobile resources

appendix notation table

notation
mrmt
mrmtsg
l
fq
b


sq
w
pu
vm

cg
uq

n
tk
di

ru
ru k
f j k
p k
ei j k
p ru
atteu fq
q
fq
q k
l q l q
r
qk
r
atteu fq qk

mqk
arqk j
e u k

meaning
multiple mobile resources protecting moving targets
game model continuous set strategies attacker mrmt
number ferries
ferry index q
terminal points
continuous time interval finite set time points
continuous space possible locations set distance points
ferry schedule position target fq specified time
number patrollers
patroller index u
speed limit patroller
protection radius patroller
probability attacker stopped g patrollers
positive reward successful attack target fq time attacker
number discretized time points
number discretized distance points
discretized time point
discretized distance point
distance two adjacent time points
patrol route patroller pu discretization defenders strategy space
ru described vector
patroller located dru k time tk
flow distribution variable probability patroller moves di dj
time tk tk
marginal distribution variable probability patroller located di tk
directed edge linking nodes tk di tk dj
probability taking route ru
attacker expected utility attacking target fq time
protection range target fq time
probability patroller protecting target fq time
whether patroller located di time tk protecting target fq
lines sq
rth intersection point tk tk respect target fq
r
left right side limit atteu fq qk
number intersection points tk tk respect target fq
r r otherwise
c patroller taking edge ei j k protect target fq qk
qk
short eru k ru k k
table summary notations involved



fifang jiang tambe

appendix b calculation intersection points cass settings
calculate time patrollers route intersects protection range
target patroller moving v x v x target
moving sq tk x sq tk x tk tk patrollers
position given time tk tk denoted x targets position denoted
x
tk
x x x
tk tk
tk
x x x
x
tk tk

tk

tk tk
tk


tk tk

x






intersection point distance patrollers position targets position
equals protection radius looking time
x x



substituting variables equation equations denoting
x x x x

tk tk



tk tk


b x x
b

equation simplified
tk b tk b



denote c b tk c b tk easily get two roots
quadratic equation
p
c c c c c c
ta b



ta tb time valid intersection point within time interval
consideration tk tk

references
agmon n kraus kaminka g multi robot perimeter patrol adversarial
settings ieee international conference robotics automation icra pp

alpern infiltration games arbitrary graphs journal mathematical analysis applications


fiprotecting moving targets multiple mobile resources

b kempe kiekintveld c shieh e singh p tambe vorobeychik
security games limited surveillance proceedings twenty sixth
aaai conference artificial intelligence pp
b tambe ordonez f shieh e kiekintveld c refinement strong
stackelberg equilibria security games proceedings twenty fifth aaai
conference artificial intelligence aaai pp
basilico n gatti n amigoni f leader follower strategies robotic patrolling environments arbitrary topologies proceedings th international conference autonomous agents multiagent systems aamas pp
bosansky b lisy v jakob pechoucek computing time dependent
policies patrolling games mobile targets th international conference
autonomous agents multiagent systems aamas pp
conitzer v sandholm computing optimal strategy commit
proceedings th acm conference electronic commerce ec pp
daskalakis c weinberg symmetries optimal multi dimensional mechanism design proceedings th acm conference electronic commerce
ec pp
fang f jiang x tambe optimal patrol strategy protecting moving
targets multiple mobile resources proceedings international conference autonomous agents multi agent systems aamas pp
fudenberg tirole j game theory mit press
gal search games academic press york
gatti n game theoretical insights strategic patrolling model
normal form proceedings th european conference artificial intelligence
ecai pp
greenberg chalk p willis h maritime terrorism risk liability rand
corporation monograph series rand center terrorism risk management policy
halvorson e conitzer v parr r multi step multi sensor hider seeker games
ijcai
jakob vanek pechoucek agents improve international
maritime transport security intelligent systems ieee
jiang x yin z zhang c tambe kraus game theoretic randomization security patrolling dynamic execution uncertainty proceedings
international conference autonomous agents multi agent systems
aamas pp
johnson p fang f tambe patrol strategies maximize pristine forest
area proceedings twenty sixth aaai conference artificial intelligence
aaai pp


fifang jiang tambe

kiekintveld c islam kreinovich v security games interval uncertainty proceedings international conference autonomous agents
multi agent systems aamas pp
kiekintveld c jain tsai j pita j ordonez f tambe computing
optimal randomized resource allocations massive security games proceedings
th international conference autonomous agents multiagent systems
aamas pp
korzhyk conitzer v parr r complexity computing optimal stackelberg
strategies security resource allocation games proceedings th national
conference artificial intelligence aaai pp
korzhyk conitzer v parr r security games multiple attacker resources proceedings twenty second international joint conference artificial intelligence one ijcai pp aaai press
krause roper golovin randomized sensing adversarial environments proceedings nd international joint conference artificial
intelligence ijcai pp
krishna v auction theory academic press
kumar zilberstein anytime decentralized pomdps
expectation maximization proceedings twenty sixth conference uncertainty artificial intelligence pp
letchford j computational aspects stackelberg games ph thesis duke
university
letchford j conitzer v solving security games graphs via marginal probabilities proceedings twenty seventh aaai conference artificial intelligence aaai pp
letchford j vorobeychik computing optimal security strategies interdependent assets conference uncertainty artificial intelligence uai
pp
luber yin z fave f jiang x tambe sullivan j p gametheoretic patrol strategies transit systems trusts system mobile app
demonstration international conference autonomous agents multiagent
systems aamas demonstrations track pp
marecki j tesauro g segal r playing repeated stackelberg games unknown opponents proceedings th international conference autonomous
agents multiagent systems aamas pp
miltersen p b srensen b computing proper equilibria zero sum games
proceedings th international conference computers games cg
pp
owen g game theory rd ed academic press


fiprotecting moving targets multiple mobile resources

paruchuri p tambe ordonez f kraus security multiagent systems
policy randomization proceedings fifth international joint conference
autonomous agents multiagent systems aamas pp
pita j jain marecki j ordonez f portway c tambe western c paruchuri
p kraus deployed armor protection application game theoretic model security los angeles international airport proceedings
th international joint conference autonomous agents multiagent systems
industrial track aamas pp
pita j jain ordonez f portway c tambe western c paruchuri p
kraus game theory los angeles airport security ai magazine

shieh e b yang r tambe baldwin c direnzo j maule b meyer
g protect deployed game theoretic system protect ports
united states proceedings th international conference autonomous
agents multiagent systems aamas pp
simon l k stinchcombe b equilibrium refinement infinite normal form
games econometrica
stein n ozdaglar parrilo p separable low rank continuous
games international journal game theory
stone p kaminka g kraus rosenschein j ad hoc autonomous
agent teams collaboration without pre coordination proceedings th aaai
conference artificial intelligence pp
tambe towards flexible teamwork journal artificial intelligence
tambe security game theory deployed systems lessons
learned cambridge university press
thompson r leyton brown k computational analysis perfectinformation position auctions proceedings th acm conference electronic commerce ec pp
tsai j rathi kiekintveld c ordonez f tambe iris tool
strategic security allocation transportation networks eighth international
conference autonomous agents multiagent systems industry track aamas
pp
van damme e stability perfection nash equilibria springer verlag
vanek jakob hrstka pechoucek multi agent simulation
improve security maritime transit proceedings th international
workshop multi agent simulation mabs pp
vorobeychik singh computing stackelberg equilibria discounted stochastic games proceedings twenty sixth conference artificial intelligence aaai pp


fifang jiang tambe

yin z jiang x johnson p kiekintveld c leyton brown k sandholm
tambe sullivan j p trusts scheduling randomized patrols
fare inspection transit systems proceedings twenty fourth conference
innovative applications artificial intelligence iaai pp
yin z tambe continuous time multiagent teams temporal
constraints proceedings twenty second international joint conference
artificial intelligence one ijcai pp aaai press




