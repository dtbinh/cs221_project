Journal Artificial Intelligence Research 48 (2013) 671-715

Submitted 04/13; published 11/13

Generating Natural Language Descriptions OWL
Ontologies: NaturalOWL System
Ion Androutsopoulos

ion@aueb.gr

Department Informatics,
Athens University Economics Business, Greece
Digital Curation Unit Institute Management Information Systems,
Research Centre Athena, Athens, Greece

Gerasimos Lampouras

lampouras06@aueb.gr

Department Informatics,
Athens University Economics Business, Greece

Dimitrios Galanis

galanisd@aueb.gr

Department Informatics,
Athens University Economics Business, Greece
Institute Language Speech Processing,
Research Centre Athena, Athens, Greece

Abstract
present Naturalowl, natural language generation system produces texts
describing individuals classes owl ontologies. Unlike simpler owl verbalizers,
typically express single axiom time controlled, often entirely fluent natural
language primarily benefit domain experts, aim generate fluent coherent multi-sentence texts end-users. system Naturalowl, one publish
information owl Web, along automatically produced corresponding texts
multiple languages, making information accessible computer programs
domain experts, end-users. discuss processing stages Naturalowl,
optional domain-dependent linguistic resources system use stage,
useful. present trials showing domain-dependent
linguistic resources available, Naturalowl produces significantly better texts compared
simpler verbalizer, resources created relatively light effort.

1. Introduction
Ontologies play central role Semantic Web (Berners-Lee, Hendler, & Lassila, 2001;
Shadbolt, Berners-Lee, & Hall, 2006). ontology provides conceptualization
knowledge domain (e.g., consumer electronics) defining classes subclasses
individuals (entities) domain, types possible relations etc.
current standard specify Semantic Web ontologies owl (Horrocks, Patel-Schneider,
& van Harmelen, 2003), formal language based description logics (Baader, Calvanese,
McGuinness, Nardi, & Patel-Schneider, 2002), rdf, rdf schema (Antoniou & van
Harmelen, 2008), owl2 latest version owl (Grau, Horrocks, Motik, Parc
2013
AI Access Foundation. rights reserved.

fiAndroutsopoulos, Lampouras, & Galanis

sia, Patel-Schneider, & Sattler, 2008). Given owl ontology knowledge domain, one
publish Web machine-readable data pertaining domain (e.g., catalogues
products, features etc.), data formally defined semantics based
conceptualization ontology.1 Following common practice Semantic Web research,
actually use term ontology refer jointly terminological knowledge (TBox)
establishes conceptualization knowledge domain, assertional knowledge (ABox)
describes particular individuals.
Several equivalent owl syntaxes developed, people unfamiliar formal
knowledge representation often difficulties understanding (Rector, Drummond,
Horridge, Rogers, Knublauch, Stevens, Wang, & Wroe, 2004). example, following
statement defines class St. Emilion wines, using functional-style syntax owl,
one easiest understand, adopt throughout article.2
EquivalentClasses(:StEmilion
ObjectIntersectionOf(:Bordeaux
ObjectHasValue(:locatedIn :stEmilionRegion) ObjectHasValue(:hasColor :red)
ObjectHasValue(:hasFlavor :strong)
ObjectHasValue(:madeFrom :cabernetSauvignonGrape)
ObjectMaxCardinality(1 :madeFrom)))

make ontologies easier understand, several ontology verbalizers developed
(Schwitter, 2010a). Verbalizers usually translate axioms (in case, owl statements)
ontology one one controlled, often entirely fluent English statements, typically
without considering coherence resulting texts, mostly benefit domain
experts. contrast, article present system aims produce fluent
coherent multi-sentence texts describing classes individuals owl ontologies,
texts intended read end-users (e.g., customers on-line retail sites). example,
system generate following text owl statement above, ontology
annotated domain-dependent linguistic resources discussed below.
St. Emilion kind Bordeaux St. Emilion region. red color strong flavor.
made exactly one grape variety: Cabernet Sauvignon grapes.

system, called Naturalowl, open-source supports English Greek.
Hence, Greek texts generated owl statements, following
product description, provided appropriate Greek linguistic resources available.
contrast, owl verbalizers typically produce English (or English-like) sentences.
ClassAssertion(:Laptop :tecraA8)
ObjectPropertyAssertion(:manufacturedBy :tecraA8 :toshiba)
ObjectPropertyAssertion(:hasProcessor :tecraA8 :intelCore2)
DataPropertyAssertion(:hasMemoryInGB :tecraA8 "2"^^xsd:nonNegativeInteger)
DataPropertyAssertion(:hasHardDiskInGB :tecraA8 "110"^^xsd:nonNegativeInteger)
DataPropertyAssertion(:hasSpeedInGHz :tecraA8 "2"^^xsd:float)
DataPropertyAssertion(:hasPriceInEuro :tecraA8 "850"^^xsd:nonNegativeInteger)

[English description:] Tecra A8 laptop, manufactured Toshiba. Intel Core 2 processor,
2 gb ram 110 gb hard disk. speed 2 ghz costs 850 Euro.
1. See http://owl.cs.manchester.ac.uk/repository/ repository owl ontologies.
2. Consult http://www.w3.org/TR/owl2-primer/ introduction functional-style syntax owl.

672

fiGenerating Natural Language Descriptions OWL Ontologies

[Greek description:] Tecra A8 , Toshiba.
Intel Core 2, 2 gb ram 110 gb. 2 ghz
850 .

examples illustrate system Naturalowl help publish information Web owl statements texts generated owl statements.
way, information becomes easily accessible computers, process
owl statements, end-users speaking different languages; changes owl
statements automatically reflected texts regenerating them. produce
fluent, coherent multi-sentence texts, Naturalowl relies natural language generation
(nlg) methods (McKeown, 1985; Reiter & Dale, 2000) larger extent compared existing owl verbalizers; example, includes mechanisms avoid repeating information,
order facts expressed, aggregate smaller sentences longer ones, generate
referring expressions etc. Although nlg established area, first article
discuss detail nlg system owl ontologies, excluding simpler verbalizers.
propose novel algorithms theoretical nlg perspective, show
several particular issues need considered generating owl ontologies.
example, owl statements lead overly complicated sentences, unless
converted simpler intermediate representations first; several owl-specific
opportunities aggregate sentences (e.g., expressing axioms cardinalities
properties); referring expression generation exploit class hierarchy.
Naturalowl used owl ontology, obtain texts high quality
domain-dependent generation resources required; example, classes ontology
mapped natural language names, properties sentence plans etc. Similar
linguistic resources used nlg systems, though different systems adopt different
linguistic theories algorithms, requiring different resources. little consensus
exactly information nlg resources capture, apart abstract specifications
(Mellish, 2010). domain-dependent generation resources Naturalowl created
domain author, person familiar owl, system configured new
ontology. domain author uses Protege ontology editor Protege plug-in
allows editing domain-dependent generation resources invoking Naturalowl view
resulting texts.3 discuss plug-in article, since similar
authoring tool m-piro (Androutsopoulos, Oberlander, & Karkaletsis, 2007).
owl ontologies often use English words concatenations words (e.g., manufacturedBy)
identifiers classes, properties, individuals. Hence, domain-dependent
generation resources often extracted ontology guessing, example,
class identifier Laptop earlier example noun used refer
class, statement form ObjectPropertyAssertion(:manufacturedBy X
) expressed English sentence form X manufactured .
owl verbalizers follow strategy. Similarly, domain-dependent generation resources provided, Naturalowl attempts extract ontology, uses
3. Consult http://protege.stanford.edu/ information Protege. Naturalowl Protege plugin freely available http://nlp.cs.aueb.gr/software.html. describe Naturalowl version 2
article; version 1 (Galanis & Androutsopoulos, 2007) used less principled representation
domain-dependent generation resources, without supporting owl2.

673

fiAndroutsopoulos, Lampouras, & Galanis

generic resources. resulting texts, however, lower quality; also, non-English texts
cannot generated, identifiers ontology English-like. tradeoff
reducing effort construct domain-dependent generation resources owl
ontologies, obtaining higher-quality texts multiple languages, tradeoff
investigated previous work. present trials performed measure
effort required construct domain-dependent generation resources Naturalowl
extent improve resulting texts, comparing simpler
verbalizer requires domain-dependent generation resources. trials show
domain-dependent generation resources help Naturalowl produce significantly better
texts, resources constructed relatively light effort, compared
effort typically needed construct ontology.
Overall, main contributions article are: (i) first detailed discussion
complete, general-purpose nlg system owl ontologies particular issues
arise generating owl ontologies; (ii) shows system relies nlg
methods larger extent, compared simpler owl verbalizers, produce significantly
better natural language descriptions classes individuals, provided appropriate
domain-dependent generation resources available; (iii) shows descriptions
generated one languages, provided appropriate resources
available; (iv) shows domain-dependent generation resources constructed
relatively light effort. already noted, article present novel algorithms
theoretical nlg perspective. fact, algorithms Naturalowl uses
narrower scope, compared fully-fledged nlg algorithms. Nevertheless,
trials show system produces texts reasonable quality, especially domaindependent generation resources provided. hope Naturalowl contributes
towards wider adoption nlg methods Semantic Web, researchers may
wish contribute improved components, given Naturalowl open-source.
Naturalowl based ideas ilex (ODonnell, Mellish, Oberlander, & Knott,
2001) m-piro (Isard, Oberlander, Androutsopoulos, & Matheson, 2003). ilex
project developed nlg system demonstrated mostly museum exhibits,
support owl.4 m-piro project produced multilingual extension system
ilex, tested several domains (Androutsopoulos et al., 2007). Attempts
use generator m-piro owl, however, ran problems (Androutsopoulos,
Kallonis, & Karkaletsis, 2005). contrast, Naturalowl especially developed owl.
remainder article, assume reader familiar rdf, rdf
schema, owl. Readers unfamiliar Semantic Web may wish consult
introductory text first (Antoniou & van Harmelen, 2008).5 note recently
popular Linked Data published interconnected using Semantic Web technologies.6 Linked Data currently use rdf rdf schema, owl effect
superset rdf schema and, hence, work paper applies Linked Data.
4. Dale et al. (1998) Dannels (2008, 2012) discuss nlg museums.
5. longer version article, background readers unfamiliar owl
Semantic Web, available technical report (Androutsopoulos, Lampouras, & Galanis, 2012); see
http://nlp.cs.aueb.gr/publications.html.
6. Consult http://linkeddata.org/. See work Duma Klein (2013).

674

fiGenerating Natural Language Descriptions OWL Ontologies

Section 2 briefly discusses related work; provide pointers
related work subsequent sections. Section 3 explains Naturalowl generates
texts, discussing domain-dependent generation resources processing stage.
Section 4 describes trials performed measure effort required construct
domain-dependent generation resources impact quality generated
texts. Section 5 concludes proposes future work.

2. Related Work
use functional-style syntax owl article, several equivalent owl syntaxes exist. work develop controlled natural languages (cnls), mostly
English-like, used alternative owl syntaxes. Sydney owl Syntax (sos) (Cregan,
Schwitter, & Meyer, 2007) English-like cnl bidirectional mapping
functional-style syntax owl; sos based peng (Schwitter & Tilbrook, 2004).
similar bidirectional mapping defined Attempto Controlled English (ace)
(Kaljurand, 2007). Rabbit (Denaux, Dimitrova, Cohn, Dolbear, & Hart, 2010) clone
(Funk, Tablan, Bontcheva, Cunningham, Davis, & Handschuh, 2007) owl cnls,
mostly intended used domain experts authoring ontologies (Denaux, Dolbear,
Hart, Dimitrova, & Cohn, 2011). note owl cnls cannot express
kinds owl statements (Schwitter, Kaljurand, Cregan, Dolbear, & Hart, 2008).
Much work owl cnls focuses ontology authoring querying (Bernardi, Calvanese, & Thorne, 2007; Kaufmann & Bernstein, 2010; Schwitter, 2010b); emphasis
mostly direction cnl owl query languages.7 relevant work
cnls sos ace, automatic mappings normative owl syntaxes
available. feeding owl ontology expressed, example, functional-style syntax
mapping translates English-like cnl, axioms ontology
turned English-like sentences. Systems kind often called ontology verbalizers.
term, however, includes systems translate owl English-like statements belong explicitly defined cnl (Halaschek-Wiener, Golbeck, Parsia,
Kolovski, & Hendler, 2008; Schutte, 2009; Power & Third, 2010; Power, 2010; Stevens,
Malone, Williams, Power, & Third, 2011; Liang, Stevens, Scott, & Rector, 2011b).
Although verbalizers viewed performing kind light nlg, typically
translate axioms one one, already noted, without considering coherence (or topical cohesion) resulting texts, usually without aggregating sentences generating
referring expressions, often producing sentences entirely fluent natural. example, ace sos occasionally use variables instead referring expressions
(Schwitter et al., 2008). Also, verbalizers typically employ domain-dependent generation resources typically support multiple languages. Expressing exact
meaning axioms ontology unambiguous manner considered important verbalizers composing fluent coherent text multiple languages,
partly verbalizers typically intended used domain experts.
7. Conceptual authoring wysiwym (Power & Scott, 1998; Hallett, Scott, & Power, 2007),
applied owl (Power, 2009), round-trip authoring (Davis, Iqbal, Funk, Tablan, Bontcheva, Cunningham, & Handschuh, 2008) bidirectional, focus mostly ontology authoring querying.

675

fiAndroutsopoulos, Lampouras, & Galanis

Figure 1: processing stages sub-stages Naturalowl.
verbalizers use ideas methods nlg. example, verbalizers include
sentence aggregation (Williams & Power, 2010) text planning (Liang, Scott, Stevens, &
Rector, 2011a). Overall, however, nlg methods used limited extent
owl ontologies. notable exception ontosum (Bontcheva, 2005), generates
natural language descriptions individuals, apparently classes, rdf schema
owl ontologies. extension miakt (Bontcheva & Wilks, 2004),
used generate medical reports. implemented gate (Bontcheva, Tablan,
Maynard, & Cunningham, 2004) provide graphical user interfaces manipulate
domain-dependent generation resources (Bontcheva & Cunningham, 2003). detailed
description ontosum appears published, however, system
seem publicly available, unlike Naturalowl. Also, trials ontosum
independently created ontologies seem published. information
ontosum compares Naturalowl found elsewhere (Androutsopoulos et al., 2012).
Mellish Sun (2006) focus lexicalization sentence aggregation, aiming
produce single aggregated sentence input collection rdf triples; contrast,
Naturalowl produces multi-sentence texts. complementary work, Mellish et al. (2008)
consider content selection texts describing owl classes. Unlike Naturalowl, system
express facts explicit ontology, facts deduced
ontology. Nguyen et al. (2012) discuss proof trees facts deduced owl
ontologies explained natural language. would particularly interesting
examine deduction explanation mechanisms could added Naturalowl.

3. Processing Stages Resources NaturalOWL
Naturalowl adopts pipeline architecture, common nlg (Reiter & Dale, 2000),
though number purpose components often vary (Mellish, Scott, Cahill, Paiva,
Evans, & Reape, 2006). system generates texts three stages, document planning,
micro-planning, surface realization, discussed following sections; see Figure 1.
3.1 Document Planning
Document planning consists content selection, system selects information
convey, text planning, plans structure text generated.
3.1.1 Content Selection
content selection, system first retrieves ontology owl statements
relevant class individual described, converts selected
676

fiGenerating Natural Language Descriptions OWL Ontologies

owl statements message triples, easier express sentences, finally
selects among message triples ones expressed.
OWL statements individual targets
Let us first consider content selection Naturalowl asked describe individual
(an entity), let us call individual target. system scans owl statements
ontology, looking statements forms listed left column Table 1.8
effect, retrieves statements describe target directly, opposed
statements describing another individual (named) class target related to.
owl allows arbitrarily many nested ObjectUnionOf ObjectIntersectionOf operators, may lead statements difficult express natural language.
simplify text generation ensure resulting texts easy comprehend,
allow nested ObjectIntersectionOf ObjectUnionOf operators ontologies texts generated from. Table 1, restriction enforced requiring class
identifiers appear points owl allows expressions construct unnamed classes using operators. ontology uses unnamed classes points Table 1
requires class identifiers (named classes), easily modified comply Table 1
defining new named classes nested unnamed ones.9 practice, nested ObjectUnionOf
ObjectIntersectionOf operators rare; see work Power et al. (Power, 2010;
Power & Third, 2010; Power, 2012) information frequencies different types
owl statements.10
Statements form ClassAssertion(Class target ) may quite complex,
Class necessarily class identifier. may expression constructing
unnamed class, following example. multiple rows
ClassAssertion Table 1.
ClassAssertion(
ObjectIntersectionOf(:Wine
ObjectHasValue(:locatedIn :stEmilionRegion)
ObjectHasValue(:hasColor :red)
ObjectHasValue(:madeFrom :cabernetSauvignonGrape)
:chateauTeyssier2007)

ObjectHasValue(:hasFlavor :strong)
ObjectMaxCardinality(1 :madeFrom))

Naturalowl would express owl statement generating text following.
2007 Chateau Teyssier wine St. Emilion region. red color strong flavor.
made exactly one grape variety: Cabernet Sauvignon grapes.

Recall texts Naturalowl intended read end-users. Hence,
prefer generate texts may emphasize enough subtleties owl
8. owl statements shown Table 1 two arguments actually arguments,
converted forms shown.
9. easy automatically detect nested unnamed classes replace them, automatically,
new named classes (classes owl identifiers). domain author would consulted,
though, provide meaningful owl identifiers new classes (otherwise arbitrary identifiers would
used) natural language names new classes (see Section 3.2.1 below).
10. One could refactor nested operators; example, ((A B) (C D)) equivalent
(A B) (C D). conversion message triples, discussed below, effect
performs refactoring, cannot cope possible nested union intersection
operators, disallow general rule.

677

fiAndroutsopoulos, Lampouras, & Galanis
owl statements

Message triples

ClassAssertion(NamedClass target )
ClassAssertion(
ObjectComplementOf(NamedClass ) target )
ClassAssertion(
ObjectOneOf(indiv1 indiv2 ...) target )
ClassAssertion(
ObjectHasValue(objProp indiv ) target )
ClassAssertion(
ObjectHasValue(dataProp dataValue ) target )
ClassAssertion(ObjectHasSelf(objProp ) target )
ClassAssertion(
ObjectMaxCardinality(number prop [NamedClass ])
target )
ClassAssertion(
ObjectMinCardinality(number prop [NamedClass ])
target )
ClassAssertion(
ObjectExactCardinality(number prop [NamedClass ])
target )
ClassAssertion(
ObjectSomeValuesFrom(objProp NamedClass ) target )
ClassAssertion(
ObjectAllValuesFrom(objProp NamedClass ) target )
ClassAssertion(
ObjectIntersectionOf(C1 C2 ...) target )

<target, instanceOf, NamedClass >

ClassAssertion(
ObjectUnionOf(C1 C2 ...)

target )

ObjectPropertyAssertion(objProp target indiv )
DataPropertyAssertion(dataProp target dataValue )
NegativeObjectPropertyAssertion(
objProp target indiv )
NegativeDataPropertyAssertion(
dataProp target dataValue )
DifferentIndividuals(target indiv )
DifferentIndividuals(indiv target )
SameIndividual(target indiv )
SameIndividual(indiv target )

<target, not(instanceOf), NamedClass >
<target, oneOf,
or(indiv1, indiv2, ...)>
<target, objProp, indiv >
<target, dataProp, dataValue >
<target, objProp, target >
<target, maxCardinality(prop ),
number [:NamedClass ]>
<target, minCardinality(prop ),
number [:NamedClass ]>
<target, exactCardinality(prop ),
number [:NamedClass ]>
<target, someValuesFrom(objProp ),
NamedClass >
<target, allValuesFrom(objProp ),
NamedClass >
convert (ClassAssertion(C1 target ))
convert (ClassAssertion(C2 target )) ...
or(convert (ClassAssertion(C1 target )),
convert (ClassAssertion(C2 target )),
...)
<target, objProp, indiv >
<target, dataProp, dataValue >
<target, not(objProp ), indiv >
<target, not(dataProp ), dataValue >
<target,
<target,
<target,
<target,

differentIndividuals, indiv >
differentIndividuals, indiv >
sameIndividual, indiv >
sameIndividual, indiv >

Notation: Square brackets indicate optional arguments, convert () recursive application
conversion . NamedClass class identifier; objProp , dataProp , prop identifiers object
properties, datatype properties, properties; indiv , indiv1 , . . . identifiers individuals;
dataValue datatype value; C , C1 , . . . class identifiers, expressions constructing classes
without ObjectIntersectionOf ObjectUnionOf.

Table 1: owl statements individual target, corresponding message triples.
statements, order produce readable texts. owl expert might prefer,
example, following description chateauTeyssier2007, mirrors closely
corresponding owl statements.
2007 Chateau Teyssier member intersection of: (a) class wines, (b) class
individuals (not necessarily exclusively) St. Emilion region, (c) class individuals
(not necessarily exclusively) red color, (d) class individuals (not necessarily exclusively)
strong flavor, (e) class individuals made exclusively Cabernet Sauvignon grapes.

678

fiGenerating Natural Language Descriptions OWL Ontologies

Stricter texts kind, however, seem inappropriate end-users. fact, could
argued even mentioning wine made exactly one grape variety
text Naturalowl produces inappropriate end-users. system instructed
avoid mentioning information via user modeling annotations, discussed below.
OWL statements class targets
system asked describe class, rather individual, scans ontology
statements forms listed left column Table 2. class described
must named one, meaning must owl identifier, Target denotes
identifier. Again, simplify generation process avoid producing complicated
texts, Table 2 requires class identifiers appear points owl allows
expressions construct unnamed classes using operators. ontology uses unnamed
classes points Table 2 requires class identifiers, easily modified.
texts describing classes, difficult express informally difference
EquivalentClasses SubClassOf. EquivalentClasses(C1 C2 ) means individual
C1 belongs C2 , vice versa. contrast, SubClassOf(C1 C2 ) means
member C1 belongs C2 , reverse necessarily true. replace
EquivalentClasses SubClassOf definition StEmilion page 672, member
StEmilion still necessarily member intersection, wine
characteristics intersection necessarily member StEmilion. Consequently,
one perhaps add sentences ones shown italics below, expressing
EquivalentClasses SubClassOf, respectively.
St. Emilion kind Bordeaux St. Emilion region. red color strong flavor.
made exactly one grape variety: Cabernet Sauvignon grapes. Every St. Emilion properties,
anything properties St. Emilion.
St. Emilion kind Bordeaux St. Emilion region. red color strong flavor.
made exactly one grape variety: Cabernet Sauvignon grapes. Every St. Emilion properties,
something may properties without St. Emilion.

Naturalowl produces texts, without sentences italics, SubClassOf
EquivalentClasses, avoid generating texts sound formal. Also, may
mention information ontology target class (e.g., St.
Emilion strong flavor), user modeling indicates information already
known text exceed particular length. Hence, generated texts
express necessary, sufficient conditions individuals belong target class.
OWL statements second-level targets
applications, expressing additional owl statements indirectly related
target may desirable. Let us assume, example, target individual
exhibit24, following directly relevant statements retrieved
ontology. Naturalowl would express generating text one below.
ClassAssertion(:Aryballos :exhibit24)
ObjectPropertyAssertion(:locationFound :exhibit24 :heraionOfDelos)
ObjectPropertyAssertion(:creationPeriod :exhibit24 :archaicPeriod)
ObjectPropertyAssertion(:paintingTechniqueUsed :exhibit24 :blackFigureTechnique)
ObjectPropertyAssertion(:currentMuseum :exhibit24 :delosMuseum)

679

fiAndroutsopoulos, Lampouras, & Galanis
owl statements

Message triples

EquivalentClasses(Target C )
EquivalentClasses(C Target )
SubClassOf(Target NamedClass )
SubClassOf(Target ObjectComplementOf(NamedClass ))
SubClassOf(Target
ObjectOneOf(indiv1 indiv2 ...))
SubClassOf(Target ObjectHasValue(objProp indiv ))
SubClassOf(Target
ObjectHasValue(dataProp dataValue ))
SubClassOf(Target ObjectHasSelf(objProp ))
SubClassOf(Target
ObjectMaxCardinality(number prop [NamedClass ]))
SubClassOf(Target
ObjectMinCardinality(number prop [NamedClass ]))
SubClassOf(Target
ObjectExactCardinality(number prop [NamedClass ]))
SubClassOf(Target
ObjectSomeValuesFrom(objProp NamedClass ))
SubClassOf(Target
ObjectAllValuesFrom(objProp NamedClass ))
SubClassOf(Target
ObjectIntersectionOf(C1 C2 ...))

convert (SubClassOf(Target C ))
convert (SubClassOf(Target C ))
<Target, isA, NamedClass >
<Target, not(isA), NamedClass >
<Target, oneOf,
or(indiv1, indiv2, ...)>
<Target, objProp, indiv >

SubClassOf(Target
ObjectUnionOf(C1 C2 ...))
DisjointClasses(Target NamedClass )
DisjointClasses(NamedClass Target )

<Target, dataProp, dataValue >
<Target, objProp, Target >
<Target, maxCardinality(prop ),
number [:NamedClass ]>
<Target, minCardinality(prop ),
number [:NamedClass ]>
<Target, exactCardinality(objProp ),
number [:NamedClass ]>
<Target, someValuesFrom(objProp ),
NamedClass >
<Target, allValuesFrom(objProp ),
NamedClass >
convert (SubClassOf(C1 Target ))
convert (SubClassOf(C2 Target )) ...
or(convert (SubClassOf(C1 Target )),
convert (SubClassOf(C2 Target )),
...)
<Target, not(isA), NamedClass >
<Target, not(isA), NamedClass >

Notation: Square brackets indicate optional arguments, convert () recursive application
conversion . NamedClass class identifier; objProp , dataProp , prop identifiers object
properties, datatype properties, properties; indiv , indiv1 , . . . identifiers individuals;
dataValue datatype value; C , C1 , . . . class identifiers, expressions constructing classes
without ObjectIntersectionOf ObjectUnionOf.

Table 2: owl statements class target, corresponding message triples.
aryballos, found Heraion Delos. created archaic period
decorated black-figure technique. currently Museum Delos.

names classes individuals shown hyperlinks indicate
used subsequent targets. Clicking hyperlink would request describe
corresponding class individual. Alternatively, may retrieve advance owl
statements subsequent targets add current target.
precisely, assuming target individual, subsequent targets, called
second-level targets, targets class, provided named one, individuals target directly linked via object properties. Naturalowl considers second-level
targets current target individual, class targets, second-level
targets often lead complicated texts. retrieve owl statements current
second-level targets (when applicable), current target, set
maximum fact distance 2 1, respectively. Returning exhibit24, let us assume
maximum fact distance 2 following owl statements second-level
targets retrieved.11
11. Consult http://www.w3.org/TR/owl-time/ principled representations time owl.

680

fiGenerating Natural Language Descriptions OWL Ontologies

SubClassOf(:Aryballos :Vase)
SubClassOf(:Aryballos
ObjectHasValue(:exhibitTypeCannedDescription
"An aryballos small spherical vase narrow neck, athletes
kept oil spread bodies with"^^xsd:string))
DatatypePropertyAssertion(:periodDuration :archaicPeriod "700 BC 480 BC"^^xsd:string)
DatatypePropertyAssertion(:periodCannedDescription :archaicPeriod
"The archaic period Greek ancient city-states developed"^^xsd:string)
DataPropertyAssertion(:techniqueCannedDescription :blackFigureTechnique
"In black-figure technique, silhouettes rendered black pale
surface clay, details engraved"^^xsd:string)

express retrieved owl statements, including second-level targets,
Naturalowl would generate text following, may preferable,
first time user encounters aryballos archaic exhibits.
aryballos, kind vase. aryballos small spherical vase narrow neck,
athletes kept oil spread bodies with. aryballos found Heraion
Delos created archaic period. archaic period Greek ancient citystates developed spans 700 bc 480 bc. aryballos decorated black-figure
technique. black-figure technique, silhouettes rendered black pale surface
clay, details engraved. aryballos currently Museum Delos.

note many ontologies impractical represent information
logical terms. example, much easier store information aryballos
small. . . bodies string, i.e., canned sentence, rather defining
classes, properties, individuals spreading actions, bodies, etc. generating
sentence logical meaning representation. Canned sentences, however,
entered multiple versions, several languages user types need supported.
Converting OWL statements message triples
Tables 1 2 show retrieved owl statements rewritten triples
form hS, P, Oi, target second-level target; individual,
datatype value, class, set individuals, datatype values, classes mapped
to; P specifies kind mapping. call semantic subject owner
triple, semantic object filler ; triple viewed field named
P , owned S, filled O. example, owl statements exhibit24 shown
above, including second-level targets, converted following triples.
<:exhibit24, instanceOf, :Aryballos>
<:exhibit24, :locationFound, :heraionOfDelos>
<:exhibit24, :creationPeriod, :archaicPeriod>
<:exhibit24, :paintingTechniqueUsed, :blackFigureTechnique>
<:exhibit24, :currentMuseum, :delosMuseum>
<:Aryballos, isA, :Vase>
<:Aryballos, :exhibitTypeCannedDescription, "An aryballos a... bodies with"^^xsd:string>
<:archaicPeriod, :periodDuration, "700 BC 480 BC"^^xsd:string>
<:archaicPeriod, :periodCannedDescription, "The archaic period was..."^^xsd:string>
<:blackFigureTechnique, :techniqueCannedDescription, "In black-figure..."^^xsd:string>

precisely, P be: (i) property ontology; (ii) one keywords isA,
instanceOf, oneOf, differentIndividuals, sameIndividuals; (iii) expression
form modifier(), modifier may not, maxCardinality etc. (see Tables 1 2)
681

fiAndroutsopoulos, Lampouras, & Galanis

Figure 2: Graph view message triples.
property ontology. hereafter call properties three types P ,
though types (ii) (iii) strictly properties terminology owl.
need distinguish three types, use terms property ontology,
domain-independent property, modified property, respectively.
Every owl statement collection owl statements represented set rdf
triples.12 triples Tables 12 similar, rdf triples. notably, expressions form modifier() cannot used P rdf triples. avoid confusion, call message triples triples Tables 12, distinguish rdf triples.
rdf triples, message triples viewed forming graph. Figure 2 shows
graph message triples exhibit24; triple linking blackFigureTechnique
canned sentence shown save space. second-level targets classes
individuals distance one target (exhibit24).13 contrast, graph
rdf triples representing owl statements would complicated, second-level
targets would always distance one target.
message triple intended easily expressible simple sentence,
always case rdf triples representing owl statements. message triples
capture similarities sentences generated may less obvious looking
original owl statements rdf triples representing them. example,
ClassAssertion SubClassOf statements mapped identical message triples,
apart identifiers individual class, similarity message
triples reflects similarity resulting sentences, shown below.
ClassAssertion(ObjectMaxCardinality(1 :madeFromGrape) :product145)
<:product145, maxCardinality(:madeFromGrape), 1>

Product 145 made one grape.

12. See http://www.w3.org/TR/owl2-mapping-to-rdf/.
13. Instead retrieving owl statements target second-level targets converting
message triples, one could equivalently convert owl statements ontology message
triples select message triples connecting target nodes distance two target.

682

fiGenerating Natural Language Descriptions OWL Ontologies

SubClassOf(:StEmilion ObjectMaxCardinality(1 :madeFromGrape))
<:StEmilion, maxCardinality(:madeFromGrape), 1>

St. Emilion made one grape.

contrast, without conversion message triples, owl statements rdf
triples representing would lead difficult follow sentences following:
Product 145 member class individuals made one grape.
St. Emilion subclass class individuals made one grape.

example, Tables 1 2 discard ObjectIntersectionOf operators, producing
multiple message triples instead. example, EquivalentClasses statement defining
StEmilion page 672 would converted following message triples.
<:StEmilion,
<:StEmilion,
<:StEmilion,
<:StEmilion,
<:StEmilion,
<:StEmilion,

isA, :Bordeaux>
:locatedIn, :stEmilionRegion>
:hasColor, :red>
:hasFlavor, :strong>
:madeFromGrape, :cabernetSauvignonGrape>
maxCardinality(:madeFromGrape), 1>

resulting message triples correspond sentences below, subsequent references StEmilion replaced pronouns improve readability; sentences
could aggregated longer ones, discussed later sections.
St. Emilion kind Bordeaux. St. Emilion region. red color. strong flavor.
made Cabernet Sauvignon grape. made one grape variety.

contrast original owl statement page 672 rdf triples representing
would lead stricter text page 678, inappropriate end-users, already
noted. Notice, also, Table 2 converts EquivalentClasses SubClassOf statements
identical triples, P isA, since Naturalowl produces texts kinds
statements, already discussed.
Tables 1 2 replace ObjectUnionOf operators disjunctions message triples.
following owl statement mapped message triple shown below:
ClassAssertion(
UnionOf(ObjectHasValue(:hasFlavor :strong) ObjectHasValue(:hasFlavor :medium))
:houseWine)
or(<:houseWine, :hasFlavor, :strong>, <:houseWine, :hasFlavor, :medium>)

leads first sentence below; sentence shortened aggregation, leading second sentence below.
house wine strong flavor medium flavor.
house wine strong medium flavor.

683

fiAndroutsopoulos, Lampouras, & Galanis

contrast, owl statement corresponding rdf triples effect say that:
house wine member union of: (i) class wines strong flavor, (ii)
class wines medium flavor.

Interest scores repetitions
Expressing message triples retrieved owl statements always
appropriate. Let us assume, example, maximum fact distance 2
description exhibit24 Figure 2 requested museum visitor. may
case visitor already encountered archaic exhibits, duration
archaic period mentioned previous descriptions. Repeating duration
period may, thus, undesirable. may want exclude message triples
uninteresting particular types users. example, may message triples
providing bibliographic references, children would probably find uninteresting.
Naturalowl provides mechanisms allowing domain author assign importance
score every possible message triple, possibly different scores different user types
(e.g., adults, children). score non-negative integer indicating interesting user
corresponding type presumably find information message triple,
information already conveyed user. museum projects Naturalowl
originally developed for, interest scores ranged 0 (completely uninteresting)
3 (very interesting), different range used. scores specified
message triples involve particular property P (e.g., P = madeFrom),
message triples involve semantic subjects particular class (e.g., Statue
= Statue) particular property P , message triples involve particular
semantic subjects (e.g., =exhibit37) particular property P . example, may
wish specify materials exhibits collection generally medium
interest (P = madeFrom, score 2), materials statues lower interest (S
statue, P = madeFrom, score 1), perhaps statues collection made
stone, material particular statue exhibit24 important (S =
exhibit10, P = madeFrom, score 3), perhaps exhibit24 gold statue.
discuss mechanisms used assign interest scores message
triples article, detailed description mechanisms found elsewhere
(Androutsopoulos et al., 2012). note human-authored texts describing
individuals classes ontology available along owl statements or,
generally, logical facts express, statistical machine learning methods
employed learn automatically select assign interest scores logical facts (Duboue &
McKeown, 2003; Barzilay & Lapata, 2005; Kelly, Copestake, & Karamanis, 2010). Another
possibility (Demir, Carberry, & McCoy, 2010) would compute interest scores
graph algorithms PageRank (Brin & Page, 1998).
domain author specify many times message triple
repeated, assumed users different types assimilated it.
triple assimilated, never repeated texts user. example,
domain author specify children assimilate duration historical period
mentioned twice; hence, system may repeat, example, duration
archaic period two texts. Naturalowl maintains personal model end-user.
model shows message triples conveyed particular user previous
684

fiGenerating Natural Language Descriptions OWL Ontologies

texts, many times. Again, information user modeling mechanisms
Naturalowl found elsewhere (Androutsopoulos et al., 2012).
Selecting message triples convey
asked describe target, Naturalowl first retrieves ontology relevant owl statements, possibly second-level targets. converts retrieved
statements message triples, consults interest scores personal user models rank message triples decreasing interest score, discarding triples
already assimilated. message triple target assimilated,
message triples second-level targets connected assimilated triple
discarded; example, creationPeriod triple (edge) Figure 2 assimilated, triples archaic period (the edges leaving archaicPeriod)
discarded. system selects maxMessagesPerPage triples
interesting remaining ones; maxMessagesPerPage parameter whose value set
smaller larger values types users prefer shorter longer texts, respectively.
Limitations content selection
owl allows one define broadest possible domain range particular property,
using statements following.
ObjectPropertyDomain(:madeFrom :Wine)

ObjectPropertyRange(:madeFrom :Grape)

practice, specific range restrictions imposed particular subclasses
propertys domain. example, following statements specify madeFrom
used individuals subclass GreekWine Wine, range (possible values)
madeFrom restricted individuals subclass GreekGrape Grape.
SubClassOf(:GreekWine :Wine) SubClassOf(:GreekGrape :Grape)
SubClassOf(:GreekWine AllValuesFrom(:madeFrom :GreekGrape))

Naturalowl considers AllValuesFrom similar restrictions (see Tables 1 2),
ObjectPropertyDomain ObjectPropertyRange statements. latter typically provide
general and, hence, uninteresting information perspective end-users.
generally, Naturalowl consider owl statements express axioms
properties, meaning statements declaring property symmetric, asymmetric,
reflexive, irreflexive, transitive, functional, inverse functional, property
inverse of, disjoint another property, subsumed chain
properties, subproperty (more specific) another property. Statements
kind mostly useful consistency checks, deduction, generating texts
describing properties (e.g., grandparent somebody means).14
3.1.2 Text Planning
target, previous mechanisms produce message triples expressed,
triple intended easily expressible single sentence. text planner
Naturalowl orders message triples, effect ordering corresponding sentences.
14. Subproperties without sentence plans, discussed below, could inherit sentence plans superproperties, case automatically extract sentence plans ontology instead.

685

fiAndroutsopoulos, Lampouras, & Galanis

Global local coherence
considering global coherence, text planners attempt build structure, usually
tree, shows clauses, sentences, larger segments text related
other, often terms rhetorical relations (Mann & Thompson, 1998). allowed
preferred orderings sentences (or segments) often follow, least partially,
global coherence structure. texts, however, Naturalowl intended
generate, global coherence structures tend rather uninteresting,
sentences simply provide additional information target second-level
targets, global coherence considered Naturalowl.15
considering local coherence, text planners usually aim maximize measures
examine whether adjacent sentences (or segments) continue focus entities or, focus changes, smooth transition is. Many local coherence measures
based Centering Theory (ct) (Grosz, Joshi, & Weinstein, 1995; Poesio, Stevenson,
& Di Eugenio, 2004). Consult work Karamanis et al. (2009) introduction
ct ct-based analysis m-piros texts, applies texts Naturalowl.
maximum fact distance Naturalowl 1, sentence-to-sentence transitions type known ct continue, preferred type. maximum
fact distance 2, however, transitions always continue. repeat
long aryballos description page 681 without sentence aggregation. readers familiar
ct, show italics salient noun phrase sentence un , realizes
discourse entity known preferred center cp (un ). underlined noun phrases realize backward looking center cb (un ), roughly speaking salient discourse entity
previous sentence mentioned current sentence.
(1) (exhibit) aryballos. (2) aryballos kind vase. (3) aryballos small
spherical vase narrow neck, athletes kept oil spread bodies with.
(4) aryballos found Heraion Delos. (5) created archaic period. (6)
archaic period Greek ancient city-states developed. (7) spans 700 bc 480
bc. (8) aryballos decorated black-figure technique. (9) black-figure technique,
silhouettes rendered black pale surface clay, details engraved. (10)
aryballos currently Museum Delos.

sentence 4, cp (u4 ) target exhibit, cb (u4 ) undefined transition
sentence 3 4 nocb, type transition avoided; mark nocb transitions
bullets. sentence 6, cp (u6 ) = cb (u6 ) 6= cb (u5 ), kind transition known
smooth-shift (Poesio et al., 2004), less preferred continue, better nocb.
Another nocb occurs sentence 7 8, followed smooth-shift sentence 8
9, another nocb sentence 9 10. transitions continue.
text planner Naturalowl groups together sentences (message triples) describe particular second-level target (e.g., sentences 23, 67, 9) places
group immediately sentence introduces corresponding second-level target
(immediately sentences 1, 5, 8). Thus transition sentence introduces second-level target first sentence describes second-level target (e.g.,
15. Liang et al. (2011a) Power (2011) seem agree rhetorical relations relevant
generating texts owl ontologies.

686

fiGenerating Natural Language Descriptions OWL Ontologies

sentence 1 2, 5 6, 8 9) smooth-shift (or continue
special case initial sentence 1 2). nocb occurs sentences return
providing information primary target, group sentences provide
information second-level target. transitions type continue.
simple strategy avoid nocb transitions would end generated text
message triples describe second-level target reported, record
user model message triples content selection provided
actually conveyed. example, would generate sentences 1 3; user
requested information exhibit, sentences 4 7 would generated etc.
Topical order
ordering sentences, need consider topical similarity adjacent
sentences. Compare, example, following two texts.
{locationSection Stoa Zeus Eleutherios located western part Agora. located
next Temple Apollo Patroos.} {buildSection built around 430 bc. built Doric
style. built porous stone marble.} {useSection used Classical period,
Hellenistic period, Roman period. used religious place meeting point.}
{conditionSection destroyed late Roman period. excavated 1891 1931. Today
good condition.}
Stoa Zeus Eleutherios built Doric style. excavated 1891 1931.
built porous stone marble. located western part Agora. destroyed
late Roman period. used religious place meeting point. located next
Temple Apollo Patroos. built around 430 bc. Today good condition. used
Classical period, Hellenistic period, Roman period.

Even though texts contain sentences, second text difficult
follow, acceptable. first one better, groups together topically
related sentences. mark sentence groups first text curly brackets,
brackets would shown end-users. longer texts, sentence groups may optionally
shown separate paragraphs sections, call sections.
allow message triples (and corresponding sentences) grouped topic,
domain author may define sections (e.g., locationSection, buildSection) assign
property single section (e.g., assign properties isInArea isNextTo
locationSection). message triple placed section property.
ordering sections properties inside section specified, causing message triples ordered accordingly (e.g., may specify locationSection
precede buildSection, inside locationSection, isInArea property
expressed isNextTo). sections, assignments properties sections,
order sections properties defined domain-dependent generation resources (Androutsopoulos et al., 2012).
overall text planning algorithm
Naturalowls text planning algorithm summarized Figure 3. message triples
ordered include triples describe second-level targets, i.e., triples hS, P, Oi whose
owner second-level target, triples primary second-level target
687

fiAndroutsopoulos, Lampouras, & Galanis

procedure orderMessageTriples
inputs:
t[0]: primary target
t[1], ..., t[n]: second-level targets
L[0]: unordered list triples describing t[0]
...
L[n]: unordered list triples describing t[n]
SMap: mapping properties sections
SOrder: partial order sections
POrder: partial order properties within sections
output:
ordered list message triples
steps:
:= 0 n { orderMessageTriplesAux(L[i], SMap, SOrder, POrder) }
:= 1 n { insertAfterFirst(<t[0], _, t[i]>, L[0], L[i]) }
return L[0]
procedure orderMessageTriplesAux
inputs:
L: unordered list triples single target
SMap: mapping properties sections
SOrder: partial order sections
POrder: partial order properties within sections
local variables:
S[1], ..., S[k]: lists, triples one section
output:
ordered list message triples single target
steps:
<S[1], ..., S[k]> := splitInSections(L, SMap)
:= 1 k { S[i] := orderTriplesInSection(S[i], POrder) }
<S[1], ..., S[k]> := reorderSections(S[1], ..., S[k], SOrder)
return concatenate(S[1], ..., S[k])

Figure 3: overall text planning algorithm Naturalowl.

ordered separately, using ordering properties sections. ordered triples
second-level target inserted ordered list primary target triples,
immediately first triple introduces second-level target, i.e., immediately
first triple whose second-level target.
related work text planning
ordering properties sections similar text schemata (McKeown, 1985),
roughly speaking domain-dependent patterns specify possible arrangements different types sentences (or segments). Sentence ordering studied extensively
text summarization (Barzilay, Elhadad, & McKeown, 2002). Duboue McKeown (2001)
discuss methods could used learn order sentences segments
nlg semantically tagged training corpora. Consult work Barzilay Lee
(2004), Elsner et al. (2007), Barzilay Lapata (2008), Chen et al. (2009).
688

fiGenerating Natural Language Descriptions OWL Ontologies

Figure 4: lexicon entry verb find.
3.2 Micro-planning
processing stages discussed far select order message triples
expressed. next stage, micro-planning, consists three sub-stages: lexicalization,
sentence aggregation, generation referring expressions; see Figure 1 page 676.
3.2.1 Lexicalization
lexicalization, nlg systems usually turn output content selection (in case,
message triples) abstract sentence specifications. Naturalowl, every property
ontology every supported natural language, domain author may specify one
template-like sentence plans indicate message triples involving property
expressed. discuss sentence plans specified, first slight
deviation necessary, briefly discuss lexicon entries Naturalowl.
Lexicon entries
verb, noun, adjective domain author wishes use sentence
plans, lexicon entry provided, specify inflectional forms word.16
lexicon entries multilingual (currently bilingual); allows sentence plans
reused across similar languages better option available, discussed elsewhere
(Androutsopoulos et al., 2007). Figure 4 shows lexicon entry verb whose English
base form find, viewed domain author using Protege plug-in
Naturalowl. identifier lexicon entry toFindLex. English part entry
shows base form find, simple past found etc. Similarly, Greek
part lexicon entry would show base form corresponding verb ()
inflectional forms various tenses, persons etc. lexicon entries nouns
adjectives similar.
English inflectional forms could automatically produced base
forms using simple morphology rules. hope exloit existing English morphology
component, simplenlg (Gatt & Reiter, 2009), future work. Similar
morphology rules Greek used authoring tool m-piro (Androutsopoulos et
al., 2007), hope include future version Naturalowl. Rules kind
would reduce time domain author spends creating lexicon entries. ontologies
considered, however, dozens lexicon entries verbs, nouns, adjectives
16. lexicon entries need provided closed-class words, determiners prepositions.

689

fiAndroutsopoulos, Lampouras, & Galanis

suffice. Hence, even without facilities automatically produce inflectional forms, creating
lexicon entries rather trivial. Another possibility would exploit general-purpose
lexicon lexical database, WordNet (Fellbaum, 1998) celex, though resources
kind often cover highly technical concepts ontologies.17
lexicon entries and, generally, domain-dependent generation resources
Naturalowl stored instances owl ontology (other ontology texts
generated from) describes linguistic resources system (Androutsopoulos
et al., 2012). domain author, however, interacts plug-in need
aware owl representation resources. representing domain-dependent
generation resources owl, becomes easier publish Web, check
inconsistencies etc., owl ontologies.
Sentence plans
Naturalowl, sentence plan sequence slots, along instructions specifying fill in. Figure 5 shows English sentence plan property
usedDuringPeriod, viewed domain author using Protege plug-in Naturalowl. sentence plan expresses message triples form hS, usedDuringPeriod, Oi
producing sentences following.
[slot1 stoa] [slot2 used] [slot3 during] [slot4 Classical period].
[slot1 Stoa Zeus Eleutherios] [slot2 used] [slot3 during] [slot4 Classical period, Hellenistic
period, Roman period].

first slot sentence plan Figure 5 filled automatically
generated referring expression owner (S) triple. example, triple
express <:stoaZeusEleutherios, :usedDuringPeriod, :classicalPeriod>, appropriate
referring expression may demonstrative noun phrase stoa, pronoun
(it), monuments natural language name (the Stoa Zeus Eleutherios).
discuss generation referring expressions below, along mechanisms specify
natural language names. sentence plan specifies referring expression must
nominative case (e.g., stoa, opposed genitive case expressions
stoas, stoas height 5 meters).
second slot filled form verb whose lexicon identifier
toUseVerb. verb form must simple past passive voice, positive polarity
(as opposed used). number must agree number expression
first slot; example, want generate Stoa Zheus Eleutherios
used, Stoas used. third slot filled preposition during.
fourth slot filled expression filler (O) message triple,
accusative case.18 <:stoaZeusEleutherios, :usedDuringPeriod, :classicalPeriod>,
slot would filled natural language name classicalPeriod.19
sentence plan allows resulting sentence aggregated sentences.
17. See http://www.ldc.upenn.edu/Catalog/catalogEntry.jsp?catalogId=LDC96L14 celex.
18. English prepositions usually require noun phrase complements accusative (e.g., him). Greek
languages, cases noticeable effects.
19. Future versions Naturalowl may allow referring expression natural language
name produced (e.g., pronoun), S.

690

fiGenerating Natural Language Descriptions OWL Ontologies

Figure 5: sentence plan property usedDuringPeriod.
generally, instructions sentence plan may indicate slot
filled one following (ivii):
(i) referring expression (owner) message triple. sentence plan may
specify particular type referring expression use (e.g., always use natural language
name S) or, example Figure 5, may allow system automatically
produce appropriate type referring expression depending context.
(ii) verb lexicon entry, particular form, possibly form
agrees another slot. polarity verb manually specified or,
filler (O) message triple Boolean value, polarity automatically set
match value (e.g., produce built-in flash false).
(iii) noun adjective lexicon, particular form (e.g., case, number),
form agrees another slot.
(iv) preposition (v) fixed string.
(vi) expression (filler) triple. individual class,
expression natural language name O; datatype value (e.g., integer),
value inserted slot; similarly disjunction conjunction
datatype values, individuals, classes.
(vii) concatenation property values O, provided individual.
example, may need express message triple first one below, whose (anonymous
rdf sense) object :n linked numeric value (via hasAmount)
individual standing currency (via hasCurrency).
<:tecra8, :hasPrice, _:n>

<_:n, :hasAmount, "850"^^xsd:float>

<_:n, :hasCurrency, :euroCurrency>

would want sentence plan include slot filled concatenation
hasAmount value :n natural language name hasCurrency value :n (e.g.,
850 Euro English, 850 Greek).
Default sentence plan
sentence plan provided particular property ontology, Naturalowl uses default sentence plan, consisting three slots. first slot filled
automatically generated referring expression owner (S) triple,
nominative case. second slot filled tokenized form owl identifier
property. third slot filled appropriate expression filler (O)
691

fiAndroutsopoulos, Lampouras, & Galanis

triple, discussed above, accusative case (if applicable). following message
triple, default sentence plan would produce sentence shown below:
<:stoaZeusEleutherios, :usedDuringPeriod, and(:classicalPeriod, :hellenisticPeriod, :romanPeriod)>

Stoa zeus eleutherios used period classical period, hellenistic period, roman period.

Notice use single message triple and(...) filler, instead different
triple period. kind triple merging effect form aggregation, discussed
below, takes place content selection. Also, assumed sentence
natural language names individuals provided either;
case, Naturalowl uses tokenized forms owl identifiers individuals instead.
tokenizer Naturalowl handle CamelCase (e.g., :usedDuringPeriod)
underscore style (e.g., :used period). styles used identifiers
properties, classes, individuals, output tokenizer may worse
example suggests, resulting sentences improved providing sentence plans
associating classes individuals natural language names, discussed below.
Using rdfs:label strings
owl properties (and elements owl ontologies) labeled strings
multiple natural languages using rdfs:label annotation property, defined rdf
owl standards. example, usedDuringPeriod property could labeled
used shown below; could similar labels Greek languages.
AnnotationAssertion(rdfs:label :usedDuringPeriod "was used during"@en)

rdfs:label string specified property message triple, Naturalowl
uses string second slot default sentence plan. quality resulting
sentences can, thus, improved, rdfs:label strings natural phrases
tokenized property identifiers. rdfs:label shown above, default sentence
plan would produce following sentence.
Stoa zeus eleutherios used classical period, hellenistic period, roman period.

Even rdfs:label strings, default sentence plan may produce sentences disfluencies. Also, rdfs:label strings indicate grammatical categories
words, allow system apply many sentence aggregation rules
discussed below. limitation default sentence plan allow
slots preceded followed, respectively, phrase.
Sentence plans domain-independent modified properties
domain author need provide sentence plans domain-independent
properties (e.g., instanceOf, isA, see Tables 12). properties fixed, domainindependent semantics; hence, built-in sentence plans used. English built-in sentence plans, serve examples sentence plans, summarized
Table 3; Greek built-in sentence plans similar. save space show sentence
plans templates Table 3, show sentence plans negated domainindependent properties (e.g., not(isA)), similar. Additional slot restrictions
692

fiGenerating Natural Language Descriptions OWL Ontologies

Forms message triples
Example message triples
corresponding built-in sentence plans
possible resulting sentences
<S, instanceOf, >
<:eos450d, instanceOf, :PhotographicCamera>
ref(S) toBeVerb name(indef, O)
eos 450d photographic camera.
<S, instanceOf, >
<:eos450d, instanceOf, :Cheap>
ref(S) toBeVerb name(adj, O)
eos 450d cheap.
<S, oneOf, >
<:WineColor, oneOf, or(:white, :rose, :red)>
ref(S) toBeVerb name(O)
wine color white, rose, red.
<S, differentIndividuals, >
<:n97, differentIndividuals, :n97mini>
ref(S) toBeVerb identical name(O)
n97 identical n97 mini.
<S, sameIndividual, >
<:eos450d, sameIndividual, :rebelXSi>
ref(S) toBeVerb identical name(O)
identical Rebel xsi.
<S, isA, >
<:StEmilion, isa, :Bordeaux>
ref(S) toBeVerb kind name(noarticle, O)
St. Emilion kind Bordeaux.
<S, isA, >
<:StEmilion, isa, :Red>
ref(S) toBeVerb name(adj, O)
St. Emilion red.
Notation: ref() stands referring expression ; name() natural language name ;
name(indef, ) name(noarticle, ) mean name noun phrase indefinite
article. Sentence plans involving name(adj, ) used natural language name
sequence one adjectives; otherwise sentence plan previous row used.

Table 3: Built-in English sentence plans domain-independent properties.
shown Figure 3 require, example, subject-verb number agreement verb forms
(is was) present tense. Information provided specifying natural
language names individuals classes, discussed below, shows definite indefinite
articles articles used (e.g., n97 mini, exhibit 24, St. Emilion St. Emilion simply St. Emilion), default number
name (e.g., wine color Wine colors are). possible modify
built-in sentence plans; example, museum context may wish generate
aryballos kind vase instead aryballos kind vase.
sentence plans modified properties (e.g., minCardinality(manufacturedBy), see
Tables 12) automatically produced, sentence plans unmodified
properties (e.g., manufacturedBy).
Specifying appropriateness sentence plans
Multiple sentence plans may provided property ontology
language. Different appropriateness scores (similar interest scores properties)
assigned alternative sentence plans per user type. allows specifying,
example, sentence plan generates sentences amphora depicts Miltiades less appropriate interacting children, compared alternative sentence
plan common verb (e.g., shows). Automatically constructed sentence plans
inherit appropriateness scores sentence plans constructed from.
Related work sentence plans
sentence plans Naturalowl similar expressions sentence planning languages spl (Kasper & Whitney, 1989) used generic surface realizers,
fuf/surge (Elhadad & Robin, 1996), kpml (Bateman, 1997), realpro (Lavoie & Ram693

fiAndroutsopoulos, Lampouras, & Galanis

bow, 1997), nitrogen/halogen (Langkilde, 2000), openccg (White, 2006).
sentence plans Naturalowl, however, leave fewer decisions subsequent stages.
disadvantage sentence plans often include information could obtained large-scale grammars corpora (Wan, Dras, Dale, & Paris, 2010).
hand, input generic surface realizers often refers non-elementary linguistic concepts (e.g., features particular syntax theory) concepts upper model
(Bateman, 1990); latter high-level domain-independent ontology may use
different conceptualization ontology texts generated from. Hence,
linguistic expertise, example Systemic Grammars (Halliday, 1994) case kpml
(Bateman, 1997), effort understand upper model required. contrast,
sentence plans Naturalowl require domain author familiar elementary linguistic concepts (e.g., tense, number), require familiarity
upper model. sentence plans simpler than, example, templates Busemann Horacek (1999) McRoy et al. (2003), allow, instance,
conditionals recursive invokation templates. See work Reiter (1995)
van Deemter et al. (2005) discussion template-based vs. principled nlg.
corpora texts annotated message triples express available,
templates automatically extracted (Ratnaparkhi, 2000; Angeli, Liang, & Klein,
2010; Duma & Klein, 2013). Statistical methods jointly perform content selection,
lexicalization, surface realization proposed (Liang, Jordan, & Klein,
2009; Konstas & Lapata, 2012a, 2012b), currently limited generating single
sentences flat records.
Specifying natural language names
domain author assign natural language (nl) names individuals
named classes ontology; recall named classes mean classes owl
identifiers. individual named class assigned nl name, rdfs:label
tokenized form identifier used instead. nl names domain author
provides specified much sentence plans, i.e., sequences slots. example,
may specify English nl name class ItalianWinePiemonte concatenation
following slots; explain slots below.
[indef an] [adj Italian] [headnoun wine] [prep from] [def the] [noun Piemonte] [noun region]

would allow Naturalowl generate sentence shown following
message triple; tokenized form identifier wine32 used.
<:wine32, instanceOf, :ItalianWinePiemonte>

Wine 32 Italian wine Piemonte region.

Similarly, may assign following nl names individuals classicalPeriod, stoa
ZeusEleutherios, gl2011, classes ComputerScreen Red. Naturalowl makes
distinction common proper nouns; entered nouns lexicon,
may multi-word (e.g., Zeus Eleutherios). Naturalowl instructed
capitalize words particular slots (e.g., Classical).
694

fiGenerating Natural Language Descriptions OWL Ontologies

[def the] [adj Classical] [headnoun period] , [def the] [headnoun stoa] [prep of] [noun Zeus Eleutherios],
[headnoun GL-2011] , [indef a] [noun computer] [headnoun screen] , [headadj red]

nl names could used express message triples shown below:
<:stoaZeusEleutherios, :usedDuringPeriod,

:classicalPeriod>

Stoa Zeus Eleutherios used Classical period.
<:gl2011, instanceOf, :ComputerScreen>

<:gl2011, instanceOf, :Red>

GL-2011 computer screen. GL-2011 red.

precisely, nl name sequence slots, accompanying instructions
specifying slots filled in. slot filled with:
(i) article, definite indefinite. article first slot (if present) treated
article overall nl name.
(ii) noun adjective flagged head (main word) nl name. Exactly one
head must specified per nl name must lexicon entry. number case
head, taken number case overall nl name,
automatically adjusted per context. example, different sentence plans may require
nl name nominative case used subject, accusative used
object verb; aggregation rules, discussed below, may require singular
nl name turned plural. Using lexicon entries, list inflectional forms
nouns adjectives, Naturalowl adjust nl names accordingly. gender
head adjectives automatically adjusted, whereas gender head nouns
fixed specified lexicon entries.
(iii) noun adjective, among listed lexicon. nl name may
require particular inflectional form used, may require inflectional form
agrees another slot nl name.
(iv) preposition, (v) fixed string.
sentence plans, domain author specifies nl names using Protege
plug-in Naturalowl. Multiple nl names specified individual class,
assigned different appropriateness scores per user type; hence, different
terminology (e.g., common names diseases) used generating texts nonexperts, opposed texts experts (e.g., doctors). domain author specify,
using plug-in, nl names particular individuals classes involve
definite, indefinite, articles, nl names singular plural
default. example, may prefer texts mention class aryballoi single
particular generic object, using indefinite singular plural form, shown below.
aryballos kind vase. aryballos kind vase. Aryballoi kind vase.

695

fiAndroutsopoulos, Lampouras, & Galanis

3.2.2 Sentence Aggregation
sentence plans previous section lead separate sentence message triple.
nlg systems often aggregate sentences longer ones improve readability. Naturalowl, maximum number sentences aggregated form single longer
sentence specified per user type via parameter called maxMessagesPerSentence.
museum contexts system originally developed for, setting maxMessagesPerSentence
3 4 led reasonable texts adult visitors, whereas value 2 used children. sentence aggregation Naturalowl performed set manually crafted
rules, intended domain-independent. claim set rules,
initially based aggregation rules m-piro (Melengoglou, 2002), complete,
hope extended future work; see, example, work Dalianis
(1999) rich set aggregation rules.20 Nevertheless, current rules Naturalowl
already illustrate several aggregation opportunities arise generating texts
owl ontologies.
save space, discuss English sentence aggregation; Greek aggregation similar. show mostly example sentences aggregation, rules actually
operate sentence plans consider message triples expressed.
rules intended aggregate short single-clause sentences. Sentence plans produce
complicated sentences may flagged (using tickbox bottom Figure
5) signal aggregation affect sentences. aggregation rules apply almost exclusively sentences adjacent ordering produced text
planner; exception aggregation rules involve sentences cardinality
restrictions. Hence, depending ordering text planner may
fewer aggregation opportunities; see work Cheng Mellish (2000) related discussion. Also, aggregation rules Naturalowl operate sentences topical
section, aggregating topically unrelated sentences often sounds unnatural.
aggregation Naturalowl greedy. rules discussed below, starting
discussed first, system scans original (ordered) sentences first
last, applying rule wherever possible, provided rules application lead
sentence expressing maxMessagesPerSentence original sentences. rule
applied multiple ways, example aggregate two three sentences, application
aggregates sentences without violating maxMessagesPerSentence preferred.
Avoid repeating noun multiple adjectives: Message triples form hS, P, O1 i, . . . ,
hS, P, aggregated single message triple hS, P, and(O1 , . . . , )i.
nl names O1 , . . . , are, apart possible initial determiners, sequences
adjectives followed head noun, head noun need repeated.
Let us consider following message triple. Assuming nl names three
periods first sentence below, original sentence repeat period three
times. aggregation rule omits last occurrence head noun.
<:stoaZeusEleutherios, :usedDuringPeriod, and(:classicalPeriod, :hellenisticPeriod, :romanPeriod)>

used Classical period, Hellenistic period, Roman period.

used

Classical, Hellenistic, Roman period.
20. appropriate corpora available, may possible train aggregation modules (Walker,
Rambow, & Rogati, 2001; Barzilay & Lapata, 2006).

696

fiGenerating Natural Language Descriptions OWL Ontologies

Cardinality restrictions values: set rules aggregate sentences (not
necessarily adjacent) express message triples form hS, (P ), Oi hS, P, Oi,
P , minCardinality, maxCardinality, exactCardinality.
rules applied, MaxMessagesPerSentence ignored. example, rules
perform aggregations following.
Model 35 sold three countries. Model 35 sold least three countries. Model 35 sold
Spain, Italy, Greece.

Model 35 sold exactly three countries: Spain, Italy, Greece.

Class passive sentence: rule aggregates (i) sentence expressing message triple
hS, instanceOf, Ci hS, isA, Ci (ii) passive immediately subsequent sentence expressing single triple form hS, P, Oi, S, P (unmodified) property
ontology. subject auxiliary verb second sentence omitted.
Bancroft Chardonnay kind Chardonnay. made Bancroft.

Bancroft Chardonnay

kind Chardonnay made Bancroft.

Class prepositional phrase: second sentence involves verb
active simple present, immediately followed preposition; conditions
previous rule. subject verb second sentence omitted.
Bancroft Chardonnay kind Chardonnay. Bancroft.

Bancroft Chardonnay kind

Chardonnay Bancroft.

Class multiple adjectives: rule aggregates (i) sentence form
previous two rules, (ii) one immediately preceding subsequent sentences,
expressing single message triple hS, Pi , Oi i, S, Pi (unmodified)
properties ontology. preceding subsequent sentences must involve
verb active simple present, immediately followed adjective.
adjectives absorbed sentence (i) maintaining order.
motorbike. red. expensive.

red, expensive motorbike.

verb conjunction/disjunction: sequence sentences involving verb
form, expressing single message triple hS, Pi , Oi i,
triples Pi (unmodified) properties ontology, conjunction formed
mentioning subject verb once. omitted preposition follows.
medium body moderate flavor.
born Athens. born 1918. born Athens 1918.
medium body. moderate flavor.

similar rule applies sentences produced disjunctions message triples, illustrated below. variant first aggregation rule applied.
house wine strong flavor medium flavor.
flavor.

house wine strong medium flavor.
697

house wine strong flavor medium

fiAndroutsopoulos, Lampouras, & Galanis

Different verbs conjunction: sequence sentences, involving
verb form, expressing message triple hS, Pi , Oi i, triples
Pi (unmodified) properties ontology, conjunction formed:
Bancroft Chardonnay dry. moderate flavor. comes Napa.

Bancroft Chardonnay

dry, moderate flavor, comes Napa.

3.2.3 Generating Referring Expressions
sentence plan may require referring expression generated message
triple hS, P, Oi. Depending context, may better, example, use nl
name (e.g., Stoa Zeus Eleutherios), pronoun (e.g., it), demonstrative
noun phrase (e.g., stoa) etc. Similar alternatives could made available O,
Naturalowl currently uses itself, datatype value; nl name O,
tokenized identifier, rdfs:label, entity class; similarly conjunctions
disjunctions O. Hence, focus referring expressions S.
Naturalowl currently uses limited range referring expressions, includes
nl names (or tokenized identifiers rdfs:label strings), pronouns, noun phrases
involving demonstrative nl name class (e.g., vase). example,
referring expressions mention properties (e.g., vase Rome)
generated. Although current referring expression generation mechanisms Naturalowl
work reasonably well, best viewed placeholders elaborate algorithms
(Krahmer & van Deemter, 2012), especially algorithms based description logics (Areces,
Koller, & Striegnitz, 2008; Ren, van Deemter, & Pan, 2010).
Let us consider following generated text, expresses triples hSi , Pi , Oi
shown below. aggregate sentences section, illustrate cases
referring expressions needed; aggregation would reduce, however, number pronouns, making text less repetitive. readers familiar ct (Section 3.1.2),
show italics noun phrase realizing cp (un ), show underlined noun phrase
realizing cb (un ), mark nocb transitions bullets.
(1) Exhibit 7 statue. (2) sculpted Nikolaou. (3) Nikolaou born Athens. (4)
born 1918. (5) died 1998. (6) Exhibit 7 National Gallery. (7) excellent
condition.
<:exhibit7,
<:nikolaou,
<:nikolaou,
<:exhibit7,

instanceOf, :Statue>
<:exhibit7, :hasSculptor, :nikolaou>
:cityBorn, :athens>
<:nikolaou, :yearBorn, "1918"^^xsd:integer>
:yearDied, "1998"^^xsd:integer>
<:exhibit7, :currentLocation, :nationalGallery>
:currentCondition, :excellentCondition>

Naturalowl pronominalizes Sn (for n > 1) Sn = Sn1 , sentences 2, 4, 5,
7. Since typically cp (ui ) = Si , obtain cp (un ) = cp (un1 ), whenever Sn pronominalized, pronoun resolved reader intended. People tend prefer readings
cp (un ) = cp (un1 ), restriction violated (e.g., gender, number, world
knowledge). helps pronouns Naturalowl generates correctly resolved
readers, even would appear potentially ambiguous. example,
pronoun sentence 7 naturally understood referring exhibit, intended to, gallery, even though neuter excellent condition.
698

fiGenerating Natural Language Descriptions OWL Ontologies

Note referents, transition sentence 6 7 continue; hence,
transition type preferences play role. gender generated pronoun gender
(most appropriate) nl name pronoun realizes.21
nl name, Naturalowl uses gender (most appropriate) nl name
specific class includes nl name (or one classes, many).
nl names associated sets genders, give rise pseudo-pronouns
he/she; may desirable nl name class Person.
individuals classes, may wish use nl names, tokenized
identifiers rdfs:label strings. common, example, museum ontologies,
exhibits known particular names, many exhibits anonymous
owl identifiers particularly meaningful. Naturalowl allows domain author
mark individuals classes anonymous, indicate nl names, tokenized
identifiers, rdfs:label strings avoided. primary target marked
anonymous, Naturalowl uses demonstrative noun phrase (e.g., statue) refer
it. demonstrative phrase involves nl name specific class subsumes
primary target, nl name, marked anonymous. Especially
sentences express isA instanceOf message triples primary target,
demonstrative phrase simply this, avoid generating sentences statue
statue. marking anonymous individuals classes currently affects
referring expressions primary target.
3.3 Surface Realization
many nlg systems, sentences end micro-planning underspecified;
example, order constituents exact forms words may unspecified.
Large-scale grammars statistical models used fill missing information
surface realization, already discussed (Section 3.2.1). contrast, Naturalowl
(and template-based nlg systems) (ordered aggregated) sentence plans
end micro-planning already completely specify surface (final) form sentence.
Hence, surface realization Naturalowl mostly process converting internal,
fully specified ordered sentence specifications final text. Punctuation
capitalization added. Application-specific markup (e.g., html tags, hyperlinks)
images added modifying surface realization code Naturalowl.

4. Trials
previous work, Naturalowl used mostly describe cultural heritage objects.
xenios project, tested owl version ontology created
m-piro document approximately 50 archaeological exhibits (Androutsopoulos et
al., 2007).22 owl version comprised 76 classes, 343 individuals (including cities, persons
etc.), 41 properties. xenios, Naturalowl embedded robotic avatar
presented exhibits m-piro virtual museum (Oberlander, Karakatsiotis,
21. languages Greek use grammatical instead natural genders, pronouns genders cannot
determined consulting ontology (e.g., check referent animate inanimate).
22. xenios co-funded European Union Greek General Secretariat Research Technology; see http://www.ics.forth.gr/xenios/.

699

fiAndroutsopoulos, Lampouras, & Galanis

Isard, & Androutsopoulos, 2008). recently, indigo project, Naturalowl
embedded mobile robots acting tour guides exhibition ancient Agora
Athens.23 owl ontology documenting 43 monuments used; 49 classes,
494 individuals, 56 properties total.
xenios indigo, texts Naturalowl eventually indistinguishable
human-authored texts. participated, however, development ontologies,
may biased towards choices (e.g., classes, properties) made easier
Naturalowl generate high-quality texts. Hence, trials discussed below, wanted
experiment independently developed ontologies. wanted experiment
different domains, opposed cultural heritage.
goal compare texts Naturalowl simpler verbalizer. used owl verbalizer swat project (Stevens et al., 2011; Williams,
Third, & Power, 2011), found particularly robust useful.24 verbalizer produces alphabetical glossary entry named class, property,
individual, without requiring domain-dependent generation resources. glossary entry
sequence English-like sentences expressing corresponding owl statements
ontology. swat verbalizer uses predetermined partial order statements
glossary entry; example, describing class, statements equivalent classes
super-classes mentioned first, individuals belonging target class mentioned last.25 verbalizer actually translates owl ontology Prolog, extracts
lexicon entries owl identifiers rdfs:label strings, uses predetermined sentence plans specified dcg grammar. aggregates, effect, message triples
property share one argument (S O) (Williams & Power, 2010).
hypothesis domain-dependent generation resources would help Naturalowl produce texts end-users would consider fluent coherent, compared
produced swat verbalizer, produced Naturalowl without
domain-dependent generation resources. wanted demonstrate high-quality
texts could produced English Greek, measure effort required
create domain-dependent generation resources Naturalowl existing ontologies. effort measured previous work, development
domain-dependent generation resources combined development
ontologies. Since time needed create domain-dependent generation resources
depends ones familiarity Naturalowl Protege plug-in, exact times
particularly informative. Instead, report figures number sentence plans,
lexicon entries etc. required, along approximate times. evaluate
23. indigo fp6 ist project European Union; consult http://www.ics.forth.gr/indigo/.
Videos robots xenios indigo available http://nlp.cs.aueb.gr/projects.html.
Two aueb students, G. Karakatsiotis V. Pterneas, Interoperability Challenge 2011
Microsoft Imagine Cup similar mobile phone application, called Touring Machine, uses
Naturalowl; see http://www.youtube.com/watch?v=PaNAmNC7dZw.
24. swat verbalizer used on-line http://swat.open.ac.uk/tools/. used generalpurpose version on-line July August 2011; similar verbalizer owl ace (Section
2) available http://attempto.ifi.uzh.ch/site/docs/owl ace.html. domain-specific version
swat snomed biomedical ontology developed (Liang et al., 2011a, 2011b).
25. verbalizer organizes English-like sentences glossary entry sub-headings
Definition, Taxonomy, Description, Distinctions (Williams et al., 2011). discarded subheadings, whose meanings entirely clear us, retained order sentences.

700

fiGenerating Natural Language Descriptions OWL Ontologies

usability Protege plug-in Naturalowl, since similar authoring
tool m-piro. Previous experiments (Androutsopoulos et al., 2007) showed computer
science graduates expertise nlg could learn use effectively authoring tool
m-piro create necessary domain-dependent generation resources existing
new ontologies, receiving equivalent full-day introduction course.
4.1 Trials Wine Ontology
first trial, experimented Wine Ontology, often used Semantic
Web tutorials.26 comprises 63 wine classes, 52 wine individuals, total 238 classes
individuals (including wineries, regions, etc.), 14 properties.
submitted Wine Ontology swat verbalizer obtain glossary Englishlike descriptions classes, properties, individuals. retained descriptions
63 wine classes 52 wine individuals. Subsequently, discarded 20
63 wine class descriptions, trivial classes (e.g., RedWine)
stating obvious (e.g., red wine defined wine color Red).27
descriptions remaining 43 wine classes 52 wine individuals, discarded
sentences expressing axioms Naturalowl consider, example sentences
providing examples individuals belong class described. remaining
sentences express owl statements Naturalowl expresses maximum
fact distance set 1. Two examples texts produced swat verbalizer follow.
Chenin Blanc (class): chenin blanc defined something wine, made grape
Chenin Blanc Grape, made grape one thing. chenin blanc flavor
Moderate, color White. chenin blanc sugar Dry Dry,
body Full Medium.
Foxen Chenin Blanc (individual): Foxen Chenin Blanc chenin blanc. Foxen Chenin
Blanc body Full. Foxen Chenin Blanc flavor Moderate. Foxen Chenin Blanc
maker Foxen. Foxen Chenin Blanc sugar Dry. Foxen Chenin Blanc located
Santa Barbara Region.

Subsequently, generated texts 43 classes 52 individuals using Naturalowl
without domain-dependent generation resources, hereafter called Naturalowl(), setting
maximum fact distance 1; resulting texts similar swats.
constructed domain-dependent generation resources Naturalowl
Wine Ontology. resources summarized Table 4. constructed
second author, devoted three days construction, testing, refinement.28
experience takes weeks (if longer) develop owl ontology size
Wine Ontology (acquire domain knowledge, formulate axioms owl, check
inconsistencies, populate ontology individuals etc.); hence, period days
26. See http://www.w3.org/TR/owl-guide/wine.rdf.
27. Third (2012) discusses owl axioms leading undesirable sentences kind might detected.
28. resources constructed editing directly owl representations, rather using
Protege plug-in, fully functional time. using fully functional
plug-in, time create domain-dependent generation resources would shorter.

701

fiAndroutsopoulos, Lampouras, & Galanis
Resources
Sections
Property assignments sections
Interest score assignments
Sentence plans
Lexicon entries
Natural language names

English

Greek
2
7
8

5
67
41





Table 4: Domain-dependent generation resources created Wine Ontology.
relatively light effort, compared time needed develop owl ontology size.
English texts generated trial; hence, Greek resources constructed.
defined one user type, used interest scores block sentences stating
obvious, assigning zero interest scores corresponding message triples;
set maxMessagesPerSentence 3. 7 14 properties Wine Ontology used
owl statements describe 43 classes 52 individuals. defined 5
sentence plans, 7 properties could expressed sentence plans.
define multiple sentence plans per property. assigned 7 properties
2 sections, ordered sections properties. created nl names
automatically extracted ones causing disfluencies. extracted nl names
obtained owl identifiers classes individuals; rdfs:label strings
available. reduce number manually constructed nl names further, declared
52 individual wines anonymous (and provided nl names them).
67 lexicon entries used remaining 41 nl names classes individuals;
nl names simple, 2 slots average. used Naturalowl
domain-dependent resources, hereafter called Naturalowl(+), re-generate 95 texts,
setting maximum fact distance 1; example texts follow.
Chenin Blanc (class): Chenin Blanc moderate, white wine. full medium body.
off-dry dry. made exactly one wine grape variety: Chenin Blanc grapes.

Foxen Chenin Blanc (individual): wine moderate, dry Chenin Blanc. full body.
made Foxen Santa Barbara County.

resulting 285 texts (95 3) three systems (swat verbalizer, Naturalowl(),
Naturalowl(+)) shown 10 computer science students (both undergraduates
graduate students), involved development Naturalowl;
fluent English, though native English speakers, consider
wine experts. students told glossary wines developed people
interested wines knew basic wine terms (e.g., wine colors, wine flavors),
otherwise wine experts. one 285 texts given exactly
one student. student given approximately 30 texts, approximately 10 randomly
selected texts system. owl statements texts generated
shown, students know system generated text.
student shown his/her texts random order, regardless system
generated them. students asked score text stating strongly
agreed disagreed statements S1 S5 below. scale 1 3 used (1:
disagreement, 2: ambivalent, 3: agreement).
702

fiGenerating Natural Language Descriptions OWL Ontologies
Criteria
Sentence fluency
Referring expressions
Text structure
Clarity
Interest

swat
2.00 0.15
1.40 0.13
2.15 0.16
2.66 0.13
2.30 0.15

Naturalowl()
1.76 0.15
1.15 0.09
2.20 0.16
2.55 0.13
2.14 0.16

Naturalowl(+)
2.80 0.10
2.72 0.13
2.94 0.05
2.74 0.11
2.68 0.12

Table 5: Results texts generated Wine Ontology swat verbalizer
Naturalowl (+) without () domain-dependent generation resources.
(S1 ) Sentence fluency: sentences text fluent, i.e., sentence grammatical
sounds natural. two smaller sentences combined form single, longer sentence,
resulting longer sentence grammatical sounds natural.
(S2 ) Referring expressions: use pronouns referring expressions (e.g., wine)
appropriate. choices referring expressions (e.g., use pronoun expression instead
name object) sound natural, easy understand expressions refer to.
(S3 ) Text structure: order sentences appropriate. text presents information moving
reasonably one topic another.
(S4 ) Clarity: text easy understand, provided reader familiar basic wine terms.
(S5 ) Interest: People interested wines, wine experts, would find information
interesting. Furthermore, redundant sentences text (e.g., sentences stating obvious).29

S5 assesses content selection, first processing sub-stage; expected differences
across three systems small, reported information,
exception redundant sentences blocked using zero interest assignments Naturalowl.
S3 assesses text planning, second sub-stage; expected small differences, many
wine properties mentioned order, though properties (e.g.,
maker, location) naturally reported separately others (e.g., color, flavor),
used two sections (Table 4). S1 assesses lexicalization aggregation;
decided use separate statements two stages, since might difficult
students understand exactly aggregation takes place. S2 assesses referring
expression generation. S4 measures overall perceived clarity texts.
statement surface realization, stage rather trivial effect.
Table 5 shows average scores three systems, averages computed
95 texts system, along 95% confidence intervals (of sample means).
criterion, best score shown bold; confidence interval best score
shown bold overlap confidence intervals.30
expected, domain-dependent generation resources clearly help Naturalowl produce fluent sentences much better referring expressions. text structure scores
show assignment ontologys properties sections ordering
sections properties greater impact perceived structure texts
expected. highest score swat verbalizer obtained clarity criterion, agrees experience one usually understand texts
swat verbalizer mean, even sentences often entirely fluent, particularly well ordered, keep repeating proper names. Naturalowl(+)had highest clarity
29. students told consider whether additional information included.
30. two intervals overlap, difference statistically significant. overlap,
difference may still statistically significant; performed paired two-tailed t-tests ( = 0.05)
cases. pilot study, measured inter-annotator agreement two students sample
30 texts (10 system). Agreement high (sample Pearson correlation r 0.91)
five criteria. similar pilot study performed next trial, indicating high agreement.

703

fiAndroutsopoulos, Lampouras, & Galanis

score, difference swat verbalizer, second highest score,
statistically significant. Naturalowl(+)also obtained higher interest scores
two systems, statistically significant differences both; differences,
larger expected, attributed zero interest score assignments
domain-dependent generation resources, blocked sentences stating obvious,
otherwise three systems report information.
swat verbalizer obtained higher scores Naturalowl(), text structure score exception. difference referring expression scores
two systems, though, statistically significant. systems, however, received
particularly low scores referring expressions, surprising, given
always refer individuals classes extracted names; slightly higher
score swat verbalizer probably due better tokenization owl identifiers.
4.2 Trials Consumer Electronics Ontology
second trial, experimented Consumer Electronics Ontology, owl ontology consumer electronics products services.31 ontology comprises 54 classes
441 individuals (e.g., printer types, paper sizes, manufacturers), information
particular products. added 60 individuals describing 20 digital cameras, 20 camcorders, 20 printers. 60 individuals randomly selected publicly available
dataset 286 digital cameras, 613 camcorders, 58 printers, whose instances comply
Consumer Electronics Ontology.32
submitted Consumer Electronics Ontology additional 60 individuals
swat verbalizer, retained descriptions 60 individuals. Again,
removed sentences expressing axioms Naturalowl consider. renamed
string values datatype properties make texts easier understand (e.g.,
cmt became cm). example description follows.
Sony Cyber-shot DSC-T90 digital camera.
Sony Cyber-shot DSC-T90 manufacturer Sony.
Sony Cyber-shot DSC-T90 data interface type Usb2 0.
Sony Cyber-shot DSC-T90 depth Depth. Depth unit measurement cm. Depth value
float 9.4.
Sony Cyber-shot DSC-T90 digital zoom factor Digital Zoom Factor. Digital Zoom Factor
value float 12.1. [. . . ]
Sony Cyber-shot DSC-T90 feature Video Recording, Microphone Automatic Picture Stabilizer.
Sony Cyber-shot DSC-T90 self timer true. [. . . ]

ontology, many properties composite values, expressed using auxiliary individuals. example above, property (hasDepth) connects digital camera
auxiliary individual Depth (similar anonymous node :n property concatenation
price example page 691), connected via two properties (hasValueFloat
31. Consult http://www.ebusiness-unibw.org/ontologies/consumerelectronics/v1.
32. See http://rdf4ecommerce.esolda.com/ dataset used. list similar datasets
available http://wiki.goodrelations-vocabulary.org/Datasets.

704

fiGenerating Natural Language Descriptions OWL Ontologies

hasUnitOfMeasurement) float value 9.4 unit measurement (centimeters), respectively. obtained descriptions auxiliary individuals (e.g., Depth),
different entries glossary swat verbalizer, copied immediately corresponding sentences introduce auxiliary individuals.
formatted text list sentences, above, improve readability.
generated texts 60 products using Naturalowl(), setting maximum
fact distance 1. Descriptions auxiliary individuals generated copied
immediately sentences introducing them. texts similar
swat verbalizer, formatted manner.
trial, wanted consider scenario set individuals
described changes frequently (e.g., products sold reseller change, new products arrive etc.) along changes connected individuals (e.g., new manufacturers may
added), nothing else ontology changes, i.e., assertional knowledge
changes. case, may impractical update domain-dependent generation
resources whenever population individuals changes. hypothesis considering sample individuals types described (printers, cameras, camcorders,
case), would possible construct domain-dependent generation resources (e.g.,
sections, ordering sections properties, sentence plans, nl names classes)
would help Naturalowl generate reasonably good descriptions new (unseen) individuals (products), without updating domain-dependent generation resources, using
tokenized owl identifiers rdfs:label strings new individuals nl names.
simulate scenario, randomly split 60 products two non-overlapping sets,
development set test set, consisting 10 digital cameras, 10 camcorders,
10 printers. Again, second author constructed refined domain-dependent
generation resources Naturalowl, time considering version ontology
included 30 development products, 30 test products, viewing
generated texts 30 development products only. took approximately six days (for
two languages).33 Hence, relatively light effort needed, compared time
typically takes develop ontology size, terminology two languages. Texts
30 products test set generated using Naturalowl
domain-dependent generation resources development set.
previous trial, defined one user type, used interest scores
block sentences stating obvious. maximum messages per sentence 3.
constructed domain-dependent generation resources English Greek;
resources summarized Table 6. created sentence plans 42 properties
ontology used development set (one sentence plan per property);
test set uses two additional properties, default sentence plans Naturalowl
(for English Greek) used. assigned 42 properties 6 sections,
ordered sections properties. created nl names automatically
extracted ones causing disfluencies development texts. Unlike previous
trial, products described declared anonymous individuals,
number nl names provided roughly previous trial,
33. Again, domain-dependent generation resources constructed editing owl representations. test, second author later reconstructed domain-dependent generation resources
scratch using fully functional Protege plug-ing, time four days.

705

fiAndroutsopoulos, Lampouras, & Galanis
Resources
Sections
Property assignments sections
Interest score assignments
Sentence plans
Lexicon entries
Natural language names

English

Greek

6
42
12
42
19
36

42
19
36

Table 6: Domain-dependent generation resources Consmer Electronics Ontology.
since fewer automatically extracted names causing disfluencies; particular,
products reasonably good rdfs:label strings providing English names.
example description development set produced Naturalowl(+)follows.
formatted sentences section separate paragraph, headed name
section (e.g., features:); easy, Naturalowl automatically
mark sections texts. maximum fact distance 1, sentence
plans caused Naturalowl automatically retrieve additional message triples describing
auxiliary individuals distance 1; hence, retrieve information
manually, unlike texts swat verbalizer Naturalowl().
Type: Sony Cyber-shot DSC-T90 digital camera.
Main features: focal length range 35.0 140.0 mm, shutter lag 2.0 0.0010 sec
optical zoom factor 4.0. digital zoom factor 12.1 display diagonal 3.0 in.
features: features automatic picture stabilizer, microphone, video recording
self-timer.
Energy environment: uses batteries.
Connectivity, compatibility, memory: supports USB 2.0 connections data exchange
internal memory 11.0 GB.
Dimensions weight: 5.7 cm high, 1.5 cm wide 9.4 cm deep. weighs 128.0 grm.

180 English texts generated three systems 30 development
30 test products shown 10 students first trial. students
told texts would used on-line descriptions products Web
site retailer. Again, owl statements texts generated
shown students, students know system generated
text. student shown 18 randomly selected texts, 9 products development
set (3 texts per system) 9 products test set (again 3 texts per system).
student shown his/her texts random order, regardless system
generated them. students asked score texts previous trial.
Table 7 shows results English texts development set.34 previous trial, domain-dependent generation resources clearly help Naturalowl produce
much fluent sentences, much better referring expressions sentence orderings.
text structure scores swat verbalizer Naturalowl()are much lower
previous trial, message triples express per individual topics, texts systems jump one topic another
making texts look incoherent; example, sentence width camera
may separated sentence height sentence shutter lag.
34. confidence interval 0.00, means students gave score texts.

706

fiGenerating Natural Language Descriptions OWL Ontologies
Criteria
Sentence fluency
Referring expressions
Text structure
Clarity
Interest

swat
1.97 0.15
1.10 0.06
1.67 0.15
1.97 0.15
1.77 0.14

Naturalowl()
1.93 0.27
1.10 0.11
1.33 0.19
2.07 0.26
1.73 0.29

Naturalowl(+)
2.90 0.08
2.87 0.08
2.97 0.04
3.00 0.00
3.00 0.00

Table 7: English development results Consumer Electronics Ontology.
Criteria
Sentence fluency
Referring expressions
Text structure
Clarity
Interest

swat
2.03 0.15
1.10 0.06
1.57 0.13
2.07 0.15
1.83 0.17

Naturalowl()
1.87 0.15
1.10 0.06
1.37 0.12
1.93 0.15
1.60 0.14

Naturalowl(+)
2.87 0.08
2.87 0.08
2.93 0.05
2.97 0.04
2.97 0.04

Table 8: English test results Consumer Electronics Ontology.
incoherence may contributed much lower clarity scores two systems, compared previous trial. interest scores two systems much
lower previous trial; may due verbosity texts, caused
frequent references auxiliary individuals second trial, combined lack
(or little use) sentence aggregation pronoun generation. contrast, clarity interest Naturalowl(+)were judged perfect; poor clarity interest
two systems may contributed perfect scores though. Again,
swat verbalizer obtained slightly better scores Naturalowl without domain-dependent
generation resources, except clarity, differences statistically significant.
Table 8 shows results English texts test set. results swat
verbalizer Naturalowl()are similar Table 7, one would expect.
Also, marginal decrease scores Naturalowl(+), compared
scores system development set Table 7. statistically
significant difference, however, corresponding cells two tables,
three systems. results support hypothesis considering sample
individuals types described one construct domain-dependent generation
resources used produce high-quality texts new individuals
types, rest ontology remains unchanged. fact products (but
individuals) rdfs:label strings providing English names probably
contributed high results Naturalowl(+)in test set, rdfs:label strings
kind common owl ontologies.
showed 60 Greek texts generated Naturalowl(+)to
10 students, native Greek speakers; swat verbalizer Naturalowl()cannot

Criteria
Sentence fluency
Referring expressions
Text structure
Clarity
Interest

Naturalowl(+),
development data
2.87 0.12
2.77 0.20
3.00 0.00
3.00 0.00
2.97 0.06

Naturalowl(+),
test data
2.83 0.09
2.80 0.11
3.00 0.00
2.93 0.05
3.00 0.00

Table 9: Greek results Consumer Electronics Ontology.
707

fiAndroutsopoulos, Lampouras, & Galanis
No.
1
2
3
4
5
6
7

System Configuration
Naturalowl(+)
interest scores
ref. expr. gen.
nl names
aggregation
sentence plans
sections, ordering

Sentence Fluency
4.80 0.12
4.53 0.16
3.93 0.28
3.71 0.29
3.64 0.33
2 .07 0 .37
1.89 0.36

Ref. Expressions
5.00 0.00
4.95 0.06
1 .53 0 .22
1.48 0.21
1.33 0.19
1.33 0.19
1.33 0.19

Text Structure
4.82 0.15
4.78 0.12
4.80 0.12
4.71 0.15
4.67 0.16
4.60 0.18
1 .53 0 .24

Clarity
4.78 0.12
4.62 0.17
4.51 0.24
4.24 0.25
4.24 0.25
2 .49 0 .36
2.33 0.33

Interest
4.89 0.09
4.20 0.19
4.07 0.22
3.98 0.26
3.93 0.26
2 .38 0.35
1.89 0.28

Table 10: Ablation English test results Consumer Electronics Ontology.
configuration removes one component resource previous configuration.
generate Greek texts Consumer Electronics ontology. Table 9 shows results
obtained Greek texts development test sets. statistically
significant difference corresponding results English (cf. last columns Tables 7 8). statistically significant difference results Greek
texts development test sets (Table 9). note, however, common
use English names electronics products Greek texts, made using English
rdfs:label names products Greek texts acceptable. domains,
example cultural heritage, might unacceptable use English names individuals;
hence, one would provide Greek nl names new individuals.
4.3 Ablation Trials Consumer Electronics Ontology
last trial, studied quality generated texts affected various components domain-dependent generation resources Naturalowl gradually
removed. used Consumer Electronics Ontology, domain-dependent generation resources constructed 30 development products previous
trial. used 45 new test products (15 digital cameras, 15 camcorders, 15 printers, publicly available dataset), 30 development 30
test products previous trial.
generated English texts 45 new test products, using 7 configurations
Naturalowl Table 10. resulting 457 = 315 texts shown 7 students,
background previous trials. student shown 7 texts 6 7
test products (42 49 texts per student). product, 7 texts shown side
side random order, students instructed take account differences
7 texts. students know system generated text.
criteria (statements S1 S5 Section 4.1) used again, scale 1 5
used time (1: strong disagreement, 2: disagreement, 3: ambivalent, 4: agreement,
5: strong agreement), make easier distinguish 7 configurations.
first configuration (Naturalowl(+)) Naturalowl components enabled, using available domain-dependent generation resources. previous
trial (see Table 8), texts configuration judged near-perfect
criteria. second configuration same, without interest score assignments.
results second configuration close results first one, since
interest score assignments used avoid generating sentences stating obvious
(e.g., Sony Cyber-shot DSC-T90 manufactured Sony). biggest decrease
interest criterion, one would expect, scores sentence fluency clarity
affected, presumably sentences state obvious sound unnatural
708

fiGenerating Natural Language Descriptions OWL Ontologies

seem introduce noise. small differences scores referring
expressions text structure, seem suggest overall quality
texts decreases, judges biased towards assigning lower scores criteria.35
third configuration second one, component generates pronouns demonstrative noun phrases disabled, causing Naturalowl always
use nl names individuals classes, names extracted ontology.
big decrease score referring expresions, showing despite simplicity, referring expression generation methods Naturalowl noticeable effect;
mark big decreases italics Table 10. scores sentence fluency, interest,
clarity affected, presumably repeating names individuals
classes made sentences look less natural, boring, difficult follow.
almost difference (a small positive one) text structure score.
fourth configuration, nl names individuals classes removed, forcing Naturalowl always use automatically extracted names.
decrease score referring expressions, decrease small,
referring expressions already poor third configuration. Note, also,
nl names necessary Naturalowl produce pronouns demonstrative noun
phrases; hence, higher referring expression score third configuration would
possible without nl names. sentence fluency clarity scores
affected fourth configuration, presumably automatically extracted names
made texts difficult read understand. small decreases
scores interest even text structure, suggesting overall quality
texts decreases, judges biased towards lower scores criteria.
fifth configuration, aggregation turned off, causing Naturalowl produce
separate sentence message triple. sentences sharing subject
longer aggregated, referring expressions subjects generated. Since
component generates pronouns demonstrative noun phrases switched
nl names removed, repetitions automatically extracted names
used, score referring expressions decreased further. Sentence
fluency affected, since obvious aggregations longer made,
made sentences look less natural. small decrease score
perceived text structure interest, difference score clarity. Overall,
contribution aggregation perceived quality texts seems rather small.
sixth configuration, sentence plans removed, forcing Naturalowl
use default sentence plan tokenized property identifiers. sharp decrease
sentence fluency clarity, one would expect, perceived interest
texts. small decrease perceived text structure, difference
score referring expressions. Overall, results indicate sentence plans
important part domain-dependent generation resources.
seventh configuration, sections, assignments properties sections,
ordering sections properties removed, causing Naturalowl produce random
35. criteria, differences one configuration next one statistically significant, exceptions differences clarity configurations 4 5,
differences scores referring expressions configurations 56 67. Again,
95% confidence intervals overlapped, performed paired two-tailed t-tests ( = 0.05).

709

fiAndroutsopoulos, Lampouras, & Galanis

orderings message triples. sharp decrease score text
structure. scores perceived interest, clarity, sentence fluency
affected, suggesting overall quality texts decreases, judges
biased towards lower scores criteria.
conclude sections ordering information domain-dependent generation resources are, along sentece plans, particularly important. note, however,
best scores obtained enabling components using available
domain-dependent generation resources.

5. Conclusions Future Work
provided detailed description Naturalowl, open-source nlg system produces English Greek texts describing individuals classes owl ontologies. Unlike
simpler verbalizers, typically express single axiom time controlled, often
entirely fluent English primarily benefit domain experts, Naturalowl aims
generate fluent coherent multi-sentence texts end-users one languages.
discussed processing stages Naturalowl, optional domain-dependent generation resources stage, well particular nlg issues arise generating
owl ontologies. presented trials performed measure effort required
construct domain-dependent generation resources extent improve resulting texts, comparing simpler owl verbalizer requires
domain-dependent generation resources employs nlg methods lesser extent.
trials showed domain-dependent generation resources help Naturalowl produce
significantly better texts, resources constructed relatively light
effort, compared effort typically needed develop owl ontology.
Future work could compare effort needed construct domain-dependent generation resources effort needed manually edit lower quality texts produced
without domain-dependent generation resources. experience manually editing
texts generated verbalizer (or Naturalowl()) tedious large
number individuals (e.g., products) types described, editor
repeat (or similar) fixes. may be, however, particular applications
post-editing texts simpler verbalizer may preferable.
aim replace future work pipeline architecture Naturalowl global
optimization architecture consider nlg processing stages parallel, avoid
greedy stage-specific decisions (Marciniak & Strube, 2005; Lampouras & Androutsopoulos,
2013a, 2013b). Finally, hope test Naturalowl biomedical ontologies,
Gene Ontology snomed.36

References
Androutsopoulos, I., Kallonis, S., & Karkaletsis, V. (2005). Exploiting OWL ontologies
multilingual generation object descriptions. 10th European Workshop NLG, pp. 150
155, Aberdeen, UK.
36. See http://www.geneontology.org/ http://www.ihtsdo.org/snomed-ct/.

710

fiGenerating Natural Language Descriptions OWL Ontologies

Androutsopoulos, I., Lampouras, G., & Galanis, D. (2012). Generating natural language descriptions
OWL ontologies: detailed presentation NaturalOWL system. Tech. rep., NLP
Group, Department Informatics, Athens University Economics Business, Greece.
Androutsopoulos, I., Oberlander, J., & Karkaletsis, V. (2007). Source authoring multilingual
generation personalised object descriptions. Nat. Language Engineering, 13 (3), 191233.
Angeli, G., Liang, P., & Klein, D. (2010). simple domain-independent probabilistic approach
generation. Conf. Empirical Methods NLP, pp. 502512, Cambridge, MA.
Antoniou, G., & van Harmelen, F. (2008). Semantic Web Primer. MIT Press.
Areces, C., Koller, A., & Striegnitz, K. (2008). Referring expressions formulas description logic.
5th Int. Nat. Lang. Generation Conf., pp. 4249, Salt Fork, OH.
Baader, F., Calvanese, D., McGuinness, D., Nardi, D., & Patel-Schneider, P. (Eds.). (2002).
Description Logic Handbook. Cambridge Univ. Press.
Barzilay, R., Elhadad, N., & McKeown, K. (2002). Inferring strategies sentence ordering
multidocument news summarization. Journal AI Research, 17, 3555.
Barzilay, R., & Lapata, M. (2005). Collective content selection concept-to-text generation.
Human Lang. Technology Conf. Conf. Empirical Methods Nat. Language Processing,
pp. 331338, Vancouver, British Columbia, Canada.
Barzilay, R., & Lapata, M. (2006). Aggregation via set partitioning natural language generation.
Human Lang. Technology Conf. NAACL, pp. 359366, New York, NY.
Barzilay, R., & Lapata, M. (2008). Modeling local coherence: entity-based approach. Comput.
Linguistics, 34 (1), 134.
Barzilay, R., & Lee, L. (2004). Catching drift: Probabilistic content models, applications
generation & summarization. 43rd Annual Meeting ACL, pp. 113120, Ann Arbor, MI.
Bateman, J. (1990). Upper modelling: general organisation knowledge nat. lang. processing.
5th Int. Workshop NLG, pp. 5461, Dawson, PA.
Bateman, J. (1997). Enabling technology multilingual nat. lang. generation: KPML development environment. Nat. Lang. Engineering, 3 (1), 1556.
Bernardi, R., Calvanese, D., & Thorne, C. (2007). Lite natural language. 7th Int. Workshop
Comput. Semantics, Tilburg, Netherlands.
Berners-Lee, T., Hendler, J., & Lassila, O. (2001). Semantic Web. Sc. American, May, 3443.
Bontcheva, K. (2005). Generating tailored textual summaries ontologies. 2nd European
Semantic Web Conf., Heraklion, Greece.
Bontcheva, K., & Cunningham, H. (2003). Semantic Web: new opportunity challenge
human language technology. Workshop Human Lang. Tech. SW Web
Services, 2nd Int. Semantic Web Conf., Sanibel Island, FL.
Bontcheva, K., Tablan, V., Maynard, D., & Cunningham, H. (2004). Evolving GATE meet new
challenges language engineering. Nat. Lang. Eng., 10 (3/4), 349373.
Bontcheva, K., & Wilks, Y. (2004). Automatic report generation ontologies: MIAKT
approach. 9th Int. Conf. Applications Nat. Language Information Systems, pp.
324335, Manchester, UK.
Brin, S., & Page, L. (1998). anatomy large-scale hypertextual Web search engine. Computer
Networks ISDN Systems, 30 (1-7), 107117.
Busemann, S., & Horacek, H. (1999). flexible shallow approach text generation. 9th Int.
Workshop Nat. Lang. Generation, pp. 238247, New Brunswick, NJ.
711

fiAndroutsopoulos, Lampouras, & Galanis

Chen, H., Branavan, S., Barzilay, R., & Karger, D. (2009). Content modeling using latent permutations. Journal Artificial Intelligence Research, 36, 129163.
Cheng, H., & Mellish, C. (2000). Capturing interaction aggregation text planning
two generation systems. 1st Int. Conf. Nat. Lang. Generation, pp. 186193, Mitzpe
Ramon, Israel.
Cregan, A., Schwitter, R., & Meyer, T. (2007). Sydney OWL syntax towards controlled natural
language syntax OWL. OWL Experiences Directions Workshop, Innsbruck, Austria.
Dale, R., Green, S., Milosavljevic, M., Paris, C., Verspoor, C., & Williams, S. (1998). Dynamic
document delivery: generating natural language texts demand. 9th Int. Conf.
Workshop Database Expert Systems Applications, pp. 131136, Vienna, Austria.
Dalianis, H. (1999). Aggregation nat. lang. generation. Comput. Intell., 15 (4), 384414.
Dannells, D. (2012). generating coherent multilingual descriptions museum objects
Semantic Web ontologies. 7th International NLG Conf., pp. 7684, Utica, IL.
Dannels, D. (2008). Generating tailored texts museum exhibits. Workshop Language
Technology Cultural Heritage Data Language Resources Evaluation Conf., Marrakech, Morocco.
Davis, B., Iqbal, A., Funk, A., Tablan, V., Bontcheva, K., Cunningham, H., & Handschuh, S. (2008).
Roundtrip ontology authoring. 7th Int. Conf. Semantic Web, pp. 5065, Karlsruhe,
Germany.
Demir, S., Carberry, S., & McCoy, K. (2010). discourse-aware graph-based content-selection
framework. 6th Int. NLG Conf., pp. 1725, Trim, Co. Meath, Ireland.
Denaux, R., Dimitrova, V., Cohn, A., Dolbear, C., & Hart, G. (2010). Rabbit OWL: Ontology
authoring CNL-based tool. Fuchs, N. (Ed.), Controlled Nat. Language, Vol. 5972
Lecture Notes Computer Science, pp. 246264. Springer.
Denaux, R., Dolbear, C., Hart, G., Dimitrova, V., & Cohn, A. (2011). Supporting domain experts
construct conceptual ontologies. Web Semantics, 9 (2), 113127.
Duboue, P., & McKeown, K. (2001). Empirically estimating order constraints content planning
generation. 39th Meeting ACL, pp. 172179, Toulouse, France.
Duboue, P., & McKeown, K. (2003). Statistical acquisition content selection rules natural
language generation. Conf. Empirical Methods Nat. Language Processing, pp. 121
128, Sapporo, Japan.
Duma, D., & Klein, E. (2013). Generating nat. lang. Linked Data: Unsupervised template
extraction. 10th Int. Conf. Computational Semantics, pp. 8394, Potsdam, Germany.
Elhadad, M., & Robin, J. (1996). SURGE: reusable comprehensive syntactic realization component. 8th Int. NLG Workshop, Herstmonceux Castle, Sussex, UK.
Elsner, M., Austerweil, J., & Charniak, E. (2007). unified local global model discourse
coherence. Human Lang. Technologies Conf. North American Chapter ACL, pp.
436443, Rochester, New York.
Fellbaum, C. (Ed.). (1998). WordNet: Electronic Lexical Database. MIT Press.
Funk, A., Tablan, V., Bontcheva, K., Cunningham, H., Davis, B., & Handschuh, S. (2007). CLOnE:
Controlled language ontology editing. 6th Int. Semantic Web 2nd Asian Semantic
Web Conf., pp. 142155, Busan, Korea.
Galanis, D., & Androutsopoulos, I. (2007). Generating multi-lingual descriptions linguistically
annotated OWL ontologies: NaturalOWL system. 11th European Workshop Nat.
Lang. Generation, Schloss Dagstuhl, Germany.
712

fiGenerating Natural Language Descriptions OWL Ontologies

Gatt, A., & Reiter, E. (2009). SimpleNLG: realisation engine practical applications. 12th
European Workshop NLG, pp. 9093, Athens, Greece.
Grau, B., Horrocks, I., Motik, B., Parsia, B., Patel-Schneider, P., & Sattler, U. (2008). OWL 2:
next step OWL. Web Semantics, 6, 309322.
Grosz, B., Joshi, A., & Weinstein, S. (1995). Centering: framework modelling local coherence
discourse. Comput. Linguistics, 21 (2), 203225.
Halaschek-Wiener, C., Golbeck, J., Parsia, B., Kolovski, V., & Hendler, J. (2008). Image browsing
natural language paraphrases semantic web annotations. 1st Workshop Semantic
Interop. European Digital Library, 5th European Semantic Web Conf., Tenerife, Spain.
Hallett, C., Scott, D., & Power, R. (2007). Composing questions conceptual authoring.
Comput. Linguistics, 33, 105133.
Halliday, M. (1994). Introduction Functional Grammar (2nd edition). Edward Arnold.
Horrocks, I., Patel-Schneider, P., & van Harmelen, F. (2003). SHIQ RDF OWL:
making Web Ontology Language. Web Semantics, 1 (1), 726.
Isard, A., Oberlander, J., Androutsopoulos, I., & Matheson, C. (2003). Speaking users languages.
IEEE Intelligent Systems, 18 (1), 4045.
Kaljurand, K. (2007). Attempto Controlled English Semantic Web Language. Ph.D. thesis,
Faculty Mathematics Computer Science, University Tartu, Estonia.
Karamanis, N., Mellish, C., Poesio, M., & Oberlander, J. (2009). Evaluating centering information
ordering using corpora. Comput. Linguistics, 35 (1), 2946.
Kasper, R., & Whitney, R. (1989). SPL: sentence plan language text generation. Tech. rep.,
Information Sciences Institute, University Southern California.
Kaufmann, E., & Bernstein, A. (2010). Evaluating usability nat. lang. query languages
interfaces Semantic Web knowledge bases. Web Semantics, 8, 377393.
Kelly, C., Copestake, A., & Karamanis, N. (2010). Investigating content selection language
generation using machine learning. 12th European Workshop Nat. Lang. Generation,
pp. 130137, Athens, Greece.
Konstas, I., & Lapata, M. (2012a). Concept-to-text generation via discriminative reranking. 50th
Annual Meeting ACL, pp. 369378, Jeju Island, Korea.
Konstas, I., & Lapata, M. (2012b). Unsupervised concept-to-text generation hypergraphs.
Human Lang. Technology Conf. NAACL, pp. 752761, Montreal, Canada.
Krahmer, E., & van Deemter, K. (2012). Computational generation referring expressions:
survey. Comput. Linguistics, 38 (1), 173218.
Lampouras, G., & Androutsopoulos, I. (2013a). Using integer linear programming content selection, lexicalization, aggregation produce compact texts OWL ontologies.
14th European Workshop Nat. Lang. Generation, 51st Annual Meeting ACL, pp. 5160,
Sofia, Bulgaria.
Lampouras, G., & Androutsopoulos, I. (2013b). Using integer linear programming concept-to-text
generation produce compact texts. 51st Annual Meeting ACL (short papers),
pp. 561566, Sofia, Bulgaria.
Langkilde, I. (2000). Forest based statistical sentence generation. 1st Conf. North American
Chapter ACL, pp. 170177, Seattle, WA.
Lavoie, B., & Rambow, O. (1997). fast portable realizer text generation systems. 5th
Conf. Applied Nat. Language Processing, pp. 265268, Washington DC.
713

fiAndroutsopoulos, Lampouras, & Galanis

Liang, P., Jordan, M., & Klein, D. (2009). Learning semantic correspondences less supervision.
47th Meeting ACL 4th AFNLP, pp. 9199, Suntec, Singapore.
Liang, S., Scott, D., Stevens, R., & Rector, A. (2011a). Unlocking medical ontologies non-ontology
experts. 10th Workshop Biomedical NLP, Portland, OR.
Liang, S., Stevens, R., Scott, D., & Rector, A. (2011b). Automatic verbalisation SNOMED classes
using OntoVerbal. 13th Conf. AI Medicine, pp. 338342, Bled, Slovenia.
Mann, W., & Thompson, S. (1998). Rhetorical structure theory: theory text organization. Text,
8 (3), 243281.
Marciniak, T., & Strube, M. (2005). Beyond pipeline: Discrete optimization NLP. 9th
Conf. Comput. Nat. Language Learning, pp. 136143, Ann Arbor, MI.
McKeown, K. (1985). Text Generation. Cambridge Univ. Press.
McRoy, S., Channarukul, S., & Ali, S. (2003). augmented template-based approach text
realization. Nat. Language Engineering, 9 (4), 381420.
Melengoglou, A. (2002). Multilingual aggregation M-PIRO system. Masters thesis, School
Informatics, University Edinburgh, UK.
Mellish, C. (2010). Using Semantic Web technology support NLG case study: OWL finds RAGS.
6th Int. NLG Conf., pp. 8593, Trim, Co. Meath, Ireland.
Mellish, C., & Pan, J. (2008). Nat. lang. directed inference ontologies. Artificial Intelligence,
172, 12851315.
Mellish, C., Scott, D., Cahill, L., Paiva, D., Evans, R., & Reape, M. (2006). reference architecture
nat. lang. generation systems. Nat. Language Engineering, 12, 134.
Mellish, C., & Sun, X. (2006). Semantic Web linguistic resource: opportunities nat.
lang. generation. Knowledge Based Systems, 19, 298303.
Nguyen, T., Power, R., Piwek, P., & Williams, S. (2012). Planning accessible explanations
entailments OWL ontologies. 7th International NLG Conf., pp. 110114, Utica, IL.
Oberlander, J., Karakatsiotis, G., Isard, A., & Androutsopoulos, I. (2008). Building adaptive
museum gallery Second Life. Museums Web, Montreal, Canada.
ODonnell, M., Mellish, C., Oberlander, J., & Knott, A. (2001). ILEX: architecture dynamic
hypertext generation system. Nat. Language Engineering, 7 (3), 225250.
Poesio, M., Stevenson, R., & Di Eugenio, B. (2004). Centering: parameter theory instantiations. Comput. Linguistics, 30 (3), 309363.
Power, R. (2009). Towards generation-based semantic web authoring tool. 12th European
Workshop Nat. Lang. Generation, pp. 915, Athens, Greece.
Power, R. (2010). Complexity assumptions ontology verbalisation. 48th Annual Meeting
ACL (short papers), pp. 132136, Uppsala, Sweden.
Power, R. (2011). Deriving rhetorical relationships semantic content. 13th European Workshop Nat. Lang. Generation, Nancy, France.
Power, R. (2012). OWL simplified english: finite-state language ontology editing. 3rd
International Workshop Controlled Natural Language, pp. 4460, Zurich, Switzerland.
Power, R., & Scott, D. (1998). Multilingual authoring using feedback texts. 17th Int. Conf.
Comp. Ling. 36th Meeting ACL, pp. 10531059, Montreal, Canada.
Power, R., & Third, A. (2010). Expressing OWL axioms English sentences: Dubious theory,
feasible practice. 23rd Int. Conf. Comput. Linguistics, pp. 10061013, Beijing, China.
714

fiGenerating Natural Language Descriptions OWL Ontologies

Ratnaparkhi, A. (2000). Trainable methods surface natural language generation. 1st Conf.
North American Chapter ACL, pp. 194201, Seattle, WA.
Rector, A., Drummond, N., Horridge, M., Rogers, J., Knublauch, H., Stevens, R., Wang, H., &
Wroe, C. (2004). OWL pizzas: Practical experience teaching OWL-DL: Common errors
common patterns. 14th Int. Conf. Knowledge Engineering Knowledge Management,
pp. 6381, Northamptonshire, UK.
Reiter, E. (1995). NLG vs. templates. 5th European Workshop Nat. Lang. Generation, Leiden,
Netherlands.
Reiter, E., & Dale, R. (2000). Building Natural Lang. Generation Systems. Cambridge Univ. Press.
Ren, Y., van Deemter, K., & Pan, J. (2010). Charting potential description logic
generation referring expressions. 6th Int. Nat. Lang. Generation Conf., pp. 115123,
Trim, Co. Meath, Ireland.
Schutte, N. (2009). Generating nat. language descriptions ontology concepts. 12th European
Workshop Nat. Lang. Generation, pp. 106109, Athens, Greece.
Schwitter, R. (2010a). Controlled nat. languages knowledge representation. 23rd Int. Conf.
Comput. Linguistics (posters), pp. 11131121, Beijing, China.
Schwitter, R. (2010b). Creating querying formal ontologies via controlled nat. language. Applied
Artificial Intelligence, 24, 149174.
Schwitter, R., Kaljurand, K., Cregan, A., Dolbear, C., & Hart, G. (2008). comparison three
controlled nat. languages OWL 1.1. 4th OWL Experiences Directions Workshop,
Washington DC.
Schwitter, R., & Tilbrook, M. (2004). Controlled natural language meets Semantic Web.
Australasian Language Technology Workshop, pp. 5562, Sydney, Australia.
Shadbolt, N., Berners-Lee, T., & Hall, W. (2006). Semantic Web revisited. IEEE Intell. Systems,
21, 96101.
Stevens, R., Malone, J., Williams, S., Power, R., & Third, A. (2011). Automatic generation
textual class definitions OWL English. Biomedical Semantics, 2 (S 2:S5).
Third, A. (2012). Hidden semantics: learn names ontology?. 7th
International NLG Conf., pp. 6775, Utica, IL.
van Deemter, K., Krahmer, E., & Theune, M. (2005). Real versus template-based natural language
generation: false opposition?. Comput. Linguistics, 31 (1), 1524.
Walker, M., Rambow, O., & Rogati, M. (2001). Spot: trainable sentence planner. 2nd Annual
Meeting North American Chapter ACL, pp. 1724, Pittsburgh, PA.
Wan, S., Dras, M., Dale, R., & Paris, C. (2010). Spanning tree approaches statistical sentence
generation. Krahmer, E., & Theune, M. (Eds.), Empirical Methods Nat. Lang. Generation, pp. 1344. Springer.
White, M. (2006). CCG chart realization disjunctive inputs. 4th Int. Nat. Lang. Generation
Conf., pp. 1219, Sydney, Australia.
Williams, S., & Power, R. (2010). Grouping axioms coherent ontology descriptions. 6th
Int. Nat. Lang. Generation Conf., pp. 197201, Trim, Co. Meath, Ireland.
Williams, S., Third, A., & Power, R. (2011). Levels organization ontology verbalization.
13th European Workshop Nat. Lang. Generation, pp. 158163, Nancy, France.

715


