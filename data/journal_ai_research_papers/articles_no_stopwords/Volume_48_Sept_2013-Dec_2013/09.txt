Journal Artificial Intelligence Research 48 (2013) 415473

Submitted 05/13; published 11/13

Defeasible Inheritance-Based Description Logics
Giovanni Casini

GCasini@csir.co.za

Centre Artificial Intelligence Research (CAIR)
CSIR Meraka Institute UKZN, South Africa

Umberto Straccia

umberto.straccia@isti.cnr.it

Istituto di Scienze e Tecnologie dellInformazione (ISTI)
CNR, Italy

Abstract
Defeasible inheritance networks non-monotonic framework deals hierarchical knowledge. hand, rational closure acknowledged landmark
preferential approach non-monotonic reasoning. combine two approaches
dene new non-monotonic closure operation propositional knowledge bases
combines advantages both. redene procedure Description Logics
(DLs), family logics well-suited model structured information. cases
provide simple reasoning method built top classical entailment relation
and, thus, amenable implementation based existing reasoners. Eventually,
evaluate approach well-known landmark test examples.

1. Introduction
notion rational closure (Lehmann & Magidor, 1992) acknowledged landmark
non-monotonic reasoning due rm logical properties, limited inference
capabilities: e.g. exceptional class inherit typical properties
superclass. Consider penguins: atypical birds, since y, still
share lot typical properties birds, e.g. wings. However, rational
closure may infer penguins wings. hand, Defeasible Inheritance Networks (INs) (Horty, 1994) non-monotonic framework appropriate
formalisation hierarchical knowledge limitation, exhibit
questionable logical properties (see Section 3.1).
combine two approaches dene new non-monotonic closure operation
propositional knowledge bases combines advantages both, apply
method Description Logics (DLs) (Baader, Calvanese, McGuinness, Nardi, & PatelSchneider, 2003), family logics known well-suited model structured
information.
1.1 Contributions Roadmap
Section 2.1 brief recap classical approach inheritance nets, Hortys (1994)
skeptical extension, Section 2.2 describes classical rational closure propositional
logic, generalising method presented Freund (1998). remaining material addresses
contributions summarised follows.
c
2013
AI Access Foundation. rights reserved.

fiCasini & Straccia

1. Section 3 propose new method reason INs relies procedure rational closure, present Boolean extension INs, called Boolean
defeasible Inheritance Networks (BINs).
2. Using BINs, develop Section 4 defeasible inheritance-based propositional closure
combines advantages inheritance nets rational closure.
3. Eventually, Section 5 apply latter procedure case defeasible inheritancebased description logics.
major feature procedures propose propositional logic DLs
still maintain desired logical properties rational closure, inferential
power respect exceptional classes. Moreover method requires existence
decision procedure classical entailment and, thus, implemented top
existing propositional SAT solvers DL reasoners.
Please note present paper substantially revised extended version
previous work (Casini & Straccia, 2011). Specically,
1. provide in-depth description reasoning model;
2. extensively validate approach w.r.t. series landmark (test) examples
illustrated Horty (1994) Sandewall (2010) (see Appendix A);
3. provide computational complexity results related reasoning procedures;
4. include proofs supporting major claims (see Appendix B); due
complexity notation, add table summarising meaning
symbols use frequently (Appendix C).
1.2 Related Work
refer two main approaches non-monotonic reasoning: inheritance networks one
hand preferential approach other.
Inheritance networks developed formalism reasoning taxonomic
information. original ideas Touretzky (1986), approach richly developed
(Sandewall, 1986; Touretzky, Horty, & Thomason, 1987; Horty, Thomason, & Touretzky,
1987; Touretzky, Thomason, & Horty, 1991; Makinson, 1991; Simonet, 1996). See works
Horty (1994) Thomason (1992) overview, Gabbay Schlecta (2009)
Sandewall (2010) recently contributed eld. particular, order
evaluate proposal, shall refer skeptical approach described Horty (1987,
1994) landmark classical approach inheritance networks.
hand, Lehmann Magidors rational closure falls preferential
approach non-monotonic reasoning; approach, since rst formulation
Shoham (1988), become main representative non-monotonic reasoning (Kraus,
Lehmann, & Magidor, 1990; Lehmann & Magidor, 1992; Makinson, 1994, 2005; Freund,
1998; Bochman, 2001; Rott, 2001; Schlechta, 2004), particularly appreciated solid
logical characterization consequence relation.
Eventually, proposal shall applied eld description logics (Baader et al.,
2003). Several non-monotonic DLs exist (Baader & Hollunder, 1993; Bonatti, Faella, &
416

fiDefeasible Inheritance-Based Description Logics

Sauro, 2011c, 2011b; Brewka & Augustin, 1987; Britz, Heidema, & Meyer, 2008; Donini,
Nardi, & Rosati, 2002; Giordano, Olivetti, Gliozzi, & Pozzato, 2009; Giordano, Gliozzi,
Olivetti, & Pozzato, 2012b; Grimm & Hitzler, 2009; Knorr, Alferes, & Hitzler, 2011; Quantz
& Royer, 1992; Straccia, 1993), integrate several kinds non-monotonic reasoning
mechanism DLs. Somewhat related proposal works Britz et al. (2008)
Giordano et al. (2009, 2012b), address application preferential methods DL framework, refer rational closure. previous publication (Casini & Straccia, 2010) present procedure apply rational closure DLs,
procedure basis actual proposal, modify approach
order amplify inferential power.

2. Preliminaries
completeness, start basic notions INs propositional rational
closure shall rely on.
2.1 Defeasible Inheritance Networks
INs (Horty, 1994; Sandewall, 2010) classes (nodes), strict subsumption relation
defeasible subsumption relation among classes (links). shall indicate nodes
letters p, q . . ., shall describe pair N = hS, U i, set
strict links, U set defeasible links. Every link N direct link,
strict defeasible, positive negative. Specically,
1. p q: class p subsumed class q [positive strict link];
2. p 6 q: class p class q disjoint [negative strict link];
3. p q: element class p usually element class q [positive defeasible
link];
4. p 6 q: element class p usually element class q [negative
defeasible link].
Example 2.1. typical penguin example could represented N = h{p b}, {p 6
f, b f, b w}i, reading b Bird, p Penguin, f Flying w Wings.
presence strict links only, subsumption relation classes would
correspond simply transitive closure links: p subsumed q q
subsumed r, p subsumed r. Instead, presence defeasible links implies
possibility potential inconsistencies hierarchy classes, penguin
example: transitive closure subsumption relation would force us conclude
time penguins ying non-ying creatures. Hence reasoning
inheritance networks consists mainly deciding conclusions considered
valid faced potential contradictions. classical approaches
decisions based notions potential path preemption (a procedure that,
given two conicting paths, allows choose one resting specic information,
invalidating other). Among various proposals, shall briey present Hortys (1994)
417

fiCasini & Straccia

classical approach, shall refer landmark. First, recall notion path
shared classical approaches INs. refer paths means
Greek letters (, , , , . . .), tuples indicating sequence nodes involved.
example, triple = hp, , qi indicates path starts node p, passes
path , ends node q.
Definition 2.1 (Potential Paths, Horty, 1994, p. 117). Given net N = hS, U i,
define iteratively paths (where 99K {, } 699K {6, 6})1 :
Every direct link N simple path:
p 99K q S, hp, qi positive path.
p 699K q S, hp, qi negative path.
Assume path = ht, , pi.
positive,
p 99K q S, h, qi positive path.
p 699K q S, h, qi negative path.
negative,
q p S, h, qi negative path.
path composed strict links, strict path, otherwise defeasible
one.
potential path represents potential argumentation, decide
valid not. path strict, automatically considered valid, otherwise, case
potential conicts conclusions distinct defeasible paths, choose
ones considered valid.
Using notions path preemption, Horty denes iterative construction
extension net, is, set paths considered valid net. Due
complexity formal denition, describe roughly procedure, referring
Hortys work (1994, sect. 3), better insight.
inductive construction paths based notion degree paths.
identied potential paths, dene notion generalised path.
is, generalisation defeasible paths that, given {, 6, , , 6}, dened as:
1. every direct link generalised path;
2. = h, pi generalised path, p q N , h, qi generalised path.
associate every defeasible path hp, , qi number corresponds number
links longest generalised path p q, denoted degN (hp, , qi).
inheritance nets, notion contradiction corresponds notion conflict:
say path conicted another path starting end
points, opposite polarity (i.e., two potential paths moving node p
1. assume link 6 symmetric, is, p 6 q S, q 6 p too.

418

fiDefeasible Inheritance-Based Description Logics

node q, one positive negative). dealing strict paths,
presence conict points actual contradiction, while, dealing defeasible
paths, contradiction potential could resolved notion preemption
(Horty, 1994, Def. 3.2.2) allows prefer path relying specic information.
procedure dened Horty start net N , and, working iteratively
degree paths, dene sequence pairs hN , Pi i, Pi set paths
considered valid i-th step. brief, given net N = hS, U i, Hortys procedure results
construction sequence sets valid paths P0 , P1 , P2 , . . . where:
1. P0 = N ;
2. Pn+1 Pn united paths degree n + 1 extension
valid path degree n preempt eventual conicting paths.

skeptical extension net N dened
n=1 Pn (Horty, 1994, sect. 2.2.2
3.3.2). indicate (positive negative, strict defeasible) connection two
nodes p q considered valid Hortys skeptical extension write N
p q,
{, 6, , 6}.
Example 2.2. Consider example 2.1; following Hortys procedure obtain skeptical
extension net composed valid paths p b, p 6 f, b f, b w, p b w.
Consistency. net considered inconsistent validate two conicting paths,
is, pair nodes p q derive positive connection
(N
p q N
p q) negative one (N
p 6 q N
p 6 q)
them.
2.2 Propositional Rational Closure
Non-monotonic systems analysed point view properties consequence relations dene (Makinson, 1994). perspective INs satisfy
desirable logical properties, presented below, (CM) (CT) (Makinson, 1994,
pp. 56-57).
Even satisfaction structural properties going present unanimously considered necessary condition formalization defeasible reasoning,
since interesting nonmonotonic logics satisfy them, still consider satisfaction desiderata: properties intuitive give back strong
logical characterization consequence relation, solid semantic characterization based preferential interpretation (Kraus et al., 1990; Lehmann & Magidor, 1992),
strong connections classic AGM approach belief revision (Alchourron,
Gardenfors, & Makinson, 1985). Moreover decision problem often reduced
procedure based classical decision problem (as proposal going
present) allowing implement procedure top existing reasoners, systems
based preferential approach rarely give back counter-intuitive results. main
problems inferential power approaches often weak (we often
point conclusions would obtain, system able derive), preferential approach developed propositional logics,
attempts extend rst-order languages turned quite problematic.
419

fiCasini & Straccia

proposal going present tries overcome inferential weaknesses, characteristic classical preferential approaches. presenting propositional
languages, readapt procedure expressivity DLs since, even preferential approach cannot easily reformulated rst-order logics, turns still
appropriate fragments rst-order logic DLs.
follows, shall present procedure building rational closure
knowledge base using default-assumption approach (Poole, 1988; Makinson, 2005);
approach reduces construction rational closure series checks based
classical consequence relations. procedure presenting heavily relies
one Freund (1998).
Specically, consider classical propositional language built nite set propositional letters P = {p1 , . . . , pn }, using classical connectives , , , , ; sentences
denoted capital letters C, D, E . . ., sets sentences capital Greek letters
, , . . ., usual meaning true false; knowledge
bases, shall indicate consequential information means C C|D, respectively strict defeasible conditionals, read respectively C,
always C, typically D. denotes classical entailment relation, and,
given set formulae set strict conditionals , indicate
monotonic entailment relations obtained adding , respectively, set propositional
formulae set conditionals {C |= | C } extra information; shall
use | indicate generic non-monotonic consequence relation.
knowledge base (KB) agent represented means conditionals
means formulae; call conditional knowledge base pair hT , Di, nite
set strict conditionals nite set defeasible conditionals.
Example 2.3. penguin example encoded as: K = hT , Di = {p b}
= {p|f, b|f, b|w}.
Another way formalize defeasible information may based simply formulae, using
default-assumption approach: default-assumption knowledge base pair h, i,
sets formulae representing respectively agent considers
necessarily true typically true.
Example 2.4. penguin example could encoded as: K = h, = {p b}
= {b f, p f, b w}.
shall use Greek letter distinguish default-assumption formulae (i.e.,
members ). next show map conditional knowledge base defaultassumption knowledge base (we transform KBs kind one Example 2.3
KBs kind Example 2.4), show simple procedure reason within
latter, relying decision procedure |=.
proceed follows: (i) dene notions rational consequence relation
rational closure, (ii) then, describe procedure build rational closure using
default-assumption knowledge base.
420

fiDefeasible Inheritance-Based Description Logics

consequence relation | rational satises following properties (Lehmann &
Magidor, 1992):
(REF)
(CT)

(CM)

(LLE)

(RW)

C|C every C
C|D

Reexivity

C D|F
C|F

C|D
C|F
C D|F
C|F

C|D

Cautious Monotony

|= C
D|F

|= F
C|F

Cut (Cumulative Transitivity)

Left Logical Equivalence

Right Weakening

(OR)

C|F
D|F
C D|F

Left Disjunction

(RM)

C|F
C6|D
C D|F

Rational Monotony

rst six properties, (REF)(OR), characterise class preferential consequence relations: is, given conditional base
= {C1 |E1 , . . . , Cn |En } ,
say conditional C|D preferential closure P(D) derivable
using rules (REF)(OR) (Kraus et al., 1990). However, preferential closure
generally considered inferentially weak satisfactory, natural look
stronger forms closure.
closure rule (RM) considered, interesting rules,
strongest one. However, given form rule (we negated conditional
premises), rational extension conditional base unique. Indeed,
multiple possibilities close condition: example,
= {C|F }, neither C D|F C|D choose add
either order satisfy (RM); moreover, simple example shows,
possible consequence relation obtained intersection dierent rational
extensions knowledge base satisfy (RM) anymore (in particular case,
intersection would contain neither C D|F C|D). Hence, dene rational
closure conditional base D, choose one possible rational extensions D. Lehmann Magidor dened rational closure operation R satises
set desiderata (Lehmann & Magidor, 1992, sect. 5.1-5.3).
1. P(D) R(D). is, conditional base every conditional preferentially
derivable rational closure D.
2. every conditional form C|, C| R(D) C| P(D). Analogously,
every conditional form |C, |C R(D) |C P(D). conditionals
421

fiCasini & Straccia

form C| dene situations simply considered impossible, conditionals form |C indicate considered typical general. kinds
information properly managed preferential closure.
3. C|F P(D), C|D, C D|F
/ P(D), prefer closure operation
adding C D|F instead C|D: sense rule (RM) employ constrained form monotonicity (given C|F , add C D|F ), arbitrarily add
new defaults (the addition C|D); hence, whenever possible, given conditional
C|F want consider strengthening C D|F instead unmotivated
addition conditional C|D.
shall describe Lehmann Magidors rational closure referring original
formulation (Lehmann & Magidor, 1992). Instead, shall directly refer correspondent
construction, heavily relying procedure dened Freund (1998), based
translation conditional KB default-assumption KB, illustrate next.
start conditional KB K = hT , Di. rst steps (Steps 1-3) dene
exceptionality ranking conditionals KB, following analogous procedure Lehmann Magidor (1992): ranking permit distinguish correctly
strict defeasible knowledge contained KB (Step 4), since part
strict knowledge could implicitly contained D. allow us construct
correspondent default-assumption KB (Steps 5-6). Specically:
Step 1. translate strict knowledge defeasible conditionals, is, move
KB hT , Di h, i,
= {C D| | C } .
Intuitively, preferential setting, saying C valid equivalent
saying negation absurdity ((C D)|) (Bochman, 2001, sect. 6.5).
Step 2. dene set materialisations conditionals , i.e.,
material implications corresponding conditionals:
= {C | C|D } .
Also, indicate AD set antecedents conditionals :
AD = {C | C|D } .
Step 3. dene exceptionality ranking conditionals (Lehmann & Magidor, 1992, sect. 2.6). build ranking following notion exceptionality.
Given set conditionals D, formula C exceptional preferentially
entails |C (i.e., |C P(D)); recall conditional |C R(D) |C
P(D).
conditional C|D said exceptional antecedent C exceptional D. exceptionality proposition decided based |=
(Lehmann & Magidor, 1992, Corol. 5.22), C exceptional set conditionals
422

fiDefeasible Inheritance-Based Description Logics

(i.e., |C P(D)) |= C, set materialisations
conditionals D.
Let E(AD ) indicate set antecedents result exceptional w.r.t. D,
E(AD ) = {C AD | |= C} ,
E(D) exceptional conditionals D, i.e.,
E(D) = {C|D | C E(AD )} .
Obviously, every D, E(D) D.
Step 3.1. Taking consideration knowledge base h, i, construct
iteratively sequence E0 , E1 . . . subsets conditional base following way:
E0 =
Ei+1 = E(Ei ) .
Since nite set, construction terminate (empty nonempty) xed point E, i.e., set composed exceptional conditionals,
materialisations negate antecedents.
Step 3.2. Using sequence, dene ranking function r associates
every conditional number, representing level exceptionality:
r(C|D) =




C|D Ei C|D
/ Ei+1
C|D Ei every .

Step 4. Step 3 dened materialisation rank every conditional it. Now,
Step 4.1. determine inconsistent. conditional base inconsistent derive conditional |. know
conditional form |C rational closure preferential closure, is, given result recalled Step 3.1, check
consistency using : | P(D ) |= ;
Step 4.2. consistent, dene background theory Te agent as2
Te = { C | C|D r(C|D) = } .

Moreover, one may verify every conditional logically
equivalent conditional Te ;

2. One may easily verify correctness definition referring results work Bochman
(2001, sect. 7.5.3, Definition 7.5.1, definition clash p.178, Corollary 7.5.7, Definition 7.5.2,
Lemma 7.5.5). suffices show set conditionals ranking value represents
greatest clash (the proof quite immediate definition exceptionality ranking).

423

fiCasini & Straccia

e i.e.,
Step 4.3. Te , identify set conditionals D,

defeasible part information contained : i.e.,
e = {C|D | r(C|D) < } (obviously,
e D) .


Essentially, far moved non-defeasible knowledge hidden D,
e Moreover, ranking values
obtaining new conditional base hTe , Di.
e
conditionals D.

Step 5. build default-assumption characterization rational closure
e so, translate Te set correspondent formulae ,
e i.e.,
hTe , Di.
e = {C | C Te } ,


e sequence default-assumptions (i.e., formulae) .
e Specically, given

e
rank value conditionals D, construct sequence default assumptions
e = h0 , . . . , n ,


e
n highest rank-value D,
^
e r(C|D) i} .
= {C | C|D

(1)

Dening default-assumptions way, presented Freund (1998), obtain
set default formulae, one associated rank value, s.t. every default
formula classically derivable preceding ones, is,
|= i+1 , 0 < n .
e default-assumption set ,
e according
Step 6. Given background theory
e
e
steps dened far, associate agent pair h, i. Combining
steps main theorem Freunds work (1998, Thm. 24), shown
e
e
default-assumption characterisation agent means pair h,
equivalent rational closure pair hT , Di dened Lehmann Magidor
(1992). is,
Proposition 2.1. Given knowledge base K = hT , Di,
C|D R(K) ,
R rational closure operation defined Lehmann Magidor (1992), iff
e {i } |= D,
{C}

e (we indicate
first formula h0 , . . . , n consistent {C}
C|h,
e
e D).
424

fiDefeasible Inheritance-Based Description Logics

consequence, using following knowledge base transformations
hT , Di

e
hTe , Di

h,

e
e ,
h,

()

e
e means Proposition 2.1,
characterise rational closure hT , Di via h,
i.e.,
C|D R(hT , Di) C|h,
e
e .
So, method decide defeasible consequence rational closure. Specically, given defeasible knowledge base hT , Di propositions C D,
1. all, apply hT , Di transformations () obtain defeasible knowle i;
e
edge base h,

e
e =
2. given C, determine rst ({C} )-consistent
formula sequence
h0 , . . . , n i.
3. decide follows rational closure C w.r.t. hT , Di determining
e {i } D.
whether {C}

Example 2.5. Consider case penguin, knowledge base Example 2.3. First (Step1), move strict knowledge defeasible part, obtaining
= {p b|, p|f, b|f, b|w} .
(Step2) define set materialisations
= {p b , p f, b f, b w} ,
correspondent set antecedents
AD = {p b, b, p} .

use set materialisations determine ranking value formulae
AD conditionals (Step3), obtaining
0 = r(b) = r(b|f ) = r(b|w)
1 = r(p) = r(p|f )
= r(p b) = r(p b|) .
(Step4), define conditional base



e = hTe , Di
e ,
K
Te = { p b}
e = {p|f, b|f, b|w}


(since case strict defeasible part conditional base correctly
e K).
separated already initial base K, obtain K
425

fiCasini & Straccia

conditional base translated knowledge base

(Step5),



e
e
h,
e = {p b}

e = {0 , 1 } ,

0 = (p f ) (b f ) (b w)
1 = p f .

Using default information, conclude (Step6) penguins fly, birds fly
birds wings.
Remark 1. Considering Example 2.5, would intuitive conclude penguins
wings (p|w), rational closure category recognized atypical,
category penguins present case (they birds, dont fly, consequently
r(p) = 1), cannot inherit typical characteristics super classes. Hence
allowed conclude that, presumably, penguins wings. weak inferential
power generally considered main limit rational closure. hand,
going see next section, INs manage successfully kind problems.
procedure determine rational closure maintains computational
complexity classical decision procedure, since easily veried transformations () require O(|K|) entailment tests and, given proposition 2.1
fact strict part encode (monotone) propositional theory,

Proposition 2.2. Deciding propositional defeasible consequence rational closure (|, )
coNP-complete.
Lehmann Magidor (1992) specify semantic characterization propositional rational closure, alternative correspondent construction recently
presented Giordano et al. (2012a). move propositional logic DLs, version
rational closure language ALC previously proposed (Casini & Straccia,
2010), procedure semantically characterized means preferential DL
interpretations (Britz, Casini, Meyer, Moodley, & Varzinczak, 2013).
seen above, rational closure denes non-monotonic consequence relation intuitive behaviour strong logical properties; however, Remark 1, somewhat
weak, often conclusions exceptional situations that, despite intuitive,
cannot derive. behaviour due fact procedure associates set
premises conditionals least exceptional.
Next, going rene rational closure order avoid loss inferential
power w.r.t. exceptional premises. proposal based modication initial
knowledge base: add new conditionals give information exceptional cases
426

fiDefeasible Inheritance-Based Description Logics

would lost rational closure procedure. renement obtained using
ranking procedure, applying locally, is, order decide conditional
C|D added KB apply procedure rational closure,
consider information relevant inferential connection C
D. example, assume knowledge base composed set conditionals
= {p|q, q|r, q|t, p|t}; now, following procedure rational closure obtain
p exceptional proposition, one, cannot derive neither p|r
p|t. But, want derive p|t, already p|t, intuitively
reason avoid conclusion p|r. fact, conclusion would
desirable, since p q, p r generate conict rest
information knowledge base.
So, aim specify way decide information KB relevant
w.r.t. particular connection (in case, p|r). order determine local
relatedness going consider INs: use graphical characterisation order
identify relevant information w.r.t. connection want investigate,
apply ranking procedure pieces information recognised relevant.

3. Boolean Defeasible Inheritance Networks
present new decision procedures INs, based classical propositional decisions,
that, addition main step nonmonotonic construction going
present later on, turns interesting decision procedure per se.
following, proceed follows. rst, dene procedure INs,
map propositional logic, obtaining desired renement rational closure.
3.1 Exceptionality Levels Inheritance Nets
rst aim apply INs modied version decision procedure rational
closure; order dene method deciding validity INs rely
propositional calculus allow easily (i) extend method order include
language propositional connectives , , , (ii) integrate rational
closure, order extend inferential power rational closure without compromising
logical properties. non-negligible side product propositional SAT-based
reasoning procedure.
shall briey review case purely strict nets showing case easily
manageable using propositional calculus, shall focus mixed nets.
3.1.1 Strict Nets
strict part nets want obtain valid connections classical
proposals. net composed strict links, i.e., N = hS, i, valid connections
consistency easily checked using propositional calculus. Indeed, dene classical
propositional language using nodes N propositional letters (call PN set
propositional letters), connectives, translate set links
set corresponding propositional implications
= {p q | p q S} {p q | p 6 q S} .
427

fiCasini & Straccia

indicate l literal (being literal propositional letter negation),
dene set antecedents implications ,
= {p | p l } .
derive valid paths using classical consequence relation 3 .
Proposition 3.1. Consider net N = hS, translate set propositional
implications . following properties hold:
1. N consistent net, valid strict positive (resp., negative) path hp, , qi
p q, N
p q (resp., N
p 6 q), iff p q (resp., p q).
2. N inconsistent iff p p .
3. Deciding strict consequence done polynomial time.
treat decision problem strict nets means classical propositional
calculus, obtaining exactly valid strict paths classical approaches nets.
Note dierence notion inconsistency INs propositional logic. seen Section 2.1, net considered inconsistent node p
that, simultaneously, positively negatively connected another node q: p
not, simultaneously, subclass q. inheritance nets, situation interpreted contradiction, propositional logic correspondent situation
( |= (p q) (p q)) would force negation propositional letter (i.e.,
node) p ( p), would correspond saying individual fall
class p.
3.1.2 Mixed Nets
consider nets strict defeasible links. follows assume
strict part net N = hS, U inferentially closed, is, N
p q (resp.,
N
p 6 q) p q (resp. p 6 q S).
procedure diers classical approaches INs mainly based
notion potential path; instead, translate nets links propositional
formulae, build exceptionality ranking using procedure similar
one dened rational closure. main dierence procedure dened
rational closure lays local characterization exceptionality rankings: check
valid connection pair nodes p q proceed dening
exceptionality ranking nodes; however, consider nodes net,
related p q. relation determined means notion
course, generalisation potential path.
Roughly, courses simply routes net following direction arrows,
without considering positive negative arrow.
Definition 3.1 (Course). Courses defined follows (where {, 6, , 6}):
3. Note strict links encoded 2-CNF formulae, called Krom formulae,
propositional 2-SAT problem P .

428

fiDefeasible Inheritance-Based Description Logics

1. every link p q N course = hp, qi N ;
2. = h, qi course q r link N already appear ,
= h, ri course N .
omission repetitions courses needed guarantee niteness courses
even net contains cycles. So, given net N dened nite number links,
nite set C N courses, that, turn, nite sequences nodes. denote
N set courses N going node p node q, i.e.,
Cp,q
N
Cp,q
= { C N | = hp, , qi } .

next provide procedure denes validity defeasible connection
two nodes p q, via mapping propositional logic. Given net N = hS, U i,
dene correspondent knowledge base
KN = hN , N ,

N = {p q | p q S} {p q | p 6 q S}

N = {p q | p q U } {p q | p 6 q U } .
following, may omit N clear context.
dene exceptionality ranking nodes, depends decision problem
respect p q only.4
So, let
p,q = {r | r , Cp,q }
{r | r 6 , Cp,q } ,
consider set relative antecedents (l literal)
Ap,q = {a | l N p,q } .
following, N denote supra classical entailment relation obtained adding
set propositional formulae N extra axioms. strict part net,
p N q (resp., p N q), say q (resp., q) follows strictly p N ,
indicate p N q (resp., p N q).
hand, |N indicate inference relation defeasible part,
is, p|N q read member class p typically member class
q N . Analogously p|N q negative case.
4. main difference w.r.t. procedure propositional rational closure: rank
information KB once, rank information related connection
interested in, p q.

429

fiCasini & Straccia

Now, use N p,q determine exceptionality level. investigating connection p q, node Ap,q exceptional negated
information contained p,q (compare Step 3.2 Section 2.2):
E(Ap,q ) = {a Ap,q | p,q N a}
E(p,q ) = {a b p,q | E(Ap,q )} .
Therefore, Step 3.3 Section 2.2, build sequence
0 = Ap,q
= E(i1 ) ,
corresponding sequence
E0 = p,q
Ei = E(Ei1 ) .
Since Ap,q p,q nite, every i+1 Ei+1 Ei , sequences
terminate (empty non-empty) xed point function E, Section 2.2.
Dene ranking function (like Step 3.4) r associates every implication
p,q number, representing level exceptionality:
rp,q (a) =
/ i+1
rp,q (a) =
rp,q (a b) = (a b) Ei (a b)
/ Ei+1
rp,q (a b) = (a b) Ei .
Clearly, r(a b) = r(a) every b p,q . following, assume
obtain node ranking value (that is, function E terminates
empty set). see later (Proposition 3.6) latter case net
inconsistent.
b p,q implications b p,q least
consider set
exceptional p,
b p,q = {a b p,q | r(a b) r(p)} ,


eventually dene

b p,q p q
p|N q
N
b
p|N q p,q N p q .

language nets, indicate inference relation generated
procedure symbol . is,
N



p q

p N q

N



p 6 q

p N q

N
N



p q
p 6 q

p|N q
p|N q .



So, given N = hS, U pair nodes hp, qi, inference procedure INs
summarised follows:
430

fiDefeasible Inheritance-Based Description Logics

1. Close strict validity.
2. Check direct (and hence valid) link N connecting p q. is,
connection valid. Otherwise, proceed.
3. Determine set Cp,q courses N connecting p q, map links
Cp,q sets implications p,q , dene set Ap,q antecedents
implications p,q .
4. Determine ranking value every proposition Ap,q every implication
p,q .
b p,q implications least exceptional p.
5. Dene set

6. decide N
b p,q p q).
(



p q (N



b p,q p q
p 6 q) determining whether

Please note rely decision procedure only. examples
illustrate behaviour method.
Example 3.1. Consider Example 2.1 additional links b p (read
tweety).
w
b
f



p

Figure 1: Example 3.1
translate net following knowledge base
K = h, ,

= {t b, p, p b}

= {p f, b f, b w} .
Suppose now, want decide connected f (i.e., Tweety flies).
Since link b w appear course f ,
t,f

= {p f, b f }

At,f

= {t, b, p} ,
431

fiCasini & Straccia

obtain
t,f p t,f .
Thus,
0 = r(b) = r(b f )
1 = r(t) = r(p) = r(p f )
So,
b t,f f ,
and,

b t,f = {p f }

t|N f ,

expected.
next, ask connected w (i.e., Tweety wings). Now,
t,w = {b w}
At,w = {t, b, p} .
t,w imply negation members At,w ,
0 = r(t) = r(p) = r(b) = r(b w)


b t,w = t,w .


b t,w w,


t|N w ,

expected.
Example 3.2. Consider Nixon Diamond (see Figure 2), n Nixon, r republican, q quaker, p pacifist; another classical problem nonmonotonic
reasoning, similar previous one informed path
specific (while link p b tells us information
penguins specific information birds). So, want neither
n p n 6 p validated.
q
p

n

r

Figure 2: Nixon diamond.
432

fiDefeasible Inheritance-Based Description Logics

knowledge base K corresponding net composed
= {n r, n q}
= {r p, q p} .
want check n connected p. So, n,p = , negated antecedent n
n,p = . Since
n,p 6 n p
(n,p n): r(q p) = r(r p) = 0 r(n) = 1, i.e.,
n,p 6 n p, conclude

n 6 |N
n 6 |N

p
p .

two following examples illustrate procedure Hortys skeptical closure,
notwithstanding often manifest similar results, always give back
results, one included other.
Example 3.3. Consider net Figure 3.
f

g

x

p





n



Figure 3: Example 3.3
want investigate valid connection p. According
Hortys skeptical closure, cannot conclude anything p (N 6 p). Instead,
p), since r(a) = r(f ) = r(g) =
approach obtain a|K p (N
r(x) = 1.
Example 3.4. Consider net Figure 4.
p
c



e

f

b

Figure 4: Example 3.4
want investigate valid connection p b. According
Horty (1994) conclude N
p 6 b, approach cannot conclude anything.
433

fiCasini & Straccia

So, even many situations results two approaches same,
obtain dierent results them. dierent outcomes mainly due dierence
conicts interpreted. Consider Example 3.4, unresolved conict
two paths p f , is, one two paths preempts other,
none considered valid, Hortys approach. Hortys
interpretation, conict prevents construction paths starting p
passing f : order constructible path built augmenting valid
shorter path, thus cannot construct path starting p passing
f (Horty, 1994, Def. 2.1.1). So, unresolved conict totally eliminates possibility
consider paths ample argumentations, could play role.
hand, approach radical conicts: fact
cannot conclude neither p f p 6 f eliminate possibility
actual world one connections true; simply enough information
decide. possibility p f eectively valid invites us take consideration
potential argumentation moving p b. So, looking connection
p b Example 3.4, Horty cannot consider path hp, c, t, f, bi, avoiding
rise conict path hp, e, bi, approach still consider possibility
hp, c, t, f eectively true, allowing path hp, c, t, f, bi play role deciding
whether valid connection p b. way potential
conict hp, e, bi prevents validity latter. signicant examples
approach see Appendix A.
Notice that, even built notion courses, procedure respects
classical notion potential path, is, every valid connection corresponds potential
path net (Denition 2.1).
Proposition 3.2. Consider net N . every connection p|N q (resp., p|N q) validated
procedure, corresponding positive (resp., negative) potential path p
q net N .
3.1.3 Inference Relation
Talking nets, structural properties characterizing rational consequence relations,
REF , CT , CM , RM , take following form5 :
(REF)
(CT)
(CM)
(RM)

N
N
N
N

p q every p q N
pq
N,p q
rs
N
rs
pq
N
rs
N,p q
rs
rs
N 6 pq
N , p6 q
rs

meaning properties still propositional case, simply readapted
expressivity INs: net represents information disposal,
premises derivation, links informational atoms language.
5. , {, 6}; N , b premises indicates addition direct link b net N ;
6 indicates opposite arrow (e.g. 6 iff 6)

434

fiDefeasible Inheritance-Based Description Logics

Hence, sense rules before. (REF) indicates whatever piece
information (link) premises, appears conclusions. (CT) cut
condition, states validity link derived links rest
net, link eliminated without aecting set conclusions derivable
net. (CM) form constrained monotony, opposite (CT), states
whatever conclusion derived net, added premises without
aecting conclusions. (CT) (CM) intuitive appeal,
logical point view characterize
closure operation. translation (RM) less
intuitive, since INs classical notion negation,
notion conict; hence sense rule that, p q consequence N ,
addition information conicting p q, i.e., p 6 q, aect
defeasible consequences net N . fact INs share classical logic
notions contradiction negation makes formulation (RM) less intuitive
interesting.
proprieties (REF), (CT) (CM) often considered proprieties nonmonotonic consequence relation satisfy (Kraus et al., 1990; Makinson, 1994),
interesting check satised formalism. know classical
approaches inheritance nets satisfy (CT) (CM) (Makinson, 1994, pp. 56-57),
approach logically appealing.
Proposition 3.3.



satisfies (REF), (CT) (CM).

(RM) satised.
Proposition 3.4.



satisfy (RM).

following example proves proposition
Example 3.5. Consider net Figure 5. net composed links p f ,
f b, p t. N
p b N 6 b, N , 6 b 6 p b.
b
f



p

Figure 5: Counterexample RM.
example actually shows that, dealing notion negation consistency
characterize INs, (RM) look desirable property anymore, since addition 6 b net creates Nixon Diamond want derive
p b (see Example 3.2).
435

fiCasini & Straccia

properties logical consequence relations, left equivalence right weakening,
analogous following properties:
(LE)
(RW)

N

pq N
pr N
N
rq
pq
N
qr
N
pr

N

rp

introduce property corresponds logical property supra classicality (if C D, C|D), rule satised non-monotonic consequence relations:
(Sup)

N
N

Proposition 3.5.

pq
pq


N
N

p 6 q
p 6 q

satisfies (LE), (RW ), (Sup).

3.1.4 Consistency
indicated end Section 2.1, net considered inconsistent forced
conclude pair nodes p, q p q positively negatively
connected. Since, seen above, satises (Sup), say mixed net consistent
cannot conclude N p q N p 6 q pair nodes p, q.
going see order check consistency mixed net use
ranking procedure: sucient apply whole net. propositional
case (see Section 2.2), ranking procedures dened nodes net terminates,
nite number steps, either empty set n xed point function
E, i.e., set nodes result always exceptional. case, say
nodes innite ranking value (r(p) = ). want check whether net N
consistent, sucient apply ranking procedure entire net, see
nodes innite ranking.
Proposition 3.6. net N consistent iff node p r(p) = ,
is, conclude N p q N p 6 q pair p, q.
Example 3.6. net Figure 6 example inconsistent net,
f N
6 f . net translated
would conclude N
b
f



p

Figure 6: example inconsistent net.
436

fiDefeasible Inheritance-Based Description Logics

knowledge base
= {t b, p, p b, b p}
= {p f, b f } .
proceed ranking entire net, obtain p, b
t, is, E1 = . Hence, fixed-point exceptionality ranking function,
p, b, ranking value.
3.1.5 Properties
eld inheritance networks, taxonomy dierent approaches developed basis relevant properties (Horty, 1994). briey check
satised approach.
Purely defeasible / mixed nets. Cyclic / acyclic nets. procedure deals easily
two properties often create problems traditional approaches: presence
strict defeasible links (mixed nets), presence cycles (cyclic
nets).
Credulous / skeptical / directly skeptical approaches. approach corresponds
directly skeptical approach: given net, obtain unique set valid connections
(vs. credulous approach, allows dierent sets valid paths, possibly
conict other), unique set obtained intersection
dierent possible extensions (as skeptical approaches), obtained
single closure operation.
Upward / downward chaining. denition valid paths, use
form induction length, neither starting initial node toward
terminal node (upward chaining), reverse direction (downward chaining);
hence, form chaining used procedure.
On-path / off-path preemption. O-path preemption classical form preemption, used Horty (1994, Def. 3.2.2), on-path preemption
binding, requiring preempting node lie initial segment path preempts (Horty, 1994, sect. 4.2.4). exactly formalise form preemption,
since confront directly dierent paths two nodes. However,
procedure behaviour analogous use o-path preemption.
3.1.6 Computational Complexity
dene overall complexity decision procedure nets, consider
complexity course-identication procedure, is, given net N = hS, U
two nodes s, N , computational cost identify s,t (note easily
computed polynomial time), whose size bounded polynomially size N .
Given construction courses independent nature links (either
positive negative, defeasible strict), analyse problem using simple
directed graphs. Given net N = hS, U i, sucient dene correspondent directed
graph G = hV, Ei following way:
437

fiCasini & Straccia

V set nodes N .
E set directed links ha, bi, a, b V , s.t. ha, bi E one following
holds:
b , 6 b , b U , 6 b U .
Recall stated presence 6 b implies b 6 too. So,
6 b ha, bi hb, ai E.
dened G, let us recall well-known result graph theory saying
directed graph, given two nodes p q, determining path p q
determined time O(|V | + |E|), e.g. using BFS (Breadth First Search) (Cormen,
Stein, Rivest, & Leiserson, 2001). Now, following argument shows indeed s,t
determined polynomial time 6 . rst, check path t.
not, s,t = . Otherwise, call procedure Delta(s) below:
Delta(s): outgoing edge hs, xi s, hs, xi x marked,
do: path x mark hs, xi x, recursively,
call Delta(x).
nished, s,t immediately build marked edges. Note edge
marked node marked (i.e., explored) and, thus, algorithm
bounded polynomially size graph.
found set s,t , apply decision procedure based
propositional rational closure decide valid connection p
q (as Section 2.2, number entailment tests polynomially bounded size
net). formulae 2-CNF, Proposition 3.1, obtain decision
procedure w.r.t. net respects complexity costs related propositional calculus.
Proposition 3.7. Deciding defeasible consequence inheritance networks (
done polynomial time.

)



Eventually, want determine valid links net N consider
pairs nodes net N . So, obtained graph G = hV, Ei repeat
procedure elements set pairs nodes graph, whose cardinality
|V |(|V | 1). Hence,
Proposition 3.8. Computing valid connections net done polynomial
time.
3.2 Boolean Inheritance Nets
next extend INs introducing classical propositional connectives , , .
Despite extension felt desirable, aware attempt
direction (Horty & Thomason, 1990).
6. interested figuring tight bound.

438

fiDefeasible Inheritance-Based Description Logics

c

c

cd

cd





Figure 7: Disjunction

Figure 8: Conjunction

3.2.1 Negation
far, used link 6 indicate two classes disjoint: p 6 q p q
logical meaning. change notation substitute 6 , indicating
p q class p class q complementary (i.e., p q), general
indicate complementary class class p p. Hence, substitute every
link p 6 q net four links: p p, q q, p q, q p. Moreover,
eliminate negative defeasible links, since p 6 q expressed p q q.
So, transform net using arrows , , . shall
continue use 6 macro indicating valid negative strict connections obtained
composition , is, indicate p 6 q presence path

. . } q ,
p
| {z. . . b} |c .{z
n arrows

n, 0.

arrows

3.2.2 Conjunction Disjunction
Next, extend inheritance nets support conjunction disjunction well, allowing
links a, b c (conjunction b equivalent c) c a, b (disjunction
b equivalent c). assume inheritance nets containing kind
links closed according following rule: a, b c (resp., a, b c)
net, c c b (resp., c b c) net. call
nets Boolean Defeasible Inheritance Networks (BINs). shall use b b
indicate, respectively, node represents conjunction disjunction
b. Graphically, indicate disjunctive conjunctive links Figure 7 Figure 8,
respectively.
extend reasoning method BINs. so, need amplify notion
course, introducing notion duct: consider linear routes one point
another, parallel routes, order model introduction conjunction
consequent introduction disjunction antecedent. Roughly,
= hs,


, ti


indicate duct starts node develops ducts ,
reaching node t.
439

fiCasini & Straccia

Definition 3.2 (Duct). Ducts defined follows (where {, 6, , 6}):
1. every link p q N duct = hp, qi N ;
2. = h, qi duct q r link N already appear ,
= h, ri duct N ;
3. = hq, duct r q link N already appear ,
= hr, duct N ;
t,
4. ht, , pi hr, , pi ducts, t, r S, hs, r,
, pi duct;

5. hp, , ti hp, , ri ducts, t, r S, hp, ,t
,r , si duct.
reasoning method BINs follows. Given net N = hS, U i, dene
correspondent knowledge base K = h, i,
= {p q | p q S}
{p q | p q S}
{p q r | q, r p S}
{p q r | p q, r S}
{p q | p 6 q S}
= {p q | p q U } .
Now, may proceed denition |N Section 3.1, simply considering C N
N (or simply C ) set ducts p q.
set ducts N , Cp,q
p,q
Example 3.7. Consider net N illustrated Figure 9. net N mapped
e


g





b
c
f

Figure 9: Example 3.7
KB K = h, i,

7

= {c g, f g}
= {a b, b c, b d, b e, f } .
7. ease reading, omitted redundant implications g c, obtained c,
g, g c N .

440

fiDefeasible Inheritance-Based Description Logics

Now, ask whether connected c. verified
a,c = {a b, b c, b d, f } .
Note b a,c , duct c passes c order
reach g, back towards c. Now, negated antecedent (a,c a)
and, thus,
b a,c = {a b, f } .

b a,c 6 c
b a,c 6 c,
Since

a6|N c a6|N c .

similar way, may show a6|N a6|N d. desirable result: since
f direct link, a|N f (i.e., a|N (c d)), hence know
cannot conclude a|N c a|N d. But, since evidence whether one
conclusions preferred other, conclude either them.
result skeptical approach a6|N c, a6|N c, a6|N d, a6|N d.
hand, since duct connecting e ha, b, ei (that is, nodes c, d, g, f
play role possible argumentation connecting e), conclude a|N e.
3.2.3 Properties
call BIN inference relation dened dened closure operation BINs
have:
N

BIN

p q p q

N

BIN

p 6 q p q

N

BIN

p q p|N q

N

BIN

p 6 q p|N q .

BINs inherit structural properties INs, is, (REF ), (CM ),
(CT ). Analogously, (LE), (RW ), (Sup) still valid.
Proposition 3.9.
Proposition 3.10.

BIN

satisfies (REF ), (CM ), (CT ).

BIN

satisfies (LE), (RW ), (Sup).

Since procedure dened Section 3.1 simply special case procedure
BINs, (RM) falsied BINs counter-example proposition 3.4. Moreover, introduced conjunction disjunction, express analogous rules
disjunction premises (OR) conjunction consequent (AND):
(OR)

(AND)

N

BIN

pq N
N

N

BIN

sq N
BIN q

BIN

pq N
N

ps N
BIN p

BIN

441

BIN

p,

BIN

q,

fiCasini & Straccia

sense propositional case, remains intuitive
BIN environment: (OR) represents validity reasoning cases, (AND)
represents conjunction distinct conclusions still valid conclusion
net.
Proposition 3.11.

BIN

satisfies (OR) (AND).

3.2.4 Consistency
w.r.t. consistency, obtain result INs, i.e., net consistent
ranking procedure terminates empty set.
Proposition 3.12. BIN N consistent iff node p r(p) = ,
is, cannot conclude p q p 6 q pair p, q.
Remark 2. seen Section 3.1.4 notion consistency inheritance nets different notion consistency propositional logic. Using procedure net
inconsistent if, applying ranking function entire net, obtain node
ranking value (see Proposition 3.6). point, find net inconsistent,
simply stop decision procedure.
follows going work BINs framework propositional logic.
So, order assimilate notion consistency one propositional logic,
shall consider modified version procedure BINs. Suppose
decide validity connection two nodes p, q net N . N results
consistent, proceed above, otherwise, net results inconsistent (some node
infinite ranking value) simply stop, but, case r(p) < , still apply
procedure. Otherwise, p infinite ranking value (r(p) = ), proceed
further.
3.2.5 Computational Complexity
INs, determine s,t (computing immediate) ducts
BIN. Now, dicult see recursive BFS graph travelling procedure
one devised INs worked BINs well. illustration, refer
Figure 9 assume processing node b. Since b, c reachable
d, c g S, and, recursively, path g c, mark hb, ci hb, di,
mark conjunction d, c g visited. Again, nodes aggregated
nodes visited ones, guaranteeing polynomial cost computing s,t .
Now, s,t determined polynomial time, Section 2.2,
number entailment tests polynomially bounded size net, strict
part may encode propositional formula and, thus, unlike case INs, have:
Proposition 3.13. Deciding defeasible consequence BINs (
problem.

BIN )

coNP-complete

4. Defeasible Inheritance Propositional Logic
Now, depart BINs apply similar reasoning procedure framework
propositional logic, show obtain kind closure knowledge base
442

fiDefeasible Inheritance-Based Description Logics

results rational consequence relation, informative classical
rational closure (Lehmann & Magidor, 1992).
consider propositional language , , connectives. So, start
conditional KB K = hT , Di (see Section 2.2), = {C1 D1 , . . . , Cn Dn }
= {E1 |F1 , . . . , Em |Fm }.
Step 1. Given conditional base K = hT , Di, check K preferentially consistent (that
is, check materialisation consistent; Section 2.2, Step 4.1). consistent,
dene BIN K, i.e., net NK = hSK , UK i, modelling information K
following way:
(i) consider every formula C appears antecedent succedent
conditionals K, create node C representing them, modulo
logical equivalence (that is, node C represents class formulae logically
equivalent C).
(ii) node add also, already present, complementary node (the
node representing negation), link ;
(iii) add strict links: C add strict link C net;
add SK strict links correspond logical dependencies
formulae represented nodes w.r.t. consequence relation
. appears conditional, add net correspondent node ,
and, every node n net, add strict node n . Analogously,
add n every node n net.
(iv) eventually, C|D D, add defeasible link node C node D.
Step 2. apply reasoning procedure BINs NK (Section 3.2) identify valid
defeasible connections C|N add C|D conditional base K
obtain new conditional base K = hT , 8 .
Step 3. Finally, apply K rational closure (Section 2.2) dene nonmonotonic consequence relation |K
C|K C|D R(K ) .
Now, show
Proposition 4.1. |K rational consequence relation containing K.
Example 4.1. Consider penguin example. modify slightly order
consider use connectives. birds (b) typically fly, live trees,
wings (f , t, w), penguins fly live trees (f t). So, knowledge
base K = hT , Di be:


= {p b}

= {b|f, b|t, b|w, p|f t} .
8. modify , since strict connections valid net classically derivable .

443

fiCasini & Straccia

Notwithstanding penguins atypicality birds, penguins wings, would
able derive information disposal, is, would conclude
p|w. Please note possible using classical preferential approaches,
obtain conclusion passing trough first step closure operation, is,
defining corresponding net.
Specifically, knowledge base K define net Figure 10 (the dashed arrows
strict arrows explicit conditional base, logically valid
added SK construction net NK ).
f



f


tf



p





f



p

b

w

w





b

Figure 10: Example 4.1
Using procedure defined BINs, net obtain new knowledge base
K = hT , ,

= {b|f, b|t, b|w, p|f t, p|w, p|f, p|t, b|f t} .
Note that, new conditionals
p|f,

p|t,

b|f

would present simple rational closure K (we obtain Right Weakening), obtained conditional
p|w ,
444

fiDefeasible Inheritance-Based Description Logics

would present rational closure K (see Remark 1).
Now, following procedure defined Section 2.2, compute rational closure
new knowledge base K , obtaining rational consequence relation contains
original K.
Please note that, using BINs, could derived anything else,
since vocabulary would limited propositions expressed nodes; however,
relying rational closure propositional knowledge bases, reason using
full expressivity propositional language, deriving new conditionals as, example,
b green|f ,
derived using BINs green appear net.
next example shows another characteristic approach. preferential
approach typicality absolute property proposition w.r.t. agents knowledge
base, is, class results atypical w.r.t. class (as penguins w.r.t. birds),
results atypical w.r.t. entire knowledge base. approach instead, typicality
comparative notion: consider class exceptional respect superclass,
absolutely typical respect another.
Example 4.2. Consider red fish (r). fish (f ) pet (p). Typically, fish
gills (g) scales (s), pets docile (d) play kids (k). Red fishes
typical pets, since play kids. So, K = hT , Di


= {r f, r p}

= {r|k, p|k, p|d, f |g, f |s} .
rational closure red fishes, since atypical pets (they play kids),
result atypical general, cannot inherit typical properties
super classes.
Instead, want red fishes inherit, besides properties pets compatible
(d), typical properties fishes (g s), since consider
typical fishes.
so, translate knowledge base net Figure 11. net
obtain new knowledge base K = hT , i,
= {r|k, p|k, p|d, f |g, f |s, r|d, r|g, r|s}
derived exactly desired conditionals.
Next, compute rational closure K , following procedure defined Section
2.2, obtain rational consequence relation containing K information
red fishes, information that, intuitive is, would able derive
simple rational closure K.
Therefore, dened new rational consequence relation K extends K,
K R(K ), contains intuitive conditionals rational closure K.
445

fiCasini & Straccia

g

g
f
f













p


r



r





p

k



k

Figure 11: Example 4.2
Consistency. Dened inference procedure, conditional base K consistent
cannot derive |. seen (Section 2.2) rational closure conditional base
consistent preferential closure consistent (| R(K) | P(K)). Here,
given base K, obtain procedure preserves preferential consistency K:
seen Section 2.2, K preferentially consistent rational closure consistent (i.e.,
6 |rc
K ), prove following.
Proposition 4.2. Given conditional base K, |K iff | R(K).
results Section 2.2, corresponds saying |K K (assuming
K = hT , Di, K = D).
Computational Complexity. Considering procedures dened BINs,
conclude dened procedure complexity rational closure,
composition procedure dened BINs (Proposition 3.13) nal rational
closure operation (Proposition 2.2).
Proposition 4.3. propositional conditional base K, deciding C|K coNPcomplete problem.

5. Defeasible Inheritance DLs
Next, apply method signicant DL representative, namely ALC (Baader et al.,
2003, ch. 2). ALC corresponds fragment rst order logic, using monadic predicates,
called concepts, dyadic ones, called roles.
order stress parallel procedure presented Section 2.2
proposal ALC, going use notation components playing
analogous role two construction: use p, q, r, . . . concept names, C, D, E, . . .
indicate concepts general, instead, respectively, atomic propositions propositions, |= | indicate, respectively, classical consequence relation ALC
446

fiDefeasible Inheritance-Based Description Logics

non-monotonic consequence relation ALC. indicate default concept, is,
concept assume applying every individual, informed contrary.
nite set concept names C = {p, q, r, . . .}, nite set role names R =
{R, S, T, . . .} set L ALC-concepts dened inductively follows: (i) C L;
(ii) , L; (iii) C, L C D, C D, C L; (iv) C L, R R
R.C, R.C L. Concept C used shortcut C D. symbols
correspond, respectively, conjunction disjunction classical logic.
Given set individuals O, indicated bold letters a, b, c, . . ., assertion
form a:C (C L) form (a, b):R (R R), respectively indicating
individual instance concept C, individuals b connected
role R.
general inclusion axiom (GCI) form C (C, L) indicates
instance C instance D. use C = shortcut pair
C C.
FOL point view, assertions inclusion axioms easily mapped
FOL following transformation:
(a:C) = (a, C),
(C D) = x.( (x, C) (x, D)),
(x, A) = A(x),
(x, C D) = (x, C) (x, D),
(x, R.C) = y.(R(x, y) (y, C))
(x, R.C) = y.(R(x, y) (y, C))

((a, b):R) = R(a, b),
(x, ) = (x), (x, ) = (x),
(x, C) = (x, C),
(x, C D) = (x, C) (x, D),
new variable,
new variable .

Now, classical knowledge base dened pair K = hA, i, nite
set GCIs (the TBox ) nite set assertions (the ABox ), whereas defeasible
knowledge base represented triple K = hA, , Di, additionally nite
(an instance concept C typically instance concept
set conditionals C
9
D), C, L .
Example 5.1. Consider penguin example. add role P rey vocabulary,
role instantiation (a, b):P rey read preys b, add two
concepts, (insect) f (fish). example defeasible KB
K = hA, , Di

= {a:p, b:b, (a, c):P rey, (b, c):P rey}
= {p b, f i}
f, b f, p P rey.f i, b P rey.i} .
= {p



particular structure defeasible KB allows isolation pair hT , Di,
could call conceptual system agent, information
individuals (formalized A).
9. Since monotonic part substitute meta-linguistic conditionals C formulae C D,
substitute defeasible part knowledge base conditionals C|D conditional
D, could call defeasible inclusion axioms.
formulae C

447

fiCasini & Straccia

follows going work information concepts hT , Di rst,
exploiting immediate analogy homonymous pair propositional setting,
address case involving individuals well. show using
method overcome limits classical rational closure, already presented
ALC (Casini & Straccia, 2010), similar way propositional case. Please note
procedure presented based slightly modied version procedure
rational closure previously presented Casini Straccia (2010), i.e., one
presented Britz et al. (2013). latter accompanied semantic characterization,
based DL interpretations preferential relation dened individuals.
semantic characterization rational closure ALC characterises steps procedure (the local applications rational closure nal one). However, still lack
semantic characterization overall procedure, accounting modularization
knowledge base done using INs.
Step 1. Given conceptual system K = hT , Di, check preferential consistency, is,
dene


= {C | C }

D}
= {C | C

construct BIN NK K. process one Section 4,
treat concepts propositions: nodes NK represent concepts appearing
antecedents consequents inclusion axioms (modulo logical
equivalence); every node add complementary node, already present,
connect ; every GCI C becomes strict link C D;
becomes defeasible link C D.
every defeasible inclusion axiom C
Moreover, consider consequence relation monotonic consequence relation
obtained adding GCIs , add net strict links representing
logical dependencies nodes respect 10 .
Step 2. Apply reasoning procedure BINs NK (Section 3.2) identify
conditional base
valid defeasible connections C D, add C


K obtain new conditional base K = hT , i.
Now, augmented knowledge base new defeasible conditionals,
proceed follows.
| C }.
Step 3. Dene = {C
} let = {C | C }.
Step 4. Dene = {C | C



Step 5. Determine exceptionality ranking conditionals using set
antecedents AD materialisations
, concept C exceptional

w.r.t. set conditionals |= C. steps propositional case (Step
3 Section 2.2) replacing expression |= C

expression |= C. way dene ranking function r.
10. order create strict part net possible use techniques introduced procedure
classification DL knowledge bases (Baader et al., 2003, ch. 9).

448

fiDefeasible Inheritance-Based Description Logics

Step 6. Step 4.1, Section 2, verify KB consistent, checking consistency
. (as Steps 4.2 - 4.3 Section 2.2), dene sets
r(C D) = }
Te = { C | C





e
= {C | C r(C D) < } .

e ,
e
Step 7. Dene (similarly Step 5 Section 2.2) sets concepts


=

l

e = {C | C }

e = {0 , . . . , n } ,



e r(C
{C | C




D) i} .

Section 2, every , 0 < n, |= i+1 .
Step 8. Now, dene inference relation |K
C|K |= C

l

e D,


e
rst {C} -consistent
formula11 sequence h0 , . . . , n i.
DL analogue Step 6, Section 2.2.
Again, steps require decision procedure classical entailment relation |=
DLs. redene properties characterizing rational consequence relation
framework DLs.
show
Proposition 5.1. |K rational consequence relation containing K.
is, analogous properties propositional rational consequence relation
satised, namely:
(REF) C|K C
(LLE)

(CT)

C |K E

|=T C =

|K E

C |K E

(OR)
11. is, 6|= C

(RW)

C |K

(CM)

C |K E
C |K E

|K E

(RM)

C |K E
de
.

449

C |K

|=T E

C |K E
C |K E

C |K

C |K E
C |K

C 6 |K E

C E |K

fiCasini & Straccia

Example 5.2. Consider example 5.1, additionally add role Born (Born(x, y)
read x born y), concept e (Egg). Consider
K = hT , Di ,



= {p b, f i}

P rey.f P rey., b P rey.i P rey., b Born.e} .
= {p



p

b




Born.e

p



Born.e

b

P rey.f P rey.

P rey.i P rey.



P rey.f P rey.

P rey.i P rey.

Figure 12: Example 5.2
(Step 1), build correspondent net NK (figure 12), obtain (Step 2)

Born.e} .
= {p
move rational closure. pair hT , changed (Step 3)
, f ,
= { p b

P rey.f P rey., b P rey.i P rey.,
p

Born.e, p Born.e} .
b


set materialisations (Step 4)
= {p b , f , p P rey.f P rey.,
b P rey.i P rey., b Born.e, p Born.e}
AD = {p b, f i, p, b} .
obtain (Step 5) exceptionality ranking conditionals:
, f , p P rey.f P rey.,
E0 = {p b


P rey.i P rey., b Born.e, p Born.e}
b


, f , p P rey.f P rey., p Born.e}
E1 = {p b



, f }
E2 = {p b

, f } = E .
E3 = {p b
2


450

fiDefeasible Inheritance-Based Description Logics

get ranking values every conditional : namely,
P rey.i P rey.) = r(b Born.e)
0 = r(b

P rey.f P rey.) = r(p Born.e)
1 = r(p

) = r(i f ) .
= r(p b


ranking, obtain (Steps 6-7) background theory
Te = { (p b), (i f i)} ,

e = {0 , 1 },
default-assumption set

0 = (b P rey.i P rey.) (b Born.e)

1

(p P rey.f P rey.) (p Born.e)
= (p P rey.f P rey.) (p Born.e)

used definition consequence relation |K (Step 8).
example, derive typical penguins preys fishes, i.e.,
p|K P rey.f ,
insects, i.e.,
p|K P rey.i ,
penguins born eggs, i.e.,
p|K Born.e ,
would derivable rational closure, presented Casini Straccia (2010).
Computational Complexity. computational complexity point view, deciding entailment ALC ExpTime-complete (Donini & Massacci, 2000) and,
Section 2.2, number entailment tests polynomially bounded size
knowledge base, following exactly procedures dened propositional case,
conclude
Proposition 5.2. Deciding C|K ALC ExpTime-complete problem.
5.1 Closure Operation Individuals
far left ABox, going consider here. procedure
ABox built procedure TBox, is, consider knowledge base
hA, , Di strict knowledge already moved , i.e.,
axioms ranking value (that is, correspond sets Te
e obtained using procedure previous section). basic idea following

procedure consider individual named ABox much typical possible,
is, associate possible defeasible information consistent
rest knowledge base. order apply defeasible information locally
451

fiCasini & Straccia

individual, encode information using materialisations inclusion axioms,
e section
i.e., set = h1 , . . . , n i, s.t. |= i+1 1 < n (the set
12
). want able associate individual (with set
individuals named ABox) strongest formula consistent
e = , i, call
knowledge base. way dene new knowledge base K
ABox extension knowledge base hA, , Di.
Definition 5.1 (ABox extension). Given knowledge base K = hA, , Di, knowledge
base , ABox extension K = hA, , Di iff
, classically consistent AD .
AD \ composed assertions a:C C = i,
every h s.t. h < i,
hT , AD {a:h }i |=
denition identies extensions original ABox s.t. every
individual associated defeasible information consistent rest
knowledge base. Still, main problem that, since individuals related
roles, possibility associating default concept individual
inuenced default information associated individuals, shown
following example.
AR.A}
Example 5.3. Consider K = hA, Di, = {(a, b):R} = D0 = {
(hence = h0 = hA R.Ai). associate 0 a, obtain b:A
cannot associate 0 b; hand, apply 0 b, derive b:A
anymore able associate 0 a. Hence, define two possible rational extensions
K.


implies that, given knowledge base hA, , Di, even closure hT , Di
always unique possibility one ABox extensions.
simple procedure obtain possible extensions knowledge base hA, , Di,
set individuals named A, following:
Definition 5.2 (Procedure ABox extensions).
Consider set linear orders individuals O;
= ha1 , . . . , do:
Set j := 1
Set AsD :=
Repeat j = + 1:
Find first default hAsD {aj :i }, }i 6|= .
AsD := AsD {aj :i }.
e
e must done
12. Note that, given conditional knowledge base, procedure determine Te ,
all.

452

fiDefeasible Inheritance-Based Description Logics

j =j+1
return hAsD ,
indicate AsD ABox extension obtained using sequence s.
Now, shown
Proposition 5.3. Given linear order individuals K, procedure determines ABox extension K. Vice-versa, every ABox extension K corresponds
knowledge base generated linear order individuals O.
e1 = hA{a:A R.A},
instance, related Example 5.3, obtain extension K
e
order ha, bi, K2 = hA {b:A R.A}, obtained order hb, ai.
Example 5.4. Refer Example 5.1, let K = {A, , D},
= {a:p, b:b, (a, c):P rey, (b, c):P rey}
= {p b, f i}
f, b P rey.i, p f, p P rey.f i}
= {b




knowledge base define set = {0 , 1 }

0 = (b f ) (b P rey.i) (p f ) (p P rey.f i)
1 = (p f ) (p P rey.f i) .
consider order comes b, associate 1 a, consequently c presumed fish prevented association 0 b.
consider b a, c fish cannot apply 1 a.
Now, x priori linear order individuals, say a:C
e |= a:C, K
e
defeasible consequence K w.r.t. order s, written K a:C, K
ABox extension generated K based order s.

instance, related Example 5.3 order s1 = ha, bi, may infer K s1 a:A,
order s2 = hb, ai, may infer K s2 b:A.
interesting point consequence relation still satises properties
rational consequence relation following way.
453

fiCasini & Straccia

(REFDL )

hA, , Di a:C every a:C

(LLEDL )

hA {b:D}, , Di a:C
D=E
hA {b:E}, , Di a:C

(RWDL )

hA, , Di a:C
CD
hA, , Di a:D

(CTDL )
(CMDL )

hA {b:D}, , Di a:C
hA, , Di b:D
hA, , Di a:C
hA, , Di a:C
hA, , Di b:D
hA {b:D}, , Di a:C

(ORDL )

hA {b:D}, , Di a:C
hA {b:E}, , Di a:C
hA {b:D E}, , Di a:C

(RMDL )

hA, , Di a:C
hA, , Di 6 b:D
hA {b:D}, , Di a:C

show
Proposition 5.4. Given K linear order individuals K, consequence
relation satisfies properties (REFDL ) (RMDL ).
Note computational complexity point view, entailment w.r.t. ALC TBox
ExpTime-complete (Donini & Massacci, 2000) number individuals K linearly bounded |K|, get immediately
Proposition 5.5. Deciding K a:C ALC ExpTime-complete problem.
presence multiple ABox extensions, dene inference relation
, conservative inference relation independent order individuals,
corresponds intersection inference relations modelling rational
extension.
=

\

{ | linear order elements O}

However, possibility lose property rational monotonicity,
shown following example.
Example 5.5. Consider knowledge base hA, Di s.t. = {(a, b):R} = D0 D1 ,
R.A, B} = {A B, R.A B} (where
D0 = {
1
0
1



sets conditionals rank 0 conditionals rank 1, respectively).
define two sequences individuals, = ha, bi = hb, ai,


defining different rational extension ( ), let = .
B
hA, Di a:B, since extensions a:B holds (in axiom





a:A.
6
axiom r.A B) hA, Di 6 a:A, since hA, Di
However, hA {a:A}, Di 6 a:B, since hA {a:A}, Di 6 a:B.
454

fiDefeasible Inheritance-Based Description Logics

increase computational complexity decision procedure: assuming number individuals named ABox n, perform -test
possible sequences dened n individuals. is, worst case
k
need n! tests, done time O(2|K| ) k. Now,
2
shown that13 n! < 2n and, thus, decision problem remains ExpTime.
Proposition 5.6. Deciding K a:C ALC ExpTime-complete problem.
Notwithstanding, conjecture many (probably most) real-world cases,
knowledge base would single rational ABox extension, cases (RMDL )
still valid. check whether knowledge base hA, , Di single rational ABox extension, sucient associate individual strongest modulo consistency
w.r.t hA, , Di, exactly procedure Denition 5.2, consistency
check aj :i w.r.t. original instead w.r.t. AsD . end, check whether
hAsD , consistent; case obtained rational ABox extension
hA, , Di.
following knowledge base unique ABox extension.
Example 5.6. Consider KB Example 5.4, (b, c):P rey replaced (b, d):P rey.
Then, whatever order individuals, obtain following association
default formulae individuals: a:1 , b:0 , c:0 , d:0 . Using information
defaults, obtain unique default-assumption extension.

semantic characterization , making use preferential DL models,
presented Casini et al. (2013).
lets briey consider heuristics useful case want present
system specic ABox queries. Assume want know particular individual
presumably falls concept C, want draw safest possible conclusion.
presence multiple acceptable extensions, classical solution use skeptical
approach, i.e., use inference relation , corresponding intersection
inference relations associated possible ordering individuals appearing A.
seen above, case multiple rational extensions computational complexity decision problem rise w.r.t classical ALC decision problem.
Moreover, case multiple extensions, amount defeasible information associable
individual inuenced individuals related means role:
immediate see role-connection ABox two individuals
b, information associated inuence amount
defeasible information associate b, way around. Hence,
ease decisions w.r.t. ABox introducing notion cluster, i.e., set
individuals named ABox linked means sequence role connections.
so, given ABox A, indicate Q symmetric transitive
closure
roles vocabulary, i.e., symmetric transitive closure R.
Definition
5.3 (Cluster). Define Q reflexive, symmetric transitive closure

R. Given individual O, call cluster set [a] individuals

13. shown induction n, see e.g.http://lifecs.likai.org/2012/06/better-upper-bound-forfactorial.html.

455

fiCasini & Straccia

connected Q:
[a] = {b | Q(a, b)} .
Hence, order know presumably conclude a, sucient
determine w.r.t. sequence individuals [a]. Let A[a] ABox obtained restricting statements containing individuals [a]; query a:C clearly decidable
using A[a] .
Proposition 5.7. hA, , Di a:C iff hA[a] , , Di a:C every ordering
individuals A[a] .
query individual s.t. named ABox (a
/ O),
constraints dened ABox a, i.e., know a:; hence,
individual appearing ABox, associate strongest default
concept consistent , 0 : s.t.
/ O, derive presumably
a:C holds hAa , |= a:C, Aa = {a:0 }.

6. Comparison Related Work
non-monotonic logics, so-called preferential approach distinguished
various proposals (as Reiters defaults, modal approaches, defeasible inheritance. . . ) mainly due logical properties, since former approach committed
satisfaction desirable structural properties consequence relation (see Section
2.2). hand, considering point view inferential capacity
preferential approach often results weaker proposals, since often
desirable, intuitive conclusions cannot derive (see Remark 1).
proposal tried combine classical rational closure inheritance
networks order overcome inferential limits without prejudicing logical properties
consequence relation.
Section 3 present alternative way reason defeasible inheritance.
Despite proposal presented mainly integrate propositional language
rational closure, results interesting approach per se, Appendix
compare Hortys classical skeptical extension (Horty, 1994, sect. 2-3) Sandewalls
landmark examples (Sandewall, 2010).
indicated introduction, many papers aimed implementation non-monotonic reasoning DL formalisms. proposals
comparison approach done considering dierent non-monotonic formalisms, independently DL-environment. refer Makinsons work (1994)
comparison various non-monotonic approaches.
last years main proposals implementation nonmonotonic reasoning
DLs connected two approaches: preferential one circumscription.
preferential approach, work Britz al. (Britz et al., 2008; Britz, Meyer,
& Varzinczak, 2011) preferential DL semantics strongly connected approach,
one results semantic characterization rational closure cited
(Britz et al., 2013).
Still close approach work Giordano et al. (2012b), based
preferential approach. conclusions derive using logic ALC+Tmin
456

fiDefeasible Inheritance-Based Description Logics

intuitive, complexity decision problem ABox co-NExpNP (Giordano et al., 2012b, Thm. 13), procedure cannot reduced classical entailment.
Among proposals based circumscription, work Bonatti et al. (2009)
particularly representative. point view quality inferences,
proposal results dicult w.r.t. preferential approach draw expected
conclusions. example, assume knowledge base contains information
mammals typically live land, whales abnormal mammals live
land, ABox contains information a:M ammal W hale. knowing
anything else individual a, would reasoning system reason
assumption dealing typical mammal (since, moreover, specied
whale) hence able derive lives land. However, using
circumscription, conclusions draw changes w.r.t. concepts user decides
keep fixed varying (a non-trivial choice), results able
derive a:Habitat.Land, able derive it, even derive whales
exist (Bonatti et al., 2009, sect. 2.1). proposal instead, formalize
problem knowledge base hA, , Di = {a:M ammal} (we need specify
whale), = {W hale ammal, W hale Habitat.Land} =
Habitat.Land}; without needing kind choice user, system
{M ammal
derive automatically a:Habitat.Land. Moreover, seen computational
cost procedure involving ABox exponential, circumscription case,
languages analogous ALC, complexity instance problem co-NExpNP (Bonatti
et al., 2009, sect. 4.1.1). issues discussed addressed solved
Bonatti et al. (2010, 2011a), circumscriptive systems specically
built low-complexity DLs EL.
hand, procedures based circumscription able derive defeasible
information individuals implicit ABox, is, can, exam presumably a:R.D. procedure involving
ple, conclude a:R.C C
ABoxes able make kind derivation, since add defeasible information
individuals named ABox. working renement
procedure order deal implicit individuals; rst attempt take
consideration individuals proposed previous publications (Casini &
Straccia, 2010, pp. 9-10), adding completion procedure ABox order explicitly
name ABox implicit individuals, procedure needs rened.
Among proposals regarding introduction probabilistic reasoning DLs,
Lukasiewicz (2008) presents combination nonmonotonic probabilistic reasoning.
nonmonotonic part based preferential approach, presents construction augments inferential power rational closure. Let us consider proposal eliminating probabilistic part, i.e., considering conditionals associated
probability 1 (conditionals (|)[1, 1] notation), since convey meaning
defeasible conditionals. procedure seems give back results
cases, two proposals dier general approach: proceeds
renement ranking structure, use renement content knowledge base. fact, behaviour two dier. Consider example knowledge
b, d, b c, c e, e} (in Lukasiewiczs notation would
base h, Di, = {a




correspond knowledge base empty TBox set P containing conditionals
457

fiCasini & Straccia

(b|a)[1, 1], . . . ).14 construction derive a|c, since simply duct ha, b, ci
c, Lukasiewiczs approach cannot, since consider follows three preferred subset knowledge base consistent
b, d, b c, c e}, {a b, d, b c, e}, {a b, d, c e, e}),
(that {a











a|c follow latter.

7. Conclusions
combining classical rational closure ideas defeasible inheritance networks,
proposed new rational consequence relation overcomes limits
formalisms. so, extended defeasible inference capabilities allowing
atypical class still inherit properties superclass maintaining
desired logical properties rational closure. table summarizes structural
properties satised systems taken consideration:15

REF
CT
CM
LE
RW

RM

Horty












BIN







PL








DL








see, proposals defeasible inheritance-based propositional logic
Description Logics still satisfy axioms classical rational closure. Another feature
method uniquely require existence decision procedure classical
entailment and, thus, implemented top exiting propositional SAT solvers
DL reasoners. Since introduced procedure interesting point
view inheritance nets, presented comprehensive procedure logical
knowledge bases making use nets formalism; notwithstanding, condent
procedure reformulated avoiding shift one formalism another.
procedure presented ALC straightly extended languages expressive ALC; hand, present procedure needs language
closed propositional connectives, hence need augment expressivity
language order apply less expressive DL languages EL, forcing way
increase computational costs w.r.t. classical decision problem.
Hence, looking adaptation procedure appropriate dealing tractable,
less expressive DLs one main open problems present proposal, together
proper semantic characterization procedure ability reasoning
defeasible way implicit individuals, discussed previous section.
14. example corresponds structure Example.A.4 Appendix A, eliminating link
center figure.
15. IN, BIN, PL, DL stand proposals INs, Boolean INs, propositional logic DLs, respectively.

458

fiDefeasible Inheritance-Based Description Logics

Appendix A. Examples
going validate decision procedures inheritance nets signicant
examples proposed Horty (1994) Sandewall (2010). shall use BINs, but, order
simplify graphical representation, shall use 6 macro, explained
Section 3.2. side eect, obtain analogue behaviour propositional DL
cases too.
Example A.1 (Horty, 1994, ex. 12 ). Consider net Figure 13. Horty claims
desirable conclusion a|p, since environment mixed nets [. . . ] certain
kinds compound defeasible paths legitimately thought carry immediate information - namely, paths consisting single defeasible link followed strict end
segment, length (Horty, 1994, p. 143). corresponds condition (RW ),
that, seen Section 3.1.2, procedure satisfies.
r


p





Figure 13: Example A.1
Indeed, translate net KB K = h, i, = {a s, t, r p}
= {s r, p}. a,p = , a,p |= s, a,p |= a.
implication a,p ranking grater 0 r, and, since r p,
a|K p.
Example A.2 (Horty, 1994, ex. 18 ). Consider net Figure 14. example Horty
claims prefer negative path ha, p, si positive path ha, r, si,
since negative link 6 q nullifies path p r. procedure satisfies
claim.
p


q



r

Figure 14: Example A.2
Indeed, translate net KB K = h, i, = = {a p,
r, p q, q r, r s, q, p s}. a,s = , a,s p, a,p a.
459

fiCasini & Straccia

Therefore, E1 = {a p, r, q, p q, p s}. Now, E1 a,
node rank 2, E2 = {a p, r, q}. conclude neither a|s
a|s.
Example A.3 (Sandewall, 2010, ex. B.1, Double Diamond). Consider net N = {S, U }
defined (see Figure 15)
= {s s, r r}
U

= {a t, p, s, p s, r, p q, q r}

r







r

q


p

Figure 15: Double diamond.
net N translated knowledge base K = {, } = {} = {a
t, p, s, p s, r, p q, q r}.
Using method, net derive neither a|r, a|r, be.
However, derive a|q, desirable result derivable Sandewalls
approach.
Example A.4 (Sandewall, 2010, ex. B.2, Simonets Scenario). Consider net N = {S, U }
defined (Figure 16)
= {e e}
U = {a b, d, b c, c e, c, e} .
c
e

b




e


Figure 16: Simonets scenario.
460

fiDefeasible Inheritance-Based Description Logics

net N translated knowledge base K = {, } = {} = {a
b, d, b c, c e, c, e}.
Using method, net derive a|e, be, Sandewall cannot
derive it. Moreover, derives neither a|c b|e.
Example A.5 (Sandewall, 2010, ex. B.3, On-Path vs. O-Path Preemption). Consider
net N = {S, U } defined (see Figure 17)
= {wa 6 ga}
U

= {c re, c ce, e, ce e, e ga, wa} .
e
ce

c

ga

wa


Figure 17: On-Path vs O-Path.
net N translated knowledge base K = {, } = {wa ga}
= {c re, c ce, e, ce e, e ga, wa}.
connection c wa valid use form off-path preemption,
on-path preemptions derivable. setting, derive c|wa: even cannot
consider method form preemption (at least explicitly), said Section 3.1.5
method gives back results analogous off-path preemption.
following examples use conjunctions, going use BINs.
Example A.6 (Sandewall, 2010, ex. B.4, Juvenile Oender). original Juvenile offender example represented following net (see Figure 18) N = {S, U },
= {b g, b m, p p, m, g g}
U

= {g p, p} ,

p read punished, g guilty, minor, b Billy. want
express priority g, b N w. Since nets
possible express conjunctions, solve problem adding link g p
m, g g.
net translated knowledge base K = {, } = {b g, b m}
= {g p, p, g p}. knowledge base derive b|p, expected.
Example A.7 (Sandewall, 2010, ex. B.5, Campus Residence Scenario). example A.6,
Campus residence example necessity include priorities. solve
461

fiCasini & Straccia


mg

b



p

g

p

Figure 18: Juvenile oender.
problem inserting conjunctions. Indeed, net N = {S, U } composed (see
Figure 19)
= {t ma, e, m, w 6 n, ma, e e}
U = {ma e w, n} ,
read married, e employed, w lives west apartments,
male, n lives northern apartments, Tom. want express e
priority m, w results valid. so, add links mmae w,
m, e e.

e
w



e

e

n


Figure 19: Campus residence scenario.
net translated knowledge base K = {, } = {t ma, e,
m, w n} = {ma e w, n, e w}. knowledge base
derive t|w, expected.
treat last example propositional problem. simpler net
graphical point view put negation nodes useless
resolution, use three-place conjunction link, macro construction
conjunction three nodes.
462

fiDefeasible Inheritance-Based Description Logics

Example A.8 (Sandewall, 2010, ex. B.6, Good Math Student Scenario). knowledge
base K = {T , D} composed (see Figure 20)


= {t gs, f m, mb, aa ag}

= {mb|ag, f ag|mm, mm mb gs|aa, f m|pm} ,

gs

mb
mm mb gs



ag
aa

f ag
mm
fm
pm

Figure 20: Good math student.
Sandewall identifies following candidates valid conclusions:
t|ag t|aa t|f ag
t|mm t|mm mb t|mm mb gs

t|pm .

cannot conclude conditionals above. point net highly
interconnected, especially strict links, nodes ranking 0, except
mm mb gs ranking 1. Therefore, conclusions above,
premise, cannot obtained.

Appendix B. Proofs
Proposition 3.1. Consider net N = hS, translate set propositional
implications . following properties hold:
1. N consistent net, valid strict positive (resp., negative) path hp, , qi
p q, N
p q (resp., N
p 6 q), iff p q (resp., p q).
2. N inconsistent iff p p .
463

fiCasini & Straccia

3. Deciding strict consequence done polynomial time.
Proof. First, easy prove induction length paths that,
positive (resp., negative) path p q, p q (resp., p q). Hence
have:
1a) N consistent net valid strict positive (negative) path (p, , q)
p q, p q ( p q).
Moreover, N inconsistent, conclude, p, q it, p q
p 6 q, p q p q, is, p. one half
second statement.
2a) 6 p every p , N consistent.
move show halves statements.
1b) N consistent net p q (resp., p q), valid strict
positive (resp., negative) path (p, , q) p q.
order model classical consequence relation , use propositional resolution method. use symbol R indicate inferences resolution
method.
Every element forms p q p q. implications correspond,
clause form, respectively clauses (i.e., sets literals) {p, q} {p, q}.
Call set clauses corresponding . example, assume
R {p, q} (that is, p q), set clauses , {p}, {q} resolves
empty set (that is, , (p q) ).
1. Positive case (N
p q): Assume p q p, q PN . order
apply refutational approach, p q negated, and, since (p q)
equivalent p q, introduce clauses {p}, {q}. So, resolution
approach p q translated , {p}, {q} R . assumed
consistent, hence 6R . Since set composed
pairs literals (of form {p, q} {p, q}), every reduction step
gives back pair literals (for example, {p, q} {q, r},
obtain {p, r}). Therefore, order obtain empty set need use
{p} {q} refutation procedure. So, clause {q} must
eliminated using clause containing q. clause must necessarily
form {ri , q} ri , obtain new clause {ri }. Again, {ri }
eliminated clause form {rj , ri }, obtaining clause {rj }. Since
set nite, procedure terminate, done
obtain clause {p}, resolved {p}. is,
clause {p, rl }, rl , s.t. {rl } appears reduction procedure.
Now, clauses used reduction process correspond chain
links net S: p rl , . . . , ri q, dene valid path (p, , q) S.
2. Negative case (N
p 6 q): assume p q p, q PS . p q
negated translated clauses {p}, {q}. {q} combined
464

fiDefeasible Inheritance-Based Description Logics

clause form {q, ri } (that represents q ri , that, turn, represents
link q 6 ri ) (case 1), clause form {q, ri } (i.e., q ri , that,
turn, q ri ) (case 2).
Case 1. obtain clause {ri }, procedure positive
case. clauses used reduction process correspond strict negative path form: p rl , . . . , rj ri , ri 6 q.
Case 2. obtain clause {ri }, would combine clause
form {ri , rj }, form {ri , rj }. former case move case
1, ending strict negative path p rh , . . . , rl rj , rj 6 ri , ri q.
latter case new clause {rj }, case
2; however, procedure terminate, and, order terminate,
reduction procedure point move case 1.
clauses used reduction procedure correspond path form p
ri , . . . , rj rk , rk 6 rl , rl rm , . . . , rn q, link 6 corresponds
shift case 1.
2b) Automatically, N consistent, 6 p every p .
Otherwise, would p q p q nodes p q,
would imply, procedure above, inconsistency N .
3) third point, consider strict links encoded 2-CNF formulae,
called Krom formulae, propositional 2-SAT problem P .

Proposition 3.2. Consider net N . every connection p|N q (resp., p|N q) validated
procedure, corresponding positive (resp., negative) potential path p
q net N .
b p,q . procedure states p| q
b p,q p q (and
Proof. Dene set
N
b p,q p q). Following procedure analogous one proof
p|N q
proposition 3.1, show derivation implications connected
presence positive (negative) potential paths net.
Proposition 3.3.



satisfies (REF ), (CT ) (CM ).

prove proposition need rst prove following lemma.
p q ( {, 6}). Call set
Lemma B.1. Consider net N = hS, U s.t. N
material implications corresponding links S, consequence relation
obtained adding formulae extra-axioms. Consider net N obtained
N
adding link p q N . Then, every pair nodes r, N ,
r,s

N


r,s equivalent w.r.t. .

Proof. two nets contain nodes. Given two nodes r s, two possible
N , C N = C N , consequently
N p q C N . p q
/ Cr,s
cases: p q
/ Cr,s
r,s
r,s
r,s
N . p q C N , C N C N , consequently C N C N ,
N =

r,s
p,q
r,s
r,s
r,s
r,s
r,s
465

fiCasini & Straccia





N C N one hand C N C N
correspondent sets courses two nets (Cp,q
p,q
r,s
r,s
other) contain exactly nodes links, apart, possibly, p q.
N
N
N
corresponds saying N
p,q p,q one hand, r,s r,s
contain exactly implications, apart, possibly, p lq (where lq {q, q}),
exactly set antecedents.
p q,
N
N
N
Since N
p,q p lq , consequently p,q p lq . So, p,q


N
N
N
N
p,q -equivalent, r,s r,s -equivalent. So, since r,s

N
r,s -equivalent contain set antecedents, generate
N equivalent w.r.t. .
N
ranking, is,
r,s
r,s

prove Proposition 3.3.
Proof. satisfaction (REF ) trivial, since every direct link trivially valid.
(CT ): assume N p q N , p q r s. call N net obtained adding p q

N
N . N r means
r,s r ls (ls {s, s}). lemma B.1
N r ls , is, N r s.
N equivalent w.r.t. ,
N

r,s
r,s
r,s


(CM ): assume N
p q N
r s. call N net obtained adding p q
N r ls . lemma B.1
N
N
N . N r means
r,s
r,s
r,s

r s.
N
equivalent w.r.t. ,

r

l
,

is,
N
,
p

q

r,s
Proposition 3.5.



satisfies (LE), (RW ), (Sup).

Proof. proofs immediate, considering procedure fact implications corresponding strict links always present decision procedure.
Proposition 3.6 net N consistent iff node p r(p) = , is,
conclude N p q N p 6 q pair p, q.
proved combining following two lemmas.
Lemma B.2. Given net N , two nodes p q it, conclude p|N q
p|N q iff r(p) = .
Proof. left right. immediate denition ranking procedure:
r(p) 6= , set implications least ranking p imply p,
cannot imply p q p q q.
right left. r(p) = , set E 16 implications (with p
antecedents) E p. implies E p q E p q
whichever q, is, p|N q p 6 |N q.
Lemma B.3. Every node ranking set courses C ranking value
every set courses extending C.
Proof. immediate monotony consequence relations N .
16. E set -ranked defaults.

466

fiDefeasible Inheritance-Based Description Logics

lemmas conclude node p innite ranking net, net
inconsistent (p|N q p|N q p q), and, conversely, net inconsistent,
node p innite ranking.
Proposition 3.9

BIN

satisfies (REF ), (CM ), (CT ).

Proof. proof retraces one proposition 3.3.
Proposition 3.10

BIN

satisfies (LE), (RW ), (Sup).

Proof. proof retraces one proposition 3.5.
Proposition 3.11

BIN

satisfies (OR) (AN D).

Proof. (OR): N BIN p N BIN q t, p, q S. Assume
=. case =6 analogous.
p,t p
q,t q t.
N BIN p N BIN q t, is,
Since N BIN p N BIN q t, proposition 3.2 least duct
p one q t. So, since p, q s, duct t. Moreover,
since least duct p q s, every duct connecting
allows duct connecting p q t. Hence, s,t p,t s,t q,t
holds.
hand, that, since p, q s, connected connections moving p q. So, p,t s,t q,t s,t . Hence,
p,t = q,t = s,t holds ranking functions rs,t , rp,t , rq,t
work sets material implications.
propositional level, (p q) either rs,t (p) rs,t (q)
rs,t (q) rs,t (p). Assume former (the reasoning applies case).
q,t
p,t . Moreover, least set exceptionality order
rs,t (p) rs,t (q)
negating p negate q, least set exceptionality order negating
p,t =
s,t . So,
s,t p t, and, since
q,t
p,t ,
t, is, rs,t (t) = rs,t (p),


s,t q t; hence classical reasoning obtain s,t (p q) t,
s,t t. Eventually, N BIN t.
i.e.,
(AN D): N BIN p q N BIN p s, s, q S. Every
duct connecting p q p part duct connecting p addiction
s, q t, every duct connecting p part duct connecting p q (resp.,
p s) addiction q (resp., s). So, p,q = p,s = p,t , obtain
N BIN p t.
Proposition 3.12 BIN N consistent iff node p r(p) = ,
is, cannot conclude p q p 6 q pair p, q.
Proof. proof similar one proposition 3.6.
Proposition 4.1. |K rational consequence relation containing K.
Proof. |K obtained rational closure K , rational consequence
relation. Moreover, R(K ) contains K , and, since K K , contains K too.
467

fiCasini & Straccia

Proposition 4.2. Given conditional base K, |K iff | R(K).
Proof. sucient prove that, given conditional base K = hT , U i, obtained
extension K = hT , U (Steps 1-3), K preferentially consistent conditional base K
preferentially consistent too.
right left proof immediate, since K K . left right, K
6 . Given every conditional added K corresponds
consistent means
implication classically derivable subset D,
C(T D) (where C classical closure operation associated ).
C(T ) = C(T D). Then,
/ C(K ), K consistent knowledge base too.
Proposition 5.1 |K rational consequence relation containing K.
Proof. sucient show (1) every inclusion axiom valid |K ,
(2) |K satises properties characterizing rational consequence relation.
(1) construction, C , C Te (that is, modulo logical
equivalence, Te ). Assume C|D D. either r(C) = r(C|D) = ,
r(C) = r(C|D)= i, < . rst case C Te ,
e D, implies C| D. second case,
{C}
K
C D, default-assumption associated premise C.
e {i } D, is, C| D.
Hence {C}
K

(2) consequence relation |K satises properties rational consequence relation.
(REF ) obviously satised, (LLE) is. (RW ), assume C|K D.
e {i } D, that, given
means rst C-consistent , {C}
e
e E, implies {C} {i } E, i.e., C|K E.

e E, rst C
(CT ) C D|K E corresponds {C D}
D-consistent formula . Analogously, C|K means rst Ce {j } D. Since C C,
consistent j , {C}
j i, is, j . Hence, {C D} {j } E
e {j } D, and, since satises (CT ), {C}
e {j } E,
{C}
is, C|K E.
e {i } E.
(CM ) C|K E means rst C-consistent , {C}
e {i } . Hence,
Analogously, C|K means {C}
e
consistent CD, and, monotony , {CD}{
i}
E, is, C D|K E.
e {i } E.
(OR) C|K E means rst C-consistent , {C}
e
Analogously, D|K E means {D} {j } E rst D-consistent
j . three options: j = i, j < < j. rst case,
default-assumption associated C , and, since satises OR,
{C D} {i } E, is, C D|K E. j < i, j ,
e
j rst CD-consistent default . Hence {D}{
j}
e
E, and, monotonicity, {C} {j } E. Since satises OR,
e {j } E, is, C D| E.
{C D}
K
468

fiDefeasible Inheritance-Based Description Logics

e
(RM ) C 6 |K E corresponds 6 {C} {
} E, rst C-consistent
e {i },
formula . means E consistent {C}
e
rst C E-consistent formula . Since {C} {i } D,
e {i } D, is, C E| D.
monotonicity {C E}
K
Proposition 5.3 Given linear order individuals K, procedure determines
ABox extension K. Vice-versa, every ABox extension K corresponds knowledge
base generated linear order individuals O.
Proof. rst statement quite immediate. second statement, assume
rational extension hA , hA, , Di cannot generated sequence
elements O. associates every individual x default concept ,
indicate x .
Now, consider generic rational extension , hA, , Di generated
using sequence elements O. following procedure allows dene sequence
elements s.t. , generated using s, i.e., , = hAsD , i.
Take element associate strongest default concept consistent
knowledge base hA, (call x ). Look individual x s.t. x = x ,
consider x rst element sequence s. Update x:x , repeat procedure, every individual associated default formula. procedure
generate sequence dominion individuals generates ,
hA, , Di.
Since sequence generate hA , i, procedure fail,
is, point possible associate x default x s.t. x = x .
means that, remaining x, x 6= x ; x, either x x
x x . rst case possible, since hA , would inconsistent ( x
maximally consistent default). Hence x x x 6= x remaining x.
case, hA , would rational extension hA, , Di, since could another
consistent model stronger defaults associated individuals.
Proposition 5.4 Given K linear order individuals K, consequence
relation satisfies properties (REFDL ) (RMDL ).
Proof. REFDL , LLEDL RWDL proof quite immediate. CTDL
CMDL , assume hA, , Di b:D, hAsD , b:D. Hence, b:D consistent
hAsD , i; implies rst individual sequence s, let a,
every , a:i consistent hA, consistent hA {b:D}, i,
procedure associates default formula either start A{b:D}.
happens following individuals sequence s.
hAsD {b:D}, = h(A {b:D})sD , hAsD {b:D}, a:C h(A {b:D})sD ,
a:C. Since satises CT CM , hAsD , a:C h(A{b:D})sD , a:C,
is, hA, , Di a:C hA {b:D}, , Di a:C.
ORDL , assume hA {b:D}, , Di a:C, hA {b:E}, , Di a:C,
b nth position sequence s. So, rst n 1 elements association
default-formulae models. b, assume procedure
469

fiCasini & Straccia

assigns b:i case b:D, b:j case b:E. either = j , j ,
j . rst case procedure assignment defaults continues
way knowledge bases, b:D E,
is, hA {b:D}, , Di, hA {b:E}, , Di, hA {b:D E}, , Di completed exactly
defaults, obtaining, respectively, ABoxes (A {b:D})sD = {b:D},
(A {b:E})sD , = {b:E}, (A {b:D E})sD = {b:D E}, ABox
. {b:D} a:C {b:E} a:C, and, since satises OR,
obtain {b:D E} a:C, is, h(A {b:D E})sD , a:C. j
b:D E, procedure associates b strongest two defaults, is, . Since
consistent b:E, every following consistency check procedure
forced consider b:D holds, assignment defaults individuals
proceed case b:D holds, hA {b:D E}, , Di entail
formulae hA {b:D}, , Di. Analogously, j , default-assumption extension
hA {b:D E}, , Di correspond one hA {b:E}, , Di.
Finally, RMDL , b:D consistent hAsD , i, presence b:D
knowledge base inuence association defaults individuals,
AsD (A {b:D})sD . Eventually, hAsD , a:C implies h(A {b:D})sD , a:C, i.e.
hA {b:D}, , Di a:C.
Proposition 5.7 hA, , Di a:C iff hA[a] , , Di a:C every ordering individuals A[a].
Proof. proof quite immediate. Assume hA[a] , , Di 6 a:C s. Let
sequence individuals named obtained using initial segment. Hence

hA, , Di 6 a:C, implies hA, , Di 6 a:C.
assume hA, , Di 6 a:C. Hence, sequence hA, , Di
6 a:C. Let

restriction individuals named A[a] ; hA, , Di
6 a:C.

Appendix C. Table Main Symbols
Since paper considers dierent elds, notation turned quite complex.
add table summarize main symbols used paper.

N
Cp,q

IN/BIN
nodes
strict conditional
defeasible conditional
consequence relation
conjunction, disjunction
links courses/ducts
p q

PL
atoms
propositions
strict conditional
defeasible conditional
links ducts
p q

DL
concept names
concepts
individuals
strict conditional
defeasible conditional
links ducts
p q

N
p,q

materialisations
N
links Cp,q

materialisations
N
links Cp,q

materialisations
N
links Cp,q

N

p,q

conditionals N
p,q
exceptional p

conditionals N
p,q
exceptional p

conditionals N
p,q
exceptional p

p, q, . . .
C, D, . . .
a, b, . . .

|
,

470

fiDefeasible Inheritance-Based Description Logics

References
Alchourron, C., Gardenfors, P., & Makinson, D. (1985). logic theory change:
Partial meet contraction revision functions. Journal Symbolic Logic, 50, pp.
510530.
Baader, F., Calvanese, D., McGuinness, D., Nardi, D., & Patel-Schneider, P. F. (Eds.).
(2003). Description Logic Handbook: Theory, Implementation, Applications.
Cambridge University Press.
Baader, F., & Hollunder, B. (1993). prefer specic defaults terminological
default logic. Proceedings IJCAI-93, pp. 669674. Morgan Kaufmann Publishers.
Bochman, A. (2001). logical theory nonmonotonic inference belief change. SpringerVerlag.
Bonatti, P. A., Lutz, C., & Wolter, F. (2009). complexity circumscription description logic. Journal Artificial Intelligence Research, 35, pp. 717773.
Bonatti, P. A., Faella, M., & Sauro, L. (2010). EL default attributes overriding.
Patel-Schneider, P. F., Pan, Y., Hitzler, P., Mika, P., Zhang, L., Pan, J. Z., Horrocks,
I., & Glimm, B. (Eds.), International Semantic Web Conference (1), Vol. 6496
Lecture Notes Computer Science, pp. 6479. Springer.
Bonatti, P. A., Faella, M., & Sauro, L. (2011a). Adding default attributes EL++ .
Burgard, W., & Roth, D. (Eds.), Proceedings AAAI-11. AAAI Press.
Bonatti, P. A., Faella, M., & Sauro, L. (2011b). Defeasible inclusions low-complexity
DLs. Journal Artificial Intelligence Research, 42, pp. 719764.
Bonatti, P. A., Faella, M., & Sauro, L. (2011c). complexity el defeasible
inclusions. Proceedings IJCAI-11, pp. 762767. AAAI Press/IJCAI.
Brewka, G., & Augustin, D. S. (1987). logic inheritance frame systems.
Proceedings IJCAI-87, pp. 483488. Morgan Kaufmann Publishers.
Britz, K., Casini, G., Meyer, T., Moodley, K., & Varzinczak, I. (2013). Ordered Interpretations Entailment Defeasible Description Logics. Tech. rep., CAIR, CSIR
Meraka UKZN, South Africa.
Britz, K., Heidema, J., & Meyer, T. A. (2008). Semantic preferential subsumption.
Brewka, G., & Lang, J. (Eds.), Proceedings KR-08, pp. 476484. AAAI Press.
Britz, K., Meyer, T., & Varzinczak, I. J. (2011). Semantic foundation preferential
description logics. Wang, D., & Reynolds, M. (Eds.), Australasian Conference
Artificial Intelligence, Vol. 7106 Lecture Notes Computer Science, pp. 491500.
Springer.
Casini, G., Meyer, T., Moodley, K., & Varzinczak, I. (2013). Nonmonotonic reasoning
description logics. Rational closure ABox. Proceedings DL-13, pp. 7790.
CEUR Workshop Proceedings.
Casini, G., & Straccia, U. (2010). Rational closure defeasible description logics.
Janhunen, T., & Niemela, I. (Eds.), Proceedings JELIA-10, Vol. 6341 Lecture
Notes Computer Science, pp. 7790. Springer.
471

fiCasini & Straccia

Casini, G., & Straccia, U. (2011). Defeasible inheritance-based description logics. Proceedings IJCAI-11, pp. 813818.
Cormen, T. H., Stein, C., Rivest, R. L., & Leiserson, C. E. (2001). Introduction Algorithms
(2nd edition). McGraw-Hill Higher Education.
Donini, F. M., & Massacci, F. (2000). EXPTIME tableaux ALC. Artificial Intelligence,
124 (1), pp. 87138.
Donini, F. M., Nardi, D., & Rosati, R. (2002). Description logics minimal knowledge
negation failure. Transactions Computational Logic, 3 (2), pp. 177225.
Freund, M. (1998). Preferential reasoning perspective Poole default logic. Artificial
Intelligence, 98 (1-2), pp. 209235.
Gabbay, D. M., & Schlechta, K. (2009). Defeasible inheritance systems reactive diagrams. Logic Journal IGPL, 17 (1), pp. 154.
Giordano, L., Gliozzi, V., Olivetti, N., & Pozzato, G. L. (2012a). minimal model semantics
nonmonotonic reasoning. Proceedings JELIA-12, Vol. 7519 Lecture Notes
Computer Science, pp. 228241. Springer.
Giordano, L., Gliozzi, V., Olivetti, N., & Pozzato, G. L. (2012b). non-monotonic description logic reasoning typicality. Artificial Intelligence, 195, pp. 165202.
Giordano, L., Olivetti, N., Gliozzi, V., & Pozzato, G. L. (2009). ALC+T: preferential
extension description logics. Fundam. Inform., 96 (3), 341372.
Grimm, S., & Hitzler, P. (2009). preferential tableaux calculus circumscriptive ALCO.
Proceedings RR-09, pp. 4054. Springer-Verlag.
Horty, J. F. (1994). direct theories nonmonotonic inheritance. Handbook
logic artificial intelligence logic programming: nonmonotonic reasoning
uncertain reasoning, Vol. 3, pp. 111187. Oxford University Press.
Horty, J. F., & Thomason, R. H. (1990). Boolean extensions inheritance networks.
Proceedings AAAI-90, pp. 633639. AAAI Press.
Horty, J. F., Thomason, R. H., & Touretzky, D. S. (1987). skeptical theory inheritance
nonmonotonic semantic networks. Proceedings AAAI-87. AAAI Press.
Knorr, M., Alferes, J. J., & Hitzler, P. (2011). Local closed world reasoning description
logics well-founded semantics. Artificial Intelligence, 175 (9-10), 15281554.
Kraus, S., Lehmann, D., & Magidor, M. (1990). Nonmonotonic reasoning, preferential
models cumulative logics. Artificial Intelligence, 44 (1-2), pp. 167207.
Lehmann, D., & Magidor, M. (1992). conditional knowledge base entail?.
Artificial Intelligence, 55 (1), pp. 160.
Lukasiewicz, T. (2008). Expressive probabilistic description logics. Artificial Intelligence,
172 (6-7), pp. 852883.
Makinson, D. (1994). General patterns nonmonotonic reasoning. Handbook logic
artificial intelligence logic programming: nonmonotonic reasoning uncertain
reasoning, Vol. 3, pp. 35110. Oxford University Press.
472

fiDefeasible Inheritance-Based Description Logics

Makinson, D. (2005). Bridges Classical Nonmonotonic Logic. Kings College Publications.
Makinson, D., & Schlechta, K. (1991). Floating conclusions zombie paths. Artificial
Intelligence, 48, pp. 199209.
Poole, D. (1988). logical framework default reasoning. Artificial Intelligence, 36 (1),
2747.
Quantz, J., & Royer, V. (1992). preference semantics defaults terminological logics.
Proceedings KR-92, pp. 294305.
Rott, H. (2001). Change, Choice Inference: study belief revision nonmonotonic
reasoning. Oxford University Press.
Sandewall, E. (1986). Nonmonotonic inference rules multiple inheritance exceptions.
Proceedings IEEE-86, pp. 13451353.
Sandewall, E. (2010). Defeasible inheritance doubt index axiomatic characterization. Artificial Intelligence, 18 (174), pp. 14311459.
Schlechta, K. (2004). Coherent Systems. Elsevier.
Shoham, Y. (1988). Reasoning change: time causation standpoint
artificial intelligence. MIT Press.
Simonet, G. (1996). sandewalls paper: Nonmonotonic inference rules multiple inheritance exceptions. Artificial Intelligence, 86, pp. 359374.
Straccia, U. (1993). Default inheritance reasoning hybrid KL-ONE style logics. Proceedings IJCAI-93, 676681.
Thomason, R. H. (1992). NETL subsequent path-based inheritance theories.
Lehmann, F. (Ed.), Semantic Networks Artificial Intelligence, pp. 179204. Pergamon Press.
Touretzky, D. S. (1986). mathematics inheritance systems. Pitman.
Touretzky, D. S., Horty, J. F., & Thomason, R. H. (1987). clash intuitions: current
state nonmonotonic multiple inheritance systems. Proceedings IJCAI-87 Vol. 1, pp. 476482. Morgan Kaufmann Publishers.
Touretzky, D. S., Thomason, R. H., & Horty, J. F. (1991). skeptics menagerie: conictors,
preemptors, reinstates, zombies nonmonotonic inheritance. Proceedings
IJCAI-91, pp. 478483. Morgan Kaufmann Publishers.

473


