journal artificial intelligence

submitted published

efficient informative sensing multiple robots
amarjeet singh
andreas krause
carlos guestrin
william j kaiser

amarjeet ee ucla edu
krausea caltech edu
guestrin cs cmu edu
kaiser ee ucla edu

abstract
need efficient monitoring spatio temporal dynamics large environmental applications water quality monitoring rivers lakes motivates use robotic sensors
order achieve sufficient spatial coverage typically robots bounded resources
limited battery limited amounts time obtain measurements thus careful coordination
paths required order maximize amount information collected respecting
resource constraints present efficient near optimally solving np hard optimization informative paths particular first
develop esip efficient single robot informative path approximation
optimizing path single robot hereby use gaussian process model underlying phenomenon use mutual information visited locations remainder
space quantify amount information collected prove mutual information
collected paths obtained esip close information obtained optimal
solution provide general technique sequential allocation used extend
single robot esip multi robot procedure
approximately generalizes guarantees single robot multi robot case
extensively evaluate effectiveness several experiments performed field
two important environmental sensing applications lake river monitoring simulation
experiments performed several real world sensor network data sets

introduction
global climate change corresponding impetus sustainable practices environment related
activities brought forth challenging task observing natural phenomena exhibiting dynamics space time observing characterizing dynamics high fidelity
critical answering several questions related policy issues monitoring control
understanding biological effects activity microbes organisms living dependent
environments monitoring algal bloom growth lakes salt concentration rivers
illustrated fig specific examples related phenomena interest biologists
environment scientists macintyre ishikawa tanaka macintyre romero kling

monitoring environmental phenomena algal bloom growth lake requires measuring physical processes nutrient concentration wind effects solar radiation among
others across entire spatial domain one option acquire data processes would
statically deploy set sensing buoys reynolds fleming fleming luettich due
large spatial extent observed phenomena would require large number
sensors order obtain high fidelity data spatio temporal dynamics environments

c

ai access foundation rights reserved

fis ingh k rause g uestrin k aiser

confluence san joaquin merced river

b lake fulmor san jacinto mountain reserve

figure deployment sites used performing path field
motivate use actuated sensors robots carrying sensors together efficient
paths actuated sensors actuated sensors used past
dhariwal et al measuring phenomena locations hence providing
biologists critical information state lake
typically however robots strict resource constraints storage battery energy
limits distance travel number measurements acquire
observed phenomena varies significantly constraints necessitate careful motion
robots coordinating paths order maximize amount collected information
satisfying given resource constraints tackle important
seeking informative paths collection robots subject constraints cost incurred
robot e g due limited battery capacity
order optimize paths robots first need quantify informativeness
particular chosen path work adopt spatial statistics employ
probabilistic spatial phenomena informativeness viewed
terms uncertainty prediction phenomena unobserved locations given
observations made mobile robots subset locations selected path particular use rich class probabilistic called gaussian processes gps rasmussen
williams shown accurately model many spatial phenomena cressie
apply mutual information mi criterion caselton zidek quantify reduction
uncertainty achieved selected robot paths
unfortunately finding optimal collection paths maximizing mutual
information criterion np hard search typically intractable even small
spatial phenomena develop approximation efficiently
finds provably near optimal solution optimization key insight
allow us obtain mutual information several notions
informativeness discussed krause guestrin satisfies submodularity intuitive
diminishing returns property making observation helps made
observations far less already made many observations krause et al
optimizing path single robot maximize submodular function
visited locations studied chekuri pal developed recursivegreedy strong theoretical approximation guarantees unfortunately running time


fie fficient nformative ensing ultiple robots

quasi polynomial scales log possible sensing locations property
makes impractical environmental sensing applications typical numbers
observation locations reaching several hundreds present two
techniques spatial decomposition branch bound search overcoming limitations recursive greedy chekuri et al making practical real world sensing
call efficient single robot path esip efficient single robot
informative path
provide general sequential allocation used extend
single robot esip multi robot setting furthermore prove
generalization leads minimal reduction independent number mobile robots
approximation guarantee provided single robot combine esip sequentialallocation develop first efficient path emip coordinates multiple
robots resource constraint order obtain highly informative paths e paths
maximize given submodular function mutual information exploiting submodularity prove strong theoretical approximation guarantees
extensively evaluate effectiveness several experiments performed
field two important environmental sensing applications lake river monitoring river
campaign executed confluence two rivers merced river san joaquin river california august fig displays aerial view san joaquin deployment site
lake campaign executed lake located university california merced campus
august fig b displays aerial view lake fulmor campaigns
networked info mechanical system nims jordan et al cable robotic system
used perform path observing two dimensional vertical plane cross section
addition analyzing data deployments provide extensive experimental analysis
several real world sensor network data sets including data collected
robotic boat lake fulmor dhariwal et al
manuscript organized follows formally introduce multi robot informative
path mipp section section discuss sequential allocation
extending single robot path multi robot setting
preserving approximation guarantees review recursive greedy proposed
chekuri et al section example single robot subsequently present
spatial decomposition section branch bound techniques section drastically improve running time recursive greedy make practical real world sensing
applications section evaluate field experiments well simulations real world sensing datasets section review related work present
conclusions section proofs presented appendix

multi robot informative path
formally define multi robot informative path mipp assume
spatial domain phenomenon discretized finitely many sensing locations v
subset v let denote sensing quality e informativeness observing
phenomenon locations details appropriate choices sensing quality given
associate location v v sensing cost c v quantifying expenses
obtaining measurement location v traveling two locations u v robot



fis ingh k rause g uestrin k aiser

curs traveling cost c u v robot traverses path space st path p sequence
l locations starting node finishing cost c p path p vp
v vl
l
sum sensing costs traveling costs along path e c p
c vi
pl
c v

v



case
l


cost


path
p


involve
traveling
cost



starting finishing locations c use notation p refer sequence
nodes path subset sensing locations p v ignoring sequence collection k paths p p pk one robot p p pk denotes sensing quality paths quantifies amount information collected k paths
goal mipp collection p k paths specified starting finishing
location si ti necessarily different path bounded cost c pi b
specified budget b paths informative e p large possible
formally defined
max ki pi subject c pi b k

pi v



lake monitoring example goal performing surface monitoring boats
first discretized two dimensional surface lake finitely many sensing locations
depicted fig b single robot scenario seek informative path
p terms predicting algal bloom content starting location finishing location
experiment cost c vi corresponds energy required making chlorophyll related
measurements indicators amount algal bloom traveling cost c vi vi corresponds
energy consumption traveling location vi vi budget b quantifies total
energy stored boats battery
quantifying informativeness
quantify sensing quality model spatial phenomena common
spatial statistics use rich class probabilistic called gaussian processes gps c f
rasmussen williams associate random variable xv location
v v joint distribution p xv used quantify uncertainty prediction
p xv xa xa phenomena unobserved locations xv making observations
xa xa small subset locations quantify uncertainty use example
mutual information mi criterion discussed caselton zidek set
locations p mi criterion defined
mi h xv h xv xa



h xv entropy unobserved locations v h xv xa
conditional entropy locations v sensing locations hence mutual information
measures reduction uncertainty unobserved locations therefore lake monitoring
example would select locations reduce uncertainty algal bloom
content prediction lake environment conveniently gp mutual information criterion
computed efficiently analytically caselton zidek effectiveness mutual
information select informative sensing locations studied krause et al several
alternative information criteria entropy ko et al information disk model bai et al
alphabetical optimality criterion e optimal used
associate sensing quality observation locations related domain


fie fficient nformative ensing ultiple robots

submodularity
even consider constraints length paths robots
selecting locations maximize mutual information np hard krause et al hence
general likely cannot expect able efficiently optimal set locations
instead goal efficiently near optimal solutions sensing quality
e g mutual information provably close optimal sensing quality
key observation allow us obtain strong approximation guarantees
mutual information satisfies following diminishing returns property krause et al
locations already sensed less information gain sensing
location intuition formalized concept submodularity function f submodular
nemhauser et al
b v v b f f f b f b



another intuitive property sensing quality monotonic means b
b v hence select sensing locations collect
information lastly mutual information normalized e
thus define mipp optimizing paths length b
k robots selected sensing locations maximize normalized monotonic submodular function definition mipp allows applied
monotonic submodular objective function mutual information generalization
useful several notions informativeness shown satisfy submodularity krause
guestrin
online vs offline path
many robotic path applications search rescue involve uncertain environments
complex dynamics partially observed informative path selecting
best locations observe subject given sensing constraints uncertain environments
necessitates trade exploration gathering information environment
exploitation current belief state environment effectively distinguish two different classes nonadaptive offline plan commit
paths observations made adaptive online update
replan information collected online offline settings np hard optimization discuss approximation offline setting
exploit known belief environment efficient path plan work towards extending exploration exploitation trade incorporate online model
adaptation future

approximation mipp
optimizing path single robot e k maximize submodular function visited locations constrained upper bound b path cost first studied
chekuri pal review recursive greedy detail section
monotonicity holds approximately mutual information krause et al however sufficient
purposes



fis ingh k rause g uestrin k aiser



sequential allocation

input b k starting finishing locations sk tk v
output set informative paths p pn
begin



k
performing path ith robot

pi sp p si ti b ai v
committing previously selected locations

ai ai pi

return p pk
end
sequential allocation multi robot path single robot path spp output set paths p pk provides approximation guarantee
approximation guarantee single robot path sp p

lake monitoring seek plan multiple paths one robot one possibility apply single path product graph e plan path tuples
locations simultaneously representing locations robots however straightforward
application single robot would lead increase running time
exponential number robots therefore intractable practice aware
sub exponential approximation challenging multiple robot path
present simple multi robot scenario exploit
approximation single robot case recursive greedy
discussed chekuri pal almost preserve approximation guarantee
avoiding exponential increase running time
sequential allocation successively applies single robot path k times get paths k robots hereby jth path takes
account locations already selected previous j paths committing approximately best possible path stage moving next stage makes
greedy terms paths
pseudocode presented fig illustrates
three robots takes input budget constraint b number available robots
k starting finishing location available robot sk tk complete set
discrete observation locations v select let us assume single robot path
sp p takes input starting location si finishing location ti budget
constraint b set locations already selected observation set possible observation
locations visited fig three robots starting finishing location
path first robot input set already selected observation
locations empty subsequent stage commit locations selected previous
stages pass already observed locations input next call sp p let ai locations already visited paths p pi residual information iai
path p unvisited locations defined iai p ai p ai verified
normalized monotonic submodular function residual information


fie fficient nformative ensing ultiple robots

figure illustration sequential allocation three robots starting finishing
location

iai thus stage use sp p informative path respect modified
residual sensing quality function fig p locations selected p considered sensing quality function used ip similarly evaluating path p locations
selected p p taken account sensing quality function used ip p
perhaps surprisingly straight forward greedy sequential allocation guaranteed perform almost well black box used path formally
assume approximate single robot e
starting budget b monotonic submodular function f guaranteed path recovering least fraction optimal information achievable budget
case following theorem proves sequential allocation procedure approximation
guarantee close well
theorem let approximation guarantee single path instance informative
path sequential allocation achieves approximation guarantee mipp special case robots starting
si sj j finishing locations ti tj j approximation guarantee improves
exp
work blum et al proved theorem special case additive modular
sensing quality functions extend general submodular functions
example approximate single robot next section
review recursive greedy proposed chekuri pal
approximation guarantee log p p number locations visited
optimal solution p hence performance guarantee obtained
mipp sequential allocation log p well
order apply sequential allocation recursive greedy ith path simply
pass set nodes visited previous paths input parameter r illustrated



fis ingh k rause g uestrin k aiser



b

c



figure illustration performance simple greedy approaches compared optimal

note greedy path
work krause et al considered sensor placement subset v
k locations selected order maximize mutual information without considering path
costs exploiting submodularity property mi proved discretization v
fine enough gp satisfies mild regularity conditions greedily selecting locations
criterion near optimal specifically greedy call greedysubset
following selecting first locations ai picks location maximum residual
information e vi argmaxv iai v sets ai ai vi greedysubset hence
iteratively adds locations increase mutual information proposed
nemhauser et al performance greedy submodular functions
work krause et al showed greedysubset selects sets achieve mutual
information least e opt opt optimal mutual information among
sets size small error incurred due discretization
strong performance greedy unconstrained traveling costs locations case motivates question whether simple greedy could perform
well complex path setting considered difficult
give general impossibility statement question several natural extensions greedy
shown perform arbitrarily badly
example consider setting define cost c set nodes cost
cheapest path connecting nodes assuming locations ai already picked
natural extension greedy add location v improves
benefit cost ratio
ia v
v argmax

vv cai v


fie fficient nformative ensing ultiple robots

cai v c ai v c ai increase cost adding v already selected
locations ai
fig shows small example illustrating intuitive greedy procedure perform arbitrarily poorly compared optimal example illustrated fig
starting finishing location b total available budget reward associated observation location displayed parenthesis corresponding locations
ease illustration assume reward associated observation location
modular function instead submodular function traveling cost associated
corresponding edges example starting location possible options first observation
location select g observation location lead cluster n
b locations separated traveling cost associated reward except
associated reward separated g traveling cost b
rest locations cluster assumed unreachable location outside
cluster observation location g lead series b locations separated
previous one traveling cost associated reward
illustrated fig b optimal would select first location paying
traveling cost b earning small reward robot observes
observe rest b locations cluster providing reward return back
spending total b traveling cost thus total reward collected optimal
example b
illustrated fig c greedy reward cost ratio select g
first observation location highest reward cost ratio since distance b
away g provides reward continue along series observing locations till gm returning back total reward collected
b hand simple greedy reward illustrated fig
simply select first observation location return back collecting total reward
since ratio b arbitrarily large reward collected simple intuitive
greedy approaches b arbitrarily poor compared reward collected
optimal b
although reward function considered example assumed modular function submodular optimal reward arbitrarily large compared submodular reward
collected simple greedy approaches difference submodular modular reward
depend correlation selected observation locations insight necessitates
development complex path considered

recursive greedy
review recursive greedy proposed chekuri pal since forms
basis efficient single robot path basic strategy
divide conquer path starting location finishing location
middle location vm number locations different
side vm path thus finding path divided
two smaller subproblems finding smaller subpaths vm vm concatenating
small subpaths number locations subpaths side
middle node different costs e budget total path split two smaller



fis ingh k rause g uestrin k aiser



recursive greedy rg

input b r iter
output informative path p
begin

c b

return infeasible

p

base case iter return p

fr p
trying location middle node

foreach vm v
trying possible budget splits

b b
subpath one side middle node

p rg vm b r iter
subpath side middle node
committing nodes selected first subpath

p rg vm b b r p iter

fr p p

p p p

fr p

return p
end
recursive greedy single robot instance mipp proposed chekuri pal
output path p provides approximation guarantee ix p ix p log ke represent
submodular reward function p represent optimal path k represent number nodes optimal
path

budgets necessarily equal one subpath searching best middle location
trying possible budget splits side middle location optimizing complete
path would exhaustive search optimal solution therefore prohibitively expensive instead performing exhaustive search recursive greedy
follows simple greedy strategy wherein possible budget splits possible
middle nodes considered one first plan optimal subpath one side middle location
commit planned subpath optimize subpath side path
consisting independently optimized subpath svm subpath vm optimized subject observation locations already selected vm may suboptimal path nonetheless
chekuri pal proved path approximation guarantee log p
p number locations visited optimal solution p
order implement greedy recursive calls second subpath similarly done sequential allocation optimize residual reward function
measures incremental gain taking account information already obtained locations selected first subpath formally let set p refer locations selected
first subpath consider residual submodular function fp set locations


fie fficient nformative ensing ultiple robots

fp f p f p p set locations second subpath holds
f p fp p f p p hence first recursive call submodular function f
returns path p second recursive call submodular function fp returns path p
sum scores subproblems exactly equals score concatenated path
let us formalize intuitive description recursive greedy pseudocode presented inputs starting
location finishing location upper bound path cost b parameter r defines
residual submodular function function needs maximized defined
fr p f p r f r parameter represents recursion depth maximum
number locations selected stage calculated recursion depth
base case recursion depth simply returns path p
cost c b
recursive case searches path maximum reward iterating
possible locations reached given budget constraint middle locations
line e locations could possibly split required path two subpaths equal number locations side middle location explores possible
splits available budget line across two subpaths side middle location
reducing recursion depth subpath ensures number locations
selected side middle location however exploring second subpath
commits locations selected first subpath passing input
residual parameter line two subpaths found way concatenated
provide complete path stores best possible path already
searched space replacing better path whenever path found
structure search
instructive consider recursive structure generated recursive greedy
fig illustrates example structure running recursive greedy lake sensing
application given starting finishing location upper bound path cost
b search recursive greedy represented graphically sum max tree
root max node representing objective finding path maximum possible reward
cost path bounded budget b max node children
search tree represent sum nodes corresponding sum rewards collected two subpaths
side middle location therefore end first iteration graphical representation max node root several sum nodes children feasible middle
location possible budget splits around middle location partial tree end first
iteration shown fig
sum node formed end first iteration applied recursively left subpath thus first step second iteration seeks vm path
maximum possible reward budget constraint corresponding respective budget split
sum node commits selected locations left side recurses right subpath search vm path given selected locations
sum node two max nodes children representing objective subpath
maximum reward side selected middle location greedy
commits locations selected first subpath optimizing second subpath



fis ingh k rause g uestrin k aiser

recursive greedy first iteration

b recursive greedy second iteration

figure illustration recursive greedy proposed chekuri pal lake sensing application
sum max tree presents graphical representation space

partial tree end second iteration shown fig b despite greedy nature
recursive greedy provides following approximation guarantee
theorem chekuri pal let p v v vk optimal path
solution let p path returned rg b r log ke ix p
ix p log ke

hence recursive greedy solution p obtains least fraction log
optimal
ke
information k n e total number locations traversed optimal path
smaller total number locations discretized spatial domain referring back theorem mipp recursive greedy single robot path
log ke

running time
inspecting recursive structure running time recursive greedy seen
quasi polynomial specifically running time b log
b budget constraint v total number possible observation locations
even small locations exponent resulting
large computation time making impractical observing several real world physical
processes
large computational effort required recursive greedy attributed two issues
large branching factor max nodes recursion tree sum nodes possible
middle node possible budget split across middle node possibly unnecessary
recursion exploring subtrees space provide us improved reward compared current best solution following sections propose two complementary
approaches used independently others intended ameliorate concerns spatial decomposition technique branch bound spatial decomposition


fie fficient nformative ensing ultiple robots

starting node

starting cell cs

ending node

ending cell ct

cs

middle cell cm
ct
p budget b
p budget beb

incoming
path p



b

spatial decomposition phenomenon



c

smoothed path

exiting path
p

cell center

b cell paths travel within cells

c cell paths path smoothing

figure illustration spatial decomposition recursive esip surface sensing lake environment
example sensing domain top decomposed grid cells bottom recursive esip jointly optimizes
cell paths b top allocations experiments cells b bottom within cells locations connected
cell center recursive esip concatenates paths cell within cell paths c top finally heuristics
applied emip smooth path c bottom
discussed section seeks reduce high branching factor e number sum nodes
search tree clustering sensing locations running recursive greedy
clusters instead actual sensing locations branch bound discussed section seeks
avoid unnecessary recursion maintaining lower upper bound possible reward
subtree search tree pruning tree accordingly two approaches together
sequential allocation discussed section provide efficient multi robot
informative path

spatial decomposition approximating mipp sd mipp
section explain detail process spatial decomposition corresponding improvements running time achieved process assumes traveling
cost arbitrary locations given euclidean distance
intuitive improving running time spatially decompose sensing
region smaller sub regions containing cluster sensing locations thus think
informative paths deciding sub regions explore deciding
locations sense within sub regions idea exploring sub regions motivates
decomposition sensing domain smaller regions cells run recursivegreedy cells instead actual sensing locations since size cellular
region small traveling cost within cell ignored ignore traveling cost
within cells sensing locations inside selected cells chosen greedysubset
proposed krause et al taking advantage strong approximation guar may robotic platforms non holonomic motion constraints make small motions much challenging thus traveling cost smaller distances within cell may become non negligible systems
large traveling cost smaller motions system specific constraints may possible account
performing cellular decomposition greedy may constrained select locations
close



fis ingh k rause g uestrin k aiser

antee unconstrained setting discussed section fig presents illustration
explained follows
decompose sensing region containing finitely many discrete sensing locations c f
e c c cn c f fig
fig top collection non overlapping cells v
bottom distance two cells defined distance centroids
cells cell ci contains set locations vi v representing sensing locations coordinates locations euclidean metric space lie within
boundary containing cell
approximate original mipp spatially decomposed mipp
e sd mipp jointly optimize cell paths v
e c f fig b
sd mipp v
top recursive greedy allocation observations within
cells visited paths greedysubset thus allocating measurements cell ignore traveling cost within cell c f fig b bottom since
cells large simplification leads small additional cost
sd mipp solution transformed back original mipp
transfer approximate sd mipp solution consisting cell path allocation
observations cells c f fig c top back original mipp smooth
path c f fig c bottom heuristics e g tour opt heuristics discussed
lin
dual optimization cell paths budget allocation observations within visited cell
motivated splitting available budget budget bt traveling cells budget making experiments sensing locations within visited cells split easily
incorporated recursive greedy well required paths recursivegreedy optimized observation locations cells containing locations formally
sd mipp following want path pc cs ci cil ct
robot starting cell cs containing starting node finishing cell ct containing
finishing node travel cost bt travel budget measured terms
distances centers visited cells cost traveling within cells defined
addition visited cell cij pc want select set sensing locations aij
total experimental cost making observations within visited cells upper bounded
e c ai ail information ai ail large possible
optimal sd mipp solution uses optimal split budget bt simplify
presentation rescale costs cells form uniform grid quadratic cells
width l assume sensing cost cexp constant locations assumptions
easily relaxed allow us relate path costs number cells traversed
simplify discussion
following lemma states exists sd mipp version pc mipp optimal
path p almost cost information
lemma let p v v vl optimal path solution mipp constrained
budget b exists corresponding sd mipp path pc cs ci cil ct

traversing locations ai ail budget b l collecting
information



fie fficient nformative ensing ultiple robots

emip
e k starting finishing locations sk tk
input b
output collection informative paths p pk
begin

perform spatial decomposition cells

starting ending cells csi cti

r
path robot

k
trying different combination traveling
experimental budget
e
iter blog bc

iter
e

b


piter
recursive esip csi cti r iter


smooth piter
tour opt heuristics


pi argmaxiter piter

r r pi

return p pk
end
emip informative multi robot path procedure line line


effectively implements esip esip repeated line sequential allocation described
section line get paths robot

present finding approximately optimal solution sd mipp
solution
gives us approximate solution original mipp
slightly increased cost b l ensuring optimal solution mipp exists
corresponding sd mipp setting
sd mipp
e smooths paths
emip solves sd mipp v
selected observation locations provide solution mipp let us first clarify algorithmic
nomenclature specifically
recursive esip implements similar recursive greedy selecting path
e greedily selects observation locations within visited cell greedysubset
v
esip iterates different values traveling budget calling recursive esip corresponding values input smoothing output path recursive esip
tour opt heuristics
emip effectively implements sequential allocation esip single robot path
complete works follows outer loop line implements
sequential allocation performing path multiple robots procedure


fis ingh k rause g uestrin k aiser

inside outer loop line line implements esip procedure iterates different combination traveling experimental budget allocating bt
iter total budget traveling cells bt making experiments within visited cells stepping bt powers faster performance
log instead iterations increase input budget factor exponential
increase traveling budget guaranteed try traveling budget bt iter btapp btapp
traveling budget best approximation path since overall budget increased
factor remaining experimental budget guaranteed experimental
budget corresponding best approximation path therefore exponential increase traveling
budget increase required budget factor esip procedure
calls recursive esip explained selecting cells visit greedily allocating
observations visited cells finally esip procedure calls tour opt heuristics smooth
output path recursive esip
recursive esip procedure takes input starting cell cs finishing cell ct experimental budget residual r indicating locations visited thus far initially passed empty
emip maximum recursion depth iter initially passed log bt emip
iterate possible choices middle cells cm almost equal
fe available experimental
number cells side cm budget splits b
budget spend making experiments subpaths cs cm cm ct
fe linearly accurate exponentially
c f fig b budget splits b
faster spaced described
recursively subpath p cs cm constrained budget b leaving remaining
budget b subpath p reducing recursion depth iter
subpaths p p ensures equal number cells visited side cm
lowest level recursion depth signifies cell selected corresponding path
lowest recursion level use greedysubset c f section
select sensing locations residual information function ir constrained
budget b illustration black locations middle cell cm fig b bottom
selected greedysubset budget b provide
maximum improvement mutual information
commit locations selected p recursively subpath p
cm ct experimental budget b committing locations selected p
requires greedily select sensing locations lowest recursion level
residual information function irp
finally concatenate locations obtained p p output best path
c f fig c top

linear vs exponential budget splits
step recursive esip procedure explained section considers different budget splits
fe left right subpaths similar recursive greedy one choose
b b
fe linearly spaced since branching factor proportional
b
number considered splits linear budget splits leads large amount computation effort


fie fficient nformative ensing ultiple robots




















recursive esip
input cs ct r iter
output informative path p cs ct
begin
cs ct iter l return infeasible
greedy node selection within starting finishing cell
p greedysubsetbe r vi vi cs ct
iter return p
reward ir p
trying cell middle cell
foreach cm c
trying possible budget split
fe
b b
subpath one side middle cell
p recursive esip cs cm b r iter
subpath side middle cell
committing nodes selected first subpath
p recursive esip cm ct b r p iter
ir p p reward
p p p
reward ir p
return p
end
recursive esip procedure path

fe log
alternative consider exponential splits b



case branching factor logarithmic experimental
budget even though guaranteed solutions linear budget splits
theoretically given lemmas empirically illustrated fig c
performance gets slightly worse case compared significant
improvement running time addition two ways splitting budget confe log
sidered one sided exponential budget splits e b
reduces branching factor factor compared exponential splits defined although provide theoretical guarantees third possibility experimentally found
perform well c f section
algorithmic guarantees
greedy two ways
recursion depth sensing locations selected greedily mutual information criterion
exploring subpath p recursive esip procedure commits locations selected
subpath p


fis ingh k rause g uestrin k aiser

due greedy steps recursive esip approximation necessarily optimal solution following lemma however guarantees performance bound
path output esip procedure
lemma let pc cs c ck ct optimal solution single robot instance
e optimal set locations selected within
sd mipp constrained budget b
b solution returned esip p
b e p
visited cell cj let p
c
log k


solving mipp
need transfer approximately optimal solution obtained sd mipp back mipp
path cells observation locations selected greedily within visited cell transformed path observation locations connecting locations selected cell cij
cells center indicated fig b bottom connecting selected centers path fig c
top finally expanding resulting tree tour traversing tree twice traversing
edge tree direction set nodes connected tree converted
set nodes connected path traversal tour twice
long shortest tour connecting selected vertices course even better solution
obtained applying improved approximation tsp proposed
christofides following theorem completes analysis
theorem let p optimal solution single robot instance mipp
b achieving information
budget constraint b esip solution p


e
whose cost b l l
b
value least p
p
log n
cexp


fe b l l n log
case linear budget split b
cexp

fe
case exponential budget split b
performance guarantee w r number cells n instead number sensing
locations case work chekuri pal however input budget
constraint violated amount size cells spatial decomposition
violation input budget constraint leads tradeoff computation effort additional
cost incurred tuned specific application requirements size cell
small limit reducing cell observation location number cells large
higher computation time reduced additional cost hand
size cell large computation time small needs pay higher
additional traveling cost
running time analysis esip straightforward calls routine recursive esip
log b times ti time evaluate mutual information time computing
greedy subset tgs line nc ti nc maximum number
locations per cell recursion step try cells reached available traveling budget line possible experimental budget split try
fe among two subpaths p p line
linearly exponentially spaced splits b
e following proposition states
recursion depth would log min n b
running time esip



fie fficient nformative ensing ultiple robots

proposition worst case running
time esip linearly spaced splits experimental
budget tgs log b n b log n exponentially spaced splits experimental
budget tgs log b n log b log n
comparing running time recursive greedy b log note
reduction b log b base log number locations log log
number cells log n exponent two improvements turn impractical recursivegreedy much viable
varying number cells correspondingly size cell trade
computation effort traveling cost within cell ignored esip
proposition states computation effort directly proportional number
cells n therefore increase number cells corresponding computation effort
esip increase hand reducing number cells
increasing size cell since esip ignores traveling cost within
cell larger cell size imply larger traveling cost ignored esip hence
larger overshoot cost resultant output path input budget b lemma states
corresponding additional cost incurred output path calculated esip terms
cell size l specific application requirements one decide appropriate number cells fine tune trade computation effort additional path cost
incurred fig f shows corresponding collected reward vary significantly
varied number cells application observing temperature lake environment

branch bound
spatial decomposition technique effectively enables trade running time complexity achieved approximation guarantee however esip still solve
super polynomial albeit sub exponential search following describe several
branch bound techniques allow reduction computation effort making
tractable real world sensing experiments
representation
specific structure search space representation motivated many proposed branch
bound approaches similarly recursive structure recursive greedy discussed
section recursive esip structure represented sum max tree
shown fig small difference exists selection observation locations along
solution path case recursive greedy sum nodes traversed selected
path represents physical observation location however case recursive esip sum
node selected path represents cell corresponding traversed path observation
locations sum node selected greedily within corresponding cell available
experimental budget sum max tree structure explain proposed
branch bound approaches prune parts tree provide improvement
currently known best solution path proposed branch bound techniques
outlined recursive esip procedure presented



fis ingh k rause g uestrin k aiser



recursive esip branch bound
input cs ct r iter rewardlb
output informative path p cs ct











begin
cs ct iter l
return infeasible
p greedysubsetbe r vi vi cs ct
iter
return p
f iltercells ci ci cs ci iter l ci ct iter l
foreach cm f iltercells
fe
b b



calculating upper bound greedysubset
u bp calculateu b cs cm b iter r
u bp calculateu b cs cm b iter r



u bp u bp rewardlb





calculating lower bound p
heurp heuristicop cs cm b r iter
lbp max ir heurp rewardlb u bp



recursive search p
p recursive esip cs cm b r iter lbp





calculating lower bound p
heurp heuristicop cm ct b r p iter
lbp max irp heurp rewardlb ir p



recursive search p
p recursive esip cm ct b r p iter lbp



iresid p p rewardlb
p p p
rewardlb iresid p p







return p
end

recursive esip procedure branch bound approaches efficient path
procedure corresponds max node search space input rewardlb representing calculated lower
bound sum node search space effectively combines recursive calls subpaths implemented line line since recursion reduces traveling budget iter l half initial pruning
line removes cells reached next recursion step line line calculate lower
bound subpaths side selected middle cell input represents scaling factor one
b e p
sub approximation heuristics approximation guarantee output path p given p
log n

submodular reward function p optimal path



fie fficient nformative ensing ultiple robots

sum max tree

b pruning sum nodes

c tighter lower bounds

figure illustration branch bound shows sum max tree representing search space
max node selects middle cell budget allocation sum node combines two subpaths side
selected middle cell b shows upper bound sum node e g value sum smaller
lower bound parent max node e g value max used prune branches search tree c
shows lower bound max nodes tightened e g value max improved upper bound
sibling axn lower bound grandparent max allow pruning otherwise may
possible e g pruning sum upper bound value

efficient search space
naive implementation recursive esip entire recursion tree would eventually traversed
however many considered subpaths may highly suboptimal several heuristics
proposed past similar path empirical efficiency claims without
approximation guarantee use one heuristic c f chao et al hereafter referred
heuristicop calculate solution path satisfying budget constraints trying maximize collected reward since path efficiently calculated small computation
effort use path initial known solution total reward collected path used
input lower bound input variable rewardlb root max node since
computation effort associated heuristicop small used rest max nodes
search tree calculate lower bound nodes discussed detail section
child sum nodes upper bound collected reward calculated exploiting submodularity reward function procedure calculateu b called line


fis ingh k rause g uestrin k aiser



calculateub

input cs ct iter r
output upper bound ub information gain
begin
selecting set reachable cells

possiblecells ci ci cs ci ci ct iter l
greedy node selection within reachable cells

p greedysubsetbe r vi vi possiblecells

ub iresid p

return u b
end
procedure calculating upper bound max nodes upper bound child max nodes added
obtain upper bound parent sum node

explained detail need process sum node
children upper bounds greater current best solution line
current best solution parent max node updated collected reward
child sum nodes greater previously known best solution reward line
fig b presents graphical illustration concept completely exploring branch
sum current best solution value updated lower bound max smaller lower
bound sum pruning sub branch rooted sum however nodes sum
upper bound higher current best solution need explored
potentially provide solution path better reward current best solution
u pper b ound sum n odes
presents calculateub procedure obtaining upper bound collected
reward max node used recursive esip line pruning
search space upper bound sum node calculated adding upper bound
child max nodes calculate upper bounds relaxing path constraints finding
optimal set reachable locations path p p since nphard exploit submodularity reward function approximate greedysubset
fig illustrates example calculating upper bound first calculate set
reachable locations w r remaining traveling budget locations contained within
cells ci reachable cells cs ct line boundary reachable
locations illustrated ellipse fig
run greedysubset greedily select best possible locations
possible reachable locations line example vi vj selected
greedysubset fig since greedysubset guarantees constant factor e approximation nemhauser et al multiplying resulting information value e provides
upper bound information achievable path hence corresponding max child
node therefore fig reward collected locations vi mi vi vj mi vj
multiplied factor e provides upper bound collected reward however since
path cost constraint relaxed total cost observing vi vj dsi dij djt may



fie fficient nformative ensing ultiple robots

figure illustration calculating upper bound greedysubset
available budget b fig c example use calculateub get upper bounds
max max resulting upper bound sum
l ower b ound max n odes
effective pruning subtree rooted sum nodes would require calculating lower bounds
parent max node efficiently one way calculate lower bounds exploring one branch
completely explained section procedure computationally expensive instead implement two ways acquiring lower bounds faster heuristicop
explained obtaining initial best solution current best solution
grandparent max node use larger two different lower bounds
fig c illustrates graphical presentation procedure calculating lower bounds
current best solution grandparent max node call procedure altlb calculate upper bound exploiting submodularity max node node max since
grandparent node max lower bound subtree rooted max provide
reward least explored lower bound value calculated
altlb tighter lower bound provided heuristic enabled pruning branch
sum upper bound
lines illustrate altlb procedure altlb lower
bound subpath p line calculated upper bound subpath p
hand calculating lower bound altlb subpath p line exact reward
p ir p used instead upper bound since actual reward tighter
calculated upper bound lower bound calculated subpath p altlb tighter
lower bound calculated subpath p motivates exploring subpath higher
experimental budget first upper bound unexplored subpath lower experimental budget tighter making lower bound first subpath tighter heuristic
even compute tighter online bounds maximizing monotonic submodular functions discussed
nemhauser et al
heuristicop proposed modular functions found provide good solution paths even
submodular setting
note higher experimental budget greedysubset used calculate upper bound potentially
select locations far apart since path cost constraint ignored path cost constraint
incorporated locations become infeasible make upper bound loose



fis ingh k rause g uestrin k aiser

exploring subpath higher experimental budget first exploited improve
computation effort
maintaining lower bound node search tree makes anytime
e search terminated point even completed current best solution
graph already searched available early termination early termination
particularly advantageous scenarios required obtain best possible path traversed
robot hard upper bound available time calculate path
n ode rdering
illustration fig b demonstrates better currently known solution likely help
increased pruning search tree order improve current best solution faster
max node explore sum nodes decreasing order upper bounds intuitive
idea higher upper bound likely indicator higher reward value thus upper bound
line calculated separately rest computation
loops implemented line executed decreasing order
upper bound similar node ordering employed improve pruning
efficiency depth first branch bound dfbnb zhang korf
ub approximation
upper lower bounds derived explained potentially loose address
issue trade collected information improved execution time introducing
several sub approximation heuristics first heuristic node ordering performed
explore top k sum nodes heuristic termed sub approximation ibaraki et al
found effective practice
second heuristic instead comparing lower bound parent max node directly
upper bound child sum nodes deciding subproblems prune scale
lower bound factor line scaling often allows us
prune many branches would pruned otherwise unfortunately optimistic
pruning potentially cause us prune branches pruned decrease information collected practice sufficiently small values
procedure speed significantly without much effect quality solution performance comparison computation effort collected reward several
real world sensing datasets discussed section

experimental
performed several experiments field well simulation real world sensing
datasets demonstrate usefulness proposed several diverse environmental
sensing applications field experiments performed networked infomechanical
system nims jordan et al tethered robotic system real world sensing datasets used
performing scaling multi robot experiments simulation collected
network static sensors robotic boat



fie fficient nformative ensing ultiple robots

schematic representation system

b image captured performing path

figure aquatic nims nims aq platform nims family used performing path
lake environment

field experiments
several experiments performed field demonstrate applicability modeling phenomenon gaussian process emip perform path diverse aquatic sensing applications include river monitoring application objective studying salt
concentration lake monitoring several applications interest limnologists
applications nims used monitor cross section two dimensional vertical plane
environment aquatic environment phenomenon interest modeled gaussian process use mutual information criterion submodular reward function quantifying informativeness observation locations learned gaussian process model mutual
information objective provided input emip subset locations output
subsequently observed nims robotic platform order quantify
efficiency predict phenomenon unobserved locations compute
root mean square rms error predicted phenomenon ground truth calculated
observing uniformly spaced locations path experiment
robotic p latform
aquatic networked infomechanical systems platform nims aq latest family
nims systems jordan et al pon et al borgstrom et al developed specifically
aquatic applications used lake deployment family nims systems
successfully deployed several terrestrial aquatic sensing applications alone
nims used several successful campaigns forests la selva costa rica james reserve
california rivers san joaquin california medea creek california lake lake fulmor california mountain ecosystems white mountains california
fig displays schematic view system basic infrastructure system includes rigid sensing tower supported two hobie floatcat pontoons catamaran configuration actuation module resides top sensing tower drives horizontal cable
vertical payload cable horizontal vertical motion respectively across cross section
aquatic environment power system provided two deep cycle marine batteries housed
top pontoons horizontal drive cable kept center aligned craft guide
developed hobie cat company



fis ingh k rause g uestrin k aiser

observed distribution raster scan august

b predicted distribution observing locations
output emip

figure distribution electrical conductivity microsiemens per centimeter observed confluence san
joaquin river california points represent observation locations corresponding experiment

pulleys repositioned type aquatic environment nims aq
sampling flowing still water conditions fig b shows nims aq performing path
lake environment
ensing r iver e nvironment
first field application executed confluence two distinct rivers
merced river san joaquin river california august hereafter referred
san joaquin deployment fig displays aerial view san joaquin deployment site
scientific objective confluence zone characterize transport mixing phenomena
confluence two distinct rivers merced river relatively low salinity agricultural
drainage impacted san joaquin river relatively high salinity observing several parameters
may indicate mixing behavior two streams river observations useful answering important questions pertaining spatio temporal variability velocity water quality
dynamics resulting pollutant inputs hydrodynamic mixing regimes biogeochemical cycling processes distributed time space understanding mixing patterns important policy issues related water distribution river ecosystems brekke
et al
total width observed cross section meters maximum depth meters closer middle cross section several experiments executed past
characterize mixing phenomena confluence site singh et al harmon et al
primary experimental design campaigns comprised making observations
uniformly spaced locations two dimensional cross section hereafter referred raster scan
repeating experiments several times understand spatial temporal dynamics
environment experiments took several hours thus restricting experiments
small number cross sections one two within limited deployment time however
detailed understanding confluence environment would require observing multiple crosssections within limited time frame necessitates use adaptive sampling
model observed phenomenon make observations small number locations
model effectively predict phenomenon unobserved locations



fie fficient nformative ensing ultiple robots

mixing patterns characterized confluence observing electrical conductivity
indicated amount salt concentration water fig displays typical distribution
cross section confluence zone x axis representing distance along cross section
axis representing depth low concentration electrical conductivity towards lower
x values contributed clear water merced river end displaying high
concentration salts carried san joaquin river first use data one raster
scan performed first day deployment displaying similar characteristics learn
non stationary gaussian process model covariance function parameterization described
krause guestrin parameters chosen maximizing marginal likelihood rasmussen williams non stationary process learned dividing
complete region smaller sub regions combining locally stationary gps
sub regions
total locations observed raster scan used learning gp
model set locations selected total emip
starting finishing location end cross section displayed fig
set observation locations observed next days required
dwelling time seconds observing electrical conductivity large reduction number observation locations resulted significant reduction experimental time well compared
raster scan
since environmental phenomena exhibit spatial temporal dynamics performed raster
scans experiment get measure ground truth electrical conductivity
predicted electrical conductivity computed making observations subset
locations selected emip compared ground truth fig b displays predicted distribution specific conductivity points representing observed locations output
emip fig displays distribution observed raster scan performed
path experiment
rms error predicted distribution raster scan performed path
experiment cm hand rms error predicted
distribution raster scan performed path experiment cm
rms error two raster scans performed path experiment indicating temporal variation environment cm low rms error
predicted distribution compared rms error raster scans performed
path experiment clearly indicates effectiveness
modeling path environments path experiments performed
days demonstrated similar prediction accuracy maintaining significant reduction total experimental time
ensing l ake e nvironment
second set field experiments executed lake campus university california merced august hereafter referred lake deployment site
chosen convenience accessibly located university campus similarity several lakes interest diverse limnology applications including
study growth patterns algal bloom nuisance algal bloom impair beneficial use
time sensor kept static get accurate measurement



fis ingh k rause g uestrin k aiser

observed distribution raster scan august

b predicted distribution observing locations
output emip

figure distribution temperature c little uc merced campus points represent observation locations
corresponding experiment

aquatic systems blocking sunlight underwater vegetation consuming oxygen water
producing surface scum odors growth pattern algal bloom lake dependent
spatial temporal dynamics temperature dissolved nutrients light occurring different layers environment thus temperature one critical parameter observe
lake environment controls several physical processes occurring low flow aquatic
environments contrast san joaquin river environment considerable water
flow
total width observed cross section meters maximum depth
meters similarly san joaquin deployment first learned non stationary gp model
temperature data one raster scans performed august fig displays
typical surface distribution temperature observed raster scan lake total
locations observed raster scan set locations selected
locations emip starting ending location end
cross section displayed fig set observation locations observed
next day nims robotic platform similar san joaquin deployment performed
raster scans experiment get measure ground truth temperature
distribution predicted temperature computed making observations subset
locations selected emip compared ground truth smaller dwelling time
seconds required measuring temperature cover entire length lake
cross section reduction experimental time compared raster scan
fig b displays predicted distribution temperature points representing observed
locations output emip fig displays distribution observed raster scan performed path experiment rms error predicted distribution
raster scan performed path experiment c hand
rms error predicted distribution raster scan performed path
experiment c rms error two raster scans performed
path experiment indicating temporal variation environment c
low rms error predicted distribution raster scans comparison
temporal variation exhibited lake environment indicates effectiveness
low flow lake environment well


fie fficient nformative ensing ultiple robots

experiments sensing datasets
several experiments performed simulation real world sensing datasets analyze
scaling different approaches varying experimental cost exponential
increase budget split varying size cells spatial decomposition comparison
several heuristics among others three different datasets collected real world sensing applications used experiments first dataset consists measurements temperature
lake fulmor james reserve hereafter referred lake temperature dataset fig b displays
aerial view lake fulmor robotic boat part networked aquatic microbial observing
system namos dhariwal et al used collect surface temperature data around
lake width around meters length around meters discussed earlier understanding temperature distribution prime importance limnology since governs several physical
phenomena occurring lake environment including growth algal bloom
average speed boat approximately half total measurements
different sensing locations used learn nonstationary gaussian process model maximizing marginal likelihood rasmussen williams remaining measurements
used experimentation divided lake cells except experiments
studying effect changing size cell spatial decomposition distance
adjacent cell approximately meters average speed motivated typical
measurement duration roughly seconds set experiment cost meters except
experiment understanding effect scaling experimental cost
second dataset used data existing deployment wireless sensor motes
learn amount temperature variability intel laboratory berkeley hereafter
referred berkeley temperature dataset sensing locations lie within bounding region
length meters width meters divided complete region uniform grid containing equal sized cells determined experimental cost meters approximate distance
travel adjacent cells learned gp model discussed krause et al
finally explored performance precipitation dataset collected
regions equal area approximately km apart years followed
preprocessing model learning described work krause et al large physical
spread sensing regions makes dataset unconventional mobile robot path
application avoid unrealistic scenario normalized coordinates regions lie
within bounding region length meters width meters keeping actual sensing
data observed location divided complete region uniform grid cells
experimental cost meters approximate traveling distance adjacent cells
plots comparing performance x axis represent total
cost path including traveling cost selected locations sensing
cost selected location translated distance discussed comparing
computation effort measure performance seconds axis drawn logarithmic scale
computation effort running code implemented matlab ghz dual processor
core gb ram comparing collected reward measure performance axis
represent mutual information submodular reward function collected making observations
selected locations









recursive
greedy





collected reward

execution time seconds

ingh k rause g uestrin k aiser









emip










recursive
greedy





emip






cost output path meters











cost output path meters

comparison computation effort

b comparison collected reward

figure comparison emip recursive greedy subset berkeley temperature dataset sensing







subapproximation
subapprox

subapproximation
collected reward

execution time seconds

locations

subapprox

subapprox
best possible
subproblems














subapprox





best possible
subproblems









uniform density







cost output path meters

cost output path meters

comparison computation effort

b comparison collected reward

figure comparison computation effort collected reward several sub approximation heuristics used
improve running time emip lake temperature dataset significant improvement execution time observed
particularly longer paths without significant reduction collected reward

c omparison r ecursive greedy lgorithm
compare performance recursive greedy proposed
chekuri et al selected subset locations total locations berkeley
temperature dataset small subset locations selected since running time recursivegreedy quasi polynomial large complete dataset fig fig b
display comparison computation effort collected reward smaller dataset
two evident plots provides significant improvement
running time several orders magnitude higher budget values almost collected reward since recursive greedy essentially search procedure greedily
restricted search space indicates exhaustive search paths intractable
even small real world sensing sudden jump execution time emip fig
budget meters due additional iteration step c f line added due
increase input budget constraint thereafter additional increase budget increase experimental budget since recursive esip computes efficiently
small additional increase experimental budget increase computation effort
significantly



fie fficient nformative ensing ultiple robots



distance meters



lake boundary
starting
location


cells


emip path






possible observation
locations





distance meters





figure illustration path selected emip lake temperature dataset
c omparison u niform ample pacing
compared performance emip simple uniform sample spacing referred
uniform density case uniform density starting finishing given locations
greedily select two observation locations within nearest cells compute corresponding path cost path reward uniform density output best possible path
amongst possible simple uniform sample spacing due greedy observation selection
within cell fig b compares collected reward uniform density emip
lake temperature dataset increased collected reward emip compared uniform density empirically justifies complexity emip additionally emip provides strong approximation
guarantee possible uniform sample spacing fig illustrates
path selected emip lake temperature dataset demonstrating emip tend
cause uniform sample spacing traversed cells location selected
observation others many three observation locations selected within
cell
c omparison ub approximation h euristics
sub approximation heuristics discussed section compared empirically analyze
utility improving execution time corresponding reduction collected reward
displayed fig compares heuristics computation effort
sub approximation heuristic provides improvement execution time scenario
branch bound heuristics sub approximation heuristics used
improvement higher values input budget observed lower bound increased
factor fig b displays corresponding comparison heuristics
collected reward interesting observe none sub approximation approaches
resulted considerable reduction collected reward









cost



cost
collected reward

execution time seconds

ingh k rause g uestrin k aiser

cost



cost





cost







cost output path meters

cost

cost






collected reward

linear variation


exponential variation
ends







exponential variation
ends



linear variation




exponential increase





exponential variation























cost output path meters

cost output path meters

c computation effort variation experimental
budget split lake temperature dataset

collected reward variation experimental budget split lake temperature dataset







grid cells


collected reward

execution time seconds



cost output path meters

b collected reward variation sensing cost
precipitation dataset





cost







computation effort variation sensing cost precipitation dataset

execution time seconds



grid cells











grid cells



grid cells



grid cells



grid cells





grid cells













grid cells








cost output path meters

cost output path meters

e computation effort variation grid size
spatial decomposition lake temperature dataset

f collected reward variation grid size spatial decomposition lake temperature dataset

figure comparison collected reward computation effort variation several approaches used emip



fie fficient nformative ensing ultiple robots

variation ensing c ost
fig fig b compare computation effort collected reward sensing cost
varied precipitation dataset reduction experimental cost locations
observed total input budget resulting increased collected reward however
experiments computation effort approximately due diversity
environmental applications sensing cost depend sensors settling time scale
dynamics occurring observed phenomena experiment indicates emip used
diverse range sensing costs per demands diverse environmental applications
variation e xperimental b udget plit
discussed section strategy exponentially increasing experimental budget split
increased additional path length required guarantee approximation factor
collected reward performed several experiments available datasets analyze
empirical performance increasing budget splits exponentially fig c fig compares
computation effort collected reward linear increase one sided exponential variation
two sided exponential variation budget b lake temperature
dataset since smaller number budget splits considered recursive esip case
exponential increase computation effort smaller compared linear increase
budget splits interestingly small reduction collected reward
budget values exponential increase employed hence even though theoretical
approximation guarantee exponential increase experimental budget weaker empirically
collected reward linear exponential increase budget splits found
comparable wide range input budgets
nalysis patial ecomposition
discussed section conversion sd mipp solution cell path solution
mipp path observation locations additional path length exceeding input
budget b additional path length depend size cell size grid covering
complete spatial domain sd mipp trade computation
effort variation grid size corresponding variation traveling cost
neighboring cells opportunity travel cells denser grid
input budget constraint however keep experimental cost constant across varying
grid size since experiment cost depends observed phenomena independent
spatial decomposition scaled accordingly proportion traveling cost
neighboring cells fig f compares collected reward varying grid sizes lake
temperature dataset changing grid size cells interesting observe
change grid size almost negligible effect collected reward hand
increase grid density resulted larger number cells path
performed thus leading increased computation effort input budget comparison
computation effort varying grid size displayed fig e note drastic increase
computation time grid discretization made finer







robots

total rms error

total collected reward

ingh k rause g uestrin k aiser



robots



robots


robots



robot


















average cost output path per robot meters



average cost output path per robot meters

collected reward starting location

b rms error starting location




robots

total rms error

total collected reward

robot



robots


single robot












robots

robots







average cost output path per robot meters



average cost output path per robot meters

c collected reward different starting location

start



robot

rms error different starting location

boundary

cells





start



start

robot
robot

robot

e paths selected mipp

figure analysis experiments performed multiple robots different optimized starting location
lake temperature dataset

ulti robot e xperiments
evaluated performance emip multi robot simulation several sensing datasets fig displays empirical analysis several experiments lake temperature dataset first experiment performed robot starting starting
location fig fig b display collected reward root mean square rms error
number robots varied one three due sequential allocation ap



fie fficient nformative ensing ultiple robots

proach wherein remove locations already selected selecting locations
next robot information never hurts principle collected reward increases number
robots increased hence corresponding root mean square error prediction
unobserved locations gets reduced however incremental change performance one
two robots larger incremental change two three robots expected
submodularity diminishing returns property mutual information
fig c fig display collected reward rms error different starting location chosen robot scenario set four starting locations pre determined
location one end lake see reference fig e three four starting
locations marked starting location three robots selected greedily
collected information different starting location selected opposite end
lake second robot incremental change collected reward corresponding decrease
root mean square error number robots increased one two much higher
corresponding change starting location chosen second robot
well however similar scenario starting location incremental change
number robots increased one two higher compared number
robots increased two three due submodularity mutual information fig e
illustrates selected paths three robots selected emip

related work
large body related work theory path applications approximation proposed several related variants path
studied field operations traveling salesman tsp
vehicle routing vrp robotics several path approaches
studied applications simultaneous localization mapping slam search
exploration sensor networks geostatistics closely related work studies optimal placement
static sensors modeling phenomenon gaussian processes several adaptive sampling approaches studied decide subset locations observe order understand
phenomenon dynamics effectively addition similar approaches explored paths
mobile robots acting data mules collecting data sampled network static sensors
operations
interesting special case mipp given case node fixed
reward goal path maximizes sum rewards traveling salesman
profits tspp feillet et al sum rewards modular additive
function special case submodular functions subcategory tspp optimization defined maximize collected reward keeping associated cost less
given budget b studied orienteering op selective tsp laporte
martello maximum collection kataoka morito literature
additivity assumption made orienteering unrealistic informative path
setting assumes information provided adjacent locations independent
whereas would typically expect strong amount correlation fact observations
independent would point selecting observations spatial prediction



fis ingh k rause g uestrin k aiser

hence study general orienteering submodular reward functions
proposed earlier submodular orienteering chekuri pal
ultiple path e xtensions
extension tspp multiple paths studied vehicle routing profits
vrpp literature tspp several variants vrpp previously considered
prize collecting vrp pcvrp tang wang class vrpp objective determine subset customers visit minimize total distance traveled
minimize vehicles used maximize collected reward multi robot version op
case additive reward functions studied team orienteering ming
et al multiple tour maximum collection butt ryan
k nown pproximations rienteering p roblem
op known np hard golden et al several versions op studied
literature classified starting finishing location root
pre specified case unrooted op starting location specified approximation guarantees known prize collecting tsp k tsp easily extended johnson
et al several constant factor approximations known pc tsp k tsp
best one approximation garg however extension
apply rooted version best path unrooted version may
contain root may far away root thus leading violation budget constraint
rooted op arkin et al gave approximation op geometric
settings blum et al gave first constant factor approximation rooted op general
undirected graphs extended multi path op running time
though polynomial large specifically n log total
reward path recently chekuri et al gave polynomial time op
undirected graphs improved approximation guarantee formulation
specified starting location finishing location falls category rooted op
submodular non additive reward function
another classification op done symmetry space possible
locations approximation guarantees hold true symmetric spaces undirected
graphs obtaining good approximation directed asymmetric orienteering stated open blum et al chekuri pal gave first
approximation log n guarantee runs quasi polynomial running time
running time recently improved independently two different works chekuri et al
nagarajan ravi proposing poly time approximation providing approximation guarantee log n though different approaches metric space conversion procedure used spatial decomposition limits emip symmetric spaces

equential llocation
blum et al proposed sequential allocation extend single robot
orienteering multiple robot setting special case additive modular reward
functions generalize submodular reward functions initial


fie fficient nformative ensing ultiple robots

version published singh et al b realized sequential allocation
procedure instance maximizing submodular function subject matroid constraint calinescu et al define partition matroid disjoint union mk
k ground sets mi one robot set mi contains feasible paths robot
collection subsets p p mi e p corresponds
collection paths constraint pick one set mi forms
independent sets partition matroid hence finding collection maximally
informative paths finding independent set matroid maximizing submodular function current work progress goundan schulz provides general
performance sequential allocation procedure setting used prove
sequential allocation originally presented singh et al b
robotic applications
considerable work path robotics community several applications
including simultaneous localization mapping slam search exploration several
different approaches studied applications including auction data adaptive approaches information gain
imultaneous l ocalization apping
goal simultaneous localization mapping slam build maps environment
performing exploration environment objective estimate robot position
world features simultaneously several approaches optimizing different objective functions
proposed perform path slam bourgault et al proposed exploration
framework occupancy grid og environment model performing spatial decomposition
observed environment objective maximize mutual information og map
stachniss et al developed greedy selecting next location visit
maximize information gain map
contrast approaches sim roy attempted optimize entire trajectory next step introduces approximations without theoretical bounds simmons et al proposed distributed exploration mapping
multiple robots minimizing overlap information gain amongst multiple robots
provided quantitative simulation provide theoretical bounds
little work slam setting upper bound total cost path
addition aware approaches slam carry approximation guarantees
single multi robot cases interesting direction future work would analyze
applicability slam setting
earch e xploration
search exploration application involves path robot goal searching
moving target given environment e g target surveillance security applications
patient tracking health care domain performing path stochastic inference provides
advantage robustness sensing motion uncertainty though added complexity computational intractability roy earnest proposed effectively compute
trajectories target tracking maximizing mutual information evaluated change


fis ingh k rause g uestrin k aiser

variance probability distribution used particle filter performing clustering particles followed path clusters lau et al formulated
target tracking indoor environments generalization np complete optimal searcher path
osp trummel weisinger sought optimize probability detection
within given time horizon accounting undetected target probability function
previously visited locations search used several branch bound approaches
speed search process objective maximizing information gain subject budget
constraints path cost makes emip suitable candidate performing path

ryan used partitioning search space subgraphs multi robot
path take conceptually similar reducing search space decomposing space regions performing path regions however
address complex utility functions quantifying informativeness visited locations
limited specific graph structures stacks halls cliques rings case
work ryan recently thompson wettergreen used emip
near term path performing autonomous exploration surficial units amboy
crater mojave desert california
p lanning ystems pplications
certain applications robotic path used plan graphs blum furst compute
estimate resources time required achieve goals states encountered
search process case subscription wherein subset goals
accomplished within limited time resources available system
work smith used orienteering heuristic provide ordered set goals
considered planner briel et al proposed several heuristics efficiently solving
subscription however earlier proposed heuristics
reward function considered modular additive emip used efficiently solve oversubscription submodular setting strong approximation guarantees
sensor networks
phenomenon modeling decide optimal placement set static sensors well studied
sensor networks geostatistics communities gaussian process spatial phenomena studied extensively cressie guestrin et al proved case
phenomena governed gaussian process selecting placement sensors greedily
mutual information near optimal krause et al extended work include
communication cost sensors optimizing sensor placement communication constrained setting similar path considered greedy
performs badly involved developed batalin et al
showed combining static mobile sensing devices even simple scenario
significant improvement sensing performance scenario combination
static mobile sensing devices available several approaches optimal placement static
sensors combined emip observe given phenomenon efficiently



fie fficient nformative ensing ultiple robots

data c ollection ensor n etwork
different scenario mobile robot combined network static sensors
improve lifetime sensor network performing tours collecting data sampled
static network somasundara et al showed collecting data
environment shows spatial temporal dynamics np complete provided
integer linear programming formulation compared performance several
heuristics simulation single multi robot scenario meliou et al proposed
nonmyopic application data gathering tours submodular
orienteering sop black box provided strong approximation guarantees extensive
empirical evaluation indicates applicability applications
setting emip used orienteering provide better approximation guarantee
addition improved running time
daptive ampling e nvironmental pplications
recent advances robotics opened opportunities high fidelity monitoring dynamic
environmental sensing applications rahimi et al explored several policies adaptively
sampling environment singh et al proposed multiscale adaptive sampling
uniformly sampling environment first stage followed sampling locations order
minimize mean square error extended multiple robots
although without providing theoretical bounds several field experiments well
simulations real world sensing datasets demonstrate several environmental
phenomenon effectively sampled adaptively emip

conclusions future work
presented esip approximation efficient informative
paths esip near optimally solves np hard maximizing collected information
upper bound path cost esip builds recursive greedy
chekuri pal esip preserves approximation guarantees recursive greedy
overcoming computational intractability spatial decomposition several branch
bound approaches presented general sequential allocation extends
single robot esip multiple robot setting providing provably strong
approximation guarantee
provide extensive empirical evaluation demonstrate effectiveness
real world sensing applications performed several field experiments two important
environmental sensing applications lake monitoring small lake uc merced campus
river monitoring san joaquin river california networked info mechanical system nims
used robotic system performing path deployments
demonstrate practicality performed extensive simulation experiments
several real world sensor network data sets global climate change corresponding
impetus sustainable practices expect efficient path approaches help
address challenge monitoring environment related activities effectively
future plan explore applicability application domains
slam search rescue plan work towards understanding limitations



fis ingh k rause g uestrin k aiser

learning static gp model real world scenarios extend online model adaptation

acknowledgments
would thank maxim batalin helpful discussions bin zhang providing lake
data set michael stealey henry pai victor chen help river lake deployment work partially supported nsf grants cns cns cns ani ccr eccs onr muri w nf
gift intel carlos guestrin partly supported alfred p sloan fellowship ibm
faculty fellowship andreas krause partially supported microsoft graduate
fellowship

appendix
theorem let approximation guarantee single path instance informative
path sequential allocation achieves approximation guarantee mipp special case robots starting
si sj j finishing locations ti tj j approximation guarantee improves
exp
proof theorem case robots start finish location let
total reward collected optimal solution additionally define difference
reward collected optimal solution approximation
end stage hence
let ai p pi nodes selected approximation stage
let p p pk denote collection paths chosen optimal solution
f ai
consider residual reward fai fai p f ai p f ai f p p
due monotonicity f path pj fai pj k j fai pj
fai p contradicting monotonic submodularity fai hence path pj
fai pj k thus approximation guaranteed path pi

fai pi k

difference reward collected optimal solution reward collected
stage
k
k
thus k stages difference reward bounded k k k exp
hence reward collect least exp times optimal reward
resulting approximation factor exp
case robot different starting finishing location let pi set
nodes visited optimal path stage let oi set nodes visited optimal
path stage e oi ij pj p reward collected


fie fficient nformative ensing ultiple robots

approximation stage bounded
fai pi fai pi
k stages total collected reward given
k
x

k
x
fai pi
fai pi







since left hand side telescopic sum get
k
x

fai pi f ki pi f ak





right hand side rhs
k
x
r h
fai pi

k
x
f pi ai f ai


adding oi terms submodularity property get
k
x
r h f oi ai f oi ai


f f f f ok ak f ok ak
rearranging terms get

r h f ok ak

k
x


f oi ai f oi ai



monotonicity f ok ak f ok submodularity f f oi ai f oi
ai f ai f ai get


k
x
r h f ok
f ai f ai


f ok f ak
monotonicity f ak f ak get
r h f ok f ak
substituting equation equation get
f ak f ok f ak




fis ingh k rause g uestrin k aiser

thus
f ak f ok
resulting approximation guarantee
theorem proof inspired proof multi path orienteering provided
blum et al
lemma let p v v vl optimal path solution mipp constrained budget b exists corresponding sd mipp path pc cs ci cin

ct traversing locations ai ail budget b l collecting
information
proof lemma let p optimal path mipp constrained budget b need ensure mipp transformed sd mipp pc corresponding optimal solution
enough budget pc feasible domain recall
domain sd mipp traveling cell costs l distance centroids
adjacent cells irrespective sensing location within cell

l












figure illustration increased budget requirement sd mipp
corresponding sd mipp optimal path may make experiments different
cells cells fig sharing common vertex sensing location different
cell close common vertex requiring infinitesimally small traveling cost increasing budget l accounts case furthermore paying additional cost
l traveling two corners edge cell pc make experiments
cells cells fig thus total number cells visited pc upper bounded
b l hence budget b l suffices render pc feasible sd mipp solution
convert mipp two dimensional
euclidean distance corresponding l distance

budget needs increased b ensure p feasible l metric accounting
conversion euclidean distance l total budget b required
sd mipp

ensure feasibility optimal solution mipp upper bounded b l
lemma let pc cs c ck ct optimal solution single robot instance
e optimal set locations selected within
sd mipp constrained budget b
b
b e p
visited cell cj let p solution returned esip p
c
log k


proof lemma prove induction length n optimal path let fg
e constant factor due greedy selection sensing locations within cell


fie fficient nformative ensing ultiple robots

assume budget constraint sd mipp case n iter
select greedy subset nodes set cs ct give
approximation guarantee fg krause et al compared optimal set number
observations selected cell hence information obtained optimal sd mipp
path visiting cell
assuming induction hypothesis holds n k get
fg
ix p
log k
fg

ix p
log k

ix p

hold true traveling budget bek experimental budget bek let us
analyze case n k let p optimal path cs ck constrained budget b
since increase experimental budget split linearly b vary bek bek
traveling cost visiting k cells since cost less bek induction
hypothesis
fg
ix p

ix p
log k
similarly x x p following approximation guarantee holds true p
ix p

fg
ix p
log k

definition submodular function
ix p p p x p x
ix p p ix p
substituting get
ix p

fg
ix p p ix p
log k

monotonicity
ix p

fg
ix p ix p
log k

adding finally get
fg
ix p ix p ix p
log k
fg log k ix p fg ix p ix p
ix p

log k ix p fg ix p ix p
since ix submodular function
log k ix p fg ix p
fg
ix p
ix p
log k





fis ingh k rause g uestrin k aiser

proof inspired analysis recursive greedy submodular
orienteering proposed chekuri pal
case exponential budget splits budget needs increased albeit sub linearly
lemma let pc cs ci cin ct optimal sd mipp solution constrained
e let p solution returned emip exponential splits experimental
budget b

e p e p
budget started increased budget n log b
c
log n
proof lemma set paths emip considers exponential splits let us call
exponential paths general strict subset linear paths considered linear
splits proof lemma indeed shows path returned emip achieves factor
e
log n less information optimal exponential path need increasing

budget factor n log guarantees optimal linear path feasible exponential path
every exponential path represented complete binary tree whereby every internal node
given level tree corresponds choice middle node experimental budget allocation
left right sub path corresponding recursion level every leaf tree
corresponds set observations selected visited cell consider tree representing
e inner node restriction exponential splits lead
optimal linear path budget b
situation left right sub path receives less experimental budget allocated
optimal path proof strategy turn tree selects
observations corresponds valid exponential path order achieve annotate
inner node v receives bv experimental budget optimal linear allocation
feasible exponential budget bv bv suffices root r holds
n log b log n b label edges sub path
br
r
r
corresponding edge labeled receives smaller part linear budget split hence
e
leaf v path k ones receives bv k total linear budget requirement b



let us derive bounds bv bottom prove induction bv bv
height v distance leaves suffice condition br log n br
want prove leaves v clearly bv bv sufficient since split done hence
reward collected linear exponential split let v inner node
children l r w l g left child l annotated construction br bv
induction hypothesis bl bl br br choose bv bl br
feasible exponential budget split allocating least bl l br r
split require increasing budget exponentially till suffice r allocating rest l
ensure budget split suffice r exponential budget irrespective
whether represents p p need exponential splits sides trying
exponential increase bexp bv bexp cases r represents p p
respectively bv bl br bv br
bv
theorem let p optimal solution single robot instance mipp
b achieving information
budget constraint b esip solution p


e


b

value least p log n p whose cost b l l cexp




fe b l l n log
case linear budget split b
cexp

fe
case exponential budget split b


fie fficient nformative ensing ultiple robots

proof theorem let b budget requirement sd mipp according lemma
lemma case exponential splits p corresponding solution returned emip
let cexp cost making observation sensing location maximum number
sensing locations visited p cb
since account traveling sensing
exp
locations additional cost equivalent traveling centroid visited cells
corresponding sensing location paid solution sd mipp transformed
back

get solution mipp sensing location maximum additional cost l incurred
traveling sensing location returning back centroid l length
cell thus additional cost
solution path mipp transformed sd mipp


upper bounded bl
cexp since emip considers exponential budget splits
traveling experimental budget increase budget another factor guarantees
split defined optimal mipp solution feasible combining analysis lemma
lemma completes proof

references
arkin e mitchell j b narasimhan g resource constrained geometric network
optimization symposium computational geometry pp
bai x kumar xua yun z lai h deploying wireless sensors achieve
coverage connectivity proceedings th acm international symposium
mobile ad hoc networking computing pp
batalin rahimi yu liu kansal sukhatme g kaiser w j hansen
pottie g j srivastava estrin call response experiments sampling
environment proceedings nd international conference embedded networked
sensor systems pp
blum chawla karger r lane meyerson minkoff approximation
orienteering discounted reward tsp annual symposium foundation
computer science focs p
blum l furst l fast graph analysis artificial
intelligence
borgstrom p h stealey j batalin kaiser w j nims novel rapidly
deployable robot dimensional applications ieee rsj international conference
intelligent robots systems beijing china
bourgault f makarenko williams grocholsky b durrant whyte h information adaptive robotic exploration ieee rsj international conference intelligent
robots systems iros pp
brekke l miller n l bashford k e quinn n w dracup j climate change
impacts uncertainty water resources san joaquin river basin california journal
american water resource association
briel v sanchez r b kambhampati effective approaches partial
satisfaction subscription aaai pp aaai press



fis ingh k rause g uestrin k aiser

butt e ryan optimal solution procedure multiple tour maximum
collection column generation computers operations

calinescu g chekuri c pl vondrk j maximizing submodular set function subject matroid constraint extended abstract integer programming combinatorial
optimization ipco vol lecture notes computer science pp
caselton w zidek j optimal monitoring network design statistics probability
letters
chao golden b l wasil e fast effective heuristic orienteering
european journal operations
chekuri c korula n pal improved orienteering related proc th annual acm siam symposium discrete soda
siam appear
chekuri c pal recursive greedy walks directed graphs annual
symposium foundation computer science focs pp
christofides n worst case analysis heuristic traveling salesman
tech report cmu
cressie n c statistics spatial data wiley
dhariwal zhang b stauffer b oberg c sukhatme g caron requicha
networked aquatic microbial observing system ieee international conference
robotics automation icra
feillet dejax p gendreau traveling salesman profits transportation science
garg n saving epsilon approximation k mst graphs acm
symposium theory computing stoc pp
golden b levy l vohra r orienteering naval logistics

goundan p r schulz revisiting greedy submodular set function
maximization working mit
guestrin c krause singh p near optimal sensor placements gaussian processes international conference machine learning icml
harmon c ambrose r f gilbert r fisher j c stealey kaiser w j
high resolution river hydraulic water quality characterization rapidly deployable
networked infomechanical systems nims rd environmental engineering science

ming c golden b wasil e team orienteering european journal
operation
ibaraki muro murakami hasegawa branch bound
obtain suboptimal solutions mathematical methods operations



fie fficient nformative ensing ultiple robots

ishikawa tanaka diurnal stratification effects wind induced currents
water qualities lake kasumigaura japan journal hydraulic

johnson minkoff phillips prize collecting steiner tree theory
practice symposium discrete soda pp
jordan b l batalin kaiser w j nims rd rapidly deployable cable
robot ieee international conference robotics automation icra rome italy
kataoka morito single constraint maximum collection
journal operational society japan
ko c w lee j queyranne exact maximum entropy sampling
operations
krause guestrin c near optimal observation selection submodular functions
aaai nectar track
krause singh guestrin c near optimal sensor placements gaussian processes theory efficient empirical studies journal machine learning
jmlr vol pp
krause guestrin c nonmyopic active learning gaussian processes
exploration exploitation international conference machine learning
icml pp
krause guestrin c gupta kleinberg j near optimal sensor placements maximizing information minimizing communication cost proceedings fifth international conference information processing sensor networks ipsn pp
laporte g martello selective travelling salesman discrete applied
mathematics
lau h huang dissanayake g probabilistic search moving target
indoor environment ieee rsj international conference intelligent robots systems
iros pp
lin computer solutions traveling salesman bell system technical
journal
macintyre vertical mixing shallow eutrophic lake possible consequences
light climate phytoplankton limnology oceanography
macintyre romero j r kling g w spatial temporal variability surface layer
deepening lateral advection embayment lake victoria east africa limnology
oceanography
meliou krause guestrin c hellerstein j nonmyopic informative path
spatio temporal association advancement artificial intelligence
aaai pp
nagarajan v ravi r poly logarithmic approximation directed vehicle
routing proc th internat workshop approximation combinatorial optimization approx vol lncs pp springer


fis ingh k rause g uestrin k aiser

nemhauser g wolsey l fisher analysis approximations maximizing
submodular set functions mathematical programming
pon r batalin gordon j rahimi kaiser w sukhatme g srivastava estrin
networked infomechanical systems mobile wireless sensor network platform
proceedings fifth international conference information processing sensor networks ipsn pp
rahimi pon r kaiser w sukhatme g estrin srivastava adaptive
sampling environmental robotics ieee international conference robotics
automation icra
rasmussen c e williams c k gaussian process machine learning adaptive
computation machine learning mit press
reynolds fleming j v fleming j g luettich r portable autonomous vertical
profiler estuarine applications estuaries
roy n earnest c dynamic action spaces information gain maximization search
exploration american control conference
ryan r k exploiting subgraph structure multi robot path journal
artificial intelligence jair vol pp
sim r roy n global optimal robot exploration slam ieee international
conference robotics automation icra
simmons r g apfelbaum burgard w fox moors thrun younes h
coordination multi robot exploration mapping association advancement
artificial intelligence aaai pp
singh nowak r ramanathan p active learning adaptive mobile sensing networks proceedings fifth international conference information processing
sensor networks ipsn pp
singh batalin chen v stealey j jordan b fisher j harmon hansen
kaiser w j autonomous robotic sensing experiments san joaquin river ieee
international conference robotics automation icra pp rome italy
singh krause guestrin c kaiser w j batalin b efficient
informative paths multiple robots international joint conference artificial intelligence ijcai pp hyderabad india
smith e choosing objectives subscription international conference
automated scheduling icaps
somasundara ramamoorthy srivastava b mobile element scheduling
dynamic deadlines ieee transactions mobile computing vol pp
stachniss c grisetti g burgard w information gain exploration raoblackwellized particle filters robotics science systems rss
tang l wang x iterated local search large scale neighborhood prize collecting vehicle routing international journal advanced
manufacturing technology


fie fficient nformative ensing ultiple robots

thompson r wettergreen intelligent maps autonomous kilometer scale science survey international symposium artificial intelligence robotics automation
space isairas
trummel k e weisinger j r complexity optimal searcher path
operations
zhang w korf r e performance linear space search artificial intelligence




