journal artificial intelligence

submitted published

learning reasoning action related places
robust mobile manipulation
freek stulp

stulp clmc usc edu

computational learning motor control lab
university southern california
mcclintock avenue los angeles ca usa

andreas fedrizzi
lorenz mosenlechner
michael beetz

fedrizza cs tum edu
moesenle cs tum edu
beetz cs tum edu

intelligent autonomous systems group
technische universitat munchen
boltzmannstrae garching bei munchen germany

abstract
propose concept action related place arplace powerful flexible representation task related place context mobile manipulation arplace
represents robot base locations single position rather collection positions associated probability manipulation action succeed
located arplaces generated predictive model acquired
experience learning take account uncertainty robot
location location object manipulated
executing task rather choosing one specific goal position
initial knowledge task context robot instantiates arplace
bases decisions arplace updated information
task becomes available advantages least commitment
present transformational planner reasons arplaces order optimize
symbolic plans empirical evaluation demonstrates arplaces leads
robust efficient mobile manipulation face state estimation uncertainty
simulated robot

introduction
recent advances design robot hardware software enabling robots solve
increasingly complex everyday tasks performing tasks robot must continually decide course action decision commitment plan
action parameterization evidence expected costs benefits associated
outcome resulaj kiani wolpert shadlen definition highlights
complexity decision making involves choosing appropriate action action
parameterization costs minimized benefits maximized robot
must therefore able predict costs benefits arise executing
action furthermore due stochasticity hidden state exact outcome action
known advance robot must therefore reason expected outcomes
able predict probability different outcomes given action action paramec

ai access foundation rights reserved

fistulp fedrizzi mosenlechner beetz

terization finally robot commits decisions current observable evidence
represented belief state evidence changes rationale committing
decision may longer valid robot therefore needs methods efficiently reconsider decisions belief state changes action execution possibly commit
another plan necessary
mobile manipulation good case point even basic mobile manipulation
tasks picking object table require complex decision making pick
object robot must decide stand order pick object
hand use reach grasp type apply grasp much
grasp force apply lift object much force apply lift
hold object hold decision complex depend
specific task context consists many task relevant parameters furthermore
decisions must continually updated verified task context robots
knowledge context often changes task execution
consequently tasks complexity require robust hardware low level
controllers least commitment making decisions abstract
capabilities probabilistic representations principled ways updating beliefs
task execution article demonstrate implementing core ai topics
contributes robustness flexibility mobile manipulation platform
task relevant decision consider article base position robot
navigate order perform manipulation action decision alone presents
several challenges successfully executing reaching manipulation action
critically depends position base due imperfect state estimation
uncertainty position robot target object positions
known exactly fundamental successfully grasping object possible
determine single best base position manipulation complete knowledge required
determine appropriate base position often available initially rather acquired
line task execution
solution idea address challenges concept action related places
arplace powerful flexible representation task related place context
mobile manipulation arplace represented probability mapping specifies
expected probability target object successfully grasped given positions
target object robot

arplace p success fkrob hf obj obj k
k



estimated position target object represented multi variate gaussian
distribution mean f obj covariance matrix obj discrete set robot positions
fkrob k
k thought possible base positions robot considers grasping
e potential positions navigate typically set positions arranged grid
exemplary arplace depicted figure
feature vectors f rob f obj contain poses robot object relative tables
edge details given section positions without uncertainty denoted f estimated
positions uncertainty hf



filearning reasoning action related places robust mobile manipulation

figure arplace probability successful manipulation given current estiobj
rob k
obj
mated object position hfcur
cur set potential robot positions fk k
arranged grid along x axis whereby position leads
obj
obj
different probability successful grasping p success fkrob hfcur
cur
black isolines represent grasp success probability levels

arplace three important properties base places single
position f rob rather set positions fkrob k
k different expectation
success manipulation action depends upon estimated target object
position updating f obj obj task execution thus leads different probabilities
arplace probabilistic representation takes account uncertainty
target object position leads robust grasping
example scenario
figure present example scenario demonstrates properties
arplace address challenges stated supports decision making
mobile manipulation images top row current situation robot
outside view images lower visualize robots internal arplace
representation arplace visualized colors red white green
represent low medium high grasp success probabilities respectively grasp success
probability levels depicted isolines figure
scenario robots task clean table scene robot enters
kitchen vision system detects cup robot far away cup
uncertainty arising vision pose estimation cup high indicated
large circle around cup lower left image exact position cup
known possible determine single best base position grasping
cup arplace representation takes uncertainty account modeling
base position probability mapping


fistulp fedrizzi mosenlechner beetz

scene

scene

scene

scene

figure example scenario
scene arplace distribution low probabilities overall maximum
probability grasp success note although initial uncertainty
cups position precludes robot determining specific base position
reliably grasp cup robot know general area navigate
navigation robot able determine position cup accurately
depicted scene sensor data comes robot refines arplace
therefore arplace scene much higher probabilities overall maximum

scene robot detected second cup grasping cups
single position much efficient approaching two locations robot
merges two arplaces cup one arplace representing probability
successfully grasping cups single position scene measurements
helped reduce pose estimation uncertainties cups maximum grasp success
probability arplace reaches sufficient robot commit
goal position attempt grasp cups
scenario illustrates real world tasks often planned start
finish initial knowledge often complete accurate enough determine
optimal goal position rather committing particular base position early
robots initial knowledge task context robot instantiates
arplace particular task context bases decisions arplace
place concept instantiation represented explicitly course action
enables robot reconsider reevaluate decisions line whenever
information task context comes instance decision grasp
cups one position scene would possible robot would
committed plan given initial knowledge one cup detected even
environment completely observable dynamic properties make pre planned
optimal position suboptimal unaccessible least commitment implementation
section explains arplaces merged compute arplace joint tasks



filearning reasoning action related places robust mobile manipulation

decisions delayed must taken flexible leads robust
efficient mobile manipulation demonstrated empirical evaluation
contributions system overview outline
system overview learning computing reasoning arplaces depicted
figure serves outline rest article

figure system overview numbers refer sections article green ovals represent
procedures blue rectangles
procedures briefly described contributions section
detail given throughout article yellow rectangles cluster conceptually
related procedures delineate different sections article

main contributions article
representing arplace section propose arplace flexible representation
place least commitment decision making mobile manipulation
model learning section generate arplace robot must able
predict outcome action given action parameterization propose
generic line learning acquiring compact prediction model two
steps learn predict whether action succeed given task parameterization supervised classification implement support
vector machines sonnenburg raetsch schaefer schoelkopf generalize
several task parameterizations generalizing learned svm classifiers


fistulp fedrizzi mosenlechner beetz

implement point distribution cootes taylor cooper graham resulting success prediction model enables robot predict
whether manipulation action given object position succeed given
base position
generating arplace section demonstrate arplaces generated online take object position uncertainty account monte carlo simulation furthermore arplace conditioned robot position uncertainty
thus taken account
reasoning arplace section arplace integrated symbolic transformational planner automate decision making arplaces
particular consider scenario shows arplaces merged joint
manipulation tasks
empirical evaluation section demonstrate reasoning arplaces
leads robust efficient behavior simulated mobile manipulation platform
turning contributions first compare related work
section

related work
state art mobile manipulation platforms use sampling motion planners
solve manipulation lavalle advantages symbolic
general arplaces particular abstraction representing abstract symbolic actions reduces complexity
although computational power ever increasing still intractable solve
extended tasks preparing meal beetz et al state space search alone
least commitment friedman weld setting open conditions
abstract actions later refining choice particular concrete action lead exponential savings note principle used reduce number collision
checks building probabilistic roadmaps bohlin kavraki modular replanning symbolic causal links actions explicitly represented
robot navigates table order perform grasping motion represented
plan generated sampling motion planner therefore execution motion
planners cannot reconsider appropriate base position decision right
must rather inefficiently replan entire trajectory belief state changes reflection explicit symbolic representation causality allows robot reason
reflect plans monitor execution instance report reasons
experience learning applied variety robots environments
model learned however obviously specific environment experience
generated instance one table height considered data collection learned
prediction model specific table height different table heights used experience
collection table height included task relevant parameter model able
generalize table heights well refer section full discussion



filearning reasoning action related places robust mobile manipulation

plan failure could cup could determine position cup
sufficient accuracy robustly perform grasp obstacle blocking
path obvious achieve introspection motion methods
contrast sampling motion arplace generate trajectories motion rather representation supports decisions
decision robot move order manipulate goal position
given motion planner order trajectory gets robot
goal position system instance navigation trajectory determined
wavefront planner arplace reinforcement learning policy sutton
barto policy maps states actions whereas arplace maps uncertain
states expected probabilities successfully executing certain action arplaces
thus actions executable actions right distinction
become apparent section arplaces used transformational
planner detect repair performance flaws symbolic plans
perspective similar work asymov cambon gravot
alami rl tops ryan use symbolic planners generate
sequences motion plans reinforcement learning policies respectively specific contributions article enable robot learn grounded probabilistic
actions support symbolic decision making well flexible transformational
planners reason focus thus grounding improving
representations enable symbolic rather underlying actions
generate trajectories actual motion
okada kojima sagawa ichino sato inaba develop representations
place enable symbolic denote good base placement grasping
spot different spots hand coded different tasks manipulating faucet
cupboard trashcan symbolic representations place used
lisp motion planner perform tool manipulation behavior arplace extends
concept spot learning autonomously grounding observed behavior
providing probabilistic representation place berenson choset kuffner
address issue finding optimal start goal configurations manipulating objects
pick place operations explicitly take placement mobile base
account interested optimal start goal configurations instead
probabilistic representation enable least commitment
diankov ratliff ferguson srinivasa kuffner use model reachable
workspace robot arm decide robot may stand grasp object
focus search however uncertainties robots base position objects position
considered thus cannot compensated recent work berenson
srinivasa kuffner addresses issues still relies accurate model
environment high computational cost hand arplace
compact representation computed negligible computational load allowing
continuous updating
recently similar methods ones presented article used determine successful grasps rather base positions grasping instance detry et al
determine probability density function represents graspability specific
objects function learned samples successful robot grasps biased


fistulp fedrizzi mosenlechner beetz

observed human grasps however take examples failed grasps
account shall see section distance failed successful
grasp quite small determined taking failed grasps account
classification boundaries section similar workspace goal regions except
boundaries refer base positions whereas workspace goal regions refer grasp
positions berenson srinivasa ferguson romea kuffner generalize
boundaries point distribution model use generate probabilistic
concept successful grasp positions
kuipers beeson modayil provost present bootstrapping
enables robots develop high level ontologies low level sensor data including distinctive states places objects actions high level states used choose
trajectory following control laws move one distinctive state another exactly way around given manipulation navigation skills
robot far high dimensional learn trajectory following control laws
learn places skills e g grasping executed successfully focus
action affordance recognition localization us place means cluster
locations execute grasping skill successfully whereas kuipers
et al refers location perceptually distinct others therefore
well recognized furthermore work yet considered physical manipulation
objects relates place
learning success considered probabilistic pre condition learning
field far focussed learning symbolic predicates symbolic
examples clement durfee barrett chang amir amir chang
approaches applied robots representations
learned able encapsulate complex conditions arise robot dynamics
action parameterization robotics focus pre condition learning therefore
rather grounding pre conditions robot experience realistic domain considered zettlemoyer pasula kaelbling simulated gripper stacks objects
blocks world focus predicting possible outcomes actions completely observable unambiguous description current state emphasis rather
taking state estimation uncertainty account dexter learns sequences manipulation
skills searching grasping object hart ou sweeney grupen
declarative knowledge length arm learned experience learning
success done context robotic soccer instance learning
success rate passing buck riedmiller approaching ball stulp beetz
system extends approaches explicitly representing regions
successful instances observed computing generalized success model
regions
interesting line shares paradigms arplaces
learning relation objects actions building prediction objectaction complexes oacs geib mourao petrick pugeault steedman kruger
worgotter pastor hoffmann asfour schaal present oacs
used integrate high level artificial intelligence technology continuous low level robot control work stresses cognitive agent objects
actions inseparably intertwined therefore paired single interface


filearning reasoning action related places robust mobile manipulation

physically interacting world applying machine learning techniques oacs allow
acquisition high level action representations low level control representations
oacs meant generalize principle affordances gibson

learning generalized success model arplace
section describe implementation line phase depicted figure
generalized success model gsm learned goal acquire function g
p success f rob f obj



g f rob f obj



predicts chance successful manipulation action given relative positions
robot object stored feature vectors f rob f obj respectively
note line learning phase known positions uncertainty
positions taken account line phase described section
performing mobile manipulation complex task involves many hardware
software modules overview modules platform described appendix
overview demonstrates large number modules required implement mobile
manipulation platform many modules years
decades development within companies groups open source
projects global behavior robot e g whether grasp cup certain
base position depends modules interactions
cases analytic certain modules available capability map
arms workspace section however general way composing
acquire global model systems behavior task execution therefore
rather learn model observed experience
however component computes arplaces requires exactly global model
predict circumstances manipulation action fail succeed attempting theoretical analysis model foreseeable events uncertainties world
best tedious error prone worst infeasible therefore use experience
learning acquire global behavior model grounded
observation actual robot behavior
line learning phase consists three steps repeatedly execute action
sequence observe n different target object positions learn n support
vector machines classifiers n specific cup positions generalize n classifiers
point distribution model
data acquisition
robot acquires experience executing following action sequence navigate
specified base position table reach cup close gripper lift
cup stulp fedrizzi beetz action sequence task context
determined following parameters pose robot navigates
note navigation planner parameterized robot directly facing table
limitation planner rather constraint added make behavior



fistulp fedrizzi mosenlechner beetz

pose target object table execution robot logs whether object
successfully grasped efficiently acquire sufficient data perform training
experiments gazebo simulator gerkey vaughan howard robot
modeled accurately thus simulator provides training data valid
real robot examples failed successful grasp depicted figure

figure two experiment runs different samples robot position navigatereach grasp sequence upper row succeeds fails lower sequence

vector field controller use perform reaching movement proven
robust wide range robots workspace beetz et al
low computational load easy debug quickly adapted novel objects
disadvantage occasionally gets stuck local minima motion
must restarted probabilistic motion planner arm suffer local
minima plan generation fails border workspace even though vector
field controller able grasp every planner controller advantages
disadvantages sources failure real world especially
complex embodied agents article aims modelling failures experiencebased learning basing decisions
feature space data collected depicted figure coordinate
system relative tables edge position cup table
enable us apply model learned data different tables
different locations kitchen contrast previous work stulp fedrizzi
beetz b refer f obj xobj obj observable taskrelevant parameters robot observes cannot influence directly xobj
distance object table edge obj angle object
orientation normal goes table edge object depicted
physical robot predictable makes robot safe required operate
robot human environments cf figure principle methods could take
orientation account



filearning reasoning action related places robust mobile manipulation

figure f rob xrob rob controllable action parameters robot
use navigation system change

figure relative feature space used rest
robot gathers data target object poses depicted figure target
object poses listed matrix fobj given target object position determine
rectangular area generous estimation upper bound
robot grasp object rectangle object poses within
rectangle uniform grid almost positions stored matrix frob
defined figure depicts data gathering positions
markers represent position robot base table three types
markers represent following classes
theoretically unreachable light round markers
cup cannot grasped many positions bounding rectangle simply
arm long enough formally base positions kinematics
arm inverse kinematic solution exists end effector
position required grasp target object exploit analytic arm
kinematics filter base positions bounding rectangle cup theoretically unreachable analytic model use capability map compiled
representation robots kinematic workspace zacharias borst hirzinger
capability maps usually used answer question given position base
positions reach end effector article use capability map
answer inverse question given position target object therefore
desired position end effector base positions reach end effector
position figure answer question visualized specific target object
position depicted area theoretical kinematic upper bound base positions
robot reach target
example base position bounding box use capability map
determine target object theoretically reachable corresponding base
position labeled failure without executing navigate reach grasp action sequence
saves time gathering data another obvious theoretical bound implemented
robots distance table least big robots radius
otherwise robot would bump table labeled base positions
failures without executing order save time


fistulp fedrizzi mosenlechner beetz

figure data acquisition target object poses listed matrix fobj
markers correspond center robot base green squares red
circles represent successful failed grasps respectively bright circles
executed successful grasp deemed theoretically impossible capability
maps dark green hulls classification boundaries section

practically unreachable red filled round markers
capability map considers theoretical reachability position given kinematics robots arm take self collisions account constraints
imposed vector field controller reaching specific hardware gripper
way gripper interacts target object red markers figure represent
base positions capability map deems possible lead failure performing reaching motion causes failure bumping table due
imprecision navigation routine bumping cup grasping closing
gripper without cup handle cup slipping gripper
vector field controller getting caught local minimum
one aim article demonstrate practical arise
interaction many hard software modules properly addressed experiencebased learning use analytic available use
experience learning necessary interacting world robot observes


filearning reasoning action related places robust mobile manipulation

figure inverse capability map right arm specific object position
global behavior learns difference possible theory
works practice
reachable green square markers
base positions robot able successfully grasp cup
task execution deemed successful cup cm table
action sequence completed case robot holding
prefer empirical measure instance force closure measure
latter requires accurate object furthermore
argued theoretical grounds zheng qian well demonstrated
empirically morales chinellato fagg del pobil force closure grasps may
lead successful grasps practice course force closure may well
used measure successful grasping methods described article
depend upon design choice
data acquisition yields set discrete robot object positions associated
resulting outcome manipulation action success failure
obj n
p success f rob
j bi j bi j
f



article number sampled object positions n e number
graphs figure number sampled robot positions e
number data points per graph figure
remainder section first generalize discrete robot positions
training support vector machines section generalize n cup
positions point distribution section
generalization robot positions
step generalize discrete robot positions acquire compact boolean
classifier efficiently predicts whether manipulation succeed


fistulp fedrizzi mosenlechner beetz

p success f rob f obj n
j



gj n f rob



generalization implemented follows separate classifier gi n learned
n object poses e one classifier data sets depicted
figure acquire prediction compute classification boundary around
successful samples support vector machines svm implementation
sonnenburg et al gaussian kernel cost parameter c
successful grasps rarer weight twice much failed grasp attempts
figure depicts resulting classification boundaries different configurations taskrelevant parameters dark green boundaries manipulation predicted succeed
robots base position lies within boundary given target object pose fobj
accuracy learned classifiers listed section
generalization object positions
next step generalize discrete object positions
p success f rob f obj



g f rob f obj



determining low dimensional set parameters allows us interpolate
individual classification boundaries support vector machines generate done point distribution model pdm established method
modelling variations medical images faces cootes et al wimmer stulp
pietzsch radig one compact model incorporates individual boundaries able interpolate make predictions target object poses
observed training
input pdm requires n points distributed contour
landmarks distributed described appendix b given landmarks classification boundaries compute pdm although pdms well known
use computer vision cootes et al wimmer et al use notation
roduit martinoli jacot focus robotic applications first
boundaries points merged one x matrix h columns
concatenation xrob rob coordinates landmarks along classification boundary column thus represents one boundary next step compute
p matrix eigenvectors covariance matrix h p represents
principal modes variation given h p decompose boundary h
set mean boundary linear combination columns p follows
hk h p bk bk called deformation mode k th boundary
point distribution model get intuition pdm represents
first three deformation modes depicted figure values first second
third deformation modes columns b varied maximal
minimal value whilst deformation modes set
eigenvalues covariance matrix h indicate first components already contain deformation energy reasons compactness achieve


filearning reasoning action related places robust mobile manipulation

figure first deformation modes point distribution model b

better generalization use first deformation modes without losing much accuracy

fjobj gj f rob inboundary f rob hj n
j
fjobj gj f rob inboundary f rob h p bj n
j
g f

rob

f

obj

inboundary f

rob

h p b f

obj



n support vector machines



point distribution model



regression

fjobj

bj



pdm several advantages instead store n classification
boundaries hj points capture variation classification hulls due
different target object positions store n deformation modes degrees
freedom greatly reduces dimensionality degrees freedom b
used interpolate principled way computed classification boundaries
hj generate boundaries object positions observed learning
simple regression two degrees freedom pdm b position f obj
feasible object position related directly shape classification
boundary regression explained next section
relation task relevant parameters
step acquire function b computes appropriate deformation modes b
given object position f obj compute regression matrix
deformation modes specific object positions b object positions
fobj depicted figure found simple second order polynomial regression
model suffices compute regression yields high coefficients determination
r r first second deformation modes respectively
coefficients polynomial model stored two x upper triangular matrices w
w b diag w fobj diag w
generalized success model consists h mean classification
boundaries computed svm p principal modes variation clas

fistulp fedrizzi mosenlechner beetz

sification boundaries w mapping task relevant parameters deformation
modes
let us summarize generalized success model used predict successful
manipulation behavior
generalized success model takes observed relative position object
obj
obj
table fcur
xobj
cur cur input figure
appropriate deformation values given object position computed
obj
obj
obj
bcur b fcur
q w qt q w qt q fcur
xobj
cur cur
section
boundary computed hcur h p bcur section
relative robot base center f rob xrob rob within boundary hcur
model predicts robot able successfully grasp object position
obj
obj
xobj
fcur
cur cur
note steps involve simple multiplications additions small matrices
thus performed efficiently reason efficiency lies fact
directly relate task relevant parameters position cup table
predictions global behavior robot whether manipulation action
succeed line efficiency made possible experience learning
wealth information observation global behavior compiled
compact model line adheres proposed strategy learning taskrelevant features map actions instead attempting reconstruct detailed model
world plan actions kemp edsinger torres jara
summary observed behavior outcomes learned mapping equation repeat equation maps continuous robot target object
positions boolean prediction success action
p success f rob f obj g f rob f obj



mapping used predict current base position robot lead
successful manipulation determine appropriate base positions navigate
equation assumes true values robot target object positions
known robot section discuss uncertainties estimates
positions taken account task execution
generality generalized success model
explaining generalized success model used generate arplaces online task execution section discuss generalization properties
limitations generalized success model must distinguish
indication model described four steps take ms ghz
machine matlab implementation



filearning reasoning action related places robust mobile manipulation

general applicability different robots objects domains
specificity model factors learned essentially holds
data driven model principle learned data independent
robot system generates data learned specific
data generated robot system thus specific robot system
practical purposes assume domain robot hardware remain fixed learning
domain robot specific model grave limitation
generalization object poses
learned model generalizes different object poses relative object pose
table f obj xobj obj part feature space generalized success
model parameterized see step calling gsm section generalized
actually refers capability generalizing success specific object poses
grasp specific arplaces
specific object lot data would required learn arplace
object robot manipulate practice however found
grasps suffice grasp everyday objects kitchen environments real robot
platform maldonado klank beetz particular required
grasps one top one side achieve successful grasps
attempts everyday kitchen objects therefore propose use grasp specific
arplaces rather object specific arplaces learned generalized success
grasps depicted figure

figure two point distribution side top grasp examples
objects manipulated grasps depicted

two deformation modes point distribution model depicted figure
already contain deformation energy even side grasps
success side grasp relatively independent orientation
object robot need reach around object leads
symmetric classification boundaries top grasp seen figure
summary two generalized success must learned two different
grasps two grasps suffice grasp everyday kitchen objects tested


fistulp fedrizzi mosenlechner beetz

real robot maldonado et al rest article focus
side grasp arplaces top grasps presented fedrizzi

computing action related places
previous section demonstrated generalized success model learned
observed experience variety task parameterizations resulting function
maps known robot object positions prediction whether action execution
succeed feel
section describe arplaces manipulation computed line
specific task contexts depicted figure module takes generalized
success model estimated robot pose target object pose input returns
arplace depicted figure
taking object position uncertainty account
equation prediction whether manipulation action succeeds fails
known robot target object positions however task execution robot
estimates positions varying levels uncertainty uncertainties
must taken account predicting outcome manipulation action
predicted succeed might well fail target object position
robot expects given generalized success model equation goal
section therefore compute mapping

generalized success model

p succ f

rob

f

obj

arplace object uncertainty

monte carlo p succ fkrob hf obj obj k
k


takes estimates target object position returns continuous probability
value rather discrete probability value equation belief state
uncertainties object positions modelled gaussian distribution mean f obj
covariance matrix obj
robot platform described appendix f obj obj obtained
vision object localization module klank zia beetz typical values along



diagonal x covariance matrix x x

z z




yaw yaw pitch pitch roll roll uncertainties position specified
meters angular uncertainties specified radians estimation object
position quite accurate vision system detect handle
important estimating orientation yaw cup due constraints enforced
assumption cup standing upright table uncertainty z pitch
roll set remaining x covariance matrix mapped relative feature
space yields obj
end section demonstrated classification boundary hnew reobj
obj
constructed given known task relevant parameters fnew
xobj

obj
uncertainty fnew suffice compute one classification boundary given


filearning reasoning action related places robust mobile manipulation

probable position cup arplace grasp might
lead failure cup position expected therefore use
monte carlo simulation generate whole set classification boundaries done
taking samples gaussian distribution object position given mean
position associated covariance matrix yields matrix task relevant parameters
obj obj corresponding classification boundaries computed
fobj


x
samples hs h p b fsobj equation figure
boundaries depicted
task relevant
parameters
h
generated

obj obj
obj obj

x





f obj xobj obj obj x x




obj xobj

obj obj

sampled classification boundaries b discretized relative sum c final distribution condi hs
boundaries
tioning robot pose uncertainty

figure monte carlo simulation classification boundaries compute arplace
described appendix c definition fgsm defined relative
cups position along tables edge uncertainty described
leads uncertainty origin f

gsm therefore sampling
task relevant parameters sample values translate fgsm accordingly uncertainty influence shape classification boundary pdm
simply translates classification boundary along tables edge sampling
actually already done figure yobj yobj fact


obj obj
obj obj
obj obj


x
x
x

x






obj










obj xobj
obj obj
obj obj


obj xobj



obj obj





obj obj





computed sampled classification boundaries generate discrete
grid cm cells represent discrete robot positions fkrob k
k equation
cell number classification boundaries classify cell success
counted thus computing histogram predicted successful grasps dividing
overall number boundaries yields probability grasping cup
succeed position corresponding distribution takes uncertainty
cup position account depicted figure b
interesting note steep decline right side distribution near
table probability successful grasp drops cm
intuitive table located right side robot bumps table
moving sampled initial position leading unsuccessful navigate reach

fistulp fedrizzi mosenlechner beetz

grasp sequence therefore none boundaries contain area close
table variation p right side pdm low variations b
large effect boundary seen figure b summing
sampled boundaries leads steep decline success probability
note arplace normalized probability distribution sums
rather probability mapping element discrete grid cell probability
distribution thus sum probabilities grid cell e p succ
p succ
taking robot position uncertainty account
robot uncertainty position target object
position uncertainty must taken account arplace instance
although position near left steep incline figure b predicted
successful might still fail robot actually right expected
therefore condition probabilities figure b robot actually
rob
rob acquire
certain grid cell xrob rob given position estimate x
final arplace mapping
arplace prob mapping figure c
p success hf rob rob hf obj obj
p success f rob hf obj obj

p f rob hf rob rob


prob mapping equation figure b

prob distribution robot uncertainty gaussian

equation hf rob rob interpreted two ways first represent
actual estimate robots position current time case p success
predicts probability success manipulation current position however
interpreted possible goal positions robot could navigate order
rob rob throughout
perform navigation e hfgoal
goal
rob
make assumption future position uncertainty rob
goal goal position fgoal
rob believe fair assumption
currently e rob
goal
realistic assuming rob
goal robot approaches navigation
rob
goal continually updating thus p success reached
rob
goal rob
goal equivalent
refining arplace line
summary arplaces computed line learned generalized success model
given task relevant parameters current task context includes uncertainties
since navigation planner parameterized robot faces table cf section
ignored orientation robot computing gsm note therefore ignore
uncertainty parameter arplaces take account expect
improved robustness evaluated section could improved taking uncertainty
parameter account



filearning reasoning action related places robust mobile manipulation

poses robot target object yields probability mapping maps
robot base positions probability grasping target object succeed
learning generalized success model costly step involves extensive data
collection thus performed line learned model compact
used efficiently compute arplaces line therefore arplaces updated
execution task progresses incorporate knowledge taskrelevant parameters changes environment figure depicts arplace
probability mapping affected knowledge task relevant parameters comes
first row demonstrates accurate knowledge target objects
position lower uncertainty e g lower xobj xobj leads focussed arplace
higher overall probabilities higher mode second third row depict
similar effects estimates target objects position orientation change
figure serves two purposes gives reader visual intuition effects several taskrelevant parameters shape arplace demonstrates robots
internal arplace representation might change accurate information
target object pose comes
decreasing uncertainty cup position perpendicular table edge
xobj



xobj



obj









decreasing distance cup table edge






changing orientation cup table






figure images demonstrate varying certain task relevant parameters affects
shape arplace distribution
decision whether certain probability success suffices execute manipulation
action critically depends domain task failing grasp full glass wine
indication takes average ms ghz machine matlab implementation
perform steps section



fistulp fedrizzi mosenlechner beetz

grave consequences failing grasp tennis ball general arplace provides
representation enables high level planners make rational decisions
scenarios specify decisions made minimal
success probability order perform task section present use
arplace concrete scenario
generality arplaces
section discussed generality learning generalized success model
specificity model respect robot skills model
learned line section demonstrate generality flexibility
arplace representation generated line generalized success model
present ways arplaces extended lay groundwork section explains arplaces used context high level
transformational planner
merging arplaces multiple actions
arplaces multiple actions composed intersecting assume
computed arplaces two different actions success probabilities
arplaces independent compute arplace executing actions
parallel multiplying probabilities arplaces action
first two graphs figure instance arplaces grasping cup
left right gripper depicted piecewise multiplication probabilities
acquire merged arplace depicted right graph robot use
merged arplace determine probability use left right gripper
grasp cups one base position fedrizzi moesenlechner stulp beetz
another similar application merging arplaces two cup positions grasped
gripper arplace represents probability able grasp
cup one position placing position without moving base
compositions would impossible robot commits specific positions advance

figure left distribution grasp cup left gripper center distribution grasp cup
right gripper right distribution element wise product two
distributions grasp cups left right gripper one base position



filearning reasoning action related places robust mobile manipulation

navigating one position grasp two cups much efficient navigating two positions implemented decision transformation rule
reactive language mcdermott described detail section
different supporting planes
defining feature space generalized success model relative tables edge
allows robot compute arplaces general table shapes one presented far done determining arplace straight edges
table computing union individual arplaces example depicted
figure

figure arplace complex table shape

different uncertainty distributions
article uncertainty position robot target objects modelled
multi variate gaussian distribution expects
distribution state estimation systems represent uncertainty
section described specific target object positions sampled
distribution monte carlo simulation general method applies distribution
sampling done distributions need gaussian
might well multi modal even non parametric particle filter instance
particle could directly used sample compute classification boundaries
figure
applicability domains
demonstrate generality arplaces briefly showing arplace able
represent task relevant place different task domain approaching ball
robotic soccer task frequently fails robot bumps ball
achieving desired position ball figure examples successful
failed f attempt depicted robot ball
top goal acquire arplace maps robots position field
predicted probability successfully ball


fistulp fedrizzi mosenlechner beetz

procedure learning arplace equivalent mobile manipulation
domain gather data log successful failed episodes figure learn classification boundaries generalized success model data generate arplaces
specific task contexts figure b example demonstrates arplace
limited mobile manipulation generalizes actions domains

successful failed
attempts approaching
ball
data taken
stulp beetz


b robots arplace approaching ball green
plateau high probability robot succeed approaching ball orientation indicated thick
black arrow

figure arplace robot soccer domain
note two bumps left right ball intuitively clear
robot succeed approaching ball locations surrounding
ones assume depends particular morphology robot
controller used ball described stulp beetz one
main advantages learning assumptions
intuitions play role acquiring model whatever reason may
successful approaches obvious observed data figure hence
arplace represents
general cost functions
article probability success considered utility relevant determining
appropriate base position principle arplace able represent kind
utility cost example given figure task robot
collect one two cups table probabilistic arplaces two cups
depicted left graph given parameters chance success
cups reason prefer fetching one however cup b much
closer robot therefore would efficient collect cup b preference
expressed arplace first compute distance robot


filearning reasoning action related places robust mobile manipulation

grid cells probabilistic arplace depicted center graph finally
merge probability p distance one cost u u p
expresses takes average seconds reposition robot another grasp
attempt case failure average navigation speed cost
thus expresses expected time overall task take
depicted figure mode arplace cup closer
robot higher reflecting fact prefer robot fetch cups closer
depth discussion utility arplaces affect behavior
robot refer fedrizzi
probability p

distance

cost u p

figure example general cost arplace right including
probability success left distance robot center including
distance part cost mode cost arplace closer
cup higher distant cup

transformational arplace
far described arplaces generated line learned generalized success model ability predict probability outcome action
makes arplaces powerful tool combined high level system
section demonstrate arplace used context symbolic transformational planner reasoning arplace enables planner generate robust
efficient plans demonstrates flexibility least commitment arplace
representation
particular consider task retrieving two cups table one action
sequence solves task plan navigate location near cup pick cup
left gripper navigate location near cup pick cup right gripper
depicted figure however cups sufficiently close
figure right much efficient replace plan plan b navigate
location near cup cup pick cup left gripper pick cup
right gripper saves entire navigation action
cost chosen simplicity illustrate generality arplace representation
realistic complex cost functions used



fistulp fedrizzi mosenlechner beetz

figure improving performance transformational merged
arplace plan navigate two separate poses grasping object
arplaces objects plan b navigate one pose grasping
objects merged arplace

deciding whether use two base locations plan one plan b difficult solve
control program without sacrificing generality keep solution general
want write two separate control programs options choose
else statement would mean provide control programs
choice points every option robot space choices prohibitively large
everyday tasks allow instead use transformational planner
takes general program plan appropriate applies generic transformation rules
change program locally yield plan b transformational planner consists
following components
plan projection projection mechanism predicting outcome plan arplace
compact representation projection mechanism able predict
probability success action given parameters
flaw detection mechanism detecting behavior flaws within predicted plan outcome flaws errors hinder robot completing task
may performance flaws suboptimal efficiency two navigation actions cups close plan flawed
much efficient navigate one position close cups
plan transformation mechanism fix detected flaws applying transformation
rules plan code consider local transformation rule
applied plan yield efficient plan b
next sections describe mechanisms detail
explain implemented exploit arplace representation note
article use transformational planner exemplify arplace used
context larger system information transformational
framework examples behavior flaws transformation rules
refer work mosenlechner beetz


filearning reasoning action related places robust mobile manipulation

plan design
detect flaws apply transformation rules repair transformational planner
must able reason intention code parts infer goal achieved
deduce reason possible failure control programs
written rpl mcdermott provides functionality annotating code
parts indicate purpose make transparent transformational planner
purpose article important rpl instructions semantic annotation
context pick place tasks achieve perceive location formal
definition semantics instructions given mosenlechner beetz
describe informally
achieve expression achieve statement executes successfully logical expression passed argument asserted true instance successful
execution achieve entity picked cup object referenced variable cup
must robots gripper
perceive object manipulating objects robot must objects
instantiate belief state successful execution statement perceive cup
asserts object referenced cup found reference internal
representation returned
location location expression manipulation implies execution actions
specific locations therefore must assured pick actions executed
robot specific location location location asserts code within
context executed specified location fails please note transformations affect location actions performed directly modify location
parameter location expressions therefore location important
declarative plan expression optimizing arplaces specify locations location
use called designators symbolic descriptions entities locations objects
actions instance designator location stand picking cup
specified follows location pick object type cup symbolic
description resolved reasoning mechanisms arplaces prolog
actual pose generated needed general infinite number poses provide
valid solution pose arplace gives us way evaluate utility select
best pose
declarative expressions explained combined form tree every
achieve statement contain several achieve perceive location statements
sub plans example plan tree sketched figure tree goal achieve
entity location object location first perceives object picks achieving
entity picked executes pick action within location block puts
object achieving entity put contains location block
shall see section behavior flaws repaired applying transformation rules
replace sub trees within plan tree code

please note lisp syntax variables prefixed example cup predicates
functions pure symbols



fistulp fedrizzi mosenlechner beetz

entity location l

perceive

achieve entity put l

achieve entity picked





location obj l


location obj l











figure example plan tree created executing pick plan
plan projection
central component transformational planner plan projection simulates
behavior robot arises executing plan plan projection generates temporally ordered set events plan code presented
previous section use gazebo mechanism projection
used generating training data learning arplaces particular use information collisions perception events locations objects robot
executing plan simulation generate extensive execution trace
used reasoning engine infers behavior flaws fixed transformation rules mosenlechner beetz execution trace contains low level data
representing position objects robot well collisions objects
visibility objects robot information reconstruct state program
throughout execution
arplaces efficient way performing plan projection predict
probability successful outcome without requiring line generation execution traces
reason execution trace sampling required line task
already executed frequently line data acquisition cf section
task executions compiled arplaces learning
gsm yields compact representation experience acquired therefore
experience must generated anew plan generation
behavior flaws reasoning plan execution
plan projection simulates robot behavior executing plan second component transformational planner reasoning engine finds pre defined flaws
projected robot behavior examples flaws collisions e g caused underparameterized goal locations blocked goals e g chair standing location
robot wants navigate examples behavior flaws lead critical
errors plan execution e plan fails consider behavior inefficient
flawed e plan succeeds unnecessarily inefficient task consider
example performance flaw performing two navigation actions one required highly inefficient behavior flaws specified


filearning reasoning action related places robust mobile manipulation

prolog reasoning engine implemented common lisp mosenlechner beetz

execution trace generated plan projection transparently integrated
reasoning engine e execution trace queried prolog predicates information recorded execution trace valuable information order behavior flaws
additional information used behavior flaws set facts model semantics declarative expressions achieve location concepts world
instance objects placed supporting planes table cup board
behavior flaws prolog specifications matched logical representation
execution trace solutions found corresponding flaw present plan
fixed
instance code match two locations perform actions merged
one arplace looks follows
listing flaw definition match two different pick tasks







k g l k c h e v e e n p c k e b j e c
k g l k c h e v e e n p c k e b j e c h n
k k p z e c n l c n b j e c
b j e c p z e l c n

code first matches two different pick tasks predicate optimizedaction location holds optimized location arplace two objects
picked bind variable predicate implemented calculate
arplace
another example flaw definition failed navigation e robot
standing location supposed drive

listing flaw definition locations reached robot although
told reach







k g l k c h e v e l c robot g l l c
k u k done
h l l c robot r b l c
g l l c r b l c

code first matches code navigating robot location goalloc infers actual location robot navigation task terminated
binds variable robot loc finally asserts two locations
equal prolog expression proven execution trace found
flaw indicating unachieved goal location
plan transformations transformation rules
behavior flaw detected last step planner iteration application
transformation rule fix behavior flaw transformation rules applied parts
plan tree cause substantial changes structure corresponding robot
behavior


fistulp fedrizzi mosenlechner beetz

transformation rule consists three parts input schema matched
plan part transformed binds required code parts variables order
reassemble output part transformation part performs transformations
matched parts output plan describes code respective
plan part reassembled
input schema
transformation
output plan
besides integration arplace robot control program location
statements arplace integrated reasoning engine transformational
planner two locations grasping considered performance flaw one location
would suffice informally investigate execution trace occurrence two different pick actions one executed location l one executed
location l request location l perform actions corresponding success probability l computed merging arplace figure
probability success merged arplace sufficiently high apply plan
transformation replace locations l l location l
transformation rule optimizing arplaces shown listing please note
variables bound matching flaw definition still bound
used transformation rule
listing transformation rule fixing flaw












e f r r u l e f x unoptimized l c n
n p u schema
k g l l c n k
atl c n l c n code
subt k l c n k k
k g l l c n k
atl c n l c n code
subt k l c n k k
outputp l n
atl c n p z e l c n code
atl c n p z e l c n code

input schema code consists two similar patterns matching
location sub plan pick goals matched flaw planner replaces
matching code parts corresponding entries output plan transformation
rule location passed location replaced optimized location
calculated flaw definition
behavior flaw defined match two different pick executions
arplace query performed probability successfully grasping
objects one location probability sufficiently high prolog query
succeeds e flaw detected sufficiently good location grasping
objects found note sufficiently high depends much scenario
context robotic soccer beneficial choose fast risky moves whereas
safe human robot interaction certainty successful execution important
mere speed article focusses principled ways integrating thresholds
transformational planner relating grounded robots behavior


filearning reasoning action related places robust mobile manipulation

thresholds determined depends application
domain users

empirical evaluation
section determine many samples needed learn accurate svm
classifier compare robustness default strategy determining base positions
strategy uses arplaces compare efficiency plans without
fixing performance flaws transformational planner present preliminary
physical robot platform
classification accuracy training set size
figure depicts accuracy svm classifier predicting base positions
lead successful grasps one particular cup position evaluated separate test set
samples without capability map filter kinematically impossible
base positions graph levels examples filtering theoretically
impossible base positions capability map classifier achieves accuracy
within examples stulp et al

figure accuracy dependent training set size one cup position
effect dramatic entire dataset containing data different cup
positions applying capability map number trials need executed
reduces markers figure red green filled markers figure
capability map reduces unsuccessful attempts influence final
classification accuracy
graph applies another dataset described stulp fedrizzi zacharias tenorth bandouch
beetz similar one used rest article



fistulp fedrizzi mosenlechner beetz

simulated robot
compare robustness navigation probabilistic arplaces
strategy deterministic navigation goals evaluation position
robot navigates position arplace returns highest probability
grasping target object succeed compare strategy previous
hand coded implementation fixed navigates location
relative offset target object whilst time taking care bump
table
experiments vary position cup xobj obj well
uncertainties robot position position cup varying
diagonal elements covariance matrices associated position robot
xrob xrob yrob yrob cup xobj xobj obj obj combination
variables robot performs navigate reach grasp lift sequence
recorded data acquisition learning generalized success model
simulate uncertainty sample specific perceived robot cup position
distribution defined means covariance matrices action
determined true simulated state world robot bases decisions
perceived samples
evaluation summarized three bar plots figure
depict success ratios arplace fixed strategies ratio
number successful executions divided number examples pvalue pair bars computed test tests whether
number successful failed attempts sampled distribution
arplace fixed
first graph depicts success ratios increasing uncertainty object
position e xobj xobj fixed robot position uncertainty xrob cases arplace strategy significantly outperforms
fixed strategy furthermore performance arplace much robust towards
increasing object position uncertainty arplace takes explicitly account
trend seen increasing uncertainty robot position e
xrob xrob yrob yrob fixed object position uncertainty
xobj however xrob xrob difference arplace
fixed longer significant
finally last graph depicts success ratios increasing robot object
uncertainty arplace significantly outperforms fixed
robot quite uncertain objects position grasp success
probabilities drop strategies
summarizing arplace robust towards state estimation uncertainties
previous default strategy effect pronounced object positions robot
positions
transformational merged arplaces
evaluated merging arplaces joint grasping application transformation rules rpl planner discussed section two cups placed


filearning reasoning action related places robust mobile manipulation

figure success ratios arplace fixed approaches changing object
robot pose uncertainties

table distance varied cm increments
cm evaluation shows grasping two cups separate base positions requires
average seconds independent relative distance cups
applying transformation rules default plan optimized seconds significant test p substantial performance gain fedrizzi et al
cm two cups cannot grasped one position plan transformation
applied
integration arplace physical robot system
day open house b mobile manipulation platform continually performed
application scenario locates grasps lifts cup table moves
kitchen oven figure shows two images taken demonstration robot
performed scenario times approximately hours convinced us
robot hardware software robust enough deployed amongst general public
open day ran experiment time determined goal
location navigating table mode arplace computed
executing navigation action since main focus experiment
error recovery system described beetz et al improved robot performance
observed cannot quantitatively attributed use arplace error recovery
system however major qualitative improvement certainly attribute
arplace cup grasped much larger area table
without arplaces cup placed position table
enable successful grasping

conclusion
article present system enables robots learn action related places
observed experience reason places generate robust flexible least

fistulp fedrizzi mosenlechner beetz

robot navigates table

robot reaches cup

figure reach grasp trajectory performed public demonstration note
operator holding camera remote control

commitment plans mobile manipulation arplace modeled probability distribution maps locations predicted outcome action
believe system several advantages first learned model
compact deformation parameters directly related task relevant
parameters querying model line therefore efficient advantage
compiling experience compact rather running novel search
situation
hand model acquired experience learning
model grounded observed experience takes account robot hardware
control programs interactions environment applied mobile
manipulation platform independent manipulators navigation base
run
output model set positions associated success probabilities
instead one specific position rather constraining specific position prematurely robot efficiently update arplace sensor data comes enables
least commitment arplace representation enables optimization
secondary criteria execution duration determining best position grasping two objects simultaneously previous work proposed subgoal refinement stulp
beetz optimizing secondary criteria respect subgoals
finally arplaces determine appropriate base positions difficult positions
grasping avoided leads robust behavior face state estimation
uncertainty demonstrated empirical evaluation
currently extending several directions process
including arplace general utility framework probability
success one aspects task needs optimized utilities


filearning reasoning action related places robust mobile manipulation

execution duration power consumption easily included framework
enables robot trade efficiency robustness line task execution
applying complex scenarios different domains
instance learning higher dimensional arplace concepts take aspects
scenario account e different object sizes objects require different
types grasps instead mapping specific objects places map object grasp
properties deformation modes investigating extensions machine
learning enable methods generalize larger space objects
require different grasps two hands manipulate require
sophisticated methods acquiring reasoning place generalization
place concept respect situations task contexts challenge
mid term agenda

acknowledgments
grateful pierre roduit providing us matlab code described roduit
et al thank ingo kresse alexis maldonado federico ruiz assistance
robotic platform robot system overview grateful franziska
zacharias providing capability map zacharias et al robot thank
dominik jain franziska meier fruitful discussions section
work partly funded dfg project actar action awareness autonomous robots cotesys cluster excellence cognition technical systems http www cotesys org part excellence initiative german
foundation dfg freek stulp supported post doctoral fellowship
stu dfg well japanese society promotion
science pe freek stulps contributions work made intelligent
autonomous systems group technische universitat munchen munich germany
computational neuroscience laboratories advanced telecommunications institute international kyoto japan computational learning motor control lab
university southern california los angeles usa

appendix robot platform
action sequence consider article navigate specified base position
near table reach object close gripper lift object
sequentially describe hard software components involved executing
actions overview components data communicated
depicted figure
main hardware component b r mobile robot real world interfaces
rwi frontal degrees sick lms laser range scanner task execution
robot acquires map kitchen environment pmap map building
navigate specified base position robot uses adaptive monte carlo localization
localization amcl wavefront planner global path
three software modules map building localization use
implementations player project gerkey et al


fistulp fedrizzi mosenlechner beetz

figure overview mobile manipulation hardware software modules

robot close table detects tracks target object
proposed klank et al stereo vision hardware consists two
high dynamic range cameras mounted ptu pan tilt unit directed
perception resolution x pixels
manipulation robot equipped two dof powercube lightweight arms
amtec robotics control arms reach target cup use kinematics dynamics library orocos kdl smits vector field within
vector field handle cup attractor cup table
obstacles repellors details position shape attractors
repellors given beetz et al line every control cycle task space velocity end effector computed given attractors repellors velocity
mapped joint space velocities damped least squares inverse kinematics
reaching desired end effector pose dof slide gripper closes
high level decision making monitoring error recovery done module written reactive language mcdermott requests arplaces
module described article reasons performs navigation
manipulation requests
communication modules described done middleware layer
consisting player gerkey et al yarp metta fitzpatrick natale
overview simplification actual system instance role rfid tags
belief state omitted complete detailed description
mobile manipulation platform refer work beetz et al section


filearning reasoning action related places robust mobile manipulation

appendix b landmark distribution point distribution model
point distribution model pdm takes set landmarks n contours input
represented n matrix h returns matrices h mean contours p
deformation modes b deformation mode weighting per contour original
contours reconstructed
application pdms free choose locations landmarks therefore goal procedure described determine landmark locations leads
compact pdm accurately reconstructs original contours e classification
boundaries explicitly optimizing two measures model compactness
amount energy e stored first degrees freedom pdm e
reconstruction accuracy mean distance l landmarks original
contours reconstructed contours measures combined cost function
e l expressing want low error high energy given number degrees
freedom
given number landmarks number degrees freedom explicitly
optimize cost function search varying position
landmark one landmark time greedily selecting position leads
lowest cost optimization first done number degrees freedom
incremented optimization leads energy lies ensures
number degrees freedom distance l landmarks remains
low whilst energy e high therefore resulting pdm model compact yet
accurate
optimization step far computationally intensive step line
learning phase currently investigating use alignment methods computer
vision huang paragios metaxas replace iterative optimization

appendix c robot coordinate systems relative feature
space
robot uses variety coordinate systems goal compute matrix gsm
describes objects position relative feature space generalized success
model gsm used reconstruct classification boundaries successfully
grasping object described section present required coordinate
systems transformed yield generalized success model required
feature space depicted figure
coordinate frames involved transformation depicted figure
world frame fw table frame ft centered middle top table
robot frame fr centered robots base center floor camera frame
fc centered cameras sensor chip frame pan tilt unit
camera mounted fp relative feature space fgsm
acquire position target object relative fgsm compute gsm
follows
gsm

w tgsm


w





fistulp fedrizzi mosenlechner beetz

figure relevant coordinate frames

global position object
w



w

wt


tr

computed follows
r

tp

pt

tc

c





w tr location robots base frame relative world frame
robot uses amcl particle filter estimating position r tp pose pan
tilt unit relative robots base frame transformation matrix r tp constant
specified manually measuring distances angular offsets b
robot base pan tilt unit careful measurement assume maximum
errors mm distance measurements along x z axis
yaw angle measurement p tc pose cameras sensor relative pan tilt
unit p tc changes according current pan tilt angles read
pan tilt units driver high accuracy c position target object relative
camera frame estimated vision object localization module
described klank et al
order compute w tgsm need know global position object w
already computed global position table w tt currently
get world coordinates tables position map possible
estimate position vision object localization module compute
normal object table edge closest robot seen
figure origin fgsm therefore w tgsm table edge object
normal intersect
critical parts computations angular estimations
robots localization vision system first estimation uncertainty rather big
second error localization angle significant impact estimated object
pose follows equation
pose cup frame fgsm vector x z yaw pitch roll however
since assume cup standing upright table set z tables height
roll pitch since origin fgsm perpendicular tables edge
passes definition remaining parameters x yaw
correspond features xobj obj respectively


filearning reasoning action related places robust mobile manipulation

references
amir e chang learning partially observable deterministic action
journal artificial intelligence jair
beetz stulp f esden tempski p fedrizzi klank u kresse maldonado
ruiz f generality legibility mobile manipulation autonomous
robots journal special issue mobile manipulation
beetz stulp f radig b bandouch j blodow n dolha fedrizzi jain
klank u kresse maldonado marton z mosenlechner l ruiz f
rusu r b tenorth assistive kitchen demonstration scenario
cognitive technical systems ieee th international symposium robot
human interactive communication ro man muenchen germany invited
berenson choset h kuffner j optimization
mobile manipulation proceedings ieee international conference
robotics automation icra pp
berenson srinivasa ferguson romea c kuffner j manipulation workspace goal regions proceedings ieee international
conference robotics automation icra pp
berenson srinivasa kuffner j j b addressing pose uncertainty
manipulation task space regions proceedings ieee rsj
international conference intelligent robots systems iros pp
bohlin r kavraki l e path lazy prm ieee international
conference robototics automation pp
buck riedmiller learning situation dependent success rates actions
robocup scenario pacific rim international conference artificial intelligence
p
cambon gravot f alami r robot task planner merges symbolic
geometric reasoning proceedings th european conference artificial
intelligence ecai pp
chang amir e goal achievement partially known partially observable domains international conference automated scheduling
icaps pp
clement b j durfee e h barrett c abstract reasoning
coordination journal artificial intelligence
cootes f taylor c j cooper graham j active shape
training application computer vision image understanding
detry r baseski e popovic touati krueger n kroemer peters j
piater j learning object specific grasp affordance densities proceedings
international conference development learning icdl pp
diankov r ratliff n ferguson srinivasa kuffner j bispace
concurrent multi space exploration proc int conf robotics science
systems


fistulp fedrizzi mosenlechner beetz

fedrizzi action related places mobile manipulation ph thesis technische
universiat munchen
fedrizzi moesenlechner l stulp f beetz transformational mobile manipulation action related places proceedings
international conference advanced robotics icar pp
friedman weld least commitment action selection proceedings
rd international conference systems pp aaai press
geib c mourao k petrick r pugeault steedman kruger n worgotter
f object action complexes interface robot control
proceedings ieee ras international conference humanoid robots
genova
gerkey b vaughan r howard player stage project tools
multi robot distributed sensor systems proceedings th international
conference advanced robotics icar pp
gibson j j theory affordances john wiley sons
hart ou sweeney j grupen r framework learning declarative
structure rss workshop manipulation human environments
huang x paragios n metaxas n shape registration implicit spaces
information theory free form deformations ieee trans pattern analysis
machine intelligence tpami
kemp c edsinger torres jara e challenges robot manipulation
human environments ieee robotics automation magazine
klank u zia z beetz model selection internet database
robotic vision international conference robotics automation icra
pp
kuipers b beeson p modayil j provost j bootstrap learning foundational representations connection science
lavalle chap chapter sampling motion
cambridge university press
maldonado klank u beetz robotic grasping unmodeled objects
time flight range data finger torque information ieee rsj
international conference intelligent robots systems iros pp
taipei taiwan
mcdermott reactive plan language report yaleu dcs rr yale university
metta g fitzpatrick p natale l yarp yet another robot platform international journal advanced robotics systems special issue software development
integration robotics
morales chinellato e fagg h del pobil p experience
assessing grasp reliability international journal humanoid robotics


filearning reasoning action related places robust mobile manipulation

mosenlechner l beetz physics sensor simulation
high fidelity temporal projection realistic robot behavior th international
conference automated scheduling icaps
okada k kojima sagawa ichino sato k inaba vision
behavior verification system humanoid robot daily environment tasks
proceedings th ieee ras international conference humanoid robots
humanoids pp
pastor p hoffmann h asfour schaal learning generalization
motor skills learning demonstration proceedings international
conference robotics automation icra pp
resulaj kiani r wolpert shadlen n changes mind
decision making nature
roduit p martinoli jacot j quantitative method comparing trajectories mobile robots point distribution proceedings ieee rsj
international conference intelligent robots systems iros pp
ryan r k abstract behaviours automatically generate reinforcement learning hierarchies proceedings th international conference
machine learning sydney australia pp
smits r kdl kinematics dynamics library http www orocos org kdl
sonnenburg raetsch g schaefer c schoelkopf b large scale multiple
kernel learning journal machine learning
stulp f beetz refining execution abstract actions learned action
journal artificial intelligence jair
stulp f fedrizzi beetz action related place mobile manipulation proceedings international conference intelligent robots systems
iros pp
stulp f fedrizzi beetz b learning performing place mobile
manipulation proceedings th international conference development
learning icdl pp
stulp f fedrizzi zacharias f tenorth bandouch j beetz c
combining analysis imitation experience learning acquire concept
reachability th ieee ras international conference humanoid robots pp

sutton r barto reinforcement learning introduction mit press
wimmer stulp f pietzsch radig b learning local objective functions
robust face model fitting ieee transactions pattern analysis machine
intelligence pami
zacharias f borst c hirzinger g capturing robot workspace structure representing robot capabilities proceedings ieee rsj international conference
intelligent robots systems iros pp


fistulp fedrizzi mosenlechner beetz

zettlemoyer l pasula h kaelbling l p learning rules noisy
stochastic worlds proceedings twentieth national conference artificial
intelligence aaai pp
zheng qian w h coping grasping uncertainties force closure
analysis international journal robotics




