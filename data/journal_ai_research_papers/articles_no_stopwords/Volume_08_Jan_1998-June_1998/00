Journal Artificial Intelligence Research 8 (1998) 1-21

Submitted 8/97; published 1/98

Monotonicity Persistence Preferential Logics
Joeri Engelfriet

Vrije Universiteit, Faculty Mathematics Computer Science
De Boelelaan 1081a, 1081 HV Amsterdam, Netherlands

joeri@cs.vu.nl

Abstract

important characteristic many logics Artificial Intelligence nonmonotonicity. means adding formula premises invalidate
consequences. may, however, exist formulae always safely added
premises without destroying consequences: say respect monotonicity.
Also, may formulae that, consequence, invalidated
adding formula premises: call conservative. study
two classes formulae preferential logics, show closely linked
formulae whose truth-value preserved along (preferential) ordering. consider preferential logics illustration, prove syntactic characterization results
them. results paper may improve eciency theorem provers
preferential logics.

1. Introduction
past decades, many non-classical logics Artificial Intelligence defined
investigated. need logics arose unsuitability classical logics
describe defeasible reasoning. classical logics monotonic, means
consequence relation (j) satisfies:
8ff; fi; '

: (ff j ) ^ ' j )

(Monotonicity)

means whenever learn new information (') add already
know (ff), old theorems (fi ) still derivable. clearly undesirable
describing defeasible reasoning. Therefore, monotonicity satisfied many logics
Artificial Intelligence.
hand, monotonicity attractive feature practical point
view. learning new information, start again,
retain old conclusions, focus deriving possible new ones. Furthermore,
lot information, allowed focus part it. Conclusions derived
part automatically valid considering information
(this sometimes called local reasoning).
Even though clear want monotonicity hold general, might
worthwhile investigate restricted variants monotonicity. past, variants
defined allow us keep old theorems, either new information follows old premise (this variant called Cautious Monotonicity Kraus,
Lehmann, & Magidor, 1990) negation derived old premise (this
called Rational Monotonicity Kraus et al., 1990).

c 1998 AI Access Foundation Morgan Kaufmann Publishers. rights reserved.

fiEngelfriet

take somewhat different perspective, consider two classes formulae:
class formulae always added premise without invalidating old conclusions
(we say formulae respect monotonicity), class formulae always
retained conclusions, matter new information added premise (we say
formulae conservative). advantages monotonicity sketched would
still hold restrict ' class formulae respect monotonicity,
restrict conservative. Whether classes exist, classes are,
depends course particular nonmonotonic logic considered. focus
important class nonmonotonic logics: class preferential logics (Shoham, 1987,
1988). logics based monotonic logic (such propositional logic, predicate
logic modal logic) augmented preference order models. nonmonotonic
consequences formula formulae true models
minimal preference order among models (an extensive discussion
preferential logics provided van Benthem, 1989). give formal definition.

Definition 1 (Preferential logic) preferential logic consists language L, class

models Mod together satisfaction relation j= models formulae,
partial order Mod. model 2 Mod called minimal model formula
(denoted j= ff) j= models n, n n j= n = m.
Preferential entailment (j= ) formulae defined follows: ff; 2 L : j=
true minimal models ff.

presentation uses partial order, i.e., exive, antisymmetric transitive
relation. Shoham (1987) uses strict partial order, i.e., irre exive transitive relation,
slightly different notion minimal model. presentations translated
other.
turn formulae whose truth preserved going preferred
less preferred models, play important role respect two classes formulae
defined (the class formulae respect monotonicity, class conservative
formulae). first give definition.

Definition 2 (Persistence) Given preferential logic (L; Mod; j=; ), formula 2 L
called downward persistent logic,

8m; n 2 Mod : (m j=

n m) ) n j= ff;

called upward persistent
8m; n 2 Mod : (n j=

n m) ) j= ff:

next section, introduce preferential logics illustrate material
rest paper. Section 3 consider formulae respect monotonicity,
Section 4 conservative formulae treated. practical implications
results paper discussed Section 5. Section 6 gives conclusions suggestions
research. Part material paper appeared (Engelfriet, 1996b).
2

fiMonotonicity Persistence Preferential Logics

2. Preferential Logics

section describe following preferential logics: Ground S5, Minimal Temporal Epistemic Logic Circumscription. Since already defined preferential
entailment general, logic give ingredients, i.e., L; Mod; j=,
. preferential entailment relation fixed Definition 1. first logic
consider Ground S5.

2.1 Ground S5

Ground S5 nonmonotonic modal logic auto-epistemic reasoning, originally proposed
Halpern Moses (1985). aim formalize statements form "I
know '". allows, example, derive agent knows p,
know q. Ground S5 falls general scheme ground nonmonotonic modal logics
(Donini, Nardi, & Rosati, 1997). lot interest devoted logics minimal knowledge
(Levesque, 1990; Schwarz & Truszczynski, 1994; Chen, 1997; Halpern, 1997).
Semantically, states agent knows ', states ' known,
otherwise amount knowledge minimal. use modal propositional language
express knowledge agent, S5 monotonic logic. give
treatment Ground S5 slightly different, equivalent one given Halpern
Moses (1985).

Definition 3 (Epistemic language) Let P (finite countably infinite) set propositional atoms. language LS5 smallest set closed under:


p 2 P p 2 LS5 ;



';

2 LS5

K'; ' ^ ; :' 2 LS5 .

Furthermore, introduce following abbreviations:

'_

:(:' ^ :

); ' !

:' _

; M' :K :'; > p _ :p; ? :>:

every atom occurring formula ' scope K operator, call ' subjective.

example subjective formula :Kp ^ K (q ! p), whereas K (p ^ q) _
subjective. rest paper interested subjective formulae:
describe (just) knowledge ignorance agent.
usual S5 semantics, model triple (W; R; ), W set worlds, R
equivalence relation W function assigns propositional valuation
world W . may however, case one agent, restrict normal S5
models, relation universal (each world accessible every world),
worlds identified propositional valuations (a proof soundness completeness
S5 respect semantics given Meyer & van der Hoek, 1995).

Definition 4 (S5 semantics) Let P (finite countably infinite) set propositional

atoms. propositional valuation function P f0; 1g 0 stands false
1 true. set valuations denoted Mod(P ). normal S5
3

fiEngelfriet

model non-empty subset Mod(P ). truth S5 formula ' model,
evaluated world 2 , denoted (M; m) j=S5 ', defined inductively:
1: (M; m) j=S5 p
, m(p) = 1, p 2 P
2: (M; m) j=S5 ' ^ , (M; m) j=S5 ' (M; m) j=S5
3: (M; m) j=S5 :' , case (M; m) j=S5 '
4: (M; m) j=S5 K' , (M; m0 ) j=S5 ' every m0 2
following elementary results subjective formulae. proofs straightforward.

Proposition 5 (Subjective formulae)

1. Let ' subjective formula. normal S5 model m1 ; m2 2 holds:
(M; m1 ) j=S5 ' , (M; m2 ) j=S5 ':
define j=S5 ' (M; m) j=S5 ' some, or, equivalently, 2 . set
normal S5 models, sometimes called information states, denoted IS.
2. S5 formula ' subjective equivalent formula form
K' ' 2 LS5.
subjective formula describes knowledge agent, want formalize
agent knows. Therefore looking models knowledge
agent minimal, words, ignorance agent maximal.
introduce preference order information states favors models less knowledge. definition ordering based observation valuations
agent considers possible, less knowledge agent has. Indeed, propositional
formula ' have: M1 j= K' M1 M2 M2 j= K'.
Definition 6 (Degree knowledge) define degree-of-knowledge ordering
normal S5 models follows: M1 ; M2 2 : M1 M2 , M1 M2 .
Ground S5 preferential logic based ordering.
Definition 7 (Ground S5) Ground S5 preferential logic subjective formulae LS5 language, class models, satisfaction relation Proposition 5
ordering Definition 6. denote preferential entailment (as defined Definition 1) Ground S5 j=GS5 .
reader check that, instance, Kp j=GS5 :Kq. (unique) minimal
S5 model Kp consists propositional valuations p true, indeed
contains model q false. entailment relation nonmonotonic since Kp ^
Kq 6j=GS5 :Kq. Another example illustrates minimality agent's knowledge: Kp _
Kq j=GS5 :(Kp ^ Kq).
Let us define consequence relation j ' j K' j=GS5 K . turns
consequence relation Halpern Moses (1985), apart fact
defined premises unique minimal model. Premises
unique minimal model called honest. give example, formula Kp honest,
Kp _ Kq not: S5 model consisting valuations p true,
model valuations q true, minimal models.
4

fiMonotonicity Persistence Preferential Logics

2.2 Minimal Temporal Epistemic Logic

Ground S5, able express something `all agent knows'
particular instant. extend logic way able say
something changing knowledge agent time. Originally, extended
logic intended means specifying nonmonotonic reasoning processes reasoning properties (Engelfriet & Treur, 1994, 1996; Engelfriet, 1996a). idea
temporal formula describes nonmonotonic inferences agent perform
course reasoning process (analogously use temporal logic specifying computer processes). inferences cause increases
agent's knowledge. Therefore, minimize agent's knowledge,
time (analogously use minimization dealing frame problem
temporal logics describing action change, Shoham, 1988). end,
temporalize epistemic language, epistemic models degree-of-knowledge ordering.
order describe past future introduce temporal operators P; H; F; G
2, denoting respectively \sometimes past", \always past", \sometimes
future", \always future" \always". want describe agent's knowledge future past, future past agent's knowledge. Therefore,
temporal operators allowed occur within scope epistemic K operator.

Definition 8 (Temporal epistemic language) language
closed under:


' 2 LS5 ' 2 LTEL ;



ff; 2 LTEL ^ fi; :ff; Pff; Fff 2 LTEL .

LTEL

smallest set

abbreviations _; !; > ? introduced, well as:

Gff :F (:ff); Hff :P (:ff) 2ff Hff ^ ^ Gff:
first clause restrict subjective formulae, get set subjective
TEL formulae.

rest paper interested subjective TEL formulae since
describe knowledge agent changing time. Based set natural
numbers (N) ow time, normal S5 models formalization states temporal
model, following semantics introduced temporal epistemic logic (TEL):

Definition 9 (Semantics TEL) TEL model function : N ! . truth
formula ' 2 LTEL time point 2 N, denoted (M; t) j= ', defined inductively
follows:

1:
2:
3:
4:
5:

(M; t) j= '
(M; t) j= ' ^
(M; t) j= :'
(M; t) j= P'
(M; t) j= F'

, M(t) j=S5 ', ' 2 LS5
, (M; t) j= ' (M; t) j=
, case (M; t) j= '
, 9s 2
< (M; s) j= '
, 9s 2
< (M; s) j= '

N
N

5

fiEngelfriet

formula ' true model , denoted j= ', (M; 0) j= '. TEL model
called conservative (or TELC model) < 2 N : M(s) M(t),
ordering Definition 6. set TELC models denoted TCIS.

Note definition principle ambiguous: formula Kp ^ Kq
S5 formula interpreted according first semantic clause,
seen conjunction, interpreted according second clause.
interpretation conjunction (and holds negation) S5
TEL, ambiguity harmless.
brie explain reason defined j= ' (M; 0) j= '. Later on,
make general assumption preferential logics language contains negation,
j= :' 6j= ' (Assumption 1). define j= ' (M; t) j= '
2 N, assumption would hold TEL. two definitions
translated other, since (M; 0) j= ' (M; t) j= :P > ! ' 2 N
(M; t) j= ' 2 N (M; 0) j= ' ^ G'. one reasons
gave slightly different presentation Ground S5 (using subjective formulae).
conservative models, propositional knowledge agent increase
time. restrict models, i.e., agent forget revise
(propositional) knowledge. Indeed, propositional formula ' TELC model ,
(M; t) j= K' (M; s) j= K' > t. restriction made agent
reasoning fixed (non-changing) situation, abstracting particular
implementation details (such use backtracking implementations nonmonotonic
logics). extend ordering minimal consequence relation TELC models.
ordering extended pointwise fashion.

Definition 10 (Minimal temporal epistemic logic)
1. extend degree-of-knowledge ordering TELC models defining
MN ,

2 N : M(s) N (s):

2. Minimal temporal epistemic logic (MTEL) preferential logic subjective
TEL formulae language, TCIS class models, satisfaction relation
(M j= ') Definition 9 ordering item 1. denote preferential
entailment (as defined Definition 1) MTEL j=MTEL.

idea behind using MTEL specifying reasoning processes subjective
TEL formula ' describes reasoning agent time (it can, example, describe
use nonmonotonic inference rules, see Proposition 11). minimal models '
represent process agent reasoning time. use minimal consequence
infer properties reasoning process.
easy see MTEL generalization Ground S5: subjective S5 formulae
'; ' j=MTEL ' j=GS5 . example use
notion minimal temporal epistemic consequence, shown Engelfriet
Treur (1993) capture default logic (Reiter, 1980b).
6

fiMonotonicity Persistence Preferential Logics

Proposition 11 (Default logic MTEL) Let finite, propositional default theory =

hW;

given let

^

^

= f2(Kff ^ G(:K :fi ) ! G(K )) j (ff; )= 2 Dg ^ fKff j 2 W g:
' sceptical consequence default logic j=MTEL F (K').
conjuncts form 2(Kff ^ G(:K :fi ) ! G(K )) ensure application
default rules. words: agent knows prerequisite (ff), justification (fi )
remains consistent agent knows throughout future, agent must
conclude consequent ( ) next moment time (and know henceforth).

2.3 Circumscription

One earliest approaches nonmonotonic reasoning circumscription (McCarthy,
1977, 1980; Davis, 1980; Lifschitz, 1994; Etherington, 1988), preferential logic based
first-order predicate logic. main idea behind circumscription kind completeness
information given us: \the premises stated give us `the whole truth'
matter" (van Benthem, 1989). leads least two kinds minimality: predicateminimality domain-minimality. intuition behind predicate-minimality
relevant property (predicate), objects property, explicitly said
property premise. allows us formulate defaults stating
normal objects property. Minimizing abnormality allow us conclude
object property, unless deduce premise object abnormal.
intuition behind domain-minimality, domain (of discourse) contains
objects deduced exist premise. (This intuition strongly
tied domain-closure assumption Reiter, 1980a). two kinds minimality
formalized two variants Circumscription. treated below.
classical logic underlying circumscription first-order predicate logic. assume
standard first-order language L finite number predicate symbols, including
equality. assume language contains function constant symbols.
severe limitation, since eliminate function constant symbols
introducing new predicate symbols (Davis, 1980). first give definition
orderings define predicate domain circumscriptive consequence.

Definition 12

1. Let P predicate symbol language L. structure language,
P denotes interpretation P (so P subset dom(M )n ,
dom(M ) domain , n arity P ). two structures M; N ,
say P -preferred N , denoted P N , domain,
interpretation predicate symbols P , P P N . Predicate
circumscription P preferential logic uses first-order predicate logic
language, models satisfaction relation, augmented ordering P .
denote preferential entailment (as defined Definition 1) logic j=PC
P .
2. two structures M; N language L, say N substructure , denoted
N , domain N subset domain , interpretation
7

fiEngelfriet

predicate symbol N restriction corresponding interpretation
dom(N ). Domain circumscription preferential logic uses first-order
predicate logic language, models satisfaction relation, augmented
ordering . denote preferential entailment logic j=DC .
3. restrict model class finite structures, resulting preferential logics
called finite predicate circumscription finite domain circumscription.

refer reader references given standard results motivation
circumscription.

3. Respecting Monotonicity

section study formulae respect monotonicity. first give
formal definition.

Definition 13 (Respecting monotonicity) Given preferential logic, say formula
' respects monotonicity,

8ff;

: j= ) ^ ' j= fi:

Next, make basic assumptions (underlying logic the) preferential logic.

Assumption 1 assume preferential logic satisfies following:


language conjunction (^) j= ' ^

, j= '



language implication (!) j= ' !



language negation (:) j= :' , 6j= '.

j= .

, 6j= '

j= .

immediately identify class formulae respect monotonicity:

Proposition 14 Downward persistent formulae respect monotonicity.
Proof: Suppose ' downward persistent. Let ff; formulae suppose j= . Let

minimal model ^ '. minimal model ff. suppose not,
exists n m, n 6= n j= ff. Since j= ' ' downward persistent,
n j= '. n j= ^ ' contradicts assumption minimal
model ^ '. Since minimal model j= , j= .
proved ^ ' j= . Thus, ' respects monotonicity.
2
course, valid unsatisfiable sentences downward persistent. question whether non-trivial downward persistent formulae exist. preferential logics
introduced Section 2, answer armative.
8

fiMonotonicity Persistence Preferential Logics

Definition 15 (DIAM) Define class S5 formulae DIAM by:
DIAM ::= (') j DIAM ^ DIAM j DIAM _ DIAM j (DIAM)
' propositional.

Formulae DIAM essentially contain operator (the `diamond' S5,
`box' operator K ). Formulae class subjective formulae (up
equivalence) downward persistent Ground S5 (this proved Engelfriet,
1996a).

Theorem 16 subjective S5 formula ' downward persistent Ground S5
S5-equivalent formula DIAM.

Ground S5 non-empty class downward persistent formulae,
respect monotonicity Proposition 14. Essentially, formulae say something
ignorance agent. One might think formulae DIAM completely
uninteresting, never yield new insights Ground S5. converse monotonicity
formulae, ^ ' j=GS5 ) j=GS5 , however, hold, even '
consistent ff. Kp _ Kq j=GS5 Kq, whereas
(Kp _ Kq) ^ (:p) j=GS5 Kq (:p) 2 DIAM. knowledge ignorance
useful.
analogous result holds minimal temporal epistemic logic.

Definition 17 (TD)
1. Define
TD ::= DIAM j TD ^ TD j TD _ TD j F (TD) j G(TD) j P (TD) j H (TD)
2. two subjective TEL formulae '; :

'

,def

TELC models : j= ' , j= :

TD stands `temporal diamond' formulae. following proved Engelfriet
(1996a).

Theorem 18 MTEL, formula ' downward persistent equivalent
(in sense ) formula TD.

case Ground S5, formulae express (temporal) ignorance agent.

Definition 19 (Positive universal formulae) first-order predicate formula negative predicate P , occurrences predicate P scope odd number
negations. formula universal form 8x1 : : : xn quantifier
free.
9

fiEngelfriet

following result links formulae downward persistence circumscription.
first variant Lyndon's theorem folklore (we leave details
reader); second result known Los-Tarski theorem (Chang & Keisler, 1990,
Theorem 3.2.2).

Theorem 20
1. first-order predicate formula ' downward persistent predicate circumscription
(of P ) equivalent formula negative P .
2. first-order predicate formula ' downward persistent domain circumscription
equivalent universal formula.

downward persistent formulae predicate circumscription essentially say something elements property P (besides properties mention),
downward persistent formulae domain circumscription essentially mention universal properties (and say anything existence objects).
examples, shown non-trivial classes formulae respect monotonicity exist. question whether formulae, besides
downward persistent. give criterion ensures formulae
respect monotonicity.

Definition 21 (Expressibility preference) preferential logic satisfies expressibility preference following holds:

8m 2 Mod : 9'm 2 L : 8n 2 Mod : (n j= 'm , n):

formula 'm expresses: \I less preferred m," describes exactly
models larger preferential ordering. criterion expressibility
preference poses requirement expressiveness language, given semantics.
prove preferential logics satisfy condition definition,
downward persistent formulae ones respect monotonicity.
condition generalized taking account equivalent models; done
immediately makes things rather cumbersome. whenever n k
(where k means k satisfy formulae), exists model l
l n l k, generalize condition to: 8m 2 Mod : 9'm 2 L : 8n 2
Mod : (n j= 'm , 9k 2 Mod : k & k n).

Theorem 22 (Only : : : ) preferential logic satisfies expressibility preference have: formula respect monotonicity, downward persistent.

Proof: Suppose formula ' downward persistent, exist models

n j= ', n 6j= ' n m. Define = 'n ^ (' ! 'm ) = :'. First
claim j= . Since n n, n j= 'n , n 6j= ' get n j= ff.
Furthermore, model k, k j= particular k j= 'n n k. Therefore,
n minimal model ff, since n 6j= ', n j= . hand,
^ ' 6j= : n j= 'n j= 'm conclude j=
10

fiMonotonicity Persistence Preferential Logics

j= ^ '. Furthermore, model k, k j= ^ ', k j= ' k j= ' ! 'm
k j= 'm . follows k, means (actually,
only) minimal model ^ ' j= ' 6j= . conclude ' respect
monotonicity, since found formulae j= ^ ' 6j= . 2
may seem condition expressibility preference restrictive. However,
see useful examples.

Proposition 23 Ground S5, MTEL finite predicate domain circumscription,
downward persistent formulae respect monotonicity.

Proof: Remark logics satisfy Assumption 1. First consider Ground S5.
Let us first take language finite (that is, P finite). Take
S5 model .
V



propositional valuation m, define formula = fp 2 P j j=
pg ^ Vf:Vp j p 2 P; 6j= pg. well-defined formula since P finite. construct
'M = fK (:ffm ) j 2= g, well-defined formula since Mod(P )
finite. easily seen S5 model N satisfies 'M N .
expressibility preference satisfied, whence Theorem 22 ensures downward
persistent formulae respect monotonicity finite language. let P arbitrary,
suppose ' language respects monotonicity. easy see
restrict language atoms occurring ', still respects monotonicity, downward
persistent restricted language. follows easily ' downward persistent
full language.
MTEL, considerations make sucient give formula 'M finite
language only, let us take P finite. every S5 model M(i) finite set propositional valuations. Since sequence fM(i)g decreasing respect set-inclusion
(as conservative), index k M(j ) = M(k) j > k.
improve readability formula 'M define formulae ati P > ^ H i+1 ?
(where P stands sequence P operators length i). easy see
model N (N ; j ) j= ati j = i. define:
'M = Vf2(ati ! 'M(i) ) j 0 kg, 'M(i) formula defined case
Ground S5 S5 model M(i) . easy show N j= 'M N .
finite circumscription, need general definition expressibility preference hinted (in first-order logic, may equivalent models: different models
satisfy first-order formulae). need restrict language.
predicate circumscription, required formula 'M finite structure expresses: (i)
exact number elements domain , (ii) elements P holds,
(iii) predicates Q expresses elements Q holds,
negation holds. domain circumscription, required formula 'M finite structure
expresses fact (at least) many elements ,
predicate Q, expresses elements Q holds, elements
negation holds.
2
possible find required formula 'M (non-finite) circumscription
general: infinite structures general able express number elements,
11

fiEngelfriet

describe entire extensions predicates general. Indeed,
result hold domain circumscription. still open question whether holds
predicate circumscription.

Proposition 24 domain circumscription, exists first-order predicate formula
respects monotonicity downward persistent.

Proof: Consider first-order language L = f<; =g, let ' sentence stating

< dense linear ordering without begin- endpoint. complete theory (Rabin,
1977, Theorem 4), means 2 L, either ' j= ' j= :ff. suppose
j=DC . ' j= :ff ^ ' inconsistent, ^ ' j=DC trivially. Otherwise
' j= ^ ' equivalent '. easy see '
minimal model, ^ ' j=DC . However, ' downward persistent:
holds real numbers, substructure natural numbers.
2
considered formulae added premise,
ask question whether formula respects monotonicity given, fixed premise.

Proposition 25 Given preferential logic Mod finite 2 Mod

exists ffm 2 L n j= ffm n = m, let fixed formula L.
' 2 L:
8fi (ff j=

) ^ ' j= ) , 8m 2 Mod(m j= ^ ' ) j= ff):
Proof: right left direction trivial (and depend assumption).
direction, suppose 8fi (ff j= Wfi ) ^ ' j= ). Let 2 Mod arbitrary
suppose j= ^ '. define = fffn j n j= ffg; well-defined formula
since Mod assumed finite. easy see j= : suppose n j= ff, ffn
one disjuncts , definition ffn , n j= ffn , n j= .
assumption gives ^ ' j= . j= ^ ', j= ,
n 2 Mod n j= j= ffn. definition ffn means = n
j= ff.
2
Proposition 25 states formula ' respects monotonicity fixed premise
minimal models ^ ' minimal models ff. course criterion
right-hand side hard check; give another criterion, that, first
need following definition (Kraus et al., 1990):

Definition 26 (Smoothness) preferential logic called smooth, following holds:
8ff 2 L : 8m 2 Mod : (m j= ) 9n 2 Mod : n & n j= ff):
condition, called stopperedness well-foundedness, akin
limit assumption (Lewis, 1973), forbids chains ever-decreasing models satisfying
formula. one basic properties framework Kraus et al. (1990).
Proposition 27 Given smooth preferential logic, have: 8m 2 Mod(m j= ^ ' )
j= ff) 8m 2 Mod(m j= ^ ' ) 9n 2 Mod(n m; n j= n j= ')).
12

fiMonotonicity Persistence Preferential Logics

proof proposition straightforward, may help much.
far examples concerned, conclusion Proposition 25 holds Ground
S5 MTEL (the properties depend ' may restrict signature
use proposition). Proposition 27 holds Ground S5 (which smooth).
propositions find sucient conditions. ' downward persistent
models ff, Proposition 25 ensures ' respects monotonicity respect
ff. j= ' Proposition 27 ensures ' respects monotonicity respect
(but follows immediately rule Cautious Monotonicity, satisfied
smooth preferential logics, Kraus et al., 1990). seems hard find simple criterion
necessary sucient respecting monotonicity given premise. leave
research.

4. Conservativity

previous section considered formulae always added premise
without invalidating conclusions. section focus conclusions,
study formulae that, concluded, always kept, matter
new information added premise. call formulae conservative.

Definition 28 (Conservative) Given preferential logic, say formula conservative,

8ff; ' : j=

) ^ ' j= fi:

following result connecting upward persistent conservative formulae,
analogy Proposition 14.

Proposition 29 Given preferential logic smooth, formula upward persistent,
conservative.

Proof: Let upward persistent smooth preferential logic. suppose j= .
Take model j= ^ ', j= smoothness, model
n n n j= ff. Then, j= , n j= . Since n
upward persistent, j= . shows ^ ' j= , conservative. 2
Again, ask upward persistent formulae conservative formulae,
true conditions case respecting monotonicity.
Proposition 30 (Only : : : ) preferential logic satisfies expressibility preference have: formula conservative, upward persistent.
Proof: Suppose upward persistent, n; 2 Mod n m,
n j= 6j= . take = 'n ' = 'm . n minimal model
n j= j= , (actually, one) minimal model ^ ',
6j= , ^ ' 6j= . Thus, conservative.
2
Let us first identify upward persistent formulae examples. relatively
straightforward, since following elementary result.
13

fiEngelfriet

Proposition 31 preferential logic, ' upward persistent :'
downward persistent.

gives us following.

Proposition 32
1. Define BOX ::= K (') j BOX ^ BOX j BOX _ BOX j K (BOX) ' propositional.
subjective S5 formula ' upward persistent Ground S5
S5-equivalent formula BOX.
2. Define TB ::= BOX j TB ^ TB j TB _ TB j F (TB) j G(TB) j P (TB) j H (TB).
subjective TEL formula ' upward persistent MTEL equivalent
(in sense ) formula TB.
3. first-order formula upward persistent predicate circumscription (of P )
equivalent formula positive P (meaning occurrences
predicate P scope even number negations). first-order
formula upward persistent domain circumscription equivalent
existential formula (a formula form 9x1 : : : xn quantifier
free).

Proof: Straightforward.

2

definition, formulae BOX essentially contain K operator (the
`box' S5); TB stands `temporal box' formulae. let us see Propositions 29
30 say examples. Ground S5 satisfies expressibility preference (for finite
language) smooth, conservative formulae exactly upward persistent
formulae, express knowledge (and ignorance). lifted
infinite language. fact Ground S5, formulae express propositional
knowledge, conservative, already noted Donini et al. (1997). MTEL satisfies
expressibility preference (for finite language), formula conservative, must
upward persistent, must equivalent formula TB, expressing knowledge
time (not ignorance). lifted infinite language. Unfortunately, MTEL
smooth: formula F (Kp) satisfiable, minimal model. MTEL,
F (Kp) j=MTEL F (Kq), F (Kp) ^ Kp 6j=MTEL F (Kq) (F (Kp) ^ Kp
minimal model, p known, first point time onwards). means
formula F (Kq) conservative, although upward persistent. easy
see preferential logic, valid formulae always conservative, MTEL,
(almost) ones.

Definition 33 call TEL model totally ignorant, propositional formulae

' have: j= F (K') ' propositional tautology. Define totally ignorant
model Mti Mti (i) = Mod(P ) i.
totally ignorant model, knowledge ever gained. totally ignorant model
certainly totally ignorant model, P finite, one.
14

fiMonotonicity Persistence Preferential Logics

Proposition 34 MTEL, case P infinite, formula conservative
true models. P finite, formula conservative
true models except possibly totally ignorant model.

Proof: prove conservative true models

totally ignorant (both P finite infinite). First, suppose model
totally ignorant, true. j= F (K ) propositional
formula propositional tautology. P finite, consider formula
'M (see proof Proposition 23 definition 'M ). P infinite, one
show chosen way `inherently finite' model, allowing
construction formula 'M properties case P finite (using
essentially construction). details argument left reader.
formula F (K ) minimal model ( must known sometimes future,
moment always postponed, yielding smaller model), F (K ) j=MTEL .
hand, easily shown minimal model F (K ) ^ 'M
, gives us F (K ) ^ 'M 6j=MTEL . means conservative.
suppose true models totally ignorant, suppose
j=MTEL . Let minimal model ^ '. totally ignorant,
j= . totally ignorant, Mti j= ^ ' (it shown induction
totally ignorant models satisfy formulae). Mti j= ff. Since model
preferred Mti , means Mti j= Mti j= , whence j= . follows
^ ' j=MTEL , conservative.
Let us look case P infinite. Suppose 6j= , totally ignorant.
take propositional atom p occurring . easily shown
find model Kp satisfied. model course totally ignorant.
shows true models totally ignorant, true
models. case P finite, Mti totally ignorant model.
2
MTEL infinite P , valid formulae conservative formulae.
formulae course upward persistent (in trivial way), equivalent
formula TB, instance K (>). signature finite, extra
formulae conservative, example P = fp; qg, formula F (K (p _ q) _
K (:p _ q) _ K (p _ :q) _ K (:p _ :q)) conservative (it true models except
totally ignorant one). course, formula upward persistent, TB.
Finite predicate domain circumscription satisfy expressibility preference
smoothness, conservative formulae coincide upward persistent formulae
syntactic characterization Proposition 32.
Full circumscription satisfies neither conditions.

Proposition 35 predicate domain circumscription upward persistent formulae conservative.

Proof: First consider predicate circumscription. Let language consist three predicates besides equality, namely P , Succ < (and P circumscribed). Define formulae
15

fiEngelfriet

' follows:
= 8x9!y(Succ(x; y))^
' = 8xy(Px ^ Succ(y; x) ! Py)
8x9!y (Succ(y; x))^
8xy (Succ(x; ) ! x < )^
8xyz (x < ^ < z ! x < z )^
8x(:(x < x))^
8xy (x < _ < x _ x = )^
9xPx
8xy (Px ^ Succ(x; ) ! Py )
intuitive meaning Succ-chains elements, extending indefinitely
directions. P occurs somewhere chain, must true successors
well. model made smaller (more preferred) making P false point
predecessors (leaving true successors). make argument
formal. first claim P - minimal models. Let model ff.
must x 2 dom(M ) x 2 P . Define = fxg [ fy 2 P j (y; x) 2<M g.
Let N structure domain , extension Succ <,
P N = P n A. straightforward verify N model ff, N P
N 6= .
hand, ^ ' minimal models. Let structure dom(M ) = Z
(the integers), (a; b) 2 SuccM , b = + 1, (a; b) 2<M , < b natural ordering
integers, P = Z. easily checked j= ^ '. suppose
N P , N 6= N j= ^ '. means P N Z (strict inclusion), P N 6= ;
(as N j= 9xPx). must x; 2 Z = x + 1, either x 2 P N
2= P N , x 2= P N 2 P N , contradicting either N j= 8xy(Px ^ Succ(x; y) ! Py)
(N j= ff) N j= '. Therefore minimal model ^ '.
define = 9x(x 6= x), trivially upward persistent. Since minimal
PC
models, j=PC
P , 6j= , ^ ' 6j=P . shows
conservative.
domain circumscription, example quite similar. take = 9x(x 6= x).
define formulae ' follows:
= 8x9!y(Succ(x; y))^
' = 8y9x(Succ(x; y))
8xy (Succ(x; ) ! x < )^
8xyz (x < ^ < z ! x < z )^
8x(:(x < x))^
8xy (x < _ < x _ x = )^
8xyz (Succ(x; z ) ^ Succ(y; z ) ! x = )
One check -minimal models, ^ ' does,
upward persistent conservative domain circumscription. details left
reader.
2
now, looked formulae which, concluded, never lost, regardless
new information comes in, regardless initial premise was.
16

fiMonotonicity Persistence Preferential Logics

However, consider situation premise fixed (analogously last
part previous section): given premise, conclusions may kept regardless
new information?

Proposition 36 preferential logic satisfies expressibility preference,
j= ,
(8' : ^ ' j= ) , j= fi:
Proof: Suppose j= .
\(" j= ' ^ ' j= ^ ' j= .

\)" Suppose 6j= , exists 2 Mod j= 6j= .
j= ^ 'm (!), ^ 'm 6j= .
2
Note condition j= used proof; 6j= equivalence
still true, sides false. proposition shows monotonic consequences
premise ones conservative respect fixed premise.

Corollary 37 Let conservative formula preferential logic satisfies expressibility preference, j= , j= .
Proof: j= preferential logic follows j= . hand,
j= , ' ^ ' j= , since conservative. Proposition 36
2

follows j= .

last two sections, derived number results formulae respect
monotonicity conservative formulae links persistent formulae. next
section discuss impact results practice.

5. Practical Implications

results paper may improve eciency theorem provers preferential
logics, depending number factors. first place, important theorem
prover used.
Consider situation stand-alone theorem prover gets different
(unrelated) queries. Furthermore, suppose theorem prover asked prove ff1 ^ : : : ^
ffn j= . least two possibilities using results paper.
First all, suppose preferential logic satisfies expressibility preference.
upward persistent, prove ff1 ^ : : : ^ ffn j= , equivalent
prove ff1 ^ : : : ^ ffn j= (Corollary 37). preferential logics, preferential entailment
harder compute entailment underlying logic.
second place, sometimes local reasoning possible (which possible general
non-monotonic logics): theorem prover may derive conclusion part
premise. may case 1 k < n ff1 ^ : : : ^ ffk j=
easier verify original query. ffk+1 ; : : : ; ffn downward persistent,
Proposition 14 implies ff1 ^: : :^ffn j= . upward persistent (and preferential
logic smooth), Proposition 29 sanctions ff1 ^ : : : ^ ffn j= . results usable
17

fiEngelfriet

theorem prover, need heuristic knowledge decide promising split
premise two parts B . split, try prove j=
downward persistence B upward persistence . case ff1 ^ : : : ^ ffk j=
proved, may directly prove ff1 ^ : : : ^ ffn j= all.
two methods course improve eciency determination persistence easier original query (we treat question below).
second kind situation theorem prover used
agent lot knowledge world, time time performs
observations increase knowledge. Then, although sometimes agent need
perform revisions, often situation (many) conclusions premise
(ff) proved, premise augmented new formula ('). new
formula downward persistent, agent retain old conclusions (and may
need derive new conclusions). not, least retain upward
persistent conclusions (if preferential logic smooth). may try determine
' downward persistent given ff, conservative given ff. Again, methods
improve eciency easier determine ' respects monotonicity (possibly given
ff) recomputing old conclusions, easier determine conservative
(possibly given ff) checking ^ ' j= .
possible eciency improvement cases heavily depends cost determining persistence relative cost determining preferential consequence. Unfortunately, hard say anything issue general. depends
preferential logic hand, representation logic (syntactically, proof calculus, semantically, models preference relation), implementation
issues. instance, important much information retained previous
queries: whether proofs minimal models stored. Let us consider examples again.
Preferential entailment Ground S5 MTEL QP3 -complete (Engelfriet,
1996a), whereas full circumscription undecidable (restricted versions circumscription
exist decidable, still highly complex). Unfortunately, determining downward
upward persistence easier logics. seen classes persistent formulae syntactic representations form: ' upward/downward persistent
equivalent formula C , C (syntactic) class formulae.
Now, course, determining equivalence formula C complex determining
persistence, may subclasses class persistent formulae, lower
complexity. instance, determining membership C much easier, namely polynomial.
members C persistent. propose check membership C , instead
equivalence member C . case, miss persistent formulae (and
prove original query), disadvantage outweighed complexity
advantage checking membership. checking membership improved upon
adding (easy) checks equivalence formula C . instance, Ground S5,
consider, formula ', propositional sub-formula, nearest K operator
scope lies, K operators scope odd number
negations, conclude ' downward persistent. formula :K (q _ Kp),
example, satisfies condition, although member DIAM, equivalent
:Kq ^ :Kp 2 DIAM. check obviously polynomial.
18

fiMonotonicity Persistence Preferential Logics

Given preferential logic, designer theorem prover could proceed follows.
First, syntactic classes formulae downward upward persistent
identified. Ground S5, MTEL predicate domain circumscription,
found Definitions 15, 17, 19 Proposition 32. preferential logics,
classes trivial (they may, instance, include tautologies contradictions),
usefulness results limited. Otherwise, theorem prover could work
follows. Given query form ^ ' j= , first checked ' belongs
syntactic class downward persistent formulae belongs syntactic class
upward persistent formulae (this latter test performed preferential
logic smooth). conservative logic satisfies expressibility preference,
tries prove ^ ' j= (this usually lower complexity original query;
Ground S5 MTEL, monotonic consequence NP-complete, Engelfriet, 1996a).
answer query answer original query (see Corollary 37). Otherwise,
' belongs syntactic class downward persistent formulae belongs
syntactic class upward persistent formulae (but logic satisfy expressibility
preference), theorem prover tries prove j= . succeeds, outputs
yes. Otherwise, try answer original query directly.
stated before, practical savings part depend representation implementation aspects. depends application domain use theorem prover:
formulae syntactic classes occur often, eciency improvement higher
infrequent.

6. Conclusions Research
looked restrictions monotonicity preferential logics. monotonicity
hold general, identify (in general non-trivial) classes formulae
restricted versions monotonicity holds. may make (nonmonotonic) deduction
preferential logics easier, since may sometimes keep conclusions, identify
conclusions may kept, adding new information premise. results
paper may lead ecient implementations preferential logics. Experimenting
theorem provers use results necessary order determine eciency
improvement practice.
would nice find better characterization formulae added
given, fixed premise without destroying conclusions.
Syntactic characterizations persistent formulae given number example
preferential logics, would result broader classes preferential
logics, class ground nonmonotonic modal logics (Donini et al., 1997).

Acknowledgements
would thank Riccardo Rosati stimulating discussions worthwhile suggestions. Also, would thank Pascal van Eck, Jan Treur, Rineke Verbrugge, Elles
de Vries Wieke de Vries reading commenting earlier versions doc19

fiEngelfriet

ument. Furthermore, would thank Heinrich Herre suggesting example
Proposition 24. anonymous referees helped improve paper.

References

Chang, C. C., & Keisler, H. J. (1990). Model Theory (3rd edition). Amsterdam: NorthHolland.
Chen, J. (1997). generalized logic knowing (GOL) covers notion
epistemic specifications. Journal Logic Computation, 7 (2), 159{174.
Davis, M. (1980). mathematics non-monotonic reasoning. Artificial Intelligence, 13,
73{80.
Donini, F. M., Nardi, D., & Rosati, R. (1997). Ground nonmonotonic modal logics. Journal
Logic Computation, 7 (4), 523{548.
Engelfriet, J. (1996a). Minimal temporal epistemic logic. Notre Dame Journal Formal
Logic, 37 (2), 233{259.
Engelfriet, J. (1996b). persistence makes nonmonotonicity monotonous (extended abstract). Alferes, J. J., Pereira, L. M., & Orlowska, E. (Eds.), Logics Artificial
Intelligence, Proceedings JELIA'96, Vol. 1126 Lecture Notes Artificial Intelligence, pp. 164{175. Springer-Verlag.
Engelfriet, J., & Treur, J. (1993). temporal model theory default logic. Clarke,
M., Kruse, R., & Moral, S. (Eds.), Proceedings 2nd European Conference Symbolic
Quantitative Approaches Reasoning Uncertainty, ECSQARU'93, Vol. 747
Lecture Notes Computer Science, pp. 91{96. Springer-Verlag. Extended
revised version appear \An interpretation default logic minimal temporal
epistemic logic" Journal Logic, Language Information.
Engelfriet, J., & Treur, J. (1994). Temporal theories reasoning. MacNish, C., Pearce,
D., & Pereira, L. M. (Eds.), Logics Artificial Intelligence, Proceedings JELIA'94,
Vol. 838 Lecture Notes Artificial Intelligence, pp. 279{299. Springer-Verlag.
Journal Applied Non-Classical Logics, 5(2):239{261, 1995.
Engelfriet, J., & Treur, J. (1996). Specification nonmonotonic reasoning. Gabbay,
D. M., & Ohlbach, H. J. (Eds.), Practical Reasoning, Proceedings FAPR'96, Vol. 1085
Lecture Notes Artificial Intelligence, pp. 111{125. Springer-Verlag.
Etherington, D. W. (1988). Reasoning Incomplete Information. Los Altos, CA: Morgan
Kaufmann Publishers.
Halpern, J. Y. (1997). theory knowledge ignorance many agents. Journal
Logic Computation, 7 (1), 79{108.
Halpern, J. Y., & Moses, Y. (1985). Towards theory knowledge ignorance: preliminary report. Apt, K. R. (Ed.), Logics Models Concurrent Systems, Vol.
F13 NATO ASI Series, pp. 459{476. Springer-Verlag.
20

fiMonotonicity Persistence Preferential Logics

Kraus, S., Lehmann, D., & Magidor, M. (1990). Nonmonotonic reasoning, preferential
models cumulative logics. Artificial Intelligence, 44, 167{207.
Levesque, H. J. (1990). know: study autoepistemic logic. Artificial Intelligence,
42, 263{309.
Lewis, D. K. (1973). Counterfactuals. Oxford: Blackwell.
Lifschitz, V. (1994). Circumscription. Gabbay, D. M., Hogger, C. J., & Robinson, J. A.
(Eds.), Handbook Logic Artificial Intelligence Logic Programming, Vol. 3,
pp. 297{352. Oxford University Press.
McCarthy, J. (1977). Epistemological problems artificial intelligence. Reddy, R. (Ed.),
Proceedings 5th International Joint Conference Artificial Intelligence, pp. 1038{
1044. Los Altos, CA: Morgan Kaufmann.
McCarthy, J. (1980). Circumscription | form non-monotonic reasoning. Artificial
Intelligence, 13, 27{39.
Meyer, J.-J. C., & van der Hoek, W. (1995). Epistemic Logic Computer Science
Artificial Intelligence, Vol. 41 Cambridge Tracts Theoretical Computer Science.
Cambridge University Press.
Rabin, M. O. (1977). Decidable theories. Barwise, J. (Ed.), Handbook Mathematical
Logic, pp. 595{629. Amsterdam: North-Holland.
Reiter, R. (1980a). Equality domain closure first-order data bases. Journal
ACM, 27, 235{249.
Reiter, R. (1980b). logic default reasoning. Artificial Intelligence, 13, 81{132.
Schwarz, G., & Truszczynski, M. (1994). Minimal knowledge problem: new approach.
Artificial Intelligence, 67, 113{141.
Shoham, Y. (1987). Nonmonotonic logics: Meaning utility. McDermott, J. (Ed.),
Proceedings 10th International Joint Conference Artificial Intelligence, pp. 388{
392. Los Altos, CA: Morgan Kaufmann.
Shoham, Y. (1988). Reasoning Change. Cambridge, MA: MIT Press.
van Benthem, J. F. A. K. (1989). Semantic parallels natural language computation.
Ebbinghaus, H. D., & al. (Eds.), Logic Colloquium'87, Granada, pp. 331{375.
Amsterdam: North-Holland.

21


