Journal Artificial Intelligence Research 23 (2005) 167-243

Submitted 07/04; published 02/05

Combining Spatial Temporal Logics:
Expressiveness vs. Complexity
David Gabelaia
Roman Kontchakov
Agi Kurucz

gabelaia@dcs.kcl.ac.uk
romanvk@dcs.kcl.ac.uk
kuag@dcs.kcl.ac.uk

Department Computer Science, Kings College London
Strand, London WC2R 2LS, U.K.

Frank Wolter

frank@csc.liv.ac.uk

Department Computer Science, University Liverpool
Liverpool L69 7ZF, U.K.

Michael Zakharyaschev

mz@dcs.kcl.ac.uk

Department Computer Science, Kings College London
Strand, London WC2R 2LS, U.K.

Abstract
paper, construct investigate hierarchy spatio-temporal formalisms
result various combinations propositional spatial temporal logics
propositional temporal logic PT L, spatial logics RCC-8, BRCC-8, S4u
fragments. obtained results give clear picture trade-off expressiveness
computational realisability within hierarchy. demonstrate different combining principles well spatial temporal primitives produce NP-, PSPACE-,
EXPSPACE-, 2EXPSPACE-complete, even undecidable spatio-temporal logics
components NP- PSPACE-complete.

1. Introduction
Qualitative representation reasoning quite successful dealing
time space. exists wide spectrum temporal logics (see, e.g., Allen, 1983;
Clarke & Emerson, 1981; Manna & Pnueli, 1992; Gabbay, Hodkinson, & Reynolds, 1994;
van Benthem, 1995). variety spatial formalisms (e.g., Clarke, 1981; Egenhofer
& Franzosa, 1991; Randell, Cui, & Cohn, 1992; Asher & Vieu, 1995; Lemon & Pratt,
1998). cases determining computational complexity respective reasoning
problems one important research issues. example, Renz Nebel
(1999) analysed complexity RCC-8, fragment region connection calculus RCC
eight jointly exhaustive pairwise disjoint base relations spatial regions
introduced Egenhofer Franzosa (1991) Randell colleagues (1992); Nebel
Burckert (1995) investigated complexity Allens interval algebra; numerous results
computational complexity point-based propositional linear temporal logic PT L
various flows time obtained Sistla Clarke (1985) Reynolds (2003,
2004). many cases investigations resulted development implementation
effective reasoning algorithms (see, e.g., Wolper, 1985; Smith & Park, 1992; Egenhofer
& Sharma, 1993; Schwendimann, 1998; Fisher, Dixon, & Peim, 2001; Renz & Nebel, 2001;
Hustadt & Konev, 2003).
c
2005
AI Access Foundation. rights reserved.

fiGabelaia, Kontchakov, Kurucz, Wolter, & Zakharyaschev

space

.

X

X

X

X

X

.
F
-

0

1

2

3

time

Figure 1: Topological temporal model.
next apparent natural step combine two kinds reasoning.
course, attempts construct spatio-temporal hybrids. example,
intended interpretation Clarkes (1981, 1985) region-based calculus spatio-temporal.
Region connection calculus RCC (Randell et al., 1992) contained function space(X, t)
representing space occupied object X moment time t. Muller (1998a)
developed first-order theory reasoning motion spatial entities. However,
formalisms turn expressive computational point view:
undecidable. Moreover, far know, serious attempts investigate
implement partial (say, incomplete) algorithms capable spatio-temporal reasoning
logics made.
problem constructing spatio-temporal logics better algorithmic properties analysing computational complexity first attacked Wolter Zakharyaschev (2000b); see popular extended version (Wolter & Zakharyaschev,
2002) conference paper, well (Bennett & Cohn, 1999; Bennett, Cohn, Wolter,
& Zakharyschev, 2002; Gerevini & Nebel, 2002).
main idea underlying papers consider various combinations wellbehaved spatial temporal logics. intended spatio-temporal structures
regarded Cartesian products intended time-line topological (or
other) spaces used model spatial dimension. Figure 1 shows product
(of flow time F = hN, <i two-dimensional Euclidean space T) moving
spatial object X. moving object viewed either 3D spatio-temporal entity
(in particular case) collection snapshots slices entity
moment time; discussion see, e.g., (Muller, 1998b) references therein.
paper, use snapshot terminology understand moving spatial object (or,
precisely, interpret object as) set pairs hX, ti where, point
168

fiCombining Spatial Temporal Logics: Expressiveness vs. Complexity

flow time, X subset topological spacethe state spatial object
moment t.
expressive power (and consequently computational complexity) combined
spatio-temporal formalisms obviously depends three parameters:
1. expressivity spatial component,
2. expressivity temporal component,
3. interaction two components allowed combined logic.
Regardless chosen component languages, minimal requirement spatiotemporal combination useful ability
express changes time truth-values purely spatial propositions.

(PC)

Typical examples logics meeting spatial propositions truth change principle
combinations RCC-8 Allens interval calculus (Bennett et al., 2002; Gerevini & Nebel,
2002) combinations RCC-8 PT L introduced Wolter Zakharyaschev
(2000b) allow applications temporal operators Boolean combinations RCC-8 relations. Languages satisfying (PC) capture, instance, aspects continuity
change principle (see, e.g., Cohn, 1997)
(A) two images computer screen disconnected now, either remain
disconnected become externally connected one quantum computers time.
Another example following statement geography Europe:
(B) Kaliningrad disconnected EU moment Poland becomes
tangential proper part EU, Kaliningrad EU
externally connected forever.
However, languages meeting (PC) necessarily satisfy second fundamental
spatial object change principle according able
express changes evolutions spatial objects time.

(OC)

logical terms, (PC) refers change truth-values propositions, (OC)
change extensions predicates; see Fig. 2 X moment denotes state
X moment + 1. examples motivating (OC):
(C) Continuity change: cyclones current position overlaps position hour.
(D) Two physical objects cannot occupy space: tomorrow object X
place object today, move tomorrow.
(E) Geographic regions change: space occupied Europe never changes.
(F) Geographic regions change: two years EU extended Romania
Bulgaria.
(G) Fairness conditions regions: raining every part England ever
ever again.
169

fiGabelaia, Kontchakov, Kurucz, Wolter, & Zakharyaschev

space

.

X

X
X

X

X





-F

.


t+1

t+2

time

Figure 2: Temporal operators regions.
(H) Mutual exclusion: Earth consists water land, space occupied
water expands, space occupied land shrinks.
clear represent statements refer evolution
spatial objects time (say, compare objects X X)it enough take
account change truth-values propositions speaking spatial objects.
main aim paper investigate trade-off expressive power
computational behaviour spatio-temporal hybrids satisfying (PC) (OC)
principles interpreted various spatio-temporal structures. purpose show
computational obstacles one expect application domain requires
kind interactions temporal spatial operators.
spatio-temporal logics consider combinations fragments PT L
interpreted different flows time fragments propositional spatial logic S4u
(equipped interior closure operators, universal existential quantifiers
points space well Booleans) interpreted topological spaces. choice
motivated following reasons:
component logics well understood established temporal spatial
knowledge representation; supported reasonably effective reasoning
procedures.
definition, implicit explicit temporal quantification necessary capture (OC),
fragments PT L weakest languages quantification know of.
170

fiCombining Spatial Temporal Logics: Expressiveness vs. Complexity

Allens interval calculus, example, provide means quantification
intervals. certainly suitable spatio-temporal hybrids satisfying (PC) (see
Bennett et al., 2002; Gerevini & Nebel, 2002) natural conservative
way combining spatial formalisms meet (OC). hand,
embedded PT L (Blackburn, 1992). natural alternative PT L would
extension Allens calculus means quantification intervals introduced
Halpern Shoham (1986), unfortunately temporal logic turns
highly undecidable.
Although logic S4u originally introduced realm modal logic (see
details), work Bennett (1994), Nutt (1999), Renz (2002) Wolter
Zakharyaschev (2000a) showed regarded unifying language
contains many spatial formalisms RCC-8, BRCC-8 9-intersections
Egenhofer Herring (1991) fragments.
Apart choice component languages level interaction, expressive power computational complexity spatio-temporal logics strongly depend
restrictions may want impose intended spatio-temporal structures
interpretations spatial objects.
choose among different flows time (say, discrete dense, infinite finite)
among different topological spaces (say, arbitrary, Euclidean Aleksandrov).
time point interpret spatial objects arbitrary subsets topological space, regular closed (or open) ones, polygons, etc.
represent assumption everything eventually comes end,
know when, one restrict class intended models imposing
finite change assumption states spatial object change spatial
configuration infinitely often, liberal finite state assumption according
every spatial object finitely many possible states (although
may change states infinitely often).
paper organised follows. Section 2 introduce full detail component
spatial temporal logics combined later on. particular, besides standard
spatial logics RCC-8 9-intersections Egenhofer Herring (1991), consider
generalisations framework S4u investigate computational complexity. example, show maximal fragment S4u dealing regular closed
spatial objects turns PSPACE-complete, natural generalisation
9-intersections still NP. Section 3 introduce hierarchy spatio-temporal logics
outlined above, provide topological-temporal semantics, analyse computational properties. First show spatio-temporal logics satisfying (PC)
principle complex components. consider maximal combinations S4u (fragments of) PT L meeting (PC) (OC) see
straightforward approach work: resulting logics turn undecidable.
Finally, systematically investigate trade-off expressivity complexity
spatio-temporal formalisms construct hierarchy decidable logics satisfying (PC)
171

fiGabelaia, Kontchakov, Kurucz, Wolter, & Zakharyaschev

(OC) whose complexity ranges PSPACE 2EXPSPACE. results, possible implementations well open problems discussed Section 4.
readers convenience important (un)decidability complexity results obtained
paper summarised Table 1 page 193. technical definitions detailed
proofs found appendices.

2. Propositional Logics Space Time
begin introducing discussing spatial temporal formalisms
going combine later paper.
2.1 Logics Space
dealing number logics suitable qualitative spatial representation
reasoning: well-known RCC-8, BRCC-8 S4u , well certain fragments
last one. intended interpretations logics topological spaces.
topological space pair = hU, Ii U nonempty set, universe
space, interior operator U satisfying standard Kuratowski axioms:
X, U ,
I(X ) = IX IY,

IX IIX,

IX X

IU = U.

operator dual called closure operator denoted C: every X U ,
CX = U I(U X). Thus, IX interior set X, CX closure.
X called open X = IX closed X = CX. complement open set
closed vice versa. boundary set X U defined CX IX. Note X
U X boundary.
2.1.1 S4u
expressive spatial formalism S4u i.e., propositional modal logic S4 extended universal modalities. pedigree logic quite unusual. S4
introduced independently Orlov (1928), Lewis (in Lewis & Langford, 1932), Godel
(1933) without intention reason space. Orlov Godel understood
logic provability (in order provide classical interpretation intuitionistic
logic Brouwer Heyting) Lewis logic necessity possibility, is,
modal logic. Besides Boolean connectives propositional variables, language
S4 contains two modal operators: (it necessary provable) C, dual (it
possible consistent). words, formulas S4 defined follows:


::=

p

|

| 1 u 2

| I,

(1)

p variables. Set C = . denote modal operators C
(rather conventional 2 3) understand, following observation
made several logicians late thirties early forties (Stone, 1937; Tarski, 1938;
Tsao Chen, 1938; McKinsey, 1941), S4 logic topological spaces: interpret
propositional variables subsets topological space, Booleans standard settheoretic operations, C as, respectively, interior closure operators
172

fiCombining Spatial Temporal Logics: Expressiveness vs. Complexity

space, S4-formula modally consistent satisfiable
topological spacei.e., value empty interpretation.1
precisely, topological model pair form = hT, Ui, = hU, Ii
topological space U, valuation, map associating every variable p set
U(p) U . valuation U inductively extended arbitrary S4-formulas taking:
U( ) = U U( ),

U(1 u 2 ) = U(1 ) U(2 ),

U(I ) = IU( ).

Expressions form (1) interpreted subsets topological spaces;
call spatial terms. particular, propositional variables S4 understood
spatial variables.

language S4u extends S4 universal existential quantifiers 2

3, respectively (known modal logic universal modalities). Given spatial
say part space (represented by) empty (there
term , write 3
means occupies whole space (all points belong ).
least one point ); 2
taking Boolean combinations expressions arrive called spatial
formulas. BNF definition looks follows:2



::= 2

|



| 1 2 ,

. Spatial formulas either true false
= 2
spatial terms. Set 3
topological models. truth-relation |= spatial formula true topological
model Mis defined standard way:

|= 2

iff

U( ) = U ,

|=

iff

6|= ,

|= 1 2

iff

|= 1 |= 2 .

Say spatial formula satisfiable topological model |= .
seemingly simple query language S4u express rather complex relations
sets topological spaces. example, formula
(q @ p) 2
(p @ Cq) 3
p 3
Iq
2

says set q dense nonempty set p, interior (here 1 @ 2
abbreviation 1 u 2 ).
following folklore complexity result proved different settings (see, e.g.,
Nutt, 1999; Areces, Blackburn, & Marx, 2000):
Theorem 2.1. (i) S4u enjoys exponential finite model property; i.e., every satisfiable
spatial formula satisfiable topological space whose size exponential
size .
(ii) Satisfiability spatial formulas topological models PSPACE-complete.
1. Moreover, according McKinsey (1941) McKinsey Tarski (1944), n-dimensional Euclidean
space, n 1, enough satisfy consistent S4-formulas.
2. Formally, language S4u defined weaker standard one, say, Goranko
Passy (1992). However, one easily show precisely expressive power:
see, e.g., (Hughes & Cresswell, 1996) (Aiello & van Benthem, 2002b).

173

fiGabelaia, Kontchakov, Kurucz, Wolter, & Zakharyaschev

One way proving theorem first observe every satisfiable spatial formula
satisfied Aleksandrov model, i.e., model based Aleksandrov topological
spacealias standard Kripke frame S4 (see, e.g., McKinsey & Tarski, 1944; Goranko
& Passy, 1992).
remind reader topological space called Aleksandrov space (Alexandroff, 1937) arbitrary (not finite) intersections open sets open. Kripke frame
(or simply frame) S4 pair form G = hV, Ri, V nonempty set
R transitive reflexive relation (i.e., quasi-order ) V . Every frame G induces
interior operator IG V : every X V ,
IG X = {x X | V (xRy X)}.
words, open sets topological space TG = hV, IG upward closed
(or R-closed ) subsets V . minimal neighbourhood point x TG (that
minimal open set contain x) consists points R-accessible x.
well-known (see, e.g., Bourbaki, 1966) TG Aleksandrov space and, conversely,
every Aleksandrov space induced quasi-order.
Now, complete proof, suffices recall S4 PSPACE-hard (Ladner,
1977) use, say, standard tableau technique establish exponential finite model
property construct PSPACE satisfiability checking algorithm spatial formulas.
Although computational complexity S4, logic S4u
expressive. standard example spatial formulas distinguish arbitrary
connected3 topological spaces. Consider, instance, formula
(Cp @ p) 2
(p @ Ip) 3
p
p 2
2

(2)

saying p closed open, nonempty coincide whole space.
satisfied model whose underlying topological space connected,
satisfiable S4-formulas satisfied connected (e.g., Euclidean) spaces.
Another example illustrating expressive power S4u formula
(p @ Cp) 2
(p @ Cp)
p 2
3

(3)

defining nonempty set p p p empty interiors. fact, second
third conjuncts say p p consist boundary points only.
2.1.2 RCC-8 Fragment S4u
qualitative spatial representation reasoning, quite often assumed spatial
terms interpreted regular closed (or open) sets topological spaces (see,
e.g., Davis, 1990; Asher & Vieu, 1995; Gotts, 1996). One reasons imposing
restriction exclude consideration pathological sets p (3). Recall
set X regular closed X = CIX, clearly hold set p satisfying (3).
Another reason ensure space occupied physical body homogeneous
sense contain parts different dimensionality. example,
3. remind reader topological space connected universe cannot represented
union two disjoint nonempty open sets.

174

fiCombining Spatial Temporal Logics: Expressiveness vs. Complexity

.
X

IX

CIX

.
Figure 3: Regular closure.
subset X Euclidean plane Fig. 3 consists three parts: 2D ellipse hole,
2D circle, 1D curve connecting them. curve disappears form set CIX,
regular closed CICIX = CIX, every X every topological space.
paper, consider several fragments S4u dealing regular closed sets.
call sets regions. Perhaps, best known language devised
speaking regions RCC-8 introduced area Geographical
Information Systems (see Egenhofer & Franzosa, 1991; Smith & Park, 1992)
decidable subset Region Connection Calculus RCC (Randell et al., 1992). syntax
RCC-8 contains eight binary predicates,
DC(X, ) regions X disconnected,
EC(X, ) X externally connected,
EQ(X, ) X equal,
PO(X, ) X partially overlap,
TPP(X, ) X tangential proper part ,
NTPP(X, ) X nontangential proper part ,
inverses last twoTPPi(X, ) NTPPi(X, ),
combined using Boolean connectives. example, given spatial database
describing geography Europe, query whether United Kingdom
Republic Ireland share common border. answer found checking whether
RCC-8 formula EC(UK, RoI) follows database.
arguments RCC-8 predicates called region variables; interpreted
regular closed setsi.e., regionsof topological spaces. satisfiability problem
RCC-8 formulas interpretations NP-complete (Renz & Nebel, 1999).
expressive power RCC-8 rather limited. operates simple regions distinguish connected disconnected ones, regions
without holes, etc. (Egenhofer & Herring, 1991). RCC-8 represent complex relations two regions. Consider, example, three countries (say, Russia,
Lithuania Poland) one adjacent others,
point three meet. express fact may need ternary
predicate
EC3(Russia, Lithuania, Poland).
(4)
175

fiGabelaia, Kontchakov, Kurucz, Wolter, & Zakharyaschev

analyse possible ways extending expressive power RCC-8, convenient view fragment S4u (that RCC-8 embedded S4u first shown
Bennett, 1994). Observe first that, every spatial variable p, spatial term
CIp

(5)

interpreted regular closed set every topological model. So, every region
variable X RCC-8 associate spatial term %X = CIpX , pX spatial
variable, translate RCC-8 predicates spatial formulas taking:
(%
(I%
EC(X, ) = 3
X u %Y ) 3
X u I%Y ),
(%
DC(X, ) = 3
X u %Y ),
(%
(%
EQ(X, ) = 2
X @ %Y ) 2
@ %X ),
(%
(%
(I%
PO(X, ) = 3
X u I%Y ) 2
X @ %Y ) 2
@ %X ),
(%
(%
(%
TPP(X, ) = 2
X @ %Y ) 2
@ %X ) 2
X @ I%Y ),
(%
(%
NTPP(X, ) = 2
X @ I%Y ) 2
@ %X )

(TPPi NTPPi mirror images TPP NTPP, respectively). first
formulas, instance, says two regions externally connected iff intersection
regions empty, whereas intersection interiors is. clear
RCC-8 formula satisfiable topological space translation
S4u defined satisfiable topological model.
translation shows RCC-8 two regions related terms
truth/falsity atomic spatial formulas form
(% u % ),
2
1
2

(I% u I% ),
2
1
2

(%
2
1 @ %2 )



(%
2
1 @ I%2 ),

%1 %2 spatial terms form (5). example, first formulas
says intersection two regions empty, whereas last one states one region
contained interior another one. words, RCC-8 regarded part
following fragment S4u :
%

::= CIp,



::= %1 u %2




::= 2

|

| I%1 u I%2


| %1 @ %2

| %1 @ I%2 ,

| 1 2 .

distinguish two types spatial terms. form %
called atomic region termsthey represent (regular closed) regions want compare.
Spatial terms form used relate regions (note extensions
necessarily regular closed).
Actually, fragment introduced bit expressive RCC-8: example, contains (appropriately modified) formula (2) satisfied disconnected topological spaces, satisfiable RCC-8 formulas satisfiable
Euclidean space (Renz, 1998). However, convenient us distinguish
two spatial logics. First, turn technical results regarding computational complexity hold even combined temporal
176

fiCombining Spatial Temporal Logics: Expressiveness vs. Complexity

logics. second, intuitive concise language RCC-8 suitable
illustrations. instance, distinguish region variable X
(% u % ).
region term %X use DC(%1 , %2 ) abbreviation 3
1
2
definition suggests two ways increasing expressive power RCC-8
(while keeping regions regular closed):
(i) allowing complex region terms %,
(ii) allowing ways relating (i.e., complex terms ).
2.1.3 BRCC-8 Fragment S4u
language BRCC-8 Wolter Zakharyaschev (2000a) (see Balbiani, Tinchev, &
Vakarelov, 2004) extends RCC-8 direction (i). uses eight binary predicates
RCC-8 allows atomic regions intersections, unions complements. instance, BRCC-8 express fact region (say, Swiss
Alps) intersection two regions (Switzerland Alps case):
EQ(SwissAlps, Switzerland u Alps).

(6)

embed BRCC-8 S4u using almost translation case RCC-8.
difference now, since Boolean combinations regular closed sets
necessarily regular closed, prefix compound spatial terms CI. way
obtain, example, spatial term
CI (Switzerland u Alps)
representing Swiss Alps. manner treat set-theoretic operations,
leads us following definition Boolean region terms:
%

::=

CIp

| CI%

| CI(%1 u %2 ).

words, Boolean region terms denote precisely members well-known
Boolean algebra regular closed sets. (The union expressible via intersection

complement usual way.) simplify notation, given spatial term , write
denote result prefixing CI every subterm ; particular,






p = CIp,
= CI
1 u 2 = CI( 1 u 2 ).

Note (equivalent to) Boolean region term, every spatial term .
Swiss Alps example represented Switzerland u Alps .
interest note Boolean region terms increase complexity
reasoning arbitrary topological models: satisfiability problem BRCC-8 formulas
still NP-complete (however, becomes PSPACE-complete intended models based
connected spaces). hand, BRCC-8 allows restricted comparisons
two regions as, e.g., (6). Nevertheless, shall see below, ternary relations
(4) still unavailable BRCC-8: require different ways comparing regions;
cf. (ii).
177

fiGabelaia, Kontchakov, Kurucz, Wolter, & Zakharyaschev

2.1.4 RC
Egenhofer Herring (1991) proposed relate two regions terms 9-intersections33-matrix specifying emptiness/nonemptiness (nine) possible intersections
interiors, boundaries exteriors regions. Recall that, region X,
three disjoint parts space hU, Ii represented
IX,

X (U IX)



U X,

respectively. generalising approach finite number regions, obtain
following fragment RC S4u :
%

::= Boolean region terms,



::= %




::= 2

| I%
|

|



| 1 u 2 ,

| 1 2 .

words, RC define relations regions terms emptiness/nonemptiness sets formed using arbitrary set-theoretic operations regions
interiors. However, nested applications topological operators allowed (an
example applications required found next section).
Clearly, RCC-8 BRCC-8 fragments RC. Moreover, unlike BRCC-8,
language RC allows us consider complex relations regions. instance,
ternary relation required (4) defined follows:
(%
(I%
(I%
(I%
EC3(X, Y, Z) = 3
X u %Y u %Z ) 3
X u I%Y ) 3
u I%Z ) 3
Z u I%X ).

Another, abstract, example formula
% u u % I%
3
1

i+1 u u I%j u %j+1 u u %k u I%k+1 u u I%n



says
regions %1 , . . . , %i meet somewhere inside region occupied jointly
%i+1 , . . . , %j , outside regions %j+1 , . . . , %k inside %k+1 , . . . , %n .
Although RC expressive RCC-8 BRCC-8, reasoning language still computational complexity:
Theorem 2.2. satisfiability problem RC-formulas arbitrary topological models
NP-complete.
result proved Appendix A. Lemma A.1 shows every satisfiable RCformula satisfied model based Aleksandrov space induced
disjoint union n-broomsi.e., quasi-orders form depicted Fig. 4. Topological
spaces kind rather primitive structure satisfying following property:
(rc) roots n-brooms boundary points, minimal neighbourhood
every boundary pointi.e., n-broom containing pointmust contain
least one internal point least one external point.
178

fiCombining Spatial Temporal Logics: Expressiveness vs. Complexity

b

b
b
b
*

HH





J
]
H


HHJ
HJ b


depth 0
depth 1

Figure 4: n-broom (for n = 4).
example, spatial formula (3) cannot satisfied model property,
RC.
Lemma A.2, size satisfying model polynomial (in fact, quadratical)
length input RC-formula, nondeterministic polynomial time
algorithm. Actually, proof straightforward generalisation complexity proof
BRCC-8 given Wolter Zakharyaschev (2000a): difference
case BRCC-8 sufficient consider 2-brooms (which called forks).
means, particular, ternary relation (4)which satisfiable model
n-broom, n 3is indeed expressible BRCC-8.
Remark 2.3. topological terms, n-brooms examples so-called door spaces
every subset either open closed. However, modal theory n-brooms defines
wider interesting topological class known submaximal spaces every
dense subset open. Submaximal spaces around since early 1960s
generated interesting challenging problems topology. survey systematic
study spaces see (Arhangelskii & Collins, 1995) references therein.
2.1.5 RC max
One could go even direction (ii) impose restrictions whatsoever
ways relating Boolean region terms. leads us maximal fragment RC max
S4u spatial terms interpreted regular closed sets. syntax defined
follows:
%

::= Boolean region terms,



::= %




::= 2

|
|

| 1 u 2


| I,

| 1 2 ,

understand difference RC RC max , consider RC max -formula








3
q1 u q1 2
q1 u q1 @ C q1 u q2 u q2
.

(7)


says boundary q1 empty
every neighbourhood every
point
boundary contains internal point q1 belongs boundary
q2 (compare property (rc) above). simplest Aleksandrov model satisfying
formula depth 2; shown Fig. 5.
price pay expressivity complexity RC max
full S4u :
179

fiGabelaia, Kontchakov, Kurucz, Wolter, & Zakharyaschev

q1 q2

q1 q2

q1 q2

b
b
]
J



J


J b


b

depth 0








q1 q2


]
J


J
J

q1 q2 b

depth 1
depth 2

Figure 5: Model satisfying formula (7).
Theorem 2.4. satisfiability problem RC max -formulas PSPACE-complete.
upper bound follows Theorem 2.1 lower bound proved Appendix A, construct sequence RC max -formulas
satisfiable Aleksandrov space cardinality least exponential length
formula. first formula sequence similar (7) above.
interest note, however, RC max still expressive enough define
pathological sets p (3) clearly regular closed.
conclude section, summarise inclusions spatial languages
introduced above:
RCC-8

$

BRCC-8

$

RC

$

RC max

$

S4u .

discussions spatial logics kind refer reader paper (PrattHartmann, 2002).
2.2 Temporal Logics
said introduction, temporal components spatio-temporal hybrids
(fragments of) propositional temporal logic PT L interpreted various flows time
modelled strict linear orders F = hW, <i, W nonempty set time
points < (connected, transitive irreflexive) precedence relation W .
language PT L based following alphabet:
propositional variables p0 , p1 , . . . ,
Booleans ,
binary temporal operators U (until) (since).
set PT L-formulas defined standard way:


::=

p

|



| 1 2

| 1 U 2

| 1 2 .

PT L-models pairs form = hF, Vi F = hW, <i flow time
V, valuation, map associating variable p set V(p) W time
points (where p supposed true). truth-relation (M, w) |= , arbitrary
PT L-formula w W , defined inductively follows, (u, v) denotes open
interval {w W | u < w < v}:
180

fiCombining Spatial Temporal Logics: Expressiveness vs. Complexity

(M, w) |= p

w V(p),

iff

(M, w) |=

(M, w) 6|= ,

iff

(M, w) |= 1 2

(M, w) |= 1 (M, w) |= 2 ,

iff

(M, w) |= 1 U 2
u (w, v),

iff

v > w (M, v) |= 2 (M, u) |= 1

(M, w) |= 1 2
u (v, w).

iff

v < w (M, v) |= 2 (M, u) |= 1

PT L-formula satisfied (M, w) |= w W .
took operators U primitive simply important temporal
operators defined via them. example, 3F (sometime future) 2F
(always future) expressible via U
3F = > U ,

2F = 3F ,

(> logical constant true) means
(M, w) |= 3F

iff

v > w (M, v) |= ,

(M, w) |= 2F

iff

(M, v) |= v > w.

intended flows time strict linear orders, next-time operator
definable via U taking
= U





( logical constant false) perfectly reflects intuition: F discrete
(M, w) |=

iff

(M, w + 1) |= ,

w + 1 immediate successor w F. reader problems
defining past versions 3F , 2F .
following results due Sistla Clarke (1985) Reynolds (2003, 2004):
Theorem 2.5. satisfiability problem PT L-formulas PSPACE-complete
following classes flows time: strict linear orders, finite strict linear orders,
hN, <i, hZ, <i, hQ, <i, hR, <i.
Note, however, reasoning becomes somewhat simpler take 3F , 2F
past counterparts (but , U S) temporal primitives. Denote PT L2
corresponding fragment PT L. Then, according results Ono Nakamura
(1980), Sistla Clarke (1985), Wolter (1996), have:
Theorem 2.6. satisfiability problem PT L2 -formulas NP-complete
classes flows time mentioned Theorem 2.5.
181

fiGabelaia, Kontchakov, Kurucz, Wolter, & Zakharyaschev

3. Combinations Spatial Temporal Logics
section introduce discuss various ways combining logics space time.
First construct spatio-temporal logics satisfying (PC) principle (see introduction) show inherit good computational properties components.
encouraged results, consider maximal combinations S4u
(fragments of) PT L meeting (PC) (OC) see straightforward approach work: end undecidable logics. leads us systematic
investigation trade-off expressivity computational complexity spatiotemporal formalisms. result hierarchy decidable logics satisfying (PC) (OC)
whose complexity ranges PSPACE 2EXPSPACE.
3.1 Spatio-Temporal Logics (PC)
begin investigation combinations spatial temporal logics introduced
considering language PT L[S4u ] temporal operators applied
spatial formulas spatial terms (this way temporalising logic first
introduced Finger Gabbay, 1992). precise syntactic definition PT L[S4u ]-terms
PT L[S4u ]-formulas follows:


::= p




::= 2

|
|

| 1 u 2


| I,

| 1 2

| 1 U 2

| 1 2 .

Note definition PT L[S4u ]-terms coincides definition spatial terms
S4u reflects fact PT L[S4u ] cannot capture change spatial objects
time. imposed restrictions upon temporal operators formulasso
combined language still full expressive power PT L. (Clearly, S4u fragment
PT L[S4u ].)
similar way introduce spatio-temporal logics based spatial
languages dealing with: RCC-8, BRCC-8, RC RC max . example, temporalisation PT L[BRCC-8] BRCC-8 (denoted ST 0 hierarchy Wolter
Zakharyaschev 2002) allows applications temporal operators RCC-8 predicates
Boolean region terms. languages regarded fragments PT L[S4u ]
precisely way spatial components treated fragments S4u .
illustrate expressive power PT L[RCC-8] formalising sentences (A) (B)
introduction:
DC(Image1 , Image2 ) DC(Image1 , Image2 ) EC(Image1 , Image2 ),

DC(Kaliningrad, EU) U TPP(Poland, EU)
2F

(A)
(B)


TPP(Poland, EU) EC(Kaliningrad, EU) .

Sentences (C)(H) cannot expressed language (or even PT L[S4u ]): require
comparisons states spatial objects different time instants.
intended semantics PT L[S4u ] (and spatio-temporal logics considered
paper) rather straightforward. topological temporal model (a tt-model, short)
triple form = hF, T, Ui, F = hW, <i flow time, = hU, Ii
182

fiCombining Spatial Temporal Logics: Expressiveness vs. Complexity

topological space, U, valuation, map associating every spatial variable p
every time point w W set U(p, w) U space occupied p moment
w; see Fig. 1. valuation U inductively extended arbitrary PT L[S4u ]-terms (i.e.,
spatial terms) precisely way S4u , add time point
parameter:
U( , w) = U U(, w),

U(1 u 2 , w) = U(1 , w) U(2 , w),

U(I, w) = IU(, w).

truth-values PT L[S4u ]-formulas defined way PT L:

(M, w) |= 2

(M, w) |=

iff
iff

U(, w) = U ,
(M, w) 6|= ,

(M, w) |= 1 2

iff

(M, w) |= 1

(M, w) |= 1 U 2
u (w, v),

iff

v > w (M, v) |= 2 (M, u) |= 1

(M, w) |= 1 2
u (v, w).

iff

v < w (M, v) |= 2 (M, u) |= 1



(M, w) |= 2 ,

pure temporal case, operators 2F , 3F , well past counterparts
defined terms U S.
PT L[S4u ]-formula said satisfiable exists tt-model
(M, w) |= time point w.
following optimal complexity result obtained Appendix B.1:
Theorem 3.1. satisfiability problem PT L[S4u ]-formulas tt-models based
arbitrary flows time, (arbitrary) finite flows time, hN, <i, hZ, <i, hQ, <i, hR, <i,
PSPACE-complete.
proof theorem based fact interaction spatial
temporal components PT L[S4u ] restricted. fact, every PT L[S4u ]-formula
one construct PT L-formula replacing every occurrence (spatial) subformula
fresh propositional variable p . Then, given PT L-model N = hF, Vi
2

moment time w, take set
| (N, w) |= p } {2
| (N, w) |= p }
w = {2



spatial formulas. hard see w satisfiable every w F,
tt-model satisfying based flow F. Now, check whether satisfiable,
suffices use suitable nondeterministic algorithm (see, e.g., Sistla & Clarke, 1985;
Reynolds, 2003, 2004) guesses PT L-model then, time point w,
check satisfiability w . done using polynomial space length .
Theorem 3.1 (together Theorem 2.5) shows spatio-temporal logics
form PT L[L], L {RCC-8, BRCC-8, RC, RC max }, PSPACE-complete
standard flows time.
183

fiGabelaia, Kontchakov, Kurucz, Wolter, & Zakharyaschev

let us consider temporalisations spatial logics (NP-complete) fragment PT L2 PT L. Theorems 2.4 3.1, PT L2 [S4u ] PT L2 [RC max ]
PSPACE-complete. However, simpler (NP-complete) spatial components obtain
better result:
Theorem 3.2. satisfiability problem PT L2 [RC]-formulas tt-models based
classes flows time mentioned Theorem 3.1 NP-complete.
proof essentially Theorem 3.1, nondeterministic
polynomial-time algorithms component logics available. follows Theorem 3.2 PT L2 [RCC-8] PT L2 [BRCC-8] NP-complete well.
3.2 Maximal Combinations (PC) (OC)
saw previous section, computational complexity spatio-temporal logics
without (OC) maximum complexity components, reflects
limited interaction spatial temporal operators languages without
means expressing (OC).
maximalist approach constructing spatio-temporal logics capable capturing
(PC) (OC) allow unrestricted applications Booleans, topological
temporal operators form spatio-temporal terms.
Denote PT L S4u spatio-temporal language given following definition:


::= p




::= 2

|
|

| 1 u 2


|

| 1 2

| 1 U 2

| 1 U 2

| 1 2 ,
| 1 2 .

Expressions form called spatio-temporal terms. Unlike previous section,
terms time-dependent. definition expressions form
PT L[S4u ]; called PT L S4u -formulas. languages
Section 3.1, including PT L[S4u ], clearly fragments PT L S4u .
before, introduce temporal operators 2F , 3F , well past
counterparts applicable formulas. Moreover, operators used form
spatio-temporal terms: example,
3F = > U ,

2F = 3F





= U ,

denotes empty set > whole space.
Spatio-temporal formulas supposed represent propositions speaking moving
spatial objects represented spatio-temporal terms. truth-values propositions
spatio-temporal structures vary time, depend points spacesthey
defined precisely way case PT L[S4u ]. understand
temporalised terms?
meaning clear: moment w, denotes space occupied
next moment w + 1 (see Fig. 2). example, write




Cyclone
3
u Cyclone
184

(C)

fiCombining Spatial Temporal Logics: Expressiveness vs. Complexity

say regions Cyclone
introduction). formula

Cyclone

overlap (thereby formalising sentence (C)

EQ( EU, EU Romania Bulgaria)

(F)

says two years EU (as today) extended Romania Bulgaria.
Note EQ(EU, EU Romania Bulgaria) different meaning EU
may expand shrink year. hard formalise sentences (D), (E) (H)
introduction:
EQ( X, ) EQ(Y, ),

(D)

2F EQ( Europe, Europe),

(E)

EQ(Earth, W L) EC(W, L) P(W, W ) P( L, L),

(H)

P(X, )X part denotes disjunction EQ(X, ), TPP(X, )
NTPP(X, ).
intended interpretation terms form 3F , 2F (and past counterparts)
bit sophisticated. reflects standard temporal meanings propositions
3F x 2F x , points x topological space:
moment w, term 3F interpreted union spatial extensions
moments v > w;
moment w, term 2F interpreted intersection spatial extensions
moments v > w.
example, consider Fig. 2 moving spatial object X depicted three consecutive
moments time (it change + 2). 3F X union X
X 2F X intersection X X (i.e., X).
another example, take spatial object Rain.
3F Rain moment w occupies space raining time points
v > w (which may different different places). 2F Rain w occupies space
always raining w.
2F 3F Rain w space raining ever ever w,
3F 2F Rain comprises places always raining starting
future moments time.
interpretation shows formalise sentence (G) introduction:
P(England, 2F 3F Rain).

(G)

Now, meaning Rain U Snow? Similarly readings 2F
3F above, adopt following definition:
moment w, spatial extension 1 U 2 consists points x topological
space v > w x belongs 2 moment v x 1
u whenever w < u < v.
185

fiGabelaia, Kontchakov, Kurucz, Wolter, & Zakharyaschev

past counterpart Ui.e., operator since Scan used say part
Russia remaining Russian since 1917 connected part Germany
(Konigsberg) became Russian Second World War (Kaliningrad):
DC(Russia Russian Empire, Russia Germany).
models = hF, T, Ui PT L S4u precisely topological temporal
models introduced PT L[S4u ]. However, need additional clauses defining
extensions spatio-temporal terms:

[
\
U(1 U 2 , w) =
U(2 , v)
U(1 , u) ,
v>w

U(1 2 , w) =

[

u(w,v)

U(2 , v)

v<w

\


U(1 , u) .

u(v,w)

have:
U(3F , w) =

[

U(, v)



U(2F , w) =

v>w

\

U(, v),

v>w

and, discrete F,
U( , w) = U(, w + 1).
truth-values PT L S4u -formulas computed precisely way
case PT L[S4u ]. PT L S4u -formula called satisfiable exists tt-model
(M, w) |= time point w.
first sight may appear computational properties constructed logic badafter all, spatial temporal components PSPACEcomplete. turns out, however, case:
Theorem 3.3. satisfiability problem PT L S4u -formulas tt-models based
flows time hN, <i hZ, <i undecidable.
Without going details proof theorem, one might immediately conjecture use infinitary operators U, 2F 3F construction
spatio-temporal terms makes logic over-expressive. Moreover, whole idea
topological temporal models based infinite flows time may look counterintuitive
context spatio-temporal representation reasoning (unlike, say, models used
represent behaviour reactive computer systems).
different approaches avoid infinity tt-models. radical one
allow finite flows time. cautious approach impose following finite
change assumption models (based infinite flows time):
FCA term change spatial extension infinitely often.
means FCA consider valuations U tt-models hF, T, Ui
satisfy following condition: every spatio-temporal term , pairwise
disjoint intervals I1 , . . . , F = hW, <i W = I1 state
remains constant Ij , i.e., U(, u) = U(, v) u, v Ij . turns out, however,
186

fiCombining Spatial Temporal Logics: Expressiveness vs. Complexity

case discrete flows time FCA give us anything new compared
arbitrary finite flows time. precisely, one easily show satisfiability
problem PT L S4u -formulas tt-models satisfying FCA based hN, <i
hZ, <i polynomially reducible satisfiability tt-models based finite flows time,
way round. Note flows time mentioned above, FCA
captured formulas 3F 2F EQ(, F ) (and past counterpart hZ, <i),
every spatio-temporal term .
liberal way reducing infinite unions intersections finite ones
adopt finite state assumption:
FSA Every term may finitely many possible states (although may
change states infinitely often).
Say tt-model hF, T, Ui satisfies FSA if, every spatio-temporal term ,
finitely many sets A1 , . . . , space {U(, w) | w W } = {A1 , . . . , }.
models used, instance, capture periodic fluctuations due season
climate changes, say, daily tide. Similarly FCA finitising flow time, FSA
virtually makes underlying topological space finite. following proposition
proved Appendix B:
Proposition 3.4. PT L S4u -formula satisfiable tt-model FSA based
flow time F iff satisfiable tt-model based F finite (Aleksandrov )
topological space.
Unfortunately, none approaches works PT L S4u still have:
Theorem 3.5. (i) satisfiability problem PT L S4u -formulas tt-models based
(arbitrary) finite flows time undecidable.
(ii) satisfiability problem PT L S4u -formulas tt-models based flows
time hN, <i hZ, <i satisfying FSA undecidable.
next-time operator look harmful infinitary U, 2F , 3F ,
still capture aspects (OC) (see formulas (C), (D), (F) (G) above). let
us consider fragment PT L S4u PT L S4u spatio-temporal terms form:


::=

p

|

| 1 u 2

|

|

.

words, PT L S4u allow applications temporal operators different
form spatio-temporal terms (but still available formula constructors).
means compare states spatial object X bounded set time
points only: time point natural numbers n, 0, compare
state X + n state + m.
fragment definitely less expressive full PT L S4u . instance, according
Lemma B.1, PT L S4u -formulas distinguish arbitrary tt-models
based Aleksandrov topological spaceswe call Aleksandrov tt-models.
hand, set PT L S4u -formulas satisfiable Aleksandrov models
proper subset satisfiable arbitrary tt-models. Consider, example,
PT L S4u -formula
(2 Ip @ I2 p).
2
F
F
187

fiGabelaia, Kontchakov, Kurucz, Wolter, & Zakharyaschev

One readily see true every Aleksandrov tt-model, negation
satisfied topological model. suffices take flow F = hN, <i topology
= hR, Ii
standard interior operator real line, select sequence Xn
open sets nN Xn open, e.g., Xn = (1/n, 1/n), put U(p, n) = Xn .
However, even seemingly weak interaction topological temporal operators turns dangerous:
Theorem 3.6. satisfiability problem PT L S4u -formulas tt-models based
flows time hN, <i hZ, <i undecidable. undecidable well tt-models
satisfying FSA based (arbitrary) finite flows time.
Theorem 2.6 might suggest considering fragment PT L2 S4u 2F past
counterpart 2P temporal primitives applicable formulas terms:


::= p




::= 2

|
|

| 1 u 2


|

| 1 2

| 2F

| 2F

| 2P ,

| 2P .

Yet result negative:
Theorem 3.7. satisfiability problem PT L2 S4u -formulas tt-models (with
without FSA) based flows time hN, <i hZ, <i undecidable. undecidable
well tt-models based (arbitrary) finite flows time.
undecidability results (the strongest ones, Theorems 3.6 3.7,
precise) proved Appendix B.2 reduction Posts correspondence problem
known undecidable (Post, 1946). see proofs,
theorems actually hold future fragments corresponding languages.
3.3 Decidable Spatio-Temporal Logics (PC) (OC)
important lesson learn (the proofs of) negative results Section 3.2
full S4u expressive computationally well-behaved combinations fragments
PT L. hand, said Section 2.1.2, qualitative spatial representation
reasoning often requires extensions spatial variables regular closed (i.e., regions).
restriction important constructing decidable spatio-temporal logics
(PC) (OC). First, undecidability proofs Appendix B.2 go
case. second, shown below, decidable combinations PT L
fragments S4u introduced Section 2.1 exist. fact, construct
hierarchy decidable spatio-temporal logics different computational complexity
imposing various restrictions regions themselves, ways compared,
interactions spatial temporal constructors.
begin considering simplest combination PT L RCC-8 capturing (PC)
(OC). logic called PT LRCC-8 (it introduced name ST
1 Wolter
Zakharyaschev, 2002) operates spatio-temporal region terms form
%

::=

CIp

| CI %.

relate terms, allowed use eight binary predicates RCC-8; arbitrary temporal operators Boolean connectives applied produce PT L RCC-8
188

fiCombining Spatial Temporal Logics: Expressiveness vs. Complexity

formulas. Typical examples formulas (A), (B), (D) (E) above. Note
(C) regarded PT L RCC-8 formula well (two regions overlap iff
neither disconnected externally connected). hand, (F), (H) (G)
PT LRCC-8 formulas first two use operation region terms (G)
uses temporal operators 2F 3F region terms.
before, PT L RCC-8 formulas interpreted topological temporal models (or
tt-models). However, discrete flows time make sense language. Although
interaction topological temporal operators similar PT L S4u
(clearly, PT LRCC-8 fragment PT LS4u ), following rather unexpected
encouraging result:
Theorem 3.8. satisfiability problem PT L RCC-8 formulas tt-models based
hN, <i, hZ, <i (arbitrary) finite flows time PSPACE-complete.
theorem proved Appendix C.5. idea proof similar
Theorem 3.1: consider spatial temporal parts given formula separately.
However, take account interaction parts, use so-called
completion property RCC-8 (cf. Balbiani & Condotta, 2002) respect certain
class C models: given satisfiable set RCC-8 formulas model C satisfying
subset , one extend partial model model C satisfying whole .
happens extend expressive power spatial component allowing
Boolean operators spatio-temporal region terms, i.e., jump RCC-8 BRCC-8?
Define spatio-temporal Boolean region terms taking
%

::=

CIp

| CI%

| CI(%1 u %2 ) | CI %.

Denote PT L BRCC-8 language obtained PT L RCC-8 allowing spatiotemporal Boolean region terms arguments RCC-8 predicates (this language
called ST 1 Wolter Zakharyaschev, 2002). Formulas (A)(F) (H) belong
PT L BRCC-8, (G) uses 2F 3F operators regions PT L
BRCC-8.
Now, another surprise replacement RCC-8 BRCC-8 temporal
context results exponential jump computational complexity (remember
RCC-8 BRCC-8 NP-complete):
Theorem 3.9. satisfiability problem PT L BRCC-8 formulas tt-models based
flows time hN, <i hZ, <i EXPSPACE-complete. EXPSPACE-complete
well models satisfying FSA based (arbitrary) finite flows time.
EXPSPACE upper bound (see Appendix C.3) proved polynomial embedding PT L BRCC-8 one-variable fragment QT L1 first-order temporal logic,
known EXPSPACE-complete (Hodkinson, Kontchakov, Kurucz, Wolter, &
Zakharyaschev, 2003). construct embedding, first show PT L BRCC-8
complete respect Aleksandrov tt-models. fact, prove every satisfiable
formula expressive logic PT L S4u introduced Section 3.2 satisfied
Aleksandrov tt-model (see Lemma B.1 discussion above). Lemma C.1
shows satisfy PT L BRCC-8 formula, suffices take Aleksandrov tt-model
189

fiGabelaia, Kontchakov, Kurucz, Wolter, & Zakharyaschev

based partial order depth 1. Lemma C.2, width partial order
bounded 2 (just case BRCC-8), therefore unions forks (or 2-brooms)
enough satisfy PT L BRCC-8 formulas. Aleksandrov tt-models based
unions forks encoded means unary predicates QT L1 .
EXPSPACE lower bound proved Appendix C.1 encoding corridor
tiling problem. established direct polynomial embedding QT L1
PT LBRCC-8. illustrate idea, consider QT L1 -formula x (P (x) P (x)) saying
that, every point space, either P tomorrow.
statement expressed PT L BRCC-8 formula EQ(P P, E) DC(E, E),
last conjunct makes E empty.
let us make one step space extend BRCC-8 RC, thus obtaining
spatio-temporal language PT L RC following syntax:
%

::= CIp



::= %




::= 2

| CI%

| I%
|

| CI(%1 u %2 ) | CI %,

|



| 1 u 2 ,

| 1 2

| 1 U 2

| 2 2 .

reader surprised (although authors were) extra expressivity results one exponential gap:
Theorem 3.10. satisfiability problem PT L RC-formulas tt-models based
flows time hN, <i hZ, <i 2EXPSPACE-complete. 2EXPSPACE-complete
well models satisfying FSA based (arbitrary) finite flows time.
lower bound established Appendix C.1 upper bound Appendix C.2.
Perhaps, proper time closer look emerging landscape.
exactly causes exponential jumps ? locate precise borders ladder
PSPACEEXPSPACE2EXPSPACE?
analysing proof Theorem 3.8 (see Appendix C.5), note much
added RCC-8. fact, maximal spatio-temporal logic (denoted PT LRC 2 )
proof goes based spatio-temporal terms form
| CI %,

%

::= CIp



::= %



::= 1 u 2 .

| I%

| %

| I%,

hand, even addition predicates form EQ(X, Z) enough
make logic EXPSPACE-hard (see Remark C.3). Thus, PT L RCC-8 (or rather
extension PT L RC 2 ) located pretty close border PSPACE
EXPSPACE spatio-temporal logics.
following fragment RC RC indicates border EXPSPACE
2EXPSPACE may lie:
%

::= Boolean region terms,



::= %

| ,



::= I%

|



::= 1 u u

| 1 u 2 ,

190

| u

| .

fiCombining Spatial Temporal Logics: Expressiveness vs. Complexity

Intuitively, spatial terms interpreted regular closed regular open4
sets, respectively (the interior region regular open, complement regular closed
set regular open (and vice versa), regular closed sets closed unions regular
open ones closed intersections). Thus, regarded generalisation
region terms generalisation interiors regions. words, RC
fragment RC following ways relating regions available:
point regions meet;
region intersects interior another one;
interior region empty.
readily checked BRCC-8 fragment RC . Moreover, proper fragment
(4) belongs latter former. formula





( N orthKorea
2
u SouthKorea ) @ DmZone
(8)
(saying demilitarised zone North Korea South Korea consists
border along adjacent territories) shows RC
proper subset RC:
BRCC-8 $ RC $ RC.
Although RC extends BRCC-8, gives rise spatio-temporal logic
computational complexity:
Theorem 3.11. satisfiability problem PT L RC -formulas tt-models based
flows time hN, <i hZ, <i EXPSPACE-complete. EXPSPACE-complete
well models satisfying FSA based (arbitrary) finite flows time.
lower bound follows immediately Theorem 3.9 proof upper
bound similar Theorem 3.9 (see Appendix C.3). Again, due restriction
possible ways relating regions, polynomially bound width n n-brooms
required satisfy PT LRC -formulas (cf. Lemma C.2). fact, need formulas
similar (8) order increase complexity 2EXPSPACE.
constructed hierarchy decidable spatio-temporal logics still leaves least one
important question: exist decidable spatio-temporal logics allow applications
temporal operators U, 2F , 3F region terms complexity? Consider
languages PT L L, L {BRCC-8, RC , RC}, differ PT L L
definition spatio-temporal region terms:
%

::=

CIp

| CI%

| CI(%1 u %2 ) | CI(%1 U %2 ) | CI(%1 %2 ).

following two theorems provide positive (though partial) answer question:
Theorem 3.12. satisfiability problem PT L BRCC-8 PT L RC -formulas
tt-models based hN, <i hZ, <i satisfying FSA, based (arbitrary) finite
flows time EXPSPACE-complete.
4. Remember set X regular open ICX = X.

191

fiGabelaia, Kontchakov, Kurucz, Wolter, & Zakharyaschev

Theorem 3.13. satisfiability problem PT L RC-formulas tt-models based
hN, <i hZ, <i satisfying FSA, based (arbitrary) finite flows time
2EXPSPACE-complete.
upper bounds mentioned two theorems proved Appendices C.3
C.2, respectively. lower bounds follow results PT LBRCC-8 (Theorem 3.9)
PT L RC (Theorem 3.10).
appreciate following theorem, reader recall PT L2 RC
NP-complete:
Theorem 3.14. satisfiability problem PT L2 BRCC-8 PT L2 RC -formulas
tt-models based hN, <i hZ, <i satisfying FSA, based (arbitrary) finite
flows time EXPSPACE-complete.
Actually consequence EXPSPACE-hardness QT L1 sole temporal
operator 2F (see Hodkinson et al., 2003).
Unfortunately, little known complexity spatio-temporal languages interpreted tt-models based dense arbitrary flows time. fact,
result know proved using recent work (Hodkinson, 2004; Hodkinson et al.,
2003):
Theorem 3.15. satisfiability problem PT L BRCC-8 PT L RC -formulas
tt-models satisfying FSA based hQ, <i, hR, <i arbitrary flows time belongs
2EXPTIME EXPSPACE-hard.

4. Conclusion
provided in-depth analysis computational complexity various spatiotemporal logics interpreted Cartesian products flows time topological spaces.
results collected Table 1. design languages driven
idea cover basic features spatio-temporal hybrids combining standard logics
time mereotopology, aim see complex reasoning
hybrids could be. try fine-tune languages real-world applications.
contrary, tried keep pure representative possible determine
computational challenges multi-dimensional approach reasoning space
time would face. research objective mind, discuss conclusions
drawn Table 1.
conclusion drawn undecidability results easy: try
implement sound, complete terminating algorithm supposed decide
satisfiability problem PT L S4u , PT L S4u PT L2 S4u never succeed.
decision procedures required, alternative languages devised.
interpretation complexity results decidable logics transparent:
well-known results provide us immediate conclusions regarding
behaviour implemented systems. example, sometimes algorithms running
exponential time worst-case perform better practical problems worst-case
optimal algorithms run polynomial time. Indeed, complexity results
analysed together proofsif significant conclusions required (cf. Nebel, 1996).
192

filanguage

n/a

spatial component L

flow
RCC-8

PT L[L]

N, Z,Q, R,
finite

arbitrary
N, Z

PT L2 L

RC

RC max

NP

PSPACE

PSPACE

(Thm. 2.4)

(Thm. 2.1)

NP

PSPACE

(Thm. 3.2)

(Thm. 3.1)

PSPACE
(Thm. 3.1)

PSPACE
(Thm. 3.8)


finite
EXPSPACE

PSPACE
N, Z+FSA

EXPSPACE

2EXPSPACE

(Thm. 3.9)

(Thm. 3.10)

?

?


finite
EXPSPACE EXPSPACE
2EXPSPACE

NP
EXPSPACE
(Thm. 3.14)
N, Z+FSA
arbitrary


2EXPTIME
2EXPTIME
?
Q, R
NP
EXPSPACE
FSA

undecidable
(Thm. 3.6)

undecidable
(Thm. 3.7)



N, Z

S4u

(Thm. 2.2)

NP

N, Z

PT L L

BRCC-8

N, Z,Q, R,
finite

arbitrary

PT L L

PT L2 [L]

time

L

Combining Spatial Temporal Logics: Expressiveness vs. Complexity

?

?

?

undecidable

?

(Thm. 3.3)


finite
EXPSPACE EXPSPACE

PSPACE
(Thm. 3.12)
N, Z+FSA

arbitrary
2EXPTIME

2EXPTIME

EXPSPACE
Q, R
PSPACE
(Thm. 3.15)
FSA

2EXPSPACE

?

(Thm. 3.13)

?

undecidable
(Thm. 3.5)

?

?

Table 1: Complexity satisfiability problem spatial spatio-temporal logics.

193

fiGabelaia, Kontchakov, Kurucz, Wolter, & Zakharyaschev

proofs show sources complexity whether could
relevant practical problems implementation algorithms.
respect proofs actually rather informative. decidability proof
PT L[S4u ] immediately provides us modular algorithm combining known procedures components. EXPSPACE-completeness results PT L BRCC-8
(with FSA) PT L BRCC-8 show extremely close link spatio-temporal
languages one-variable fragment first-order temporal logic. algorithmic
problems investigated context first-order temporal logic are, therefore,
character deal spatio-temporal context. Thus, experience
working algorithms (fragments of) first-order temporal logics (Hodkinson, Wolter,
& Zakharyaschev, 2000; Degtyarev, Fisher, & Konev, 2003; Kontchakov, Lutz, Wolter, &
Zakharyaschev, 2004) pretty good knowledge almost directly
translates insights possible algorithms spatio-temporal logics. PSPACEcompleteness result PT L RCC-8 obtained means reduction (modulo RCC-8
reasoning) PT L. conclude proof sufficient
good solvers RCC-8 PT L obtain reasonable prover PT L RCC-8.
interaction two components turned rather weak.
conclusion, complexity proofs clearly show algorithmic problems solved
dealing spatio-temporal logics presented paper. particular, devising
algorithms logics conceived part general enterprise
developing algorithms propositional one-variable fragment first-order temporal
logic.
comments explanations important results Table 1:
1. undecidability result PT L S4u , PT L S4u PT L2 S4u solves major
open problem Wolter Zakharyaschev (2002). shows that, S4u
suitable candidate efficient pure spatial reasoning (Bennett, 1996; Renz & Nebel,
1998; Aiello & van Benthem, 2002a), temporal extensions satisfying (PC)
(OC) suitable practical spatio-temporal representation reasoning.
2. Logics PT L BRCC-8 may turn undecidable interpreted
arbitrary topological temporal models. One main origins expressive
power possibility form infinite intersections unions regions. However,
tame computational behaviour logics imposing natural restrictions
classes admissible models FSA.
3. PSPACE upper bound PT L RCC-8 EXPSPACE lower bound
PT L BRCC-8 solve two major open problems Wolter Zakharyaschev
(2002). interest note spatial fragments PT L RCC-8
PT L BRCC-8 computational complexity: NP-complete
arbitrary topological spaces. Thus additional Boolean connectives spatial
regions interacting next-time operator make logic substantially
complex.
4. 2EXPSPACE-completeness result PT L RC FSA PT L RC another example seemingly tiny increase expressiveness results significant
jump complexity.
194

fiCombining Spatial Temporal Logics: Expressiveness vs. Complexity

5. PSPACE-completeness PT L RCC-8 particularly good news, since shows
combination PT L RCC-8 computational complexity
PT L itself, surprisingly fast systems implemented (Schwendimann, 1998; Hustadt & Konev, 2003). gives us hope practical algorithms
PT LRCC-8 implemented. Indeed, proof shows may possible
encode satisfiability problem PT LRCC-8 satisfiability problem
PT L use PT L provers. note complexity result conjectured Demri DSouza (2002) proof uses ideas Balbiani
Condotta (2002).
6. hand, EXPSPACE lower bounds PT L BRCC-8 FSA
PT LBRCC-8 necessarily mean reasoning logics hopeless.
fact, show regarded fragments one-variable firstorder temporal logic, tableau- resolution-based decision procedures
developed implemented (Degtyarev et al., 2003; Kontchakov et al., 2004).
course, many directions research spatio-temporal knowledge representation reasoning. mention closely related
logics considered above.
paper, confined considering linear flows time. may
interest, however, investigate computational properties spatio-temporal
logics based branching time paradigm (see, e.g., Clarke & Emerson, 1981;
Emerson & Halpern, 1985) order model uncertainty future. Recent
results Hodkinson, Wolter Zakharyaschev (2001, 2002) give hope
logics decidable.
confined considering mereotopological formalisms spatial
dimension. would interest consider spatial logics directions (Ligozat,
1998), shape (Galton & Meathrel, 1999), size (Zimmermann, 1995), position (Clementini, Di Felice, & Hernandez, 1997), even hybrids (Gerevini & Renz, 2002).
note results direction recently obtained Balbiani
Condotta (2002) Demri DSouza (2002).
Another interesting important perspective spatial spatio-temporal
representation reasoning move arbitrary topological spaces
induced metric spaces introduce explicit and/or implicit numerical parameters.
First encouraging steps direction made work (Kutz, Sturm,
Suzuki, Wolter, & Zakharyaschev, 2003).
conclude paper number open problems:
1. precise computational complexity PT L BRCC-8 FSA
dense flows time arbitrary strict linear orders?
2. logics form PT L L PT L2 L, L {RC, BRCC-8, RCC-8},
decidable without FSA?
195

fiGabelaia, Kontchakov, Kurucz, Wolter, & Zakharyaschev

3. combinations PT L PT L2 RC max (satisfying (PC) (OC))
decidable?
4. PT L S4u undecidable dense flows time arbitrary strict linear orders?
5. PT L RCC-8 FSA decidable PSPACE?

Acknowledgments
work paper partially supported U.K. EPSRC grants no. GR/R45369/01,
GR/R42474/01, GR/S61966/01 GR/S63182/01. work third author
partially supported Hungarian Foundation Scientific Research grants T30314
035192.
Special thanks due referees first version paper whose remarks,
criticism constructive suggestions led many days intensive exciting
research, new results and, hopefully, better paper.

Appendix A. Complexity Spatial Logics
appendix prove Theorems 2.2 2.4. proofs use fact S4u
(as well fragments) complete respect (finite) Aleksandrov topological spaces
(McKinsey & Tarski, 1944; Goranko & Passy, 1992). Recall p. 174 Aleksandrov
(topological ) model pair form = hG, Vi, G = hV, Ri quasi-order
V map set spatial variables 2V . convenient us
unify notation spatial formulas spatial terms write (M, x) |= instead
x V( ), spatial term x point V . particular, definition
interior closure operators Aleksandrov spaces,
(M, x) |=

iff

(M, x) |= C

iff


V xRy (M, y) |= ,

V xRy (M, y) |= .

length `() formula understand number subformulas subterms occurring .
Proof Theorem 2.2. proof follows Lemmas A.1 A.2 show
together every satisfiable RC-formula satisfied Aleksandrov model size
polynomial (in fact, quadratical) length input formula (in words, RC
polynomial finite model property). Thus, nondeterministic polynomial time
algorithm satisfiability problem.
q
fact, Lemma A.1 shows RC complete respect subclass Aleksandrov
spaces, namely, finite disjoint unions finite brooms. Recall p. 179 broom
partial order b form h{r} V0 , Ri, R reflexive closure {r} V0
(see Fig. 4). call r root b points V0 leaves b; referred
points depth 1 0, respectively. broom b said -broom, ,
|V0 | . particular, call broom finite n-broom, n < .
196

fiCombining Spatial Temporal Logics: Expressiveness vs. Complexity

Lemma A.1. Every satisfiable RC-formula satisfied Aleksandrov model based
finite disjoint union finite brooms.
Proof. well-known, RC-formula satisfiable satisfied finite
Aleksandrov model = hG, Vi, G = hV, Ri. Define new relation R0 V taking R0
reflexive closure R (V1 V0 ),
V0 = {x V | (xRy yRx)}

V1 = V V0 .

(Without loss generality may assume V1 6= V0 one
proper R-predecessor.) Let G0 = hV, R0 M0 = hG0 , Vi. Clearly, G0 partial order
required. prove that, every RC-formula ,
|=

iff

M0 |= .

(9)

First show that, every Boolean region term % every x V ,
(M0 , x) |= %

iff

(M, x) |= %.

(10)

definition, (M0 , x) |= p iff (M, x) |= p, every spatial variable p. readily seen
every V0 every spatial term , (M0 , y) |= iff (M, y) |= . Now, %
Boolean region term % = CI spatial term , clearly have:

(M, x) |= CI iff V xRy z V (yRz (M, z) |= )

iff V0 xR0 (M, y) |=

iff V0 xR0 (M0 , y) |=

iff V0 xR0 (M0 , y) |=
iff

(M0 , x) |= CI.

Next, extend (10) spatial terms form I% % Boolean region term.
(M, x) |= I% (M, y) |= % whenever xRy, so, R0 R, (M0 , x) |= I%.
Conversely, suppose (M0 , x) |= I%. Take xRy z V0 yRz.
claim (M, z) |= %. Indeed, x V1 follows IH xR0 z. x V0
zRx. Since (M0 , x) |= %, IH % = CI , obtain (M, z) |= %. (M, y) |= %
follows yRz % = CI . Thus, (M, x) |= I%.
Finally, easily extend (10) arbitrary spatial terms formulas RC
constructed spatial terms form % I%, % Boolean region term,
using operators depend structure underlying partial order. Thus
(9).
q
Lemma A.2. Every satisfiable RC-formula satisfied Aleksandrov model based
disjoint union `() many 2`()-brooms.
Proof. Remember every RC-formula (equivalent to) Boolean combination
5
,...,3

, spatial term
spatial formulas set = {3
1
}. 3

5. following proof consider

abbreviation 3
primary 2
.
3

197

fiGabelaia, Kontchakov, Kurucz, Wolter, & Zakharyaschev

Boolean (or rather set-theoretic) combination %1 , . . . , %k , I%01 , . . . , I%0m ,
%i %0i Boolean region terms.
follows Lemma A.1 satisfied Aleksandrov model = hG, Vi,

G = hV, Ri finite disjoint union finite brooms. every 3


|= 3 , fix point x V (M, x ) |= . may assume x
.
pairwise distinct roots brooms points form x 3

.
Therefore, G disjoint union `() many finite brooms b , 3

,
Let us construct new model M0 follows. broom b , 3

% , pick
leaf y,% b (if any) (M, y,% ) |= %,
leaf y,% b (if any) (M, y,% ) |= %
remove leaves b . Denote b0 resulting broom. Clearly, 2`() , M0 = hG0 , Vi.
broom. Let G0 = hV 0 , R0 disjoint union b0 , 3

easy see G0 required.
,
Now, show satisfied M0 , suffices prove that, 3


M0 |= 3

iff

.
|= 3

(11)

definition M0 , leaves G0 spatial terms ,
(M0 , y) |=

iff

(M, y) |= .


Next, every root x b , every 3
every % , (M, x ) |= % iff
leaf x Ry (M, y) |= % (simply % = CI, ).
follows construction M0 (M, x ) |= % iff (M0 , x ) |= %, every % .
follows (M, x ) |= I% implies (M0 , x ) |= I%. Conversely, (M0 , x ) |= I%,
(M, x ) 6|= I% leaf x Ry (M, y) 6|= % contradiction.
Since intersection complement depend structure underlying frame,
(M0 , x ) |= iff (M, x ) |= , every root x b , proves (11).
q

Proof Theorem 2.4. PSPACE upper bound follows Theorem 2.1. proof
PSPACE-hardness reduction validity problem quantified Boolean formulas
known PSPACE-complete (Stockmeyer, 1987). slightly modify
proof Ladner (1977) (that shows PSPACE-hardness S4), order take
account variables RC max -formulas always prefixed CI.
may assume quantified Boolean formulas form
= Q1 p1 . . . Qn pn 0 ,
Qi {, } 0 Boolean formula variables p1 , . . . , pn . well known,
possible truth assignments p1 , . . . , pn arranged leaves full binary
tree depth n. left subtree root contains truth assignments p1 true
right subtree p1 false; branch p2 , p3 , on.
determine whether valid pruning full binary tree: whenever Qi ,
keep subtrees ith level, whenever Qi one them.
198

fiCombining Spatial Temporal Logics: Expressiveness vs. Complexity

00
q 3 , p 1 , p2 , p 3

r


3@

00
q 3 , p 1 , p2

00
q 3 , p 2 , p3

r
3

00
q 3 , p2

r

r
3


3@

@

@
@
q ,p ,p
2@r - r 2 1 2
6
1

@
@
2 r -r
6

r - r q 1 , p1
YH
H
HH
H

1

r -r

q 2 , p2

q1

*





HH

r rq
H

0

0

Figure 6: Aleksandrov model may satisfy , = p1 p2 p3 0 .
way end tree leaves evaluate 0 true, valid,
otherwise not.
generate leaves binary tree Aleksandrov models help
RC max -formula. precisely, construct RC max -formula
length polynomial length ,
satisfied Aleksandrov model iff valid.
Take fresh spatial variables q0 , . . . , qn , put, = 0, . . . , n,

q0 u q1
= 0;





=
qi1 u qi u qi+1 ,
0 < < n;







qn1 u qn ,
= n.
consider variables p1 . . . , pn
variables, let 00 result
spatial
replacing every occurrence pi pi 0 . Put
^
^




+

+
00




= 3
2
2
0
i1 @ (i )
i1 @ (i u ) 2
n @ ,
Qi =

Qi =

where, = 1, . . . , n,

= C u pi




i+ = C u pi .

Clearly, RC max -formula length polynomial length .
Suppose first valid. Fig. 6 shows structure possible Aleksandrov
model satisfying .
converse direction similar Ladners proof (1977). Suppose
satisfied
Aleksandrov model M. Then, necessary sequence truth values

p1 , . . . , pn , point reflecting sequence (we use structure
spatial terms here). Since, last conjunct , 00 holds
points, obtain quantified Boolean formula must valid.
q
199

fiGabelaia, Kontchakov, Kurucz, Wolter, & Zakharyaschev

Appendix B. Spatio-Temporal Logics Based S4u
appendix prove Theorems 3.1, 3.2, 3.6 3.7 well Proposition 3.4.
Theorems 3.3 3.5 immediate corollaries Theorem 3.6. first, general
results established used later on.
remind reader Aleksandrov tt-model mean tt-model based
Aleksandrov (topological) space. Every model regarded triple form
K = hF, G, Vi, F = hW, <i flow time, G = hV, Ri quasi-order, V map
associating every spatial variable p every time point w W set V(p, w) V .
Appendix A, instead x V(, w) write (K, hw, xi) |= unify notation
spatio-temporal formulas terms.
Given spatio-temporal formula , denote sub set subformulas
term set spatio-temporal terms occurring .
Lemma B.1. (i) PT L S4u -formula satisfied tt-model FSA based
flow time F, satisfied Aleksandrov tt-model FSA based
F.
(ii) PT L S4u -formula satisfied tt-model based flow time F,
satisfied Aleksandrov tt-model based F well.
Moreover, cases choose Aleksandrov tt-model K = hF, G, Vi satisfying
(with F = hW, <i G = hV, Ri) way w W , x V
spatio-temporal terms , set
Aw,x, = {y V | xRy (K, hw, yi) |= }
contains R-maximal point 6 (provided course Aw,x, 6= ).
Proof. proof uses StoneJonssonTarski representation topological Boolean
algebras (in particular, topological spaces) form general frames (see, e.g., Goldblatt,
1976 Chagrov & Zakharyaschev, 1997).
(i) Suppose satisfied tt-model = hF, T, Ui FSA based
topological space = hU, Ii. Denote V set ultrafilters U . two
ultrafilters x1 , x2 V , put x1 Rx2 iff U (IA x1 x2 ). easy see R
quasi-order V . Define Aleksandrov tt-model K = hF, G, Vi taking G = hV, Ri
V(p, w) = {x V | U(p, w) x}. show induction construction
spatio-temporal term that, w W x V ,
(K, hw, xi) |=

iff

U(, w) x.

(12)

basis induction case Booleans trivial. case = 0
standard (consult Goldblatt, 1976 Chagrov & Zakharyaschev, 1997).
Case = 1 U 2 . Assume (K, hw, xi) |= 1 U 2 . v > w
(K, hv, xi) |= 2 (K, hu, xi) |= 1 u interval (w, v). IH, U(2 , v) x
U(1 , u) x u (w, v). Since
\
U(1 U 2 , w) U(2 , v)
U(1 , u),
u(w,v)

6. point z said R-maximal V if, every z 0 A, z 0 Rz whenever zRz 0 .

200

fiCombining Spatial Temporal Logics: Expressiveness vs. Complexity

shall U(1 U 2 , w) x show
\
U(1 , u) x.
U(2 , v)

(13)

u(w,v)

view FSA, find time points u1 , . . . , ul (w, v)
\
U(1 , u),
U(1 , u1 ) U(1 , ul ) =
u(w,v)

yields (13) ultrafilters closed finite intersections.
Conversely, let U(1 U 2 , w) x. FSA, time points v1 , . . . vl

[
\
U(1 , u) .
U(1 U 2 , w) =
U(2 , vi )
1il

u(w,vi )

since x ultrafilter,
U(2 , vi )

\

U(1 , u) x,

u(w,vi )

i, 1 l. Therefore, IH, (K, hvi , xi) |= 2 (K, hu, xi) |= 1
u (w, vi ). Hence (K, hw, xi) |= 1 U 2 .
Case = 1 2 considered analogously.
Now, show that, w W spatio-temporal terms ,

(K, w) |= 2

iff

U(, w) = U.

. (K, hw, yi) |= V , so, IH, U(, w)
Suppose (K, w) |= 2
V . U(, w) = U . Conversely, U(, w) = U U(, w)
.
V , which, IH, (K, w) |= 2
follows immediately satisfied K. clear K satisfies
FSA. proves (i). existence R-maximal points sets form Aw,x, (where
w W , x V spatio-temporal term) follows result Fine (1974); see
(Chagrov & Zakharyaschev, 1997, Theorem 10.36).

(ii) construction (i). First show induction that, every
spatio-temporal term PT L S4u , (K, hw, xi) |= iff U(, w) x. time, however,
instead U need inductive step .
Case = 0 . (K, hw, xi) |= 0 iff exists immediate successor w0
w (K, hw0 , xi) |= 0 iff, IH, immediate successor w0 w
U( 0 , w0 ) x. remains recall U( 0 , w) = U( 0 , w0 ) whenever w0 immediate
successor w U( 0 , w) = whenever w immediate successor.
remaining part proof (i).
q
Proof Proposition 3.4. implication () follows immediately definition.
() Suppose PT LS4u -formula satisfied tt-model FSA flow
time F = hW, <i. Then, Lemma B.1 (i), satisfiable Aleksandrov tt-model
= hF, G, Vi FSA based quasi-order G = hV, Ri. view FSA,
201

fiGabelaia, Kontchakov, Kurucz, Wolter, & Zakharyaschev

every term , finitely many sets A1 , . . . , Ak V {V(, w) | w
W } = {A1 , . . . , Ak }. Therefore, finitely many time points w1 , . . . , wm W
that, every w W , wi , 1 m, V(, w) = V(, wi ) term .
use Lemmon filtration (see, e.g., Chagrov & Zakharyaschev, 1997) construct
tt-model based finite Aleksandrov topological space. First, define equivalence
relation V taking x
(M, hwi , xi) |=

iff

(M, hwi , yi) |= ,

i, 1 m, term .

Denote [x] equivalence class x V . set V / pairwise distinct equivalence
classes clearly finite. Define binary relation V / taking [x]S[y]
(M, hwi , yi) |=

whenever (M, hwi , xi) |= I,

i, 1 m, term .

Clearly, well-defined, reflexive transitive, G0 = hV / , Si finite quasiorder. Let V0 (p, w) = {[x] | x V(p, w)}, every spatial variable p every w W .
Consider tt-model M0 = hF, G0 , V0 i. First show term , x V
w W ,
(M, hw, xi) |=
iff
(M0 , hw, [x]i) |= .
basis induction follows definition V0 , cases intersection complement trivial, temporal operators follow IH.
Suppose (M, hw, xi) |= [x]S[y]. moment wi
(M, hw, zi) |= iff (M, hwi , zi) |= , term z V . definition S,
(M, hwi , yi) |= , (M, hw, yi) |= . Finally, IH, (M0 , hw, [y]i) |= ,
since arbitrary, obtain (M0 , hw, [x]i) |= .
Conversely, let (M0 , hw, [x]i) |= xRy. [x]S[y], (M0 , hw, [y]i) |= ,
which, IH, (M, hw, yi) |= . Thus, (M, hw, xi) |= .
Finally, straightforward induction structure , one show
(M, w) |=

iff

(M0 , w) |= ,

sub w W . follows satisfied M0 .

q

B.1 Temporalisations S4u
Lemma B.2. Let finite set S4u -formulas. finite quasi-order G
every satisfiable subset satisfied Aleksandrov model based G.
Proof. every satisfiable , fix model based finite quasi-order G = hV , R
satisfying . Let n = max{|V | : , satisfiable} let G disjoint
union n full n-ary (transitive) trees depth n whose nodes clusters cardinality
n. difficult see every G p-morphic image G. Therefore, every
satisfiable satisfied Aleksandrov model based G.
q
Proof Theorem 3.1. PSPACE-hardness follows Theorem 2.1 2.5. show
matching upper bound.
Let PT L[S4u ]-formula. Since PT L S4u -formula, Lemma B.1 (ii),
satisfiable tt-model iff satisfiable Aleksandrov tt-model based
202

fiCombining Spatial Temporal Logics: Expressiveness vs. Complexity

associate fresh propositional
flow time. every (spatial) subformula 2

variable p denote PT L-formula results replacing
p .
subformulas form 2
claim satisfiable Aleksandrov

tt-model flow time F = hW, <i iff

exists temporal model N = hF, Ui satisfying and,
| (N, w) |= p } {2
| (N, w) |= p } spatial
every w W , set w = {2


formulas satisfiable.

implication () obvious. Conversely,
suppose temporal model N
satisfying conditions above. Let = wW w . Lemma B.2, finite
quasi-order G that, every w W , hG, Vw |= w valuation
Vw . clear satisfied Aleksandrov tt-model hF, G, Vi,
V(p, w) = Vw (p), every spatial variable p every w W .
Now, devise decision procedure PT L[S4u ] uses polynomial space
length input formula, one take corresponding nondeterministic PSPACE
algorithm PT L (Sistla & Clarke, 1985; Reynolds, 2004, 2003) modify follows.
algorithm constructs pure temporal model N = hF, Ui every time
produces state time instant w W , additionally checks whether set w
spatial formulas satisfiable. Theorem 2.1, extra test performed
PSPACE algorithm, increase complexity combined algorithm. q
Proof Theorem 3.2. proof essentially Theorem 3.1,
nondeterministic polynomial-time algorithms component logics available.
q
B.2 Undecidability PT L S4u PT L2 S4u
Note although spatio-temporal languages contain propositional variables,
p regarded proposition.
still simulate them: spatial variable p, formula 2
p, spatial
Thus, follows propositional variable p mean formula 2
variable p (note different typefaces used denote propositional spatial variables).
Proof Theorem 3.6. proof reduction undecidable Posts (1946) correspondence problem PCP, short. formulated follows. Given finite alphabet
finite set P pairs hv1 , u1 , . . . , hvk , uk nonempty finite words






vi = bi1 , . . . , bili ,
ui = ci1 , . . . , ciri
(i = 1, . . . , k)
A, instance PCP, decide whether exist N 1 sequence i1 , . . . ,
indices
vi1 viN = ui1 uiN ,
(14)
concatenation operation. construct (using future-time temporal
operators) PT L S4u -formula A,P
(i) length A,P polynomial function size P ;
(ii) A,P satisfiable tt-model based hN, <i exist N 1
sequence i1 , . . . , indices (14) holds;
203

fiGabelaia, Kontchakov, Kurucz, Wolter, & Zakharyaschev

(iii) exist N 1 sequence i1 , . . . , indices (14) holds
A,P satisfiable tt-model FSA based hN, <i;
(iv) A,P satisfiable tt-model based hN, <i iff A,P satisfiable tt-model
based finite flow time.
case hZ, <i follows immediately. Lemma B.1 (ii), suffices consider
Aleksandrov tt-models A,P .
build A,P using spatial variables lefta righta (a A), left, right stripe,
well propositional variables pairi , every pair hvi , ui i, 1 k, range.
variable range required relativise temporal operators 2F 3F order
ensure construct model based finite flow time. variable stripe
used introduce new strict closure operator Aleksandrov spaces taking, every
spatio-temporal term ,


= stripe @ C(stripe u C ) u stripe @ C(stripe u C ) .
Denote Sn sequence n operators S. abbreviations need 1 2
stands (1 @ 2 ) u (2 @ 1 ) 2+
F replaces 2F .
formula A,P defined conjunction
A,P = range stripe pair eq left right ,

range = range 3F range 2F (range 2F range),


_
^
3
range

pair

(pair

pair
)
,
pair = 2+
F


j
F
1ik


(stripe stripe) ,
3F range 2


^
(left
= 3F range
2

right
)

,

stripe =
eq

1i<jk

2+
F

aA

left conjunction (15)(21), 1 k,
^
G


+

2+
lefta ,
F 3 lefta u leftb 2F 2 left
aA

a6=b
a,bA

^

(15)




2+
F pairi 2(lefta @ lefta ) ,

(16)

aA

left 2+ 2
2
F (left @ Sleft),

2+
F
2+
F

(17)

(left @
pairi 2
,
^
((Sj left u Sj+1 left) @ left
2
pairi
b



Sli left)

li j

j<li
left

pairi 3
,

(18)

) ,

(19)
(20)

((left u Sleft) @
2F pairi 2

204

left

) ,

(21)

fiCombining Spatial Temporal Logics: Expressiveness vs. Complexity
b

b

b

b

yn4 b
.
..
.
.
.

b

b

b

.
.
.

.
.
.

.
.
.

b

b

b

yn3 +1 b
yn3 b
.
..
.
.
.

yn2 +1 b
yn2 b
.
..
.
.
.

yn1 +1 b
yn1 b

.
..
.
.
li
.
1
b
y1
pairi1
0

b

b

.
.
.

.
.
.

b

b

b

trb


li
3

b
btr


li
4

trb

bili4
vi4

. 4
.
.

br

bi14

br

bili3

. 3
.
.

vi3
rb

br

bi13

rb

br

bili2

. 2
.
.


.
.
l
.
i2
b

rb

rb

br

bi12

trb

rb

rb

br

bili1

vi2

. 1
.
.

vi1
rb

rb

pairi2
1

b = left
r = left
= left u Sleft

rb

pairi3
2
range

pairi4
3

br

bi11

4

...

Figure 7: Model satisfying left , N = 4.

ileft = leftbi u leftbi u S(leftbi u u Sleftbi ) . . .
1

2

3



li

(remember li length word vi ). conjunct right defined replacing
left occurrences left right, lefta righta (for A), li ri ileft
iright , defined similarly. (Note pairi occurs left right .)
Let us prove A,P required. Suppose (M, 0) |= A,P , Aleksandrov
tt-model = hhN, <i , G, Vi G = hV, Ri. Since (M, 0) |= eq , find N ,
1 N < ,
^
(left
(M, N ) |= range
2
(22)
righta ).
aA

view range , (M, j) |= range j, 0 j N . Let i1 , . . . ,
sequence indices that, 1 j N , (M, j 1) |= pairij (pair ensures
unique sequence sort). claim (14) holds sequence.
Since stripe holds 0, have, every V , (M, h0, yi) |= stripe iff
(M, hj, yi) |= stripe j, 0 j N . Denote Rs transitive binary relation
V defined taking xRs z V xRzRy (M, h0, xi) |= stripe
holds iff (M, h0, zi) 6|= stripe. clearly that, every j, 0 j N , every
xV,
(M, hj, xi) |=

iff

V xRs (M, hj, yi) |= .

Call sequence hy1 , . . . , yl (not necessarily distinct) points V Rs -path
V(left, j) length l y1 , . . . , yl V(left, j) y1 Rs y2 Rs . . . Rs yl . every sequence
205

fiGabelaia, Kontchakov, Kurucz, Wolter, & Zakharyaschev

z1 , . . . , zl points V(left, j) define
leftwordj (z1 , . . . , zl ) = ha1 , . . . , al ,
ai (uniquely determined (15)) symbols (M, hj, zi i) |= leftai .
show that, every j, 1 j N , following holds:



(a) exists Rs -path y1 , . . . , ynj V(left, j) length nj = li1 + + lij

leftwordj (y1 , . . . , ynj ) = vi1 . . . vij ;
(b) every Rs -path V(left, j) length nj ;



(c) every Rs -path y1 , . . . , ynj V(left, j),
leftwordj (y1 , . . . , ynj ) = vi1 . . . vij .
Indeed, j = 1, (a) (M, 0) |= pairi1 (20), (b) (17) (18),
(c)

(19).ff assume inductively (a)(c) hold j, 1 j < N . Let
y1 , . . . , ynj maximal Rs -path V(left, j). First, (16), y1 , . . . , ynj V(left, j + 1).



Second, since (M, j, ynj ) |= left u Sleft (M, j) |= pairij+1 , (21) implies



exist ynj +1 , . . . , ynj +lij+1 y1 , . . . , ynj +lij+1 Rs -path V(left, j + 1),
required
(a). (b)
(c), observe first every Rs -path hy1 , . . . , yl
V(left, j + 1), y1 , . . . , yllij+1 Rs -path V(left, j), (18). l nj+1 must
hold. l = nj+1 leftwordj (y1 , . . . , yllij+1 ) = vi1 . . . vij induction hypothesis, leftwordj+1 (y1 , . . . , yllij+1 ) = vi1 . . . vij (16). hand,
leftwordj+1 (yllij+1 +1 , . . . , yl ) = vij+1 (19), leftwordj+1 (y1 , . . . , yl ) =
vi1 . . . vij vij+1 , required.
repeat argument right side well. every sequence
z1 , . . . , zl points V(right, j), define
rightwordj (z1 , . . . , zl ) = ha1 , . . . , al ,
ai uniquely determined elements (M, hj, zi i) |= rightai .
have, every 1 j N :



(a0 ) Rs -path y1 , . . . , ymj V(right, j) length mj = ri1 + + rij
rightwordj (y1 , . . . , ymj ) = ui1 . . . uij ;
(b0 ) every Rs -path V(right, j) length mj ;



(c0 ) every Rs -path y1 , . . . , ymj V(right, j),
rightwordj (y1 , . . . , ymj ) = ui1 . . . uij .
206

fiCombining Spatial Temporal Logics: Expressiveness vs. Complexity

Now, (15) (22), V(left, N ) = V(right, N ). (a), exists Rs path hy1 , . . . , yl V(left, N ) l = nN leftwordN (y1 , . . . , yl ) = vi1 . . . viN .
(b0 ), nN mN . Similarly, using (a0 ) (b), obtain mN nN ,
nN = mN . Hence, (c0 ), rightwordN (y1 , . . . , yl ) = ui1 . . . uiN . Since, (22),
leftwordN (y1 , . . . , yl ) = rightwordN (y1 , . . . , yl ),
finally obtain vi1 . . . viN = ui1 . . . uiN , required.
Conversely, suppose N 1 sequence i1 , . . . , (14) holds.
show A,P satisfiable Aleksandrov tt-model = hhN, <i , hN, , Vi
FSA. Let nj = li1 + + lij mj = ri1 + + rij every j, 1 j N .
assumption, nN = mN
vi1 . . . viN = ha1 , . . . , anN = ui1 . . . uiN .
Define valuation V taking
V(range, j) true iff 0 j N ,
V(stripe, j) = {2m | < , 0 j N },
V(pairi , j 1) true iff = ij 1 j N ,
V(lefta , j) = {k | 1 k nj , ak = a} 1 j N ,
V(righta , j) = {k | 1 k mj , ak = a} 1 j N ,


V(righta , j).
V(lefta , j) V(right, j) =
V(left, j) =
aA

aA

One easily check valuation (M, 0) |= A,P satisfies
FSA. readily seen A,P satisfiable tt-model based hN, <i iff
satisfiable tt-model based finite flow time.
q
Proof Theorem 3.7. show modifying formulas proof Theorem 3.6. First, replace stripe
+

2+
F 2(stripe @ 2F stripe) 2F 2(stripe @ 2F stripe).

Then, left conjunction (150 )(210 ), 1 k,
^
G


+

2+
lefta ,
F 3 lefta u leftb 2F 2 left
aA

a6=b
a,bA

^

(150 )



2+
F pairi 2(lefta @ 2F lefta ) ,

(160 )

aA

left 2+ 2
2
F (left @ Sleft),

2+
F
2+
F

(170 )


(left @ 3 Sli left) ,
pairi 2
F
^
(left u 2 left) @ 2 ((Sj left u Sj+1 left) @ left
pairi
2
F
F
b

li j

j<li
left

pairi 2F 3
,

2F

(180 )

) ,

(190 )
(200 )

left
((left u Sleft) @ 2
pairi 2
F
) ,

207

(210 )

fiGabelaia, Kontchakov, Kurucz, Wolter, & Zakharyaschev

ileft defined exactly proof Theorem 3.6. Formula right modified
similar way.
q
Remark B.3. fact, set PCP instances without solutions recursively enumerable therefore, proofs show sets PT L S4u PT L2 S4u formulas true models based hN, <i, hZ, <i finite flows time
recursively enumerable either. Therefore, logics recursively axiomatisable.

Appendix C. Spatio-Temporal Logics Based RC
appendix establish lower upper complexity bounds wide range
decidable spatio-temporal combinations and, particular, prove Theorems 3.83.15.
begin straightforward generalisation Lemma A.1 spatio-temporal case:
Lemma C.1. (i) PT L RC-formula satisfiable tt-model FSA based
flow time F satisfiable Aleksandrov tt-model based F finite
disjoint union finite brooms.
(ii) PT L RC-formula satisfiable tt-model based flow time F
satisfiable Aleksandrov tt-model based F (possibly infinite) disjoint union
-brooms.
Proof. (i) Lemma B.1 (i), satisfiable Aleksandrov tt-model based F
finite quasi-order G. rest proof similar Lemma A.1. details
left reader.
(ii) Lemma B.1 (ii), satisfiable Aleksandrov tt-model based F
quasi-order G = hV, Ri. rest proof similar Lemma A.1.
note although G infinite, still every x V V0
xRy. guaranteed condition set Aw,x,> maximal point.
q
Observe Aleksandrov spaces essentially infinite case (ii) Lemma C.1
generalisation Lemma A.2 go through. First, easily enforce topological
space infinite using PT L RCC-8 formula

2+
F NTTP(p, p).

Moreover, formula




( p
p )
3
u p ) 2+
F 2( p @


2+
F2







p u p @ p u p u p

satisfied Aleksandrov tt-model based single -broom, cannot satisfied
Aleksandrov tt-model based union n-brooms finite n.
hand, Aleksandrov tt-models based disjoint unions n-brooms,
n bounded width formula, enough spatio-temporal logics based
RC . Recall spatial terms PT L RC (and PT L RC ) defined follows


::= %

| ,



::= I%

|



::= 1 u u

| 1 u 2 ,

208

| u

| ,

fiCombining Spatial Temporal Logics: Expressiveness vs. Complexity

% spatio-temporal Boolean region terms PT L BRCC-8 (and PT L
BRCC-8, respectively). hard see that, every tt-model = hF, T, Vi
F = hW, <i, = hU, Ii every w W ,
V(, w) = CIV(, w)



V(, w) = ICV(, w),

(23)

i.e., always interpreted regular closed sets, whereas regular open ones.
define width w() PT L RC -formula maximal number
( u u
conjuncts subformulas form 2
1
), subformulas exist, put
w() = 1 otherwise.
Lemma C.2. (i) PT L RC -formula satisfiable tt-model FSA
based flow time F satisfiable Aleksandrov tt-model based F
finite disjoint union w()-brooms.
(ii) PT L RC -formula satisfiable tt-model based flow time F
satisfiable Aleksandrov tt-model based F (possibly infinite) disjoint
union w()-brooms.
Proof. Lemma C.1, may assume satisfied Aleksandrov tt-model =
hF, G, Vi, F = hW, <i G = hV, Ri disjoint union brooms (in (i), union
brooms finite). Without loss generality may assume composed
,...,3
},7
(using temporal operators Booleans) formulas set = {3
1
n
every one following forms
1 u u ,

u



,

(24)

, defined above.

, fix point x
every 3
every w W (M, w) |= 3
,w V
(M, hw, x,w i) |= . may assume x,w pairwise distinct
.
roots brooms points form x,w w W 3


Therefore, G disjoint union brooms b,w , 3
w W .
Let us construct model M0 = hF, G0 , V0 follows. Given broom b,w , delete
leaves depending form . Three cases possible:
Case = 1 u u : take leaves y1 , . . . , ym b,w (M, hw, yi i) |=
x,w Ryi = 1, . . . , remove leaves different y1 , . . . , ym .
Case = u : take leaf b,w (M, hw, yi) |= x,w Ry remove
leaves. Note that, (23), (M, hw, yi) |= , therefore (M, hw, yi) |= .
Case = : take leaf b,w x,w Ry remove leaves. (23),
(M, hw, yi) |= .
Denote b0,w resulting broom. Clearly, w()-broom. Let G0 = hV 0 , R0
0

disjoint union b,w , 3
w W . clear G
0
required. Finally, define V taking every spatial variable p, every w W
every x V 0 ,
x V0 (p, w)
7. treat

iff

V 0 depth 0 xR0 V(p, w).

abbreviation.
primitive 2
3

209

fiGabelaia, Kontchakov, Kurucz, Wolter, & Zakharyaschev

,
show satisfied M0 , first prove that, w W 3


(M0 , w) |= 3

iff

.
(M, w) |= 3

readily proved induction (M0 , hw, xi) |= iff (M, hw, xi) |= ,
points x V 0 depth 0, w W spatio-temporal terms .

Then, construction, that, formulas 3
w W ,
0


implies
(M, w) |= 3 implies (M , w) |= 3 . remains show (M, w) |= 3
0
0
3

(M , w) |= 3
w W . Suppose (M , hw, xi) |=
. Consider three possible cases :
(M, w) |= 3
Case = 1 u u . Then, every i, 1 m, yi V 0 depth 0
xR0 yi (M0 , hw, yi i) |= . (M, hw, yi i) |= and, (23), (M, hw, xi) |= .
.
Therefore, (M, hw, xi) |= , contrary (M, w) |= 3
0
Case = u . V depth 0 xR0 y, (M0 , hw, yi) |= and,
(23), (M0 , hw, yi) |= . Thus (M0 , hw, yi) |= . (M, hw, yi) |= , contrary
.
(M, w) |= 3
Case = . V 0 depth 0 xR0 and, (23), (M0 , hw, yi) |= .
.
(M, hw, yi) |= , contrary (M, w) |= 3
Now, straightforward induction easily show that, w W
formulas built using temporal operators Booleans,
(M0 , w) |=

iff

(M, w) |= .

follows satisfied M0 .

q

C.1 Lower Complexity Bounds (I)
Proof Theorem 3.10, lower bound. proof reduction arbitrary problem 2EXPSPACE satisfiability problem PT L RC. Let (single-tape,
deterministic) Turing machine halts every input (accepting rejecting it),
f (n)
uses 22
cells tape input length n, polynomial f . Given
Turing machine input x it, construct PT L RC-formula
A,x (using future-time temporal operators)
(i) length A,x polynomial size x;
(ii) A,x satisfiable tt-model based hN, <i accepts x;
(iii) accepts x A,x satisfiable tt-model FSA based hN, <i.
case hZ, <i flow time (with without FSA) follows immediately. case
finite flows time proved relativising temporal operators A,x (say,
propositional variable range proof Theorem 3.6 Appendix B.2
proof lower bound Theorem 3.9 below): obtain formula 0A,x
0A,x satisfiable Aleksandrov tt-model based hN, <i iff satisfiable
Aleksandrov tt-model based quasi-order finite flow time.
way lower bound results theorem follow.
210

fiCombining Spatial Temporal Logics: Expressiveness vs. Complexity

Given Turing machine A, polynomial f , input x = hx1 , . . . , xn above, let
= f (n),
exp(1, d) = 2d exp(2, d) = exp(1, d) 2exp(1,d) .

22

f (n)

exp(2, d).

(25)

plan follows. First, show yardsticks length exp(2, d) (similar
used Stockmeyer, 1974 Halpern Vardi, 1989) encoded PT L RCformulas length polynomial d. yardsticks used define temporal
operator exp(2,d) . Then, using operator, encode computation
input x.
Lemma C.1 (ii), PT LRC-formula A,x satisfied tt-model based flow
time hN, <i, satisfied Aleksandrov tt-model = hhN, <i , G, Ui,
G = hV, Ri disjoint union -brooms. Take model suppose
PT L RC-formula8




aux
(26)
2+
F 2 aux


true moment 0. Since region aux change time, divide
points

V three disjoint sets: external, boundary internal points respect
aux i.e., satisfying








ep(aux) = aux ,
bp(aux) = aux u aux

aux ,
respectively. Note every boundary point non-boundary R-successor, boundary
points depth 1. follows

simply speak external boundary
points mentioning respect aux .
define exp(2,d) operator PT L RC-formula length polynomial
follows:
(a) First, encode yardsticks length d. use different formulas yardsticks
external points yardsticks boundary points.
(b) Then, help d-yardsticks, encode yardsticks length exp(1, d).
use different formulas external boundary points.
(c) Next, help exp(1, d)-yardsticks boundary external points,
encode yardsticks length exp(2, d) boundary points.
(d) Finally, help exp(2, d)-yardsticks boundary points, define polynomial-length exp(2,d) operator applicable propositional variables.
Step (a). Suppose (26) following formula hold 0:


+
ext

2+
F 2 bp(aux) @ 0,d 2F 2 ep(aux) @ 0,d

0,d =



(27)


l



d1
j delim0
,
delim0 delim0 u
delim0 @
j=1

8. Recall 1 2 stands (1 @ 2 ) u (2 @ 1 ). assume u bind stronger .

211

fiGabelaia, Kontchakov, Kurucz, Wolter, & Zakharyaschev

ext results
0,d
0,d replacing occurrence delim0 ext delim0 .


Take boundary point z. Suppose v N (M, hv, xi) |= delim0 .
0,d , every time moment w v,


(M, hw, zi) |= delim0
iff
w v (mod d),


is, z, delim0 holds inevery
time instants, starting v.By second

conjunct (27), external points aux behave similarly respect ext delim0 .
Step (b). encode yardsticks length exp(1, d), recall first every number < 2d
represented binary asequence
a0 . . . ad1 bits. mark bits

binary numbers region term bit1
follows. Given boundary point z time
moment v (M, hv, zi) |= delim0 , say interval [w, w + 1],
w = v + j d, j N, encodes number < 2d z, every < d,


(M, hw + i, zi) |= bit1
iff
ai = 1.

Recall binary representation b0 . . . bd1 successor a0 . . . ad1 modulo
following holds: i, 0 < d, ai = bi iff aj = 0, j, < j
use d-intervals starting v encode < 2d numbers way
consecutive intervals encode consecutive (modulo 2d ) numbers, starting 0.
So, suppose (26), (27) following formula hold 0:


ext
ext


2+
2+
F 2 ep(aux) @ 1,d u 1,d ,
F 2 bp(aux) @ 1,d u 1,d

2d
< d.


(28)


1,d

=

1,d

=









lwr1 delim0 bit1 u lwr1
u










zr1 bit1 u delim0 zr1
u delim1 delim0 u zr1 ,





lwr1
bit1 bit1 ,

ext ext result
1,d
1,d 1,d , respectively, attaching prefix ext
1,d
spatial variables (save aux).


Take boundary point z. Suppose v N
(M, hv, zi) |= delim1 .
Then, last conjunct 1,d , (M, hv, zi) |= delim0 . Since, (a), delim0
holds every time instants z, delim0 marks starting moment
d-interval. Then, first conjunct 1,d , every i, 0 < d, have9




(M, hv + i, zi) |= lwr1
iff
(M, hv + j, zi) |= bit1 , j, < j < d.

Therefore, 1,d says consecutive < 2d numbers (starting 0) encoded consecutive d-intervals (starting v). Similarly first conjunct 1,d , second conjunct
ensures that, every i, 0 < d,



(M, hv + i, zi) |= zr1
iff
(M, hv + j, zi) |= bit1 , j, j < d.
9. Since
apply U operator

cannot

form
spatio-temporal
terms,
auxiliary regions


used instead:

lwr1 delim0 bit1 u lwr1 ensures lwr1 behaves bit1 U delim0 .
equality term indeed regarded fixed point characterisation U operator.
Note




need require (as fixed point characterisation) lwr1 @ 3F delim0
true eventuality already enforced 0,d .

212

fiCombining Spatial Temporal Logics: Expressiveness vs. Complexity



So, last conjunct 1,d , delim1 holds z every exp(1, d) = 2d time
instants, starting
v.
second conjunct (28), external points behave similarly
respect ext delim1 .
Step (c). construct yardsticks length exp(2, d), using exp(1, d)-yardsticks
constructed (b). Suppose (26)(28) following formulas hold 0:

2+
F 2 bp(aux) @






ext delim1
2+
@ (ep(aux) bp(aux)) ,
F 2 ext delim1


2+
F 2 ep(aux) @ 1,d (bit2 ) ,


2+
F 2 bp(aux) @ 2,d u 2,d ,


(29)
(30)
(31)

2,d defined similarly 1,d
1,d (bit2 )

=



jm1 bit2











delim1 u bit2
ext delim1 u jm1 bit2 ,









=
bit2 bit2
u lwr2
bit2 J1,d bit2 ,


= (aux u ext delim1 ) @ jm1 bit2 .
ext

2,d
J1,d bit2



Take boundary point z. Suppose v time moment (M, hv, zi) |= delim2 .
Then, last conjunct 2,d , (M, hv, zi) |= delim1 . know (b) delim1
holds z every exp(1, d) time instants starting v. So, 2,d first
conjunct 2,d intend express consecutive < 2exp(1,d) numbers (starting
0) encoded consecutive
exp(1, d)-intervals starting v. could then,
last conjunct 2,d , delim2 would hold z every exp(2, d) time instants
starting v. problem (and
step (b)) mark
difference

exp(1,d)
bits < 2
binary numbers term bit2 , need show (polynomial


length) term J1,d bit2 actually defines exp(1,d) bit2 sense that, every w v,
(M, hw, zi) |= J1,d bit2






(M, w + exp(1, d), z ) |= bit2 .

iff

(32)

Suppose first (M, hw, zi) |= J1,d bit2 . Then,
(29),
yw
external R-successor


z (of depth 0) (M, hw, yw i) |= ext delim1 , (M, hw, yw i) |= jm1 bit2 .
hand, hard see (M, hw, zi) 6|= J1,d bit2 ,

0
0
external R-successor yw z (of depth 0) (M, hw, yw i) |= ext delim1


0 i) |= jm bit .
(M, hw, yw
2
1


cases, readily checked (M, hw, yi) |= ext delim1 , external
point y, then, (30),


(M, hw, yi) |= jm1 bit2






(M, w + exp(1, d), ) |= bit2 .

iff

(32) follows first conjunct 2,d .
Step (d). position define polynomial-length exp(2,d) operator J2,d
applicable propositional variables. Recall propositional variable p stands spatial
p, p spatial variable associated p. Now, every propositional
formula 2
213

fiGabelaia, Kontchakov, Kurucz, Wolter, & Zakharyaschev

variable p intend apply new operator to, introduce fresh spatial variable
jm2 p. Suppose (26)(31) following formulas hold 0:



2+
F 3 bp(aux) u delim2 ,





2+
2+
F 2 p 2 p
F 2 2,d (p),

(33)
(34)

2,d (p) obtained replacing bit2 , jm1 bit2 ext delim1 1,d (bit2 ) p,
jm2 p delim2 , respectively. Let




(bp(aux) u
delim2 ) @ jm2 p .
J2,d p = 2
claim that, every time moment w every propositional variable p,
(M, w) |= J2,d p

(M, w + exp(2, d)) |= p.

iff

(35)

Suppose first (M,
point z

w) |= J2,d p. Then, (33), boundary
(M, hw, zi) |= delim2 , therefore (M, hw, zi) |= jm2 p . hand,

(M, w) 6|= J2,d p, boundary point z 0 (M, hw, z 0 i) |= delim2




(M, hw, z 0 i) |= jm2 p . cases, readily checked (M, hw, zi) |= delim2 ,
boundary point z, then, second conjunct (34),


(M, hw, zi) |= jm2 p





(M, w + exp(2, d), z ) |= p .

iff

(35) follows first conjunct (34).
Finally, position define PT L RC-formula A,x encodes
computation Turing machine input x. Let tape alphabet (with blank
symbol b A) set states (with two halt states syes sno S) A. use
symbol
/ mark left end tape. know space used
f (n)
input x = hx1 , . . . , xn 22 , exp(2, d) (25). represent
configuration computation x finite word
h, a1 , . . . , ai1 , hs, ai , ai+1 , . . . , , b, . . . , bi
length exp(2, d), a1 , . . . , hs, ai represents current state
active cell. transition function takes triples form hai , hs, aj , ak
(for ai {}, aj , ak A, {syes , sno }) similar triples. instance,
(ai , hs, aj , ak ) = hai , aj , hs0 , ak ii
means that, state reading symbol aj , new state s0
head move one cell right. assume that, ai {}
aj , ak A, (ai , hsyes , aj , ak ) = hai , aj , ak (ai , hsno , aj , ak ) = hai , aj , ak
meaning head removed halted.
Now, every {} (S A), introduce fresh propositional variable p .
Let A,x conjunction (26)(31), (33) instance (34), p , well
214

fiCombining Spatial Temporal Logics: Expressiveness vs. Complexity

'

$ '

exp(1, d) many l0j
exp(1,d)
l0

c
c
r
c
c
c
H
1

*

HH@





6
@


ep(aux)
aux

HH


@
r0 - rd
bp(aux)

&

...

j
exp(1, d) many lexp(2,d)1
exp(1,d)
lexp(2,d)1


c
r
c
c
c
c
H
1

*

HH@





6
@

ep(aux)
aux

HH


@ rd

-

rexp(2,d)1
% &

|

$

bp(aux)

{z
exp(2, d) many (exp(1, d) + 1)-brooms

%

}

Figure 8: Structure yardsticks.
following formulas:
^

2+
F p p ,

(36)

,A{}SA
6=

p (phs0 ,x1 (px2 ( (pxn pb U p ) ))),
2+
F



af

head

_


phs,ai ,

(37)
(38)

hs,aiSA

^

2+
F



af




head p J2,d p0 p J2,d p 0 p J2,d p 0 , (39)

(,,)=
h0 , 0 , 0


2+
F

^

af



head af head af head pa J2,d pa ,

(40)

aA{}

3F

_

phsyes ,ai 3F

aA

_

phsno ,ai .

(41)

aA

Suppose first A,x holds time moment 0. (36)(40) (35), consecutive
configurations computation input x properly encoded along time
axis. (For instance, p holds every exp(2, d) time moments.) Finally, (41) says
accepts input x.
Conversely, suppose accepts input x. define Aleksandrov tt-model
= hhN, <i , G, Ui FSA satisfies A,x . Let partial order G = hV, Ri
disjoint union exp(2, d) many (exp(1, d) + 1)-brooms (see Fig. 8):
V = {ri | < exp(2, d)} {lij | < exp(2, d), j exp(1, d)},
zRy

iff

z=y

z = ri , = lij , i, j.

Suppose number steps computation x m.
prefix length N = exp(2, d) final configuration (without halting
state) repeats infinity. w N, let
exp(1,d)

U(w, aux) = {li

215

| < exp(2, d)}.

fiGabelaia, Kontchakov, Kurucz, Wolter, & Zakharyaschev

easy see boundary points ri , external points
lij , < exp(1, d). put, every w N,
U(w, delim2 ) = {li

exp(1,d)

|iw

(mod exp(2, d))},

exp(1,d)
U(w, delim1 ) = {li
exp(1,d)
U(w, delim0 ) = {li
U(w, ext delim1 ) = {liv |
U(w, ext delim0 ) = {liv |

|iw

(mod exp(1, d))},

|iw

(mod d)},

vw

(mod exp(1, d)), < exp(2, d)},

vw

(mod d), < exp(2, d)}.

valuations variables clear.


exp(1,d)
(M, hw, zi) |= delim2
iff z = ri z = li
w (mod exp(2, d)),


exp(1,d)
(M, hw, zi) |= delim1
iff z = ri z = li
w (mod exp(1, d)),


v
(M, hw, zi) |= ext delim1
iff z = ri z = li v w (mod exp(2, d))
< exp(2, d),
on, required. hard see satisfies FSA (M, 0) |= A,x .

q

Proof Theorem 3.9, lower bound. proof reduction 2n -corridor tiling
problem known EXPSPACE-complete (Chlebus, 1986; van Emde Boas, 1997).
problem formulated follows: given instance = hT, t0 , t1 , ni,
finite set tile types, t0 , t1 n > 0, decide whether N
tiles 2n -grid (or corridor) way t0 placed onto h0, 0i, t1 onto
hm 1, 0i, top bottom sides corridor fixed colour, say, white.
Suppose = hT, t0 , t1 , ni given. aim construct (using future-time
temporal operators) PT L BRCC-8 formula
(i) length polynomial function |T | n;
(ii) satisfiable tt-model based hN, <i N tiles
2n -corridor;
(iii) N tiles 2n -corridor, satisfiable
tt-model FSA based hN, <i;
(iv) satisfiable tt-model based hN, <i iff satisfiable tt-model based
finite flow time.
case hZ, <i follows immediately.
Recall that, Lemma C.2 (ii), satisfied tt-model satisfied
Aleksandrov tt-model = hhN, <i , G, Vi, G = hV, Ri disjoint union brooms. explain meaning subformulas, assume model
given. Throughout proof use restricted subset RCC-8 predicates: spatiotemporal terms 1 2 constructed spatial variables using complement,
intersection next-time operator , need EQ(1 , 2 ) well two abbreviations
P(1 , 2 ) = EQ(1 , 2 ) TPP(1 , 2 ) NTPP(1 , 2 ) E 1 = DC(1 , 1 ) standing 1
216

fiCombining Spatial Temporal Logics: Expressiveness vs. Complexity

2n

0

(m + 1) 2n

count
range

0



0

1



1

2



2

3



4

3



0

5

6



1



2

7



3

8

9



0



1

10



2

11



3

12



0

13



1

14



2

15



3

16

...



0

Figure 9: Counting formulas = 3 n = 2.
part 2 1 nonempty, respectively. Clearly, language forms subset
PT L BRCC-8 (in fact, show Remark C.3 below, proof goes
even restricted subset langauge).
first step construction (which contain, among many others, spatial
variables ) write formulas forcing sequence y0 , y1 , . . . , ym2n 1
distinct points (of depth 0) V , N, that, < 2n ,
(M, hi, yi i) |= unique tile type . = k 2n + j, k < m, j < 2n ,
use yi (at time i) encode pair hk, ji 2n -grid. Thus,
neighbour hk, j + 1i hk, ji coded point yi+1 time + 1, right
neighbour hk + 1, ji yi+2n moment + 2n (see Fig. 10).
Let q0 , . . . , qn1 pairwise distinct propositional variables


n1
j = qd00 qn1
,

dn1 . . . d0 binary representation j < 2n , q0i = qi q1i = qi , i.
Suppose formula



+
count 0 count U (0 2+
(42)
F count) 2F count
true 0, count fresh propositional variable following
counting formula (the length polynomial n)

^

^ ^
^

qi qk
=
qi qk
(qi qi )
2n 1 0 .
k<n

i<k

i<k

k<i<n

N count true moment (m + 1) 2n false starting
(m+1)2n . sequence 0 , 1 , . . . , 2n 1 repeated m+1 times along time-line,
i.e., count true. Let
range = 3F (count 0 ).
Clearly, range true moment 2n always false (see Fig. 9).
Let equ, p0 , . . . , pn1 e0 , . . . , en1 fresh distinct spatial variables,


n1
j = pd00 u u pn1
,

dn1 . . . d0 binary representation j < 2n , p0i = pi p1i = pi , i.
Suppose (42)
l
^
^


+

2+
e

2
2+
EQ
equ,
q

EQ(e
,
p
)

(43)




F
F
F EQ pi , pi
i<n

i<n

i<n

217

fiGabelaia, Kontchakov, Kurucz, Wolter, & Zakharyaschev

true 0. Then, first two conjuncts (43), N V
depth 0, j < 2n (M, hi, yi) |= equ iff (M, i) |= j (M, hi, yi) |= j .
last conjunct (43),


(M, hi, yi) |= equ iff j < 2n (M, i) |= j (M, hk, yi) |= j , k N . ()
generate required sequence points yi using formulas:
range 2+
(range E tile),
F

G l
2+
EQ
tile,
equ
u

u



future
,
F
tT

^

2+
F P future,

(44)
(45)

tT



u future ,

(46)

tT

tile future (for ) fresh spatial variables. Indeed, suppose
conjunction (42)(46) holds time 0 M. Then, first conjunct (44)
(42), (M, 0) |= range 0 and, second conjunct (44), (M, h0, y0 i) |= tile
y0 V . may assume y0 depth 0. Then, (45),
(a0 ) (M, h0, y0 i) |= equ, and, (), (M, hk, y0 i) |= 0 k N;
(b0 ) , (M, h0, y0 i) |= future and, (46), (M, hk, y0 i) |= k > 0.
Next, (42), (M, 1) |= range 1 and, (44), y1 V (again, depth
0) (M, h1, y1 i) |= tile. particular, have:
(a1 ) (M, h1, y1 i) |= equ, and, (), (M, hk, y1 i) |= 1 k N;
(b1 ) , (M, h1, y1 i) |= future and, (46), (M, hk, y1 i) |= k > 1.
(b0 ), (M, h1, y0 i) |= t, , thus y1 6= y0 . consider y1 moment 1
use argument find point y2 V (which different y1 (b1 )),
forth; see Fig. 10. gives us points y0 , y1 , . . . , ym2n 1 (of depth 0) V need.
next aim write formulas could serve pointers right
neighbours given pair corridor (at moment bother top
border). Consider formulas

tile ,
2+
(47)
F EQ up,

+
2F EQ right, equ u equ U tile ,
(48)

+
2F EQ equ U tile, tile equ u equ U tile ,
(49)
up, right equ U tile fresh spatial variables.
i, j < 2n ,
(M, hi, yj i) |=
(M, hi, yj i) |= right

iff

j = + 1;
iff

j = + 2n .
218

claim that,

fiCombining Spatial Temporal Logics: Expressiveness vs. Complexity

b =
q q= equ U

range

V
3

y11

q

q

q

equ
q

q

q

q

2

y10

q

q

equ
q

q

q

q

1

y9

q

equ
q

q

q

q

0

q
y8 equ

q

q

q

3

y7

q

q

q

equ
q
right

equ
q
right

equ
q
right

equ
q
right

equ
q
right

2

y6

q
q

equ
q
right

1

y5

q

0

y4

equ
q
right

3

y3

q

q

2

y2

q


q

1

y1


q

0

r
y0 equ
tile
0



0

q



equ
r
tile

q

q

q

q

q


q



equ
q
right


r
q equ
b
tile

r
q
q
q equ
b
b
tile

r
q
q equ
b
b
b
tile

r
q equ
b
b
b equ
b
tile
equ
r
b
b
b equ
b
b
tile
b
b
b equ
b
b
b

q

q

b

b

equ
b

b

b

b

equ
b

b

b

b

equ
b

1

2

3

4

5

6

7

8

9

10

11

12



6
right

6


r
q
q
q equ
tile

r
q
q
q equ
b
b
b equ
b
b
b
b
tile

q
q equ
b
b
b equ
b
b
b
b equ
b
r
tile

r
q equ
b
b
b equ
b
b
b
b equ
b
b
tile
equ
r
b
b
b equ
b
b
b
b equ
b
b
b
tile
b
b
b equ
b
b
b
b equ
b
b
b
b

b

1



2



3



0



1



2



3



0

tT
tile



1



2



3





6 6





6
c- right

... |

{z

}

3 22 corridor

0

Figure 10: Satisfying , n = 2, tt-model based space 3 22 points.
former obvious. Let us prove latter. show (M, hi, yj i) |= right,
j = + 2n , first observe (M, hj, yj i) |= equ (M, hi, yj i) |= equ (). follows
(M, hj, yj i) |= tile (49) (M, hj 1, yj i) |= equ U tile. Then, applying
(49) (from right left) sufficiently many times, obtain (M, hi, yj i) |= equ U tile,
(M, hi 1, yj i) 6|= equ U tile, (M, hi, yj i) |= right.
Conversely, suppose (M, hi, yj i) |= right yj . (M, hi, yj i) |= equ and,
() (note + 2n < (m + 1) 2n , count still true + 2n ),
(M, hi + 2n , yj i) |= equ.

()

(M, hi, yj i) |= equ U tile. applying (49) (from left right) sufficiently
many times arrive (M, hi + 2n 1, yj i) |= equ U tile together ()
gives (M, hi + 2n , yj i) |= tile. j = + 2n .
noted every time point extension equ U tile coincides
extension term equ U tile elements sequence y0 , . . . , ym2n , (49)
indeed fixed point characterisation U operator.
Finally, formulas ensure every point 2n -corridor covered
one tile, h0, 0i covered t0 , hm 1, 0i t1 , top bottom sides white
219

fiGabelaia, Kontchakov, Kurucz, Wolter, & Zakharyaschev

colours adjacent edges adjacent tiles match:
^
0
2+
F E (t u ),

(50)

t,t0
t6=t0





P(tile, t0 ) 2+


range

3


range

P
tile,

,
0
0
1
F
F


_

n
2+
P tile, ,
F 2 1

(51)
(52)

tT
up(t)=white


_

2+


P
tile,

,
0
F

(53)

tT
down(t)=white

^



0
n


future
,
2+


E


P
up,

2 1
F

(54)

t,t0

up(t)6=down(t0 )

^



0
.
E


P
right,



future
2+
F

(55)

t,t0
right(t)6=left(t0 )

Let conjunction (42)(55). Suppose holds 0 M.
N (M, 2n 1) |= range and, every 2n , (M, i) |= range.
define map : 2n taking
(k, j) =

iff

(M, hi, yi i) |= = k 2n + j.

leave reader check tiling 2n , required.
direction, suppose tiling 2n -corridor ,
> 0. satisfied Aleksandrov tt-model = hhN, <i , hV, Ri , Vi,
V = {y0 , . . . , ym2n 1 }, R minimal reflexive relation V ,
V(t, i) = {yi V | (k, j) = = k 2n + j},
variables interpreted shown Fig. 10. Clearly, satisfies
FSA. Moreover, satisfiable tt-models finite flows time iff satisfiable
tt-models hN, <i. Details left reader.
q
Remark C.3. may interest note language used proof
rather limited. fact, enough extend PSPACE-complete logic PT L RCC-8
predicates form EQ(%1 , %2 %3 ) (where %i atomic spatio-temporal region
terms) make EXPSPACE-hard. show this, transform PT LBRCC-8 formula
constructed following way. First, take fresh spatial variable u (denoting

universe) add conjunct 2+
F EQ(u, u). Next, every spatio-temporal
Boolean region term % , introduce spatial variable neg % (the complement %
+
respect u), add conjuncts 2+
F EQ(u, % neg %) 2F DC(%, neg %), replace
every occurrence % resulting formula neg %. Finally, every spatio-temporal
term form %1 u %2 , introduce fresh spatial variable %1 %2 , add conjuncts
+
+
2+
F P(%1 %2 , %1 ) 2F P(%1 %2 , %2 ) 2F P(%1 , neg %2 %1 %2 )

220

fiCombining Spatial Temporal Logics: Expressiveness vs. Complexity

replace occurrences %1 u %2 %1 %2 . One readily see (i) length
resulting formula 0T linear length (ii) 0T satisfiable tt-model
based hN, <i (with FSA) iff satisfiable tt-model based hN, <i (with FSA).
C.2 Upper Complexity Bounds (I): Quasimodels PT L RC
appendix define quasimodels PT L RC spirit paper (Hodkinson
et al., 2000) order establish upper complexity bounds Theorems 3.10 3.13.
remind reader spatio-temporal terms PT L RC form:
| I%



::= %

%

::= CIp

|

| CI%

| 1 u 2 ,
| CI(%1 u %2 ) | CI(%1 U %2 ) | CI(%1 %2 ),

PT L RC forms sublanguage PT L RCit differs latter
definition spatio-temporal region terms:
%

::=

CIp

| CI%

| CI(%1 u %2 ) | CI %.

Let PT L RC-formula. Recall p. 200 sub denote set
subformulas term set spatio-temporal terms including
form %. type subset term
every 1 u 2 term ,
every term ,

1 u 2



iff

iff

1 2 t;


/ t.

Clearly, number [() different types bounded 2|term | .
broom type b pair hhT, , ti, hT, broom (with 0
leaves) labelling function associating x type t(x)
following conditions hold:
(bt0) t(x) 6= t(y), pair distinct points x, 0 ;
(bt1) every x 0 ,
every CI(%1 u%2 ) term , CI(%1 u%2 ) t(x) iff %1 t(x) %2 t(x),
every CI% term , CI% t(x) iff %
/ t(x);
(bt2) every I% term ,
(bt3) every % term ,

I% t(x)
% t(x)

iff
iff

% t(y) every , x y;
0 x % t(y).

Broom types b1 = hhT1 , 1 , t1 b2 = hhT2 , 2 , t2 said isomorphic
every x1 T10 , x2 T20 t1 (x1 ) = t2 (x2 )
every x2 T20 , x1 T10 t1 (x1 ) = t2 (x2 ).
Clearly, given two isomorphic broom types b1 b2 , t1 (r1 ) = t2 (r2 ),
r1 r2 roots b1 b2 , respectively.
quasistate pair hs, mi, Boolean-saturated subset sub
disjoint union hhT, , ti broom types b1 , . . . , bn following conditions
hold:
221

fiGabelaia, Kontchakov, Kurucz, Wolter, & Zakharyaschev

(qs0) bi bj isomorphic, 6= j;
sub ,

(qs1) every 2
2

iff

t(x) every x .
[()

Clearly, number ]() quasistates bounded 22
2|sub | .
Fix flow time F = hW, <i. basic structure pair hF, qi, q
function associating w W quasistate q(w) = hsw , mw that,
w W ,
every 1 U 2 sub , 1 U 2 sw iff v > w 2 sv
1 su u (w, v);
every 1 2 sub , 1 2 sw iff v < w 2 sv
1 su u (v, w).
Let hF, qi basic structure , q(w) = hsw , mw mw = hhTw , w , tw
w W . Denote Tw0 set leaves hTw , w Tw1 set roots
brooms it. 1-run hF, qi function r giving w W point
r(w) Tw1 ; coherent saturated 0-run hF, qi function r giving
w W point r(w) Tw0 following conditions hold:
every CI(%1 U %2 ) term , CI(%1 U %2 ) tw (r(w)) iff v > w
%2 tv (r(v)) %1 tu (r(u)) u (w, v);
every CI(%1 %2 ) term , CI(%1 %2 ) tw (r(w)) iff v < w
%2 tv (r(v)) %1 tu (r(u)) u (v, w).
Say quadruple Q = hF, q, R, Ci quasimodel based F hF, qi basic
structure , R = R0 R1 , R1 set 1-runs R0 set coherent
saturated 0-runs hF, qi, C reflexive closure subset R1 R0

(qm2) w0 W sw0 ;
(qm3) every w W every x Tw , r R r(w) = x;
(qm4) r, r0 R, r C r0 r(w) w r0 (w) w W ;
(qm5) r R, w W x Tw0 , r(w) w x r0 R0
r0 (w) = x r C r0 .
quasimodel Q said finitary set R runs finite.
Lemma C.4. PT L RC-formula satisfiable Aleksandrov tt-model based
flow time F (finite) disjoint union (finite) brooms iff (finitary)
quasimodel based F.
Proof. () Let PT L RC-formula Q = hF, q, R, Ci quasimodel ,
F = hW, <i q(w) = hsw , hhTw , w , tw ii w W . construct Aleksandrov
tt-model = hF, G, Vi taking G = hR, Ci and, spatial variable p w W ,
V(p, w) = {r | CIp tw (r(w))}.
222

fiCombining Spatial Temporal Logics: Expressiveness vs. Complexity

Clearly, Q finitary G finite. Thus, remains prove satisfied M.
First, show induction construction region term % term that,
every w W every r R,
(M, hw, ri) |= %

iff

% tw (r(w)).

(56)

basis induction: % = CIp. Let (M, hw, ri) |= %. r0 R
r C r0 (M, hw, r0 i) |= Ip. (qm4), r(w) w r0 (w). Take Tw0 , r0 (w) w y.
(qm5), run r00 R0 r0 C r00 r00 (w) = y. (M, hw, r00 i) |= p
and, definition V, CIp tw (r00 (w)) and, (bt3), % tw (r(w)).
Conversely, % tw (r(w)) then, (bt3), Tw0 r(w) w
% tw (y). (qm5), r00 R0 , r C r00 , r00 (w) = y. CIp tw (r00 (w))
and, definition V, (M, hw, r00 i) |= p. Therefore, (M, hw, ri) |= %.
induction steps % = CI%1 , CI(%1 u %2 ), CI(%1 U %2 ) CI(%1 %2 ) similar,
instead definition V, use (bt1) cases Booleans coherence
saturatedness r00 cases temporal operators.
Next, extend (56) arbitrary spatio-temporal terms term .
Case = I%. Suppose (M, hw, ri) |= I%. Take Tw , r(w) w y. Tw0
then, (qm5), r0 R0 r C r0 r0 (w) = y.
/ Tw0 clearly
= r(w) take r0 = r. (M, hw, r0 i) |= %, which, IH, implies % tw (r0 (w)).
Therefore, % tw (y) every w r(w) and, (bt2), I% tw (r(w)).
Conversely, I% tw (r(w)) then, (bt2), % tw (y), every w r(w). Take
run r0 R r C r0 . (qm4), r(w) w r0 (w), % tw (r0 (w)), which,
IH, (M, hw, r0 i) |= %. Hence, (M, hw, ri) |= I%.
Cases = 1 u 2 1 follow IH definition type.
Finally, show induction construction sub that, every w W ,
(M, w) |=

iff

sw .

(57)

. Suppose (M, w) |= 2
. Take x . (qm3), r R
Case = 2
w
r(w) = x. (M, hw, ri) |= and, IH, tw (r(w)). Therefore, (qs1),
. Conversely, let 2
. Take run r R. (qs1), (r(w)),
2
w
w
w
.
which, IH, (M, hw, ri) |= . Hence, (M, w) |= 2
Cases = 1 2 1 follow IH Boolean-saturatedness sw .
follows (57) (qm2) satisfiable M.

() Let PT L RC-formula suppose satisfied Aleksandrov
tt-model = hF, G, Vi, F = hW, <i G = h, disjoint union brooms.
Denote 0 1 leaves roots brooms G, respectively. every
pair hw, xi W associate type
t(w, x) = { term | (M, hw, xi) |= }.
Fix w W define binary relation follows. x, x0 0 , let x w x0 iff
t(w, x) = t(w, x0 ) and, z, z 0 1 , let z w z 0 iff brooms generated z z 0
isomorphic, i.e.,
x 0 (z x x0 0 (z 0 x0 x w x0 ))
x0 0 (z 0 x0 x 0 (z x x w x0 )).
223

fiGabelaia, Kontchakov, Kurucz, Wolter, & Zakharyaschev

Clearly, w equivalence relation . Denote [x]w w -equivalence class x
define map fw taking, x ,
(
[x]w ,
x 1 ,
fw (x) =
h[z]w , [x]w , x 0 z 1 z x.
Since G disjoint union brooms, fw well-defined. put
Tw = {fw (x) | x },
u w v

iff

x,

tw (fw (x)) = t(w, x),

x y, u = fw (x) v = fw (y),

x .

definition fw , hTw , w union brooms tw well-defined. Consider
structure hsw , mw i,
mw = hhTw , w , tw



sw = { sub | (M, w) |= }.

readily seen brooms mw (bt0) mw satisfies
(qs0). Moreover, fw p-morphism h, onto hTw , w i, (bt1)
(bt3) (qs1). So, taking q(w) = hsw , mw w W obtain basic structure
hF, qi satisfying (qm2).
remains define appropriate runs hF, qi. k = 0, 1, let Rk set
maps r : w 7 fw (x) x k . Clearly, R1 R0 sets 1- coherent
saturated 0-runs, respectively. Put R = R0 R1 r, r0 R, r C r0 iff r(w) w r0 (w)
w W . (qm4) holds definition. Let v W Tv .
x fv (x) = y. Clearly, R contains run r : w 7 fw (x), proves
(qm3). Finally, let r R, v W Tv0 r(v) v y.
z, x fw (z) = r(w), every w W , fv (x) = y. clearly z x
x 0 . take run r0 : w 7 fw (x). definition, r C r0 , proves (qm5).
Thus, Q = hF, q, R, Ci quasimodel . Note G finite R finite
well therefore, Q finitary.
q
position establish upper complexity bounds satisfiability
problem PT L RC- PT L RC-formulas tt-models based hN, <i, hZ, <i
arbitrary finite flows time.
Proof Theorem 3.10, upper bound. consider cases hN, <i hZ, <i.
case arbitrary finite flows time tt-models FSA based
hN, <i hZ, <i follow Theorem 3.13.
One readily check propositional temporal logic PT L,
following polynomial reductions PT L RC:
satisfiability tt-models based hZ, <i polynomially reduced satisfiability
tt-models based hN, <i;
satisfiability tt-models based hN, <i polynomially reduced satisfiability
formulas without past-time temporal operators.
224

fiCombining Spatial Temporal Logics: Expressiveness vs. Complexity

So, follows consider simplest case satisfiability problem,
PT L RC-formulas without past-time temporal operators tt-models based hN, <i.
present nondeterministic 2EXPSPACE satisfiability checking algorithm
similar Sistla Clarke (1985). First, one prove (with help Lemmas C.1 (ii) C.4) analogue (Hodkinson et al., 2000, Theorem 24) states
PT L RC-formula satisfiable tt-model based hN, <i iff l1 , l2 N


2
l1 ](),
0 < l2 |term | 2[() ]() + ]()
balloon-like quasimodel Q = hhN, <i , q, R, Ci q(l1 + n) = q(l1 + l2 + n)
every n N. Although Theorem 24 (Hodkinson et al., 2000) proved
monodic fragment first-order temporal logic, basic idea extracting balloon-like
quasimodel arbitrary one works PT L RC well. difference
quasistates complex: regarded sets sets types (not
sets types) thus, l1 l2 triple exponential length `() .
quasimodel Q guessed 2EXPSPACE algorithm similar
proof (Hodkinson et al., 2003, Theorem 4.1).
q
Proof Theorem 3.13, upper bound. proof similar Theorem 3.10.
Again, one show cases polynomially reducible case satisfiability
PT L RC-formulas without past-time temporal operators tt-models FSA
based hN, <i. take FSA account, prove (using Lemmas C.1 (i)
C.4) analogues Theorems 29 35 (Hodkinson et al., 2000) state
PT L RC-formula satisfiable tt-model FSA based hN, <i iff
finitary balloon-like quasimodel based hN, <i. condition finiteness
set runs ensured algorithm similar Theorem 3.10.
q
C.3 Upper Complexity Bounds (II):
Embedding First-Order Temporal Logic
appendix introduce first-order temporal language QT L use known
complexity results fragments QT L obtain upper complexity bounds spatiotemporal logics based RC (and therefore, BRCC-8).
alphabet QT L consists individual variables x1 , x2 , . . . , predicate symbols
P1 , P2 , . . . , fixed arity, Booleans, universal x existential x quantifiers variable x, temporal operators U, (with
derivatives , 3F , 2F , etc.). Note language contains neither constant symbols
equality (we simply need obtain complexity results).
QT L interpreted first-order temporal models form = hF, D, Ii,
F = hW, <i flow time, nonempty set, domain M, function
associating every moment time w W first-order structure

E
I(w)
I(w)
I(w) = D, P0 , P1 , . . . ,
I(w)

state moment w, Pi
relation arity Pi .
assignment function set individual variables D. Given
assignment QT L-formula , define truth-relation (M, w) |=a taking
225

fiGabelaia, Kontchakov, Kurucz, Wolter, & Zakharyaschev

u = CIp

x1b
depth 0
depth 1

e = CIp

'

xn1
b

x2b

$

xnb

u
e
e
u
...
*

YH
H



@

H @

HH

@ u
H
b

=

Pj1 [db ]Pj2 [db ] . . .Pjn1 [db ]Pjn [db ]
&

%

x0b

db

Figure 11: Representing n-broom b region CIpj point first-order model.
I(w)

(M, w) |=a Pi (x1 , . . . , xm ) iff ha(x1 ), . . . , a(xm )i Pi

,

0

(M, w) |=a x iff (M, w) |=a , every assignment a0 differ
x,
plus standard clauses Booleans temporal operators. say QT Lformula satisfied (M, w) |=a w W assignment D.
free variables among x1 , . . . , xm , instead (M, w) |=a often write
(M, w) |= [d1 , . . . , dm ], di = a(xi ) i, 1 m.
Denote QT L1 one-variable fragment QT L, i.e., set QT L-formulas
contain one individual variable, say, x. Without loss generality may
assume predicate symbols QT L1 unary.
define embedding spatio-temporal languages based RC QT L1 .
Recall that, Lemma C.2 (i), PT L RC -formula width n satisfied
tt-model FSA satisfiable Aleksandrov tt-model based
flow time finite disjoint union n-brooms. Similarly, PT L RC -formula
width n satisfiable satisfiable Aleksandrov tt-model based
flow time possibly infinite disjoint union n-brooms.
cover cases, let PT L RC -formula width n. show
construct QT L1 -formula n length linear `() every Aleksandrov tt-model
based (finite) union n-brooms satisfying gives rise first-order temporal model
(with finite domain, respectively) satisfying n vice versa. Thus, polynomially
reduce satisfiability problem spatio-temporal languages QT L1 .
Suppose satisfied Aleksandrov tt-model = hF, G, Vi, F = hW, <i
G (finite infinite) disjoint union n-brooms. every n-broom b G
associate element db first-order domain D. Then, every spatial variable pj ,
fix n different unary predicate symbols Pj1 (x), . . . , Pjn (x) following meaning:
Pji (x) true db moment w W iff i-th leaf b (xib Fig. 11) belongs

region CIp w. Define n distinct translations n , 1 n, encoding truth values
spatio-temporal region terms leaves G taking, spatial variable pj
terms %1 %2 ,


(CIpj )n = Pji (x),






(CI%1 )n = (%1 )n ,








(CI(%1 U %2 ))n = (%1 )n U (%2 )n ,





(CI(%1 u %2 ))n = (%1 )n (%2 )n ,




(CI(%1 %2 ))n = (%1 )n (%2 )n .
226

fiCombining Spatial Temporal Logics: Expressiveness vs. Complexity

Next extend n translations arbitrary spatio-temporal terms . First
0
introduce translation n encode truth value arbitrary spatio-temporal terms
roots n-brooms G: region term %, let
0n

(%)

n
_

=

k

(%)n .

k=1
0

formula shows, particular, n redundant region terms since
0
truth values roots computed defined n . spatio-temporal term
form I%, % region term, take
0n

(I%)

n
^

=

k

(%)n







(I%)n = (%)n

i, 1 n,

k=1

then, spatio-temporal terms 1 2 ,10




(1 )n = (1 )n







(1 u 2 )n = (1 )n (2 )n



i, 0 n.

Finally, define translation n subformulas : spatio-temporal term ,
n

(2 )


0n

= x ( )



n
^

k

x ( )n

k=1

and, spatio-temporal formulas 1 2 ,
(1 )n = 1n ,

(1 2 )n = 1n 2n ,

(1 U 2 )n = 1n U 2n ,

(1 2 )n = 1n 2n ,

Clearly, length n linear n `().
Lemma C.5. PT L RC -formula width n satisfiable Aleksandrov tt-model
based (finite) disjoint union n-brooms iff n satisfiable first-order temporal
model (with finite domain) based flow time.
Proof. () Suppose satisfied Aleksandrov tt-model = hF, G, Vi,
0 1
n
F = hW, <i, G = hV, Ri disjoint
unionffof n-brooms

0 n ffb = hWb , Rb i, Wb = {xb , xb , . . . , xb }
0
1
Rb reflexive closure { xb , xb , . . . , xb , xb } (see Fig. 11).
Construct first-order temporal model N = hF, D, Ii taking set
db n-brooms b G and, every w W ,

E
I(w)
I(w)
I(w)
I(w)
I(w) = D, P11 , . . . , P1n , P21 , . . . , P2n , . . . ,
spatial variable pj i, 1 n,
I(w)

Pji




= {db | (M, w, xib ) |= pj }.

10. brevity, definition follow syntax PT L RC rather PT L RC .

227

fiGabelaia, Kontchakov, Kurucz, Wolter, & Zakharyaschev

Note finite whenever G finite.
Now, induction construction spatio-temporal region term % ,
easily shown every w W , every n-broom b G every i, 1 n,




(58)
(N, w) |= (%)n [db ] iff (M, w, xib ) |= %.
Next, (58) extended arbitrary spatio-temporal terms i, 0 n:


(N, w) |= ( )n [db ]




iff (M, w, xib ) |= .

(59)

cases i, 1 n, trivially follow (58) fact leaves
successors themselves. Consider = 0. case = % holds simply region
terms interpreted regular closed sets:






(M, w, x0b ) |= %
iff
(M, w, xkb ) |= %, k, 1 k n,
(60)
= I% then, one hand,



(M, w, x0b ) |= I%

iff




(M, w, xkb ) |= %,

k, 0 k n,

0

other, definition n ,
0

(N, w) |= (I%)n [db ]

iff

k

(N, w) |= (%)n [db ],

k, 1 k n,

together (60) IH yields (59). cases Booleans trivial.
Finally, show every sub ,
(N, w) |= n

iff

(M, w) |= .

:
Case = 2
)n
(N, w) |= (2

k

iff

db k {0, 1, . . . , n} (N, w) |= ( )n [db ]



b G k {0, 1, . . . , n} (M, w, xkb ) |=

iff

.
(M, w) |= 2

iff

remaining cases trivial. follows n satisfied N.
() Assume satisfied first-order temporal model N = hF, D, Ii,
F = hW, <i and, every w W ,

E
I(w)
I(w)
I(w)
I(w)
I(w) = D, P11 , . . . , P1n , P21 , . . . , P2n , . . . .
every point associate n-broom bd = hWbd , Rbd sets Wbd ,
D, pairwise disjoint contains n + 1 distinct elements x0bd , . . . , xnbd .
Construct Aleksandrov tt-model = hF, G, Vi taking
G disjoint union n-brooms {bd | D},



V(pj , w) = xibd | (N, w) |= (CIpj )n [d], 0 n .
228

fiCombining Spatial Temporal Logics: Expressiveness vs. Complexity

Clearly, finite G finite well.
straightforward induction one show w W , D, spatio-temporal
region terms %, spatio-temporal terms , subformulas , i, 0 n,




iff
(M, w, xibd ) |= %
(i > 0),
(N, w) |= (%)n [d]





(N, w) |= ( ) [d]
iff
(M, w, xbd ) |= ,
(N, w) |= n

iff

(M, w) |= .

example,
0

(N, w) |= (I%)n [d]

iff
iff
iff

k

(N, w) |= (%)n [d], k, 0 k n



(M, w, xkbd ) |= %, k, 0 k n



(M, w, x0bd ) |= I%.
q

follows satisfied M.
obtain upper complexity bounds combinations PT L RC :

Proof Theorem 3.11, upper bound. Follows Lemmas C.2 (ii) C.5 together
results complexity one-variable fragment QT L (Halpern & Vardi,
1989; Sistla & German, 1987; Hodkinson et al., 2000, 2003).
q
Proof Theorem 3.12, upper bound. Similar proof above.

q

Proof Theorem 3.15, upper bound. proof follows Lemmas C.2 (i) C.5
together upper complexity bound guarded monodic (and one-variable)
fragment QT L (Hodkinson, 2004).
q
C.4 Lower Complexity Bounds (II): Embedding First-Order Temporal Logic
position prove Theorem 3.14 establish lower complexity bounds
spatio-temporal logics based BRCC-8 (and based RC well). Denote
QT L12 one-variable fragment QT L sole temporal operator 2F . define
polynomial embedding QT L12 PT L2 BRCC-8. Note similar embedding
full one-variable fragment QT L1 PT L BRCC-8 regarded alternative
way prove lower complexity bound Theorem 3.12.
QT L12 -formula said basic Q-formula form x (x),
(x) quantifier-free contains propositional variables. QT L12 -sentence Qnormal form built basic Q-formulas using Booleans temporal operator
2F . words, sentences Q-normal form contain nested quantifiers use
unary predicate symbols. following observation come surprise (see,
e.g., Hughes & Cresswell, 1996):
Lemma C.6. every QT L12 -sentence one effectively construct QT L12 -sentence

b Q-normal form satisfiable first-order temporal model flow
time F (and finite domain) iff
b satisfiable first-order temporal model based
F (and finite domain). Moreover, length
b linear length .
229

fiGabelaia, Kontchakov, Kurucz, Wolter, & Zakharyaschev

Proof. Without loss generality may assume contains occurrences .
transform Q-normal form, first introduce fresh unary predicate symbol Pi (x)
every propositional variable pi replace occurrence pi x Pi (x).
Denote resulting formula 0 . every subformula 0 define formula ]
taking inductively
(P (x))] = P (x),
()] = ] ,

(x )] = Px (x),
(1 2 )] = 1] 2] ,

Px (x) fresh unary predicate symbol. Let

^

2+
x Px (x) x Px (x)

b = x ]0
F

(2F )] = 2F ] ,

x Px (x) x ]




.

xsub0

One readily show induction
b satisfiable first-order temporal model based
F (and finite domain) iff satisfiable first-order temporal model based
F (and finite domain). Moreover,
b Q-normal form.
q
Now, given QT L12 -formula Q-normal form, denote result replacing
occurrences basic Q-formulas x (x) EQ( , >), > region term
representing whole space (for instance, CIu CIu fresh spatial variable u),
translation quantifier-free formulas (x) defined taking:
(P (x)) = CIp,

() = CI ,

(1 2 ) = CI(1 u 2 ),

(2F ) = CI2F ,

P (x) unary predicate symbol p spatial variable standing P (x). Clearly,
belongs PT L2 BRCC-8.
Lemma C.7. QT L12 -sentence Q-normal form satisfiable first-order temporal
model based flow time F finite domain iff satisfiable tt-model
based F satisfying FSA.
Proof. () Suppose Q-normal form = hF, D, Ii first-order temporal



I(w)
model, F = hW, <i and, w W , I(w) = D, P0 , . . . , . Let (M, w0 ) |=
w0 W . Construct Aleksandrov tt-model M0 = hF, G, Vi taking G = hD, Ri,

I(w)
R = {hd, di | D} V(pi , w) = hw, di | Pi
. Note topological
space TG = hD, IG induced G discrete, i.e., X D,
IG X = CG X = X.
follows induction every quantifier-free QT L12 -formula , every w W
every
(M, w) |= [d]

iff

(M0 , hw, di) |= .

Therefore, every basic Q-formula x (x) every w W , (M, w) |= x (x) iff
(M0 , w) |= EQ( , >). follows induction (M0 , w0 ) |= .
230

fiCombining Spatial Temporal Logics: Expressiveness vs. Complexity

() Suppose satisfied tt-model based F = hW, <i. Lemma C.1 (i),
satisfied Aleksandrov tt-model = hF, G, Vi, G = hV, Ri disjoint
union brooms. Denote V0 V set leaves G define first-order temporal
model M0 = hF, V0 , Ii taking, w W ,



I(w)
I(w)
I(w) = V0 , P0 , . . .

Pi
= V(pi , w) V0 .


Clearly, every X V , IG X V0 = CG X V0 = X V0 , TG = hV, IG
topological space induced G. obtain induction every quantifier-free
QT L12 -formula , w W V0
(M0 , w) |= [d]

iff

(M, hw, di) |= .

regular closed set X V TG coincides V iff contains V0 . So, basic
Q-formulas x (x) w W , (M0 , w) |= x (x) iff (M, w) |= EQ( , >). follows
induction satisfied M0 .
q
Proof Theorem 3.14, lower bound. Lemmas C.6 C.7 satisfiability problem QT L12 -formulas first-order temporal models finite domains based
hN, <i, hZ, <i arbitrary finite flows time polynomially reducible satisfiability PT L2 BRCC-8 formulas tt-models FSA. Since former known
EXPSPACE-hard (Hodkinson et al., 2003) hN, <i hZ, <i, latter
EXPSPACE-hard cases. noted result Hodkinson
colleagues (2003) readily extended case arbitrary finite flows time
(by reduction finite version corridor tiling problem). gives us lower
complexity bound PT L2 BRCC-8 case finite flows time.
q
C.5 PSPACE-complete Spatio-Temporal Logic
appendix prove Theorem 3.8. fact, show satisfiability problem
PT L RC 2 extension PT L RCC-8is decidable PSPACE, RC 2
sublanguage S4u spatial terms restricted following:
%

::= CIp,



::= %



::= I%



::= 1 2

|

I%,
|

%,
|

1 2

|

.

before, denote spatial terms representing regular closed sets (regions)
representing regular open sets (the interiors regions). Clearly, definition
equivalent definition p. 190 (where make explicit distinction
). easy see RC 2 contains RCC-8, less expressive BRCC-8.
Spatio-temporal terms PT L RC 2 constructed region terms form
%

::=

CIp

|

CI %

way spatial terms RC 2 . Finally, PT L RC 2 -formulas composed
using Booleans temporal operators.
atomic formulas form 2
231

fiGabelaia, Kontchakov, Kurucz, Wolter, & Zakharyaschev

reduce satisfiability problem PT LRC 2 PT L. reduction
done number steps.
Let F = hW, <i flow time (as formulation Theorem 3.8)
PT L RC 2 -formula. begin removing next-time operator subterms .
end, let 0 = variable p set
1

=

{p | CI CIp term 0 },

introduce fresh spatial variable p0 , put
^

+
(CI CIp CIp0 ) ,
1 = 1
2+
2
>

2
P F
p1

1 result replacing occurrence CI CIp 0 CIp0
(% % ). Next, p
(%
(% % ) 2
2
1
2
1
2
1 %2 ) stands 2
2

=

{p | CI CIp term 1 },

introduce fresh spatial variable p0 , set
^
+
2 = 2
2+
P 2F

>


(CI CIp CIp0 ) ,
2

p1 2

2 result replacing occurrence CI CIp 1 CIp0 . repeating
process sufficiently many times obtain formula
^

+
(CI CIp CIp0 ) ,
2
>

2
(61)

e =
2+
P F
p

suitable set spatial variables, contains region terms,
is, PT L[RC 2 ]-formula. (Note spatial variable p occurs
either CI CIp
/ term p .) clear length
e
linear length , satisfiable tt-model based F iff
e satisfiable
tt-model based F.
Thus, suffices reduce satisfiability problem PT L RC 2 -formulas
form (61) satisfiability problem PT L-formulas. Let us recall function
Appendix B.1 maps PT L[S4u ]-formulas (in particular, PT L[RC 2 ]-formulas)
, let (2
) = p , p
PT L-formulas. Namely, every atomic RC 2 -formula 2


fresh propositional variable. Then, given PT L[RC 2 ]-formula , define
(2
) .
result replacing every occurrence 2
shown proof
Theorem 3.1, satisfiable tt-model F = hW, <i iff
(s1) exists temporal model N = hF, Ui satisfying and,
(s2) every w W , set
| (N, w) |= p , term } {2
| (N, w) |= p , term }
w = {2
(62)





RC 2 -formulas satisfiable.
232

fiCombining Spatial Temporal Logics: Expressiveness vs. Complexity

preserve satisfiability whole ,
e ensure somehow
(s3) points satisfying w predecessors successors satisfying w1
w+1 , respectively.
remainder appendix first describe encoding satisfiability
problem sets RC 2 -formulas form (62) Boolean logic, used
part final reduction. prove completion property RC 2 (cf. Balbiani &
Condotta, 2002) class exhaustive models contain sufficiently many points
every type. Roughly, completion property says that, given set form (62)
exhaustive model satisfying subset , one extend valuation model
satisfy whole . property make possible solve problem (s3) above.
worth noting similar construction works stronger languages BRCC-8,
then, enjoy completion property, sets (62) may need exponentially many formulas (in
number spatial variables) and, therefore, reduction PT L exponential
well. RC 2 suffices consider sets (62) quadratic number formulas,
results quadratic reduction.
C.5.1 Properties RC 2 -formulas
finite set = {p1 , . . . , pn } spatial variables, let



AtFm =
2
| RC 2 -term variables .
Clearly, every RC 2 -formula spatial variables Boolean combination spatial
formulas AtFm . clear |AtFm | 16 ||2 .
width RC 2 -formulas 2 (see p. 209 definition), Lemmas A.1
C.2 (ii), RC 2 -formula satisfiable iff satisfiable Aleksandrov topological model
based disjoint union 2-brooms, alias forks. follows regard every
model disjoint union fork models = hf, vi, f = hW, Ri, W = {x0 , x1 , x2 },
R reflexive closure {hx0 , x1 i, hx0 , x2 i} v valuation spatial variables.
Given 0 , say fork models m1 = hf, v1 m2 = hf, v2 0 -equivalent
write m1 0 m2 , v1 (CIp) = v2 (CIp) every p 0 .
Given AtFm AtFm , say f-consequence
write |=f |= implies |= every fork model based f. said
closed (under
f-consequences) if,
, whenever |=f .

every AtFm
c
| 2
AtFm
Let c = 2
. satisfiable iff closed satisfiable.
means, particular, check whether set w (62) satisfiable, enough
| (N, w) |= p , term }.
consider closure {2

characterise |=f terms Boolean consequence relation |=. know
Appendix C.3, spatial formulas embedded one-variable fragment
first-order logic. precisely, easily shown first-order translations
formulas AtFm (equivalent to) formulas form (which actually Krom
formulas; see, e.g., Borger, Gradel, & Gurevich, 1997):
1
1
2
2
( ))2 = x 2 2
(2
x 12 22 ,
1
2
1
2
1
1
2
2
( ))2 = x 2 2
(2
x 12 22 ,
1
2
1
2

233

(63)
(64)

fiGabelaia, Kontchakov, Kurucz, Wolter, & Zakharyaschev

1

1

( ))2 = x 2 2
(2
1
2
1
2

1

2

x 12 22

2

1

x 12 22

2
2
x 12 22 , (65)




i2

(
Pji (x),
= CIpj ,
=
Pji (x), = ICIpj



i2

(
Pji (x),
= ICIpj ,
=
Pji (x), = CIpj ,

= 1, 2.

follows proof Lemma C.5 RC 2 -formula satisfied Aleksandrov
2 satisfied
model based disjoint union forks iff first-order

translation

0
1
2
0
first-order model every fork f = hW, Ri M, W = x , x , x , x Rx1 x0 Rx2 ,
encoded domain element df Pji (x) true df iff (M, xi ) |= CIpj ,
= 1, 2 (see Fig. 11). Since definition closed sets consider Aleksandrov
models based single fork f, domains respective first-order models contain single
element df . means (63)(65) encoded Boolean formulas
2
2
1 2 ,
1
1
2
2
( )) =
(2
1 2 1 2 ,
1
2
2
1
1
1
( )) =
(2
1 2 1 2
1
2
1

1

( )) =
(2
1 2
1
2





2

1

1 2



2
2
1 2 ,




(
qji ,
= CIpj ,
=
qji , = ICIpj


(
qji ,
= ICIpj ,
=
qji , = CIpj ,




= 1, 2.

Thus, every AtFm associate conjunction -translations
formulas following holds:
Claim C.8. every AtFm , |=f

iff

|= .

construct closure AtFm check whether satisfiable,
use following resolution-like inference rules:
()

()

( %)
2
1

(I% )
2
2

()1

( )
2
1
2

%
2

%
2



2(1 )


()

(I% )
2
1
(% )
2
1

2(0


2 )

( )
2
1
2

()2

(% )
2
1
(I% )
2
1


0

= %, = I%;

= %, 0 = %;


= I%, 0 = I%;

together equivalences:
% = 2
I%,
2

% = 2
I%,
2

(% ) = 2
(I% ),
2
1
1

(% ) = 2
(I% ),
2
1
1

% = CIp p , 1 2 form % I%, 1 2 form
I% %. readily checked rules sound, derivable ,
satisfiable. hand, satisfiable regarded
234

fiCombining Spatial Temporal Logics: Expressiveness vs. Complexity

unsatisfiable set binary unary propositional clauses and, using standard
resolution procedure, one construct derivation empty clause which,
turn, mimicked applications rules (and equivalences) derive
. Moreover, since propositional resolution subsumption complete (see, e.g.,
Slagle, Chang, & Lee, 1969), derive consequences , thereby obtaining
closure.
encode rules equivalences Boolean formulas variables p ,
AtFm . instance, () () encoded
2



% 2
%
( )
( %) 2
(I% ) 2
2


2
,
2
1
2
1
respectively. Denote conjunction formulas spatial variables
. following:
Claim C.9. every AtFm , closed satisfiable iff Boolean formula
h ^

^
p
p
(66)

AtFm
2



2

satisfiable.
Finally, ensure (s3), need following completion property RC 2 :
Lemma C.10. Let closed subset AtFm , 0 0 = AtFm0 .
(i) 0 closed (ii) every fork model m0 , m0 |= 0 fork model
m0 0 |= .
Proof. Claim (i) clear. show (ii), define characteristic formula m0 0
taking:
(
^
qji , (m0 , xi ) 6|= CIpj ,


=
lji

lji =
qji ,
(m0 , xi ) |= CIpj .
p , i=1,2
j

0

m0 |= 0 follows immediately definitions 0 satisfiable.
aim show satisfiable, would mean fork model
required. Suppose otherwise. |= . regard set unary
. According
binary clauses clause 2 |0 | literals lji , negations lji
subsumption theorem (Slagle et al., 1969), applying standard resolution rule
, derive clause lj1 i1 lj2 i2 subsumes (i.e., literals occur
). Since closed, lj1 i1 lj2 i2 among clauses ljk ik

k -translations spatial terms spatial variables 0 , conclude lj1 i1 lj2 i2
indeed among clauses 0 , contrary 0 satisfiable.
q
C.5.2 Polynomial Translation PT L RC 2 PT L
position define polynomial (at quadratic) translation
PT L RC 2 PT L. Starting given formula , construct PT L RC 2 formula
e form (61):
^

+
(CI CIp CIp0 ) ,

e =
2+
>2
P 2F
p

235

fiGabelaia, Kontchakov, Kurucz, Wolter, & Zakharyaschev

PT L[RC 2 ]-formula. Let 0 = {p0 | p } let denote smallest
set spatial variables containing 0 spatial variables occurring . Given

AtFm
0 formula AtFm 0
2
, denote 2
obtained 2 replacing
0
0
every occurrence p p . Consider PT L-formula


=





+
2+
P 2 F



+
2+
P 2F

>



^


2
0 ) .
( 2

AtFm
2


Lemma C.11. every PT L RC 2 -formula ,
e satisfiable tt-model based
F = hW, <i iff satisfiable temporal model based F.
Proof. () Let (M, w0 ) |= .
e Construct temporal model N = hF, Vi taking,

2 AtFm ,
}.
V(p ) = {w W | (M, w) |= 2
easy see (N, w0 ) |= .
() Let (N, w0 ) |= w0 W . every w W , set
AtFm
w = {2
| (N, w) |= p }.

Let w , w W , set non--equivalent fork models |= w .
Claim C.9, w closed satisfiable, sets w nonempty. use
elements w building blocks exhaustive states tt-model going
construct order satisfy .
First show element w successor w+1 predecessor
w1 (provided w successor predecessor, respectively). precisely,
say pair fork models = hf, vi m0 = hf, v0 suitable write m0
v(CIp0 ) = v0 (CIp), every p .
(succ) Let w , = hf, vi, let w W successor w + 1. third
conjunct ,
w AtFm0

=

0 AtFm 0
{2
| (N, w) |= p 0 }

=

0 AtFm 0
{2
| (N, w + 1) |= p }.

Therefore,
w+1 AtFm

=

AtFm
{2
| (N, w) |= p 0 }.

Now, w , |= w AtFm0 . define fork model m0 = hf, v0
taking v0 (p) = v(p0 ), p (and arbitrary otherwise), m0 |= w+1 AtFm
follows. Since w+1 closed, Lemma C.10, find fork model m00 = hf, v00
m00 m0 m00 |= w+1 . follows m00 m00 -equivalent
fork model w+1 (i.e., may assume m00 w+1 ).
(pred ) Similarly, every , = hf, vi, every w W predecessor
w 1, m00 = hf, v00 m00 w1 m00 m.
clear every fork model w every w W , define
function rm,w gives u W fork model rm,w (u) u rm,w (w) =
236

fiCombining Spatial Temporal Logics: Expressiveness vs. Complexity

rm,w (u) rm,w (u + 1), whenever u + 1 successor u. Let set
functions rm,w , w W w .
ready define Aleksandrov tt-model = hF, G, Vi satisfying .
e Let
G = hW, Ri disjoint union ||-many forks fr = hWr , Rr i, Wr = {x0r , x1r , x2r }, x0r Rr x1r
x0r Rr x2r , r , let V(p, w) = {xir W | (r(w), xir ) |= CIp}, p
w W . show induction construction sub that, every w W ,
(M, w) |=

iff

(N, w) |= .

. Suppose (M, w) |= 2
(N, w) 6|= p . 2

Case = 2
/ w and, since

. follows
w closed (by Claim C.9 true w), w 6|=f 2
, r r(w) = m,
fork model w |= 2
. Conversely, (N, w) |= p

contrary (M, w) |= 2
then, construction, (M, w) |= 2 .
cases Booleans temporal operators trivial.
second conjunct
e satisfied construction, obtain (M, w0 ) |= .
e
q

References
Aiello, M., & van Benthem, J. (2002a). Logical patterns space. Barker-Plummer,
D., Beaver, D. I., van Benthem, J., & Scotto di Luzio, P. (Eds.), Words, Proofs
Diagrams, pp. 525. CSLI Publications, Stanford.
Aiello, M., & van Benthem, J. (2002b). modal walk space. Journal Applied
Non-Classical Logics, 12 (34), 319364.
Alexandroff, P. (1937). Diskrete Raume. Matematicheskii Sbornik, 2 (44), 501518.
Allen, J. (1983). Maintaining knowledge temporal intervals. Communications
ACM, 26, 832843.
Areces, C., Blackburn, P., & Marx, M. (2000). computational complexity hybrid
temporal logics. Logic Journal IGPL, 8, 653679.
Arhangelskii, A., & Collins, P. (1995). submaximal spaces. Topology Applications, 64, 219241.
Asher, N., & Vieu, L. (1995). Toward geometry common sense: semantics
complete axiomatization mereotopology. Mellish, C. (Ed.), Proceedings
14th International Joint Conference Artificial Intelligence (IJCAI-95), pp. 846
852. Morgan Kaufmann.
Balbiani, P., & Condotta, J.-F. (2002). Computational complexity propositional linear
temporal logics based qualitative spatial temporal reasoning. Armando, A.
(Ed.), Proceedings Frontiers Combining Systems (FroCoS 2002), Vol. 2309
Lecture Notes Computer Science, pp. 162176. Springer.
Balbiani, P., Tinchev, T., & Vakarelov, D. (2004). Modal logics region-based theories
space. Manuscript.
Bennett, B. (1994). Spatial reasoning propositional logic. Proceedings 4th
International Conference Knowledge Representation Reasoning, pp. 5162.
Morgan Kaufmann.
237

fiGabelaia, Kontchakov, Kurucz, Wolter, & Zakharyaschev

Bennett, B. (1996). Modal logics qualitative spatial reasoning. Logic Journal
IGPL, 4, 2345.
Bennett, B., & Cohn, A. (1999). Multi-dimensional multi-modal logics framework
spatio-temporal reasoning. Proceedings Hot topics Spatio-temporal
reasoning workshop, IJCAI-99, Stockholm.
Bennett, B., Cohn, A., Wolter, F., & Zakharyschev, M. (2002). Multi-dimensional modal
logic framework spatio-temporal reasoning. Applied Intelligence, 17, 239251.
Blackburn, P. (1992). Fine grained theories time. Aurnague, M., Borillo, A., Borillo,
M., & Bras, M. (Eds.), Proceedings 4th European Workshop Semantics
Time, Space, Movement Spatio-Temporal Reasoning, pp. 299320, Chateau
de Bonas, France. Groupe Langue, Raisonnement, Calcul, Toulouse.
Borger, E., Gradel, E., & Gurevich, Y. (1997). Classical Decision Problem. Perspectives
Mathematical Logic. Springer.
Bourbaki, N. (1966). General topology, Part 1. Hermann, Paris Addison-Wesley.
Chagrov, A., & Zakharyaschev, M. (1997). Modal Logic, Vol. 35 Oxford Logic Guides.
Clarendon Press, Oxford.
Chlebus, B. (1986). Domino-tiling games. Journal Computer System Sciences, 32,
374392.
Clarke, B. (1981). calculus individuals based connection. Notre Dame Journal
Formal Logic, 23, 204218.
Clarke, B. (1985). Individuals points. Notre Dame Journal Formal Logic, 26, 6175.
Clarke, E., & Emerson, E. (1981). Design synthesis synchronisation skeletons using
branching time temporal logic. Kozen, D. (Ed.), Logic Programs, Vol. 131
Lecture Notes Computer Science, pp. 5271. Springer.
Clementini, E., Di Felice, P., & Hernandez, D. (1997). Qualitative representation positional information. Artificial Intelligence, 95, 317356.
Cohn, A. (1997). Qualitative spatial representation reasoning techniques. Brewka,
G., Habel, C., & Nebel, B. (Eds.), KI-97: Advances Artificial Intelligence, Vol. 1303
Lecture Notes Computer Science, pp. 130. Springer.
Davis, E. (1990). Representations Commonsense Knowledge. Morgan Kaufmann.
Degtyarev, A., Fisher, M., & Konev, B. (2003). Monodic temporal resolution. Baader,
F. (Ed.), Proceedings 19th International Conference Automated Deduction (CADE-19), Vol. 2741 Lecture Notes Artificial Intelligence, pp. 397411.
Springer.
Demri, S., & DSouza, D. (2002). automata-theoretic approach constraint LTL.
Agrawal, M., & Seth, A. (Eds.), Proceedings 22nd Conference Foundations
Software Technology Theoretical Computer Science (FST TCS 2002), Vol. 2556
Lecture Notes Computer Science, pp. 121132. Springer.
Egenhofer, M., & Franzosa, R. (1991). Point-set topological spatial relations. International
Journal Geographical Information Systems, 5, 161174.
238

fiCombining Spatial Temporal Logics: Expressiveness vs. Complexity

Egenhofer, M., & Herring, J. (1991). Categorizing topological relationships regions,
lines points geographic databases. Tech. rep., University Maine.
Egenhofer, M., & Sharma, J. (1993). Assessing consistency complete incomplete
topological information. Geographical Systems, 1, 4768.
Emerson, E., & Halpern, J. (1985). Decision procedures expressiveness temporal
logic branching time. Journal Computer System Sciences, 30, 124.
Fine, K. (1974). Logics containing K4, part I. Journal Symbolic Logic, 39, 229237.
Finger, M., & Gabbay, D. (1992). Adding temporal dimension logic system. Journal
Logic, Language Information, 2, 203233.
Fisher, M., Dixon, C., & Peim, M. (2001). Clausal temporal resolution. ACM Transactions
Computational Logic (TOCL), 2, 1256.
Gabbay, D., Hodkinson, I., & Reynolds, M. (1994). Temporal Logic: Mathematical Foundations Computational Aspects, Volume 1. Oxford University Press.
Galton, A., & Meathrel, R. (1999). Qualitative outline theory. Dean, T. (Ed.), Proceedings
16th International Joint Conference Artificial Intelligence (IJCAI-99), pp.
10611066. Morgan Kaufmann.
Gerevini, A., & Nebel, B. (2002). Qualitative spatio-temporal reasoning RCC-8 Allens interval calculus: Computational complexity. Proceedings 15th European
Conference Artificial Intelligence (ECAI02), pp. 312316. IOS Press.
Gerevini, A., & Renz, J. (2002). Combining topological size constraints spatial
reasoning. Artificial Intelligence, 137, 142.
Godel, K. (1933). Eine Interpretation des intuitionistischen Aussagenkalkuls. Ergebnisse
eines mathematischen Kolloquiums, 4, 3940.
Goldblatt, R. (1976). Metamathematics modal logic, Part I. Reports Mathematical
Logic, 6, 4178.
Goranko, V., & Passy, S. (1992). Using universal modality: gains questions. Journal
Logic Computation, 2, 530.
Gotts, N. (1996). axiomatic approach topology spatial information systems. Tech.
rep. 96.25, School Computer Studies, University Leeds.
Halpern, J., & Shoham, Y. (1986). propositional modal logic time intervals. Proceedings 1st Annual IEEE Symposium Logic Computer Science (LICS86),
pp. 279292. IEEE Computer Society.
Halpern, J., & Vardi, M. (1989). complexity reasoning knowledge time I:
lower bounds. Journal Computer System Sciences, 38, 195237.
Hodkinson, I. (2004). Complexity monodic packed fragment linear real time.
appear Annals Pure Applied Logic, available http://www.doc.ic.ac.uk/
/~imh/papers/cxmonlin.pdf.
Hodkinson, I., Kontchakov, R., Kurucz, A., Wolter, F., & Zakharyaschev, M. (2003).
computational complexity decidable fragments first-order linear temporal
239

fiGabelaia, Kontchakov, Kurucz, Wolter, & Zakharyaschev

logics. Reynolds, M., & Sattar, A. (Eds.), Proceedings TIME-ICTL 2003, pp.
9198. IEEE Computer Society.
Hodkinson, I., Wolter, F., & Zakharyaschev, M. (2000). Decidable fragments first-order
temporal logics. Annals Pure Applied Logic, 106, 85134.
Hodkinson, I., Wolter, F., & Zakharyaschev, M. (2001). Monodic fragments first-order
temporal logics: 20002001 A.D. Nieuwenhuis, R., & Voronkov, A. (Eds.), Logic
Programming, Artificial Intelligence Reasoning, Vol. 2250 Lecture Notes
Artificial Intelligence, pp. 123. Springer.
Hodkinson, I., Wolter, F., & Zakharyaschev, M. (2002). Decidable undecidable fragments first-order branching temporal logics. Proceedings 17th Annual
IEEE Symposium Logic Computer Science (LICS 2002), pp. 393402. IEEE
Computer Society.
Hughes, G., & Cresswell, M. (1996). New Introduction Modal Logic. Methuen, London.
Hustadt, U., & Konev, B. (2003). TRP++ 2.0: temporal resolution prover. Baader,
F. (Ed.), Proceedings 19th International Conference Automated Deduction
(CADE-19), Vol. 2741 Lecture Notes Computer Science, pp. 274278. Springer.
Kontchakov, R., Lutz, C., Wolter, F., & Zakharyaschev, M. (2004). Temporalising tableaux.
Studia Logica, 76, 91134.
Kutz, O., Sturm, H., Suzuki, N.-Y., Wolter, F., & Zakharyaschev, M. (2003). Logics
metric spaces. ACM Transactions Computational Logic, 4, 260294.
Ladner, R. (1977). computational complexity provability systems modal logic.
SIAM Journal Computing, 6, 467480.
Lemon, O., & Pratt, I. (1998). incompleteness modal logics space: advancing complete modal logics place. Kracht, M., de Rijke, M., Wansing, H., &
Zakharyaschev, M. (Eds.), Advances Modal Logic, Volume 1, pp. 115132. CSLI
Publications, Stanford.
Lewis, C., & Langford, C. (1932). Symbolic Logic. Appleton-Century-Crofts, New York.
Ligozat, G. (1998). Reasoning cardinal directions. Journal Visual Languages
Computing, 9, 2344.
Manna, Z., & Pnueli, A. (1992). Temporal Logic Reactive Concurrent Systems.
Springer.
McKinsey, J. (1941). solution decision problem Lewis systems S2 S4,
application topology. Journal Symbolic Logic, 6, 117134.
McKinsey, J., & Tarski, A. (1944). algebra topology. Annals Mathematics, 45,
141191.
Muller, P. (1998a). qualitative theory motion based spatio-temporal primitives.
Cohn, A., Schubert, L., & Shapiro, S. (Eds.), Proceedings 6th International
Conference Principles Knowledge Representation Reasoning (KR98), pp.
131142. Morgan Kaufmann.
240

fiCombining Spatial Temporal Logics: Expressiveness vs. Complexity

Muller, P. (1998b). Space-time primitive space motion. Guarino, N. (Ed.),
Proceedings International Conference Formal Ontology Information Systems (FOIS98), Vol. 46 Frontiers Artificial Intelligence Applications, pp.
6376. IOS Press.
Nebel, B., & Burckert, H. (1995). Reasoning relations: maximal tractable subclass
Allens interval algebra. Journal ACM, 42, 4366.
Nebel, B. (1996). Artificial intelligence: computational perspective. Brewka, G. (Ed.),
Principles Knowledge Representation, pp. 237266. CSLI Publications.
Nutt, W. (1999). translation qualitative spatial reasoning problems modal
logics. Burgard, W., Christaller, T., & Cremers, A. (Eds.), Advances Artificial Intelligence. Proceedings 23rd Annual German Conference Artificial
Intelligence (KI99), Vol. 1701 Lecture Notes Computer Science, pp. 113124.
Springer.
Ono, H., & Nakamura, A. (1980). size refutation Kripke models linear
modal tense logics. Studia Logica, 39, 325333.
Orlov, I. (1928). calculus compatibility propositions. Mathematics USSR,
Sbornik, 35, 263286. (In Russian).
Post, E. (1946). variant recursively unsolvable problem. Bulletin AMS, 52,
264268.
Pratt-Hartmann, I. (2002). topological constraint language component counting.
Journal Applied Non-Classical Logics, 12, 441467.
Randell, D., Cui, Z., & Cohn, A. (1992). spatial logic based regions connection.
Nebel, B., Rich, C., & Swartout, W. (Eds.), Proceedings 3rd International
Conference Principles Knowledge Representation Reasoning (KR92), pp.
165176. Morgan Kaufmann.
Renz, J. (1998). canonical model region connection calculus. Cohn, A., Schubert,
L., & Shapiro, S. (Eds.), Proceedings 6th International Conference Principles Knowledge Representation Reasoning (KR98), pp. 330341. Morgan
Kaufmann.
Renz, J., & Nebel, B. (1998). Spatial reasoning topological information. Freksa, C.,
Habel, C., & Wender, K. (Eds.), Spatial CognitionAn Interdisciplinary Approach
Representation Processing Spatial Knowledge, Vol. 1404 Lecture Notes
Computer Science, pp. 351372. Springer.
Renz, J., & Nebel, B. (1999). complexity qualitative spatial reasoning. Artificial
Intelligence, 108, 69123.
Renz, J. (2002). canonical model region connection calculus. Journal Applied
Non-Classical Logics, 12, 469494.
Renz, J., & Nebel, B. (2001). Efficient methods qualitative spatial reasoning. Journal
Artificial Intelligence Research, 15, 289318.
Reynolds, M. (2003). complexity temporal logic general linear
time. Journal Computer System Science, 66, 393426.
241

fiGabelaia, Kontchakov, Kurucz, Wolter, & Zakharyaschev

Reynolds, M. (2004). complexity temporal logic reals. Submitted,
available http://www.csse.uwa.edu.au/~mark/research/Online/CORT.htm.
Schwendimann, S. (1998). new one-pass tableau calculus PLTL. de Swart, H. (Ed.),
Proceedings International Conference Automated Reasoning Analytic
Tableaux Related Methods (TABLEAUX-98), Vol. 1397 Lecture Notes Artificial Intelligence, pp. 277291. Springer.
Sistla, A., & Clarke, E. (1985). complexity propositional linear temporal logics.
Journal Association Computing Machinery, 32, 733749.
Sistla, A., & German, S. (1987). Reasoning many processes. Proceedings
Second IEEE Symposium Logic Computer Science (LICS87), pp. 138153. IEEE
Computer Society.
Slagle, J., Chang, C.-L., & Lee, R. (1969). Completeness theorems semantic resolution
consequence-finding. Proceedings 1st International Joint Conference
Artificial Intelligence (IJCAI69), pp. 281286. William Kaufmann.
Smith, T., & Park, K. (1992). algebraic approach spatial reasoning. International
Journal Geographical Information Systems, 6, 177192.
Stockmeyer, L. (1974). Complexity Decision Problems Automata Theory
Logic. Ph.D. thesis, MIT.
Stockmeyer, L. (1987). Classifying computational complexity problems. Journal
Symbolic Logic, 52, 143.
Stone, M. (1937). Application theory Boolean rings general topology. Transactions AMS, 41, 321364.
Tarski, A. (1938). Der Aussagenkalkul und die Topologie. Fundamenta Mathematicae, 31,
103134.
Tsao Chen, T. (1938). Algebraic postulates geometric interpretation Lewis
calculus strict implication. Bulletin AMS, 44, 737744.
van Benthem, J. (1995). Temporal logic. Gabbay, D., Hogger, C., & Robinson, J. (Eds.),
Handbook Logic Artificial Intelligence Logic Programming, Vol. 4, pp. 241
350. Oxford Scientific Publishers.
van Emde Boas, P. (1997). convenience tilings. Sorbi, A. (Ed.), Complexity, Logic
Recursion Theory, Vol. 187 Lecture Notes Pure Applied Mathematics,
pp. 331363. Marcel Dekker Inc.
Wolper, P. (1985). tableau method temporal logic: overview. Logique et Analyse,
28, 119152.
Wolter, F. (1996). Properties tense logics. Mathematical Logic Quarterly, 42, 481500.
Wolter, F., & Zakharyaschev, M. (2000a). Spatial reasoning RCC-8 Boolean region
terms. Horn, W. (Ed.), Proceedings 14th European Conference Artificial
Intelligence (ECAI 2000), pp. 244248. IOS Press.
Wolter, F., & Zakharyaschev, M. (2000b). Spatio-temporal representation reasoning
based RCC-8. Cohn, A., Giunchiglia, F., & Seltman, B. (Eds.), Proceedings
242

fiCombining Spatial Temporal Logics: Expressiveness vs. Complexity

7th Conference Principles Knowledge Representation Reasoning (KR
2000), pp. 314. Morgan Kaufmann.
Wolter, F., & Zakharyaschev, M. (2002). Qualitative spatio-temporal representation
reasoning: computational perspective. Lakemeyer, G., & Nebel, B. (Eds.), Exploring Artificial Intelligence New Millenium, pp. 175216. Morgan Kaufmann.
Zimmermann, K. (1995). Measuring without measures: delta-calculus. Frank, A., &
Kuhn, W. (Eds.), Proceedings 2nd International Conference Spatial Information Theory (COSIT), Vol. 988 Lecture Notes Computer Science, pp. 5967.
Springer.

243


