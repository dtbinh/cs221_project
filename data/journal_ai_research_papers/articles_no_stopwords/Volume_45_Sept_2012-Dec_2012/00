journal artificial intelligence

submitted published

interactions knowledge time
first order logic multi agent systems
completeness
f belardinelli
lomuscio

f belardinelli imperial ac uk
lomuscio imperial ac uk

department computing
imperial college london uk

abstract
investigate class first order temporal epistemic logics reasoning multiagent systems encode typical properties systems including perfect recall synchronicity learning unique initial state terms variants quantified interpreted systems first order extension interpreted systems identify several monodic
fragments first order temporal epistemic logic completeness respect
corresponding classes quantified interpreted systems

introduction
reactive systems pnueli traditionally specified plain temporal logic
well established tradition artificial intelligence ai particular multiagent systems mas adopt expressive languages much tradition
inspired earlier seminal work ai mccarthy others aimed
adopting intentional stance dennett reasoning intelligent systems
specifically logics knowledge fagin halpern moses vardi beliefs desires
intentions obligations etc put forward represent informational
motivational attitudes agents system theoretical explorations focused
soundness completeness number axiomatisations well decidability
computational complexity corresponding logics
great majority work lines focuses propositional languages yet specifications supporting quantification increasingly required applications example
often necessary refer different individuals different instances time
quantified modal languages garson long attracted considerable attention
early work included analysing philosophical logical implications different setups quantification domains particularly combination temporal concepts
recently considerable attention given identifying suitable fragments
preserve completeness decidability studying resulting computational complexity satisfiability article follows direction
detail investigate meta theoretical properties monodic fragments
quantified temporal epistemic logic interactions quantifiers time
knowledge agents present deep rooted interest fagin et al
meyden understanding implications interaction axioms context
often express interesting properties mas including perfect recall synchronicity
c

ai access foundation rights reserved

fibelardinelli lomuscio

learning features well understood propositional level fagin
halpern vardi halpern van der meyden vardi commonly used
several application areas technical question aims resolve whether
similar range provided presence limited forms quantification
shall demonstrate answer question largely positive
state art
analysis application temporal epistemic logic first order setting
established tradition ai one early contributions work moore
presents theory action takes consideration epistemic preconditions
actions effects knowledge recently number first order temporalepistemic logics reasoning mas introduced wooldridge et al
often context mable programming language agents
authors introduced first order branching time temporal logic mas wooldridge
fisher developed series papers wooldridge et al
first order multi modal logics constitute conceptual base number
agent theories bdi logics rao georgeff kqml framework cohen
levesque lora framework wooldridge b include
operators mental attitudes e g knowledge belief intention desire etc well
temporal dynamic operators form quantification however
current literature far fallen short systematic analysis formal properties
frameworks frameworks rich unlikely
finitely axiomatisable let alone decidable still earlier contributions inspiration
present investigation among explicitly addressed
subject first order temporal epistemic languages mas setting
purely theoretical level first order temporal epistemic logics received increasing attention range contributions axiomatisability degtyarev
et al sturm et al wolter zakharyaschev decidability degtyarev
et al hodkinson et al wolter zakharyaschev complexity hodkinson hodkinson et al wolter zakharyaschev introduced
monodic fragment quantified modal logic modal operators restricted
formulas one free variable proved decidability fragments similar obtained monodic fragments first order temporal
logic hodkinson hodkinson et al computational complexity
formalisms analysed hodkinson hodkinson et al wolter
zakharyaschev provided complete axiomatisation monodic first order
validities natural numbers monodic fragment first order epistemic logic
explored sturm et al sturm wolter zakharyaschev
axiomatisation including common knowledge provided lines
constitute theoretical background set
contributions discussed previously used plain kripke underlying semantics however argued though applications computationallygrounded semantics wooldridge preferable enables systems modelled directly introduced quantified interpreted systems qis fill gap belar

fiinteractions knowledge time first order logic mas

dinelli lomuscio enabled us provide complete axiomatisation
monodic fragment quantified temporal epistemic logic linear time belardinelli lomuscio however interaction temporal epistemic modalities
studied preliminary investigations interactions temporal epistemic
operators first order setting already appeared belardinelli lomuscio
extend previous consider epistemic languages containing
common knowledge operator
present contribution
extends current state art first order temporal epistemic logic
introducing family provably complete calculi variety quantified interpreted systems characterising range properties including perfect recall learning synchronicity
unique initial state prove completeness presented first order
temporal epistemic logics via quasimodel construction previously used
hodkinson wolter zakharyaschev hodkinson et al prove decidability
monodic fragments first order temporal logic fotl quasimodels
applied first order temporal well epistemic logic sturm et al wolter zakharyaschev wolter et al present complete axiomatisation monodic
fragment fotl natural numbers similar variety first order epistemic logics common knowledge appeared sturm et al however
interaction temporal epistemic modalities first order setting
taken account yet interpreted systems semantics nonetheless
features essential applications multi agent systems subject
analysis
structure
section first introduce first order temporal epistemic languages lm lcm
common knowledge set ag agents present relevant
classes qis well monodic fragments lm lcm sections introduce
axiomatisations classes qis details completeness proofs
presented sections finally section elaborate obtained
discuss possible extensions future work

first order temporal epistemic logics
interpreted systems standard semantics interpreting temporal epistemic logics
multi agent setting fagin et al parikh ramanujam extend interpreted
systems first order case enriching structures domain individuals
first investigated static quantified interpreted systems account
evolution system given belardinelli lomuscio fully fledged
qis language temporal modalities introduced belardinelli lomuscio
follow definition qis provided references


fibelardinelli lomuscio

first order temporal epistemic languages
given set ag agents first order temporal epistemic language lm
contains individual variables x x individual constants c c n ary predicate constants p n p n n n propositional connectives quantifier
linear time operators u epistemic operator ki agent ag
language lcm contains common knowledge operator c fagin et al
simplicity consider one group agents common knowledge modality
whole ag c really tantamount cag extension proper non empty
subsets ag problematic
languages lm lcm contain symbol functions terms
languages individual variables constants
definition formulas lm defined backus naur form follows
p k tk x u ki
language lcm extends lm following clause
formula lcm c formula lcm
formulas u read next step eventually
respectively formula ki represents agent knows c stands
common knowledge set ag agents
define symbols g future f time future
standard introduce abbreviations v
operator ki dual ki
ki defined ki e shorthand iag ki k n e k
defined follows e e k ee k formulas ki e read
agent considers possible every agent knows respectively
free bound variables defined standard mean yn
free variables additionally formula obtained substituting simultaneously possibly free occurrences tn
renaming bound variables sentence formula free variables
quantified interpreted systems
introduce quantified interpreted systems assume set li local states li li
agent ag multi agent system consider set le local states
environment e well set le l lm contains global states
multi agent system represent temporal evolution mas consider
flow time n natural numbers run function r n intuitively run
represents one possible evolution mas assuming n flow time given
define quantified interpreted systems languages lm lcm follows
definition qis quantified interpreted system triple p hr ii
r non empty set runs
non empty set individuals


fiinteractions knowledge time first order logic mas

r r n n first order interpretation function
every constant c c r n
every predicate constant p k p k r n k ary relation
every r r r n n n c r n c r n
notice assume unique domain interpretation well fixed interpretation
individual constants simply write c following standard notation fagin et al
r r n n pair r n point p r n hle l lm
global state point r n n le ri n li environments agent
local state r n respectively ag epistemic equivalence relation
defined r n r n iff ri n ri n clearly equivalence
relation two points r n r n said epistemically
reachable simply

reachable r n r n transitive closure iag
consider following classes qis
definition quantified interpreted system p satisfies
synchronicity

iff

every ag points r n r n
r n r n implies n n

perfect recall agent

iff

points r n r n r n r n n
r n r n
k n r n r k
k k k n implies r n r k

learning agent

iff

points r n r n r n r n
r n r n
k n r n r k
k k k n implies r n r k

unique initial state

iff

r r r r r

conditions extensively discussed literature halpern et al
together equivalent formulations intuitively qis synchronous time part
local state agent qis satisfies perfect recall agent local state records
everything happened agents point view far run
learning dual perfect recall agent acquire knowledge run
finally qis unique initial state runs start global state
qis p satisfies perfect recall resp learning p satisfies perfect recall resp
learning agents denote class qis agents qis superscripts
pr nl sync uis denote subclasses qis satisfying perfect recall learning
synchronicity unique initial state respectively instance qis sync uis


class synchronous qis agents unique initial state
assign interpretation formulas lm lcm means quantified
interpreted systems let assignment variables individuals valuation


fibelardinelli lomuscio

term defined c c variant ax
assignment assigns x agrees variables
definition satisfaction formula lm point r n p assignment
denoted p r n defined inductively follows
p r n p k tk
p r n
p r n
p r n x
p r n
p r n u

iff
iff
iff
iff
iff
iff

p r n ki

iff

hi tk p k r n
p r n
p r n p r n
x
p r n
p r n
n n p r n
p r n n n n
r n r n r n implies p r n

lcm consider case common knowledge operator
p r n c

iff

k n p r n e k

truth conditions g f defined
definition follows p r n c iff r n reachable r n
p r n
formula true point r n satisfied r n every assignment
true qis p true every point p valid class c qis true
every qis c formula satisfiable qis p satisfied
point p assignment satisfiable class c qis satisfiable
qis c
considering combinations pr nl sync uis obtain subclasses qis
n independent axiomatisable indeed
axiomatisable even propositional level halpern moses halpern
vardi first column table group together classes qis share
set validities languages lm lcm proofs equivalences
similar propositional case halpern et al reported
define languages plm plcm propositional fragments
lm lcm respectively formally plm plcm obtained restricting atomic
formulas ary predicate constants p p table summarises halpern
et al concerning axiomatisability propositional validities plm plcm
observe regards language plm sets validities
classes qis axiomatisable axiomatisation given
qis nl uis
qis nl pr uis
halpern vardi language plcm


restrict case plcm expressive power
plm class validities plcm recursive axiomatisation qis
uis
sync uis
qis nl sync uis
qis nl pr sync uis

qis sync


qis qis
next section axiomatisability propositional level
lifted monodic fragment languages lm lcm


fiinteractions knowledge time first order logic mas

qis
sync uis
qis qis sync

qis uis

qis
pr uis
qis pr
qis
pr sync
qis
qis pr sync uis

nl
qis
qis nl sync

qis nl pr

qis nl pr sync

qis nl uis

qis nl pr uis

qis nl sync uis
qis nl pr sync uis



pl
x
x
x
x
x
x
x
x
x
x

plm
x
x
x
x
x
x
x


x

plcm
x








x

table equivalences classes qis axiomatisability propositional fragments plm plcm sign x indicates set validities
specific class axiomatisable indicates

monodic fragment
rest sufficient condition lifting
table first order case restrict languages lm lcm monodic
fragments
definition monodic fragment l set formulas lm subformula form ki u contains one free variable similarly
set formulas lc
monodic fragment lcm
subformula
form ki c u contains one free variable
monodic fragments number first order modal logics thoroughly
investigated literature hodkinson et al wolter zakharyaschev
case lm lcm fragments quite expressive contain
formulas following
c zavailable z uxrequest x



ki xyz request x available z
ki xyz request x available z



formula intuitively states common knowledge every resource
eventually requested somebody time resource remains available
everybody notice free variable within scope modal operators u
c formula represents agent knows next step every resource
available whenever requested next step agent knows indeed
case however note formula
xki process x yf access x


fibelardinelli lomuscio

intuitively means agent knows every process eventually try access
every resource l x occur free within scope modal operator
f still monodic fragments lm lcm quite expressive contain
de dicto formulas e formulas free variable appears scope modal
operator limitation really de formulas
stress fact formulas propositional equivalent
case interepreted quantified interpreted systems domain
quantification infinite cardinality cannot bounded advance
finally observe barcan formulas x x ki x xki
true quantified interpreted systems qis includes unique domain
quantification implies universal quantifier commutes temporal
modality epistemic modality ki thus case formulas
lm validity l
l instance
consider xp x x p x see remark
interfere

axiomatisations
section present sound complete axiomatisations sets monodic validities classes quantified interpreted systems section first introduce
basic system qktm extends first order case multi modal epistemic logic
combined linear temporal logic ltl
definition system qktm contains following schemes axioms rules
formulas l inference relation
first order logic

temporal logic

epistemic logic

taut
mp
ex
gen
k


nec

k



nec

classical propositional tautologies

x x
x x x free


u u

u
ki ki ki
ki
ki ki ki
ki ki ki
ki

operator ki modality next u operators axiomatised linear time modalities fagin et al add classical postulates
ex gen quantification sound consider unique domain
individuals quantified interpreted systems


fiinteractions knowledge time first order logic mas

definition system qkt cm extends qktm following schemes axioms
inference
common knowledge formulas lcm
relation
c
c

c ec
e c

consider standard definitions proof theorem means formula
theorem formal system remark barcan formula bf x
x provable unary modal operator axioms k ex rules
p gen notions soundness completeness system respect
class c qis defined standard sound w r c implies c
similarly complete w r c c implies
focus schemes axioms table specify key interactions
time knowledge halpern et al use superscripts denote
kt
kt
kt
kt
kt

ki ki ki ki ki u ki u
ki ki
ki uki ki ki uki
ki ki
ki kj
table axioms kt kt

systems obtained adding qktm qktcm combination kt kt
instance system qktc
extends qktcm axioms kt kt
straightforward check axioms qktm qktcm valid every
qis inference rules preserve validity however axioms kt kt valid
specific classes qis stated following remark
remark qis p satisfies axioms kt kt first column p satisfies
corresponding semantical condition second column
axiom
kt
kt
kt
kt
kt

condition qis
perfect recall
perfect recall synchronicity
learning
learning synchronicity
agents share knowledge e
j ag r n r n iff r n j r n

shown similar way propositional case halpern et al
proofs omitted
remark prove soundness first order temporalepistemic systems
theorem soundness systems reported first second column following table sound w r corresponding classes qis third column


fibelardinelli lomuscio

systems
qktm
qkt cm


qktm
qkt cm


qktm
qkt cm


qktm
qkt cm


qktm
qkt cm


qktm
qkt cm


qktm
qkt cm


qktm
qkt cm

qis
sync uis
qis qis sync

qis uis

qis
pr uis
qis pr
qis
pr sync
qis
qis pr sync uis

nl
qis qis nl uis

qis nl sync

nl pr uis
qis nl pr
qis
nl pr sync
qis
qis nl sync uis
qis nl pr sync uis



proof follow remark line reasoning similar used
propositional case fagin et al halpern et al notice quantified
interpreted systems p satisfies learning synchronicity unique initial state
p satisfies perfect recall p qis nl sync uis
implies p qis nl pr sync uis



agents share knowledge therefore kt holds p
anticipated calculi complete w r corresponding classes
quantified interpreted systems theorem next theorem summarise
completeness proved rest
theorem completeness systems reported first second column
following table complete w r corresponding classes qis third column
systems
qktm
qkt cm

qktm

qktm

qktm

qktm

qktm

qktm
qkt


qktm
qkt cm

qis
sync uis
uis
qis qis sync
qis qis
pr
pr uis
qis qis
qis pr sync
qis pr sync uis


nl
qis
qis nl sync

qis nl pr

qis nl pr sync

qis nl uis
qis nl pr uis


nl pr sync uis
qis nl sync uis

qis



observe regards language l sets monodic validities axiomatisable classes introduced qis nl uis
qis nl pr uis
however l


qis nl uis
qis nl pr uis
equivalent qis nl pr
thus sets monodic



nl pr uis
nl uis
validities qis
qis
axiomatised qkt


regards language lcm set monodic validities qis qis sync

sync uis
nl sync uis
nl pr sync uis
qis uis

qis

axiomatisable

well



qis

qis





classes recursively axiomatisable case already propositional level halpern moses halpern vardi
proving completeness reported introduce kripke
generalisation quantified interpreted systems


fiinteractions knowledge time first order logic mas

kripke
prove completeness theorem first introduce appropriate class
kripke generalisation qis prove completeness
apply correspondence kripke qis obtain desired

definition kripke model kripke model tuple hw rw iag ii

w non empty set states
rw non empty set functions r n w
every agent ag equivalence relation w
non empty set individuals
every w w first order interpretation function
every constant c c w
every predicate constant p k p k w k ary relation
every w w w c w c w
notice def differs notions kripke model includes
set rw functions guarantee correspondence kripke
qis one one assume unique domain interpretation well fixed
interpretation individual constants case simply write c kripke
generalisation qis specify inner structure states
w kripke introduce points pairs r n r rw n n
point derives properties corresponding state instance r n r n
r n r n
consider kripke satisfying synchronicity perfect recall learning
unique initial state definition subclasses analogous def
definition kripke model satisfies
synchronicity

iff

every ag points r n r n
r n r n implies n n

perfect recall agent

iff

points r n r n r n r n n
r n r n
k n r n r k
k k k n implies r n r k

learning agent

iff

points r n r n r n r n
r n r n
k n r n r k
k k k n implies r n r k

unique initial state

iff

r r rw r r


fibelardinelli lomuscio

let km class kripke agents hereafter adopt
sync uis
naming conventions qis instance km
class synchronous kripke
agents unique initial state inductive clauses
satisfaction relation respect assignment straightforwardly defined
qis well notions truth validity
definition satisfaction formula lm resp lcm point r n
assignment r n inductively defined follows
r n p k tk
r n
r n
r n x
r n
r n u

iff
iff
iff
iff
iff
iff

r n ki
r n c

iff
iff

hi tk p k r n
r n
r n r n
x
r n
r n
n n r n
n n n implies r n
r n r n r n implies r n
k n r n e k

formula true point r n satisfied r n every assignment
true kripke model true every point valid class c
kripke true every kripke model c formula satisfiable
kripke model satisfied point assignment
satisfiable class c kripke satisfiable kripke model c
relate kripke quantified interpreted systems means map g
km qis lomuscio ryan let hw rw iag ii kripke
model every agent ag r n let equivalence class r n r n
r n r n local state agent r n local state
environment define g tuple hr r contains runs rr
r rw rr n h r n r n r n
every constant c c rr n c r n p k rr n p k r n
structure g qis satisfies following
lemma every lm resp lcm
r n iff g rr n
proof proof induction structure atomic formula p k tk r n iff hi tk p k r n iff
hi tk p k rr n iff g rr n inductive cases
propositional connectives quantifiers straightforward well temporal operators u ki r n iff r n r n

implies r n r n r n iff rri n rri n thus r n iff

rr n rr n implies r n induction hypothesis r n


iff rr n rr n implies g rr n e iff g rr n case
c treated similarly considering epistemic reachability relation



fiinteractions knowledge time first order logic mas

notice satisfies synchronicity perfect recall learning unique
initial state g satisfies property follows fact

r n r n iff rri n rr n thus g defines map subclasses
km outlined def corresponding subclass qis obtain following
corollary lemma
corollary let x subset pr nl sync uis every monodic formula l
satisfiable kx satisfiable qis x
resp lcm


reasoning monodic fragments lm lcm dealing
learning perfect recall introduce following class monodic friendly kripke
structures motivated fact kt kt weak
enforce perfect recall learning kripke axioms
restricted monodic formulas however suffice monodic friendly structures
following prove satisfiability kripke equivalent satisfability
monodic friendly structures restrict languages monodic formulas
definition mf model monodic friendly
mmf hw rw iag ad ii

kripke

model





tuple

w rw defined kripke
ag equivalence relation w
define synchronicity perfect recall learning unique initial state
mf parametrising def relation instance mf model
satisfies perfect recall agent points r n r n whenever
r n r n n r n r n k n
r n r k k k k n implies r n r k regards
subclasses class mf mf agents adopt naming
conventions qis kripke notice kripke seen
mf ag b equal b
mf model
finally satisfaction relation l resp lcm
mf
defined way kripke except epistemic operators
mmf r n ki

iff

r n r n r n implies mmf r n

appears free notice sentence mmf r n ki
iff r n r n implies mmf r n case common
knowledge operator c straightforward definition e k particular two points r n

r n epistemically reachable
simply reachable r n r n
transitive closure iag
remark converse barcan formula cbf ki x xki holds
mf barcan formula bf xki ki x check
consider mf model hw rw iag ad ii fig
w w w w
rw r r r r w r w r w


fibelardinelli lomuscio













b










c

w

w

w

v

v

p

p p b

p b

q c

q c

v

b mf model

mf model

figure arrows represent system runs epistemically related states grouped
together

b
p r b p r p r b
b equivalence relations r r r b r
see r xki p x r ki xp x r r
r p x x b
furthermore k axiom ki ki ki valid mf
fact consider mf model hw r w iag ad fig b

w v v v
r w q q q q v q v q v
c
q q c q q c q q
c equivalence relations q c q q q
finally let x c check q q x xq x q x
q q x xq x q x thus q ki q x xq x ki q x
q xq x q ki xq x
prove following lemma used completeness proof
systems satisfying perfect recall learning lemma states deal
satisfability monodic formulas mf suffice
lemma let mf k bf
class mf validating formulas k bf


every monodic formula l resp lcm
km iff mf k bf




fiinteractions knowledge time first order logic mas

proof implication right left follows fact class km
kripke isomorphic subclass monodic friendly kripke
ag b equal b words given kripke model
hw rw iag ii define mf model hw rw iag ad ii
every equal straightforward see validates
k bf particular counterexamples fig ruled
thus mf k bf
km

implication left right assume mmf hw rw
iag ad ii mf model validating k bf mmf r n
point r n assignment build kripke model
hw r w iag mmf r n follows start
assuming w w sr r ag define
transitive closure ad finally set check kripke
model well defined validate
first point following issue associated construction
case point q k monodic formula x happens
mmf q k ki x q k x q k q k q k x
suppose mmf q k x obviously mmf q k
x definition q k ki x two
satisfy formulas solve modifying interpretation
according structure monodic formula x keeping truth value
x point q k consider relevant cases according structure x
induction hypothesis consists fact able interpretation
subformulas x
x p x simply assume x p q k q k
x q k ki x note change truth value
epistemic formula q k assumed q k x q k otherwise x would
satisfied q k cases propositional connectives modal operators
similarly dealt applying induction hypothesis x x


b
q k x
mmf q k x therefore exists b mmf
consider different cases depending whether q k satisfies
formulas

ki x x



ki x x



ki x x



ki x x



axioms inference rules qktm formula
follows used entailment
mmf q k ki x ki x x
mmf q k xki x yki x x ex
mmf q k ki xy x ki yx x zki ki z
mmf q k ki xy x yx x ki ki ki


fibelardinelli lomuscio

mmf q k ki xu x u yv v
mmf q k ki xyuv x u v
mmf q k ki xy x x

change variables
prefixing
ex

last formula contradiction cannot hold q k similarly formula
cannot hold q k
mmf q k ki x ki x x
mmf q k xki x ki x x
mmf q k ki xy x ki x x
mmf q k ki xy x ki yx x
mmf q k ki xy x yx x
mmf q k ki xy x x

ex
zki ki z
z ki ki z
ki ki ki
similarly

note derivations make use formulas k bf instance
prove theorems ki ki ki zki ki z finally satify
formulas q k guarantee existence individual x
avoiding clash x introduce individual domain
x satisfy formulas points thus seen copy
x finally induction hypothesis modify interpretation
q k x
case common knowledge operator derives one ki
obtain kripke model r n
moreover procedure described mmf satisfies perfect recall learning synchronicity unique initial state satisfies property
thus lemma prove following
corollary let x subset pr nl sync uis every monodic formula l
satisfiable mf x validating formulas k bf
resp lcm

x
satisfiable km
proof easy see mmf satisfies synchronicity unique
initial state well way defined suppose mmf
satisfies perfect recall r n r n n means sequence
ak individuals sequence q qk mk points
r n q r n qk mk ii qj mj aj qj mj j k
k case k follows straightforward generalisation
q q definition q
q well hence mmf satisfies perfect recall otherwise suppose perfect
recall l q q l l l l
implies q q l consider l h h h
l perfect recall exists p h q l h q p h
p h p h p h p h implies q l h q p h ii
q l h q p h p notice cases
definition q q p h h l
q q p p l p l exists l


fiinteractions knowledge time first order logic mas

q l q l l l l p l implies q l q l
ii q l q p l first case l strictly less
l q q l l l l implies
q q l otherwise q q hence mmf satisfies
perfect recall
proof learning similar
finally combining corollaries immediately obtain following
corollary let x subset pr nl sync uis every monodic formula l
satisfiable mf x validating formulas k bf
resp lcm

satisfiable qis x

next section indeed possible build mf model

completeness proof
section outline main steps completeness proof
quasimodel construction gabbay kurucz wolter zakharyaschev hodkinson
et al differently contributions explicitly take account
interaction temporal epistemic modalities intuitively quasimodel
monodic formula relational structure whose points sets sets subformulas
set sets subformulas describes possible state affairs contains
sets subformulas defining individuals state formally given formula
lcn define
subc sub ec c sub ki c c sub ag
sub set subformulas l n subc simply sub
define
subc subc subc subc subc
observe subc closed negation modulo equivalences
subc form subc otherwise
subc finally let subn subset subc containing formulas
n free variables sub set sentences subn x variable occurring
define subx x sub clearly x free variable
formulas subx con denote set constants occurring table
report set suby equal formula thus abbreviated
c zav z uxreq x
k n define closures clk clk mutual recursion

definition let cl subx k clk iag clk k ag
clk clk ki n ki n n clk


fibelardinelli lomuscio

suby

c zav z uxreq x ec zav z uxreq x
ki c zav z uxreq x iag zav z uxreq x zav z xreq x
c zav z uxreq x ec zav z uxreq x
ki c zav z uxreq x iag zav z uxreq x zav z
xreq x
c zav z uxreq x ec zav z uxreq x
ki c zav z uxreq x iag zav z uxreq x zav z
xreq x
c zav z uxreq x ec zav z uxreq x
ki c zav z uxreq x iag zav z uxreq x zav z
xreq x

table set suby equal formula


c zav z uxreq x ec zav z uxreq x
ki c zav z uxreq x iag zav z uxreq x zav z xreq x
c zav z uxreq x ec zav z uxreq x
ki c zav z uxreq x iag zav z uxreq x zav z
xreq x
table type cl equal formula

define ad greatest number alternations distinct ki along branch
parse tree halpern et al index finite sequence ik
agents n k length denoted
absorptive concatenation indexes ik finally k
shorthand ki kik let index ad empty
sequence cl clad cl clk k ad
introduce types quasimodels intuitively seen individuals described
maximal consistent sets formulas
definition type type maximal consistent subset cl e
every monodic formulas cl
iff

ii iff
two types said agree sub sub sub e share
sentences given type constant c con ht ci indexed type
abbreviated tc table report type cl equal formula
introduce state candidates intuitively represent states quasimodel
definition state candidate state candidate pair c ht con

set types agree sub
ii con set containing c con indexed type tc


fiinteractions knowledge time first order logic mas

introduce notion point describes state candidate perspective particular type
definition point point pair p hc ti
c ht con state candidate
ii type
note slight abuse notation call points pairs r n qis
pairs p hc ti consistent previous work fagin et al halpern
et al context disambiguate write c c ht con
similarly p given state candidate c ht con point p hc ti
define formulas c p follows
c



xt x x

tt


tt

x



x c

tc con

p c
distinguish type conjuction formulas contains
state candidate c consistent formula c consistent w r system
e c similarly point p consistent formula p consistent w r
refer plain consistency whenever system reference understood consistent
state candidates represent states quasimodels define relations
suitability constitute relational part quasimodels
definition
type type suitable iff
consistent suitable iff ki
consistent
state candidate c state candidate c suitable c c iff
c c consistent suitable c c iff
c ki c consistent
point p point p suitable p p iff p
p consistent suitable p p iff p ki p
consistent
point p hc point p hc suitable constant
c con p c p iff p p tc con tc con suitable
c p ci p iff p p tc con tc con
axioms shown relation reflexive
transitive symmetric equivalence relation relation serial
following lemma list properties relations useful
follows
lemma

let subx iff


fibelardinelli lomuscio

ii let ki subx let type ki iff types implies
moreover let ad ki iff types implies

proof
proof similar one lemma work wolter et al

since consistent
consistent contradiction right left

since consistent consistent
contradiction
ii left right ki
since ki consistent
ki ki consistent contradiction right left
ki
extend set ki type particular
moreover ad similarly prove ki
iff types implies
present frame underlying quasimodel
definition frame frame f tuple hr iag ad
r non empty set indexes r r
ii non empty set individuals
iii every ag equivalence relation set points r n
r r n n
iv f partial function associating point r n consistent state candidate
f r n cr n
domain f empty
b f defined r n defined r n
c f defined r n r n r n f defined r n
function f partial take consideration case synchronous systems
straightforward introduce frames satisfying perfect recall learning synchronicity
unique initial state following definitions given mf next
provide definition objects correspond runs gabbay et al
choose terminology avoid confusion runs qis
definition object given individual object frame f map
con
associating type r n tr n every r n dom f f r n cr n htr n tr n

r n r n
r n r n r n r n


fiinteractions knowledge time first order logic mas

u r n iff n n r n n n n n
implies r n
r n types r n r n r n r n
c r n exists point r n reachable r n
r n
object satisfies instead
r n type type r n r n r n
r n
intuitively object identifies individual represented types across
different state candidates elements give definition quasimodel
definition quasimodel quasimodel tuple q hr iag
hr iag frame
tr n tr n cr n
cr n cr n
r n r n r n r n
every tr n exists object r n
con object
every c con function c c r n tc tr n

quasimodel defined quasimodel clauses refer objects
rather objects define quasimodels resp quasimodel satisfying perfect recall
learning synchronicity unique initial state assuming corresponding
condition underlying frame difference objects resp quasimodel
objects resp quasimodel purely technical particular latter needed
systems satisfying perfect recall learning become apparent section
following lemma list properties quasimodels useful
follows
lemma every quasimodel q every object
ki r n iff r n r n r n implies r n
ii c r n iff points r n reachable r n r n
proof
implication left right follows fact r n r n implies
r n r n implication right left ki
r n
lemma ii type r n definition
r n r n r n r n


fibelardinelli lomuscio

ii implication left right proved induction length path
r n r n base case inductive step follow axiom c
implication right left follows definition
state main section satisfability quasimodels implies
satisfability mf follows quasimodel q validates formula belongs
every type every state candidate q
theorem quasimodel resp quasimodel q monodic formula
satisfiable mf model mmf moreover q validates formulas k bf
mmf finally q satisfies perfect recall learning synchronicity
unique initial state mmf
proof proof inspired lemmas work gabbay
et al consider monodic friendly kripke rather standard
kripke first every monodic formula form ki c u
introduce k ary predicate constant pk k equal depending whether
free variables formula pk x called surrogate given
monodic formula denote formula obtained substituting modal
subformulas within scope another modal operator surrogates
since every state candidate c quasimodel q consistent system
first order temporal epistemic logic considered section classical first order
logic formula c consistent respect first order non modal logic godels
completeness theorem first order structure hi di non empty set
individuals first order interpretation satisfies c e c
assignment variables elements intend build mf model
joining first order structures however possible structures
different domains different cardinalities solve consider cardinal
number greater cardinality set objects q define
h
r n q type tr n
h r n
method described claim gabbay et al expand
first order structure obtain structure ir n hir n di domain ir n
satisfies cr n

x ir n
x

assume without loss generality first order structures ir n share
domain every tr n h

r n iff ir n
x

x h equivalently tr n x h

r n cl ir n
x





fiinteractions knowledge time first order logic mas

moreover ir n c hc every c con
define mf model mmf tuple hw r iag ad ii w
set points r n r r q n n r set runs n w
r n r n defined ag h h defined
interpretation obtained joining first order interpretations ir n
e p r n ir n p every predicate constant p prove following
mmf
lemma mf model mmf obtained quasimodel q described
every subx

ir n
iff mmf r n

moreover q quasimodel f r n state candidate ad k ad

ir n
iff mmf r n

proof proof similar lemma work gabbay et al
begin first part base case induction follows definition interpretation mf model step propositional connectives quantifiers follows
induction hypothesis equations x x
let x assume x h

ir n
x

iff

x r n



iff

x r n



iff


ir n
x

mmf r n x
mmf r n x

iff
iff




steps follow equation step motivated lemma
step follows induction hypothesis
let u x x h

ir n
u x iff

iff

u x r n







n n x r n
x r n n n n

iff



n n



ir n



ir n






x



x n n n


iff

n n

iff

mmf r n x
mmf r n u x

mmf r n




x


n n n



steps follow equation step motivated def step
follows induction hypothesis


fibelardinelli lomuscio

let ki x x h

ir n
ki x

iff
iff

ki x r n













r n r n x r n



r n h r n ir n x
r n h r n mmf r n

iff



iff



iff

mmf r n


x



ki x

steps follow equation step motivated lemma step
follows induction hypothesis
let c x x h

ir n
c x

iff
iff
iff

c x r n

















r n reachable r n x r n
r n reachable

r n ir n



x









iff

r n reachable r n r n x

iff

r n c x

steps follow equation step motivated lemma ii
step follows induction hypothesis
prove second part lemma cases identical first part
except ki suppose f r n state candidate ad k ad
implication left right r n r n r n type
thus ad k ad k ad k ki ad apply
induction hypothesis implication right left ad k ki ad
ad lemma ii type r n
def r n r n r n r n since
ad k ad k ki ad apply induction hypothesis
complete proof theorem definition quasimodel
tr n tr n cr n therefore satisfied mf model mmf point r n
remark q validates formulas k bf mmf case
k bf belong every type every state candidate q lemma
mmf validates k bf well
finally q satisfies perfect recall learning synchronicity unique
initial state mf model obtained q satisfies corresponding constraints
construction fact perfect recall r n h r n n
particular r n r n since q satisfies perfect recall r n r n
k n r n r k k k k n implies
r n r k definition h obtain r n h r n
k n r n h r k k k k n implies
r n h r k mmf satisfies perfect recall well
next existence quasimodels monodic


fiinteractions knowledge time first order logic mas

dealing system
section consider completeness proof system theorem particular monodic formula consistent respect system
build quasimodel quasimodel specific cases frame
following sections symbol represents provability appropriate system
start lemmas useful construction quasimodel
system
lemma consistent monodic formula consistent state candidate c ht con
ii let p hc ti consistent point c ht con let c con

c c exists point p hc p p
b tc con c c exists point p hc p c p
c u sequence points pj hcj tj j k
realises u e p p pk tk tj j k
u tc sequence points pj hcj tj j k
c realises u e sequence realises u p c c pk
e ki point p hc p p
f ki tc point p hc p ci p
g c sequence points pj hcj tj j k
p p ik pk tk
h c tc sequence points pj hcj tj j k
p p ci cik pk tk
proof proof similar one claims work
gabbay et al consider state candidates points let
disjunction formulas p points p consider formula
obtained substituting subformulas form ki c u
within scope another modal operator surrogates check
true non modal first order structures since qktm qktcm
extend first order logic semantical completeness first order logic




w
notice previous remark p p point p
moreover consistent consistent therefore
disjunct p p consistent p hc ti
nec p consistent must
point p p p consistent
b proof similar


fibelardinelli lomuscio

c proof contradiction let u set points p
w exist points pj hcj tj j k p p pk p let p p u p



otherwise would sequence realising u moreover definition
u


obtain
g g
together derive
g



consider p u p p


p g



p g



p p g



hand since u
p p f



contradict fact p p
proof similar c
e first remark p ki consistent thus exists point
p hc p ki p consistent hence p p
f proof similar e
g proof contradiction let v minimal set points dwsuch
p v ii v ag v let dv



hold would sequence specified lemma moreover
definition v
ki

ag obtain
e
axiom c
c
definition p
p c
contradicts




fiinteractions knowledge time first order logic mas

h proof similar g
following possible extend suitability relation
types suitability points
lemma suppose types points
p hc ti p hc p p particular c con
points p hc ti p hc p c p
w
proof lemma p p point p
since consistent thus must points p
p p p consistent case p hc ti
p hc state candidates c c p p second part
lemma proved similarly first observing x c x c
consistent hence x c x c consistent thus must
points p p p x c p x c consistent tc con
c con p c p
according lemma extend possibly infinite sequence types
possibly infinite sequence points p p pk hck tk
definition let sequence possibly infinite sequence c c state
candidates sequence acceptable k
u tk tk ck u realised sequence points pj
hcj tj k j n
ii u tck tck ck u c realised sequence points pj
hcj tj k j n
following lemma entails completeness
lemma every finite sequence state candidates extended infinite
acceptable sequence
proof assume c cn finite sequence u tk ck
k n u realised c cn lemma ii c extend
sequence realises u procedure repeated formulas
form u appearing point sequence thus obtain possibly
infinite sequence c c property definition satisfied
satisfy property ii reason similarly lemma ii instead
let x object sequence x x cn cn acceptable n
starts n copies x cn cn acceptable sequence
consider completeness proof single class qis
uis
sync uis
classes qis qis sync
qis qis

start completeness proof systems qktm qktcm
interaction temporal epistemic operators


fibelardinelli lomuscio

monodic formula consistent lemma consistent state
candidate c ht con type lemma
extend c infinite acceptable sequence set infinite acceptable sequences non empty let r set sequences acceptable n
n n r r k n define partial function f r n f r k ck r
sequence x x cn cn acceptable n k n undefined otherwise
finally let set functions associating every r n dom f type
r n tr n
r n r n
b u r n iff n n r n r n
n n n
c r n types r n r n
c r n exists point r n sequence points pj
hcj tj j k hf r n r n p ik pk tk f r n
ck r n tk
non empty condition guaranteed lemma ii
condition b fact r acceptable sequence regards c remark
r n consistent point p hc ti reasoning similarly
lemma lemma c extended sequence r acceptable
n finally set r n observe c r n
lemma ii g exists sequence points pj hcj tj j k
hf r n r n p ik pk tk ck extended sequence r acceptable n r n tk finally ag define
r n r n iff r n r n n n
lemma tuple hr iag synchronous frame
proof previously shown r non empty
equivalence relation definition f satisfies conditions definition
frame synchronous definition
prove main
lemma tuple hr iag synchronous quasimodel
validates formulas k bf
proof previous lemma remains prove functions objects
conditions objects safisfied remarks condition satisfied definition furthermore conditions
quasimodels satisfied definitions r f regards extend
function r n dom f lemma ii c e g
function c c r n tc object lemma ii b f h
finally q validates formulas k bf c c q consistent
qktm resp qktcm


fiinteractions knowledge time first order logic mas

completeness qktm qktcm respect classes qis qis sync

quantified interpreted systems directly follows lemma together theorem
thus obtain following item theorem
theorem completeness system qktm resp qktcm complete w r
classes qis qis sync
qis

sync uis
prove completeness qis uis
use next
qis
extension propositional case halpern et al
satisfiable
remark suppose x subset pr sync l resp lcm
x
x uis
qis satisfiable qis

thus system qktm resp qktcm complete w r classes qis uis

sync uis
qis
qis
pr uis
classes qis pr
qis

begin investigate systems interactions time knowledge
pr uis
present completeness proof qkt respect qis pr
relies
qis
following lemma
lemma points p hc p hc type p p
point p hc sequence sn p
points sk hdk sk sk k n
k n
p c p sck tdcon
k
proof extend proof halpern et al lemma deal state
candidates monodic friendly kripke frames cited prove
sequence types sn
sk k n lemma extend sequence
types sequence points sn sk hdk sk
lemmas statement satisfied particular p c p lemma assume
without loss generality sck tdcon
k n
k
consistent l define quasimodel establish completeness
qkt respect qis pr
let r set acceptable sequences define
f f r k ck r sequence c c finally let set
functions associating every r n dom f type r n tr n conditions
b satisfied
c r n type type r n r n r n
e r n r n n r n r n b
k n r n r k k k k n implies r n
r k
finally ag define r n r n iff r n r n
following lemma shows set non empty particular conditions c
e satisfied functions


fibelardinelli lomuscio

lemma set functions satisfies conditions b c e
non empty
proof conditions b follow respectively lemma ii fact
r acceptable sequence regards c e proof proceeds induction
n n immediate take r acceptable sequence
starting c c define r thus r r
c e satisfied
suppose n holds n since f r n f r n
r n follows lemma point p hc ti sequence
points p sk p sk hdk sk sk r n k k
induction hypothesis exists every type r n point
r n r n case take r n r n
r n thus case r n r n case b take
hence r n r n r n suppose r derived
acceptable sequence v v let r run derived acceptable sequence
initial segment v vn dk run exists lemma
define r n k sk thus r n r n k c
e satisfied
prove following lemma
lemma tuple hr iag frame satisfies perfect recall
proof lemmas sets r non empty f satisfies
conditions definition finally equivalence relation definition
satisfies perfect recall definition functions
finally prove main section
lemma tuple hr iag quasimodel perfect recall
validates formulas k bf
proof previous lemma hr iag frame satisfying perfect
recall left prove functions objects conditions
objects safisfied remarks e definition furthermore conditions
quasimodels satisfied definitions r f
regards follows lemma finally condition quasimodels holds
lemma ii b f h lemma finally q validates formulas k
bf c c q consistent qktm
completes proof qis pr
thus obtain following item theorem
theorem completeness system qkt complete w r class qis pr
qis
completeness qkt respect qis pr uis
follows remark

classes qis pr sync
qis pr sync uis


completeness qkt respect qis pr sync
proved similarly previous

case following lemma instead lemma


fiinteractions knowledge time first order logic mas

lemma state candidates c c state candidate c state
candidate c
c c c c c c c c
c con p hc p hc p hc p c p
p ci p p hc p ci p p c p
proof c c c c exist c c c
moreover without loss generality assume
con following proof halpern et
c con tc con tc con c


al lemma type define


con
set con set c
c ht



consistent state candidate c c c c c con p ci p
p c p
consistent l define quasimodel establish complete let r set sequences acceptness qkt respect qis pr sync

able n n n define f f r k ck r sequence
x x cn cn acceptable n k n undefined otherwise finally let
set functions associating every r n dom f type r n tr n
conditions b section satisfied
c r n type type r n r n r n
f r n r n n r n r n
finally ag define r n r n iff r n r n n n
following remark shows set non empty particular conditions c
f satisfied functions
lemma set functions satisfies condition b c f
non empty
proof conditions b follow lemma ii fact r
acceptable sequence regards c f assume r n f r n type
type r n f r n different r n consider set
u ki check u consistent extended type
define collection sc con
set c con let c ht con clearly c c hc si ci hc lemma
construct sequence c cn cn c f r k ck
k n lemma extend sequence infinite acceptable sequence
r particular function extended k n r k r k
r n thus c f satisfied
following lemma
lemma tuple hr iag frame satisfies perfect recall
synchronicity


fibelardinelli lomuscio

proof lemmas sets r non empty f satisfies
conditions definition finally equivalence relation definition
satisfies perfect recall synchronicity definition functions
prove main
lemma tuple hr iag quasimodel perfect recall
synchronicity validates formulas k bf
proof previous lemma hr iag frame satisfying perfect
recall synchronicity left prove functions objects
conditions objects safisfied remarks f definition
furthermore conditions quasimodels satisfied
definitions r f regards condition make use lemma
holds additionally holds lemma ii b f h lemma
finally q validates formulas k bf c c q
consistent qktm
completes proof qkt thus obtain following item theorem
theorem completeness system qkt complete w r class qis pr sync


qis
follows remark
completeness qkt respect qis pr sync uis

class qis nl

first give following definitions used completeness proof
definition type conjunction types
similarly p point p set points p p p
definition two sequences types concordant n n
n may non empty consecutive intervals n n
j j j n
two sequences state candidates concordant c
c c two sequences types respectively
concordant
prove completeness qkt respect qis nl
need following lemma
dual lemma
lemma points p hc p hc type p p
exists point p hc sequence p sn
points sk hdk sk sk k n sn p c p
sck tdcon
k n
k
proof adapting halpern et al lemma types
prove sequence types sn
sk k n sn lemma extend sequence
types sequence points sn sk hdk sk


fiinteractions knowledge time first order logic mas

statement lemma satisfied particular p c p lemma
assume without loss generality sck tdcon
k n
k
pointed halpern et al lemma sufficient construct
quasimodel satisfies learning fact given sequence c c state candidates type c lemma
sequence c c c learning satisfied however
follow acceptability acceptable propositional
case work trees state candidates hereafter extend definitions
given halpern et al able deal points monodic friendly kripke

definition let k ad k tree state candidates set state
candidates k contains unique state candidate e root
every point c
type k state candidate
c c
state candidate c type c

similarly define k tree points set points k
contains unique point every point p hc ti
type k point p
hc
point p hc
intuitively k tree view epistemic state quasimodel particular
type k steps extend suitability relation k trees
definition let k trees state candidates say f
whenever f function associating state candidate c type c
finite sequences state candidates types
f c c ck c c b cj j k ck
similarly f tk b tj cj j k
k ck
let c c c c f f concordant
least one c sequence f c length least
let k trees points say f whenever f
function associating point p finite sequence points

f p p pk p p b pj j k pk


fibelardinelli lomuscio

let p hc ti p hc f f concordant
least one p sequence f p length least
finally constant c con say cf whenever f f p
p c c pk
notice given k tree state candidates root c c obtain
k tree points p hc iff c k tree state
candidates f f k trees points
respectively
obtain acceptable sequences state candidates sequences
trees given two sequences state candidates c ck c
finite fusion defined c ck c ck c
given infinite sequence f f k trees say sequence
state candidates compatible exists h n state candidates
ch ch cj j j h fh ch fh ch sequence
acceptable every sequence compatible infinite acceptable
basic idea completeness proof define quasimodel starting
acceptable sequence next introduce definitions lemmas essential
completeness proof
given k tree point p inductively define formula tree p
describes k tree viewpoint p
definition p point tree p p p point


tree p p
ki tree p
point p

k trees p p write p p
sequence k trees l functions f fl f fl
l b fj p p j l fl p p p similarly p c p
p p cf cfl l
prove following lemma extends halpern et al lemma
points
lemma suppose k tree points p hc ti point k
type tree p consistent k tree
point p hc p p tree p consistent
tc con p c p
w
b tree p p p p tree p
c tree p u consistent sequence l k trees
points p pl pj j j l ii p p iii
j pj j pj j l iv treej pj consistent j l v
treel pl consistent tc con iii j pj c j pj
j l


fiinteractions knowledge time first order logic mas

proof proceed induction k case k immediate standard
arguments tree p p
assume k first prove part ki
part b general case finally c
regards part ki note tree p ki implies
tree p ki p uki
definition k tree point p let
k tree consisting points k axiom kt
tree p ki p uki consistent part c sequence l
k trees points p pl pj j j l ii p
p iii j pj j pj j l iv treej pj ki p consistent
j l v treel pl ki consistent
definition relation sequence k trees
functions f fm f fm l moreover
k points u um u p um pl j uj pj
j j uj uj fj uj uj uj uj fj uj uj uj
define k tree j extending j j iv
uj ki p consistent j uj p p j similarly
um ki consistent exists p hc p
saturate j conditions k trees satisfied particular
construct fj j point hd j j must
exist point hd si j agent j ag j lemma
follows exists sequence starting j concordant fj
moreover take pj p j pm p p define fj
agrees fj j j j fj
notice construction follows immediately definition
p p treem p ki consistent easily
check p since follows
define f f u u every u p f p p p p f p
since p p p p
second part follows similar line reasoning
prove part b contradiction assume

tree p
tree p
p p p

v
tree p p p p tree p consistent temporal reasoning
must point u

tree p u
tree p

p p p

w
consistent note tree p equivalent p point p ki tree p
thus consistency implies tree p u


fibelardinelli lomuscio

exists point p hc tu

tree p u ki

tree p



p p






consistent part
vthere exists k tree p p p
tree p u ki p p tree p consistent means

p u thus contradiction since tree u ki tree p inconsistent
general case follows b part c follows b
following lemma correspondent lemma k trees

lemma l consistent qkt exists acceptable sequence
ad trees state candidates belongs root first tree
proof lemma key part proof consists showing given finite
sequence f fl l trees points point p hc ti l
u resp lemmas extend sequence trees
satisfy acceptability specifically suppose u let include p points
p hc l k note k tree lemma
sequence n k trees points p pn pj j
j n ii p p iii j pj j pj j l iv treej pj
consistent j l v treen pl consistent lemma
extend sequence ad trees starting l satisfies u proof
lemma argument similar since consistent must
tree root c c extend
complete proof
consistent l define quasimodel establish completeness
qkt respect qis nl
let r consist acceptable sequences compatible
ad tree function f given f r k ck r acceptable
sequence c c let set functions associating every r n
dom f type r n tr n conditions b c given previously
satisfied following holds
g r n r n r n r n exists k n
r n r k k k k n implies r n r k
finally ag r n r n iff r n r n
previous cases following
lemma set functions satisfies conditions b c g
non empty
proof conditions b guaranteed lemma ii fact r
acceptable sequence respectively regards c g assume r n
type type r n proofs lemmas
acceptable sequence r compatible tree f r
g satisfied
following lemma


fiinteractions knowledge time first order logic mas

lemma tuple hr iag frame satisfies learning
proof lemmas sets r non empty f satisfies
conditions definition equivalence relation definition
finally learning condition satisfied definition functions
lemma tuple hr iag quasimodel satisfies
learning validates formulas k bf
proof previous lemma hr iag frame satisfying learning
left prove functions objects conditions objects
safisfied remarks g definition furthermore conditions
quasimodels satisfied definitions r f regards
use lemma holds finally holds lemma ii b f
h lemma finally q validates k bf c c q
consistent qktm
completes proof qkt thus obtain following item theorem
theorem completeness system qkt complete w r class qis nl
qis
class qis nl sync

qkt complete axiomatisation qis nl sync
analogously lemma

need following
lemma state candidate c c state candidate c exists state
candidate c
c c c c c c c c
c con p hc p hc p hc p c p
p ci p p c p p ci p
proof proof similar lemma c c c c exist
c c c moreover without loss
con
generality assume c con tc con tc con c

adapting proof halpern et al lemma type
define set con set c

clearly c ht con consistent state candidate c c c c
c con p ci p p c p
systems including axiom kt define synchronous version relation
k trees
definition k trees state candidates sync
iff
f

f c f c exactly length similarly
k trees points sync
iff f p f p exactly
f
length


fibelardinelli lomuscio

c con relation cf sync defined similarly define sync acceptable
sequence trees acceptable sequence relation substituted
relation sync sequence acceptable every sync sequence compatible
infinite acceptable similarly given relations c c con
definitions sync c sync straightforward state following
simplified version lemma proof analogous lemma
lemma used instead lemma
lemma let k tree points p point k
type tree p consistent exists k tree
point p hc p sync p tree p
consistent tc con p c sync p
w
b tree p p p sync p tree p
c tree p u consistent exists sequence l k trees
points p pl pj j j l ii p p iii
j pj sync j pj j l iv treej pj consistent j l
v treel pl consistent tc con iii j pj c sync
j pj j l
make use lemma adapt lemma obtain following
lemma l consistent qkt exists sync acceptable
sequence ad trees state candidates belongs root first tree
consistent l define quasimodel establish completeness qkt respect qis nl sync
let x object sequence

x x cn cn sync acceptable n starts n copies x cn cn
sync acceptable sequence compatible ad tree let r consist sequences sync acceptable n n n function f defined f r k ck
r sequence x x cn cn sync acceptable n k n f r k undefined otherwise let set functions associating every r n dom f
type r n tr n conditions b c satisfied following
holds
h r n r n r n r n
finally ag r n r n iff r n r n n n
similarly lemma following
lemma set functions satisfies conditions b c h
non empty
moreover following follows lemmas
lemma tuple hr iag frame satisfies learning
synchronicity


fiinteractions knowledge time first order logic mas

finally adapting proof lemma state following
lemma tuple hr iag quasimodel learning
synchronicity validates formulas k bf
completes proof qkt thus obtain following item theorem
theorem completeness system qkt complete w r class qis nl sync


qis
classes qis nl pr
qis nl pr uis


obtain completeness proof qis nl pr
combine shown qis pr


nl
qis

l consistent qktm
lemma exists acceptable
sequence ad trees belongs root first tree let r
set acceptable sequences suffix compatible
function f defined section set functions associating
every r n dom f type r n tr n satisfies conditions b c
e g finally ag r n r n iff r n r n
lemma set functions satisfies conditions b c e g
non empty
proof conditions c satisfied similarly cases
nl
qis pr
qis c suppose r n type f r n type
sequence ad trees f f state candidates run r
derived definition sequence c c suffix cn cn
compatible f r n cn consider two cases
n n exists k n cn k lemma exists
sequence sh state candidates sh sh
concordant c cn assume sh k let sh sh
sequence compatible consider sequence
construction run r derived sequence r assume
r h
n n lemma exists sequence sh state
candidates sh sh concordant c cn lemma
extend sequence sequence sk concordant
c cn since cn n assume sk
well let sh sh sequence compatible consider sequence
previous case run r derived sequence r
construction assume r h
lemmas obtain next
lemma tuple hr iag frame satisfies perfect recall
learning
finally state following lemma whose proof follows lines corresponding
nl
proofs qis pr
qis lemma


fibelardinelli lomuscio

lemma tuple hr iag quasimodel satisfies perfect
recall learning validates formulas k bf
establishes completeness qkt thus obtain following item
theorem
nl pr
theorem completeness system qkt

complete w r class qis
qis

completeness qkt
respect qis nl pr uis
follows following


remark whose proof analogous propositional case
remark formula l satisfiable qis nl pr
resp qis nl pr sync
iff


nl pr uis
nl pr sync uis
satisfiable qis
resp qis

class qis nl pr sync


prove completeness qktm
respect qis nl pr sync
combine

nl pr
obtained qis previous section qis nl sync
qis pr sync





specifically lm consistent qktm lemma construct syncacceptable sequence ad trees belongs root first tree let r
set sync acceptable sequences suffixes compatible
function f defined section set functions associating
every r n dom f type r n tr n satisfies conditions b c
f h finally ag r n r n iff r n r n n n
adapting proof lemma means lemmas
following

lemma set functions satisfies conditions b c f h
non empty
lemmas obtain following
lemma tuple hr iag frame satisfies perfect recall
learning synchronicity
finally state following lemma whose proof follows lines corresponding
proofs qis pr sync
qis nl sync
lemma


lemma tuple hr iag quasimodel satisfies perfect
recall learning synchronicity validates formulas k bf
completes proof qkt
thus obtain following item theorem

theorem completeness system qktm
complete w r class qis nl pr sync

qis



fiinteractions knowledge time first order logic mas

classes qis nl sync uis
qis nl pr sync uis



system qktm
complete respect classes qis nl sync uis

nl pr sync uis
qis
completeness follows next remark

remark formula lm valid qis nl sync uis
iff valid qis nl pr sync uis



proof straightforward extension first order halpern et al
proposition given remark axiom kt sufficient prove
completeness qkt
respect qis nl pr sync uis
previous



nl pr sync
section qkt indeed complete respect qis
desired follows
remark thus obtain following item theorem

theorem completeness system qktm
complete w r classes qis nl sync uis

qis nl pr sync uis

qis


conclusions work
investigated interaction axioms context monodic first order
temporal epistemic logic specifically explored classes quantified interpreted systems
satisfying conditions synchronicity learning perfect recall unique
initial state contribution article concerns provably complete axiomatisation
classes
presented extend previous contributions first order epistemic temporal logic interactions e g see belardinelli lomuscio sturm et al
wolter zakharyaschev direction previously explored
propositional level halpern et al findings characterisation
axioms considered propositional level extended first order monodic
setting
temporal epistemic logic first order context far mostly attracted theoretical contributions evidence literature increasingly embraced
applications instance active interest verifying artifact centric systems
first order modal specifications belardinelli lomuscio patrizi b
deutsch hull patrizi vianu deutsch sui vianu calvanese giacomo
lenzerini rosati hariri calvanese giacomo masellis felli
given remains importance investigate questions pertaining computational aspects formalisms introduced including decidability computational complexity satisfiability model checking work far including
belardinelli lomuscio hodkinson al wolter zakharyaschev
focused fragments interaction present know literature halpern et al interactions make harder leave
work particularly connection addition epistemic modalities
e g explicit algorithmic knowledge see halpern pucella branching time
modalities epistemic variants branching time ctl well understood propositional level meyden wong first order extensions yet
explored


fibelardinelli lomuscio

acknowledgments
presented supported european commission marie
curie fellowship fommas grant n strep project acsi grant
n uk engineering physical sciences council leadership
fellowship trusted autonomous systems grant n ep x
would thank anonymous reviewers mr andrew v jones valuable
comments

references
belardinelli f lomuscio quantified epistemic logics reasoning
knowledge multi agent systems artificial intelligence
belardinelli f lomuscio first order linear time epistemic logic group
knowledge axiomatisation monodic fragment fundamenta informaticae

belardinelli f lomuscio complete quantified epistemic logic reasoning
message passing systems computational logic multi agent systems th
international workshop clima viii revised selected invited papers vol
lecture notes computer science pp springer
belardinelli f lomuscio interactions time knowledge firstorder logic multi agent systems principles knowledge representation
reasoning proceedings th international conference kr aaai press
belardinelli f lomuscio patrizi f computationally grounded semantics artifact centric systems abstraction proceedings nd
international joint conference artificial intelligence ijcai pp
aaai press
belardinelli f lomuscio patrizi f b verification deployed artifact systems via data abstraction service oriented computing proceedings th
international conference icsoc vol lecture notes computer science pp springer
calvanese giacomo g lenzerini rosati r view query
answering description logics semantics complexity journal computer
system sciences
cohen p levesque h communicative actions artificial agents proceedings st international conference multi agent systems icmas pp
aaai press
degtyarev fisher konev b monodic temporal resolution automated
deduction proceedings th international conference automated deduction
cade vol lecture notes computer science pp springer
degtyarev fisher lisitsa equality monodic first order temporal
logic studia logica
dennett intentional stance mit press


fiinteractions knowledge time first order logic mas

deutsch hull r patrizi f vianu v automatic verification datacentric business processes database theory proceedings th international
conference icdt vol acm international conference proceeding series
pp acm press
deutsch sui l vianu v specification verification data driven web
applications journal computer system sciences
fagin r halpern j moses vardi reasoning knowledge
mit press
fagin r halpern j vardi machines know
properties knowledge distributed systems journal acm
gabbay kurucz wolter f zakharyaschev many dimensional modal
logics theory applications vol studies logic elsevier
garson j quantification modal logic gabbay guenthner f eds
handbook philosophical logic vol pp reidel
halpern j moses guide completeness complexity modal logics
knowledge belief artificial intelligence
halpern j van der meyden r vardi complete axiomatizations reasoning knowledge time siam journal computing
halpern j vardi complexity reasoning knowledge time
acm symposium theory computing stoc pp acm press
halpern j vardi complexity reasoning knowledge time
lower bounds journal computer system sciences
halpern j pucella r probabilistic algorithmic knowledge logical methods
computer science
hariri b b calvanese giacomo g masellis r felli p foundations
relational artifacts verification business process management proceedings
th international conference bpm vol lecture notes computer
science pp springer
hodkinson monodic packed fragment equality decidable studia logica

hodkinson complexity monodic guarded fragments linear real time
annals pure applied logic
hodkinson kontchakov r kurucz wolter f zakharyaschev
computational complexity decidable fragments first order linear temporal logics
proceedings th international symposium temporal representation
reasoning th international conference temporal logic time ictl pp
ieee computer society press
hodkinson wolter f zakharyaschev decidable fragment first order
temporal logics annals pure applied logic


fibelardinelli lomuscio

hodkinson wolter f zakharyaschev decidable undecidable fragments first order branching temporal logics proceedings th ieee symposium logic computer science lics pp ieee computer
society press
lomuscio ryan relation interpreted systems kripke
agent multi agent systems proceedings ai workshop
theoretical practical foundations intelligent agents agent oriented systems
vol lecture notes artificial intelligence pp springer
mccarthy j ascribing mental qualities machines ringle ed philosophical perspectives artificial intelligence pp harvester press
mccarthy j artificial intelligence logic formalizing common sense thomason r ed philosophical logic artificial intelligence pp kluwer
academic
meyden r axioms knowledge time distributed systems perfect
recall proceedings th annual ieee symposium logic computer
science lics pp ieee computer society press
meyden r v wong k complete axiomatizations reasoning knowledge
branching time studia logica
moore r c formal theory knowledge action allen j hendler j
tate eds readings pp kaufmann
parikh r ramanujam r distributed processes logic knowledge
logics programs conference proceedings vol lecture notes computer
science pp springer
pnueli temporal logic programs proceedings th international
symposium foundations computer science focs pp
rao georgeff deliberation role formation intentions
proceedings th conference uncertainty artificial intelligence pp
kaufmann
sturm h wolter f zakharyaschev monodic epistemic predicate logic
logics artificial intelligence european workshop jelia vol
lecture notes computer science pp springer
sturm h wolter f zakharyaschev common knowledge quantification
economic theory
wolter f zakharyaschev decidable fragments first order modal logics
journal symbolic logic
wolter f zakharyaschev axiomatizing monodic fragment first order
temporal logic annals pure applies logic
wooldridge computationally grounded theories agency proceedings
international conference multi agent systems icmas pp ieee
computer society press


fiinteractions knowledge time first order logic mas

wooldridge b reasoning rational agents mit press
wooldridge fisher first order branching time logic multi agent
systems proceedings th european conference artificial intelligence
ecai pp john wiley sons
wooldridge fisher huget parsons model checking multi agent
systems mable proceedings st international conference autonomous agents multiagent systems aamas pp acm press
wooldridge huget fisher parsons model checking multiagent
systems mable language applications international journal artificial
intelligence tools
wooldridge verifying agents implement communication language
proceedings th national conference artificial intelligence th conference innovative applications artificial intelligence pp aaai press




