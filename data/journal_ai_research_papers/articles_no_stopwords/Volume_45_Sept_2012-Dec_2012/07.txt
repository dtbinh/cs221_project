Journal Artificial Intelligence Research 45 (2012) 481514

Submitted 06/12; published 11/12

Complexity Judgment Aggregation
Ulle Endriss
Umberto Grandi
Daniele Porello

ulle.endriss@uva.nl
umberto.uni@gmail.com
danieleporello@gmail.com

Institute Logic, Language Computation
University Amsterdam
Postbus 94242, 1090 GE Amsterdam
Netherlands

Abstract
analyse computational complexity three problems judgment aggregation:
(1) computing collective judgment profile individual judgments (the winner
determination problem); (2) deciding whether given agent influence outcome
judgment aggregation procedure favour reporting insincere judgments (the
strategic manipulation problem); (3) deciding whether given judgment aggregation
scenario guaranteed result logically consistent outcome, independently
judgments supplied individuals (the problem safety agenda).
provide results specific aggregation procedures (the quota rules, premisebased procedure, distance-based procedure) classes aggregation procedures
characterised terms fundamental axioms.

1. Introduction
Judgment aggregation (JA) branch social choice theory studies properties
procedures amalgamating several agents individual judgments regarding truth
falsity set inter-related propositions collective judgment reflecting views
group agents whole (List & Pettit, 2002; List & Puppe, 2009). classic
example due Kornhauser Sager (1993): Suppose three judges decide
legal case involving possible breach contract. Two relevant propositions
really binding contract rather informal promise (proposition p)
defendant broke promise (proposition q). defendant pronounced
guilty conjunction two propositions found true (p q). judges
take following views matter:
Judge 1
Judge 2
Judge 3
Majority

p
Yes
Yes

Yes

q
Yes

Yes
Yes

pq
Yes




Note position individual judge logically consistent. However,
aggregate information using majority rule (i.e., accept proposition
strict majority judges do), arrive collective judgment set
inconsistent. paradoxical outcome, variations known doctrinal
c
2012
AI Access Foundation. rights reserved.

fiEndriss, Grandi, & Porello

paradox (Kornhauser & Sager, 1993) discursive dilemma (Pettit, 2001), inspired
important fast growing literature JA, starting seminal contribution
List Pettit (2002), showed fact aggregation procedure satisfying certain
axioms encoding natural desiderata avoid kind paradox.
literature JA largely developed outlets associated Philosophy, Economic Theory, Political Science, Logic, recently JA come recognised
relevant AI, particularly design analysis multiagent systems.
reasons clear: multiagent system, different autonomous software agents may
different opinions issues (maybe due difference access relevant
information, due different reasoning capabilities), joint course action
needs extracted diverse views. Indeed, AI, related problem belief
merging studied time (see, e.g., Konieczny & Pino Perez, 2002; MaynardZhang & Lehmann, 2003; Chopra, Ghose, & Meyer, 2006; Everaere, Konieczny, & Marquis,
2007), interesting parallels literature JA (Pigozzi, 2006).
JA found relevant analysis abstract argumentation frameworks
widely studied AI (Caminada & Pigozzi, 2011; Rahwan & Tohme, 2010).
Given relevance JA AI, important understand computational aspects.
However, date, received relatively little attention literature.
course explained origins field Law, Economics, Philosophy.
domains social choice, particularly voting fair division, hand,
recent focus computational aspects successful given rise
field computational social choice (Chevaleyre, Endriss, Lang, & Maudet, 2007; Brandt,
Conitzer, & Endriss, 2012).
help bridge gap, paper shall analyse computational complexity
three important problems arise JA:
Winner determination. winner determination problem problem computing result applying given aggregation procedure given profile individual judgment sets. immediate practical relevance applications JA.
obtain positive negative results: two types aggregation procedures,
namely quota rules premise-based procedure, winner determination
problem easily seen polynomial, certain distance-based procedure
obtain interesting intractability result, establishing completeness parallel
access NP mirrors corresponding results voting theory Dodgson rule
(Hemaspaandra, Hemaspaandra, & Rothe, 1997), Young rule (Rothe, Spakowski,
& Vogel, 2003) Kemeny rule (Hemaspaandra, Spakowski, & Vogel, 2005).
Strategic manipulation. agent may try influence result aggregation
favour reporting set judgments different truthfully held
beliefs. manipulation problem asks, given aggregation procedure, given
profile judgment sets, given agent, whether agent opportunity
manipulate successfully situation. one natural way defining preferences
top JA framework (namely terms Hamming distance)
aggregation procedures independent monotonic, well-known
agents never incentive manipulate (Dietrich & List, 2007c).
cases, interesting explore hard solve manipulation problem,
482

fiComplexity Judgment Aggregation

high complexity might signal certain level immunity manipulation.
context voting, kind question lead series interesting important
results (Bartholdi, Tovey, & Trick, 1989; Faliszewski & Procaccia, 2010), even
careful over-interpret theoretical intractability results necessarily
providing protection practice (Walsh, 2011). one widely used procedure (with
easy winner determination problem), namely premise-based procedure,
able show NP-completeness manipulation problem.
Safety agenda. paradox presented shows aggregation procedures possible obtain collective judgment set logically
inconsistent, even though judgment sets supplied individuals
consistent. important parameter determining possibility paradox
agenda, set propositions pass judgment. given aggregation procedure, problem safety agenda asks whether given agenda
safe sense profile individual judgment sets consistent
ever result collective judgment set inconsistent. various classes
aggregation procedures, defined terms classical axioms, prove safety theorems
fully characterise agendas safe sense relate results
known possibility theorems JA literature (List & Puppe, 2009).
study complexity deciding whether given agenda meets safety conditions
identified find typically highly intractable problem located
second level polynomial hierarchy.
results build extend earlier work complexity judgment aggregation (Endriss, Grandi, & Porello, 2010a, 2010b).
remainder paper organised follows. Section 2 introduce formal
framework JA, including several concrete aggregation procedures important
axioms used define desiderata procedures. Section 2 includes proofs
simple representation results characterise aggregation procedures satisfy
certain combinations axioms. Section 3 devoted study complexity
winner determination problem Section 4 manipulation
problem. Section 5 introduce problem safety agenda, prove
several agenda characterisation theorems establishing necessary sufficient conditions
safety, finally study complexity deciding whether conditions satisfied.
Section 6 reviews related work computational aspects JA Section 7 concludes
discussion possible avenues future work.
Throughout paper, shall assume familiarity basics complexity theory notion NP-completeness. Helpful introductions include textbooks
Papadimitriou (1994) Arora Barak (2009).

2. Formal Framework Judgment Aggregation
section provide succinct exposition formal framework JA (List &
Puppe, 2009), originally laid List Pettit (2002) since
refined number authors, notably Dietrich (2007). define three
concrete (families of) aggregation procedures discuss important axiomatic
483

fiEndriss, Grandi, & Porello

properties literature. Finally, prove number representation results,
status folk theorems JA literature often play crucial role
proofs complex results, rarely stated explicitly.
2.1 Notation Terminology
Let L set propositional formulas built finite set propositional variables
using usual connectives , , , , , constants (true) (false).
every formula , define complement , i.e., =
negated, = = formula . say set closed
complementation case whenever .
Definition 1. agenda finite nonempty set L contain
doubly-negated formulas closed complementation.
is, slight departure common definition literature (List & Puppe,
2009), allow tautologies contradictions agenda. reason want
study computational complexity JA, recognising tautology contradiction
computationally intractable problem. write + set non-negated
formulas , i.e., = + { | + }.
Definition 2. judgment set J agenda subset J .
call judgment set J complete J J ; call complementfree 1 case complement J;
call consistent exists assignment makes formulas J true. Let J ()
denote set complete consistent subsets .
shall occasionally interpret judgment set J (characteristic) function J :
{0, 1} J() = 1 J J() = 0 6 J. Hamming distance H(J, J )
two (complete complement-free) judgment sets J J number
positive formulas differ:
X
H(J, J ) =
|J() J ()|
+

Given set N = {1, . . . , n} n > 1 individuals (or agents), write J = (J1 , . . . , Jn )
J ()n generic profile judgment sets, one individual.2 ease exposition,
shall assume n odd (i.e., n > 3). write NJ = {i N | Ji } set
individuals accepting formula profile J .
Definition 3. (resolute) judgment aggregation procedure agenda
set individuals N n = |N | function F : J ()n 2 .
1. property called weak consistency Dietrich (2007), consistency List Pettit (2002).
choice terminology intended emphasise fact purely syntactic notion,
involving model-theoretic concept, distinction believe worth stressing.
2. previous work used general notation J ()N (i.e., set functions N
J ()) set admissible profiles (Endriss et al., 2010a). useful N might infinite
necessarily want associate set individuals set natural numbers,
require level generality here.

484

fiComplexity Judgment Aggregation

is, aggregation procedure maps profile individual (complete consistent)
judgment sets single collective judgment set (an element powerset ).
shall occasionally refer assumption individual judgment sets complete
consistent individual rationality. Note collective judgment set need
complete consistent (that is, collective rationality need hold). kind
procedure defined called resolute, return single judgment set
profile. Later, shall discuss irresolute JA procedures, may return
nonempty set judgment sets (that tied winning). Finally, note that, since F
defined set profiles consistent complete judgment sets, implicitly
making universal-domain assumption, sometimes stated separate property
(List & Pettit, 2002).
2.2 Axiomatic Properties
Definition 3 put constraints collective judgment set, outcome
aggregation process. role following definition:
Definition 4. judgment aggregation procedure F , defined agenda , said be:
(i) complete F (J ) complete every J J ()n ;
(ii) complement-free F (J ) complement-free every J J ()n ;
(iii) consistent F (J ) consistent every J J ()n .
present several axioms provide normative framework state
desirable properties acceptable aggregation procedure be. Note
every procedure satisfy every axiom. Rather, axioms model desiderata
procedures satisfy others not. first axiom basic requirement, restricting
possible aggregators F terms fundamental properties outcomes produce.
Weak Rationality (WR): F complete complement-free.3
condition differs called collective rationality literature
JA (List & Puppe, 2009), require collective judgment set consistent.
first reason include consistency basic notion rationality
requirements (WR) purely syntactic notions easily checked automatically,
case consistency. second reason consistency intrinsic
aggregation function, rather depends properties agenda. point
made precise Section 5, study consistency class
aggregators depending agenda.
following important axioms discussed literature JA (List &
Pettit, 2002; Dietrich, 2007; List & Puppe, 2009; Nehring & Puppe, 2010):
Unanimity (U): Ji agents N , F (J ).
3. previous work (Endriss et al., 2010a), used definition weak rationality addition
completeness complement-freeness included (very weak) technical requirement
contradictory formula universally accepted profiles. consequence,
results later stated slightly differently.

485

fiEndriss, Grandi, & Porello

Anonymity (A): profile J J ()n permutation : N N ,
F (J1 , . . . , Jn ) = F (J(1) , . . . , J(n) ).
Neutrality (N): two formulas , agenda profile J J ()n ,
agents N Ji Ji , F (J ) F (J ).
Independence (I): formula agenda two profiles J , J
J ()n , Ji Ji agents N , F (J ) F (J ).
Systematicity (S): two formulas , agenda two profiles J ,
J J ()n , Ji Ji agents N , F (J ) F (J ).
Unanimity expresses idea individuals accept given judgment,
collective.4 Anonymity states aggregation symmetric respect
individuals, i.e., individuals treated same. Neutrality symmetry
requirement propositions: subgroup accepts two propositions, either
neither collectively accepted. Independence says proposition
accepted subgroup two otherwise distinct profiles, proposition
accepted either neither profile. Systematicity satisfied
neutrality independence are. axioms intuitively
appealing, stronger may seem first, several impossibility theorems,
establishing inconsistencies certain combinations axioms desiderata,
proved literature. original impossibility theorem List Pettit
(2002), instance, shows (under certain assumptions regarding agenda)
complete consistent aggregation procedure satisfying (A) (S).
important property monotonicity. introduce two different axioms
monotonicity. first one commonly used literature (Dietrich & List, 2007a;
List & Puppe, 2009). implicitly relies independence axiom. second, introduced
previous work (Endriss et al., 2010a), designed applied neutral procedures.
systematic procedures two formulations equivalent.
I-Monotonicity (MI ): formula agenda two profiles J , J
J ()n , Ji Ji agents N , N
6 Js Js , F (J ) F (J ).
N-Monotonicity (MN ): two formulas , agenda profile J
J ()n , Ji Ji agents N 6 Js Js
N , F (J ) F (J ).
is, (MI ) expresses collectively accepted (in J ) receives additional
support (in J , agent s), continue collectively accepted. Axiom
(MN ) says collectively accepted accepted strict superset
individuals accepting , collectively accepted.
Axioms used define different classes aggregation procedures: Given
agenda list desirable properties AX provided form axioms, define
F [AX] set procedures F : J ()n 2 satisfy axioms AX.
4. notion unanimity stronger another common formulation requiring J = (J, . . . , J)
imply F (J ) = J (List & Puppe, 2009), two equivalent assumption (I).

486

fiComplexity Judgment Aggregation

2.3 Judgment Aggregation Procedures
Next, define three concrete types aggregation procedures.
2.3.1 Uniform Quota Rules Majority Rule
aggregation procedure F n = |N | individuals quota rule every formula
exists quota q {0, . . . , n+1} F (J ) |NJ | > q .
class quota rules studied depth Dietrich List (2007a). paper,
interested particular class quota rules:
Definition 5. Given {0, . . . , n+1} agenda , uniform quota rule
quota aggregation procedure Fm Fm (J ) |NJ | > m.
aggregation procedure satisfies (A), (I), (MI ), (N) uniform quota
rule; fact follows immediately result Dietrich List (2007a), use
slightly narrow definition quota rule. Provided 6= n + 1, uniform quota rule
Fm satisfies (U).
quota rule special interest majority rule. majority rule uniform
quota rule = n+1
2 ; accepts formula whenever individuals accepting
rejecting (recall assume n odd). Clearly, majority
rule uniform quota rule satisfies (WR).
2.3.2 Premise-Based Procedure
seen introduction, majority rule may fail produce consistent
outcome. Two basic aggregation procedures set way avoid
problem discussed JA literature beginning, namely
premise-based conclusion-based procedure (Kornhauser & Sager, 1993; Dietrich
& Mongin, 2010). basic idea divide agenda premises conclusions.
premise-based procedure, apply majority rule premises
infer conclusions accept given collective judgments regarding premises;5
conclusion-based procedure directly ask agents judgments
conclusions leave premises unspecified collective judgment set. is,
conclusion-based procedure result complete outcomes (indeed, strictly speaking,
conform Definition 3), shall consider here. premise-based
procedure, hand, set way guarantees consistent complete
outcomes, provides usable procedure practical interest.
many JA problems, may natural divide agenda premises
conclusions. Let = p c agenda divided set premises p set
conclusions c , closed complementation.

5. commonly understood premise-based procedure. Dietrich Mongin (2010),
call rule premise-based majority voting, investigated general class premise-based
procedures procedure used decide upon premises need majority rule.

487

fiEndriss, Grandi, & Porello

Definition 6. premise-based procedure PBP p c function mapping
profile J = (J1 , . . . , Jn ) J ()n following judgment set:
PBP(J ) = { c | |= },
= { p | |NJ | >

n+1
}
2

is, set premises accepted (strict) majority; PBP return
set together conclusions logically follow ( |= ).
want ensure PBP always returns judgment sets consistent
complete, impose certain restrictions:
want guarantee consistency, impose restrictions
premises. well-known majority rule guaranteed consistent
agenda satisfies so-called median property, i.e., every inconsistent subset inconsistent subset size 6 2 (Nehring & Puppe, 2007;
List & Puppe, 2009).6 result immediately transfers PBP: consistent
set premises satisfies median property.
want guarantee completeness, impose restrictions
conclusions: assignment truth values premises, truth value
conclusion fully determined.
shall see Section 5 deciding whether set formulas satisfies median
property highly intractable. is, general form, deciding whether
PBP consistent aggregation procedure given agenda complex problem.
meaningful analysis, therefore make two additional assumptions. First, assume
agenda closed propositional variables: p propositional variable p
occurring within formulas . Second, equate set premises
set literals. Clearly, above-mentioned conditions consistency completeness
satisfied assumptions.
So, summarise, instance PBP shall work paper defined
follows: assumption agenda closed propositional variables,
PBP accepts literal individuals accept accept ;
PBP accepts compound formula entailed accepted literals.
consistent complete input profiles, assuming n odd, leads resolute
JA procedure consistent complete. downside, PBP violates
standard axioms typically considered, (N) (I). even violates (U):
Agent 1
Agent 2
Agent 3
PBP

p
Yes




q

Yes



r


Yes


pqr
Yes
Yes
Yes


example, three agents unanimously accept p q r, aggregate using
PBP, end rejecting p q r, three premises rejected.
6. shall discuss result detail Section 5.

488

fiComplexity Judgment Aggregation

2.3.3 Distance-Based Procedure
basic idea distance-based approach aggregation select outcome that,
sense, minimises distance input profile. idea used extensively
preference aggregation (Kemeny, 1959) belief merging (Konieczny & Pino Perez,
2002). first example JA procedure based notion distance introduced
Pigozzi (2006), albeit restrictive assumption agenda closed
propositional variables compound formula either unanimously accepted
unanimously rejected agents. importantly, Pigozzis approach syntactic
information contained agenda discarded moving aggregation
level formulas level models. syntactic variant procedure later
defined Miller Osherson (2009), authors call Prototype-Hamming
rule. distance-based procedure shall define analyse here. irresolute
procedure, returning (nonempty) set collective judgment sets.
Definition 7. Given agenda , distance-based procedure DBP function
mapping profile J = (J1 , . . . , Jn ) J ()n following set judgment sets:
DBP(J ) = argmin

X

H(J, Ji )

JJ ()

collective judgment set DBP minimises amount disagreement
individual judgment sets (i.e., minimises sum Hamming distances
individual judgment sets). Note cases majority rule leads consistent
outcome, outcome DBP coincides majority rule (making
resolute procedure profiles). combine DBP tie-breaking rule
obtain resolute procedure.
DBP complete consistent design: judgment sets J () considered candidates searching solution. However, violates standard
axiomatic properties adapted case irresolute JA procedures (Lang,
Pigozzi, Slavkovik, & van der Torre, 2011). particular, DBP independent; indeed, based idea correlations propositions exploited
rather neglected.
2.4 Representation Results
prove number representation results characterise aggregation procedures satisfy certain combinations axioms. results section
known results, butdespite usefulthey rarely stated explicitly
literature.
Observe aggregation procedure F satisfies (I) exists family
sets winning coalitions W 2N , one formula , F (J )
NJ W . Imposing additional axioms, top (I), forces additional structure onto
family winning coalitions:
F satisfies (I) (U) grand coalition belongs every set winning
coalitions: N W .
489

fiEndriss, Grandi, & Porello

F satisfies (I) (N), i.e., satisfies (S), exists single set
winning coalitions W 2N F (J ) NJ W.
F satisfies (I) (A) collective acceptance formula depends
number individuals accepting it: C W |C| = |C | imply C W .
One consequence latter two insights that, F satisfies (A) (S),

|NJ | = |NJ | implies F (J ) F (J ). well-known fact; List Pettit
(2002), instance, use proof impossibility theorem (for special case
J = J ). Note (somewhat surprising) consequence fact that, case n
even, exists aggregation procedure satisfies (A), (S), well (WR).
see this, suffices consider (single) profile J exactly n2 agents accept n2
J |, i.e., either must F (J ), contraagents accept . |NJ | = |N
dicting complement-freeness, neither must F (J ), time contradicting
completeness. emphasise basic impossibility result involve notion
logical consistency.
hand, n odd (which shall continue assume),
axioms characterise relevant class aggregation procedures:
Proposition 1. F F [WR, A, S] exists function h : {0, . . . , n}
{0, 1} satisfying h(i) = 1 h(n i) N F (J ) h(|NJ |) = 1.


Proof. already seen F satisfies (S) (A), |NJ | = |NJ | implies
F () F (J ). latter equivalent existence function h :
{0, . . . , n} {0, 1} F (J ) h(|NJ |) = 1. additional requirement h(i) =
1 h(n i) consequence (WR). direction immediate: acceptance
formula F depends number agents accepting it, F must
anonymous, neutral independent; condition h(i) = 1 h(n i) furthermore ensures
completeness complement-freeness.
Dropping either neutrality independence, obtain following representation results:
Proposition 2. F F [WR, A, I] exists function h : {0, . . . , n}
{0, 1} every formula satisfying h (i) = 1 h (n i) N
F (J ) h (|NJ |) = 1.
Proof. clear characterisation procedures satisfying (I) (A) terms
winning coalitions given above, procedure always decide whether
collectively accepted looking cardinality coalition accepting
. rest proof proceeds Proposition 1.
Proposition 3. F F [WR, A, N] exists function hJ : {0, . . . , n}
{0, 1} every profile J J ()n satisfying hJ (i) = 1 hJ (n i) N
F (J ) hJ (|NJ |) = 1.
Proof. drop (I), winning coalitions anymore associated formulas,
depend profile J in. (N) merely ensures winning coalitions
depend formula question. (WR) forces symmetry requirement
hJ (i) = 1 hJ (n i). opposite direction immediate.
490

fiComplexity Judgment Aggregation

three representation results above, add (U) list axioms,
corresponds requiring h(n) = 1 characteristic functions h.
Finally, recall seen Section 2.3.1, F F [A, S, MI ]
F uniform quota rule F F [WR, A, S, MI ] F majority
rule. is, representation results stated concern natural weakenings
combination axioms characterising majority rule. particular, chose never
drop anonymity axiom, find appealing uncontroversial
JA. consider unanimity weak rationality fundamental (although make
exceptions class quota rules). independence neutrality axioms,
hand, much debatable, considered various options
either including including (although always keep least one them,
maintain minimal amount structure). is, classes aggregation procedures
covered representation results natural focus on.

3. Winner Determination
section define problem winner determination given JA procedure
decision problem, study computational complexity problem
procedures presented Section 2.3.
3.1 Problem Definition
problem winner determination voting theory computing election
winner given profile preferences supplied voters. corresponding decision
problem asks, given preference profile candidate, whether given candidate
winner election. JA, want compute F (J ) given profile J .
resolute aggregation procedure F , formulate corresponding decision problem
asking, given formula, whether belongs F (J ):
WinDet(F )
Instance: Agenda , profile J J ()n , formula .
Question: element F (J )?
solving WinDet formula agenda, compute collective
judgment set input profile. Note asking instead whether given judgment set
J equal F (J ) lead appropriate formulation winner determination
problem, actually compute winner would solve decision
problem exponential number times (once possible J ).
case irresolute JA procedures F adapt winner determination
problem following way:
WinDet (F )
Instance: Agenda , profile J J ()n , subset L .
Question: J L J J F (J )?
see appropriate formulation decision problem corresponding
task computing winning set, note compute winner using polynomial
491

fiEndriss, Grandi, & Porello

number queries WinDet follows. First, ask whether exists winning set
including arbitrarily chosen first formula agenda 1 , i.e., L = {1 }. case
answer positive, consider second formula 2 query WinDet L = {1 , 2 }.
Use subset L = {1 , 2 } case negative answer. Continue process
formulas agenda covered.7
3.2 Winner Determination Quota Rules Premise-Based Procedure
immediately clear winner determination polynomial problem quota
rule, including majority rule.
Fact 4. WinDet(Fm ) P uniform quota rule Fm .
Winner determination tractable premise-based procedure:
Proposition 5. WinDet(PBP) P.
Proof. Counting number agents accepting premises checking
premise whether positive negative instance majority easy. determines collective judgment set far premises concerned. Deciding whether
given conclusion accepted collective amounts model checking
problem (is conclusion true model induced accepted premises/literals?),
done polynomial time.
3.3 Winner Determination Distance-Based Procedure
want analyse complexity winner determination problem
distance-based procedure. DBP irresolute, study decision problem
WinDet . shall see, WinDet (DBP) p2 -complete, thus showing rule
hard compute. class p2 (also known p2 (O(log n)), PNP[log] PNP
|| )
class problems solved polynomial time asking logarithmic number
queries NP oracle or, equivalently, solved polynomial time asking
polynomial number queries parallel (Wagner, 1987; Hemachandra, 1989).
obtain result, first devise NP oracle used proof
p2 -membership. shall use following problem:
WinDetK (DBP)
Instance: Agenda , profile J J ()n , subset L , P
K N.
Question: J J () L J H(J , Ji ) 6 K?
is, ask whether exists judgment set J Hamming distance
profile K accepts formulas L. words, rather aiming
computing winning judgment set, problem merely allows us compute judgment set
7. line recent work Hemaspaandra, Hemaspaandra, Menton (2012), therefore argue
formulation winner determination problem correct decision problem associated
search problem actually computing winning judgment set.

492

fiComplexity Judgment Aggregation

certain minimal quality (where quality measured terms Hamming distance).
show problem lies NP.8
Lemma 6. WinDetK (DBP) NP.
Proof. show WinDetK (DBP) modelled integer program (without
objective function). proves membership NP (Papadimitriou, 1981). Suppose
want answer instance WinDetK (DBP). number subformulas propositions
occurring agenda linear size (not cardinality) . introduce binary
decision variable subformulas: xi {0, 1} ith subformula.
first write constraints ensure chosen outcome correspond
consistent judgment set (i.e., J J ()). Note rewrite formula
terms negation, conjunction, bi-implication without resulting superpolynomial
(or even superlinear) increase size. need show encode constraints
connectives. following table indicates write constraints:
2 = 1
x2 = 1 x1
3 = 1 2 x3 6 x1 x3 6 x2 x1 + x2 6 x3 + 1
3 = 1 2 x1 + x2 6 x3 + 1 x1 + x3 6 x2 + 1
x2 + x3 6 x1 + 1 1 6 x1 + x2 + x3
continue, consider following way rewriting sum distances featuring
definition WinDetK (DBP):
X



H(J , Ji ) =



=
=

n X
X

|J () Ji ()|

i=1 +
n
XX

1

2

|J () Ji ()|

i=1

n
X
1 X
Ji ()|

|n J ()
2


i=1

need bound sum above. suppose variables xi indices
{1, . . . , m} = || correspond propositions elements
. Let ai = |NJi | number individuals accept ith proposition
(under J ). compute winner DBP, need find consistent judgment
set J (characterised variables x1 , . . . , xm ) minimises sum |n x1 a1 | + +
|n xm |. introducing additional set integer variables yi > 0
= 1, . . . , m. ensure yi = |n xi ai | adding following constraints:9
(i 6 m)
(i 6 m)

n x 6 yi
n x 6 yi

8. proof establishes membership NP, suggests implement solver
difficult problem. pointed one anonymous reviewer, possible prove NP-membership
directly, using certificate consists J satisfying assignment J .
9. precise, constraints ensure |n xi ai | 6 yi . However, next constraint force
yi minimal.

493

fiEndriss, Grandi, & Porello

P
sum 21
i=1 yi corresponds Hamming distance winning set
profile. ensure exceed K, add following constraint:

1 X
yi 6 K

2
i=1

Finally, need ensure formulas set L get accepted.
adding one last set constraints:
(for L)

xi = 1

Now, construction, integer program presented feasible
instance WinDetK (DBP) started answered positive.
completes proof.
obtain upper bound winner determination problem DBP,
use standard construction. first involves identifying best value K,
deciding WinDetK (DBP) value K. latter done logarithmic
number queries problem complexity analysed Lemma 6.
Together, yields desired upper bound:
Lemma 7. WinDet (DBP) p2 .
Proof. problem WinDet (DBP) asks whether exists winning judgment set
accepts formulas given subset L . Since Hamming distance
judgment set profile bounded polynomial figure, solve
problem performing binary search K using logarithmic number queries
WinDetK (DBP).
P
precisely, since H(J , Ji )) 6 K = ||
2 |N |, figure polynomial
size problem description, ask first query WinDetK (DBP)

K = K2 empty subset designated formulas. case positive answer,

continue search new K = K4 , otherwise move higher half
interval querying WinDetK (DBP) K = 43 K . process ends logarithmic
number steps, providing exact Hamming distance K w winning candidate
profile J consideration. sufficient run problem WinDetK (DBP)
K = K w subset L original instance WinDet (DBP) wanted
solve. case answer positive, since cannot winning judgment set
Hamming distance strictly less K w , one winning judgment sets contains
formulas L. hand, case negative answer judgment sets containing
L Hamming distance bigger K w , thus cannot belong winning set.
Next, show upper bound established Lemma 7 tight. exploit
similarity DBP Kemeny rule preference aggregation build known
p2 -hardness result Hemaspaandra et al. (2005).
Lemma 8. WinDet (DBP) p2 -hard.
494

fiComplexity Judgment Aggregation

Proof. build reduction problem Kemeny Winner, defined work
Hemaspaandra et al. (2005).10 instance problem consists set candidates C,
profile linear preference orders P = (P1 , . . . , Pn ) C, designated candidate c
C. Define Kemeny score c following expression:
P
KemenyScore(c, P ) = min{ ni=1 dist(Pi , Q) | Q linear order top(Q) = c}
Here, dist(Pi , Q) Hamming distance two linear orders (defined number
ordered pairs candidates disagree) top(Q) preferred
candidate preference order Q. Kemeny Winner asks whether Kemeny score
c less equal Kemeny score candidates C.
build instance WinDet (DBP) decide problem. Define agenda
C following way. First, add propositional variables pab ordered pairs
distinct candidates a, b C; variables encode linear order C binary
relation (where pab stands b). describe properties linear order
means formulas form pab pbc pac pab pba . include
formulas, a, b, c C, C . fact, include m2 + 1 syntactic variants (where
= |C|) them.11 figure m2 + 1 chosen higher maximal
Hamming distance two linear orders (which m2 ).
Given preference profile P , build judgment profile J P encoding
order Pi C judgment set JiP C . example, agent 1s preference order
b c, J1P include set {pab , pba , pbc , pcb , pac , pca }. addition,
JiP include syntactic copies formulas encoding linear orders.
Observe dist(Pi , Pj ) = H(JiP , JjP ) construction. therefore sufficient
ask query WinDet (DBP) using C agenda, J P profile, L =
{pcd | C, c 6= d} set propositions accept sure, obtain answer
initial Kemeny Winner instance designated candidate c. winning ranking
features c top candidates (i.e., formulas pcd accepted candidates d),
Kemeny score lower equal candidates, providing
positive answer original problem. key insight notice judgment
sets encoding relations linear orders considered minimisation
process, since every disagreement one formulas encoding linear orders cause
much greater loss Hamming distance gained modifying
variables encoding individual candidate rankings.
Putting Lemma 7 8 together yields complete characterisation complexity
winner determination distance-based aggregation:
Theorem 9. WinDet (DBP) p2 -complete.
Theorem 9 shows DBP highly intractable. However, adapting efficient heuristics developed Kemeny rule (which, seen proof Lemma 8, closely related
DBP) may possible obtain implementation DBP achieves
acceptable performance practice (Conitzer, Davenport, & Kalagnanam, 2006).
10. Hemaspaandra et al. (2005) work preferences weak orders, point results
remain valid linear orders used instead. simplify presentation, work linear orders.
11. instance, formula might use syntactic variants , , , forth.

495

fiEndriss, Grandi, & Porello

4. Strategic Manipulation
context voting, agent said able manipulate voting rule
exists situation voting manner truthfully reflect preferences
result outcome prefers outcome would realised
vote truthfully (Gaertner, 2006). would constitute appropriate definition
manipulation context JA immediately clear, JA
notion preference. However, fixing suitable notion closeness judgment sets,
possible build preference ordering starting individuals initial judgment
set. approach followed Dietrich List (2007c) JA Everaere
et al. (2007) related setting belief merging. builds assumption
agents individual judgment set preferred outcome amongst two
outcomes prefer one closer preferred outcome.
measure closeness using Hamming distance call aggregation procedure
F manipulable permits situation agent change outcome get closer
truthful judgment reporting untruthfully.
main interest computational complexity deciding whether given
agent successfully manipulate given profile. context, result showing
manipulation computationally intractable would count positive result. Specifically, study problem premise-based procedure.
family quota rules, (as shall see) impossible manipulate quota
rule aforementioned sense. study manipulation problem
distance-based procedure, (as seen) even much basic winner
determination problem already intractable procedure.
4.1 Problem Definition
first need define preference ordering judgment sets agent N .
principle, number ways this, one reasonable approach
assume agent judgment set Ji preferred outcome
preferences outcomes depend close Ji (Dietrich & List, 2007c).
shall measure closeness using Hamming distance, distances could
used end (Duddy & Piggins, 2012). say agent prefers J J
H(Ji , J) < H(Ji , J ).
employ standard game-theoretical notation denote (J , Ji ) profile
J , except judgment set agent replaced Ji .
Definition 8. F manipulable profile J J ()n agent N , exists
alternative judgment set Ji J () H(Ji , F (J , Ji )) < H(Ji , F (J )).
is, reporting Ji rather truthful judgment set Ji , agent achieve
outcome F (J , Ji ) outcome closer (in terms Hamming distance)
truthful (and preferred) set Ji outcome F (J ) would get realised
truthfully report Ji . procedure manipulable profile
agent called strategy-proof.
Dietrich List (2007c) shown JA procedure strategy-proof
satisfies (I) (MI ). Indeed, follows immediately definitions: independence
496

fiComplexity Judgment Aggregation

means would-be manipulator consider one proposition time; monotonicity
means always best interest drive support formulas
judgment set reduce support judgment set, i.e.,
best interest report judgment set truthfully.12
aggregation procedures strategy-proofness cannot guaranteed, want
study algorithmic problem computing manipulating judgment set. end,
formulate manipulation decision problem aggregation procedure F :
Manip(F )
Instance:
Question:

Agenda , profile J J ()n , agent N .
Ji J () H(Ji , F (J , Ji )) < H(Ji , F (J ))?

Note asking whether agent manipulate successfully, rather how.
is, problem immediately correspond practical (and potentially
harder) problem computing actual strategy manipulator. However, since
interest obtaining intractability results (to provide protection manipulation), safely concentrate formulation, provides lower bound
corresponding search problem.
seen, uniform quota rules (including majority rule) independent monotonic, means strategy-proof (so algorithmic
problem deciding Manip arise procedures). course, comes
price always producing outcomes consistent.
4.2 Strategic Manipulation Premise-Based Procedure
prove manipulating premise-based procedure intractable, thus showing existence kind jump computational complexity winner
determination manipulation desirable context.
Theorem 10. Manip(PBP) NP-complete.
Proof. first establish NP-membership. untruthful judgment set Ji yielding preferred outcome serve certificate. Checking validity certificate means
checking (a) Ji actually complete consistent judgment set (b)
outcome produced Ji better outcome produced truthful set Ji .
(a), checking completeness easy. Consistency decided polynomial time:
every propositional variable p agenda, Ji must include either p p; admits
single possible model; remains done checking compound
formulas Ji satisfied model.13 (b), need compute outcomes
Ji Ji (by Proposition 5, polynomial), compute Hamming distances
Ji , compare two distances.
Next, prove NP-hardness reducing Sat Manip(PBP). Suppose given
propositional formula want check whether satisfiable. build
12. Note contradict Gibbard-Satterthwaite Theorem voting theory (Gaertner,
2006). theorem involves universal-domain assumption, manner using
Hamming distance induce preferences judgment sets amounts domain restriction.
13. is, point crucially rely assumption PBP defined agendas
closed propositional variables.

497

fiEndriss, Grandi, & Porello

judgment profile three agents third agent manipulate aggregation
satisfiable. Let p1 , . . . , pm propositional variables occurring ,
let q1 , q2 two additional propositional variables. Define agenda contains
atoms p1 , . . . , pm , q1 , q2 negation, well + 2 syntactic variants
formula q1 ( q2 ), well complements formulas. instance,
= q1 ( q2 ), might use syntactic variants , , , forth.
consider profile J (with rightmost column weight + 2):

J1
J2
J3
F (J )

p1
1
0
1
1

p2
1
0
1
1







pm
1
0
1
1

q1
0
0
1
0

q2
0
1
0
0

q1 ( q2 )
?
?
1
0

judgments agents 1 2 regarding q1 ( q2 ) irrelevant argument,
indicated ? table (but note determined polynomial
time; particular, J1 (q1 ( q2 )) = 0 ).
agent 3 reports judgment set truthfully (as shown table), Hamming
distance J3 collective judgment set 1 + (m + 2) = + 3. Note
agent 3 decisive propositional variables (i.e., premises) except q1 (which
certainly get rejected). Now:
satisfiable, agent 3 report judgments regarding p1 , . . . , pm correspond satisfying assignment . furthermore accepts q2 , + 2
copies q1 ( q2 ) get accepted collective judgment set. Thus,
Hamming distance J3 new outcome + 2, i.e., agent 3
manipulated successfully.
satisfiable, way get m+2 copies q1 (q2 )
accepted (and q1 get rejected case). Thus, agent 3 means
improving Hamming distance + 3 guarantee
reporting truthfully.
Hence, satisfiable agent 3 manipulate successfully, reduction
Sat Manip(PBP) complete.
Thus, manipulating PBP significantly harder using it, least terms worstcase complexity (and assumption P 6= NP).

5. Safety Agenda
section, introduce concept safety agenda: agenda safe
given aggregation procedure F , collective judgment set returned F
consistent (consistent) input profile. course, question relevant
aggregation procedures always consistent begin with,
consider PBP DBP section. fact, main interest
safety agenda entire classes aggregation procedures, characterised set
498

fiComplexity Judgment Aggregation

axioms AX: safe class F [AX] aggregation procedures safe every
procedure F F [AX].
defining problem relating so-called agenda characterisation results (or
possibility theorems, shall call them) studied JA literature, characterise safe
agendas number natural combinations axioms establish computational
complexity checking safety agenda cases.
5.1 Problem Definition
performing aggregation judgments, would avoid paradoxical outcomes,
i.e., would ensure collective judgment set consistent. Whether
indeed case depends several factors: aggregation procedure,
agenda, individual judgment sets. cannot control choices individuals
make. might even know aggregation procedure exactly going
use; might know properties, i.e., might know
belongs certain class procedures. nevertheless guarantee collective
judgment set consistent? formalise question follows:
Definition 9. agenda safe respect class aggregation procedures F,
every procedure F consistent applied profiles judgment sets .
example paradox presented introduction demonstrates unsafety
agenda {p, p, q, q, p q, (p q)} respect majority rule. agenda {p, p},
hand, immediately seen safe respect full class weakly
rational aggregation procedures.
question whether agenda safe closely related rich literature socalled agenda characterisation results (see, e.g., Nehring & Puppe, 2007; Dokow & Holzman,
2010; Dietrich & List, 2007b; List & Puppe, 2009). authors asked following
kind question: given agenda given list axiomatic requirements (always
including requirement consistency), possible find aggregation procedure
meets requirements agenda? may rephrase question follows:
given agenda list axioms AX (now excluding consistency), possible
find procedure F [AX] consistent? distinguish results kind
safety theorems (which agenda characterisations kind), shall refer
possibility theorems. summarise: possibility theorem shows
consistent procedure F [AX], safety theorem shows procedures
F [AX] consistent.
Note case class aggregation procedures consists single aggregation
procedure (e.g., F [WR, A, S, MI ] consists majority rule), possibility safety
results coincide.
Possibility theorems important point view mechanism designer:
given certain axioms would see satisfied, still possible design
aggregation procedure meeting know certain characteristics kind
agenda procedure used? is, question likely
ask off-line situation once. Safety theorems, hand,
likely play role on-line situation arguably particular interest
499

fiEndriss, Grandi, & Porello

applications. reason actual users likely want assurance
aggregation consistent (provided certain axioms satisfied agenda
certain properties) rather learn exists consistent form aggregation
(satisfying certain axioms). instance, suppose want give certain guarantees
quality operations multiagent system, without full knowledge precise
specification every individual agent without full knowledge interaction
protocols going employ. might nevertheless sufficient information
safety theorem apply, case check, given agenda, whether consistency
guaranteed. is, deciding whether safety holds question might
answer again, many different agendas. computational
complexity problem relevant question.
5.2 Agenda Properties
shall see, agenda satisfies certain structural properties, might
sufficient condition ensure safety respect certain aggregation rules. turns
types agenda properties help similar feature
known possibility theorems. Specifically, shall make use so-called median property,
introduced Nehring Puppe (2007).14
Definition 10. say agenda satisfies median property (MP), every
inconsistent subset inconsistent subset size 2.
words, satisfies MP minimally inconsistent subset (mi-subset)
2 elements. Note case known include tautologies
(and thus contradictions), definition simplifies requiring mi-subset must
exactly size 2. generalise median property follows:
Definition 11. Let k > 2. agenda satisfies k-median property (kMP), every
inconsistent subset inconsistent subset size k.
is, MP 2MP property. Agendas satisfying MP already
quite simple, restriction made tighter requiring inconsistent subsets
particular form. sequel, call inconsistent set nontrivially inconsistent
contain single formula contradiction.
Definition 12. agenda satisfies simplified median property (SMP), every
nontrivially inconsistent subset subset form {, } logically
equivalent .
simplification yields:
Definition 13. agenda satisfies syntactic simplified median property
(SSMP), every nontrivially inconsistent subset subset form {, }.
14. name median property derives work Nehring Puppe (2007), analyse social
choice functions class vector spaces called median spaces.

500

fiComplexity Judgment Aggregation

Agendas satisfying SSMP composed uncorrelated formulas, i.e., essentially equivalent agendas composed atoms alone. SMP less restrictive, allowing
logically equivalent syntactically different formulas.
Observe every agenda satisfies SMP satisfies MP. converse
true: = {p, p, p q, (p q)} satisfies MP, SMP. Similarly, every
agenda satisfies SSMP satisfies SMP. Again, converse true:
= {p, p, p p, (p p)} satisfies SMP, SSMP.
5.3 Safety Theorems: Linking Agenda Properties Axioms
prove several characterisation results safe aggregation judgments, concentrating classes procedures defined weakening axiomatisation majority
rule. begin safety theorem majority rule itself. fact, result
familiar literature (Nehring & Puppe, 2007), although presented
different form. Despite fact known result, still provide proof,
arguably simpler translating result Nehring Puppe setting.
Theorem 11. agenda safe majority rule satisfies MP.
Proof. Let F majority rule.
() First, suppose satisfies MP. need show F (J ) consistent
J J ()n . sake contradiction, suppose not, let mi-subset
F (J ). F (J ) , 2 elements. Clearly, cannot case
F (J ) includes contradiction , would mean majority agents
would accepted . Hence, must set exactly two formulas, say, .
means must accepted n+1
2 agents must
accepted n+1


agents.
Hence,


pigeon hole principle, least one agent
2
must accepted them, thereby contradicting individual rationality.
() direction, suppose satisfy MP, i.e., mi-subset
size k > 3. need show exists profile J F (J ) inconsistent.
Let two distinct formulas . consider profile J following
properties (recall assume n > 3): (1) first n1
2 agents accept formulas
except ; (2) last n1
agents
accept

formulas

except ; (3)
2
n+1
middlemost agent 2 accepts formula . is, individual
agent accepts formulas , i.e., really build individually rational
profile properties (note consistent subset always extended
complete consistent judgment set ). However, profile
formulas majority get F (J ), i.e., F (J ) inconsistent.
reason case able rely known result aforementioned fact
classes aggregation procedures consisting single procedure, safety
possibility results coincide. Unfortunately, larger classes procedures, approach
exploiting known possibility results cannot used.
first establish two sufficient conditions safety agenda, two different
(fairly large) classes aggregation procedures:
Lemma 12. agenda satisfies SSMP, safe F [WR, U].
501

fiEndriss, Grandi, & Porello

Proof. Consider aggregation procedure satisfies (WR) (U). Let agenda
satisfies SSMP. Hence, way obtain inconsistent outcome would
either accept inconsistent formula accept formula syntactic complement
. latter possibility excluded (WR). So, sake excluding
former possibility, suppose inconsistent formula collectively accepted.
individual rationality, get accepted agents. Hence, (U),
collectively accepted, thus collectively rejected (WR).
Lemma 13. agenda satisfies SMP, safe F [WR, U, N].
Proof. Let F aggregation procedure satisfies (WR), (U) (N), let
agenda satisfies SMP. sake contradiction, suppose exists profile
J J ()n F (J ) inconsistent. distinguish two cases:
(1) exists set {, } F (J ) logically equivalent . given
individual judgment sets assumed complete consistent,
logically equivalent means every agent accepts accept ,
J . Together (N) entails F (J )
vice versa, i.e., NJ = N
F (J ). already know F (J ); thus, get F (J ).
F (J ), obtained contradiction (WR).
(2) exists inconsistent formula F (J ). argument used
proof Lemma 12, contradicts assumption F satisfying (U) (WR).
is, obtain contradiction possible cases.
Next, prove two results concerning necessary conditions safety agenda
(now aim relatively narrowly defined classes aggregation procedures):
Lemma 14. agenda safe F [WR, A, U, S], satisfies SMP.
Proof. Let agenda violates SMP. need provide example
aggregation procedure F satisfies (WR), (A), (U) (S) produce
inconsistent outcome least one input profile. distinguish two cases:
(1) Suppose violates SMP virtue mi-subset size greater 2.
case violates MP. Theorem 11 shows safe
majority rule. majority rule satisfies (WR), (A), (U) (S), done.
(2) possibility mi-subset consisting two formulas
logical complements, i.e., exists set form {, }
|= 6|= .15 Consider following weakly rational, anonymous,
unanimous systematic aggregation procedure Fh 3 individuals, defined using
notation Proposition 1: h(0) = h(2) = 0 h(1) = h(3) = 1. is, Fh
accepts proposition accepted odd number individuals.16 Consider
following profile, restricted complements: J1 = {, },
15. example, might p q might p.
16. parity rule used Dokow Holzman (2010) provide witness one
possibility results.

502

fiComplexity Judgment Aggregation

J2 = {, }, J3 = {, }. Note sets consistent. However,
profile (opportunely extended profile whole agenda) generate
inconsistent outcome, since accepted exactly one individual.
Hence, cases fails safe least one procedure F [WR, A, U, S].
Lemma 15. agenda safe F [WR, A, U, I], satisfies SSMP.
Proof. Let agenda violates SSMP. violates SMP,
Lemma 14 applies done.
Otherwise, must two formulas |= 6= ,
i.e., logical syntactic complements. Let F procedure accepts
(and rejects ) least one agent accepts , accepts (and rejects )
least one agent accepts , behaves majority rule respect
propositions. F satisfies (WR), (A), (U) (I), safe F , case one
agent accepts another , collective judgment set include .
ready state prove safety theorems:
Theorem 16. agenda safe F [WR, A, U, S] satisfies SMP.
Proof. One direction given Lemma 14. follows Lemma 13 together
observation F [WR, U, N] F [WR, A, U, S].
characterisation safe agendas remains intact widen class aggregation
procedures consideration systematic neutral procedures:
Theorem 17. agenda safe F [WR, A, U, N] satisfies SMP.
Proof. One direction follows Lemma 14 together fact F [WR, A, U, S]
F [WR, A, U, N]; Lemma 13 F [WR, U, N] F [WR, A, U, N].
Indeed, Theorems 16 17 state safety results particularly natural classes
aggregation procedures, argument easily see class F
F [WR, A, U, S] F F [WR, U, N] case safe F
satisfies SMP.
drop neutrality F [WR, A, U, S] rather independence, obtain
even restrictive characterisation safe agendas:
Theorem 18. agenda safe F [WR, A, U, I] satisfies SSMP.
Proof. One direction given Lemma 15; follows Lemma 12 together
F [WR, U] F [WR, A, U, I].
Again, generalise result say that, class F F [WR, A, U, I]
F F [WR, U], case safe F satisfies SSMP.
Finally, uniform quota rules characterisation result kind seek available
literature (albeit different name), least rules certain bounds
imposed quota (Dietrich & List, 2007a). state interesting result follows
(recall n number individuals):
503

fiEndriss, Grandi, & Porello

Theorem 19. Let k > 2. agenda safe class uniform quota rules Fm
satisfying constraint > n nk satisfies kMP.
Theorem 19 reformulation Corollary 2(a) work Dietrich List (2007a)
shall prove here.
Let us conclude presentation safety theorems remark role
axiom (U) results above. Recall made assumption
agenda including contradictory formulas (or complements, i.e., tautologies).
make assumption (which common JA literature certainly
unreasonable), remove mentionings (U) safety results above.
Indeed, ever used (U) proofs avoid situations contradiction gets
unanimously rejected yet collectively accepted. wish make assumption
regarding absence contradictory formulas agenda, still remove
mentionings (U) safety results above, provided replace mentionings
SMP property satisfying SMP including contradictory
formulas (and accordingly results involving SSMP).
5.4 Membership Results Agenda Properties
identified conditions guarantee safety given
agenda, want know difficult decide whether conditions satisfied.
shall see, problem p2 -complete classes aggregation procedures
considered. p2 (also known coNPNP coNP NP oracle) complexity class located second level polynomial hierarchy (Meyer & Stockmeyer, 1972;
Stockmeyer, 1976; Arora & Barak, 2009). class decision problems
certificate negative answer verified polynomial time machine
access oracle answering queries Sat (or NP-complete problem).
prove problem p2 -complete, prove membership p2 p2 -hardness.
begin proving membership p2 . so, need provide algorithm
that, provided certificate intended establish negative answer, verify
correctness certificate polynomial time, assume algorithm
access Sat oracle. sequel, shall write MP median property
problem deciding whether given agenda satisfies median property,
similarly SMP, SSMP kMP.
Lemma 20. MP, SMP, SSMP, kMP p2 .
Proof. shall present proof kMP, intuitively difficult four
problems. proofs three problems similar.
need give algorithm decides correctness certificate violation
kMP polynomial time, assuming access Sat oracle. given agenda
(with = ||), certificate set (a) needs inconsistent
(b) must inconsistent subsets size 6 k. Inconsistency checked
P

single query Sat oracle. = ||, ki=1 mi nonempty
subsets size 6 k, polynomial (and thus m).17 Hence, second
condition checked polynomial number queries oracle.
17. figure polynomial k, affect argument, k constant.

504

fiComplexity Judgment Aggregation

5.5 Hardness Results Agenda Properties
Next, want show MP, SMP, SSMP kMP p2 -hard. done
giving polynomial-time reduction problem already known p2 -hard
problem investigation. purpose, make use quantified boolean
formulas (QBFs). QSat, satisfiability problem18 general QBFs, PSPACEcomplete, imposing suitable syntactic restrictions generate complete problems
level polynomial hierarchy. Consider QBF following form:
x1 xr y1 ys .(x1 , . . . , xr , y1 , . . . , ys )
arbitrary propositional formula {x1 , . . . , xr } {y1 , . . . , ys } set
propositional variables occurring (that is, could QBF
existential quantifiers occur inside scope universal quantifiers). problem
checking whether formula form satisfiable (i.e., true), shall denote
Sat, known p2 -complete (Arora & Barak, 2009). Below, shall abbreviate
formulas type writing xy.(x, y).
basic intuition MP related problems p2 -hard share
basic structure Sat, asking question form subsets
inconsistent, exist subset certain property? Indeed, embedding,
say, MP Sat relatively straightforward. However, require opposite:
need show even though Sat may appear general MP
agenda problems, actually reduced problems.
first prove technical lemma. Let Sat2 problem checking whether
QBF following form true, given already know (i) tautology,
(ii) contradiction, (iii) logically equivalent literal:
xy.(x, y) xy.(x, y)
Lemma 21. Sat2 p2 -hard.
Proof. reduction Sat: Given QBF form xy.(x, y), show
checking satisfiability equivalent running Sat2 ( a) b
universally b existentially quantified, two new propositional variables b
occurring , i.e., checking satisfiability formula
xayb.[((x, y) a) b] xayb.[((x, y) a) b].
First, note ( a) b cannot tautology, contradiction, equivalent literal;
side constraints specified definition Sat2 satisfied. note
first conjunct true exactly original formula xy.(x, y) true.
b always set true, original formula true whenever
set false (a falls scope universal quantifier). Therefore, positive answer
Sat2 instance entails positive answer original Sat instance.
direction immediate, second conjuncts always satisfiable
(by making b false).
18. shall speak satisfiability problems QBFs, even though strictly speaking QBFs
distinction satisfiability, truth validity, every QBF closed formula.

505

fiEndriss, Grandi, & Porello

able prove p2 -hardness SSMP:
Lemma 22. SSMP p2 -hard.
Proof. shall give polynomial-time reduction Sat2 SSMP; claim
follows Lemma 21. Take instance Sat2 , i.e., question whether
xy.(x, y) xy.(x, y) true 6|= , 6|= , 6|=
literals . Suppose x = hx1 , . . . , xr i, define agenda follows:19
= {x1 , x1 , x2 , x2 , . . . , xr , xr , ( ), ( )}
prove violates SSMP answer Sat2 -question
NO. see this, consider following facts. First, suppose violates SSMP.
circumstances case? neither tautology contradiction,
inconsistent subset must nontrivially inconsistent. Furthermore, construction
(consisting largely literals), inconsistent subset including pair
syntactic complements must include either ( ) ( ), well (complementfree) subset {x1 , x1 , . . . , xr , xr }. is, way violating SSMP
find subset literals {x1 , x1 , . . . , xr , xr } make true forces either ( )
( ) false. precisely situation instance Sat2
requires negative answer.
direction, suppose answer Sat2 -question NO. means
able find assignment variables x makes either
unsatisfiable. W.l.o.g., suppose latter situation. Construct subset ,
containing ( ), includes literal xi set true assignment ,
xi otherwise. inconsistent subset , since neither tautology
contradiction, falsifies SSMP.
Proving hardness SMP works similarly:
Lemma 23. SMP p2 -hard.
Proof. construction used proof Lemma 22. additional
insight required observation special kind agenda constructed
proof, SMP SSMP coincide: excluding formulas equivalent
literals, ensure agenda constructed previous proof contain
pairs logically equivalent formulas.
MP give proof using reduction SSMP:
Lemma 24. MP p2 -hard.
Proof. show reduce problem deciding SSMP instance MP.
Let agenda want test SSMP let + = {1 , . . . , }
set non-negated formulas . build set + following way: copy
formulas + times, every time renaming variables occurring , obtaining
19. Using ( ) rather ensures agenda include doubly-negated formulas.

506

fiComplexity Judgment Aggregation

formulas ji 1 6 i, j 6 m. every substitute ii ii pi , pi new variable
occurring ji . Finally, add p1 , . . . , pm + . obtain following set:
+ = {p1 , 11 p1 , . . . , 1m ,
p2 , 21 , 22 p2 , . . . , 2m ,
..
.


p ,
1 , . . . , p }

Define = + { | + }. show satisfies SSMP
satisfies MP. One direction immediate. Suppose satisfy SSMP.
must mi-subset size k > 2.20 Let = {i1 , . . . , ik }. exists
subset , namely = {pi1 , ii11 pi1 , ii12 , . . . , ii1k }, mi-set size k + 1 > 3,
thereby falsifying MP.
opposite direction, suppose satisfy MP. is,
mi-subset size > 3. construction , know subset must
contain formulas superscript complements (all formulas
different variables). subset contain pi pi , find copy
, violates SSMP, case done. Clearly, cannot include
pi pi , would contradict || > 3. left cases
includes either pi pi i. Then, minimality, ii pi negation
must included. reason cases: (1) pi ii pi ,
dropping disjunction still get inconsistent subset, assumption
minimality; (2) pi (ii pi ) cannot reason; (3) finally,
pi together negation ii pi already inconsistent. Therefore, conclude
must form {pi , ii pi }i , set (one more) formulas
superscript i. easy see set obtain remove
superscript {ii } mi-subset falsifies SSMP. particular,
ii 6 , ii 6 construction, i.e., mi-subset obtain
consist two formulas logical complements.
Finally, establish hardness kMP:
Lemma 25. kMP p2 -hard every k > 2.
Proof. k = 2, claim established Lemma 24. observe
use exactly construction proof Lemma 24 reduce instance
kMP k > 2 instance corresponding (k+1)MP. Hence, simple
inductive argument, kMP must p2 -hard finite k > 2.
5.6 Complexity Safety Agenda
shown deciding whether given agenda satisfies MP, SMP,
SSMP, kMP p2 p2 -hard. Furthermore, Section 5.3 linked
properties safety various combinations axioms. immediate
corollary results, obtain theorem concerning complexity deciding
safety agenda:
20. fact cannot contain two formulas logical complements relevant proof.

507

fiEndriss, Grandi, & Porello

Theorem 26. Deciding problem safety agenda p2 -complete
following classes aggregation procedures:
(i)
(ii)
(iii)
(iv)
(v)

F [WR, A, S, MI ], consisting majority rule;
F [WR, A, U, S], systematic procedures;
F [WR, A, U, N], neutral procedures;
F [WR, A, U, I], independent procedures;
class uniform quota rules Fm > n nk k > 2.

Proof. Concerning p2 -hardness, (i) direct consequence Theorem 11 Lemma 24.
way, (ii) derived Theorem 16 Lemma 23, (iii) Theorem 17
Lemma 23, (iv) Theorem 18 Lemma 22. Finally, (v) follows Theorem 19
together Lemma 25. Membership p2 follows Lemma 20 five cases.
is, case safety agenda guaranteed
structurally simple agendas, deciding whether given agenda meets structural
constraints highly intractable. negative result sense concerns
problem would able solve efficiently. stress
render problem hopeless. Work QBF solvers seen lot progress recent years
(see, e.g., Narizzano, Pulina, & Tacchella, 2006), tools could deployed check
whether agenda satisfies given type median property.21 event, understanding
naturally arising question JA relates difficult well-studied algorithmic
problem Sat interesting worthwhile right.

6. Related Work: Computational Perspectives Judgment Aggregation
Starting work List Pettit (2002), research JA focussed either
philosophical implications fact aggregation may result inconsistent
outcome derivation impossibility characterisation results. extensive
literature field recently reviewed List Puppe (2009). work
explored links JA preference aggregation (Dietrich & List, 2007b;
Grossi, 2009; Porello, 2010; Grandi & Endriss, 2011) several recent contributions
furthermore focussed definition analysis specific aggregation procedures (Dietrich & List, 2007a; Dietrich & Mongin, 2010; Miller & Osherson, 2009; Lang et al., 2011).
shall instead concentrate contributions JA either computational
slant otherwise relevant AI.
Besides previous work subject present paper (Endriss et al., 2010a,
2010b), small number contributions computational social choice
taking computational perspective JA (Nehama, 2010; Slavkovik & Jamroga, 2011;
Baumeister, Erdelyi, & Rothe, 2011; Baumeister, Erdelyi, Erdelyi, & Rothe, 2012):
first example work Nehama (2010), proposes framework approximate JA
goal finding aggregation procedure never return inconsistent
21. pointed one anonymous reviewer, Answer Set Programming may useful framework
reason safety problems. DLV System, instance, provides flexible tool
deciding arbitrary problems located second level polynomial hierarchy (Leone, Pfeifer,
Faber, Eiter, Gottlob, Perri, & Scarcello, 2006).

508

fiComplexity Judgment Aggregation

judgment set replaced goal finding procedure returning
inconsistent set highly unlikely. (negative) result obtained framework
however extend range available procedures significant way. Second,
Slavkovik Jamroga (2011) extend standard JA framework weights (to model
differences influence individuals) provide upper bound complexity
winner determination problem family distance-based aggregation procedures.
Third, Baumeister et al. (2011) provide first study computational complexity
bribery problem JA, asking whether possible obtain desired outcome
k individual agents bribed change judgment set. Finally, Baumeister
et al. (2012) discuss complexity various forms controlling judgment aggregation
processes, e.g., influencing outcome adding removing judges.
clearest example work explores integration ideas JA ideas
coming field traditionally studied AI recent work connections
JA abstract argumentation frameworks (Rahwan & Tohme, 2010; Caminada & Pigozzi,
2011): problem commonly studied abstract argumentation decide
ones set arguments mutually attack accept, reject,
remain undecided. Rahwan Tohme (2010) study variant
problem group agents decide status award argument,
problem naturally lends viewed lens JA. related work,
Caminada Pigozzi (2011) proposed approach JA involves translation
abstract argumentation framework, makes tools techniques abstract
argumentation available aggregation judgments.
field research within AI closely related JA belief merging (see, e.g.,
Konieczny & Pino Perez, 2002; Maynard-Zhang & Lehmann, 2003; Chopra et al., 2006;
Everaere et al., 2007). work Konieczny Pino Perez (2002), particular,
inspired distance-based procedure JA used paper. JA belief
merging modelled Konieczny Pino Perez share interesting features, ultimately
study different problems. JA individuals assumed submit consistent judgment sets, belief merging constraint enforced outcome. reflects
view consistency belief merging (modelled terms integrity constraint)
feasibility requirement, JA amounts rationality assumption.

7. Conclusions Future Work
studied computational complexity three problems JA: computing
winning judgment set given aggregation procedure, deciding whether manipulation
would beneficial given agent given aggregation procedure given
profile, deciding safety agenda given class aggregation procedures.
proven several safety theorems link safety simple structural properties
agenda provide interesting counterpart known possibility theorems.
results show that, winner determination problem easy quota rules
premise-based procedure, intractable otherwise attractive distance-based
procedure. Regarding strategic manipulation, seen manipulation NP-hard
premise-based procedure, positive result. seen
quota rules question manipulation complexity arise, least
509

fiEndriss, Grandi, & Porello

model preferences used here. distance-based procedure, investigated
complexity manipulation problem, already winner determination
problem found intractable. work safety agenda,
derived characterisation results wide range procedures, defined terms commonly
used axioms. seen safety guaranteed relatively simple agendas
seen deciding whether simplicity conditions met highly
intractable.
work computational aspects JA far limited small
number interesting scattered contributions, strongly believe JA
taken important research topic AI computational social choice. One
important direction pursue concerns practical algorithms problems studied
paper (as well related problems naturally arising JA). already mentioned
existing work algorithms winner determination problem Kemeny
rule preference aggregation (Conitzer et al., 2006) may provide starting point
working implementation distance-based procedure work QBF solvers
automated reasoning (Narizzano et al., 2006) work Answer Set Programming (Leone
et al., 2006) could prove helpful tackling challenges identified complexity
results regarding safety agenda.
Alongside development practical algorithms, improving understanding
algorithmic aspects JA studying framework parameterised complexity would
great interest. context voting, approach lead number
insightful results (Betzler, 2010). Indeed, JA, initial steps direction already
taken Baumeister et al. (2011).
Studying winner determination problem, complexity-theoretic practical terms, distance-based procedures proposed Miller Osherson (2009)
Lang et al. (2011) constitutes worthwhile direction future work.
Recall analysed manipulation one particular way defining preferences,
namely terms Hamming distance agents true set judgments. Thus,
would interesting investigate extent changing definition manipulation
(by altering notion induced preference) affects complexity result. Indeed,
notions induced preference (and thus manipulation) conceivable. instance,
would-be manipulator might interested status specific propositions (e.g.,
conclusions) might use different notion distance, e.g., one recently
proposed Duddy Piggins (2012).
justified decision study complexity manipulation
problem distance-based procedure fact already much basic
winner determination problem p2 -complete. important question believe
requires discussion research community whether indeed valid argument.
context voting, initial idea Bartholdi et al. (1989) that, say,
NP-hardness result manipulation problem particular voting rule might suggest
rule immune manipulation practice. Recent work strongly
suggests case (Faliszewski & Procaccia, 2010), kind
NP-hard problems encountered context algorithms perform well practice
relatively easy design (Walsh, 2011). question arises whether
still true hardness results respect higher complexity classes. instance,
510

fiComplexity Judgment Aggregation

conceivable possible design algorithms efficiently solve
typical instances winner determination problem distance-based procedure,
might turn much difficult design similarly successful algorithm
corresponding manipulation problem. is, question arises whether hardnessof-manipulation studies need restricted problems winner determination
polynomial, whether jump complexity desirable principle might
provide level protection practice.
Regarding safety agenda, given results natural combinations axioms correspond weakening majority rule, similar study
could conducted combinations axioms. Indeed, would interesting
explore robust p2 -completeness results are. is, open question suggests
whether exists interesting relevant class aggregation procedures
safety problem falls different complexity class.
Generally speaking, believe much work exploring obvious potential
JA AI multiagent systems needed. lead practical advances
definition interesting new theoretical problems. steps direction
recently taken Slavkovik (2012), concerning modelling collective decision
making multiagent systems, Caminada Pigozzi (2011) Rahwan
Tohme (2010), concerning applications JA abstract argumentation.

Acknowledgments
paper builds earlier work complexity judgment aggregation presented
AAMAS-2010 (Endriss et al., 2010a) COMSOC-2010 (Endriss et al., 2010b).
would thank reviewers members audiences meetings, three
reviewers Journal Artificial Intelligence Research, attendees workshop seminar talks given topic Amsterdam, Barcelona, Chongqing,
Luxembourg, Moscow, New Delhi, Padova, Paris, Pisa, Tilburg many helpful
suggestions received.

References
Arora, S., & Barak, B. (2009). Computational Complexity: Modern Approach. Cambridge
University Press.
Bartholdi, J. J., Tovey, C. A., & Trick, M. A. (1989). computational difficulty
manipulating election. Social Choice Welfare, 6 (3), 227241.
Baumeister, D., Erdelyi, G., Erdelyi, O. J., & Rothe, J. (2012). Control judgment aggregation. Proceedings 6th Starting AI Researchers Symposium (STAIRS-2012).
IOS Press.
Baumeister, D., Erdelyi, G., & Rothe, J. (2011). hard bribe judges?
study complexity bribery judgment aggregation. Proceedings
2nd International Conference Algorithmic Decision Theory (ADT-2011). SpringerVerlag.
511

fiEndriss, Grandi, & Porello

Betzler, N. (2010). Multivariate Complexity Analysis Voting Problems. Ph.D. thesis,
University Jena.
Brandt, F., Conitzer, V., & Endriss, U. (2012). Computational social choice. Weiss, G.
(Ed.), Multiagent Systems. MIT Press. press.
Caminada, M., & Pigozzi, G. (2011). judgment aggregation abstract argumentation.
Autonomous Agents Multi-Agent Systems, 22 (1), 64102.
Chevaleyre, Y., Endriss, U., Lang, J., & Maudet, N. (2007). short introduction computational social choice. Proceedings 33rd Conference Current Trends
Theory Practice Computer Science (SOFSEM-2007). Springer-Verlag.
Chopra, S., Ghose, A., & Meyer, T. (2006). Social choice theory, belief merging,
strategy-proofness. Information Fusion, 7 (1), 6179.
Conitzer, V., Davenport, A. J., & Kalagnanam, J. (2006). Improved bounds computing Kemeny rankings. Proceedings 21st National Conference Artificial
Intelligence (AAAI-2006).
Dietrich, F. (2007). generalised model judgment aggregation. Social Choice
Welfare, 28 (4), 529565.
Dietrich, F., & List, C. (2007a). Judgment aggregation quota rules: Majority voting
generalized. Journal Theoretical Politics, 19 (4), 391424.
Dietrich, F., & List, C. (2007b). Arrows theorem judgment aggregation. Social Choice
Welfare, 29 (1), 1933.
Dietrich, F., & List, C. (2007c). Strategy-proof judgment aggregation. Economics
Philosophy, 23 (3), 269300.
Dietrich, F., & Mongin, P. (2010). premiss-based approach judgment aggregation.
Journal Economic Theory, 145, 562582.
Dokow, E., & Holzman, R. (2010). Aggregation binary evaluations. Journal Economic
Theory, 145 (2), 495511.
Duddy, C., & Piggins, A. (2012). measure distance judgment sets. Social
Choice Welfare, 39 (4), 855867.
Endriss, U., Grandi, U., & Porello, D. (2010a). Complexity judgment aggregation: Safety
agenda. Proceedings 9th International Conference Autonomous
Agents Multiagent Systems (AAMAS-2010).
Endriss, U., Grandi, U., & Porello, D. (2010b). Complexity winner determination
strategic manipulation judgment aggregation. Proceedings 3rd International Workshop Computational Social Choice (COMSOC-2010).
Everaere, P., Konieczny, S., & Marquis, P. (2007). strategy-proofness landscape
merging. Journal Artificial Intelligence Research (JAIR), 28 (1), 49105.
Faliszewski, P., & Procaccia, A. D. (2010). AIs war manipulation: winning?. AI
Magazine, 31 (4), 5364.
Gaertner, W. (2006). Primer Social Choice Theory. LSE Perspectives Economic
Analysis. Oxford University Press.
512

fiComplexity Judgment Aggregation

Grandi, U., & Endriss, U. (2011). Binary aggregation integrity constraints. Proceedings 22nd International Joint Conference Artificial Intelligence (IJCAI2011).
Grossi, D. (2009). Unifying preference judgment aggregation.. Proceedings 8th
International Conference Autonomous Agents Multiagent Systems (AAMAS2009).
Hemachandra, L. A. (1989). strong exponential hierarchy collapses. Journal Computer System Sciences, 39 (3), 299322.
Hemaspaandra, E., Hemaspaandra, L. A., & Rothe, J. (1997). Exact analysis Dodgson
elections: Lewis Carrolls 1876 system complete parallel access NP. Journal
ACM, 44 (6), 806825.
Hemaspaandra, E., Hemaspaandra, L. A., & Menton, C. (2012). Search versus decision
election manipulation problems. Tech. rep. URCS-TR-2012-971, University
Rochester, Computer Science Department.
Hemaspaandra, E., Spakowski, H., & Vogel, J. (2005). complexity Kemeny elections.
Theoretical Computer Science, 349 (3), 382391.
Kemeny, J. (1959). Mathematics without numbers. Daedalus, 88 (4), 577591.
Konieczny, S., & Pino Perez, R. (2002). Merging information constraints: logical
framework. Journal Logic Computation, 12 (5), 773808.
Kornhauser, L. A., & Sager, L. G. (1993). one many: Adjudication collegial
courts. California Law Review, 81 (1), 159.
Lang, J., Pigozzi, G., Slavkovik, M., & van der Torre, L. (2011). Judgment aggregation
rules based minimization. Proceedings 13th Conference Theoretical
Aspects Rationality Knowledge (TARK-XIII).
Leone, N., Pfeifer, G., Faber, W., Eiter, T., Gottlob, G., Perri, S., & Scarcello, F. (2006).
DLV system knowledge representation reasoning. ACM Transactions
Computational Logic, 7 (3), 499562.
List, C., & Pettit, P. (2002). Aggregating sets judgments: impossibility result. Economics Philosophy, 18 (1), 89110.
List, C., & Puppe, C. (2009). Judgment aggregation: survey. Handbook Rational
Social Choice. Oxford University Press.
Maynard-Zhang, P., & Lehmann, D. J. (2003). Representing aggregating conflicting
beliefs. Journal Artificial Intelligence Research (JAIR), 19, 155203.
Meyer, A. R., & Stockmeyer, L. J. (1972). equivalence problem regular expressions
squaring requires exponential space. Proceedings 13th Annual Symposium Switching Automata Theory (SWAT/FOCS-1972). IEEE Computer
Society.
Miller, M., & Osherson, D. (2009). Methods distance-based judgment aggregation. Social
Choice Welfare, 32 (4), 575601.
513

fiEndriss, Grandi, & Porello

Narizzano, M., Pulina, L., & Tacchella, A. (2006). QBFEVAL web portal. Proceedings 10th European Conference Logics Artificial Intelligence (JELIA2006). Springer-Verlag.
Nehama, I. (2010). Approximate judgment aggregation. Proceedings 3rd International Workshop Computational Social Choice (COMSOC-2010).
Nehring, K., & Puppe, C. (2007). structure strategy-proof social choice. Part I: General characterization possibility results median spaces. Journal Economic
Theory, 135 (1), 269305.
Nehring, K., & Puppe, C. (2010). Abstract Arrowian aggregation. Journal Economic
Theory, 145 (2), 467494.
Papadimitriou, C. H. (1981). complexity integer programming. Journal
ACM, 28 (4), 765768.
Papadimitriou, C. H. (1994). Computational Complexity. Addison Wesley.
Pettit, P. (2001). Deliberative democracy discursive dilemma. Philosophical Issues,
11 (1), 268299.
Pigozzi, G. (2006). Belief merging discursive dilemma. Synthese, 152 (2), 285298.
Porello, D. (2010). Ranking judgments Arrows setting. Synthese, 173 (2), 199210.
Rahwan, I., & Tohme, F. (2010). Collective argument evaluation judgement aggregation. Proceedings 9th International Conference Autonomous Agents
Multiagent Systems (AAMAS-2010).
Rothe, J., Spakowski, H., & Vogel, J. (2003). Exact complexity winner problem
Young elections. Theoretical Computer Science, 63 (4), 375386.
Slavkovik, M. (2012). Judgment Aggregation Multiagent Systems. Ph.D. thesis, University Luxembourg.
Slavkovik, M., & Jamroga, W. (2011). Distance-based judgment aggregation three-valued
judgments weights. Proceedings IJCAI-2011 Workshop Social Choice
Artificial Intelligence.
Stockmeyer, L. J. (1976). polynomial-time hierarchy. Theoretical Computer Science,
3 (1), 122.
Wagner, K. W. (1987). complicated questions maxima minima,
closures NP. Theoretical Computer Science, 51 (12), 5380.
Walsh, T. (2011). hard manipulation problems?. Journal Artificial Intelligence Research (JAIR), 42, 129.

514


