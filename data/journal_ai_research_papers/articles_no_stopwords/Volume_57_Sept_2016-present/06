journal artificial intelligence

submitted published

effective heuristics suboptimal best first search
christopher wilt
wheeler ruml

wilt cs unh edu
ruml cs unh edu

department computer science
university hampshire
durham nh usa

abstract
suboptimal heuristic search weighted greedy best first search
widely used solve guaranteed optimal solutions expensive
obtain crucially rely heuristic function guide search
however building heuristics addresses optimal solving
illustrate established wisdom constructing heuristics optimal search fail
considering suboptimal search consider behavior greedy best first search
detail test several hypotheses predicting heuristic effective
suggest predictive characteristic heuristics goal distance rank
correlation gdrc robust measure whether orders nodes according distance
goal demonstrate gdrc used automatically construct abstractionbased heuristics greedy best first search effective built
methods oriented toward optimal search reinforce point suboptimal
search deserves sustained attention specialized methods

introduction
best first search expands nodes order f n f n g n h n
optimal solutions provided hart nilsson raphael
desirable time memory often prevent application fails
insufficient time memory practitioners sometimes turn bounded
suboptimal may return optimal solution return solution
guaranteed certain factor expensive optimal
solution
well known likely weighted pohl best first
search expands nodes f order f n g n w h n w variants
weighted used wide variety applications including domain independent
helmert richter westphal robotics likhachev gordon
thrun likhachev ferguson weighted component number
anytime example anytime restarting weighted richter thayer
ruml anytime repairing likhachev et al use weighted
anytime nonparametric van den berg shah huang goldberg doesnt use
weighted per se rather limiting case greedy best first search doran michie
best first search h n anytime built implicit
assumption weighted high weight greedy best first search
solution faster weighted small weight
c

ai access foundation rights reserved

fiwilt ruml

many popular heuristic search benchmark domains e g sliding tile puzzles grid path
towers hanoi topspin robot motion traveling salesman
increasing weight lead faster search weight becomes
large weighted expansion order greedy best first search
fastest search first contribution provide illustrations
domains greedy best first search performs worse weighted
sometimes even worse
failure greedy best first search merely mathematical curiosity occurring hand crafted counterexamples rather phenomenon
occur real domains including variants popular single agent heuristic benchmarks
second contribution empirically characterize conditions occurs knowledge
important anyone suboptimal search important first step
predictive theoretical understanding behavior suboptimal heuristic search
root cause failure greedy best first search ultimately traced back
heuristic used guide greedy best first search goal
number well documented techniques constructing effective heuristic
revisit guidelines context greedy best first search third contribution
one follows well established guidelines creating quality heuristic
poor present several examples following wisdom
constructing heuristic leads slower greedy best first search use
examples understand requirements greedy best first search places
heuristic
fourth contribution quantitative metric assessing greedy heuristic goal
distance rank correlation gdrc gdrc used predict whether greedy
best first search likely perform well gdrc used compare different
heuristics domain allowing us make informed decisions
heuristic select variety choices case abstraction
heuristics pattern databases quantitative metric used automatically
construct heuristic greedy best first search iteratively refining abstraction
measuring good candidate heuristic iteratively refining
abstraction simple hill climbing search guided gdrc yield heuristics
powerful built traditional methods oriented toward optimal search
work increases understanding greedy best first search one popular scaleable heuristic search techniques generally suggests techniques
developed optimal search necessarily appropriate suboptimal search suboptimal search markedly different optimal search deserves theory
methods

conundrum ineffective weighted
starting point investigation heuristics suboptional search begins
curious empirical observation although weighted one popular way
speeding heuristic search increasing weight weighted work
order get better grasp question increasing weight ineffective
first need empirical data


fieffective heuristics suboptimal best first search

domain
dynamic robot
hanoi
pancake
tiles unit
grid
topspin
topspin
tiles inverse
city navigation
city navigation
city navigation

average solution
length












total
states












branching
factor












unit cost

yes
yes
yes
yes
yes
yes





table domain attributes benchmark domains considered
benchmark domains
consider six standard benchmark domains sliding tile puzzle towers hanoi
puzzle grid path pancake topspin dynamic robot navigation
selected domains represent wide variety interesting heuristic
search features branching factor state space size solution length since
would compare forced use somewhat smaller puzzles
possible solve state art suboptimal searches requirement
size solvable weighted greedy best first search
main memory eight gigabytes basic statistics domain variants
summarized table
sliding tile puzzle used random instances manhattan
distance heuristic used puzzle rather puzzle two reasons first
optimally solving puzzles without running memory requires significant
resources least gigabytes significantly eight gigabyte limit according
burns et al addition consider sliding tile puzzle non unit
cost functions non unit significantly difficult solve
unit cost variants non unit version sliding tile puzzle consider uses inverse
cost function cost moving tile n n manhattan distance heuristic
weighted appropriately admissible consistent cost function
towers hanoi considered disk peg used two disjoint pattern
databases one bottom disks one top two disks korf felner
pancake used gap heuristic helmert grid path
used maps x cells cells blocked
manhattan distance heuristic four way movement topspin puzzle objective
sort circular permutation iteratively reversing continuous subsequence fixed
size example topspin puzzle figure considered
disks turnstile would turn three four disks denoted topspin
topspin heuristic used pattern database contiguous disks present


fiwilt ruml

figure disk topspin puzzle
remaining disks abstracted dynamic robot navigation used
x world headings speeds dynamic robot navigation objective
navigate robot one location heading another location heading
respecting dynamics robot robot able change direction speed
instantaneously combinations heading speed reached given
state addition states domain represent dead ends example
state robot moving full speed directly towards obstacle produce
children robot crash matter control action applied
objective minimize total travel time actions cost
introduce domain call city navigation designed simulate navigation
system similar american interstate highways air transportation networks
domain cities scattered randomly x square connected random
tour guarantees possible get city city city
connected nc nearest neighbors links cities cost euclidean distance
city contains collection locations randomly scattered throughout city
x square locations city connected random tour
place connected nearest np places links places cost true distance
multiplied random number within city special
nexus node contains connections city goal navigate
randomly selected start location randomly selected end location example
might want go location city location city citys nexus
node location reach goal example must navigate
location location city path city city path
location city location city example instance type
seen figure circles left part figure locations connected
locations nexus node location connected nexus nodes neighboring


fieffective heuristics suboptimal best first search

figure city navigation np nc cities locations
city

cities right part figure shows entire world cities shrunk
circle
city navigation instances classified np nc consider varying
numbers connections cities places city since
location within city global position heuristic direct euclidean distance
domain solutions vary length straightforward manipulate accuracy
heuristic domain bears similarity ipc logistics domain
locations within cities connected roads special airport locations used
travel cities

figures number expansions required greedy best first search
weighted weights plots allow us compare
greedy best first search weighted determine whether increasing
weight speeds search slows search
looking plots figure easy see increase weight
number expansions goes figure opposite true
domains increasing weight initially speeds search relaxed weighted
weighted transforms greedy best first search number nodes
required solve increases two domains topspin turnstile
size city navigation number nodes expanded greedy best first search
higher number nodes expanded explaining phenomenon central
goal


fiwilt ruml



















g

g

dynamic robot

g

topspin

unit tile

e



total nodes expanded



total nodes expanded

total nodes expanded

total nodes expanded

total nodes expanded

total nodes expanded

e

pancake

grid navigation

disk hanoi









g





g



g

figure domains increasing weight speeds search numbers denote weighted
run specific weight g denotes greedy best first search

characteristics effective heuristics
established increasing weight weighted speed
search situations actually slow search fact
sometimes faster greedy best first search sometimes slower greedy best first
search suggests heuristics work well poorly greedy best first search
heuristics work well greedy best first search thus
question precisely driving difference greedy
best first search needs heuristic
first review literature suggestions make good heuristic
mind apply rules constructing effective heuristic
greedy best first search leads us observations effective heuristics greedy
best first search distinct common recommendations building good
heuristic
effective heuristics
much literature constitutes good heuristic centers well
heuristic works finding optimal solutions first important


fieffective heuristics suboptimal best first search

inverse tile

topspin

total nodes expanded

total nodes expanded













g

g
city navigation

city navigation



total nodes expanded

total nodes expanded















g



g

figure domains increasing weight slows search numbers denote
weighted specified weight g denotes greedy best first search

requirement heuristic admissible meaning nodes n h n true
cheapest path n goal greater equal h n heuristic
admissible degenerates star guaranteed shortest
path
generally believed consistency important due fact inadmissible heuristics lead exponential number expansions martelli
situation however rarely arises practice felner et al argue
inconsistency generally much generally believed
widespread rule making good heuristic dominance good nilsson pearl heuristic h said dominate h n g h n h n
makes sense due admissibility larger values closer h furthermore
must expand every node n encounters f n less cost optimal
solution large h often reduces expansions dominance represents current gold standard comparing two heuristics practice heuristics often informally evaluated


fiwilt ruml

average value value initial state benchmark set
case general idea remains bigger heuristics better
ignore effects tie breaking well effects duplicate states
last iteration ida expand number nodes allows us apply
formula korf reid edelkamp predict number nodes
ida expand cost bound c
e n c p

c
x

ni p c



function p h kre equation represents equilibrium heuristic distribution
probability node chosen randomly uniformly among nodes
given depth brute force search tree heuristic value less equal h korf
et al quantity tends decrease h gets larger depending nodes
space distributed dominance relation transfers kre equation
meaning heuristic h dominates different heuristic h kre equations predicts
expected expansions h less equal expected expansions
h
considering pattern database pdb heuristics korfs conjecture lend

insight performance ida tells us expect log
n
amount memory pdb question takes amount time
expect ida search consume n constant korf willing
apply regarding ida equation tells us expect larger
pattern databases provide faster search summarize prevailing wisdom
regarding heuristics bigger better terms average heuristic value
pattern database size
behavior greedy best first search
shall see advice regarding heuristics helpful considering
happens apply wisdom greedy best first search answer
question taking detailed look behavior greedy best first search three
benchmark towers hanoi topspin puzzle sliding tile
puzzle
towers hanoi
first domain consider towers hanoi successful heuristic
optimally solving peg towers hanoi disjoint pattern databases korf
felner disjoint pattern databases boost heuristic value providing information
disks top puzzle example consider disk puzzle split
two disjoint pattern databases eight disks bottom pattern database four disks
top pattern database best achieved full
disjoint pattern database greedy best first search however faster search
use disjoint pattern database instead use disk pattern database
exact numbers presented unit rows table randomly
generated towers hanoi states goal get disks onto first peg


fieffective heuristics suboptimal best first search

cost
unit
square
rev square

heuristic
pdb
pdb
pdb
pdb
pdb
pdb

exp







greedy exp







table average number nodes expanded solve disk towers hanoi








minimum h

minimum h



















expansions








expansions

figure minimum h value open search progresses different pattern
databases single left two disjoint additive ones right

theory corroborates empirical evidence observed disjoint pattern database dominates single pattern database absent unusual effects tiebreaking surprise disjoint pattern database faster search
reason different behaviour greedy best first search simple
greedy best first search single pattern database possible follow heuristic
directly goal h value head open list monotonically decrease
see note every combination bottom disks h value possible
arrangements disks top share h value disks top
moved around independently bottom disks consequently
possible arrange top disks next move bottom disks
done disturbing bottom disks thus leaving h constant eventually
h decreases progress made putting bottom disks
order process repeats h point greedy best first search simply
considers possible configurations top disks goal found
phenomenon seen left pane figure minimum h value
open list monotonically decreases number expansions search done


fiwilt ruml

h

h
figure two towers hanoi states one near goal top one far goal
bottom

increases heuristic created single pattern database creates extremely effective
gradient greedy best first search follow two reasons first
local minima global minimum goal context define
minimum region space n every path n goal node
least one node n h n h n second exactly states associated
configuration bottom disks means every expansions h
guaranteed decrease practice state lower h tends found much faster
right pane figure heuristic disjoint pattern database see
h value head open list fluctuates substantially disjoint
pattern database indicating greedy best first searchs policy follow small h much
less successful states bottom disks near goal
paired poor arrangement disks top assigned large heuristic
values delays expansion nodes illustrated figure top
state significantly closer goal despite higher h value bottom state
ignore top disks completely top state h compared bottom
states h correctly conveys fact top state significantly closer
goal disjoint pdb causes substantial confusion greedy best first search
prior making progress bottom disks greedy best first search
considers states top disks closer destination bottom state
expanded produce children lower heuristic values explored
ever considering top state state explored first eventually
descendants bottom state h explored point top state
expanded causes h value head open list go
summarize disjoint pattern database makes gradient difficult
greedy best first search follow nodes small h one
reason near goal bottom pattern database returning small value
particularly near goal top disks arranged target peg
suggests following observation regarding heuristics greedy best first search


fieffective heuristics suboptimal best first search

observation else equal greedy best first search tends work well
possible reach goal every node via path h monotonically decreases along
path
may seem self evident example illustrated conflicts
common wisdom heuristic construction important note observation
makes comment relative magnitude heuristic greedy best first
completely irrelevant matters relative ordering nodes ordered
heuristic
another way view phenomenon analogy sussman anomaly sussman
sussman anomaly occurs one must undo subgoal prior able
reach global goal context towers hanoi goal get
disks target peg solving may involve
undoing subgoals putting top disks target peg presence top
pattern database encourages greedy best first searches privilege states subgoals
eventually undone accomplished
korf discusses different kinds subgoals different kinds heuristic
searches able leverage subgoals greedy best first search uses heuristic create
subgoals attempting follow h goal example unit cost domain first
subgoal node h h root heuristic follows observation
subgoals form perfect serialization subgoals achieved one another
heuristic deviates observation subgoals induced heuristic cannot
serialized
another important factor course number distinct nodes heuristic
level one encounters prior finding better node consider example one worst
heuristics h technically heuristic follows observation paths
contain nodes h one plateau contains nodes entire space
obviously undesirable hoffmann discusses general idea term maximal
bench exit distance idea domains quantity
small greedy best first search enforced hill climbing method perform well
finding nodes lower h straightforward
effects exacerbated cost disks top increased relative
cost disks bottom define cost moving disk
proportional disks size get square cost metric cost moving disk
n n could imagine tower stacked reverse requiring larger
disks top smaller disks case get reverse square cost
function case expect number expansions greedy best first
search require lower bottom pattern database
indeed effect observe table however top disks heavier disks
bottom greedy best first search suffers even considered unit
cost expanding order magnitude nodes pattern
database information top disks returning values substantially
larger bottom pattern database due fact top pattern database
considers expensive operators situation reversed however top
pattern database uses lowest cost operators top pattern databases contribution
h much smaller proportion total expansions since greedy best first search


fiwilt ruml





greedy search disjoint pdb

greedy search disjoint pdb










minimum h

minimum h






















expansions













expansions







figure minimum h value open searches disjoint pattern databases
different cost functions square left reverse square right

performs best top pattern database isnt even present naturally performs better
contribution top pattern database smaller
phenomenon vividly illustrated execution times figure left
figure disks top pattern database much cheaper move disks
bottom pattern database therefore contributing much smaller proportion
total value h right part figure disks top pattern database
much expensive move disks bottom pattern database
top pattern database makes much larger contribution h causing substantially
confusion
hoffmann notes success heuristic many domains attributable fact h heuristic produces heuristic local minima
heuristic local minima precisely matches observation
possible reach goal via path h monotonically decreases
topspin
considered topspin disks turnstile flipped disks pattern
databases contained total disks
korfs conjecture predicts larger pattern databases useful
therefore considered stronger heuristics indeed pdb
becomes larger number expansions done dramatically decreases
seen figure box plot tukey labeled g greedy
best first search number denoting number disks pdb tracks
box denotes middle data top box upper quartile
bottom box bottom quartile height box interquartile
range horizontal line middle box represents median grey stripe
indicates confidence interval mean circles denote points
times interquartile range away first quartile third


fieffective heuristics suboptimal best first search

topspin different pdb

expansions





g g g g

figure topspin puzzle different heuristics followed number denotes
number disks pdb heuristic g followed number denotes
greedy best first search number disks pdb heuristic

quartile whiskers represent range non outlier data move left
right pdb heuristic tracks disks gets substantially better
reductions greedy best first search terms expansions gains
nowhere near impressive compared
reason greedy best first search perform better given larger
heuristic larger heuristic states h may still quite far
goal example consider topspin state represented follows denotes
abstracted disk
state
turnstile swaps orientation disks configurations
putting abstracted disks order requires moving disk abstracted
state
topspin state abstraction process takes largest n disks converts
abstracted disks abstracted disks treated state would
abstracted state means abstracts state goal making
heuristic wanted expand state could one children
state whose heuristic still
state
consider different child example child obtained rotating middle disks


fiwilt ruml

state
abstracts
state
heuristic state state abstracts state state
abstract state different state abstracted goal heuristic state

abstract disks still abstract state heuristic
still moving disk abstracted increase heuristic moving
abstracted disks leave heuristic unfortunately transforming state
goal cannot done without moving least one disks whose index
turnstile size
means subgraph consisting nodes h topspin
disconnected thus greedy best first search encounters state h
state could h state connected goal via h states
would desirable state could h state connected goal via
paths contain least one h nodes would undesirable case
greedy best first search first expand h nodes connected first h
node hypothesis connected goal node via paths containing h
nodes return expanding nodes h looking different
h node
abstraction controls number size h regions example
abstract disks two strongly connected regions h nodes containing
nodes instead abstract disks strongly connected h regions
nodes heuristic abstracts disks chance
given h node connected goal via h nodes greedy
best first search entered correct h region finding goal node largely
chance heuristic abstracts disks probability given h
node connected goal via h nodes lower correct h region
found however much easier goal region contains
nodes compared nodes empirically see two effects roughly
cancel one another total number expansions done greedy best first
search remains roughly constant matter heuristic used brings us
next observation
observation else equal nodes h connected goal nodes
via paths contain h nodes
one view important specific case observation interestingly types
heuristics delete relaxation heuristics used domain independent
obey observation implicitly never allowing non goal states h values
one obvious way make heuristic satisfy recommendation change
heuristic non goal states minimum cost operator
domain cost simply restate recommendation substituting
arrive similar


fieffective heuristics suboptimal best first search































figure different tile abstractions denotes tile abstracted
abstraction
outer l figure left
checker figure right
outer l missing
outer l missing
instance specific
gdrc generated
average tile pdb
worst tile pdb

greedy exp









exp


dnf
dnf





table average number expansions required greedy best first search solve
tile instances different pattern databases dnf denotes least one
instance would require gb solve

sliding tiles
sliding tile puzzle one commonly used benchmark domains heuristic
search domain one best understood pattern database heuristics
shown strongest heuristics domain strongest
heuristics quite time korf taylor felner korf meshulam holte
use puzzle case study smaller size puzzle
allows creating testing hundreds different pattern databases central
constructing pattern database sliding tile puzzle selecting good abstraction
abstraction keeps outer l shown left part figure
extremely effective greedy best first search greedy best first search
put abstracted tiles proper places remains goal
easy even completely uninformed search remaining puzzle
states h h states form connected subgraph
analogous heuristic directing search follow process outlined
parberry large sliding tile puzzles solved first solving outer l
treating remaining smaller sliding tile puzzle
compare happens greedy best first search run checkerboard
abstraction shown right part figure greedy best first search identified node h high chance remaining abstracted tiles
configured properly least one non abstracted tiles
moved effect seen table average number expansions required comparable abstraction average number expansions
required greedy best first search larger two orders magnitude


fiwilt ruml

sheer size pdb important greedy best first search
table see weaken pattern database removing
tiles number expansions required increases factor greedy best first
search pdb tile missing instances unsolvable within
gb memory approximately million nodes java implementation
tile missing unable solve instances within limit
worth noting even without tile outer l abstraction still effective
greedy best first search compared checkerboard abstraction
underlying reason behind inefficiency greedy best first search certain
pattern databases fact less useful pattern databases nodes h
nowhere near goal provides evidence favor observation
greedy best first search concentrates efforts finding expanding nodes low h
value nodes reality near goal clearly causes
uses f g contributes f able eliminate
states consideration expand high g value helps give
node high f value causes relegate node back expansion
queue
checkerboard pattern database helps make clear another facing
greedy best first search heuristics discovers node h
node connected goal via h nodes eventually run
h nodes expand begin expanding nodes h expanding
h nodes greedy best first search h nodes examine goals
eventually exhaust h nodes well forced consider h
nodes natural question ask far back
able goal leads us next observation

observation else equal greedy best first search tends work well
difference minimum h value nodes local minimum minimum
h allow search escape local minimum reach goal low

phenomenon clearly illustrated considering instance specific pattern databases
holte grajkowskic tanner instance specific pattern database tiles
start closest goals abstracted first leaving tiles furthest
away goals represented pattern database helps maximize
heuristic values states near root due consistency
undesirable side effect making states required included path goal
high heuristic values well raising heuristic value initial state helpful
search evidenced reduction number expansions instancespecific abstractions size shown table unfortunately
still powerful greedy best first search simpler outer l abstraction even
smaller variant missing instance specific pattern databases
use patterns difficult greedy best first search use effectively similar
encountered checkerboard abstraction


fieffective heuristics suboptimal best first search

domain

greedy
works

greedy
fails

towers hanoi
grid
pancake
dynamic robot
unit tiles
topspin
topspin
inverse tiles
city nav
city nav

heuristic
error











h n h n
correlation
pearson











h n h n
correlation
spearman











h n h n
correlation
kendall











table average error correlation h n h n

predicting effectiveness greedy heuristics
previous section saw common wisdom regarding effective heuristics
optimal search carry suboptimal search instead examples motivated
three general observations regarding greedy best first search looks heuristic
qualitative observations perhaps helpful heuristics heuristic design
useful simple quantitative metric evaluating comparing heuristics
begin considering two intuitively reasonable quantitative metrics percent
error h correlation h h metrics
metric cannot used predict whether greedy best first search perform
worse weighted consider measure search distance go called
n h change graph making edges cost
correlation h used predict greedy best first search
perform poorly
percent error h n
first metric consider perhaps intuitive measure heuristic performance
percent error h define percent error heuristic h n h n
since greedy
h n
best first search increases importance heuristic reasonable conclude
heuristic large amount error relying upon heavily greedy best first
search going lead fast search
table average percent error heuristic domains
considered surprisingly average percentage error bears little relation whether
greedy best search poor choice towers hanoi unit tiles topspin
three domains greedy best first search effective much heuristic
error domains greedy best first search works poorly leads us conclude
cannot measure average heuristic percent error use predict whether
increasing weight speed slow search


fiwilt ruml

see intuitively makes sense note greedy best first search really
requires nodes get put h n order heuristic exact magnitude
therefore error heuristic unimportant magnitude huge effect
average percent error seen consider heuristic h n h r n r r
large tiny r guide greedy best first search directly
optimal goal exhibiting arbitrarily high average percent error heuristic
r increases decreases away
h h correlation
next metric consider correlation h h considering
percent error h metric noted greedy best first search run time linear
solution length optimal solution nodes h n order one way
quantify observation measure correlation two values
three different ways
well known correlation coefficient pearsons correlation coefficient r
measures well relationship h n h n modeled linear
function relationship would mean weighting heuristic appropriately
reduce error heuristic could reasonably expected lead faster
search addition relationship h n h n linear function
order preserved putting nodes order h n put nodes order
h n leads effective greedy best first search domain calculated
pearsons correlation coefficient h n h n second
column table
another reasonable way measure heuristic correlation use rank correlation
rank correlation measures well one permutation order respects another permutation order context search use ask similar order one
gets putting nodes h order order one gets putting nodes h order rank
correlation coefficients useful less sensitive outliers able
detect relationships linear
spearmans rank correlation coefficient best known rank correlation coefficient
pearsons r ranked variables means smallest n heuristic
values mapped largest n heuristic values mapped n done
h h point simply calculate persons r rankings
context greedy best first search spearmans rank correlation coefficient high
means h n h n put nodes close order expanding
nodes h n order leads greedy best first search running time linear solution
length reasonable conclude strong spearmans rank correlation coefficient
h n h n would lead effective greedy best first search domain
calculate spearmans rank correlation coefficient h n h n
third column table
natural metric measuring relationship achieved kendalls
kendalls another rank correlation coefficient measures amount
concordance two rankings concordance rankings two
elements agree context greedy best first search concordant pair pair


fieffective heuristics suboptimal best first search

nodes h n h n h n h n h n h n h n h n
kendalls proportion pairwise comparisons concordant h puts nodes
h order pairwise comparisons concordant kendalls h puts
nodes reverse h order comparisons discordant kendalls
sorting nodes h puts nodes random order expect half comparisons
concordant half comparisons discordant
kendalls understood context bubble sort kendall distance
number swaps bubble sort would order change one list
case number swaps bubble sort would rearranging list
nodes sorted h list sorted h kendalls calculated normalizing
kendall distance done dividing n n
since rank correlation coefficients related argue
natural statistic consider question given open list containing n
nodes likely node smallest h front open
list given nodes ordered h use predict node
average middle list h h completely unrelated closer
front open list stronger h h correlation reason
assume nodes open list random selection nodes tells us often
random comparison correct use therefore predict far back node
minimum h natural interpretation making natural
statistic worth nothing generally related one another one
used predict gibbons relationship means practice
generally possible use metric
returning table lead us reject correlation h h
metric predicting well greedy best first search work three correlation
coefficients examples domains greedy best first search fails high
h n h n correlations examples domains greedy best first search works well
poor h n h n correlations example topspin kendalls
lower inverse tiles city navigation
consider
h correlation
strategy greedy best first search discover goal quickly expanding nodes
small h n values nodes small h n far away goal reasonable
believe greedy best first search would perform poorly denote n count
edges node n nearest goal distance measured summing
cost edges path rather counting edges path
n equivalent h n modify graph edges cost looking
plot h n vs h n left half figure see city navigation
reasonable relationship h n h n nodes low
h n tend small h n values denote distance nearest goal terms
malte helmert noted personal communication kendalls described ideal metric
use sequences contain ties integer valued heuristics especially ties may common
one way account ties rankings use kendalls b statistic kendall gibbons
instead known kendalls b accounts ties rankings



fiwilt ruml

h vs h city navigation

h vs city navigation






h













h





h

figure plot h n vs h n h n vs n city navigation
domain

greedy
works

greedy
fails

towers hanoi
grid
pancake
dynamic robot
unit tiles
topspin
topspin
inverse tiles
city nav
city nav

h n n
correlation
pearson











h n n
correlation
spearman











h n n
correlation
kendall











table correlation h n n

number edges state space graph n right half figure shows
plot h n vs n clearly see city navigation domain
almost relationship h n n meaning nodes receive small
h n value found distance away goal could explain greedy
best first search works poorly domain despite fact h n h n
closely related
nodes small h n values likely small n values
nodes therefore close goal terms expansions away expanding nodes
small h n values quickly lead goal converse reasonable nodes
small h n value uniform distribution n values thus many
nodes far away goal terms expansions away expanding nodes
quickly lead goal


fieffective heuristics suboptimal best first search




log expansions


















gdrc









figure average log expansions done greedy best first search different heuristics plotted according gdrc

domain quantify concept calculating pearsons correlation coefficient spearmans rank correlation coefficient kendalls n h n
looking table see kendalls pearsons r finally
able separate domains greedy best first search performs well domains greedy best first search performs poorly kendalls draw
line approximately used separate domains greedy best first
search works well domains greedy best first search works poorly likewise
pearsons r draw line approximately call type metric
goal distance rank correlation gdrc unless otherwise noted compute
kendalls
correlation n h n connects three observations although
connection mathematical necessity counterexamples constructed
note heuristic obeys observation produce paths h monotonically
decreases goal consider nodes along path goal hypothesis h
monotonically decrease along path consider one nodes goal end
path since h monotonically decreases along path nodes goal end
path low h near end path low
value little else said nodes general restriction improves
heuristics gdrc compared situation nodes low allowed
high h values similar argument used following observation
helps produce heuristic high gdrc
observation discusses nodes local minimum difference h nodes
local minimum nodes edge local minimum assume
order escape local minimum one must go one nodes edge


fiwilt ruml

local minimum know nodes local minimum must higher
nodes edge local minimum know h lower
node local minimum means h ranking incorrectly
orders nodes local minimum compared nodes edge local
minimum clear producing high gdrc nodes local minimum
low get goal high h node relationship
observation gdrc weaker consider personal transportation
example action call taxi might reaching states near goal
one step high cost heuristic recognizes cost action node
correctly high h close goal measured
call taxi path situation clearly causes domains attempting
follow observation believe domains kind attribute practice
quite uncommon example none example domains exhibit trait
comparing heuristics
quantitative metric gdrc used compare different heuristics
domain test effectiveness ran experiments towers hanoi
different disjoint non disjoint pattern databases considered
pattern databases disks well selection pairings pdbs
total number disks less equal pattern database
calculated gdrc heuristic produced pdb figure plot
pdb gdrc pdb x axis average log number
expansions required greedy best first search solve random disk towers hanoi
axis see figure gdrc roughly
greedy best first search performs poorly gdrc increases average
number expansions done greedy best first search decreases suggests
possible use gdrc directly compare heuristics one another
see similar behavior different domain left part figure
dot represents one possible disjoint pattern databases one tile pdb
one tile pdb disjoint sliding tile puzzle inverse costs
axis log average expansions required solve random instances
x axis gdrc since non unit h
calculate correlation h h right part figure
correlation x axis
see gdrc rank correlation h h yield useful
information well greedy best first search likely work
domains tested correlation h neatly predicts
greedy best first search performs worse weighted perfect however
consider heuristic h n h n measure correlation h n
h n perfect relationship h n n heuristic could
arbitrarily poor heuristic approaches truth h n h n correlations
allows weighted scale gracefully greedy best first search
linear run time matter correlation h n n
situation looking solely correlation h n n determine whether













log expansions

log expansions

effective heuristics suboptimal best first search






















gdrc


















gdrc h instead





figure average log expansions done greedy best first search
possible disjoint pdb heuristics plotted gdrc left
correlation h n h n
domain

city nav

heuristic h n h n
error correlation
pearson



h n h n
correlation
spearman


h n n
correlation
pearson


h n n
correlation
spearman


table average error correlation h n h n correlation
h n n city nav

greedy best first search faster weighted may produce incorrect
answer
seen city navigation domain city navigation similar
city navigation consider except cities places
better connected allowing direct routes taken since routes direct
thus shorter heuristic accurate table shows correlations
percent error h n city navigation figure shows increase
weight despite weak correlation h n n catastrophe
greedy best first search expands roughly number nodes weighted
best weight speed occurs extreme strength heuristic
correlates h n extremely strong correlation
next question correlation matters h n n clearly perfect
correlation h n h n n h n lead fast greedy best first
search leads us conclusion order greedy best first search
effective nodes small h n get expanded required least one virtue
close goal measured terms remaining search distance
small n close goal measured terms remaining cost small h n


fiwilt ruml

city navigation

total nodes expanded











g

figure expansions done weighted greedy best first search city
navigation

seen empirically two correlations break n correlation allows
greedy best first search survive longer tested domains n h n
greedy best first search well whereas seen domains h n h n correlation high depending correlation metric
used greedy best first search performs poorly
importance correlation h n n reflects importance
node ordering greedy best first search optimal search search cannot terminate
solution found rather solution known optimal
paths pruned larger heuristic values sooner nodes
pruned means optimal search heuristic size paramount importance
bigger better greedy best first search heuristic used guide search
solution relative magnitude heuristic error heuristic bearing
performance search saw considered percent error h
common researchers say heuristic guides search discussion
reveals language reserved suboptimal search
heuristics able satisfy needs greedy best first search
simultaneously example dynamic robot navigation heuristic works extremely well
greedy best first search big therefore good
good differentiating nodes near goal far away goal
helping greedy best first search

building heuristic searching gdrc
shown haslum botea helmert bonet koenig given metric assessing quality heuristic use metric automatically construct effective
abstraction heuristics simply searching space abstractions many domains heuristic constructed initially abstracting everything slowly refining


fieffective heuristics suboptimal best first search

abstraction construct heuristic haslum et al concerned
optimal search hence use pruning power evaluate heuristics focus greedy bestfirst search suggests gdrc might serve useful metric example topspin
begin heuristic abstracts disks consider pdbs
devised abstracting everything except one disk measure gdrc
pattern database gdrc effectively estimated breadth first search
backwards goal used nodes disk establish values
nodes h value looked pattern database sample
nodes generated way used sample calculate estimate kendalls
elected sample nodes sample size taken provided
confidence interval sufficiently small tell better last take pdb
highest value incumbent pdb process repeats pdbs
worse gdrc previous best pdb pdb reached desired
size reason allow possibly terminate early cover case
gdrc decreasing larger pdbs increasing size pdb decreases gdrc
likely increasing size pdb degrade gdrc even
elect terminate full detailed simple
hill climbing search appears effective sophisticated search strategy could certainly
employed instead
topspin
hill climbing pdb builder
alltokens tokens abstracted
remainingtokens allt okens
bestpdb build pdb abstracting allt okens
besttau
function trypdb tokens

pdb build pdb abstracting allt okens tokens

allnodes nodes discovered breadth first search backwards goal state

sample randomly sample nodes allnodes

return calctau sample pdb
bestp db size max allowed size

localbestpdb localbesttau localbesttoken n one bestt au n one

currenttoken remainingt okens

currenttau currentpdb trypdb ref inedt okens token

currentt au localbestt au

set local best variables current

localbestp db none

set best variables local best variables

remainingtokens remainingt okens localbestt okens

else

break
return bestpdb


fiwilt ruml

pdb
contiguous
big operators
random

greedy exp




exp




avg value




table expansions solve topspin stripe cost function different
pdbs

used generate unit cost topspin pattern databases hill climbing gdrc
produced pdbs abstracted disks connected one another
refined disks connected one another prevents abstraction
creating regions h goal nowhere near h nodes per
observation
unit cost topspin abstractions disks connected
one another work well greedy best first search change cost
function moving even disk costs moving odd disk costs get
stripe cost function called costs striped across
effective pdbs keep many odd disks possible moving
odd disks much expensive moving even disk use big
operator pattern database greedy best first search align high
cost odd disks great difficulty escaping resulting local minimum
use hill climbing gdrc build heuristic end contiguous heuristic
keeps abstracted refined disks connected one another table provides
pattern databases solving suite instances see
importance creating good pattern database consider random row
table contains average number expansions different randomly selected
disk pattern databases
towers hanoi
already infer figure greedily select pdb best
collection pdbs would select best one certainly possible
use hill climbing search incrementally construct pdb creating pdb
heuristic towers hanoi one maps full size onto abstracted version
removing disks larger indexing
remaining disks map disks smaller technique
critical component terms performance disks abstracted
define mapping selection disks abstract example
consider disk disk pdb must select total disks
abstract figure glyphs represent randomly selected abstraction
heuristic produced see abstractions produced extremely poor
quality heuristics measured gdrc average number expansions done
greedy best first search solving heuristic heuristics fared
significantly better terms gdrc average expansions greedy best first


fieffective heuristics suboptimal best first search

analysis
heuristics generated different hanoi pdb mappings



log expansions








randomly selected mappings
best mapping
hill climbing mappings





gdrc







figure expansions different towers hanoi pdb abstractions
search examine plot figure see several clusters
heuristics heuristics gdrc clustered together requiring
greedy best first search expand nodes heuristics
worst heuristics largest disk abstracted next cluster heuristics
gdrc require greedy best first search expand
nodes heuristics largest disk abstracted second
largest disk abstracted abstractions produce poor quality heuristics
heuristics represent significant improvement heuristics largest
disk abstracted color figure represents mapping different largest
abstracted disk blue x glyph representing best pattern database
smallest disks abstracted see plot definite overall trend
mappings product heuristics higher gdrc tend fare better overall
terms average total expansions used greedy best first search
hill climbing selected heuristic contained disks
skipping disk example hill climbing selected
heuristic seen green circles line figure starting
abstraction abstracted largest disk hill climbing climbed hill
leading reasonable albeit effective heuristic despite failing
optimal heuristic selected heuristic quite reasonable nonetheless falling
th th percentile overall significant improvement automated
city navigation
addition building pattern database heuristics hill climbing gdrc
possible build portal style heuristic hill climbing gdrc city navigation
domain defined portal heuristic goldenberg felner sturtevant schaeffer
selecting number nodes portal nodes used number nodes


fiwilt ruml

heuristic
random portals
nexus portals
hill climbed portals

average gdrc




average greedy best first search expansions




table expansions gdrc different ways select portal nodes

cities calculating true distance every node closest portal node
heuristic two nodes true distance portals associated
node minus distance node portal event quantity
negative used heuristic highly accurate across long distances uses
true distance portals obviously less accurate comparing
two nodes share portal constructing portal heuristics critical
difference effective portal heuristic poor quality portal heuristic
selection nodes portals allowed automate process
hill climbing gdrc initialized random array nodes
portals step iterates indexes array portals
considering moving location currently serving portal different location
implementation considered two times number cities different
random places assessed grdc heuristic sample
randomly selected pairs places moving city location improved gdrc
kept portal array place otherwise discarded change gdrc
inferior incumbent reach end array restart
beginning reach point position array
aspects array remain unchanged since last time modified index
terminates returning array portals use heuristic
experiment shown table average gdrc gdrc
one obtains selecting random pairs start end nodes calculating
gdrc nodes average greedy best first search expansions average
number expansions needed solve city navigation random start
goal
considered three different methods selecting portal nodes first
completely randomize selection portal nodes unsurprisingly resulted
lowest grdc highest number expansions successful method
selecting portal nodes identify nexus nodes use nodes portals
unsurprisingly method led highest gdrc fewest number expansions
demonstrates usefulness gdrc identifying quality heuristic
greedy best first search last automatic finding portal nodes performed
significantly better random still trailing hand selected portals believe
better search strategy may able better capture potential performance gain
offered high gdrc heuristics


fieffective heuristics suboptimal best first search

sliding tile puzzle
compare gdrc generated pdbs instance specific pdbs sliding
tile puzzle holte et al domain order get accurate estimate
increase number nodes expanded going backwards
following hill climbing procedure selected pattern database
tracked tiles pdb shown table
abstraction strong outer l abstraction fourth best
pdb minimizing average number expansions done greedy best first search
possible tile pattern databases automatically constructed pdb
two orders magnitude faster number expansions one would expect
average tile pdb three orders magnitude faster worst tile
pdb greedy best first search gdrc generated pdb works substantially better
greedy best first search state art instance specific pdbs requiring one
twentieth expansions one additional advantage gdrc generated pdb
instance specific pdbs fact gdrc produces single pdb unlike instance
specific pdbs produce pdb every
summary gdrc useful predicting relative quality
heuristics greedy best first search showed possible leverage
quantitative metric automatically construct heuristic greedy best first search
automatically created heuristics extraordinarily effective greedy best first
search

related work
metric gdrc predicts heuristics high rank correlation
work well general objective h approximate h one alternative way
quality heuristic leverage fact try construct heuristic directly
mimics generally referred indeed generally quite successful
opposed relying exclusively h handily outperforming h many situations wilt
ruml
gaschnig describes predict worst case number nodes expanded
discusses weighting heuristic affect worst case final node
expansion count predictions however two limitations first predictions
assume search space tree graph case many applications
heuristic search addition worst case predictions depend amount
error present heuristic error measured relative deviation h n
criterion makes certain amount sense greedy best first search
seen relative deviation h n cannot used predict greedy
best first search perform poorly gaschnig points increasing weight ad
infinitium may decrease performance precisely phenomenon documented
section
chenoweth davis heuristic rapidly growing logarithmic cluster greedy best first search done polynomial time heuristic
rapidly growing logarithmic cluster every node n h n within logarithmic
factor monotonic function f h n f grows least fast function


fiwilt ruml

g x x aware heuristics proven rapidly growing
logarithmic cluster
number works consider question predicting search performance
korf et al pearl helmert roger although subject attracting
far attention determining many nodes expanded optimal
search saw section behavior optional search general
predict behavior gbrs lelis zilles holte empirical analysis
suboptimal search predicting number nodes would expanded
weighted ida clear methods predict greedy best first search
behavior thus tell us increasing weight far detrimental
korf provides early discussion increasing weight may actually
bad showing recursive best first search iterative deepening used
weight large expansions actually increase early example
exploring weight interacts expansion count something central
work
hoffmann discusses heuristic hoffmann nebel effective way solve many benchmarks used conjunction enforced
hill climbing shows many benchmark heuristic small
bounded size plateaus implying breadth first search part enforced hill climbing bounded means solved quickly sometimes linear time although enforced hill climbing kind greedy best first search
behaviour different greedy best first search promising path turns
local minimum greedy best first search considers nodes search
space possibly allowing disparate nodes compete one another expansion
enforced hill climbing limits consideration nodes near local minimum
nearness measured edge count means cares
heuristic performs small local region space hoffmann extends
concept describing process automatically proving domain small local
minima
xu fern yoon discuss constructing heuristics suboptimal heuristic
search consider beam search beam searches inadmissibly
prune nodes save space time function ultimately used rank
nodes make decision whether keep one node function
xu et al create used rank nodes input function requires variety
features state function created training data trial search runs
creating heuristic hill climbing gdrc require training
instances require information states hill climbing
gdrc however limitation automatic generation heuristics
works appropriate search space defined abstraction
heuristics

conclusion
suboptimal heuristic searches rely heavily heuristic node evaluation function
first showed greedy best first search sometimes perform worse


fieffective heuristics suboptimal best first search

although many domains general trend larger weight heuristics
weighted leads faster search domains larger weight leads
slower search long understood greedy best first search bounds
performance given poor heuristic greedy best first search could well expand
entire state space never terminate state space infinite work shows
poor performance theoretical curiosity behavior occur
practice
considered characteristics effective heuristics greedy best first search
showed several examples conventional guidelines building heuristics
actually harm performance greedy best first search used experience
develop alternative observations desiderata heuristics use greedy bestfirst search first every node path goal
decreases h second important special case first nodes h
connected goal via nodes h third observation nodes
require including high h nodes solution high h
value possible
showed domains greedy best first search effective share
common trait heuristic function true distance node goal defined
n correlates well h n information important anyone running
suboptimal search interest speed allows identify whether
assumption weighting speeds search true critical knowledge
deciding use
finally showed goal distance rank correlation gdrc used compare
different heuristics greedy best first search demonstrated used
automatically construct effective abstraction heuristics greedy best first search
recent work shown search explicitly designed suboptimal
setting outperform methods weighted simple unprincipled derivative
optimal search thayer ruml thayer benton helmert stern
puzis felner indicate holds true heuristic functions
well suboptimal search deserves specialized methods given importance
suboptimal methods solving large quickly hope investigation spurs
analysis suboptimal search heuristic functions rely

acknowledgments
gratefully acknowledge support nsf award preliminary expositions
published wilt ruml

references
burns e hatem leighton j ruml w implementing fast heuristic
search code proceedings fifth symposium combinatorial search
chenoweth v davis h w high performance search rapidly
growing heuristics proceedings twelfth international joint conference
articial intelligence pp


fiwilt ruml

doran j e michie experiments graph traverser program
proceedings royal society london series mathematical physical
sciences pp
felner korf r e meshulam r holte r c compressed pattern databases
journal artificial intelligence jair
felner zahavi u holte r schaeffer j sturtevant n r zhang z
inconsistent heuristics theory practice artificial intelligence

gaschnig j exactly good heuristics toward realistic predictive theory
best first search proceedings fifth international joint conference
articial intelligence pp
gibbons j nonparametric statistical inference marcel decker inc
goldenberg felner sturtevant n schaeffer j portal truedistance heuristics path finding proceedings third symposium combinatorial search
hart p e nilsson n j raphael b formal basis heuristic determination minimum cost paths ieee transactions systems science cybernetics
ssc
haslum p botea helmert bonet b koenig domain independent
construction pattern database heuristics cost optimal proceedings
aaai pp
helmert fast downward system journal artificial intelligence

helmert landmark heuristics pancake proceedings
third symposium combinatorial search
helmert roger g good almost perfect proceedings
twenty third aaai conference artificial intelligence aaai pp
hoffmann j ignoring delete lists works local search topology
benchmarks journal artifial intelligence
hoffmann j analyzing search topology without running search connection causal graphs h journal artificial intelligence

hoffmann j nebel b system fast plan generation
heuristic search journal artificial intelligence
holte r grajkowskic j tanner b hierachical heuristic search revisitied
symposium abstracton reformulation approximation pp
kendall g measure rank correlation biometrika
kendall gibbons j rank correlation methods fifth edition edward
arnold


fieffective heuristics suboptimal best first search

korf r felner disjoint pattern database heuristics artificial intelligence

korf r e search quantitative artificial intelligence

korf r e linear space best first search artificial intelligence
korf r e finding optimal solutions rubiks cube pattern databases
proceedings fourteenth national conference artificial intelligence aaai
pp aaai press
korf r e analyzing performance pattern database heuristics proceedings
nd national conference artificial intelligence aaai pp
aaai press
korf r e reid edelkamp time complexity iterative deepening
artificial intelligence
korf r e taylor l finding optimal solutions twenty four puzzle
aaai vol pp
lelis l zilles holte r c improved prediction ida performance via
epsilon truncation proceedings fourth symposium combinatorial search
likhachev gordon g thrun ara anytime provable bounds
sub optimality proceedings seventeenth annual conference neural
information processing systems
likhachev ferguson long dynamically feasible maneuvers
autonomous vehicles international journal robotic
martelli complexity admissible search artificial intelligence
nilsson n j principles artificial intelligence tioga publishing co
parberry real time n puzzle information processing
letters
pearl j heuristics intelligent search strategies computer solving
addison wesley
pohl heuristic search viewed path finding graph artificial intelligence

richter thayer j ruml w joy forgetting faster anytime search
via restarting proceedings twentieth international conference automated
scheduling
richter westphal lama planner guiding cost anytime
landmarks journal artifial intelligence
stern r puzis r felner potential search bounded cost search
proceedings st international conference automated
scheduling icaps


fiwilt ruml

sussman g j computer model skill acquisition york american
elsevier
thayer j benton j helmert better parameter free anytime search
minimizing time solutions proceedings fifth annual symposium
combinatorial search socs
thayer j ruml w bounded suboptimal search direct inadmissible estimates proceedings twenty sixth international joint
conference articial intelligence ijcai pp
tukey j w exploratory data analysis addison wesley reading
van den berg j shah r huang goldberg k anytime nonparametric
proceedings twenty fifth national conference articial intelligence
wilt c ruml w weighted fail proceedings fifth
symposium combinatorial search
wilt c ruml w speedy versus greedy search proceedings seventh
symposium combinatorial search
wilt c ruml w building heuristic greedy search proceedings
eighth symposium combinatorial search
xu fern yoon learning linear ranking functions beam search
application journal machine learning




