Journal Articial Intelligence Research 40 (2011) 57-93

Submitted 08/10; published 01/11

False-Name Manipulations Weighted Voting Games
Haris Aziz

aziz@in.tum.de

Institut fur Informatik
Technische Universitat Munchen, Germany

Yoram Bachrach

yorambac@gmail.com

Microsoft Research
Cambridge, UK

Edith Elkind

eelkind@ntu.edu.sg

School Physical Mathematical Sciences
Nanyang Technological University, Singapore

Mike Paterson

msp@dcs.warwick.ac.uk

Department Computer Science
University Warwick, UK

Abstract
Weighted voting classic model cooperation among agents decision-making
domains. games, player weight, coalition players wins
game total weight meets exceeds given quota. players power games
usually directly proportional weight, measured power index,
prominent among ShapleyShubik index Banzhaf index.
paper, investigate much player change power, measured
ShapleyShubik index Banzhaf index, means false-name manipulation,
i.e., splitting weight among two identities. indices, provide upper
lower bounds eect weight-splitting. show checking whether
benecial split exists NP-hard, discuss ecient algorithms restricted cases
problem, well randomized algorithms general case. provide
experimental evaluation algorithms.
Finally, examine related forms manipulative behavior, annexation,
player subsumes players, merging, several players unite one.
characterize computational complexity manipulations provide limits
eects. Banzhaf index, describe new paradox, term
Annexation Non-monotonicity Paradox.

1. Introduction
Collaboration cooperative decision-making important issues many types interactions among self-interested agents (Ephrati & Rosenschein, 1997). many situations,
agents must take joint decision leading certain outcome, may dierent
impact agents. standard well-studied way means
voting, recent years, lot research applications voting
multiagent systems well computational aspects various voting procedures (see
Faliszewski & Procaccia, 2010). One key issues domain measure
power voter, i.e., impact nal outcome. particular, question
becomes important agents decide distribute payos resulting
c
2011
AI Access Foundation. rights reserved.

fiAziz, Bachrach, Elkind, & Paterson

joint action: natural approach would pay agent according
contribution, i.e., voting power.
issue traditionally studied within framework weighted voting games (WVGs)
(Taylor & Zwicker, 1999), provide model decision-making many political
legislative bodies (Leech, 2002; Laruelle & Widgren, 1998; Algaba, Bilbao, & Fernandez,
2007), investigated context multiagent systems (Elkind, Goldberg, Goldberg, & Wooldridge, 2008b, 2007). game, agents
weight, coalition agents wins game sum weights participants
meets exceeds certain quota. numerous examples multiagent systems
captured weighted voting games. example, agents weights may correspond amount resources (time, money, battery power) contribute,
quota may indicate amount resources needed complete given task. Alternatively, weight may indicator agents experience seniority, voting
procedure may designed take account characteristics.
Clearly, larger weight makes easier player aect outcome. However, players power always proportional weight. example, quota
high winning coalition one includes players, intuitively,
players equal power, irrespective weight. idea formalized using
concept power index, systematic way measuring players inuence
weighted voting game. several ways dene power indices. One popular approaches relies fact weighted voting games form subclass coalitional
games, therefore one use terminology solution concepts
developed context general coalitional games. particular, important notion
coalitional games Shapley value (Shapley, 1953), classic method
distributing gains grand coalition general coalitional games. Shapley
value natural interpretation context weighted voting, known
ShapleyShubik power index (Shapley & Shubik, 1954). Another well-known power
index, introduced specically context weighted voting games,
Banzhaf index (Banzhaf, 1965). several power indices proposed
(e.g., see Johnston, 1978; Deegan & Packel, 1978; Holler & Packel, 1983), Shapley
Shubik power index Banzhaf power index usually viewed two standard
approaches measuring players power weighted voting games, widely
studied normative computational perspective.
suggested above, power indices measure players power used determine payos. However, applicable real-world scenarios, approach
payo division resistant dishonest behavior, manipulation, participating players. paper study eects particular form manipulation
weighted voting games, namely, false-name voting. manipulation, player splits
weight fake agent enters game. manipulations
virtually impossible detect open anonymous environments internet.
occur legislative bodies, political parties vote bills. bodies,
elections held every several years determine weight party voting
bill. elections held, party may split two smaller parties.
likely supporters party would somehow split two new parties,
total weight new parties equal original party. choosing
58

fiFalse-Name Manipulations WVGs

suitable platform, original party decide weight would split
two new parties.
weight-splitting manipulation change total weight identities
cheating agent, power (as measured ShapleyShubik power index
Banzhaf index) may change. Therefore, behavior presents challenge designers
multiagent systems rely weighted voting. main goal paper
measure eects false-name voting analyze computational feasibility.
examine related scenarios players merging order increase joint power,
one player annexing another one.
main results follows:
precisely quantify worst-case eect false-name voting agents payos.
Namely, show n-player game splitting two false identities
increase agents payo factor 2 ShapleyShubik index
Banzhaf index. Moreover, bound asymptotically tight.
hand, show false-name manipulation decrease agents payo
factor (n) indices.
demonstrate nding successful manipulation trivial task proving
indices NP-hard verify benecial split exists. However,
show weights polynomially bounded, problem solved
polynomial time, discuss ecient randomized algorithms problem.
present similar NP-hardness results case players merging single
new player. Interestingly, case player annexing one players,
contrast ShapleyShubik index Banzhaf index. Whereas
ShapleyShubik index, annexing always benecial, checking whether annexing
benecial case Banzhaf index NP-hard. However benecial
player annexes player bigger weight. present new paradox called
Annexation Non-monotonicity Paradox, shows annexing small
player useful annexing big player.
complement theoretical results experiments indicate expected
fractions positive negative false-name manipulations weighted voting games
randomly selected weights.
1.1 Related Work
Weighted voting games date back least John von Neumann Oskar Morgenstern,
developed theory monumental book Theory Games Economic
Behavior (von Neumann & Morgenstern, 1944). Subsequently, WVGs analyzed
extensively game theory literature (see, instance, Taylor & Zwicker, 1999).
seminal paper, Shapley (1953) considered coalitional games question fair
allocation utility gained grand coalition. solution concept introduced
paper became known Shapley value game. subsequent paper (Shapley
& Shubik, 1954) studies Shapley value context simple coalitional games,
usually referred ShapleyShubik power index. Banzhaf power index
59

fiAziz, Bachrach, Elkind, & Paterson

originally introduced Banzhaf (1965); somewhat dierent denition later proposed
Dubey Shapley (1979). paper, make use Banzhafs original denition,
appropriate context payo division.
power indices well studied. Stran (1977) shows index
reects certain conditions voting body. Laruelle (1999) describes certain axioms
characterize two indices, well several others. indices used analyze
voting structures European Union Council Ministers IMF (Machover
& Felsenthal, 2001; Leech, 2002).
applicability power indices measuring political power various domains
raised question nding tractable ways compute them. However, problem
appears computationally hard. Indeed, naive algorithm calculating Shapley
value (or ShapleyShubik power index) considers permutations players
hence runs exponential time. Moreover, Papadimitriou Yannakakis (1994) show
computing Shapley value weighted voting games #P-complete. result
extended Matsui Matsui (2001), show calculating Banzhaf index
weighted voting games NP-hard. Furthermore, Faliszewski Hemaspaandra
(2009) show comparing players power two dierent weighted voting games
PP-complete indices.
Despite hardness results, several papers show compute power indices
restricted domains, discuss ways approximate them. include generating
functions approach (Mann & Shapley, 1962), trades required storage running time,
Owens multilinear extension (MLE) approach (Owen, 1975) Monte Carlo simulation
approaches (Mann & Shapley, 1960; Fatima, Wooldridge, & Jennings, 2007; Bachrach,
Markakis, Resnick, Procaccia, Rosenschein, & Saberi, 2010). Matsui Matsui (2000)
provide good survey algorithms calculating power indices weighted voting games.
Many approaches work well practice, justies use indices
payo distribution schemes multiagent domains.
useful succinct model coalitional voting games, WVGs attracted
lot interest multiagent community. number papers considered
problem designing WVGs desirable properties (Aziz, Paterson, & Leech, 2007;
Fatima, Wooldridge, & Jennings, 2008; de Keijzer, Klos, & Zhang, 2010). Simple games
obtained combining multiple weighted voting games examined
Elkind et al. (2008b) Faliszewski, Elkind, Wooldridge (2009). Another well-studied
topic computing various stability-related solution concepts WVGs extensions
(Elkind et al., 2007; Elkind & Pasechnik, 2009; Elkind, Chalkiadakis, & Jennings, 2008a).
False-name manipulations open anonymous environments examined
dierent domains auctions (Yokoo, 2007; Iwasaki, Kempe, Saito, Salek, & Yokoo,
2007) coalitional games (Yokoo, Conitzer, Sandholm, Ohta, & Iwasaki, 2005; Ohta,
Iwasaki, Yokoo, Maruono, Conitzer, & Sandholm, 2006; Ohta, Conitzer, Satoh, Iwasaki, &
Yokoo, 2008). latter domain, characteristic function provide
enough information analyze false-name manipulation. deal issue, Yokoo
et al. (2005) introduced framework player subset skills,
characteristic function assigns values subset skills. model seen
special case framework; however, due special properties weighted voting games
able obtain much stronger results general case.
60

fiFalse-Name Manipulations WVGs

phenomenon considered paper studied political scientists
economists name paradox size (Shapley, 1973; Brams, 1975; Felsenthal
& Machover, 1998); however, neither quantitative computational aspects
considered. Felsenthal Machover discuss number paradoxes
weighted voting games; Laruelle Valenciano (2005) give overview recent
work paradoxes weighted voting. Occurrences paradoxes voting bodies
considered Kilgour Levesque (1984),van Deemen Rusinowska (2003), Leech
Leech (2005). Another form manipulation WVGs recently studied
Zuckerman, Faliszewski, Bachrach, Elkind (2008), analyze center might
change players power modifying quota even weights xed.
1.2 Follow-up Work
Many results appear paper previously presented AAMAS conference (Bachrach & Elkind, 2008; Aziz & Paterson, 2009). Inspired work, Lasisi
Allan (2010) recently undertaken experimental analysis false-name manipulations weighted voting games. considered less popular power indices,
DeeganPackel index. another follow-up paper, Rey Rothe (2010) investigate false-name manipulations weighted voting games respect probabilistic
Banzhaf index, i.e., one suggested Dubey Shapley (1979). Although probabilistic Banzhaf index useful measuring actual probability inuencing
decision, framework using power indices share resources power,
probabilistic Banzhaf index normalized.

2. Preliminaries Notation
start introducing notions used throughout paper.
2.1 Coalitional Games
coalitional game G = (N, v) given set players N = {1, . . . , n}, characteristic function v : 2N R, maps subset, coalition, players real value.
value total utility players guarantee working together.
coalitional game G = (N, v) called monotone v(S) v(T ) . Further,
G called simple monotone v take values 0 1, i.e., v : 2N {0, 1}.
games, say coalition N wins v(S) = 1, loses v(S) = 0.
player critical, pivotal, coalition adding player turns
losing coalition winning coalition: v(S) = 0, v(S {i}) = 1. player veto
player necessary forming winning coalition, i.e., v(S) = 0 N \ {i}
(for monotone games, equivalent requiring v(N \ {i}) = 0).
2.2 Weighted Voting Games
weighted voting game G simple game described vector players weights
w = (w1 , . . . , wn ) (R+ )n quota q R+ . write G = [q; w1 , . . . , wn ], G = [q; w].
games, coalition winning
total weight meets exceeds quota. Formally,
N v(S) = 1 wi q v(S) = 0 otherwise. often
61

fiAziz, Bachrach, Elkind, & Paterson


write w(S) denote total weight coalition S, i.e., w(S) = wi . Also, set
wmax = maxi=1,...,n wi . make standard assumption w(N ) q, i.e.,
grand coalition winning. Note q = w(N ), player N veto player.
2.3 Power Indices
player, ShapleyShubik index Banzhaf index determined
players expected marginal contribution possible coalitions; however, two
indices make use dierent probabilistic models.
ShapleyShubik index specialization Shapley valuea classic solution concept
coalitional gamesto simple games. detail, let n set possible
permutations (orderings) n players. n one-to-one mapping {1, . . . , n}
{1, . . . , n}. Denote (i) set predecessors player , i.e., (i) = {j |
(j) < (i)}. Shapley value i-th player game G = (N, v) denoted
(G) given following expression:
1
[v(S (i) {i}) v(S (i))].
(1)
(G) =
n!
n

occasionally abuse notation say player pivotal permutation
pivotal coalition (i).
ShapleyShubik power index simply Shapley value simple coalitional
game (and therefore rest paper use terms interchangeably).
games value coalition either 0 1, formula (1) simply counts
fraction orderings players player critical coalition formed
predecessors. ShapleyShubik power index thus reects assumption
forming coalition, ordering players entering coalition equal
probability occurring, expresses probability player critical.
contrast, Banzhaf index computes probability player critical
assumption coalitions players equally likely. Formally, given game
G = (N, v), N denote (G) number coalitions
critical game G. Banzhaf index player WVG G = (N, v)
(G)
.
jN j (G)

(G) =

exist several approaches determining players inuence
game, ShapleyShubik index Banzhaf index many useful properties
make convenient work with. make use three properties,
namely, normalization property, symmetry property, dummy player property. normalization property simply states sum ShapleyShubik indices (or
Banzhaf indices) players equal 1. symmetry property says two players
i, j make contribution coalition, i.e., v(S {i}) = v(S {j})
N \ {i, j}, equal values index. dummy player property claims
dummy player indices equal 0, player called dummy
contributes nothing coalition, i.e., N v(S {i}) = v(S).
easy verify denitions ShapleyShubik index Banzhaf
index properties.
62

fiFalse-Name Manipulations WVGs

3. Weight-Splitting: Examples
real-world situations modeled weighted voting games, players may able split,
dividing resources (weight) arbitrarily among new identities. payo would
distributed among agents according power resulting game. Intuitively, total payment obtained new identities equal payo
original player split. However, demonstrate
case payo distributed according either ShapleyShubik index
Banzhaf index.
rst show players use weight-splitting increase power.
Example 1. [Advantageous splitting] Consider WVG [6; 2, 2, 2]. symmetry,
player Banzhaf index 1/3, ShapleyShubik index 1/3. last
player splits two players, new game [6; 2, 2, 1, 1]. game,
original game, winning coalition grand coalition, hence players
equally powerful. Thus, split-up players Banzhaf index 1/4 each, well
ShapleyShubik index 1/4 each, i.e., weight-splitting increases manipulators power
factor (2 1/4)/(1/3) = 3/2 according indices.
However, weight-splitting may harmful.
Example 2. [Disadvantageous splitting] Consider WVG [5; 2, 2, 2]. Again, symmetry, player Banzhaf index 1/3, ShapleyShubik index 1/3.
last player splits two players, new game [5; 2, 2, 1, 1]. new
players pivotal exactly one coalition, players weight 2 pivotal
three coalitions. Thus, new players Banzhaf index 1/8 each. Similarly,
new players pivotal permutation appears third
position, followed new player, i.e., new players ShapleyShubik index
2/24 = 1/12. Thus, weight splitting decreases players power factor 4/3
according Banzhaf index factor 2 according ShapleyShubik index.
Finally, weight-splitting may eect players power.
Example 3. [Neutral splitting] Consider WVG [4; 2, 2, 2]. previous examples, symmetry, player Banzhaf index 1/3, ShapleyShubik index
1/3. last player splits two players, new game [4; 2, 2, 1, 1].
game, new players pivotal 2 coalitions, players weight
2 pivotal 4 coalitions. Thus, split-up players Banzhaf index 1/6 each.
Similarly, new players pivotal permutation appears
third position, followed one players weight 2. exactly 4
permutations, ShapleyShubik index new players 1/6.
2 1/6 = 1/3, i.e., according indices, players total power change.
examples presented far, weight-splitting eect Shapley
Shubik index Banzhaf index manipulator. show
always case.
Example 4. Consider WVG [5; 2, 1, 1, 1, 1]. game, rst player pivotal
permutation appears last second-to-last position, earlier positions.
63

fiAziz, Bachrach, Elkind, & Paterson

Thus, ShapleyShubik index 2/5. Further, player pivotal coalition
contains three four players weight 1, i.e., 5 coalitions. hand,
player weight 1 pivotal coalition contains player weight 2 well
two players weight 1, i.e., 3 coalitions. Thus Banzhaf index rst
player given 5/(5 + 4 3) = 5/17.
Now, rst player splits two players weight one, resulting game
players weight. Therefore, value indices 1/6,
hence total power manipulator 1/3.
remains observe 2/5 > 1/3, 5/17 < 1/3, i.e., weight-splitting hurts
manipulator payo distributed according ShapleyShubik index, helps
Banzhaf index used. Further, example generalized weighted
voting game form [n; 2, 1, . . . , 1], n 1 players weight 1 n 5:
game, weight-splitting lowers payo rst player according
2
, increases payo according Banzhaf
ShapleyShubik index n2 n+1
n
2
index (n1)2 +1 n+1 .

4. Splitting: Bounds Manipulation
seen player increase decrease total payo splitting
weight. subsection, provide upper lower bounds much change
payo so. restrict attention case splitting two identities;
general case briey discussed Section 9.
simplify notation, rest section assume original game
G = [q; w1 , . . . , wn ] manipulator player n, splits two new identities n
n , resulting new game G . rst consider case ShapleyShubik index,
followed analysis Banzhaf index.
4.1 ShapleyShubik Index
start providing tight upper bound benets manipulation.
Theorem 5. game G = [q; w1 , . . . , wn ] split n n n ,
2n
n (G ) + n (G ) n+1
n (G), i.e., manipulator cannot gain factor
2n/(n + 1) < 2 splitting weight two identities. Moreover, bound tight,
i.e., exists game player n increases payo factor 2n/(n + 1)
splitting two identities.
Proof. Fix split n n n . Let n1 set permutations rst
n 1 players. Consider n1 . Let P () set permutations
players G obtained inserting n n . Let n+1 set
permutations players G n n pivotal . Finally, let P (, k)
subset P () n+1 consists permutations P () least
one players n n appears k-th (k + 1)-st element
pivotal . Every permutation n+1 appears one sets P (, k)
64

fiFalse-Name Manipulations WVGs

, k,
n (G ) + n (G ) =


|n+1 |
1
|P (, k)|.

(n + 1)!
(n + 1)!
,k

hand, hard see |P (, k)| 2n , k: two
ways place n n k-th (k +1)-st element , n1 permutations
P (, k) n appears k-th element , n adjacent it,
n 1 permutations P (, k) n appears k-th element ,
n adjacent it. Moreover, P (, k) empty, n pivotal
permutation f (, k) obtained inserting n k-th element . Further,
(1 , k1 ) = (2 , k2 ) f (1 , k1 ) = f (2 , k2 ). Hence,
n (G)

1
n!


,k:P (,k)=

1

1
n+1
|P (, k)|
(n (G ) + n (G )).
n! 2n
2n
,k

2n
n (G) 2n (G), i.e., manipulator cannot
conclude n (G ) + n (G ) n+1
gain factor 2n/(n + 1) < 2 splitting weight two identities.
see bound tight, consider game G = [2n; 2, 2, . . . , 2] suppose
one players (say, n) decides split two identities n n resulting game
G = [2n; 2, . . . , 2, 1, 1]. games winning coalition consists players,
2n
n (G).
n (G) = 1/n, n (G ) = n (G ) = 1/(n + 1), i.e., n (G ) + n (G ) = n+1

seen player increase payo factor 2
splitting weight two identities. contrast, show player
decrease payo factor (n) so. shows would-be manipulator
careful deciding whether split weight, motivates algorithmic
questions studied next two sections.
Theorem 6. game G = [q; w1 , . . . , wn ] split n n n ,
n (G ) + n (G ) n+1
2 n (G), i.e., manipulator cannot lose factor
(n + 1)/2 splitting weight two identities. Moreover, bound tight,
Proof. prove rst part theorem, x split n n n consider
permutation players G n pivotal . easy see
least one n n pivotal permutation f () obtained replacing
n n n (in order). Similarly, least one n n pivotal
permutation g() obtained replacing n n n (in order). Moreover,
permutations players G distinct, i.e., , g() = f ( ),
= implies f () = f ( ), g() = g( ). Hence, n set permutations
players G n pivotal , n+1 set permutations
players G n n pivotal , |n+1 | 2|n |
n (G ) + n (G ) =

|n+1 |
2|n |
2

=
n (G).
(n + 1)!
(n + 1)!
n+1

see bound tight, consider game G = [2n 1; 2, 2, . . . , 2] suppose
one players (say, n) decides split two identities n n resulting
65

fiAziz, Bachrach, Elkind, & Paterson

game G = [2n 1; 2, . . . , 2, 1, 1]. original game G, winning coalition
consists players, n (G) = 1/n. Now, consider permutation
players G . claim n pivotal appears n-th
position , followed n . Indeed, (n ) = n, (n ) = n + 1, players
rst n 1 positions weight 2, w(S (n )) = 2n 2, w(S (n ) {n }) = 2n 1.
Conversely, (n ) = n + 1, w(S (n )) = 2n 1 = q, (n ) n 1,
w(S (n ) {n }) 2(n 1). Finally, (n ) = n, (n ) = n + 1,
w(S (n ) {n }) = 2n 2 < q. Consequently, n pivotal (n 1)! permutations, and,
argument, n pivotal (a disjoint set of) (n 1)! permutations. Hence,
2
n (G ) + n (G ) = 2(n1)!
(n+1)! = n+1 n (G).
4.2 Banzhaf Index
Banzhaf index, obtain similar bounds maximum gains losses
weight-splitting manipulation.
Theorem 7. game G = [q; w1 , . . . , wn ] split n n n ,
n (G ) + n (G ) 2n (G). Moreover, bound asymptotically tight.
Proof. Assume player n splits n n wn wn . Consider losing
coalition C n critical G. w(C) < q w(C) + wn = w(C) + wn + wn .
following possibilities:
q w(C) wn . case n n critical C G .
wn < q w(C) wn . case n critical C {n } C G .
q w(C) > wn . case n critical C {n } n critical C {n }
G .
Therefore n (G ) + n (G ) = 2n (G) case.
consider player N \ {n}. Suppose critical coalition C G.
n C, critical coalition C = C \ {n} {n , n } G .
hand, n C, remains critical C G . Hence (G) (G ). Moreover,
may critical coalitions G contain one n n ,
inequality general equality. Thus,
n (G ) + n (G ) =



2n (G) +

2n (G)


\{n} (G

)

2n (G)

2n (G) + \{n} (G)
n (G) +

2n (G)


\{n} (G)

= 2n (G).

see boundis tight,
consider WVG
n2G = [n 1; 1, . . . , 1, 2] n players.

n (G) = n 1 + n1
(G)
=
1
+


= n. Therefore,

2
2
n1
n1+ 2
n
n1
n2 = 2
n (G) =
1/n.
n 4n + 8
n 1 + 2 + (n 1)(1 + 2 )
66

fiFalse-Name Manipulations WVGs

player n splits two players n n weights 1 each, resulting
1
. Thus large n, n (G ) + n (G ) =
game G Banzhaf index player n+1
2
n+1 2n (G).
bound damage incurred weight-splitting.
Theorem 8. game G = [q; w1 , . . . , wn ] split n n n ,
n (G ) + n (G ) n1 n (G).
Proof. Suppose player n splits two players n n weights wn wn ,
respectively. assume without loss generality wn wn . Now, consider
arbitrary player = n, let
Ti = {S N \ {i} | w(S) < q, w(S) + wi q},
Si = {S N \ {n, i} {n , n } | w(S) < q, w(S) + wi q}.
(G) = |Ti |, (G ) = |Si |. Further, set
Si1 = {S Si | pivotal \ {n , n }},

Si2 = {S Si | pivotal \ {n , n } n S, n S},

Si3 = {S Si | pivotal \ {n , n } n S, n S},
Si4 = {S Si | pivotal \ {n , n } n , n S}.

claim Si = 4j=1 Sij . Indeed, Si1 , pivotal S, \{n , n },
hence must case {n , n } =
; sets included Si1 Si2 Si3 .


Si , let f (S) = \ {n , n }, g(S) = \ {n , n } {n}. Si1 ,
f (S) Ti , set Ti 4 sets f (S) = , i.e.,
|f 1 (T )| 4. Further, Si4 implies g(S) Ti , |g 1 (T )| 1 Ti . Finally,
g(S ) = f (S ) , Si . Taken together, observations imply
|Si1 | + |Si4 | 4|Ti | = 4i (G).
Now, consider Si2 . w(S) < q, w(S) + wi < q, w(S) + wi + wn q.
Hence, n critical {i}. Similarly, Si3 , follows n critical {i}.
Therefore, |Si2 | + |Si3 | n (G ) + n (G ). obtain
(G ) = |Si |

4

j=1

|Sij | 4i (G) + n (G ) + n (G ) = 4i (G) + 2n (G),

last equality follows proof Theorem 7. Thus, obtain
n (G ) + n (G ) =



2n (G) +

2n (G)


2n (G) + 4
2n

\{n} (G

)

2n (G)
\{n} (G) + 2(n 1)n (G)



2 (G)
(G)
n
=
.

(G)
n


67

fiAziz, Bachrach, Elkind, & Paterson

clear bound given Theorem 8 tight, next example shows
splitting two
players decrease players payo according Banzhaf index
n
.
factor almost 2
Example 9. Consider WVG G = [3k; 1, . . . , 1, 4k] n = 2k players. Let N1
set players weight 1, i.e., N1 = {1, . . . , n 1}. easy see player n
critical coalition, players dummies, n (G) = 1.
suppose player n splits new identities n n weights wn = wn = 2k.
player n critical coalition G , case either n S,
k |S N1 | n 1 n S, 0 |S N1 | k 1. Thus,




(G ) = (G ) =
n

n


n

n1
i=0



= 2n1 .

Moreover, player weight 1 critical coalition G , coalition must
include exactly oneof n n well k 1 n 2 players N1 \ {i}. Thus,
(G ) = 2 2k2
asymptotics
k1 < n. Using standard formulas

2k2
2
4k1 . obtain
central binomial coecient, approximate 2 k1 2 (2k1)


2 2n1



n (G ) + n (G )

2n1

+

2n1

2



=

2
+ (n 1) (n1)
2n1
2 + n 1 2




2
.
n

5. Complexity Finding Benecial Split
examine problem nding benecial weight split weighted voting games
computational perspective. Ideally, manipulator would nd payomaximizing split, i.e., way split weight among two identities results
maximal total payo. less ambitious goal decide whether exists
manipulation increases manipulators payo. However, turns even
problem computationally hard. rest section, show checking whether
exists payo-increasing split NP-hard ShapleyShubik index
Banzhaf index; holds even player allowed use two identities. is,
spirit groundbreaking papers Bartholdi Orlin (1991) Bartholdi,
Tovey, Trick (1989, 1992), show computational complexity acts barrier
manipulative behavior.
formally dene computational problems, require weights
quota original game new game integers given binary, i.e.,
allow integer splits. remark assumption entirely without loss
generality: games player benet fractional split
integer split. One example given game [3; 1, 1, 1],
non-trivial integer splits available players, but, similarly Example 1,
player increase power factor 3/2 splitting two players weight
1/2. However, real-life settings usually natural bound granularity
weights: weight number supporters given party, needs
68

fiFalse-Name Manipulations WVGs

integer, monetary contribution player, usually integer
number dollars (or, least, cents), i.e., assumption reects real-life constraints.
ready dene problems.
Name: Beneficial-SS-Split
Instance: (G, ) G = [q; w1 , . . . , wn ] weighted voting game {1, . . . , n}.
Question: way player split
w sub-players 1 , . . . ,
weight
) > (G)?
new game G holds

(G

j=1 j
denition Beneficial-BI-Split similar.
Name: Beneficial-BI-Split
Instance: (G, ) G = [q; w1 , . . . , wn ] weighted voting game {1, . . . , n}.
Question: way player split
w sub-players 1 , . . . ,
weight


new game G holds j=1 j (G ) > (G)?
Note looking strictly benecial manipulation, i.e., one increases
manipulators total payo, rather one simply harmful.
prove Beneficial-SS-Split Beneficial-BI-Split NP-hard.
hardness results based reductions following classic NP-hard problem:
Name: Partition
Instance: set k integer weights = {a1 , . . . , ak }.
Question: possible
partition
two subsets P1 A, P2 P1 P2 = ,


P1 P2 = A, ai P1 ai = ai P2 ai ?
rst prove simple lemma used NP-hardness proofs
paper.
Lemma 10. Let = {a1 , . . . , ak } no-instance Partition.
weighted
. . , wn ] n > k, wi = 8ai = 1, . . . , k, q = 4 ai ai +
voting game G = [q; w1 , .
r, 0 < r < 4, ni=k+1 wi < 4, holds players k + 1, . . . , n dummies,
hence ShapleyShubik Banzhaf indices equal 0.
Proof. Consider player k < n set N \ {i}. show
pivotal S.
Set N0 = {1, . . . , k} let S0 = N0 . set N0 partitioned two
equal-weight subsets can, either w(S0 ) < w(N0 )/2, w(S0 ) > w(N0 )/2.
Moreover, weights players N0 multiples 8, w(N0 )/2 multiple 4.
Similarly, weight S0 multiple 8. Hence, w(S0 ) < w(N0 )/2, follows
w(S0 ) w(N0 )/2 4 w(S {i}) < w(N0 )/2 4 + 4 < q. Therefore, v(S) = 0,
v(S {i}) = 0, i.e., pivotal S. hand, w(S0 ) > w(N0 )/2,
w(S0 ) w(N0 )/2 + 4 > q, S0 winning coalition. Therefore, pivotal
case well.
Theorem 11. Beneficial-BI-Split NP-hard, remains NP-hard even player
split two players equal weights.
Proof. Given instance Partition = {a1 , . . . , ak }, construct aweighted voting
game G = [q; w1 , . . . , wn ] n = k + 1 players follows. let X = ai ai , set
wi = 8ai = 1, . . . , n 1, wn = 2, q = 4X + 2. Also, set = n. Since wn = 2,
69

fiAziz, Bachrach, Elkind, & Paterson

integer split available player n two identities n n weight 1
each. Let G = [q; w1 , . . . , wn1 , 1, 1] resulting game.
no-instance Partition, Lemma 10 implies player n dummy,
and, moreover, splits sub-players, sub-players dummies. Therefore
(G, ) no-instance Beneficial-BI-Split.
let us assume yes-instance Partition. Let x denote number
coalitions N \ {n} weight 4X. n (G) = x. = 1, . . . , n 1, let
Si = {S N \ {n, i} | w(S) < 4X, w(S) + wi q},

set yi = |Si |. Also, set = n1
i=1 yi .
Consider player < n. Observe exactly half x subsets {1, . . . , n 1}
weight 4X contain i. subset , player pivotal (T \ {i}) {n}. Further,
coalition Si , player pivotal {n}. Therefore < n
(G) = x2 + 2yi . obtain
n (G) =

x
.
x + (n 1) x2 + 2y

hand, new game G n (G ) = n (G ) = x. Moreover,
< n (G ) = x2 + 4yi , since coalition Si corresponds 4 coalitions
pivotal, namely, S, {n }, {n }, {n , n }. Thus,
n (G ) + n (G ) =

2x
> n (G),
2x + (n 1) x2 + 4y

last inequality holds since x > 0. Thus, yes-instance Partition corresponds yes-instance Beneficial-BI-Split.
consider problem nding benecial split ShapleyShubik index.
Theorem 12. Beneficial-SS-Split NP-hard, remains NP-hard even player
split two players equal weights.

Proof. Given instance = {a1 , . . . , ak } Partition, set X = ai ai , create
weighted voting game G = [4X + 3; 8a1 , . . . , 8ak , 1, 2] n = k + 2 players. Also, set
N0 = {1, . . . , n 2}.
no-instance Partition, Lemma 10 implies player n dummy,
splits several players, dummies, too. Thus,
constructed no-instance Beneficial SS-Split.
Now, suppose yes-instance Partition. Let P1 , P2 partition
A, w(P1 ) = w(P2 ). corresponds partition S, N0 \ N0 ,
ai P1 ; observe w(S) = w(N0 \ S). Set = |S|, |N0 \ S| = n 2.
easy see n critical {n 1} well (N0 \ S) {n 1}.
(s + 1)!(n 2 s)! permutations 1, . . . , n put n directly permutation
{n 1}. Similarly, s!(n 1 s)! permutations putting n directly
permutation (N0 \ S) {n 1}. Thus, partition P = P1i , P2i , |P1i | = s,
70

fiFalse-Name Manipulations WVGs

least (s + 1)!(n 2 s)! + s!(n 1 s)! distinct permutations n critical.
hand, argued above, subset N0 w(S) = w(N0 )/2,
n critical {n 1}, since either w(S) w(N0 )/2 4 < q 3
w(S) w(N0 )/2 + 4 > q.
Let P set partitions A, partition counted once, i.e.,
P contains exactly one P1 , P2 P2 , P1 . P = P1i , P2i P, denote
|P1i | = si . total n! permutations players G. Thus, ShapleyShubik
index n G
(si + 1)!(n 2 si )! + si !(n 1 si )!
=
n (G) =
n!

P P

si !(n 2 si )!(si + 1 + n 1 si )
=
n!


P P

nsi !(n 2 si )!
si !(n 2 si )!
=
.
n!
(n 1)!



P P

P P

consider happens n splits two players, n n wn =
wn = 1, resulting game G = [4X + 3; 8a1 , . . . , 8ak , 1, 1, 1].
Again, let P1 , P2 , |P1 | = si , |P2 | = n si , partition w(P1 ) = w(P2 ),
let S, N0 \ corresponding partition N0 . (si + 2)!(n 2 si )!
permutations place n directly permutation {n 1, n }, n
critical them. Similarly, n critical si !(n si )! permutations place
n directly permutation (N0 \ S) {n 1, n }.
Thus, partition P = P1i , P2i |P1i | = si , corresponds (si + 2)!(n 2
si )! + si !(n si )! distinct permutations n critical. symmetry, (si +
2)!(n 2 si )! + si !(n si )! distinct permutations n critical. n + 1
players G , total (n + 1)! permutations players. Thus partition
)!
ShapleyShubik index n G,
P = P1i , P2i , |P1i | = si , contributes si !(n2s
(n1)!
)!+si !(nsi )!
2 (si +2)!(n2s
sum ShapleyShubik indices n n G .
(n+1)!
show partition P

2

(si + 2)!(n 2 si )! + si !(n si )!
si !(n 2 si )!
>
.
(n + 1)!
(n 1)!

(2)

Summing inequalities partitions P implies n (G ) + n (G ) > n (G),
desired. prove inequality (2), note simplied
2

(s + 1)(s + 2) + (n 1 s)(n s)
> 1,
n(n + 1)

use instead si simplify notation, or, equivalently,
2(s + 1)(s + 2) + 2(n 1 s)(n s) n(n + 1) > 0.
Now, observe
2(s + 1)(s + 2) + 2(n 1 s)(n s) n(n + 1) = (n 2 2s)2 + n > 0
71

fiAziz, Bachrach, Elkind, & Paterson

n > 0. proves inequality (2) n > 0. follows yesinstance Partition, player n always gains splitting two players weight 1, i.e.,
(G, n) yes-instance Beneficial-SS-Split.
Remark 13. veried proofs go even allow noninteger splits, i.e., hardness results independent integrality assumption. Further, note shown Beneficial-BI-Split Beneficial-SS-Split
NP, i.e., proved problems NP-complete. two
reasons this. First, allow splits arbitrary number identities,
candidate solutions may exponentially many new players (e.g., player weight
wi split wi players weight 1). Second, even circumvent issue
considering splits polynomial number identities, clear verify
polynomial time whether particular split benecial. fact, since computing power
indices weighted voting games #P-hard, quite possible problems
NP.

6. Computing Benecial Splits
Section 5, shown hard even test benecial split exists, let alone
nd optimal split. seen positive result, since complexity nding
benecial splits serves barrier kind manipulative behavior. However, turns
many cases manipulators overcome problem. precisely,
follows show certain restricted domains manipulators nd benecial splits
two identities polynomial time. consider manipulation algorithms work
approximating ShapleyShubik index (rather calculating precisely).
6.1 Examples
subsection, describe two scenarios one players always increase
payo splitting. examples rely rather severe constraints
players weights threshold, practical weighted voting scenarios satisfy
constraints.
Example 14. hard see Example 1 generalized weighted
voting game w(N ) = q; games sometimes called unanimity games. Even
generally, player always increase payo weight-splitting threshold
set high winning coalition must include players; holds
ShapleyShubik index Banzhaf index. Indeed, consider class weighted voting
games G = [q; w] characterized following condition: w(N ) < q w(N ),
= min{mini wi , wmax /2}. condition mini wi ensures players
present winning coalitions, index value player 1/n. Now, suppose
player largest weight wi = wmax splits weight (almost) equally
two identities, i.e., sets wi = wi /2, wi = wi /2. wmax /2,
winning coalition still include players. Therefore, new game payo
player 1/(n + 1), hence split increases total payo manipulator
factor 2n/(n + 1).
72

fiFalse-Name Manipulations WVGs

Example 15. second example specic ShapleyShubik index. example,
small player benet manipulation presence large players, long
threshold suciently high. Formally, consider class weighted voting games
form G = [q; w], wi , = 1, . . . , n 1, multiples integer A,
threshold q form + b, b < A, b < wn < min{2b 1, A}. Suppose
winning coalitions size least n/2 + 1.
condition holds renumber
players w1 w2 wn1 require q > i=1,...,n/2 wi .
Now, suppose player n pivotal least one coalition game (if weights
small multiples A, condition checked easily). Consider permutation
n pivotal . w(S (n)) = . Indeed, w(S (n)) > ,
w(S (n)) + > q, coalition (n) need player n win.
hand, w(S (n)) < , w(S (n)) A, w(S (n)) + wn < + b = q.
|
Let P set permutations; n (G) = |P
n! .
suppose n decides split weight two new identities n n
setting wn = b 1, wn = wn b + 1; note wn , wn < b. Consider permutation
. Suppose n occurs k-th position permutation. assumption,
k n/2 + 1. construct 2k permutations j , j , j = 1, . . . , k, follows.
permutations, players 1, . . . , n 1 appear order . Moreover,
j , player n occurs j-th position, player n occurs (k + 1)-st position.
Similarly, j , player n occurs j-th position, player n occurs (k + 1)-st
position.
Observe n pivotal j , j = 1, . . . , k. Indeed, total weight players
precede n j +wn < q, w(Sj (n ){n }) > q. Similarly, w(Sj (n )) < q,
n pivotal j , j = 1, . . . , k. Hence, total number permutations
1, . . . , n 1, n , n either n n pivotal least 2k|P | (n + 2)|P |,
|
|P |
total ShapleyShubik index players least (n+2)|P
(n+1)! > n! = n (G). Hence,
split strictly benecial player n.
addition scenarios discussed above, Fatima et al. (2007) describe several classes
voting games ShapleyShubik indices players computed polynomial time; Aziz Paterson (2008) prove similar results Banzhaf index. Clearly,
manipulators weight polynomially bounded, original game well
games result manipulator splitting two identities easy, i.e., belong
one classes considered Fatima et al. Aziz Paterson, problem nding
benecial two-way split solved polynomial time. However, examples illustrate player may able decide whether benecial split even cannot
compute payo prior manipulation.
6.2 Pseudopolynomial Approximation Algorithms
hardness reductions Section 5 Partition. problem known
NP-hard, hardness relies crucially fact weights elements
represented binary. Indeed, weights given unary, dynamic
programming-based algorithm problem runs time polynomial size
input (such algorithms usually referred pseudopolynomial ). particular,
weights polynomial n, running time algorithm polynomial n.
73

fiAziz, Bachrach, Elkind, & Paterson

many natural voting domains weights players large, scenario
quite realistic. therefore natural ask exists pseudopolynomial algorithm
problem nding benecial split.
turns answer question indeed positive long
constant upper bound K number identities manipulator use
weights required integers. see this, recall pseudopolynomial algorithm computing ShapleyShubik index player weighted voting
game (Matsui & Matsui, 2000). algorithm based dynamic programming:
weight W 1 k n, calculates number coalitions size k
weight W . Thus, easily adapted work Banzhaf index well.
One use algorithm Matsui Matsui (2000) nd benecial split
(1)
player weight wi game G follows. Consider possible splits wi = wi +
(K)
(j)
+ wi , wi N j = 1, . . . , K. number splits (wi )K ,
polynomial n constant K. Evaluate ShapleyShubik indices (respectively,
Banzhaf indices) new players split return yes least
one splits results increased total payo. Let A(G) running time
algorithm Matsui Matsui instance G. running time algorithm
O((wi )K K A(G)), clearly pseudopolynomial.
consider general setting, weight manipulator
polynomially bounded, weights players large. simplify
presentation, limit case two-way splits ShapleyShubik index;
however, approach applies splits constant number identities
Banzhaf index. use high-level approach previous case, i.e.,
considering possible splits (because weight restriction, polynomially
many them), computing indices new players split. However,
implement latter step exactly, would take exponential time. Therefore,
version algorithm, replace algorithm Matsui Matsui
approximation algorithm computing ShapleyShubik index. Several algorithms
known; see, e.g., work Mann Shapley (1960), Fatima et al. (2007), Bachrach
et al. (2010). use algorithms black-box fashion. Namely, assume
given procedure Shapley(G, i, , ) given values > 0
> 0 outputs number v probability 1 satises |v (G)| runs
time poly(n log wmax , 1/, 1/). show use procedure design
algorithm nding benecial split relate performance algorithm
Shapley(G, i, , ).
algorithm given Figure 1. takes parameters inputs, uses
procedure Shapley(G, i, , ) subroutine. algorithm outputs yes nds split
whose total estimated payo exceeds payo manipulator original game
least 3. easily modied output (approximately) optimal split.
Proposition 16. probability 1 3, output algorithm satises following: (i) algorithm outputs yes, (G, i) admits benecial integer split; (ii)
Conversely, integer split increases payo manipulator
6, algorithm outputs yes. Moreover, running time algorithm
polynomial nwi , 1/, 1/.
74

fiFalse-Name Manipulations WVGs

FindSplit(G = [q; w], i, , );
v =Shapley(G, i, , );
j = 0, . . . , wi
wi = j, wi = wi j;
G = [q; w1 , . . . , wi1 , wi , wi , wi+1 , . . . , wn ];
v = Shapley(G , , , ), v =Shapley(G , , , );
v = v + v ;
v > v + 3 return yes;
return no;
Figure 1: Algorithm FindSplit(G = [q; w], i, , )
Proof. Suppose algorithm outputs yes. Consider quantities v , v v
computed algorithm. P rob[v < (G) ] < , P rob[v > (G ) + ] < ,
P rob[v > (G ) + ] < . Hence, probability least 1 3, v + v > v + 3,
(G) + (G ) + 2 > (G) + 3, or, equivalently, (G ) + (G ) > (G).
Conversely, suppose benecial split form (wi , wi ) improves
player payo least 6. before, probability least 1 3
v (G) + step j = wi holds v (G ) , v (G ) .
v = v + v (G ) + (G ) 2 > (G) + 6 2 v + 3, algorithm
output yes.
algorithm guarantee nding successful manipulation, possible
control approximation quality (at cost increasing running time),
successful manipulation found high probability.
Thus see manipulators several ways overcome computational
diculty nding optimal manipulation. Hence, measures required avoid
manipulations.

7. Merging Annexation
Instead player splitting smaller players, players may merge single
entity. However, situation dierent game-theoretic perspective,
involves coordinated actions several would-be manipulators decide
split (increased) total payo. case players merging gain advantage,
examine two cases. One annexation one player takes voting weight
players. annexation advantageous payo new merged coalition
new game greater payo annexer original game. case
voluntary merging players merge become bloc new payo exceeds
sum individual payos.
weighted voting game G, denote game results merging
players coalition G&S ; set players new game (N \S){&S},
characteristic function denoted v&S . dene computational problems
75

fiAziz, Bachrach, Elkind, & Paterson

checking whether exist benecial voluntary merge annexation respect
ShapleyShubik index.
Name: Beneficial-SS-Merge
Instance: (G, S) G = [q; w1 , . . . , wn ] weighted voting game {1, . . . , n}.
Question: coalition merges form new game G&S , &S (G&S ) > (G)?
Name: Beneficial-SS-Annexation
Instance: (G, S, i) G = [q; w1 , . . . , wn ] weighted voting game, 1 n,
{1, . . . , n} \ {i}.
Question: annexes form new game G&(S{i}) , &(S{i}) (G&(S{i}) ) > (G)?
easily adapt denitions Banzhaf index; refer resulting problems Beneficial-BI-Merge Beneficial-BI-Annexation. rst
consider issues related annexation, followed analysis merging.
7.1 Merging
case splitting, expect hard nd benecial merge. following
theorem conrms intuition.
Theorem 17. Beneficial-SS-Merge Beneficial-BI-Merge NP-hard.
voting
Proof. Given instance Partition = {a1 , . . . , ak }, construct weighted

game G = [q; w1 , . . . , wn ] n = k + 3 players follows. set X = 4 ki=1 ai let
wi = 8ai = 1, . . . , n 3, wn2 = wn1 = wn = 1, q = X + 2. argue
yes-instance Partition (G, {n 1, n}) yes-instance
Beneficial-SS-Merge Beneficial-BI-Merge.
no-instance Partition, Lemma 10 players n n 1
dummies, even merge together, new player &{n 1, n} remains dummy
new game G&{n1,n} . Thus, case (G, {n 1, n}) no-instance
problems.
let us assume yes-instance Partition. rst consider
case ShapleyShubik index, followed analysis Banzhaf index.
Set N0 = {1, . . . , n 3}. Let P1 , P2 partition A, let S, N0 \
corresponding partition N0 . Set = |S|, |N0 \ S| = n 3. Player n critical
{n 2} {n 1}, well (N0 \ S) {n 2} (N0 \ S) {n 1}. Thus,
partition P = P1 , P2 , |P1 | = s, exactly 4(s + 1)!(n 2 s)! distinct
permutations n critical. Further, easy see n critical
permutation. symmetry, true n 1. Thus, partition P1 , P2
sum ShapleyShubik indices n 1
|P1 | = contributes 8 (s+1)!(n2s)!
n!
n.
Now, consider game G&{n1,n} . Consider partition S, N0 \ N0 |S0 | =
corresponds partition P1 , P2 A. Player &{n 1, n} critical
{n 2}, well N0 \ (N0 \ S) {n 2}. Thus, partition P1 , P2
+ 2 (s+1)!(n3s)!
ShapleyShubik index
|P1 | = contributes 2 s!(n2s)!
(n1)!
(n1)!
76

fiFalse-Name Manipulations WVGs

&{n 1, n}. remains show
8

(s + 1)!(n 2 s)!
s!(n 2 s)!
(s + 1)!(n 3 s)!
<2
+2
.
n!
(n 1)!
(n 1)!

inequality simplied 4(s + 1)(n 2 s) < n(n 2 + + 1) = n(n 1),
equivalent 0 < n(n 1) 4(s + 1)(n 2 s) = (n 2s 3)2 + n 1.
inequality clearly holds n 1. Hence, n1 (G) + n (G) < &{n1,n} (G&{n1,n} ), i.e.,
(G, {n 1, n}) yes-instance Beneficial-SS-Merge started
yes-instance Partition.
show true Banzhaf index. Let x denote number
coalitions N0 weight 4X. n2 (G) = n1 (G) = n (G) = 2x. = 1, . . . , k,
let
Si = {S N0 \ {i} | w(S) < 4X, w(S) + wi q},

set yi = |Si |. Also, set = ki=1 yi .
Consider player N0 . Observe exactly half x subsets N0 weight 4X
contain i. set , player pivotal (T \ {i}) {n 2, n 1}, (T \ {i}) {n
2, n}, (T \ {i}) {n 1, n}, (T \ {i}) {n 2, n 1, n}. Further, coalition Si ,
player pivotal coalition form , {n2, n1, n}. Therefore
2x
N0 (G) = 4x
2 + 8yi . Thus, n1 (G) = n (G) = 6x+2kx+8y .
new game G&{n1,n} , &{n1,n} (G&{n1,n} ) = 2x, n2 (G&{n1,n} ) =
0. Now, consider player N0 coalition N0 weight 4X contains i.
Player pivotal (T \ {i}) {&{n 1, n}} (T \ {i}) {n 2, &{n 1, n}}.
well coalition form , Si {n 2, &{n 1, n}}.
Hence, (G&{n1,n} ) = 2x
2 + 4yi .
obtain
2x
4x
&{n1,n} (G&{n1,n} ) =
>
= n1 (G) + n (G).
2x + kx + 4y
6x + 2kx + 8y
Thus, (G, {n 1, n}) yes-instance Beneficial-BI-Merge started
yes-instance Partition.
7.2 Annexation
Felsenthal Machover (1998) prove annexation never disadvantageous respect
ShapleyShubik index. completeness, give simple proof fact.
Proposition 18. weighted voting game G set players N , N ,
N \ {i} (G) &(S{i}) (G&(S{i}) ).
Proof. give proof case |S| = 1, i.e., = {j} j N \ {i}; general
case follows easily induction. Let set permutations N
critical G; (G) = |i |/n!. , let f () permutation
players N&{i,j} obtained deleting j replacing new player
&{i, j}. player &{i, j} pivotal f (). Moreover, permutation
N&{i,j} |f 1 ()| = n. Hence,
&{i,j} (G&{i,j} )

|{f () | }|
||/n
=
= (G).
(n 1)!
(n 1)!
77

fiAziz, Bachrach, Elkind, & Paterson

However Felsenthal Machover (1998) show that, case Banzhaf index,
annexation could disadvantageous; refer phenomenon Bloc Paradox.
provide 13-player WVG case, simplest example
could nd. improve result describing 7-player WVG annexation
disadvantageous.
Example 19. Consider weighted voting game [11; 6, 5, 1, 1, 1, 1, 1]. game, player 1
pivotal coalition involves player 2 subset remaining players,
well coalition {3, . . . , 7}, i.e., 33 coalitions. Player 2 pivotal coalition
involves player 1 4 remaining players, i.e., 31 coalitions. Finally,
players weight 1 pivotal coalition includes player 1 rest
33
0.47826.
players weight 1. Thus, Banzhaf index player 1 equals 33+31+5
player 1 annexes one players weight 1, new game [11; 7, 5, 1, 1, 1, 1].
Applying reasoning above, obtain player 1 pivotal 17 coalitions,
player 2 pivotal 15 coalition, remaining players pivotal exactly one
17
coalition, Banzhaf index player 1 new game 17+15+4
0.47222 < 0.47826.
shown annexation disadvantageous case Banzhaf
index. One would least expect Banzhaf index payo annexing another
player monotone power annexed player. Surprisingly, case.
is, show exists weighted voting game G = [q; w1 , . . . , wn ]
i, j, k {1, . . . , n} wj > wk , &{i,j} (G&{i,j} ) < &{i,k} (G&{i,k} ).
refer phenomenon Annexation Non-monotonicity Paradox. Observe
distinct Bloc Paradox: former choosing two given
players annex, latter choosing annexing given player
annexing player all.
Example 20. Consider weighted voting game [9; 3, 3, 2, 1, 1, 1]. Suppose rst player
1 annexes player 2 form game [9; 6, 2, 1, 1, 1]. game, player 1 pivotal
1 coalition include player 2, 7 coalitions include player 2, i.e., 8
coalitions. Further, player 2 pivotal 6 coalitions, remaining players
8
pivotal 2 coalitions. Thus, Banzhaf index player 1 8+6+6
= 0.4.
Now, suppose player 1 annexes player 3 form game [9; 5, 3, 1, 1, 1].
game, player 1 pivotal 7 coalitions, player 2 pivotal 7 coalitions,
remaining players pivotal 1 coalition. Thus, Banzhaf index player 1
7
0.411765 > 0.4.
game 7+7+3
contrast, ShapleyShubik index monotone respect annexation.
Proposition 21. weighted voting game G = [q; w1 , . . . , wn ] i, j, k
{1, . . . , n} wj wk &{i,j} (G&{i,j} ) &{i,k} (G&{i,k} ).
Proof. Consider permutation N&{i,k} &{i, k} pivotal. Let
permutation N&{i,j} obtained replacing &{i, k} &{i, j} j k. Since
w&{i,j} w&{i,k} , player j appears player &{i, k}, player &{i, j}
pivotal . hand, player j appears player &{i, k},
78

fiFalse-Name Manipulations WVGs

w(S (&{i, j})) w(S (&{i, k})) < q, w(S (&{i, j}) {&{i, j}}) = w(S (&{i, k})
{&{i, k}}) q, &{i, j} pivotal case well. Hence, permutation
&{i, k} pivotal corresponds distinct permutation &{i, j} pivotal,
i.e., &{i,j} (G&{i,j} ) &{i,k} (G&{i,k} ).
bound gains losses annexation, observe player increase
payo (with respect indices) much 1. happens dummy
player annexes suciently large player coalition players. hand,
Theorem 7 immediately implies that, player annexes player j game G,
&{i,j} (G&{i,j} ) 12 (i (G) + j (G)). following useful corollary.
Corollary 22. weighted voting game G set players N i, j N
&{i,j} (G&{i,j} ) 12 (G), i.e., player decrease payo
factor 2 annexing another player. Moreover, wi wj , &{i,j} (G&{i,j} ) (G),
show determining whether player benet annexing given
coalition (with respect Banzhaf index) NP-hard.
Theorem 23. Beneficial-BI-Annexation NP-hard.
Proof. proof similar Theorem 11. Given instance Partition =
{a1 , . . . , ak }, construct
weighted voting game G = [q; w1 , . . . , wn ] n = k+2 players
follows. let X = ai ai , set wi = 8ai = 1, . . . , n 2, wn1 = wn = 1
q = 4X + 2.
Lemma 10, no-instance Partition, players n 1 n
dummies, n remains dummy even annexes n 1. Now, suppose
yes-instance Partition. Let x denote number coalitions N \ {n 1, n}
weight 4X. n1 = n (G) = x. = 1, . . . , n 2, let
Si = {S N \ {n 1, n, i} | w(S) < 4X, w(S) + wi q},

set yi = |Si |. Also, set = n2
i=1 yi .
calculations proof Theorem 11 show
x
2x+(n2) x2 +4y ,
x
= x+(n2)
x
+2y .
2

n (G) =
&{n,n1} (G&{n,n1} )

Since x > 0, implies n (G) < &{n,n1} (G&{n,n1} ). Hence, (G, {n 1}, n)
yes-instance Beneficial-BI-Annexation started yesinstance Partition.
conclude section analyzing benets merging annexation unanimity games, i.e., games q = w(N ).
Proposition 24. unanimity game, advantageous player annex
arbitrary coalition, respect ShapleyShubik index Banzhaf index.
However, group players increase total payo (as measured either
indices) merging.
79

fiAziz, Bachrach, Elkind, & Paterson

Proof. game players equal value index annexa1
. However,
tion. Hence, annexes coalition size s, power increases n1 ns

1
merging reduces total power players coalition size n ns
.
remark Proposition 24 generalizes game player veto
player.

8. Empirical Analysis
analyze false-name splitting manipulations empirically. constructed
system randomly constructing weighted voting games examined changes
ShapleyShubik index Banzhaf index occur agents split weights
false identities. briey describe simulation system, game construction
power index calculations, present empirical evidence obtained.
8.1 Simulation System Settings
weighted voting games constructed rst randomly choosing number
players game. Then, weights players drawn N (, 2 ),
normal distribution mean variance 2 . weights rounded
nearest integer, make sure game integer weights. threshold
game chosen uniformly random 0 sum players weights
w = w(N ), rounded nearest integer. experiments, used
mean = 200 weights, several values standard deviation
set {5, 10, 15, . . . , 50}. number players n chosen uniformly random
set {5, 6, 7, . . . , 24}.
Power indices computationally hard compute exactly (Papadimitriou & Yannakakis, 1994; Matsui & Matsui, 2001), tractably approximated using several
methods. used approximation method Bachrach et al. (2010). algorithm estimates power indices returns result probably approximately
correct, discussed Section 6. Given game players true power index
, given target accuracy level condence level , algorithm returns
approximation probability least 1 | | (i.e.
result approximately correct, within distance correct value). algorithm works drawing sample k permutations (or coalitions), testing whether
target player critical them. test runs time linear number
agents, total running time O(kn log W ). Bachrach et al. show achieve
condence level accuracy level , suces take k = ln(2/)/(22 ). Thus
total running time logarithmic condence quadratic accuracy,
approach tractable even high accuracy condence. used = 0.00001
= 0.001, power estimated accurately. system implemented
C#, results experiments stored SQL database. Since power
indices approximated accurately, single experiment take several seconds.
tests required tens thousands experiments, used compute cluster
250 cores experiments.
80

fiFalse-Name Manipulations WVGs

theoretical results show testing benecial split hard, might create
impression nding benecial manipulation hard practice. empirical
experiments designed see whether indeed case. naive method
manipulator use try many possible splits two identities, constant
intervals. words manipulator whose weight w try 2s splits splitting
2w
3w
3w
weight ( ws , w ws ), ( 2w
, w ), ( , w ) on. Although certainly
complete coverage space possible manipulations, experiments
tried simple algorithm based idea. Since weights integers,
tried splitting weights two false identities, examined integer
splits. example, agent weight wi = 10, attempted splitting weights
w1 = 9, w1 = 1, w1 = 8, w1 = 2, w1 = 7, w1 = 3 on. experiment
recorded details game, number benecial splits (power increase)
harmful splits (power decrease). split considered benecial, increase
power twice accuracy level. Thus, results presented understate
number positive splits. results examine proportion experiments
found least one benecial manipulation, well proportion
splits benecial (out integer splits).
8.2 Empirical Results
rst present results regarding ShapleyShubik index. First foremost,
results indicate weighted voting domain manipulable, least method
generating random weighted voting games. values tried variance
player weights number players game, 95.5% experiments
even naive manipulation algorithm managed uncover least one benecial
manipulation. indicates games enough try integer splits (or
splits uniform intervals) use tractable method approximating power indices
uncover benecial manipulations. Figures 2 3 indicate proportion experiments
algorithm succeeds nding benecial split, function variance
players weights number players, respectively. appears success rate
algorithm slightly increases variance increases. obvious trend appears
number players.
One might tempted think benecial splits quite common, experiments least one benecial split. However, turns splits harmful
splits. tested settings, less 40% splits benecial splits.
settings, harmful splits accounted 70% splits. Figure 4 Figure 5,
indicate proportion benecial splits, function variance players weights
number players, respectively.
examined distribution proportion benecial splits across
experiments. generated games, benecial splits quite rare, less
single percent splits benecial. generated games, benecial splits
common case, 99% splits benecial. Figure 6 shows distribution
(histogram) proportion benecial splits, across games. create gure,
games partitioned 200 bins, according proportion benecial splits
game. bin size 0.5% (e.g., proportion benecial manipulations
81

fiAziz, Bachrach, Elkind, & Paterson

Figure 2: Proportion experiments naive algorithm nds benecial split
dierent variances players weights (ShapleyShubik index)

Figure 3: Proportion experiments naive algorithm nds benecial split
dierent numbers players (ShapleyShubik index)

82

fiFalse-Name Manipulations WVGs

Figure 4: Proportion benecial splits dierent variances players weights (Shapley
Shubik index)

Figure 5: Proportion benecial splits dierent numbers players (ShapleyShubik
index)

83

fiAziz, Bachrach, Elkind, & Paterson

Figure 6: Distribution (histogram) proportion positive splits across games
(ShapleyShubik index)

100-th bin 0.5 0.55). value X axis Figure 6 proportion
benecial splits (the bin), axis number experiments falling
category. Figure 6 shows games ones benecial splits rare
harmful splits, distribution long tail, even games almost
splits benecial uncommon.
turn examine Banzhaf index. case ShapleyShubik index,
Banzhaf index weighted voting domain susceptible manipulation.
tested settings, 92.5% experiments manipulation algorithm
managed uncover least one benecial manipulation (slightly less 95.5%
ShapleyShubik index). proportion experiments algorithm nds
benecial split respect Banzhaf index shown Figure 7 (for dierent values
variance) Figure 8 (for dierent number players).
Similarly case ShapleyShubik index, Banzhaf index benecial splits
less common case, splits harmful splits, less 45%
splits benecial, typically 40% benecial splits (slightly higher
ShapleyShubik index). Unlike ShapleyShubik index, Banzhaf index,
proportion benecial splits among splits increases variance (Figure 9).
However, proportion clear trend regard number players
(Figure 10).
distribution proportion benecial splits across games Banzhaf index
seems quite similar ShapleyShubik index (see Figure 11). Again,
games, majority splits harmful, distribution long tail, many
84

fiFalse-Name Manipulations WVGs

Figure 7: Proportion experiments naive algorithm nds benecial split
dierent variances players weights (Banzhaf index)

Figure 8: Proportion experiments naive algorithm nds benecial split
dierent numbers players (Banzhaf index)

85

fiAziz, Bachrach, Elkind, & Paterson

Figure 9: Proportion benecial splits dierent variances players weights (Banzhaf
index)

Figure 10: Proportion benecial splits dierent numbers players (Banzhaf index)

86

fiFalse-Name Manipulations WVGs

Figure 11: Distribution (histogram) proportion positive splits across games
(Banzhaf index)

games mostly benecial splits. Although distribution seems similar
ShapleyShubik index, tail distribution seems slightly fatter Banzhaf
index.
conclude, experiments indices present similar picture. games
generated model, mostly harmful splits. However, many experiments
many positive splits, even almost splits benecial. Games
trying integer splits yield successful manipulation rare,
although exist. Thus, games generated model, even extremely
simple manipulation algorithm nds benecial splits. conclude despite hardness
results paper, practice believe quite easy nd splits, thus
believe attacks pose real problem many settings.

9. Splitting Two Identities
far, mostly discussed gain (or loss) player achieve splitting
two identities. However, possible player use three false names.
Potentially, number identities player use large weight (and
weights required integers, even innite). would interesting see
results hold general setting. example, computational
hardness result holds splits number identities, algorithmic results
previous section apply splits constant number new identities. obvious
open problem design pseudopolynomial algorithm nding benecial integer
87

fiAziz, Bachrach, Elkind, & Paterson

split number identities, prove problem NP-hard even small
weights (i.e., weights polynomial n). Another question interest
extend upper lower bounds Section 4 setting.
One might think nding benecial split k 2 identities easier nding
one uses exactly two identities: all, two-way split transformed
split three players two players non-zero weight. However,
turns restrict attention non-trivial splits, i.e., one
new players non-zero weight, longer case.
Example 25. Consider game G = [6; 5, 5]. game, winning coalition
includes players, ShapleyShubik indices given 1 (G) = 2 (G) = 1/2.
Suppose player 2 splits two identities 2 2 . selection integer
weights w2 > 0, w2 > 0 satisfy w2 + w2 = 5, new game G = [6; 5, w2 , w2 ]
2 (G ) = 2 (G ) = 1/3. Indeed, game player pivotal permutation
occurs second position, happens probability 1/3. Hence,
non-trivial split two identities increases payo second player factor
(2/3)/(1/2) = 4/3.
Now, suppose second player splits 5 new players weight 1 each.
new game, player 1 pivotal permutation occur
rst position permutation, ShapleyShubik index 5/6. Consequently,
sum ShapleyShubik indices remaining players (i.e., new identities player 2)
1/6. Therefore, split decreases payo player 2 factor 3. summarize,
non-trivial integer split 2 identities benecial player 2, integer split
5 identities positive weight harmful him.
Remark 26. Example 25 generalized games form GN = [N + 1; N, N ]
arbitrary integer N > 0. reasoning shows one players decides
split N new players weight 1 each, increases ShapleyShubik index
player N/(N + 1) hence decreases total payo splitting player
factor (N + 1)/2. representation size game polynomial log N ,
decrease exponential description size.

10. Conclusions
considered false-name manipulations weighted voting games respect
payo schemes based ShapleyShubik index Banzhaf index.
considered manipulation via annexation voluntary merging respect payo
schemes. examined limits manipulation (Table 1) complexity
manipulation (Table 2), complemented theoretical investigation empirical
analysis.
shown that, scenarios considered paper, testing whether
benecial manipulation exists NP-hard. One may ask whether hardness results
provide adequate barrier manipulation, given power indices
hard compute. words, dont simultaneously assume weights small
(and hence computing indices easy) large (and hence manipulation hard)?
resolve apparent contradiction, note power indices considered paper
88

fiFalse-Name Manipulations WVGs

2
n+1 (G)

Bounds
(G ) + (G )

2n
n+1 (G)

(G) (G&({i}S) ) 1.
1
n+1 (G)

(G ) + (G ) 2i (G)

(G)
2

(G&({i,j}) ) 1.

Reference
Theorems 5 6
Proposition 18
Theorems 7 8
Corollary 22

Table 1: Bounds eects false-name manipulations WVGs

Splitting
Merging
Annexation
Splitting unanimity game
Merging unanimity game
Annexation unanimity game
(Felsenthal

Banzhaf index
NP-hard
NP-hard
NP-hard
advantageous
disadvantageous
advantageous

ShapleyShubik index
NP-hard
NP-hard
advantageous
advantageous
disadvantageous
advantageous

& Machover, 1998)

Table 2: Complexity false-name manipulations WVGs
correspond voting power, players may try increase voting power
weight-splitting manipulation even cannot compute it. Also, power index
used compute payments, center, performs computation, may
computational power individual players.
experimental results show that, moderately large weights, weight-splitting manipulation easy practice. However, algorithm relies considering integer splits,
i.e., running time least linear manipulators weight. interesting open question whether case benecial split exists, found testing
number splits logarithmic manipulators weight.
results indicate ShapleyShubik index Banzhaf index behave similarly respect false-name manipulation; however, ShapleyShubik index appears
desirable solution concept annexation decrease payo
player. Exploring solution concepts behavior respect false-name
manipulation natural next step; particularly suitable solution consider could
nucleolus, always exists unique.
study weighted voting many applications, political science
multiagent systems. several possible interpretations identity-splitting
contexts, obtaining higher share grand coalitions gains
distributed according ShapleyShubik index Banzhaf index, obtaining
political power splitting political party several parties similar political platforms. rst case, false-name manipulation hard detect open anonymous
89

fiAziz, Bachrach, Elkind, & Paterson

environments, thus eective. second case, manipulation done
using legitimate tools political conduct. Therefore, conjecture false-name manipulation widespread real world may become serious issue multiagent
systems. therefore important develop better understanding eects
behavior and/or design methods preventing it.

Acknowledgments
Haris Aziz Mike Paterson partially supported DIMAP (the Centre Discrete
Mathematics Applications). DIMAP funded UK EPSRC grant
EP/D063191/1. Partial support Azizs research provided Deutsche
Forschungsgemeinschaft grants BR-2312/6-1 (within European Science Foundations EUROCORES program LogICCC) BR 2312/3-2. Edith Elkind partially
supported ESRC grant ES/F035845/1 Singapore NRF Research Fellowship 2009-08.

References
Algaba, E., Bilbao, J. M., & Fernandez, J. R. (2007). distribution power
European Constitution. European Journal Operational Research, 176 (3), 1752
1755.
Aziz, H., & Paterson, M. (2008). Computing voting power easy weighted voting games.
CoRR, abs/0811.2497.
Aziz, H., & Paterson, M. (2009). False name manipulations weighted voting games:
splitting, merging annexation. Proceedings 8th International Joint Conference Autonomous Agents Multi-Agent Systems (AAMAS), pp. 409416.
Aziz, H., Paterson, M., & Leech, D. (2007). Ecient algorithm designing weighted
voting games. Proceedings 11th IEEE International Multitopic Conference,
pp. 16. IEEE Computer Society.
Bachrach, Y., & Elkind, E. (2008). Divide conquer: False-name manipulations
weighted voting games. Proceedings 7th International Joint Conference
Autonomous Agents Multi-Agent Systems (AAMAS), pp. 975982.
Bachrach, Y., Markakis, E., Resnick, E., Procaccia, A. D., Rosenschein, J. S., & Saberi, A.
(2010). Approximating power indices: theoretical empirical analysis. Autonomous
Agents Multi-Agent Systems, 20 (2), 105122.
Banzhaf, J. F. (1965). Weighted voting doesnt work. Rutgers Law Review, 19, 317343.
Bartholdi, J., & Orlin, J. (1991). Single transferable vote resists strategic voting. Social
Choice Welfare, 8 (4), 341354.
Bartholdi, J., Tovey, C., & Trick, M. (1989). computational diculty manipulating
election. Social Choice Welfare, 6 (3), 227241.
Bartholdi, J., Tovey, C., & Trick, M. (1992). hard control election?. Mathematical Computer Modeling, 16 (8/9), 2740.
90

fiFalse-Name Manipulations WVGs

Brams, S. (1975). Game Theory Politics. Free Press, New York.
de Keijzer, B., Klos, T., & Zhang, Y. (2010). Enumeration exact design weighted
voting games. Proceedings 9th International Joint Conference Autonomous
Agents Multi-Agent Systems (AAMAS), pp. 391398.
Deegan, J., & Packel, E. W. (1978). new index power simple n-person games.
International Journal Game Theory, 7, 113123.
Dubey, P., & Shapley, L. S. (1979). Mathematical properties Banzhaf power index.
Mathematics Operations Research, 4 (2), 99131.
Elkind, E., Chalkiadakis, G., & Jennings, N. R. (2008a). Coalition structures weighted
voting games. Proceedings 18th European Conference Articial Intelligence
(ECAI), pp. 393397.
Elkind, E., Goldberg, L. A., Goldberg, P., & Wooldridge, M. (2008b). dimensionality
voting games. Proceedings 23rd AAAI Conference Articial Intelligence
(AAAI), pp. 6974. AAAI Press.
Elkind, E., Goldberg, L. A., Goldberg, P. W., & Wooldridge, M. J. (2007). Computational
complexity weighted threshold games. Proceedings 22nd AAAI Conference
Articial Intelligence (AAAI), pp. 718723. AAAI Press.
Elkind, E., & Pasechnik, D. (2009). Computing nucleolus weighted voting games.
Proceedings 20th Annual ACM-SIAM Symposium Discrete Algorithms
(SODA), pp. 327335.
Ephrati, E., & Rosenschein, J. (1997). heuristic technique multi-agent planning.
Annals Mathematics Articial Intelligence, 20 (14), 1367.
Faliszewski, P., Elkind, E., & Wooldridge, M. (2009). Boolean combinations weighted
voting games. Proceedings 8th International Joint Conference Autonomous
Agents Multi-Agent Systems (AAMAS), pp. 185192.
Faliszewski, P., & Hemaspaandra, L. A. (2009). complexity power-index comparison.
Theoretical Computer Science, 410 (1), 222245.
Faliszewski, P., & Procaccia, A. (2010). AIs war manipulation: winning?. AI
Magazine, 31 (4).
Fatima, S. S., Wooldridge, M., & Jennings, N. R. (2007). randomized method
Shapley value voting game. Proceedings 6th International Joint
Conference Autonomous Agents Multi-Agent Systems (AAMAS), pp. 18.
Fatima, S. S., Wooldridge, M., & Jennings, N. R. (2008). anytime approximation method
inverse Shapley value problem. Proceedings 7th International Joint
Conference Autonomous Agents Multi-Agent Systems (AAMAS), pp. 935942.
Felsenthal, D., & Machover, M. (1998). Measurement Voting Power. Edward Elgar
Publishing, Cheltenham, UK.
Holler, M. J., & Packel, E. W. (1983). Power, luck right index. Journal Economics,
43, 2129.
91

fiAziz, Bachrach, Elkind, & Paterson

Iwasaki, A., Kempe, D., Saito, Y., Salek, M., & Yokoo, M. (2007). False-name-proof mechanisms hiring team. Proceedings 3rd International Workshop Internet
Network Economics (WINE), pp. 245256.
Johnston, R. J. (1978). measurement power: reactions Laver. Environment Planning A, 10, 907914.
Kilgour, D. M., & Levesque, T. J. (1984). Canadian constitutional amending formula:
Bargaining past future. Public Choice, 44 (3), 457480.
Laruelle, A. (1999). choice power index. Working papers, serie AD 1999-10,
Instituto Valenciano de Investigaciones Economicas.
Laruelle, A., & Valenciano, F. (2005). critical reappraisal voting power paradoxes.
Public Choice, 125, 1741.
Laruelle, A., & Widgren, M. (1998). allocation voting power among EU states
fair?. Public Choice, 94 (3-4), 317339.
Lasisi, R., & Allan, V. (2010). False name manipulations weighted voting games: Susceptibility power indices. Thirteenth International Workshop Trust
Agent Societies (TRUST), pp. 139150.
Leech, D. (2002). Voting power governance International Monetary Fund.
Annals Operations Research, 109 (1), 375397.
Leech, D., & Leech, R. (2005). Power vs weight IMF governance: possible benecial implications united European bloc vote. Buira, A. (Ed.), Reforming
Governance IMF World Bank, pp. 251282. Anthem Press.
Machover, M., & Felsenthal, D. S. (2001). Treaty Nice qualied majority voting.
Social Choice Welfare, 18 (3), 431464.
Mann, I., & Shapley, L. S. (1960). Values large games, IV: Evaluating electoral college
Montecarlo techniques. Rand Corporation, RM-2651.
Mann, I., & Shapley, L. S. (1962). Values large games, VI: Evaluating electoral college
exactly. Rand Corporation, RM-3158.
Matsui, T., & Matsui, Y. (2000). survey algorithms calculating power indices
weighted majority games. Journal Operations Research Society Japan, 43 (1),
7186.
Matsui, Y., & Matsui, T. (2001). NP-completeness calculating power indices weighted
majority games. Theoretical Computer Science, 263 (1-2), 305310.
Ohta, N., Conitzer, V., Satoh, Y., Iwasaki, A., & Yokoo, M. (2008). Anonymity-proof
Shapley value: extending Shapley value coalitional games open environments.
Proceedings 7th International Joint Conference Autonomous Agents
Multi-Agent Systems (AAMAS), pp. 927934.
Ohta, N., Iwasaki, A., Yokoo, M., Maruono, K., Conitzer, V., & Sandholm, T. (2006).
compact representation scheme coalitional games open anonymous environments. Proceedings 21st AAAI Conference Articial Intelligence (AAAI),
pp. 697702.
92

fiFalse-Name Manipulations WVGs

Owen, G. (1975). Multilinear extensions Banzhaf value. Naval Research Logistics
Quarterly, 22 (4), 741750.
Papadimitriou, C. H., & Yannakakis, M. (1994). complexity bounded rationality.
Proceedings 26th Annual ACM Symposium Theory Computing
(STOC), pp. 726733. ACM.
Rey, A., & Rothe, J. (2010). Complexity merging splitting probabilistic
banzhaf power index weighted voting games. 19th European Conference
Articial Intelligence (ECAI 2010), pp. 10211022.
Shapley, L. S. (1953). value n-person games. Kuhn, H. W., & Tucker, A. W. (Eds.),
Contributions Theory Games, II, pp. 307317. Princeton University Press.
Shapley, L. S. (1973). Political science: Voting bargaining games. Selby, H. A. (Ed.),
Notes Lectures Mathematics Behavioral Science, pp. 3792. Mathematical
Association America.
Shapley, L. S., & Shubik, M. (1954). method evaluating distribution power
committee system. American Political Science Review, 48 (3), 787792.
Stran, P. D. (1977). Homogeneity, independence power indices. Public Choice, 30,
107118.
Taylor, A., & Zwicker, W. (1999). Simple Games: Desirability Relations, Trading, Pseudoweightings. Princeton University Press, New Jersey.
van Deemen, A., & Rusinowska, A. (2003). Paradoxes voting power dutch politics.
Public Choice, 115 (13), 109137.
von Neumann, J., & Morgenstern, O. (1944). Theory Games Economic Behavior.
Princeton University Press.
Yokoo, M. (2007). False-name bids combinatorial auctions. SIGecom Exchanges, 7 (1),
4851.
Yokoo, M., Conitzer, V., Sandholm, T., Ohta, N., & Iwasaki, A. (2005). Coalitional games
open anonymous environments. Proceedings 20th AAAI Conference
Articial Intelligence (AAAI), pp. 509515.
Zuckerman, M., Faliszewski, P., Bachrach, Y., & Elkind, E. (2008). Manipulating quota
weighted voting games. Proceedings 23rd AAAI Conference Articial
Intelligence (AAAI), pp. 215220.

93


