journal artificial intelligence

submitted published

line scheduling
application controlling modular printers
wheeler ruml

ruml cs unh edu

department computer science
university hampshire
academic way
durham nh usa

minh binh
rong zhou
markus p j fromherz

minhdo parc com
rzhou parc com
fromherz parc com

palo alto center
coyote hill road
palo alto ca usa

abstract
present case study artificial intelligence techniques applied control
production printing equipment many real world applications complex domain requires high speed autonomous decision making robust continual operation
knowledge work represents first successful industrial application embedded
domain independent temporal system handles execution failures multiobjective preferences heart line combines techniques
state space partial order scheduling suggest general architecture may prove useful applications intelligent systems operate continual
line settings system used drive several commercial prototypes
enabled product architecture industrial partner compared
state art line planners system hundreds times faster often finds
better plans experience demonstrates domain independent ai
heuristic search flexibly handle time resources replanning multiple objectives
high speed practical application without requiring hand coded control knowledge

introduction
sustaining goal artificial intelligence develop techniques enabling autonomous
agents robustly achieve multiple interacting goals dynamic environment goal
intellectually attractive happens align perfectly needs
many commercial manufacturing plants focus one particular manufacturing setting high speed digital production printing systems large machines use
xerography print requested images individual sheets unlike traditional
continuous feed offset presses digital printers treat sheet differently feeding different types sizes media printing different kinds images performing different
preparatory finishing operations often single integrated machine transform
blank sheets complete document bound book folded bill sealed
envelope sometimes even possible process different kinds jobs simultaneously
c

ai access foundation rights reserved

firuml zhou fromherz

equipment printer controller must plan quickly reliably otherwise expensive human intervention required designing high performance yet cost effective
controller machines made difficult current trend towards increased
modularity customers system unique includes components
appropriate needs working closely xerox
corporation explore architectures printing systems composed literally hundreds modules possibly including multiple specialized printing modules working
together high speed
demonstrate techniques artificial intelligence used
control machines requests print jobs become goals system achieve
actuators mechanisms machine become actions resources used
achieving goals sensors provide feedback action execution state
system provide high productivity thus high return investment
equipment owner control techniques must fast produce optimal
near optimal plans reduce need operator oversight allow use
complex mechanisms system must autonomous autonomic possible
operators make mistakes even highly engineered system modules fail
system must cope execution failure unexpected events
system must work legacy modules order commercially viable architecture
must tolerate components direct control
meet requirements present novel architecture line execution replanning synthesizes techniques state space ghallab nau
traverso partial order scheduling smith cheng develop
heuristic evaluation functions temporal incorporate effects
resource constraints although domain independent ai often regarded
expensive use soft real time setting system achieves good performance without
hand coded control rules despite additional requirements reasoning temporal actions resources avoiding domain dependent search control knowledge
becomes possible use planner run different printing systems full productivity success system enabled modular product architecture
span multiple markets much previous work brought constraint scheduling
daily use print shops offices world wide fromherz saraswat bobrow
fromherz bobrow de kleer work bring domain independent temporal
continual widespread use everyday people practical
efficient showcases flexibility inherent viewing heuristic search
discussing application context detail present overview
system followed detailed discussion major aspects nominal exception handling multiple objectives go present empirical measurements
demonstrating large printing systems controlled system meeting
real time requirements particular section describes comparison stateof art generic line planners demonstrates planner finds plans hundreds
times faster often higher quality line appendix provides videos
planner controlling hardware prototype integrated line
scheduling allows us achieve high throughput even complex systems


fion line scheduling modular printers

figure prototype modular printer built parc system composed approximately individually controlled modules including four print engines

conclude summary general lessons derived building
application

application context
analogy parallel systems raid storage modular printing
systems called rack mounted printing rmp rmp system seen network
transports linking multiple printing engines transports known media
path figure shows four engine prototype printer built palo alto center
parc independently controlled modules figure provides schematic
side view showing many possible paths linking feeders possible
output trays video line appendix nominal simulation presents animation
figure multiple feeders allow blank sheets enter printer high rate
multiple finishers allow several print jobs run simultaneously redundant paths
machine enables graceful degradation performance modules fail
building system relatively small modules enable easy reconfiguration


firuml zhou fromherz

figure schematic side view modular printer indicating feeders path
output trays

components add modules functionality achieving benefits however poses
considerable control challenge
modular printing domain reminiscent mass customization massproduced products closely tailored personalized individual customers needs
similar package routing logistics control perspective
involves scheduling series sheet requests arrive asynchronously
time front end print job submission rendering engine system runs
high speed several sheet requests arriving per second possibly many hours
sheet request completely describes attributes desired final product may
several different sequences actions used print given sheet example
figure blank sheet may fed two feeders routed
one four print engines combination two four engines
case duplex printing finisher unless sheet part going
print job
line complicated fact many sheets flight
simultaneously plan sheet must interfere sheets
actions require use physical printer components later sheets must take
account resource commitments plans already released production
modern printers highly configurable execute large variety jobs potentially
simultaneously large variety constraints feasible plans hard coded
locally reactive plans suffice fromherz et al fact printer engineers
xerox delight uncovering situations products competing manufacturers
use model attempt execute infeasible plans


fiprinter
model

translator

line scheduling modular printers

domain
description

planner

failures

translator


description
sheet
description

constraints

stn

plans
time info
itineraries

goals

plan manager

rejections
failures
updates

machine
controller

figure system architecture system indicated dashed box

system must decide print requested sheets quickly possible
thus must determine plan schedule sheet end time
plan finishes last minimized words planner attempts minimize
makespan combined global plan sheets essence optimizing systems
overall throughput typically many feasible plans given sheet request
quickly one minimizes optimal plan sheet depends
sheet request resource commitments present previouslyplanned sheets legal series actions easily scheduled pushing
far future entire printer become completely idle course
desirable line task set sheets grows time passes
plan execution e printing interleaves plan creation fact
real world wall clock end time want minimize production
sheet cannot start planned speed planner affects value
plan however system often runs full capacity thus planner usually need
plan rate sheets completed may several per second
challenging domain forgiving feasible schedules found quickly
sub optimal plans acceptable plan execution relatively reliable
printer controller works line real time continual environment
three going processes line arrival goals known goals
execution previously synthesized plans figure shows inputs outputs
system domain model sheet requests entering left
communication low level control system right plan manager
responsible tracking status goal invoking planner necessary
execution occur sequentially given sheet processes
usually interleaved different sheets figure sketches different steps
sheet plan life cycle managed plan manager specifically upon receiving sheets
put unplanned first first queue sheets sheet planner picks
one sheet time unplanned queue tries route plan
sheet sheet plan found put queue plans havent yet
sent printer controller sheets another plan manager process regularly
checks planned queue decide earliest starting time plan queue


firuml zhou fromherz

sheet
sheet
sheet

sheet

sheet

start time

sheet

sheet

sheet
ddescriptions
ti

yet
planned


planned

planned
unsent

sent
printer

figure stages life sheet system
close enough current wall clock time send plans printer controller
execution sheets note figure time advances downward plans
starting earlier higher figure sheets finish order sheets
belongs different job scheduled run concurrently
application additional negotiation step plan issued
system plan committed first plan step proposed
machine controller modules involved individual hardware modules
steps accept proposed actions plan committed discuss
commitment means modules become responsible notifying controller fail
complete action realize able perform planned action
future plan confirmed planner cannot modify thus
benefit releasing plans machine controller start times
modules confirm machine controller notifies system
proposed plan rejected system must produce plan negotiation
process one reason must complete plan starting execution
module limited number discrete actions perform transforming
sheet known deterministic way many actions planner allowed
control duration within range spanning three orders magnitude milliseconds
seconds example planner may choose transport sheet faster slower
module order avoid collisions actions may split sheet two pieces
join multiple sheets different paths printer together means single
printed sheet must created single blank sheet size thereby conflating
sheets material allowing plans linear sequence actions domain
adjacent actions must meet time sheets cannot left lingering inside printer
action completed must immediately begin transported next location
sheets grouped print jobs job ordered set sheets must
eventually arrive destination order submitted
multiple jobs may production simultaneously although sheets different


fion line scheduling modular printers

jobs allowed interleave single destination number concurrent jobs
limited number destinations e finisher trays
currently xerox uses constraint scheduler control high end midrange printers fromherz et al scheduler enumerates possible plans
machine starts stores database printing requests arrive line
scheduler picks first feasible plan database uses temporal constraint
processing schedule actions decoupling scheduling insufficient
complex machines two reasons first number possible plans large
generate ahead time indeed becomes infinite loops present printer
shown figure second precompiled plans poor choices given existing
sheets system example sheets fed different feeders depending
previous sheets fed large long dwell
print engines function sheet thickness material high
performance must integrate scheduling line fashion
occasionally module break failing perform committed action modules
take line intentionally example perform internal calibration
diagnosis modules may added subtracted system information
passed machine controller system right side figure
vision rmp system provide highest possible level productivity
safe including running long periods degraded capabilities meeting
mandate context highly modular systems means precomputing limited set
canonical plans limiting line computation scheduling desirable
large system modules infeasibly many possible degraded configurations
consider depending capabilities machines number possible sheet
requests may make plan precomputation infeasible furthermore even best precomputed plan given sheet may suboptimal given current resource commitments
printing machine
summarize domain finite state fully observable specifies classical goals
achievement however line additional goals arriving asynchronously
actions real valued durations use resources plans goals must respect
resource allocations previous plans execution failures domain model changes
occur line rare

system overview
complete printing system encompasses many components including print job submission
print job management sheet management image rendering
distribution low level module control media handling hardware exception handling
focuses issues sheet level including exception handling
discussing one issue great detail section provides overview
topics involve sheet directly including hardware control exception
handling
example safety operator system continue use module whose access
cover opened even hypothetically possible repair one portion module
another use



firuml zhou fromherz

time step












feed
print



loop
finish


































figure two different schedules printing duplex sheet simplex sheet
launching sheets order improves throughput

figure shows basic architecture system communicates
machine controller overall objective minimize makespan
combined global plan sheets essence optimizing systems throughput
approximate one sheet time objective sheet
finish quickly possible respecting ordering constraints may
sheets sheets optimally planned individual basis order arrival without
reconsidering plans selected previous sheets figure plan manager calls
planner sheet records resulting plan mitigate restrictiveness
greedy scheme represent action times temporal constraints instead absolute
times constraints stored simple temporal network dechter meiri pearl
marked stn figure maintaining temporal flexibility long possible
shift plans older sheets later time make room starting sheet earlier
improves overall machine throughput may sound rare case
quite common figure illustrates simplex single sided cover sheet followed
duplex double sided sheet faster overall launch second sheet first
although basic architecture specifically adapted line setting planner uses domain dependent search control knowledge furthermore mix goaldecomposable cross goal resource constraints quite common believe
framework useful ai system needs interleave real time decision
making execution robot operations

implemented temporal planner architecture adapted
line domain see large number potential plans given
sheet close interaction plans schedules means much
better process scheduling constraints process allow focus
actions executed soon planner uses state space regression
temporal information stored stn stn records feasible interval
time point plan time points restricted occur specific single times
posted constraints demand planner maintains partial orders
different actions plans different sheets stn conducting


fion line scheduling modular printers

lineplanner
plan next sheet
unsent plan starts soon

foreach plan oldest imminent one

clamp time points earliest possible times

release plan machine controller
plansheet
search queue final state
loop

dequeue promising node

initial state return
foreach applicable action

apply action

add temporal constraints

foreach potential resource conflict

generate orderings conflicting actions

enqueue feasible child nodes
figure outline hybrid planner
backward state space search seen hybrid state space search
partial order sketch planner given figure outer loop
corresponds plan manager figure
sheet outer loop checks queue planned sheets see
begin soon step imperative recheck queue periodic
basis soon defined constant amount current time
assume time plan next sheet smaller constant
value constant depends domain specifics communication delay
module preparation time currently selected manually assumption violated
interrupt next sheet start later plans released
executed resource contention decrease time plan sheet
decrease well important temporal constraints added outer loop
individual sheets propagation affect feasible sheet end
times thus could invalidate previously computed search node evaluations
underway
maintaining partial orderings actions seems necessary mitigate
one sheet time greedy strategy individual sheets need necessarily
take form state space regression considered forward search strategy
employed many modern planners hoffmann nebel lama
richter helmert westphal initial investigation preliminary empirical comparisons showed progression planner easier implement easier extend
handle additional domain complexities performance regression planner
heuristic significantly better many domain seems


firuml zhou fromherz

due mainly temporal constraint enforcing given sheet end
end time previous sheets batch constraint interacts well
searching backward goal immediately constraining end time plan
together constraint actions must abut time many possible orderings
resolving resource contention immediately ruled example current sheet
cannot transported destination previous sheet batch
addition orderings may immediately push end time plan even later
informing node evaluation function
planner searches forward direction benefits slightly avoiding logical
states unreachable initial state however without similar temporal
constraint first action plan resource allocation orderings pruned
branching due resource contention increases direct proportion number
plans previous sheets maintained plan manager furthermore end time
plan rarely changes far processes making heuristic less
useful short first sheet performance forward backward planners
similar number plans managed plan manager increases backward
planner seems perform better
due details machine controller software planner must release plans
machine controller order sheet requests submitted
means sheets submitted imminent sheet must released along step
stage allowable intervals sheets time points forcibly reduced
specific absolute times step sensibly enough ask point occur exactly
earliest possible time temporal network uses complete
maintain allowable window time point variation cervoni cesta oddi
guaranteed propagation caused temporal clamping process
introduce inconsistencies clamping happens plans issued thus
face line dispatchability muscettola morris tsamardinos

current line setting even though plan multiple sheets belonging
different jobs build plans single sheet time even many submitted
sheets waiting planned strategy reasonable given sheets arrived sequence
arrival last sheet know many sheets job
planner receive individual sheet specifications waiting sheets
known impractical many production jobs billing payroll involve jobs
many thousands sheets run multiple days
control
shown figure system consists two feeders left two finishing trays
right four print engines one four quadrants printer
three high speed sheet highways connect feeders finisher trays
sheets traveling top bottom highways routed print engines
ramps ramps increased modularity highways
ramps made two types modules straight modules
three way modules module processor texas instruments f


fion line scheduling modular printers

figure control system architecture

dsp modules run distributed state estimation control
communicate via five controller area network buses plus
dedicated data logging bus debugging purposes modules quadrant
printer reside bus except four print engines
separate bus sheets moved roller actuators called nips driven
independently controlled stepper motors sensory feedback nip equipped
edge detection sensor sides nip three way module three
solenoids drive flipper actuators direct sheet along different paths
figure shows control system architecture implements hierarchical distributed plan execution sheet controller manages module
controllers currently soon contact sheet thus sheet
controller group membership dynamic life cycle sheet starting
feeder way finisher tray soon sheet sent machine controller corresponding sheet controller created resides centralized processor
even though module controllers manages reside locally modules
note module controller may processing commands multiple sheet controllers
case module controller middle figure still contact
first sheet soon contact second sheet
sheet span multiple modules printer different nips acting
sheet must tightly synchronized order avoid damaging jamming sheet
however achieving exact synchronization network uncertain communication
delays stringent bandwidth challenging moreover one must consider limited
computation power module design synchronization scheme example
controller sample time set milliseconds thus anything takes longer
milliseconds compute within sampling period work eliminate effects
uncertain network delays control system uses delay equalizer buffers sensory
feedback messages apply time make sure sensor information used
time members group module controllers sheet save
bandwidth needed synchronization controller uses internal estimators
keep track states controllers network order limit need


firuml zhou fromherz

communications crawford hindi zhou larner hindi crawford fromherz

limited network bandwidth fundamental impact choice control initially linear quadratic gaussian lqg franklin powell workman
controller used nice property solution constitutes linear dynamic feedback control law easily computed however bandwidth requirements
lqg controller necessitates dozen way points per sheet
sent network prompted adoption different kind controller
proximate time optimal servo ptos hindi crawford zhou eldershaw
franklin et al consumes much less bandwidth comparison ptos
controller reduces number intermediate way points dozen two
per sheet since ptos time optimal control uses maximum acceleration deceleration reach target control state maximizes temporal
flexibility actions planner use thus improving overall
throughput printer
previous work
much interest last years integration scheduling techniques hsts muscettola ixtet ghallab laruelle examples systems select order actions necessary reach goal
specify precise execution times actions visopt shopfloor system bartak
uses constraint logic programming incorporate aspects
scheduling europa system frank jonsson uses novel representation attributes intervals system use domain representations
quite different mainstream pddl language fox long used
designed line use rather controlling system
continual execution
currently great interest extending scheduling techniques handle complexities found real industrial applications example pddl
extended handle continuous quantities durative actions additional
dimensions complexity besides expressivity however work complements
trend current extend expressiveness focusing middle ground scheduling domain semantics printing
complex job shop scheduling simpler many ways pddl choice
actions perform important domain managing resource conflicts equally
important classical scheduling resource constraints essential printer
modules often cannot perform multiple actions action selection sequencing required given sheet usually achieved several different
sequences actions
domain formalization lies partial order scheduling temporal pddl
optimal actions needed fulfill given print job request may vary depending sheets machine sequence actions predetermined
classical scheduling formulations job shop scheduling resource constrained
project scheduling expressive enough domain clearly subsumes job shop


fion line scheduling modular printers

flow shop scheduling precedence constraints encoded unique preconditions
effects open shop scheduling one choose order predetermined set
actions job capture notion alternative sequences actions
thus limited positive theories palacios geffner allow actions real valued durations allocate resources cannot delete
atoms means cannot capture even simple transformations movement
fundamental domain fact optimal plans domain may even involve executing action multiple times something unnecessary
purely positive domain however numeric effects full durative action generality
pddl necessary
line nature task unambiguous objective function
additional trade domain time execution time
absent much prior work scheduling setting set sheets
revealed incrementally time unlike classical temporal entire
instance available contrast much work continual
desjardins durfee ortiz wolverton tight constraints domain require
produce complete plan sheet execution begin domain
emphasizes line decision making received limited attention date
objective complete known print jobs soon possible taking long
synthesize slightly shorter plan worse quickly finding near optimal solution
especially true rerouting flight sheets exception handling
although present system temporal planner fits easily tradition
constraint scheduling smith cheng policella cesta oddi smith
main difference actions time points resource allocations added
incrementally rather present start search process central
process identifying temporal conflicts posting constraints resolve computing
bounds guide search remains attempt maintain
conflict free schedule rather allowing contention accumulate carefully
choosing conflicts resolve first perhaps similar spirit
taken ixtet system ghallab laruelle
basic coordinating separate state space searches via temporal constraints may well suitable line domains individual
print jobs managing multiple plans time strategy similar spirit
planners partition goals subgoals later merge plans individual goals wah
chen koehler hoffmann framework even though print job
planned locally plan manager along global temporal database ensures
temporal resource inconsistencies step search would
interesting see strategy could used solve partitionable strips
effectively

nominal sheet
sheet planner builds plan sheet job combination regression
state space partial order scheduling plans adding one module action
time starting finisher sequence actions reaches feeder adding


firuml zhou fromherz

action sheets itinerary e plan causes resource allocations made
resources required execution action given media path redundancies
rmp planner usually faces multiple choices action add
step organize search planner uses best first search graph
heuristic adjusted resource conflicts estimates promising plan suffix
unlike traditional regression planners maintain maximum flexibility action times
start end action resource allocation represented
flexible time points instead absolute times temporal constraints used represent
durations actions resolve resource contention imposing orderings among actions
planner attempts minimize makespan combined global plan sheets
essence optimizing systems throughput planner uses domain dependent
search control knowledge allowing us use planner run different printing
systems full productivity
domain language
used two tiered represent rmp domain highest level
use specialized language makes easier xerox engineers model printers
language specifies printer configurations components connected
basic components different capabilities components grouped
hierarchical structure model files format automatically translated
variation pddl fed planner automatic translation
process instantiates primitive modules converts modules capabilities
durative actions movement sheet marking actions directly
translated printer model traditional logical preconditions effects test
modify attributes sheet following spirit compositionality earlier work
fromherz et al model system automatically synthesized
individual components
pddl distinguish two types input planner
begins domain description containing predicate action templates provided
descriptions arrive line containing initial goal states sets
literals describing starting desired configurations action representation
similar durative actions pddl notable difference use
explicit representation resources actions specify exclusive use different types
resources time intervals specified relative actions start end time executing
one action may involve allocating multiple resources types unit capacity
multi capacity cyclic state resources actions specify real valued duration
bounds one specify upper lower bounds let planner choose
desired duration action critical modeling controllable speed
paths useful practice pddl allows specification duration
ranges aware ipc benchmark general purpose planner
supports
summarize core part domain file set actions corresponds
capability component printer tuple hpre eff dur alloci



fion line scheduling modular printers

printsimplexandinvert sheet side color image
preconditions location sheet printer input
blank sheet
sideup sheet side
opposite side side
canprint markingengine color
effects location sheet printer output
location sheet printer input
hasimage sheet side image
blank sheet
sideup sheet side
sideup sheet side
duration seconds seconds
set time second
allocations markingengine start seconds
figure simple action specification
pre eff sets literals representing actions preconditions effects
dur pair hlower upperi scalars representing upper lower bounds
action duration
alloc set triplets hres offset duri indicating action starting time sa
uses resource res interval sa offset sa offset dur constraints
different types resources
unit capacity type resource non sharable thus allocations
given resource type overlap provides good model
physical space common type resource used planner
cyclic cyclic resource one special type unit capacity resources
repeated durations resources unavailable
actions selected planner example unavailable durations may
represent routine automatic maintenance modules
multi capacity upper bound maximum number allocations
given resource type overlap moreover allocations follow
first first order thus two allocations sa ea
sa ea sa sa implies ea ea
state resource resource labeled one set states allocations resource type overlap require
resource state
simple example given figure set time refers required time
action committed execution beginscertain actions require extensive
preparation part module sheet arrives action really


firuml zhou fromherz

background
initial

goal

print job id

sheet
location sheet feeder
blank sheet
sideup sheet side
location sheet upper finisher
hasimage sheet side image
hasimage sheet side image
color sheet side color
color sheet side black white


figure sample sheet specification
performed resource usage printsimplexandinvert action figure specifies
exclusive use markingengine seconds start action
seconds later printer modules multiple independent resources actions
short allocation durations relative overall action duration work multiple
sheets simultaneously pddl arbitrary predicates made hold start
end duration action expressivity needed domain
thus assume simple semantics similar tgp planner smith
weld delete effects happen start add effects happen
end preconditions deleted start preconditions
deleted addition sheet dependent literals sometimes convenient
specify actions preconditions refer literals independent
particular goals sought background knowledge domain supplied
separately machine specification although could compiled action
specifications example possible colors engines put sheet
e g black white color custom color default sides papers e g front back
specified way represented similarly constant concept pddl
addition static domain description line sheet requests modeled
initial goal state pairs describing starting desired sheet configurations
initial goal pair defines object sheet associated literals
planner track specifically description particular sheet tuple
hjob initial goal backgroundi job id print job sheet belongs
initial goal background sets literals
simple example sheet specification given figure example feeder
virtual location sheet sources placed upper finisher one particular
finisher sheets belong print job need routed terms figure
feeder location literal added goal plan manager maintains
table active jobs finisher assigned finisher assignment handled
extracting finisher selected planner plan first sheet job
finishing requires actions plan actions never reconsidered
rescheduled planner never reconsider jobs finisher assignment even hasnt
begun production yet


fion line scheduling modular printers

given domain description top left figure low level delay constant tdelay
capturing latency machine controller software planner accepts stream
sheets arriving asynchronously time note sheets may belong different print
jobs printed parallel within print job sheets need routed
finisher among multiple finishers finish order stream corresponds
standard notion pddl instance sheet planner must eventually
return plan sequence actions labeled start times absolute wall clock time
transform initial state goal state allocations made
unit capacity resource multiple actions must overlap time state multi capacity
resources different constraints described earlier happily plans individual sheets
independent except interactions resources additional constraints
planner include
plans sheets print job id must finish destination
plans sheets print job id must finish order
jobs submitted
first action plan must begin sooner tdelay seconds issued
planner tdelay represents delays communication negotiation
printer module controller
subsequent actions must begin times obey duration constraints specified
previous action thus assumed previous action ends
next action starts
temporal reasoning
printer control rich temporal domain real time constraints wall clock
time plans individual sheets plans different sheets planner machine controller thus fast temporal constraint propagation
consistency checking querying extremely important planner maintain
temporal constraints simple temporal network stn dechter et al
represented box named stn figure essentially network contains set
temporal time points ti constraints form lb ti tj ub
time points managed stn include action start end times resource allocation
start end times temporal constraints maintained stn
constraints wall clock action start time
action start end times within action duration range
constraints action start time resource allocation action
conflicts types resources
use search strategy maintains multiple open search nodes
separate stn node temporal constraints added appropriate stn
search node expanded whenever constraint added propagation tightens


firuml zhou fromherz

time seconds

idpc
ac
















sheet number

figure simple arc consistency faster incremental directed path consistency
maintaining stns

upper lower bounds domain affected time point lead
memory usage extra overhead allows us deal temporal
constraint retraction needed single stn used multiple search nodes
retracting temporal constraints stn complicated time consuming process
planner must run indefinitely perform garbage collection time points
stn sheet episodes harvesting lie past
time points flexible plans belong sent machine
controller sheet plan manager checks queue planned
sheets see could begin soon plans released
machine controller execute temporal constraints added freeze
start end times actions belonging plans sent controller time points
frozen earliest possible wall clock time indicated stn
constraint set constraints cause significant propagation turn freeze
start end times resource allocations related actions frozen plans
tighten starting times actions remaining plans
original representation stn complete matrix time relations updated
pairs shortest paths dechter et al much inefficient purposes
implemented two versions stn one uses incremental directed path
consistency idpc chleq may change values edges
constraint graph well introduce edges requires linear time
minimum maximum interval two time points database
uses arc consistency cervoni et al maintains point minimum


fion line scheduling modular printers

maximum times reference time point latter method one cannot
easily obtain exact relations arbitrary time points relations
however long inconsistency efficiently detected constraints added
need query relations arbitrary pairs points efficiency gains
welcome arcs never added network propagation existing
ones modified means copying network search node
entail copying arcs figure attests dramatic time
savings technique used current implementation improved
implementation change flags facilitate faster cycle detection temporal
consistency checking converting times durations integer values user
defined precision eliminate rounding effects increase speed
sheet
individual sheets regressed state representation contains state
sheet may partially specified search used optimal plan
current sheet context previous sheets optimal plan
sheet found resource allocations stn used plan passed back
plan manager become basis next sheet
one unusual feature seamlessly integrate
scheduling starting times actions fixed merely constrained temporal
ordering constraints stn insist potential overlaps allocations
resource resolved immediately resulting potentially multiple children
single action choice allows temporal propagation update action time bounds
guide plan search plan single sheet totally ordered sequence
actions partial orders actions belong plans different sheets
represent resource conflict resolutions
state representation
plan must feasible context previous plans state contains
information current sheet previous plans specifically state
tuple hliterals tdb rsrcsi
literals describes regressed logical state current sheet distinguish
literals whose status true false unknown le baral zhang tran
distinction false unknown literals important domain may fine grained restrictions acceptable values unspecified
attributes sheet example sheet first given print job
finisher representing final location sheet unknown
finisher allocated another print job plan sheet
executed discuss allow regression match unknown literals
true false effects actions sense unknown function dont
care implementation represent explicitly literals currently
true whose value unknown false literals represented implicitly


firuml zhou fromherz

tdb temporal database represented simple temporal network stn containing
known time points current constraints includes constraints different plans actions plan well
wall clock time examples time points include start end times actions
resource allocations soon plan given sheet sent machine
sheets figure time points associated plan tdb
longer allowed float clamped lower bounds time points
flexible
rsrcs set current resource allocations representing commitments made
plans previous sheets partial plan current sheet resource
allocation form hres tp tp res particular resource tp tp
two time points tdb representing duration res allocated action
note multiple resources domain resource
multiple overlapping non overlapping depending resource type resource
allocations implementation maintain ordered list allocations
resource recent oldest
essence state contains information reflecting strategy planner hybrid state space sequential temporal regression search partial order scheduling
literals action start end time points represent temporal regressed
state rsrcs temporal orderings competing resource allocations represent partial order scheduling constraints actions plans different sheets
branching applicable actions
regressed logical state planner tuple l hlt lf lu lt lf
lu disjoint sets literals true false unknown respectively pre
pre sets positive negative preconditions add del
sets positive negative effects action regression rules used
determine action applicability update state literals
applicability action applicable literal set l none effects inconsistent l preconditions modified effects


consistent l formally add lf del lt


pre lf del pre lt add

many settings additional criterion applicability added witht
destroying completeness least one effect must match l add lt

del lf necessarily valid setting adding
op action may give time existing resource allocation run
enabling actions used might lead shorter plan

update regression l hlt lf lu applicable action derived undoing effects unioning preconditions given literal
l modified effect status unknown regressed state unless
specified corresponding precondition e g l precondition


fion line scheduling modular printers

formally lt lt add pre lf lf del



lu lu add del pre pre




pre

given lf usually much larger lt lu domain explicitly store
lt lu current implementation use closed world assumption imply
literals belong lf modeling translator provide xerox engineers
modeling printers encourages effects mentioned preconditions reducing
growth number unknown literals example x add x p
although usually case domain note goal
state fully specified unknown literals every actions effects
corresponding preconditions regressed states would fully specified one could
simplify logical state representation l hlt lf simplify regression rules
applicability action applicable iff effects match l add lt
del lf
update regressing hlt lf gives h lt add



del lf del



add

plan considered complete literals unify desired initial state step
figure optimal plan sheet found temporal database used
plan passed back outer loop figure becomes basis
next sheet feasible windows maintained around time points plan
plan released machine controller subsequent plans allowed make
earlier allocations resources push actions earlier plans later
ordering leads earlier end time newer goal selected provides
way complex job j submitted simple job j start execution
printer earlier j order starts allowed long sheets print
job finish correct order often provide important productivity gains
branching resource allocation orderings
first step creating regressed states branch actions applicable
l applying candidate action fact multiple child nodes due
resource contention scheduling use complex reasoning disjunctive
constraints avoid premature branching ordering decisions might well resolved
propagation baptiste pape take different insisting
potential overlaps allocations resource resolved immediately temporal
constraints posted order potentially overlapping allocations changes
propagate action times many action durations relatively rigid typical
printers aggressive commitment propagate cause changes potential end
times plan immediately helping guide search process multiple orderings
may possible may many resulting child search nodes
example figure assume current candidate action searching
plan sheet uses resource r duration e assume
n actions plans sheets use r implying n existing
non overlapping resource allocations e sn en corresponding time points
temporal database trying allocate r one obvious consistent choice


firuml zhou fromherz

end time
plan

earliest
start time
next actio



start time

estimated length
plan come
pg res conflict

predicted

time

end time
prev plan
job

end time
plans

length
plan far









stn plan starting time constraint







stn sheet ordering constraint

branching actions resource conflicts
stn resource contention constraints

figure important time points constructing evaluating plan
putting previous allocations adding temporal constraint en
however gaps existing allocations si ei allowing us post
constraints ei e si possible allocation r generates
distinct child node search space action use several different resources
r number branches potentially quite large however immediately resolving
potential overlaps allocations resource avoids introduction disjunctions
temporal network maintaining tractability temporal constraint propagation
summary every branch planners search space modify logical state
branching relevant actions potentially introduce different temporal constraints
order resolve resource contention branch different irrevocable
choice reflected final plan state node planners search tree
unique therefore need consider duplicating search effort
due reaching state two different search paths
heuristic estimation
potential plan suffix lower bound computed remaining makespan
order guide planners search figure illustrates heuristic estimate
used figure start time refers wall clock time
process started earliest start time current wall clock time predicted time estimated time plan current sheet
thus earliest time action scheduled begin note practice
machine controller communication negotiation time added predicted
time hypothetical start time plan found constrained
happen earliest possible wall clock plan execution time plan constrained end previous sheets print job
necessarily constrained start plans previous sheets start time
next action added regressed partial plan constrained occur least


fion line scheduling modular printers

hypothetical plan starting time heuristic value
makespan remaining plan complete current regressed partial plan
overall objective minimize earliest possible end time plans including
sheet indicated lower bound floating
time point figure time point constrained end time points
sheets planned one currently planned current
sheet represented constraints shown figure
constrained end completion time planned sheets
print job constraint essentially pushes sheets current print
job end support objective function primary criterion evaluating promise
partial plan step figure estimate earliest possible happening time
indicated stn embedded search node constraints shown
figure added current branch
key duration affects heuristic estimate lower bound
additional makespan required complete current regressed plan heuristic value
indicated figure estimated remaining makespan adding
constraint insertion may thus change earliest time subsequent time
points may introduce inconsistency temporal database
case safely abandon plan given current plan end
end time previous sheets print job objective function
minimize without causing inconsistency temporal database break ties
favor
smaller e g end time current print job
smaller predicted makespan
larger currently realized makespan analogous breaking ties
f n search larger g n thus encourages extension plans
nearer goal
performance search planner heavily depends quality
heuristic estimating makespan go estimate building temporal
graph adjustment logical mutex resource contentions rest
section discuss details computed overall want effective
heuristic
admissible maintaining high plan quality high productivity printer
important criterion customer
informed easy compute cases allowed fraction
second feasible plan delay finding plan delay plan start
execution time thus reduce overall productivity
derive admissible estimate duration required achieve given set goals
g initial state perform dynamic programming explicit representation
bi level temporal graph described tgp system smith
weld tgp graph represented fact level action


firuml zhou fromherz

level starting initial state time graph grown forward time
actions activated preconditions satisfied non mutex
three types mutual exclusion relations fact fact fact action action action
propagated graph building process graph expansion phase alternates
plan extraction phase starting time point goals appear nonmutex graph
graph expansion action fact f store first times
ta tf optimistically occur f optimistically achieved
correspond first times f appear temporal graph
mutex propagation store first time point pair facts hf f
achieved together pair actions ha execute together
graph first time points hf f ha become non mutex
implementation fact action mutex fact f action converted action
mutex hnoopf ai discuss later
begin f f f ta tf thf f tha
let initial state f f f tf thf f
dynamically update values ta tf thf f tha starting initial state
time follows
ta max setup time

max

f p rec

tf

max

f f p rec

thf f

tf min ta dur



f eff

thf f min tha

max

dur dur

f eff f eff

tha max ta ta

max

f p rec f p rec



thf f





updates done increasing order time usual graph
building
stop g g tg g g g thg g reach fixed point
equations shown actions include noop actions
normal graph actions start time point fact first
achieved mutex relation noop action equivalent fact action
mutex described smith weld overall plan sheets
highly parallel plan single sheet sequential therefore currently use
serial version temporal graph faster build consumes
less memory version two non noop actions mutex
therefore need store reason action mutexes thus value
tha eq applicable mutexes noop real action


fion line scheduling modular printers

implementation build graph starting putting events activating
action updating ta activating fact updating tf removing fact mutex
updating thf f ordered time occur event trigger events
happen later time example adding fact f removing fact mutex hf f
activate actions supported f f f activating action add
events activating facts effect removing fact mutexes effect
noop facts mutex p recond explicitly store factfact mutex timing values thf f none action mutexes tha instead reasoning
fly
time goals achieved pair wise non mutex heuristic value
estimating remaining makespan achieve goal state see figure
regression planners haslum geffner nguyen kambhampati nigenda
compute heuristic fixed point reached process
begins case graph expansion process may revisited goals representing regressed state appear non mutex graph fixed point
reached previous round expansion pair wise mutexes taken
account building graph estimated value underestimate makespan
plan achieve goal therefore returned value graph
lead underestimate admissible heuristic objective function overall
end time tie breakers current sheet end time current estimated makespan
described therefore estimate planner return plan p
optimal end time minimum p minimum makespan among
plans end time
incorporating resource mutexes graph discussed assumes
printer empty thus create graph similar procedure
used line planner assume interference relations occur
actions related given sheet machine empty
heuristic generally correct simple sheets simplex printing nearly correct
complicated sheets duplex printing
however time printer empty plans sheets
executing found planner havent sent machine
controller yet plans involve resource allocations fixed time points
still flexible ones effective heuristic scenarios
machine busy take account resource mutexes thus incorporating scheduling
resource contention constraints temporal graph figure shows
pseudo code key observation earliest time ta
action possibly execute necessary condition
preconditions appear non mutex graph resource
conflict resource r used current allocations r given previous
plans external processes
shown example action description figure resource allocation
action represented triple hr di starts sa means resource
r used sa duration normally different duration
da example lone resource usage action printsimplexandinvert fig

firuml zhou fromherz

resource types r r rn
resource allocations r r rn
ri si ei si ei sim eim ordered list allocations ri
function checkearliest r

r resource

earliest time intend use r

duration intend use r

r e e sm em current allocations r

tmin earliest time non conflict allocation r initialize tmin

allocation l sk ek r check

reserve r duration l starts latest sk tmin

go line

else move forward next possible opening end allocation

tmin earliest ek
end
return tmin
end function
building temporal graph
consider adding action graph
initialize ta earliest time p rec achieved non mutex eq
resource allocations ra hr hr hrn dn
allocation l hrk ok dk check earliest non conflict time l

ta checkearliest ri ta oi di oi
end
add action temporal graph ta
goals appear non pairwise mutex
figure building temporal graph adjustments resource conflicts
ure arkingengine lines figure building
graph action preconditions satisfied ta goes
resources used resource allocation hr di calls function
checkearliest r ta update ta earliest executable time start without
overlapping previous resource allocations r pseudo code function
checkearliest r self explanatory try earliest time point
slot allocation r duration without overlapping
previous allocations r
figure shows one example demonstrate example try
starting time action needs two unit capacity resource allocations
hr hr shown top left corner assume building
graph preconditions first achieved non mutex time referring
figure fixed allocations r allocations r


fion line scheduling modular printers

sa


r

da





r




r

ea








r



























figure example action starting time adjustment resource contentions
flexible allocations shown upper lower bound constraints r
r starting first time point allocate r
duration without overlapping previous allocations fixed flexible
thus adjust earliest possible starting time given
earliest possible starting time ta earliest time point
allocate resource r given take
final earliest starting time activate action graph instead
original value
resource mutexes starting times actions adjusted higher time
points preconditions achieved thus time point tg
goals appear non mutex graph underestimation makespan
remaining plan value figure thus tg higher summation
durations actions optimal serial plan however tg still underestimates
first time achieve goals thus still admissible heuristic
main objective function minimizing end time current printing sheets minimizing
figure however use resource mutexes heuristic
estimate end time tie breaker plan makespan admissible
resource mutexes estimate admissible tie breaker
note go resource allocations given action one time lines figure
therefore even action figure added still potential conflict resource
r consumed existing allocation r however repeating procedure
lines figure multiple times fixed point reached potentially returning better
heuristic estimate seek balance heuristic quality heuristic computation time



firuml zhou fromherz

time sec


mutex
logical mutex
log res mutex
productivity level














figure performance prototype built industrial partner

inadmissible thus still guaranteed optimal solution
minimizing plan end time final solution guaranteed shortest
duration among plans finish earliest
evaluation nominal
collaboration xerox deployed planner control three physical prototype multi engine printers deployments successful planner
used simulation control hundreds hypothetical printer configurations
planner written objective caml dialect ml communicates job
submitter machine controller ascii text sockets planner
communicate plan visualizer graphically display plans first two videos
line appendix planner controlling prototype depicted figures
full productivity visualizer video nominal simulation
hardware video nominal hardware full description videos found
textual appendix shortest single plan machine actions
given many sheets printer given time planner
plan ahead plan manager consistently manages dozens plans hundreds actions planner needs temporal reasoning regarding conflict
actions current plans hundreds actions previous plans even
planner consistently average produces plans within seconds required keep
printer running full productivity minute one complex
current xerox commercial products planner regularly optimal plan within
seconds plan ahead hundreds sheets ability use domain independent
techniques allows us use planner different configurations without needing hand tuned control rules rest section elaborate



fion line scheduling modular printers

time sec


nomutex
logical mutex
log res mutex
productivity level


























jobs
figure performance current prototype built us shown figure note
time plotted logarithmically

figure performance planner two complex
parallel printer prototypes built xerox us productivity levels higher
printer class currently market figure
cpu time consumed per sheet basic test planner print job
sheets without mutexes serial temporal graph mutexes
combination logical resource mutexes baseline requirement
planners performance match printers full productivity prototypes
investigated planner simpler complicated used theoretical investigations rest section refer first printer
shown figure configuration shown figure
configuration
configuration printer figure simpler one main components
including four print engines action schemata nominal productivity sheets
per minute leading timing requirement planner around sec
sheet shortest possible plan simplest simplex sheet contains
actions normally sheets flight time thus planner
needs handle interaction around actions however planner typically
intended plan many sheets ahead number interactions often much higher
printer built run industrial partner figure without
mutex planner starts taking base time second around sheet
consistently takes higher limit around sheet however logical
resource mutexes planner consistently returns plans within much shorter time
required average planner logical mutex takes average second
plan combination logical resource mutex helps reduce average
time second x improvement without mutexes planner takes
average seconds keep full productivity printer


firuml zhou fromherz

configuration printer tested figure complicated one
action schemata shortest possible plan contains actions printer
generally handles sheets time planner needs regularly reason
interactions actions productivity level
printer per minute leads base running time planner
second single sheet wider gap performance
different versions planners timing printer log scale
without mutexes planner quickly overruns time limit sheets
grows seconds around sheet stopped experiment
mutexes logical resource planner generally takes less second plan
however occasionally planner takes longer usually plans ahead around
sheets releasing plans lower level controller occasional jumps
time dont prevent planner achieving full productivity printer practice
planner averages second logical mutexes second x
improvement used conjunction resource mutexes
figure indicate average time individual
sheets increases number previous sheets due fact planner
generally plans faster speed printer print thus number
print requests received increases number plans unsent queue e planned
sent machine yet increases increases resource contention
branching factor searching plan leads increment
time eventually number lookahead sheets reaches point time
equals planners productivity dynamic equilibrium reached time
strictly increase linearly accordance number sheets planned
rather shows oscillating pattern due complex interaction
line processes freezing time points found plan plan execution
lead easier sheets depending
sheets interact sheet currently planned
noted smith weld work building
graph mutex propagation costly experience fact
printer rather empty total time subsumes graph
mutex building time less second believe due simpler mutex
propagation rule planner fact sequential plan sheet makes
actions mutex step resource mutex reasoning time optimized
logical mutex implementation improved seem significant
impediment intended application
presented indicate optimal per sheet strategy seems
efficient enough work needed assess drop quality would experienced greedy strategy placing current sheets resource
allocations previous sheet similarly lull sheet submissions
might beneficial plan multiple sheets together backtracking possible
plans first order overall faster plan pair together sheets
planned whose plans released printer represent opportunities
reconsideration light newer sheets submitted recently


fion line scheduling modular printers


















lpg
span
time





























sgplan
span
time





hybrid
span
time





























table comparison lpg sgplan hybrid planner showing makespan
plans found span times time seconds
numbers sheets

scaling generic planners
although planner certain features controllable action durations
beyond capabilities existing planners still interesting compare offline systems validate existing generic systems could solve basic
printing control well might possible extend rather developing
specialized planner architecture described therefore built tool
automatically convert custom domain language pddl temporal
language allowing us test current state art planners
domain must simplified fit limitations pddl observe
even simplified easy solve state art academic planners
sgplan chen hsu wah lpg gerevini saetti serina
winners international competitions since planners
cannot solve configuration machine figure tested
much simpler configuration machine tested monochrome job
simplex sheets already stretched limits lpg sgplan planner
plan ahead hundreds sheets machine seen table sgplan
took minutes two sheet plan took planner less
second compared sgplan lpg much faster although quality
plan lpg finds much worse average lpg returns plans longer makespan
times slower planner objective function minimizing
wall clock finishing time combines time plan makespan planner
x better planners small printer configuration


firuml zhou fromherz

addition faster hybrid planner predictable lpgs
time much higher variance sometimes takes longer plan smaller job
bigger one example took lpg times longer plan sheet job
table sheet job makes unsuitable real time line
depends accurate estimation times efficient temporal
event management
international competition
version printing domain used th international competition
ipc held presented icaps conference
allowed us evaluate planner many state art systems deterministic
part competition three tracks
sequential objective function minimizing total cost actions plan
temporal objective function minimizing plan makespan
net benefit objective function minimizing trade total goal
utility action cost
three tracks emphasis finding good solution quality thus planner
running time part overall scoring metric specifically planner given
minutes run particular instance cost plan returned within
time limit used calculate score particular planner particular
instance score given instance cost best known solution cost generated
plan cost generating plan infinite total instances
domain thus maximum score competitor achieve solutions
returned best quality among competitors equal best known solution
generated specialized solver
real world planners often demonstrated complex domains spacecraft
mobile robot control difficult simulate thus make awkward benchmarks
popular temporal benchmark domains line sense
planners speed affect solution quality remains need simple yet
realistic benchmark domain combines elements scheduling especially
line setting step toward bridging gap organizers ipc elected
use parc printer domain two tracks sequential temporal temporal track
natural fit due default objective function maximizing printers
productivity equals minimizing makespan plan finishing print job
requests sequential track minimizing total printing cost used action
certain cost value expensive color print engine print black white
page costs monochrome print engine however cost trade may
clear cut feeder blank sheets originally reside closer color
print engine monochrome engine
even though internal representation planner used starting
point competition domain description far pddl representation
difficulties creating competition domain file set


fion line scheduling modular printers

c


dae


dae


dtgplan


f fah


h
f fsa


lama


plana


sgp


upwards


baseline


table scores ipc sequential satisficing track
line continual nature domain fact constraints
multiple resource allocations action sequential finishing order sheets
job caused blowup size pure pddl organizers
remove approximate certain constraints original domain model
less complex machines overall three different printers modeled first one
simpler four engine two color two mono configuration machine described
section second one stripped version half one color
one mono first printer third one another variation one mono
one color printer first two printers rather symmetric design third one
asymmetric three significantly simpler fixture built parc helped
ipc organizers model actions accurately possible thus even though
printer configurations hypothetical reflect characteristics real hardware
files reduce complexity print requests single job
multiple sheets used sheets randomly set simplex one sided print
duplex two sided print image randomly selected mono
color number sheets varies given print job request particular
printer configuration competing planner needed plan lowest total printing
cost sequential track matching effectively image requirement print
engine capabilities smallest makespan temporal track synchronizing effectively
different print engines actual competition ranging
sheets used three modeled printers simplex sheets
used biggest printer engine version make difficult
majority participants
used two tracks details used planner
described provide best known solutions score competing planners
temporal track ran planner default objective function
maximizing machines productivity sequential track ran planner
objective function minimizing printing cost described later section given
plan representation different planner standard format used
ipc post processing step needed convert one format another note
plans returned planner temporal buffers related time
points inter sheet gaps post processing step remove small
temporal buffers needed pddl plans valid therefore competing
temporal planners could theoretically return shorter makespans planner however
described planner still superior competing
planners terms plan quality organizers officially reveal plan running
time unofficial showed planner much faster competing
planners solving
tables ipc three sub tracks parc printer
domain used sequential satisficing sequential optimal temporal satisficing


firuml zhou fromherz

cfdp


co plan


cpt


gamer


hsp


hspf


mips xxl


plana


upwards


baseline


table scores ipc sequential optimal track
cpt


dae


dae


sgplan


tfd


tlp gp


baseline


table scores ipc temporal satisficing track

planners score would tracks given used provide best known
solutions tracks baseline planner sequential optimizing track
blind search optimal cost sequential satisficing track planner
temporal satisficing metric planner followed greedy scheduler
sequential satisficing planners performed well mostly due fact
sequential tracks easy solve competitors perform well
tracks reason sequential optimal planners perform well could
solve many among selected temporal satisficing tracks
planners could solve large number instances quality plans returned
plans high thus leading low overall scores short
international competition reinforced early study indicating generic
line planners competitive line hybrid system application
together provide evidence demands setting warrant specialized


exception handling
maintaining high productivity thus high return investment
common important objective means thing equipment owners
care reduce need operator oversight expertise allow use
complex mechanisms system must autonomic possible operators
make mistakes even highly engineered system modules fail system must
cope execution failure crucial part rmp value proposition
example imagine printer copier never seems jam runs little slower
month goes month someone opens covers removes jammed
sheets system back full productivity rmp systems planner
used control designed fulfill vision partial productivity subset
modules make transition transparent user thus increase
perceived reliability system concentrating developing exception
handling techniques minimize user interventions without stopping slowing
machine current products perform exception handling rules hard coded
machine module technique works well simple straight line systems would
limited small predefined subset failures complex topologies modular
rmp systems astronomical number different printer configurations
failure possibilities require general exception handling


fion line scheduling modular printers

addition system must work legacy modules order commercially viable architecture must tolerate components direct control
give rise unexpected events handle several different exception types
plan rejection machine controller model updates e modules capabilities go
line sheet jams
since plans system tightly interact scheduling temporal
constraints whether belong print job exception affecting
single plan affect executability plans final job integrity plans
different stages life cycle need analyzed treated differently see figure
simple exceptions plan rejection model updates handled discarding
recently made plans rolling back state planner sheets
planned implementation uses non destructive data structures make efficient
execution failures sheet jams require elaborate handling unsent plans
canceled need plans sheets already flight time
exception occurs replanning reuse much nominal system
requires special modifications discuss detail section first
provide overview types exceptions handle plan
manager reacts concentrate hardest part exception handling
framework finding set consistent plans flight sheets
related work
several previously proposed frameworks handling exceptions uncertainty
plan execution markov decision processes boutilier dean hanks contingency pryor collins build plans policies robust uncertain environment planners built techniques normally slow especially real time
dynamic environment complex temporal constraints suitable
domain exceptions happen frequently need responded
quickly fox gerevini long serina discuss trade replanning
plan repair strategies handling execution failure work line
instead line real time environment target different
objective function case plan stability casper system jpl chien knight
stechert sherwood rabideau uses iterative repairs continuously modify
update plans adjust dynamic environment unlike system casper uses
domain control rules thus less flexible replanning decision needed
quickly domain case sub second
basic exception handling
planner handle several types exceptions figure extends system architecture diagram figure shows solid lines possible steps replanning
process general exception occurs machine controller sends planner
message real time detailing exception planner cancels plans
created sent printer controller execute corresponding
goals rolled back unplanned queue planner time tries
plans sheets moving printer avoid exceptions


firuml zhou fromherz

printer model line
p



planner
stn
plans
fl ibl
flexible
start time

sheet
descriptions
line

recreate goals

plans
l
unplanned



planned unsent

plan manager

sent

fixed time plans

exceptions
p

figure system architecture showing steps involved nominal dashed
lines replanning solid lines

plans found sent machine controller replace ones
executing
next discuss detail different exception types
plan rejection plan sent machine controller execute controller
may reject plan one relevant modules cannot commit executing requested
action time defined planner rejections rare caused
module constraints outside scope planners model example
printer engine may need time bring toner proper temperaturea state variable
constraint currently modeled system plan rejected planner
cancel plans unsent queue addition recently sent rejected plan
goals corresponding plans rolled back unplanned queue even
plans directly affected error message need canceled rolled
back plans made commitments made rejected
plan
module update machine modules go line due hardware failure
sheet jam benign event running feed tray unmodeled
process print engine self adjustment similarly come line
repaired adjusted otherwise made ready happens module controller
send message planner indicating modules capabilities
given capability turned planner remove corresponding
action consideration future episodes given capability turned
planner add action set future episodes
break future module changes status capabilities
currently executing unsent plans module may become invalid
case module controller send messages planner indicating plans


fion line scheduling modular printers

affected planner cancel affected unsent plans subsequent plans move
goals back unplanned queue plans executing thus correspond
sheets already fed machine planner needs plans
affected sheets get correct finisher tray without going
affected modules next section describes detail reroute flight
sheets
broken type exception happens one sheets jammed system
broken messages sent planner include ids sheets jammed
thus cannot reused rerouted failure sheets jam
normally disable modules thus broken message normally accompanied
several module update messages described handling broken
exception similar handling break future exception many respects
involves canceling unsent plans finding plans flight sheets however
main differences flight sheets jammed cannot rerouted
critically jammed sheets break print job integrity discuss detail next
flight sheet replanning
section discuss finding set plans flight sheets
sheet jammed module used plans broken constraints
make replanning challenging nominal
sheets cannot stop slow planner searches plans inflight sheets thus planner takes much time plans jams
module failures cascade
newly found plans flexible starting times nominal
case start location sheets projected
plans found locations depend actual replanning time
planner
flight sheets occurring later print job jammed sheet
rerouted purge tray sheets jobs without jammed sheets still need
finish correct finisher tray order
replanning involves four main steps create goals flight sheets
predict upper bound replanning time project sheets according
original trajectory predicted time future locations
form initial state replanning plans sheets
salvageable possible avoid broken modules jammed sheets
time satisfying constraints listed
example
provide concrete example illustrating replanning procedure figures
scenario three flight sheets belong
print job planned go finisher middle sheet belongs


firuml zhou fromherz




finisher
finisher
p
purge
tray



figure replanning example jam sheet planned enter finisher
sheet finisher




finisher
finisher
purge tray



figure replanning example jam sheet jammed requires planner reroute sheet purge tray reroute sheet circumvent
jammed sheet going finisher

different print job scheduled go finisher third finisher purge tray
original routes indicated dashed lines figure assume
jammed according original routes arrive finisher tray
order arrive crash module
jammed therefore need plans two sheets
instead go purge tray goes around finding plans takes time
given cannot stop slow finding plans
two sheets continue original trajectories locations


fion line scheduling modular printers

sheet
plan
plan


plan

sheet

plan


plan

plan

plan

figure chaining many searches together gives search tree potentially infinite
branching factor
circled figure machine controller apply plans indicated
figure solid lines order guarantee print job integrity avoiding
cascading failures replanning done planner generate fresh plans
create
example shows one replanning strategy goal order
sheet set go purge tray default strategy replanner tries
clear machine finish replanning process quickly possible return
normal operation however scenarios printing media expensive
content confidential purging sheets desirable scenarios
experimented different strategy purge keeps
machine example looping holding pattern waiting
reprinted routed original finisher modification necessary
implement strategy system change way replanning goals end time
constraints generated tested strategy successfully small number
sheets although sheets could saved one allowed slow transports
chained bfs
normal operation planner uses plan given sheet end
soonest given temporally flexible plans previous sheets plan exists
scheduled sufficiently far future rerouting different must
jointly feasible plans many flight sheets possible cannot greedily plan
one sheet time committing irrevocably plans previous sheets
plan selected one sheet might render subsequent sheets infeasible cannot happen
nominal later sheets feasible scheduled sufficiently far
future replanning however forced confront true multi body

considered two strategies solve first simply plan
joint action space sheets would large branching factor
clear us design effective heuristic evaluation function chose different
retain view sheet individually
heuristic search however overlay additional search top depicted
figure high level search branching node represents situation
selected certain specific plans previous sheets time select plan


firuml zhou fromherz

chainedbfs
empty return success
p remove first
initialize openlist p
repeat openlist empty node limit reached

n best node openlist

n goal call chainedbfs remaining

expand n adding children openlist
figure sketch chained best first search depth first strategy
additional sheet children node represent commitments different possible
plans additional sheet considering different paths high level search
tree consider different combinations plans different sheets call
chained best first search current implementation sheets replanned
original order approximation increasing distance exit correlates
increasing flexibility alternative replan order urgency
defined time left reroute sheet becomes unsalvageable
children node represent possible plans returned best first
search children available instead individual sheet level
search encounter goal nodes one time cannot terminate search
first goal node single sheet guarantee
sheet plan reaching first goal make subsequent sheets feasible finding plan
single sheet merely branch high level space retain
completeness must retain ability continue search uncover additional
possible plans fact printers contain loops path
may infinite number possible plans given sheet fundamentally highlevel search must explore tree nodes expanded incrementally branching
factor potentially infinite
identified three possible strategies searching tree infinite branching factor
first best first one formulates traditional heuristic evaluation
function high level nodes nodes represent commitments complete plans
subset flight sheets heuristic function needs estimate probability
plans allow feasible plans remaining sheets found infinite
branching factor could handled partial expansion yoshizumi miura ishida
although would require non trivial lower bound heuristic value
plans yet found clear us might done
second possible strategy considered limited discrepancy search korf unlike
depth first search limited discrepancy search doesnt necessarily visit children
node potentially infinite us disadvantage method
revisit node many times different discrepancy bounds suffer
considerable node regeneration overhead
third strategy one used implementation perhaps simplest
depth first search figure shows pseudo code sketch fixed number
sheets replan high level search tree bounded depth cope potentially


fion line scheduling modular printers

infinite branching factor impose limit number nodes low level sheet
search may expand avoids danger searching forever one high level
node without finding another goal reminiscent iterative broadening ginsberg
harvey guide sheet level use heuristic minimizes
plan duration attempts minimize resource use machine maximize
probability sheets feasible plans
evaluation
exception handling strategies current production printers
stop production ask operator remove sheets use machine specific
customized local rules purge sheets system work first demonstrate
automatic exception handling rely machine specific control rules
planner handle two easiest types exception plan reject module
update without difficulties break future broken exceptions
currently reroute fly five sheets machine shown figure
number may seem low recall replanning harder nominal
factor exponential number flight sheets simpler prototype systems
xerox fewer larger modules four print engines aggregate throughput
per minute planner able successfully reroute reroutable sheets
different jams happen demonstrated replanning technology real time
allowing people come turn modules jam sheets intentionally
sometimes right sheets hit broken module upon receiving error messages
machine controller planner fast enough reroute sheets around
failed modules jammed sheets correct locations addition experimenting
physical hardware built parc xerox tested replanning
simulation connecting planner visualizer instead machine controller
line appendix contains two videos planner performing flight rerouting
parc prototype simulation video replanning simulation hardware
video replanning hardware
addition testing replanning framework different hypothetical printer configurations different fault modes investigated different exception handling
strategies example printing media expensive replanning objective
function switched default objective function finish replanning quickly
possible lead many purged sheets saving many sheets possible
lead longer replanning time planner able successfully route
order sheets long routes may contain loops system waiting
jammed sheet printed routed correct finisher tray
achievement replanning five sheets large rmp machine may seem
impressive want point planner reroute reroutable sheets
simpler machines still much complex biggest multi engine printer
xerox currently market large machine complex automated
planningthe last two ipc winners sgplan lpg cannot even plan single
sheet nominal pddl version printer domain


firuml zhou fromherz

handling multiple objectives
second major extension nominal aimed better meeting shop owners
needs nominal case point planners objective run
multi engine reconfigurable printers full productivity optimizing machine throughput
productivity important one many optimization criteria
naturally exist real world scheduling applications printer control
domain section describe several additional objective functions
pointed important industrial partner discuss extended
framework handle
modular system multiple print engines one might want optimize cost
printing choosing print black monochrome engines avoid
expensive color engines one might want optimize image quality choosing
print document print engines whose current marking gamuts
similar printer controller needs give operators ability trade
conflicting objectives maintaining robust operation meet challenges
optimization objective combines separate estimates productivity printing
cost multiple heuristic look ups efficiently handle image quality consistency
constraints contrast explicit multi objective optimization planner
would return selection non dominated solutions pareto frontier presumably
human choose planner needs select single solution execution
need combine multiple criteria single objective planner built
atop generic state space heuristic search need design comparison function
order search nodes addition linear combinations objectives relatively easy
us handle tiered criteria tie breaking strategies
several academic domain independent planners grt refanidis
vlahavas lpg gerevini saetti serina optimize multiple objectives trade time plan quality standard
languages especially pddl gerevini long allow specifying complex objective
functions weighted sum format framework planner
domain independent technology uses extension pddl works
dynamic line continual environment interacts physical machine
line abstracted environment previous planners
optimizing printing cost
systems heterogeneous print engines cost printing given page depends
engines used example generally costlier print black white
page color engine monochrome one thus minimize overall printing cost
one use engines lowest printing cost still satisfy image type
quality requirements given print job subset available
engines used printing job thus overall productivity may reduced
strike balance machine productivity printing cost implemented objective trade productivity cost vice versa
combining different performance criteria single objective optimization
framework works well single objective efficiently applied


fion line scheduling modular printers

multi objective case main steps required extend planner
supporting single objective multiple objectives
step extend planners representation machine capabilities model action cost
specifically added cost field representing cost executing capability
addition overall objective field user supplied weights two
objectives obj min w w c end time c accumulated total
cost printing sheets
step create one heuristic estimation function objectives
best route given sheet estimate good potential route according
objective functions finishing time estimated temporal graph
adjusted resource conflicts described section estimate total plan
execution cost use dynamic programming starting initial state e sheet
feeder compute total cost reach different reachable states computation similar cost propagation graph sapa planner
kambhampati
step extend search considering multiple objectives simultaneously
estimations total time cost combined user supplied weights
described step compare nodes best first search given
heuristics time cost admissible single objective planner planner
guaranteed optimal solution given sheet weights given
planner chooses prioritize objectives example planner first plan
lowest cost break ties favoring plans higher productivity
favoring one lower wear tear mechanism implemented
fully integrated planner default option weights specified
optimize productivity break ties total cost
image quality consistency
maintaining image consistency across set heterogeneous print engines especially
important multi engine printing system planner achieves enforcing additional image consistency constraints searching optimal plan color science
consistency two colors measured function often denoted e calculates distance two device independent color space
exist variety functions popular called e see green
purpose suffices assume given two engines e
function returns non negative real valued scalar called e distance measures
discrepancy perceived color printing image two engines
facing e face bound book magazine
sensitive image consistency issues thus consider following constraints
planner
facing page constraints require facing job printed
print engine
e constraints allow engines within maximum e distance print
facing


firuml zhou fromherz

given reality two engines e distance zero facing page
constraints viewed special case e constraints maximum e
distance set zero thus need focus latter general
enforce e constraints planner keeps track set print capabilities
used print front side sheet constrained print action
applied back side previous sheet since first sheet job
previous sheet set print capabilities eligible printing front side unconstrained
e equal entire set print capabilities subsequent sheets job
however subset print capabilities allowed subset computed
e constraints including capabilities engines whose e distance
print engine printed back side previous sheet less equal
maximum distance cases determined line
e distance pair engines drift time thus planner maintains
line version pairwise e distance matrix engines printer
adding extra image consistency constraints reduce brute force search
space constraints make set reachable states smaller practice found
often makes search harder heuristic computed unconstrained still admissible longer informative improve accuracy
heuristic planner computes temporal graph heuristic legal
combinations print capabilities used print one side sheet
stores multiple lookup tables one combination heuristic estimate
search node needed planner calculates index lookup table
state description e g sheet location monochrome color printing much
way lookups done pattern databases culberson schaeffer
implementation hash table hash tables used store multiple lookup tables
given sheet relevant hash table loaded sheet planned
set eligible print actions known fixed time
since limited number ways printing single face sheet
improving heuristic accuracy little overhead yet significantly reduce
time takes itinerary interestingly used
improve accuracy heuristic handling exceptions jammed sheets
block paths engines unblocked engines eligible
printing sheets creating similar enforcing e constraints
example one set e distance blocked engine infinity effectively
forces sheets go unblocked engines computational savings comes
use accurate heuristic built specifically particular set
unblocked engines instead nominal case heuristic assumes engine blocked
constrained action set
algorithmic perspective image quality consistency
corresponds solving constrained reduced set actions compared unconstrained version given k actions one create k different versions constrained thus pre computing temporal
graph heuristic possible subsets actions quickly become infeasible


fion line scheduling modular printers

k increases describe general solution strikes balance heuristic
accuracy space overhead storing multiple lookup tables one subset
actions idea limit maximum number actions removed
unconstrained compute heuristic lookup tables constrained
example usually feasible enumerate constrained
one two actions removed action set compute heuristic
value state constrained included pre computed set
consults lookup tables whose removed actions form subset actions removed constrained returns maximum value heuristic
estimate state since value returned lookup tables admissible
formally let h p admissible heuristic estimate state constrained set actions p removed original action set
let maximum number actions removed constrained
heuristic pre computed heuristic estimate h p calculated follows
h p



h p
maxqp

q

p
h q otherwise

heuristic resembles hm family admissible heuristics haslum geffner
limits maximum cardinality set atoms considered
construction heuristic difference heuristic considers set removed
actions whereas hm heuristic considers set satisfied atoms heuristic
seen kind multiple pattern database holte felner newton meshulam furcy
one take maximum set heuristic estimates without losing
admissibility although action space abstraction multiple pattern
databases state space abstraction
evaluation
test ability planner trade machine productivity printing
cost tested model four engine prototype printer built xerox
better test bed trade investigation printer mixed set printer
engines two color two black white engines instead four identical black engines
parc prototype system moreover engines aligned asymmetrically
thus paths leading different engines slightly different modeled
costs different components consultation xerox engineers especially
interested modeling cost print black different engines printing
expensive color engines costs cheaper monochrome engines
varying weights two objective functions able
increasing weight given productivity printer utilization four
engines increasing weight saving printing cost leads reductions number
unnecessary costly printing thus fewer black sheets printed color engines
observe trade modules similar functionality well
different feeders finishers paths example increasing weight saving
costs lowers number sheets fed expensive faster feeder
tested search hypothetical printers mixed components similar


firuml zhou fromherz

observed observed moving single multiple objectives
slow planner thus affect overall productivity
tested performance planner image consistency
model printer used four monochrome engines two faster lowquality engines remaining two slower high quality engines four engines
connected asymmetric paths ran simulation sheet
job requires two high quality engines double sided printing
done certain e constraints prevent planner choosing two
low quality engines since particularly interested effect heuristic
search performance tested planner without multiple lookup tables
made significant difference number node expansions search
times average multiple lookup table heuristic used planner
expands nodes per sheet whereas heuristic computed unconstrained grossly underestimates remaining makespan constrained
needs node expansions plan terms running time one
uses multiple lookup tables faster naive heuristic
one future direction investigate different objective entirely wear tear
objective one would different machines plant used amount
long term however machines often cycled idle long
period cycling introduces wear one would recently used machines
selected soon short term although implementation currently supports
throughput cost easily extensible support additional objectives

deployment
process building deploying planner utilized many shelf techniques academic extending integrating form fast
line planner scheduler section list important lessons learned
describe ancillary tools necessary develop deploy planner
hope useful application developers academic researchers

lessons learned
modeling important mean two respects first important
end users printers modeled specialized representation machine
modules connections main themes language
discussed section representation compiled planner input
language taking capabilities different modules along inter connections
producing action schemata process set machine capabilities compiled
higher number action schemata ground parameters
discussion users industrial partners feel machine centric language
involving modules machine instances inter connections easier understand
accept compiled representation makes much easier us adopt
strips techniques


fion line scheduling modular printers

second found understood search regression
three value state representation heuristics graph mutexes used
planner could manipulate modeling actions goals initial states
produce quite different computational consider simple example action
move l l moves object location l l common form strips
representation action p l effect l l
recall use three value representation literal values true
false unknown regressing partial state l get us state
l u nknown l regressable actions move l l
move l l normal regression rules may consider move l l
lead optimal length plan regressing move l l cause
inconsistency fact domain branch regressable actions
scenarios need buy time free resource allocations
note example sophisticated techniques discover invariants tim fox
long discoplan gerevini schuert discover object
single location time thus regressable
action move l l however eliminate branch simply adding precondition
l action description make sure goal state location
goal false generating extra child node propagating constraints
domain expensive addition logical part state representation
includes temporal resource databases cutting number generated
nodes important partially accomplished careful modeling
similarly adding removing predicates domain description great
effects heuristic estimation derived graph mutex propagation experienced scenario adding two extra predicates representing subgoal
completion modeling domain slightly differently achieved speedup nearly x
printer configurations
manipulations reminiscent work rintanen showed
domain advice expressed linear temporal logic dont move package
destination could compiled operators domain conditional
effects leading great gains efficiency however want emphasize
highly configurable systems dangerous encode explicit action choices
pruning domain hard guarantee completeness optimality
maintained possible job mixes failure combinations example looping
sheet may free resource allow job complete earlier
encode domain physics things universally true domain
help keep search within reachable states control rules sense
heuristic action selections condition choose action point
physics represented differently even limited strips finding right
match chosen search strategy dramatically affect planners performance
application developers work fixed benchmark domain representation
allows us exploit another dimension modeling improve planners performance
suitable depends application specifications
even formulating domain extension strips went several


firuml zhou fromherz

implementations different settling current one first
version lifted partial order planner still think elegant
implemented grounded forward state space planner
dominated competitions however discussed section realized
combination constraint sheets print job finished
order objective function minimizing finishing time suitable forward
state space search finally settled backward state space framework much
faster domain lesson drew works
best wide range benchmark domains competition mean
best choice given application doesnt work mean less
popular approaches cannot significantly better therefore understanding domain
important constraints involved objective function different
work help selecting suitable strategy looking competition
replacement understanding variety applicable
fast robust temporal reasoner important planner
even though source code simple temporal network stn totals less
lines code critical handling temporal relations actions resource allocations within single plan different plans real world application
temporal constraints delays take account communication setup time machine controller coordination time synchronization delays
planner components overall control architecture ensuring temporal
consistency one important tasks necessary keeping planner running
without interruption long period time explicit temporal reasoner
helped us uniformly represent manage start end times actions different
types resource allocations allowed us smoothly extend handling fixed
duration actions action variable durations extend regular resource allocations resource allocations caused external events cyclic resources allocation
uncontrollable processes domain variable action durations context independent
different actions refuel logistics domain used competition
havent noticed many planners competition explicit general purpose
temporal reasoner except ixtet ghallab laruelle however would
emphasize real world setting planner needs coordinate
software expects face time constraints delays critical
many uses planner besides main job controlling different
printers planner used extensively system analysis purposes thus
planner tested different printer designs help decide better ones
printers broken modules test reliability printer
analyses help product group decide printer built given purpose
example customer ran extensive test consisting different planner runs
variations single printer configuration among runs used planner
test different combinations possible broken points different print job mixes changed
speeds different modules another use test performance upstream
job submission sequencing methods direct accurate way evaluate job
sequencer run long print job mix thousands sheets planner


fion line scheduling modular printers

measure total makespan recently completed print job mix sheets
without break intensive regular real life printer operation
experiences learned many potential applications
planner beyond direct machine control
exception handling given planner interacts parts
higher lower control hierarchy exceptions come many forms believe
similar exceptions would occur applications planner interacts
physical world robust exception handling replanning important
found much less topic compared branches domainindependent
hope observations help researchers develop techniques
closer needed real world applications useful
considering deploying ai applications
ancillary tools
course building system developed number ancillary tools around
core scheduling software among tools notable piece
visualizer simulates movement sheet inside printer real time
planner visualizer adopts model principle make machineindependent possible itinerary given discrete sequence actions
single time stamp prescribes start time action linear interpolation
used compute position sheet current simulation time somewhere
start times two consecutive actions visualizer works one
following two modes line mode accepts live itineraries sent planner
sockets line mode reads previously recorded itineraries file stored
disk
separate visualization engine specific designs printer developed
simple module definition language describing dimensions module type
locations input output ports within modules local coordinate system
travel distance pair input output ports optionally customized
drawing function used render type modules screen besides
definition module types visualizer needs know location well orientation
module machine wide coordinate system possible specify
information manually developed another ancillary tool called visualizer preprocessor used automate laborious yet error prone task tool
user needs specify location orientation one module called seed
module locations orientations directly indirectly
connected modules deduced connectivity graph modules
machines one feasible configuration tool possible solutions
store multiple files used later visualizer besides nominal
case visualizer simulate exceptions jams break infuture scenarios long term vision visualizer become design debug
verification tool manufacturer well gui console end user operates
printer


firuml zhou fromherz

make easier run tests modular printers developed wrapper
program glues together planner controller visualizer takes
input set pre defined test scenarios specified succinct syntax e g sc means
print single sided color sheets support simulation pre fabricated exceptions
sends special messages visualizer contains information
sheet jam occur supports simultaneous printing jobs printers
multiple finishers uses round robin draw sheets jobs
rate maintain fairness facilitate remote testing debugging wrapper program
uses sockets communicate machine controller visualizer

conclusion
described real world domain requires novel line integration
scheduling formalized temporal extension strips falls
partial order scheduling temporal pddl presented hybrid planner uses
state space regression per sheet basis temporal constraint network
maintain flexibility partial orderings representing resource conflicts plans
different sheets system successfully controlled three hardware prototypes
outperforms state art planners domain domain dependent search control
heuristics necessary control printer composed modules real time
described extensions handle two critical issues real time execution failures
objective functions beyond productivity successfully demonstrated fast
replanning multiple objective handling three physical prototype printers many
potential printer configurations simulation
work provides example ai scheduling real world
application exotic domains spacecraft mobile robot control
common earth manufacturing process control modular
printer domain representative wider class ai applications require continual
line decision making novel combination fast continual temporal
techniques shown artificial intelligence successfully enable robust highperformance autonomous operation without hand coded control knowledge

acknowledgments
much work done first author palo alto center
preliminary project published ruml fromherz
ruml ruml zhou summarized ruml
zhou authors would thank members embedded reasoning
area parc especially lara crawford haitham hindi johan de kleer lukas kuhn
well danny bobrow david biegelsen craig eldershaw dave duff help
contributions project industrial collaborators provided domain
expertise invaluable helping us simplify frame application useful
way wed especially thank bob lofthus ron root enthusiasm
perseverance steve hoover supporting project


fion line scheduling modular printers

appendix video
line appendix jair website contains four movies system action
nominal simulation mp shows one simplex job sheets run simulation parc prototype printer shown figure planner keeps four
print engines busy achieving full productivity system
nominal hardware wmv shows two simplex jobs run simultaneously
four engines parc hardware prototype two feeders left
two simple finishing trays right red lights machine modules
position sheets background time synchronization indicated periodic
blinking lower left corner schematic visualization shows sheets
moving machine one job colored blue red
replanning simulation mp simple exceptions handling scenario simulation blue sheets red sheets belong different jobs second sheet blue
job jams third sheet already flight rerouted middle purge tray
fresh plans initiated recreate sheets red job continues uninterrupted
replanning hardware wmv demonstrates two exception handling scenarios
first shows simple line replanning sheet launched button pushed
module sheet headed toward mark module broken
initiates replanning sheet routed around failed module second
modules button pushed marking failed thereby blocking finishing tray
sheet headed toward sheet rerouting emerges
remaining finishing tray
second scenario module broken already contains first sheet
two sheet job replanner fast enough reroute second sheet around
jammed first sheet purge tray original two sheets planned
scratch arrive lower finishing tray

references
baptiste p pape c l theoretical experimental comparison constraint
propagation techniques disjunctive scheduling proceedings ijcai pp

bartak r visopt shopfloor edge scheduling proceedings
conference principles practice constraint programming cp pp

boutilier c dean hanks decision theoretic structural assumptions computational leverage journal artificial intelligence

cervoni r cesta oddi managing dynamic temporal constraint networks
proceedings aips pp


firuml zhou fromherz

chen hsu c w wah b temporal subgoal partitioning
resolution sgplan journal artificial intelligence
chien knight r stechert sherwood r rabideau g iterative repair improve responsiveness scheduling autonomous
spacecraft proc ijcai
chleq n efficient networks quantitative temporal constraints
proceedings constraints pp
crawford l hindi h zhou r larner synchronized control large scale
networked distributed printing system proceedings ieee international
conference robotics automation icra
culberson j schaeffer j pattern databases computational intelligence

dechter r meiri pearl j temporal constraint networks artificial intelligence
desjardins e durfee e h ortiz jr c l wolverton j survey
distributed continual ai magazine
ruml w zhou r line scheduling application
controlling modular printers proceedings aaai
b kambhampati sapa multi objective metric temporal planer
journal artificial intelligence
b ruml w lessons learned applying domain independent
high speed manufacturing proceedings icaps pp
b ruml w zhou r modular printers beyond productivity proceedings eighteenth international conference automated
scheduling icaps
fox gerevini long serina plan stability replanning versus plan
repair proc icaps pp
fox long automatic inference state invariants tim journal
artificial intelligence
fox long pddl extension pddl expressing temporal
domains journal artificial intelligence
frank j jonsson constraint attribute interval constraints
franklin g powell j workman digital control dynamic systems
prentice hall
fromherz p j bobrow g de kleer j model computing
design control reconfigurable systems ai magazine
fromherz p j saraswat v bobrow g model computing
developing flexible machine control software artificial intelligence



fion line scheduling modular printers

gerevini long preferences soft constraints pddl workshop
preferences soft constraints icaps
gerevini saetti serina stochastic local search
temporal action graphs lpg journal artificial intelligence
gerevini saetti serina efficient numerical
fluents multi criteria plan quality artificial intelligence
gerevini schuert l inferring state constraints domain independent
proceedings fifteenth national conference artificial intelligence
aaai
ghallab laruelle h representation control ixtet temporal
planner proceedings aips pp
ghallab nau traverso p automated theory practice
morgan kaufmann san francisco
ginsberg l harvey w iterative broadening artificial intelligence

green p colorimetry colour difference green p macdonald l eds
color engineering pp wiley
haslum p geffner h admissible heuristics optimal proceedings
aips pp
haslum p geffner h heuristic time resources proceedings
ecp
hindi h crawford l fromherz synchronization state control
processes delayed asynchronous measurements proc decision
control european control conference cdc ecc pp
hindi h crawford l zhou r eldershaw c efficient waypoint tracking
hybrid controllers double integrators classical time optimal control proc
th ieee conference decision control cdc
hoffmann j nebel b system fast plan generation
heuristic search journal artificial intelligence
holte r felner newton j meshulam r furcy maximizing
multiple pattern databases speeds heuristic search artificial intelligence

koehler j hoffmann j reasonable forced goal orderings use
agenda driven journal artificial intelligence

korf r e improved limited discrepancy search proceedings aaai pp
mit press
le c baral c zhang x tran regression respect sensing
actions partial states proceedings aaai


firuml zhou fromherz

muscettola n hsts integrating scheduling zweben fox
eds intelligent scheduling chap pp morgan kaufmann
muscettola n morris p tsamardinos reformulating temporal plans
efficient execution proceedings conference principles knowledge representation reasoning kr
nguyen x kambhampati nigenda r graph basis
derive heuristics plan synthesis state space csp search artificial intelligence

palacios h geffner h branch bound constraint programming implementation proceedings clei
policella n cesta oddi smith f precedence constraint posting
partial order schedules ai communications
pryor l collins g contingencies decision
journal artificial intelligence
refanidis vlahavas multiobjective heuristic state space artificial
intelligence
richter helmert westphal landmarks revisited proceedings
aaai pp
rintanen j incorporation temporal logic control plan operators proceedings fourteenth european conference artificial intelligence ecai
pp
ruml w b fromherz p j line scheduling
high speed manufacturing proceedings icaps pp
smith e weld temporal mutual exclusion reasoning
proceedings ijcai pp
smith f cheng c c slack heuristics constraint satisfaction
scheduling proceedings aaai pp
wah b w chen partitioning temporal mixed
space theory extended saddle points ieee international conference
tools artificial intelligence
yoshizumi miura ishida partial expansion large branching
factor proceedings aaai pp




