Journal Artificial Intelligence Research 51 (2014) 377-411

Submitted 7/14; published 10/14

Novel SAT-Based Approach Model Based Diagnosis
Amit Metodi

AMITMET @ CS . BGU . AC . IL

Department Computer Science,
Ben Gurion University Negev, Beer-Sheva, Israel

Roni Stern
Meir Kalech

RONI . STERN @ GMAIL . COM
KALECH @ BGU . AC . IL

Department Information Systems Engineering,
Ben Gurion University Negev, Beer-Sheva, Israel

Michael Codish

MCODISH @ CS . BGU . AC . IL

Department Computer Science,
Ben Gurion University Negev, Beer-Sheva, Israel

Abstract
paper introduces novel encoding Model Based Diagnosis (MBD) Boolean Satisfaction (SAT) focusing minimal cardinality diagnosis. encoding based combination
sophisticated MBD preprocessing algorithms application SAT compiler optimizes encoding provide succinct CNF representations obtained previous
works. Experimental evidence indicates approach superior published algorithms
minimal cardinality MBD. particular, determine, first time, minimal cardinality diagnoses entire standard ISCAS-85 74XXX benchmarks. results open way
improve state-of-the-art range similar MBD problems.

1. Introduction
Automated diagnosis concerned reasoning health systems, including identification abnormal behavior, isolation faulty components prediction system behavior
normal abnormal conditions. systems become large-scale complex,
automated diagnosis becomes challenging. Model Based Diagnosis (MBD) artificial
intelligence based approach aims cope diagnosis problem (Reiter, 1987; de Kleer
& Williams, 1987). MBD, model system first built. diagnoser observes
system predict behavior model. Discrepancies observation prediction used input diagnosis algorithm produces set possible faults
explain observation. MBD deployed several real-world applications, including
spacecrafts (Williams & Nayak, 1996), satellite decision support systems (Feldman, de Castro, van
Gemund, & Provan, 2013), automotive industry (Struss & Price, 2003) spreadsheets (Jannach & Schmitz, 2014). Also, exist several commercial MBD tools (Feldman, 2012; Dressler
& Struss, 1995).
MBD known hard problem algorithms exponential runtime (exponential
number components diagnosed system). Moreover, number potential diagnoses given observation huge. Therefore, MBD algorithms typically focus minimal
c
2014
AI Access Foundation. rights reserved.

fiM ETODI , TERN , K ALECH & C ODISH

diagnoses: minimal subset contain diagnoses, minimal cardinality
smallest size. Computing first minimal diagnosis P , computing next one
NP-hard (Bylander, Allemang, Tanner, & Josephson, 1991). Computing minimal cardinality
NP-hard, even first diagnosis (Selman & Levesque, 1990). work focus
hard task finding minimal cardinality diagnoses.
study Model-Based Diagnosis resulted variety computational modeling
challenges. paper focus one challenge received much attention
years. Originally defined Reiter (1987) de Kleer Williams (1987), problem
aims diagnose multiple faulty components so-called weak fault model, ignores
mode abnormal behavior components. problem extensively researched
25 years wide range papers propose different algorithms solve it, including range
papers recent years (Feldman & van Gemund, 2006; Williams & Ragno, 2007; Feldman,
Provan, & van Gemund, 2010a; Siddiqi & Huang, 2007, 2011). addressing challenge,
common practice focus diagnosis Combinational Logic Circuits. Namely, Boolean
circuits single output component determined logical function
current input state (independent time feedback).
basic setting diagnosis considers single observation inputs outputs
system. Variations consider additional information probabilities component failure,
multiple observations inputs outputs system, observations internal positions
system (probes). paper focus basic setting. Extensions variations
discussed Section 8.
Even basic setting, solving MBD problem often impractical, especially highcardinality faults. instance, system 1000 components, find minimal cardinality
diagnosis size 5, diagnosis engine must verify absence diagnosis consisting 4 components (there 1010 combinations). overcome complexity problem
consider novel encoding SAT.
recent years, Boolean SAT solving techniques improved dramatically. Todays SAT
solvers considerably faster able manage larger instances yesterdays. Moreover, encoding modeling techniques better understood increasingly innovative. SAT currently
applied solve wide variety hard practical combinatorial problems, often outperforming
dedicated algorithms. survey state-of-the-art SAT solving see work Biere,
Heule, van Maaren, Walsh (2009) draft forthcoming volume Art Computer Programming (Knuth, 2014).
general idea encode (typically, NP) hard problem instance, , Boolean formula,
, solutions correspond satisfying assignments . Given encoding,
SAT solver applied solve .
SAT-based solutions MBD already proposed. Smith et al. (2005) encode circuit,
representing component clauses add constraints cardinality. basis
SAT-based encodings, including one contribute paper. Bauer (2005)
introduces tailored SAT solver specifically designed return many diagnoses. Stein et al. (2006)
address diagnosis qualitative models physical systems multiple fault modes. recently, Feldman et al. (2010) propose encoding MAX-SAT demonstrate off-the-shelf
solvers require calls SAT solver stochastic diagnosis algorithm SAFARI (Feldman
et al., 2010a).
378

fiA N OVEL SAT-BASED PPROACH ODEL BASED IAGNOSIS

previous applications SAT MBD appear indicate SAT MAX-SAT solvers
doomed perform poorly standard benchmarks (Feldman et al., 2010). paper proves
contrary. SAT-based approach differs previous SAT encodings several key aspects.
First, sophisticated MBD preprocessing techniques applied facilitate construction
carefully designed constraint model, includes constraints exploit unique substructures
diagnosed system. Second, constraint model compiled corresponding CNF using
constraint compiler called BEE (Metodi & Codish, 2012), simplifies constraints generates
encoding CNF significantly improves subsequent runtime underlying SAT
solver. Lastly, structural abstraction inspired Siddiqi Huang (2007) used decompose
diagnosis problem, SAT solver used find top-level diagnoses,
show simple poly-time algorithm expand top-level diagnoses find minimal
cardinality diagnoses. approach requires preprocessing diagnosed system,
complexity preprocessing low-order polynomial, negligible (both theoretically
empirically) compared cost actual SAT solving.
evaluated SAT-based approach using two standard benchmarks: ISCAS-85 (Brglez,
Bryan, & Kozminski, 1989) 74XXX. standard benchmarks MBD literature, used extensively time made available today (Feldman & van Gemund,
2006; Feldman et al., 2010a; Siddiqi & Huang, 2007, 2011; Stern, Kalech, Feldman, & Provan,
2012; Nica, Pill, Quaritsch, & Wotawa, 2013). Finding minimal cardinality diagnoses hard sets
observations ISCAS-85 long standing challenge MBD community
used diagnosis competitions (DXC, 2009). ISCAS-85 systems used standard
automatic benchmark generation (Wang & Provan, 2010).
consider three known sets observations minimal cardinalities 131,
first time succeed compute minimal cardinality diagnosis observations
benchmark. compare approach wide collection state-of-the-art algorithms MBD,
including: HA* (Feldman & van Gemund, 2006), CDA* (Williams & Ragno, 2007), SAFARI (Feldman et al., 2010a), HDIAG (Siddiqi & Huang, 2007) DCAS (Siddiqi & Huang, 2011). Results
unequivocal. approach outperforms others, often orders magnitude, terms
runtime. result even significant, SAFARI stochastic algorithm, known fast,
even aim guarantee minimal cardinality. approach, hand, guarantees minimal cardinality diagnosis runs faster SAFARI.
paper goes beyond preliminary version work (Metodi, Stern, Kalech, & Codish,
2012a). provide detailed description components approach, present
detailed algorithms, prove correctness, provide additional examples present elaborate
experimental evaluation. next section discuss additional related work. Section 3 presents
required background MBD. Section 4 present standard approach model MBD
SAT. Section 5 main part paper describe building blocks tool
find minimal cardinality diagnosis. Section 6 describes building blocks combined
diagnosis algorithm. Comprehensive evaluation approach given Section 7. Section
8 discusses applicability approach general setting Section 9 concludes.

2. Related Work
Since late 80s, Model Based Diagnosis problem weak fault model widely
researched wide range papers propose different algorithms solve (Reiter, 1987; de Kleer
379

fiM ETODI , TERN , K ALECH & C ODISH

& Williams, 1987; Feldman & van Gemund, 2006; Williams & Ragno, 2007; Feldman et al., 2010a;
Siddiqi & Huang, 2007, 2011). Till today considered challenge reflected synthetic
track annual DXC diagnosis competition (DXC, 2009).
Many existing diagnosis techniques propose apply combination deterministic reasoning search algorithms. One classic approach involves two stage process. First, identifies
conflict sets, includes least one fault. Then, applies hitting set algorithm
compute sets multiple faults explain observation (de Kleer & Williams, 1987; Williams
& Ragno, 2007). methods guarantee sound diagnoses, even complete.
However, tend fail large systems due infeasible runtime space requirements.
alternative method directly search diagnoses trying different assumptions
components faulty. example, DRUM-II diagnosis engine finds minimal diagnosis performing iterative deepening search, limiting every iteration, number
components assumed faulty (Frohlich & Nejdl, 1997). DRUM-II analyzes
dependencies components prune irrelevant diagnoses. Recent work presents empirical
evidence suggesting direct search diagnoses often better conflict-directed diagnosis algorithms (Nica et al., 2013). Nica et al. compare SAT-based approach,
uses pre-processing. work show proposed pre-processing efficient
computationally results huge speedups search diagnosis. form preprocessing key ingredient enables us find large minimal cardinality diagnoses,
even sizes 31.
Another approach considers diagnosis problem terms inductive learning. Here, one
tries learn relations symptoms faults (Murray, Hughes, & Kreutz-Delgado,
2006). One disadvantage works approach learn single fault rather
multiple faults (Balakrishnan & Honavar, 1998). addition, inductive learning methods
guarantee sound diagnoses completeness. We, hand, propose method
addresses multiple faults guarantees sound complete minimal cardinality diagnoses.
Feldman et al. (2010a) propose stochastic diagnosis algorithm, called SAFARI. Although
method guaranteed return diagnoses minimal cardinality, presents solutions
close minimal cardinality low runtime. Section 7, demonstrate approach
outperforms SAFARI terms runtime, guarantees minimal cardinality diagnoses
returned.
Compilation-based methods proposed MBD context. Torasso Torta
(2006) proposed compile system description Binary Decision Diagrams (BDDs). Darwiche (2001) proposed compile system description Decomposable Negation Normal
Form (DNNF). cases, compiled model allowed finding minimal cardinality diagnosis
time polynomial size compiled model. However, works, size
compiled model (BDD DNNF) may grow exponentially shown become bottleneck (Siddiqi & Huang, 2007).
Siddiqi Huang (2007) suggest optimize MBD identifying components dominate
others. adopt idea apply SAT-based approach. Another compilation-based
diagnosis algorithm HA* algorithm (Feldman & van Gemund, 2006). HA* designed
exploit given hierarchy diagnosed system. done converting given system
hierarchy DNF hierarchy. element DNF hierarchy solved simple
best-first search using heuristic function given prior probability health system
components. Section 7, demonstrate approach substantially outperforms HA*.
380

fiA N OVEL SAT-BASED PPROACH ODEL BASED IAGNOSIS

= {X1 , X2 , A1 , A2 , O1 }
OBS = {A, B, C, D, E}
COMPS

Figure 1: MBD problem: (faulty) full adder.
Another previously proposed approach imposes tree structure given system description.
system tree structure diagnosed joining diagnoses constituent subsystems.
El Fattah Dechter (1995) obtained tree structure converting diagnosed system
chordal graph decomposed tree maximal cliques. TREE* algorithm another
tree-decomposition algorithm, initially proposed tree-structured systems (Stumptner
& Wotawa, 2001). TREE* later generalized perform system embedding hyper
tree specific representation diagnosed system (Stumptner & Wotawa, 2003). Follow
work generalized TREE* support various forms diagnosis optimization tasks,
finding minimal cardinality diagnoses, finding subset minimal diagnoses, finding probable diagnoses (Sachenbacher & Williams, 2004). Note complexity TREE* exponential
width hyper-tree embedded system description defined works.

3. Model-Based Diagnosis: Preliminaries
section introduces background Model Based Diagnosis. addition basic definitions, review several concepts literature build paper.
Model Based Diagnosis problems arise normal behavior system violated due
faulty components indicated certain observations. focus weak fault models,
ignore mode abnormal behavior components. MBD problem specified triplet
hSD, COMPS , OBS where: SD system description, COMPS set components, OBS
observation. system description takes account components might abnormal
(faulty). specified unary predicate h() components h(c) true
component c healthy false c faulty. Denoting correct behavior c propositional formula, c , SD given formally
^
SD =
h(c) c
cCOMPS

Namely, component faulty follows correct behavior. diagnosis problem
arises when, assumption none components faulty, inconsistency
system description observations (de Kleer & Williams, 1987; Reiter, 1987).
Definition 1 [Diagnosis Problem]. Given MBD problem, hSD, COMPS , OBS i, diagnosis problem
arises
^
SD
h(c) OBS `
cCOMPS

381

fiM ETODI , TERN , K ALECH & C ODISH

example, diagnosis problem arises MBD Figure 1 normal behavior would give
output E = 1. inconsistency, diagnosis algorithm tries find subset COMPS
which, assumed faulty, explains observation.
Definition 2 [Diagnosis] Given MBD problem, hSD, COMPS , OBS i, set components
COMPS diagnosis
^
^
h(c) OBS 0
SD
h(c)
c

c
/

say minimal diagnosis proper subset 0 diagnosis,
minimal cardinality diagnosis diagnosis 0 COMPS exists |0 | < ||.
MBD Figure 1, 1 ={X1 , X2 }, 2 ={O1 }, 3 ={A2 } minimal diagnoses, 2 ,
3 minimal cardinality diagnoses, smaller diagnosis.
important concept make use paper gate domination, used
automatic test pattern generation (ATPG) (Kirkland & Mercer, 1987; Fujiwara, Member, Shimono, & Member, 1983) modern SAT solvers (Marques-Silva, Lynce, & Malik, 2009),
sometimes name unique sensitization. Siddiqi Huang (2007) applied gate domination model-based diagnosis, introducing notion cone. following wording
taken Siddiqi Huangs paper setting system Boolean circuit
components gates.
Definition 3 (Dominator Cone) gate X fan-in region gate G dominated G
conversely G dominator X path X output circuit contains G. cone
corresponding gate G set gates dominated G. maximal cone one either
contained cone contained exactly one cone entire circuit.
example, circuit depicted Figure 1, components {A1 , A2 , O1 } form cone, since
path A1 A2 system output contains O1 . O1 dominator A1 A2
dominated gates.
Although Definition 3 stated terms Boolean circuits logical gates, notions
dominators cones generalized many systems, components correspond gates,
component C1 dominates component C2 paths passing C2 pass
C1 . example, system illustrated Figure 3 components C1 C2 form cone,
C2 dominates C1 .
importance cones MBD algorithms rooted two observations presented Siddiqi
Huang. Firstly, cones single-output sub-systems such, minimal cardinality diagnosis always, independent observation, indicate one unhealthy component per cone.
Secondly, C cone SD, without loss generality, may assume dominated
components C healthy. correct X unhealthy minimal cardinality
diagnosis dominated G, G must healthy. So, exists another minimal cardinality
diagnosis X healthy G not. example, circuit depicted Figure 1, 3
minimal cardinality diagnosis signifies dominated A2 unhealthy, exists another
minimal cardinality diagnosis, 2 , A2 healthy O1 , dominates A2 , unhealthy.
Based observations restrict search minimal cardinality diagnoses,
so-called top-level minimal cardinality diagnoses. notion top-level diagnoses introduced Siddiqi Huang.
382

fiA N OVEL SAT-BASED PPROACH ODEL BASED IAGNOSIS

Definition 4 (top-level diagnosis (TLD)) say minimal cardinality diagnosis top-level
contain dominated components.
formally justify focus top-level diagnoses make explicit following Propositions 1 2, left implicit previous work.
Proposition 1 Let 0 minimal cardinality diagnosis given MBD problem.
top-level diagnosis , cardinality.
Proof: Straightforward. obtain , replace dominated component 0 corresponding dominator.

note set minimal cardinality diagnoses obtained expanding set top-level minimal cardinality diagnoses following sense: Given minimal
cardinality top-level diagnosis, = {c1 , . . . , c` } consisting ` dominators corresponding
cones {C1 . . . , C` }, denote

n


= c0i Ci \ {ci } {c0i } diagnosis
(1)
say expands set minimal cardinality diagnoses defined terms crossproduct by: () = 1 ` . example, consider system Figure 1
observation OBS = {A, B, C, D, E}. cones system C1 = {X1 }, C2 = {X2 }, C3 =
{A1 , A2 , O1 }. corresponding MBD problem two top-level minimal cardinality diagnoses,
1 = {X1 , O1 } 2 = {X2 , O1 } (1 ) = {X1 } {O1 } = {{X1 , O1 }} (2 ) =
{X2 } {A1 , O1 } = {{X2 , A1 }, {X2 , O1 }}.
Proposition 2 0 minimal cardinality diagnosis top-level minimal
cardinality diagnosis expands include 0 .
Proof: proof straightforward construction.

Finally, comment sets specify expansion top-level diagnosis
Equation (1) easy compute: component c0i Ci checking \ {ci } {c0i }
diagnosis means propagating observed inputs system, flipping outputs
propagating component \ {ci } {c0i } checking conflict
observed outputs. observation explicit previous work essential justify
focus top-level diagnoses. Proposition 2 important applies diagnosis algorithm.
such, diagnosis algorithms general focus, compared finding TLDs, instead
finding minimal cardinality diagnoses.

4. Standard Approach SAT-Based MBD
standard encoding MBD problem hSD, COMPS , OBS Boolean Satisfiability (as introduced Smith et al., 2005) associates component c COMPS propositional formula,
c , denoting correct behavior, Boolean variable, Hc , signifying c healthy.
Viewing observation propositional statement, encoding obtained specifying
^
= OBS
Hc c
(2)
cCOMPS

383

fiM ETODI , TERN , K ALECH & C ODISH

satisfying assignment , health variables assigned value false determine (not
necessarily minimal) diagnosis .
example, consider MBD problem Figure 1, let comp(A, B, C)
comp {and, or, xor} denote propositional formula describing behavior component and00 , or00 xor00 gate inputs A, B output C. So, Equation (2) takes
form:


B C E HX1 xor(A, B, Z1 )


(3)
= HA1 and(A, B, Z2 )
HX2 xor(Z1 , C, D)
HA2 and(Z1 , C, Z3 ) HO1 or(Z2 , Z3 , E)
formula satisfied assignment variables {A, C, HA1 , HA2 , HO1 } true variables
{B, D, E, Z1 , Z2 , Z3 , HX1 , HX2 } false. assignment indicates = {X1 , X2 } diagnosis.
obtain minimal cardinality diagnosis seek satisfying assignment minimal number health variables taking value false. example assignment variables
{A, C, Z1 , Z3 , HX1 , HX2 , HA1 , HA2 } true variables {B, D, E, Z2 , HO1 } false satisfies Equation (3) indicates one faulty component. achieved using MAX-SAT
solver (Feldman et al., 2010), using SAT solver done implementation underlying
paper, cardinality constraint (encoded CNF) introduced constrain number
faulty components detailed next section.
matter cardinality constraint encoded CNF, setting |COMPS | = n
constant k, formula

n


k = sum leq( Hc c COMPS , k)
(4)
satisfied k n health variables take value false. specifically, seek
minimal value k (the CNF corresponding to) k satisfiable. involves iterating
calls SAT solver formulae k decreasing values k k satisfiable
k1 not. approach takes advantage fact SAT solvers typically incremental:
adding clauses satisfiable instance allows solve maintaining derived
information search space previous call.

5. Approach SAT-Based MBD
approach encoding MBD problem hSD, COMPS , OBS SAT proceeds follows: First,
adopt finite domain constraint based representation express basic model. Second, analyze
structure substructures SD introduce additional (redundant) constraints
later boost search minimal cardinality analysis. Third, introduce constraints model
given observation OBS additional constraint imposes bound cardinality
diagnosis (the number unhealthy components). additional constraint reduces
subsequent number iterations search minimal cardinality diagnosis. iteration
involves call underlying SAT solver hence worst-time exponential complexity. So,
reducing number important. Given constraints, apply finite domain constraint
compiler (Metodi & Codish, 2012; Metodi, Codish, & Stuckey, 2013) simplify encode
corresponding CNF. Finally apply SAT solver seek suitable satisfying assignment
solve problem. rest section describe phases detail.
384

fiA N OVEL SAT-BASED PPROACH ODEL BASED IAGNOSIS

Figure 2: Modeling component c composition xor
experimental evaluation illustrating impact various constraints model presented
Section 7.
5.1 Basic Model MBD
build standard approach, Equation (2). However, observe model based
diagnosis weak fault model single observation searching minimal
diagnosis, behavior faulty component assumed produce output opposite
normal behavior. diagnosis assumes component c faulty
still produces normal output replaced smaller diagnosis contain c. Thus,
minimal diagnosis (i.e, subset diagnosis), means components
assumed produce opposite normal output. paper focus minimal
cardinality diagnoses, particular minimal subset, modify Equation (2)
follows, replacing implication bi-implication.
= OBS

^

Hc c

(5)

cCOMPS

model behavior (Hc c ) possibly faulty component c encapsulated together
xor gate illustrated Figure 2. Here, output encapsulated component
xor usual output c negated health variable Hc . One observe Hc
true composition equivalent normal behavior c, otherwise equivalent
component c negated output.
decision model relation component c health variable Hc introducing additional xor gate (instead introducing CNF clauses directly encode Hc c )
two motivations: (1) improve CNF encodings provide tools reason about, simplify
system components advantage uniform representation logic
expressed system model itself; (2) underlying SAT solver apply, CryptoMiniSat (Soos, 2010), offers direct support xor clauses. (1) MBD problem
amenable simplification, (2) underlying SAT solver optimize search
satisfying assignment. comment straightforward apply technique
SAT solvers, support xor clauses, adding CNF encodings model.
finite domain constraint compiler, BEE (Metodi & Codish, 2012), apply, configurable
work types solvers.
Equation (3), write comp(A, B, C) comp {and, or, xor} represent component and00 , or00 xor00 gate inputs A, B output C. write
compH (A, B, C) represent corresponding encapsulated component health variable H.
So,
compH (A, B, C) = comp(A, B, C0 ) xor(H, C0 , C)
385

fiM ETODI , TERN , K ALECH & C ODISH

view
compH (A, B, C)

(Constraints 1)

constraint Boolean variables A, B, C H. Given notation, system depicted
Figure 1 modeled following constraints:
xorHX1 (A, B, Z1 ) andHA1 (A, B, Z2 ) xorHX2 (Z1 , C, D)
andHA2 (Z1 , C, Z3 ) orHO1 (Z2 , Z3 , E)
Finally, add constraints representing system components additional cardinality
constraint:


n

sum leq( Hc c COMPS , k)
(Constraint 2)
specify integer constant k number faulty components must k.
example, system depicted Figure 1 constant k, introduce constraint
sum leq({HX1 , HX2 , HA1 , HA2 , HO1 }, k). Later require satisfy constraints
model minimize value k.
summarize presentation basic model, show complete constraint model
minimal cardinality diagnosis MBD problem Figure 1. integer value k,
solution constraints diagnosis cardinality k:
xorHX1 (A, B, Z1 ) andHA1 (A, B, Z2 ) xorHX2 (Z1 , C, D)
andHA2 (Z1 , C, Z3 ) orHO1 (Z2 , Z3 , E)
sum leq({HX1 , HX2 , HA1 , HA2 , HO1 }, k)
A=1 B=0 C=1 D=0 E=0
type constraint model solved encoding CNF formula applying
SAT solver. repeatedly seeking solution decreasing values k find minimal
cardinality diagnosis. However, apply basic modeling. Instead refine
described rest section.
5.2 Encoding Cardinality Constraints
encoding cardinality constraints CNF topic large body research papers. Many
these, described Een Sorensson (2006), based use Batchers oddeven sorting network (Batcher, 1968). sorting network Boolean circuit n inputs n
outputs. Given Boolean values inputs, output consists values sorted: say,
zeroes ones. context apply sorting network n inputs health
variables n components given system, n outputs sorted values. Now,
encode k health variables take value false assert (k + 1)th output
sorting network one. outputs sorted implies last n k outputs
ones thus imposing k remaining outputs zero. Looking backwards
sorting network implies k inputs take value false.
Sorting networks, Boolean circuits straightforward encode CNF formula.
Batchers odd-even construction results CNF O(n log2 (n)) clauses.
improvements enable encoding O(n log2 (k)) clauses constrain sum n Boolean
inputs less k (Asn, Nieuwenhuis, Oliveras, & Rodrguez-Carbonell, 2009, 2011; Codish
386

fiA N OVEL SAT-BASED PPROACH ODEL BASED IAGNOSIS

& Zazon-Ivry, 2010). paper encode cardinality constraints CNF using BEE (Metodi &
Codish, 2012; Metodi et al., 2013) takes improved approach.
5.3 Cones Sections
Reasoning relations components system description SD enables infer additional constraints number unhealthy components certain subsystems SD.
constraints compiled CNF, help boost search, SAT solver, minimal
cardinality diagnosis. Proposition 2 enables diagnosis algorithm focus top-level diagnoses
based partitioning system cones: cone contains one unhealthy component, without loss generality, assumed dominator cone.
restrict SAT-based search top-level minimal cardinality diagnoses simply add
following constraints denotes set dominated components.
V

(Constraint 3)

cD Hc

Introducing constraints indicate healthy components reduces number (unassigned) health
variables hence boosts search minimal cardinality diagnosis. Section 7 show
reasoning cones restrict search top-level diagnoses improves considerably search
minimal cardinality diagnosis.
Motivated utility partitioning system cones, seek general partitioning,
enables apply similar cardinality constraints larger subsystems components.
end introduce notion section. denote sysout(c) set system outputs
occur end path component c. example, system depicted Figure 3
sysout(C1 ) = {O2 , O3 } sysout(C5 ) = {O1 , O2 }.
Definition 5 (Section) Given system description SD components COMPS define disjoint
partitioning COMPS = S1 S2 Sn every c1 , c2 COMPS , c1 c2
section Si sysout(c1 ) = sysout(c2 ).

C5
C1
C3

C2
C4

S1

S2

C6

S3

C7

C8

C9

C10

O1
S4

S5

O2

O3

Figure 3: Partitioning system cones sections.
Figure 3 shows partitioning system maximal cones sections. cones depicted dotted lines, sections dashed. example, components {C1 , C2 } form
cone, section S1 consists three cones. observe partitioning system sections
done polynomial time demonstrated Algorithm 1 presented below. Given partitioning
387

fiM ETODI , TERN , K ALECH & C ODISH

{S1 , . . . , Sn } sections, introduce constraint model following constraints improve encoding hence subsequent search minimal cardinality diagnosis.
section Si , constraint


n

sum leq( Hc c Si , bi )
(Constraints 4)
expresses sum negated health variables Si bounded constant bi
smaller following two bounds number unhealthy components section
Si : (a) number outputs Si ; (b) value |sysout(c)| component
c Si . Note Definition 5, value c Si . justify statement
Proposition 3.
illustrate utility sections, consider system given Figure 3 partition
5 sections. Observe section labeled S1 3 outputs, component c S1
2 corresponding system outputs (|sysout(c)| = 2). So, b1 = min{3, 2} hence 2
upper bound number unhealthy components S1 . improvement
reasoning cones bound number unhealthy components S1 3
(since three cones). Similarly, b2 = min{1, 2}, b3 = min{1, 1}, b4 = min{1, 1}
b5 = min{1, 1}.
Reasoning constraints number faulty components per section facilitates
MBD encoding another way. Constraints 4 already encoded number faulty
components per section. numbers partial sums context Constraint 2
specifies total number faulty components system reused encoding.
following justifies Constraints 4 .
Proposition 3 Let hSD, COMPS , OBS MBD problem, SD section, c component minimal cardinality diagnosis. Then, (a) number outputs S,
(b) value |sysout(c)| bounds number unhealthy components (from ) S.
Proof: statement regarding number outputs follows directly assertion
de Kleer (2008) number outputs (sub-) system bound number
unhealthy components. So, remains prove statement regarding |sysout(c)|.
Assume premise proposition, denote || = k |S | = (so k). Assume
contradiction > |sysout(c)|. construct diagnosis 0 less k unhealthy
components. First note obvious: given propagate observed system inputs
system outputs step choose component known inputs produce
normal output component healthy, opposite normal output otherwise.
diagnosis process result contradictions propagated outputs
observed outputs.
Now, take 0 = \ S. (yet) diagnosis. 0 , propagate observed system
inputs way . Now, 0 diagnosis
flipped system outputs (those contradict observed outputs). flipped output
must due one unhealthy components marked healthy 0
sysout(c). consider component g outputs o. g 0 , remove it;
g 6 0 , add it. So, 0 diagnosis k 0 = |0 | k + |sysout(c)| < k.
Algorithm 1 describes partition system sections. Denoting components
outputs system COMPS = {c1 , . . . , cn } OUTS = {o1 , . . . , om }, n Boolean
388

fiA N OVEL SAT-BASED PPROACH ODEL BASED IAGNOSIS

matrix b computed bij = true oj sysout(ci ) false otherwise. Figure 4 shows
example matrix b system Figure 3. So, Definition 5, pair components ci , cj
section row row j matrix b identical. instance, section
S5 includes components C9 C10 since system output O3 identical. computational
complexity partitioning process complexity running graph search algorithm
every system output worst case O(n2 m). algorithm returns mapping
components bit vectors seen section identifiers. So, algorithm returns
mapping components sections.
Algorithm 1 partitioning system sections
input: system (view graph)
output: partitioning system sections
= {c1 , . . . , cn }
system components
OUTS
= {o1 , . . . , om } system outputs
b
= (bij )
n Boolean matrix
(oj OUTS )
apply DFS reverse edges system, source = oj
(ci COMPS )
bij
oj )

= (ci reachable
return ci 7 hbi1 , . . . , bim 1 n

1: Denote:

2:
3:
4:
5:
6:

COMPS

Example 1 (partition sections) Consider
(abstract) system depicted Figure 3 COMPS = {c1 , . . . , c10 }
OUTS = {o1 , . . . , o3 }. Boolean matrix evaluated application Algorithm 1 illustrated
Figure 4.

Figure 4: Partitioning system
Figure 3 sections
another benefit partitioning sections: identification cones may performed per section efficient. works because, component X dominated component G sysout(X ) = sysout(G) implying components cone
always section. example, Figure 3 component C1 dominated C2
sysout(C1 ) = sysout(C2 ) = {O1 , O2 }.
recursively defined Algorithm 2 shows compute cones given partition sections.
computes set dominators component c section system. denote
succ(c) set components c feeds directly. c feeds component
dominated itself. Otherwise, c dominated c0 c0
dominated elements succ(c). instance, given section S1 component C1 Figure 3
succ(C1 ) = {C2 }. next recursive call succ(C2 ) include component S1
389

fiM ETODI , TERN , K ALECH & C ODISH

(condition line 2) thus C2 returned (line 5). union calls (C1 , C2 ) returned
cone (line 3).
straightforward implement Algorithm 2 efficiently using memoization table avoid
recomputing dominators components already encountered. Since system directed acyclic
graph, recursion Algorithm 2 halt leaf node reached. Thus complexity
calculating dominators every component c section O(|S|2 ). Given sets dominators per component, straightforward specify set maximal cones. component c
dominator maximal cone, dominated itself, maximal cone corresponding
c set components c dominator.
find cones system, Algorithm 2 applied per component per section,
cost depends size largest section. contrast, without partition sections,
algorithm applied, considering components system instead
components section. Practice shows partition sections benefits computation
cones.
Algorithm 2 dominators (component c, section S, system C)
input: component c section system C
output: set dominators c



1: Denote: succ(c) = c0 C output c input c0
2: (succ(c) S) \
3:
return {c}
dominators(c0 , S, C)
c0 succ(c)

4: else
5:
return {c}

5.4 Modeling Observation Boosting Search
Let OBS + OBS denote sets variables assigned true false OBS , respectively. Then,
model observation add obvious constraints.
V
V
(Constraint 5)
xOBS x
xOBS + x
improve search minimal cardinality diagnosis one introduce upper bound
minimal cardinality: number outputs system upper bound minimal
cardinality (de Kleer, 2008). bound, well section-specific constraint given
(Constraints 4 ) ignores observed inputs outputs. Siddiqi Huang (2011) propose
obtain tighter upper bound minimal cardinality given observation propagating
input values system, taking upper bound number contradictions
observed propagated outputs. example, considering MBD problem
Figure 1, k = 2 upper bound size minimal cardinality diagnosis
system 2 outputs. Siddiqi Huangs proposal states 1 upper bound
propagating inputs system one contradiction observed
outputs.
Siddiqi Huangs (2011) proposal intuitively appealing, correct case
observed output input another component, fact results restricted
systems case. work example Figure 5. Propagating
390

fiA N OVEL SAT-BASED PPROACH ODEL BASED IAGNOSIS

Figure 5: Minimal cardinality diagnosis size 2, propagating observed inputs leads 1
contradiction observed outputs.
observed inputs system assigns 0 outputs indicating single contradiction
observation (on O1 ). However, smallest diagnosis example cardinality 2.
example contrived: 83 350 observations system 74181 74XXX benchmark,
exhibit minimal cardinality diagnosis larger (erroneous) bound obtained counting
conflicts propagated observed outputs.
Algorithm 3 computing upper bound number faulty components propagating observed inputs counting conflicts. algorithm computes diagnosis , ||
thus upper bound minimal cardinality diagnosis. basic idea propagate inputs
long contradict observed, already computed, outputs. components
system processed one time. line 3 select component c whose inputs
already determined (initially system inputs determined). c consider
already determined output, oobs , denote oobs = output yet determined.
consider propagated output oprop obtained propagating inputs c assuming c healthy. three cases (lines 610): c already determined output
fix output oprop mark c healthy. c already determined output
consistent oprop mark c healthy. Otherwise mark c healthy,
propagate output (which already determined).
Algorithm 3 Find diagnosis (and upper bound || min. card.)
input: system components, COMPS , observation, OBS
output: diagnosis
1: C COMPS , =
2: (C 6= )
3:
select c C inputs c determined
4:
oobs value output c (N/A undefined)
5:
oprop value propagating inputs c (assume c healthy)
6:
(oobs = N/A
7:
set output c oprop mark c healthy
8:
else (oobs = oprop )
9:
mark c healthy
10:
else
11:
mark c faulty = {c}
12:
C C \ {c}
13: Return

Algorithm 3 terminates marked components healthy faulty
fact determined correct diagnosis. applying Algorithm 3 provides upper bound
minimal cardinality diagnosis number components marked faulty returned
diagnosis. Note Algorithm 3 correct given probes (observed values outputs
391

fiM ETODI , TERN , K ALECH & C ODISH

internal components). Assuming components maintained data-structure
components sorted (topologic) according depth, Algorithm 3 performed single
linear traversal data-structure complexity O(|COMPS |).
example application Algorithm 3, consider circuit Figure 5. Propagating
inputs gate A1 gives output 0 contradiction observation O1 . Hence, mark A1
unhealthy propagate observation O1 = 1 input A2 together I3 = 1. results
additional contradiction observation O2 = 0 mark A2 unhealthy too,
report = {A1 , A2 } hence value 2 upper bound minimal cardinality.
Let kUB bound found application Algorithm 3. refine Constraint 2 introduce
instead:

n


sum leq( Hc c COMPS , kUB )
(Constraint 20 )
appreciate impact Algorithm 3 note that, benchmark considered
paper, Algorithm 3 determines upper bound equal actual minimal cardinality 81%
28,527 observations considered. course, even given precise upper bound, MBD
algorithm still needs validate minimality. SAT-based approach requires one single
iteration underlying SAT solver. Typically, hardest iteration involves call
unsatisfiable largest cardinality instance unsatisfiable.
5.5 Compiling Constraints CNF
Metodi Codish (2012) introduced compiler called BEE encodes finite domain constraints
CNF. Besides facilitating encoding process, compiler applies partial evaluation
optimizations simplify constraints encoding CNF. particular, applies
equi-propagation (Metodi, Codish, Lagoon, & Stuckey, 2011) process identifying
equalities literals (and constants) implied equations given constraint.
X=L implied constraint (where X variable L literal Boolean constant),
occurrences X replaced L, reducing number variables subsequent CNF
encoding. illustrate constraint simplification diagnosis circuit Figure 1. Consider
following constraints (we omitted constraints contribute
example):
(1)
(2)
(3)
(4)
(5)

xorHX1 (A, B, Z1 ) andHA1 (A, B, Z2 ) xorHX2 (Z1 , C, D)
andHA2 (Z1 , C, Z3 ) orHO1 (Z2 , Z3 , E)
sum leq({HX1 , HX2 , HA1 , HA2 , HO1 }, k)
A=1 B=0 C=1 D=0 E=0
HA1 = 1 HA2 = 1

constraints lines (1) (3) comprise basic constraint model described Section 5.1;
constraints line (4) model observation; constraints line (5) express without
loss generality dominated components {A1 , A2 } cone {A1 , A2 , O1 } healthy.
observe following equi-propagation steps:
1. (A = 1) (B = 0) xorHX1 (A, B, Z1 ) |= (Z1 = HX1 )
2. (A = 1) (B = 0) (HA1 = 1) andHA1 (A, B, Z2 ) |= (Z2 = 0)
392

fiA N OVEL SAT-BASED PPROACH ODEL BASED IAGNOSIS

3. (C = 1) (HA2 = 1) andHA2 (Z1 , C, Z3 ) |= (Z1 = Z3 )
4. (C = 1) (D = 0) xorHX2 (Z1 , C, D) |= (Z1 = HX2 )
5. (E = 1) (Z2 = 0) orHO1 (Z2 , Z3 , E) |= (Z3 = HO1 )
(and given) equalities literals obtain substitution:
)
(
7 1, B 7 0, C 7 1, 7 0, E 7 0, Z1 7 HX1 , Z2 7 0,
=
Z3 7 HX1 , HX2 7 HX1 , HA1 7 1, HA2 7 1, HO1 7 HX1
Applying specialize constraint system get:
(1)
(2)
(3)
(4)
(5)

xorHX1 (1, 0, HX1 ) and1 (1, 0, 0)
xorHX1 (HX1 , 1, 0)
and1 (HX1 , 1, HX1 ) or(HX1 ) (0, HX1 , 0)
sum leq({HX1 , HX1 , 0, 0, HX1 }, k)
1=1 0=0 1=1 0=0 0=0
1=1 1=1

Now, constraints tautologies remove them. remains single
constraint:
(3) sum leq({HX1 , HX1 , HX1 }, k)
satisfied k = 1 HX1 = 1, implied
HA1 = 1, HA2 = 1, HX2 = 1, HO1 = 0. example illustrates equi-propagation partial evaluation applied simplify constraints prior encoding CNF.
summarize following observations:
1. constraint model MBD polynomial size system: component
contributes constraint fresh health variable, cone contributes assignment
health variables dominated components, section contributes cardinality constraint, finally observation contributes assignment input variables
system.
2. Constraint simplification using BEE polynomial size constraint model.
because: (a) simplification step reduces number Boolean variables model
least one linear number steps, (b) step checks applicability
fixed number simplification patterns constraint.
3. CNF encoding constraint model polynomial size, constraints
introduces polynomial number clauses CNF (all constraints supported
BEE property).

6. Process Implementation
section summarize different phases diagnosis process approach.
Section 6.1 focus case seek single minimal cardinality diagnosis,
Section 6.2, case seek minimal cardinality diagnoses.
393

fiM ETODI , TERN , K ALECH & C ODISH

6.1 Single Minimal Cardinality Diagnosis
process single minimal cardinality diagnosis consists four phases. Let =
hSD, COMPS , OBS MBD problem. first two phases construct constraint model.
First, focusing SD, introduce constraints independent observation,
per observation introduce constraints. third phase encode constraint model
CNF, k k upper bound size minimal cardinality diagnosis.
fourth phase, solving k using SAT solver results diagnosis cardinality k.
detail four phases.
Phase 1. Modeling system (offline): system SD first preprocessed partition
sections (Algorithm 1) cones (Algorithm 2). Then, introduce Constraints 1 model SD
terms components behavior introduce Constraints 4 bound number unhealthy
components per section. Finally, using information cones, add Constraint 3 asserts
that, without loss generality, dominated components healthy. system preprocessing performed offline, per system.
Phase 2. Modeling observation (online): Constraint 5 added model observation
Constraint 20 added bound total number unhealthy components upper
bound kUB obtained application Algorithm 3.
OBS ,

Phase 3. Encoding: constraint system simplified online, observation
encoded CNF k , applying optimizing CNF compiler (Metodi et al., 2011). parameter k
reflects bound set Constraint 20 bound number unhealthy components diagnosis.
Initially, k computed Algorithm 3.
Phase 4. Solving: compute diagnosis, , seek satisfying assignment encoding, k ,
applying CryptoMiniSat solver (Soos, 2010). set health variables assigned
false assignment. Denoting || = k 0 , seek satisfying assignment, time
0
formula k 1 . satisfying assignment found, indicates smaller diagnosis, 0 .
Otherwise, minimal cardinality. process invoked repeatedly, time finding
0
smaller diagnosis, k 0 formula k 1 satisfiable. Then, diagnosis found
previous iteration minimal cardinality.
facilitate search minimal cardinality diagnosis, apply SAT solver wrapper, SCryptoMiniSat (Metodi, 2012b). SCryptoMiniSat takes input CNF formula (k )
Boolean variables representing number k. provides satisfying assignment minimizes k. SCryptoMiniSat takes advantage incrementality underlying SAT solver
maintains learned clauses consecutive calls add clauses.
Algorithm 4 illustrates process finding single minimal cardinality diagnosis (identified
line 17), returning set minimal cardinality diagnoses (line 23).
6.2 Minimal Cardinality Diagnoses
find minimal cardinality diagnoses first apply process described Section 6.1 find
single minimal cardinality diagnosis. provides us value k 0 indicating number
faulty components minimal cardinality diagnosis.
Then, enumerate set top-level minimal cardinality diagnoses (each size k 0 )
apply additional functionality SCryptoMiniSat allows enumerate (possibly
394

fiA N OVEL SAT-BASED PPROACH ODEL BASED IAGNOSIS

Algorithm 4 SATbD
input: system SD components COMPS observation OBS
output: , set minimal cardinality diagnoses
1:
2:
3:
4:
5:
6:
7:
8:
9:
10:
11:
12:
13:
14:
15:
16:
17:
18:
19:
20:
21:
22:
23:

// Phase 1: Offline pre-processing

Sections partition SD sections
Constraints
(S Sections)
(c S)
Add Constraints 1 Constraints
Dominators dominators(c, S, SD)
|Dominators| > 1
Add Constraint 3 component c Constraints

// Algorithm 1

// describes normal behavior component c
// Algorithm 2
// sets dominated gates healthy

// Phase 2: Modeling observation

Add Constraint 5 Constraints
Find initial diagnosis
Add Constraint 20 Constraints kUB = ||

// add constraints representing OBS
// Algorithm 3

// Phase 3: Encoding

BEE(Constraints)

// run constraint compiler obtain CNF

// Phase 4: Solving

MC SCryptoMiniSatMinimize(k,)

// find min. card. diagnosis (assignment minimizes k = ||MC )

// Finding diagnoses minimal cardinality

cnf(kUB = |M C |)
, LD SCryptoMiniSatAllSolutions()
( LD )
Add diagnoses expanded
return

395

// restrict Constraint 20 use kUB = |M C |
// find top-level diagnoses
// Proposition 2

fiM ETODI , TERN , K ALECH & C ODISH

Name
74181
74182
74283
c432
c499
c880
c1355
c1908
c2670
c3540
c5315
c6288
c7552

|COMP|
65
19
36
160
202
383
546
880
1193
1669
2307
2416
3512

System Details


offline
14
8
0.02
9
5
0.01
9
5
0.01
36
7
0.03
41
32
0.08
60
26
0.06
41
32
0.24
33
25
0.37
233 140
0.29
50
22
0.71
178 123
1.50
32
32
1.48
207 108
1.73

Feldman
#obs.
350
250
202
301
835
1182
836
846
1162
756
2038
404
1557

DXC-09

1-10

11-20

21-30

100
100
100
100
93
44
87
93
66
98
47
100
49

0
0
0
0
7
44
13
7
34
2
45
0
46

0
0
0
0
0
12
0
0
0
0
8
0
5

#obs.
54
50
30
45
141
198
98
127
168
36
248
1
176

1-10

11-20

21-30

100
100
100
100
73
41
79
74
52
100
43
100
45

0
0
0
0
27
40
21
26
43
0
40
0
41

0
0
0
0
0
19
0
0
5
0
17
0
14

Sidd.
#obs.
700
400
800
800
800
800
40
40
40

Table 1: Benchmark suite: systems 74XXX ISCAS-85, observations: Feldman, DXC-09
Siddiqi.

specified time-out) all, specified number of, satisfying assignments given CNF. apply
option enumerate satisfying assignments formula, k described Section 6.1
k = k0 .
Finally, based Proposition 2 expand obtained top-level diagnoses provide minimal cardinality diagnoses. Note observation TLD expanded easily
minimal cardinality diagnoses applies diagnosis algorithm. such, diagnosis algorithms
general focus, compared finding TLDs, instead finding minimal cardinality
diagnoses.

7. Experimental Results
section presents experimental evaluation proposed SAT-based encoding MBD.
Section 7.1, consider search single minimal cardinality diagnosis compare
performance SATbD algorithms: HA* (Feldman & van Gemund, 2006), CDA* (Williams
& Ragno, 2007) SAFARI (Feldman et al., 2010a). Section 7.2, consider search
minimal cardinality diagnoses compare SATbD algorithms: HDIAG (Siddiqi & Huang,
2007) DCAS (Siddiqi & Huang, 2011). Finally, Section 7.3, evaluate impact
various components SAT-based encoding MBD. experiments run Intel Core
2 Duo (E8400 3.00GHz CPU, 4GB memory) Linux (Ubuntu lucid, kernel 2.6.32-24-generic)
unless stated otherwise. entire set tools, range benchmarks, well detailed
report results found online (Metodi, 2012a; Metodi, Stern, Kalech, & Codish, 2012b).
Table 1 provides basic details concerning systems three observation sets benchmark suite. systems 74XXX (Hansen, Yalcin, & Hayes, 1999), described first 3 rows,
ISCAS-85 (Brglez et al., 1989), described following 10 rows. left column
table specifies system name. next four columns (from left) describe systems:
numbers components, inputs outputs systems, preprocessing time
per system SAT-based approach. includes actions performed per system
described Section 6.1: decomposing system sections cones computing bounds
per section.
396

fiA N OVEL SAT-BASED PPROACH ODEL BASED IAGNOSIS

rest columns divided three groups describing experiments three observation sets. first two describe observation set generated Feldman et al. (2010a)
DXC-09 observation set used diagnosis competition (DXC) 2009. applied
experimentation evaluate search single minimal cardinality diagnosis. minimal
cardinality diagnoses observations 1 30. columns
two groups indicate number observations distribution observations according
size minimal cardinality diagnoses. observations sets considered hard
many them, high minimal cardinality diagnoses. third group (the rightmost column
table) presents observation set generated Siddiqi Huang (2011) minimal
cardinality bounded 8 observations distributed uniformly according size
minimal cardinality diagnoses. set used evaluation search minimal
cardinality diagnoses.
Table 1 illustrates comprehensive experimental benchmark involving total 28,527 observations varied minimal cardinality diagnosis size. Observe (offline) preprocessing
time per system negligible. instance, reprocessing largest system, c7552, takes less
two seconds.
7.1 SATbD vs. MBD Algorithms: Single Minimal Cardinality Diagnosis
compare SATbD algorithms: HA* (Feldman & van Gemund, 2006), CDA* (Williams
& Ragno, 2007) SAFARI (Feldman et al., 2010a) application search single minimal cardinality diagnosis. HA* CDA* based complete algorithm find minimal
subset diagnoses contain diagnoses. configured
first minimal subset diagnosis guaranteed minimal cardinality configuration apply comparison SATbD. SAFARI applies algorithm based stochastic
search guarantee minimal cardinality even minimal subset diagnosis. Feldman et al. (2010a) report even single double fault cardinalities, SAFARI always
find minimal cardinality. So, expense minimality, SAFARI often faster, comparing
HA* CDA*.
Name

HA*
Succ.
Time
rate%
Sec.

74181
68.3
74182
100.0
74283
100.0
c432
78.1
c499
24.1
c880
11.9
c1355
11.4
c1908
6.4
c2670
12.3
c3540
3.7
c5315
2.7
c6288
13.6
c7552
4.2
80 sec timeout
c7552
7.3

CDA*
Succ.
Time
rate%
Sec.

Succ.
rate%

SAFARI
Min Diag.
card.%
ratio

3.15
0.00
0.04
3.63
5.45
3.76
3.90
1.75
4.83
4.30
11.94
7.87
1.06

46.3
100.0
100.0
38.2
10.1
6.3
0.0
0.0
0.0
0.0
0.0
0.0
0.0

4.51
0.01
1.45
5.15
1.22
6.66
-

100.0
100.0
100.0
100.0
100.0
100.0
100.0
100.0
100.0
100.0
100.0
53.5
0.0

44.0
91.0
57.0
28.0
7.0
48.0
5.0
17.0
14.0
9.0
9.0
25.0
-

20.77

0.0

0.0

99.5

13.0

Time
Sec.

SATbD
Succ.
Time
rate%
Sec.

1.33
1.04
1.28
1.68
2.00
1.09
1.96
1.92
1.52
2.06
1.96
7.88
-

0.00
0.00
0.00
0.03
0.05
0.18
0.37
1.08
2.71
5.25
13.34
16.18
-

100.0
100.0
100.0
100.0
100.0
100.0
100.0
100.0
100.0
100.0
100.0
100.0
99.3

0.02
0.01
0.02
0.03
0.04
0.05
0.07
0.14
0.15
0.27
0.42
0.56
1.07

1.68

43.50

100.0

1.49

Table 2: Single minimal cardinality diagnosis, Feldmans observations (30 sec. timeout).
397

fiM ETODI , TERN , K ALECH & C ODISH

Algorithm
System
74181
74182
74283
c432
c499
c880
c1355
c1908
c2670
c3540
c5315
c6288
c7552

Min
0.00
0.00
0.00
0.00
0.02
0.01
0.04
0.44
0.05
0.22
0.19
0.21
0.47

HA*
Max
29.40
0.00
0.76
29.53
21.43
29.43
22.12
14.78
27.91
29.42
29.68
28.32
9.47

St. dev.
6.04
0.00
0.08
6.33
5.03
6.70
3.88
2.51
6.88
6.26
11.98
8.38
1.86

Min
0.00
0.00
0.00
0.04
0.88
0.24
-

CDA*
Max
St. dev.
29.01
7.30
0.08
0.02
28.14
2.79
26.26
7.00
1.55
0.21
29.87
8.18
-

Min
0.00
0.00
0.00
0.02
0.04
0.14
0.32
0.95
2.44
4.78
12.24
13.27
30.00

SAFARI
Max
St. dev.
0.01
0.00
0.00
0.00
0.00
0.00
0.03
0.00
0.06
0.00
0.21
0.01
0.43
0.02
1.19
0.04
3.03
0.09
6.20
0.16
14.68
0.36
30.96
4.78
30.22
0.01

Min
0.00
0.00
0.00
0.00
0.01
0.01
0.02
0.03
0.04
0.06
0.09
0.10
0.14

SATbD
Max
St. dev.
0.03
0.01
0.02
0.00
0.03
0.01
0.05
0.01
0.07
0.01
0.14
0.01
0.10
0.02
0.52
0.04
0.22
0.04
0.84
0.10
5.93
0.31
1.27
0.22
24.30
2.03

Table 3: Single minimal cardinality diagnosis, Feldmans observations, additional statistics.
Table 2 presents evaluation focusing Feldmans observations imposing 30 second timeout (except bottom line). columns indicate algorithm, percentage observations solved within prescribed timeout (Succ. rate %) average search time (Time
Sec.) average computed set observations excluding timeouts. SATbD,
search time: (1) includes actions performed per observation described Section
6.1 (Modeling observation (online)); (2) Excludes cost actions performed per system described Table 1 Section 6.1 (column offline); (3) includes times adding
observation cardinality constraints, encoding CNF solving SCryptoMiniSat.
results Table 2 show clearly SATbD outperforms evaluated algorithms,
terms success rate well terms average runtime. SATbD outperforms
SAFARI succeeds compute diagnosis almost systems. However,
small percentage minimal cardinality indicated column Min card%
shows percentage (excluding timeouts) observations diagnosis found
SAFARI actually minimal cardinality. show, column titled Diag. ratio,
ratio average cardinality diagnoses found SAFARI average minimal
cardinality. example looking data system 74181, 44% diagnoses found
SAFARI minimal, average diagnosis size found 1.33 times larger average
size minimal cardinality diagnosis. observe SATbD computes verifies minimal
cardinality diagnoses even observations minimal cardinality 30. best
knowledge, algorithm succeeded compute minimal cardinality diagnosis hard
observations.
Table 3 details additional statistics running times presented Table 2, showing
minimum, maximum, standard deviation runtime solved observations.
seen, standard deviation SATbD small compared algorithms.
displayed statistics cases solved within 30 second timeout. Table entries
- mark cases corresponding algorithms could find minimal cardinality diagnosis
(within timeout) even single observation.
Observe Table 2 99.3% 1,557 observations system c7552 solved SATbD
within 30 second timeout (only 11 observations solved). observations are,
however, solved within 80 seconds each, indicated last row table. One may observe
SATbD solves observations given 80 seconds, algorithms still able
398

fiA N OVEL SAT-BASED PPROACH ODEL BASED IAGNOSIS

solve them, exception SAFARI. Given extended 80 seconds timeout, SAFARI
able solve almost observations system, returns minimal cardinality
diagnoses 13% cases, average, size diagnosis found SAFARI
1.68 times larger actual minimal cardinality.
Name

HA*
Succ.
Time
rate%
Sec.

CDA*
Succ.
Time
rate%
Sec.

Succ.
rate%

SAFARI
Min
card.%

Time
Sec.

SATbD
Succ. Time
rate%
Sec.

74181
74182
74283
c432
c499
c880
c1355
c1908
c2670
c3540
c5315
c6288
c7552

94.4
100.0
100.0
75.6
12.8
10.1
9.2
7.1
11.3
11.1
1.2
100
2.3

57.4
100.0
100.0
40.0
5.7
4.5
0.0
0.0
0.0
0.0
0.0
0.0
0.0

100.0
100.0
100.0
100.0
100.0
100.0
100.0
100.0
100.0
100.0
100.0
100.0
0.0

65
90
80
22
3
48
4
14
18
31
7
100
-

0.00
0.00
0.00
0.03
0.05
0.18
0.38
1.12
2.85
5.83
13.12
25.28
-

100.0
100.0
100.0
100.0
100.0
100.0
100.0
100.0
100.0
100.0
100.0
100.0
100.0

3.86
0.00
0.01
3.70
4.81
5.51
3.33
3.10
5.86
1.23
19.77
0.24
0.47

5.19
0.01
0.32
7.17
1.20
9.66
-

0.02
0.00
0.01
0.03
0.05
0.05
0.07
0.20
0.14
0.29
0.62
0.1
1.01

Table 4: Single minimal cardinality diagnosis, DXC-09 observations (30 sec. timeout).
Table 4 shows evaluation DXC-09 benchmark format Table 2
(except omit details regarding size diagnoses found SAFARI). results
exhibit trend: SAT-based method substantially faster previous algorithms. Note benchmark even contains observations minimal cardinality diagnoses
31 (!), solved SATbD 30 seconds timeout. Table 5 provides additional
statistics runtimes format Table 3. too, see small standard
deviation SATbD compared algorithms. Note data c6288 system
given, single observation system DXC-09 observation set.
Figure 6 details evaluation single minimal cardinality diagnosis Feldmans observations four systems (from smaller larger). system plot average runtime
find single minimal cardinality diagnosis (including timeouts) function value
minimal cardinality. black diamond labeled Timeout marks time limit,
algorithms halted.
Typically, diagnosis problem becomes harder minimal cardinality increases. First
consider three plots Figures 6a, 6b 6c. two upper curves correspond systems
HA* CDA* quickly converge 30 seconds timeout. curves SAFARI
less constant minority diagnoses actually minimal cardinality (7%
c499, 48% c880 9% c5315). performance SAFARI affected
cardinality since first finds arbitrary diagnosis proceeds stochastically minimize
diagnosis using pre-defined number attempts. process involves consistency checks
affected size system cardinality diagnosis.
consider plot Figure 6d omit curves HA* CDA* depict
constant 80 second timeout. performance SAFARI less constant (around
average 43.5 seconds) 13% diagnoses found actually minimal cardinality.
contrast, SATbD considerably faster scales solve even hardest observations.
399

fiM ETODI , TERN , K ALECH & C ODISH

Algorithm
System
System
74181
74182
74283
c432
c499
c880
c1355
c1908
c2670
c3540
c5315
c7552

Min
Min
0.00
0.00
0.00
0.00
0.01
0.01
2.74
0.85
0.05
0.31
9.86
0.47

HA*
Max
Max
27.26
0.00
0.02
23.06
11.34
29.60
6.52
15.34
26.04
3.44
28.39
0.47

St. dev.
St. dev.
6.70
0.00
0.01
5.98
4.99
8.34
1.20
4.63
8.06
1.49
9.34
0.00

CDA*
Max
St. dev.
Max
St. dev.
20.12
7.44
0.08
0.02
1.22
0.40
26.14
8.75
1.42
0.16
20.33
8.97
-

Min
Min
0.00
0.00
0.01
0.05
0.93
0.27
-

SAFARI
Max
St. dev.
Max
St. dev.
0.01
0.00
0.00
0.00
0.00
0.00
0.04
0.00
0.07
0.01
0.24
0.01
0.42
0.02
1.25
0.05
3.07
0.11
6.18
0.16
14.11
0.32
-

Min
Min
0.00
0.00
0.00
0.03
0.04
0.16
0.34
1.00
2.56
5.53
12.10
-

Min
Min
0.00
0.00
0.00
0.01
0.01
0.02
0.02
0.03
0.05
0.06
0.10
0.17

SATbD
Max
St. dev.
Max
St. dev.
0.03
0.01
0.02
0.00
0.03
0.01
0.04
0.01
0.07
0.01
0.07
0.01
0.09
0.02
1.36
0.16
0.21
0.03
0.84
0.20
10.06
0.90
11.54
1.54

100 Timeout

100

Time (sec.), log scale

Time (sec.), log scale

Table 5: Single minimal cardinality diagnosis, DXC-09 observations (30 sec. timeout), additional
statistics.

10
CDA*

HA*

Safari

SATbD

1
0.1

10
CDA*

HA*

Safari

SATbD

1
0.1

0.01

0.01
1

3

5
7
9
11
Minimal Cardinality

13

15

1

(a) System c499 (30 sec. timeout).
100

Time (sec.), log scale

10
CDA*

HA*

Safari

3

5

7

9 11 13 15 17 19 21 23 25
Minimal Cardinality

(b) System c880 (30 sec. timeout).

100 Timeout

Time (sec.), log scale

Timeout

SATbD

1

Timeout

10

Safari

SATbD

1

0.1

0.1

0.01

0.01
1

3

5

7

9 11 13 15 17 19 21 23 >24
Minimal Cardinality

1

(c) System c5315 (30 sec. timeout).

3

5

7

9 11 13 15 17 19 21 >22
Minimal Cardinality

(d) System c7552 (80 sec. timeout).

Figure 6: Single minimal cardinality diagnosis, Feldmans observations, average search time per
size minimal cardinality diagnosis.

results section clearly indicate SAT based approach outperforms
three algorithms search single minimal cardinality diagnosis.
400

fiA N OVEL SAT-BASED PPROACH ODEL BASED IAGNOSIS

Name
c432
c499
c880
c1355
c1908
c2670
c5315
c6288
c7552

IntelXeon X3220, 2.4GHz, 2Gb RAM
HDIAG
DCAS
Succ.
Time
Succ.
Time
rate%
Sec.
rate%
Sec.
100.0
0.21
100.0
0.31
100.0
0.12
100.0
0.20
99.0
0.07
99.0
0.12
99.5
0.16
99.5
0.15
90.5
368.13
76.5
82.25
90.0
176.17
100.0
3.15
0.0
97.5
52.34
0.0
27.5
305.10
0.0
87.5
260.93

Intel Core 2-Duo E8400, 3.00GHz, 4GB RAM
SATbD
Succ.
TLD
Time
TLD

rate%
Sec.
Sec.
count
count
100.0
0.07
0.09
7.9
72
100.0
0.08
0.10
2.4
345
100.0
0.08
0.11
10.3
963342
100.0
0.13
0.16
2.8
331927
100.0
0.25
0.30
19.9
1894733
100.0
0.23
0.29
6.7
8492
100.0
0.58
0.67
26.4
356949
50.0
104.58
105.14
7231.8
37499
100.0
1.01
1.12
64.9
68396

Table 6: Siddiqis observation set: search minimal cardinality diagnoses (1800 sec. timeout).
7.2 SATbD vs. MBD Algorithms: Minimal Cardinality Diagnosis
compare SATbD algorithms HDIAG (Siddiqi & Huang, 2007) DCAS (Siddiqi
& Huang, 2011) application search minimal cardinality diagnosis. algorithms search complete set minimal cardinality diagnoses. consider observations
generated Siddiqi Huang (2011) minimal cardinality bounded 8.
Table 6 presents results evaluation. results HDIAG DCAS quoted
Siddiqi Huangs work (2011) experiments reported IntelXeon X3220
2.4GHz, 2Gb RAM. present results systems Siddiqi Huang reported
results. Although machines differ (with advantage SATbD), results show clear
advantage SATbD faster orders magnitude larger systems.
three algorithms table reports on:
Succ. rate% indicating percentage observations algorithm finds
minimal cardinality diagnoses within 1800 second timeout;
Time sec. indicating average computation times find minimal cardinality diagnoses
(taking average set observations time out).
SATbD report
TLD sec. average runtime compute top level diagnoses;
TLD count number top level diagnoses;
count total number minimal cardinality diagnoses found.
Table 6 illustrates SATbD clearly outperforms HDIAG DCAS. succeeds compute
minimal cardinality diagnoses observations systems except c6288
succeeds 50% 40 observations compared 26.5% DCAS. Note
higher success rate, average runtimes SATbD involve harder observations solved
DCAS.
Observe diagnosis time SATbD spent find top level diagnoses indicated column TLD sec. cost compute minimal cardinality diagnoses indicated
column Time sec difference two columns negligible. reflects
401

fiM ETODI , TERN , K ALECH & C ODISH

fact set minimal cardinality diagnoses derived cross product representation
set minimal cardinality diagnoses. Observe number TLDs (column TLD
count) small comparison huge number minimal cardinality diagnoses (column
count). focus TLDs essential additional solution invokes additional call
SAT solver. Using SAT solver find minimal cardinality diagnoses directly would
hopeless due sheer number.
7.3 Impact Components SATbD
proceed illustrate impact various components SAT-based encoding MBD.
SATbD designed using variety techniques distinguish simple vanilla encoding MBD problem SAT problem described Section 5.1. present evaluation
impact techniques based several experiments using following five configurations SAT based system. configurations incremental: starting basic
model, one adds another component, ending final model applied SATbD.
1. Vanilla. minimal basic SAT encoding MBD described Section 5.1.
assume naive upper bound minimal cardinality determined number
outputs given system.
2. Improved Cardinality Bound. assume vanilla setting consider
improved bound minimal cardinality diagnosis using Algorithm 3.
3. E.P. setting previous applies Equi-Propagation constraint compiler Metodi Codish (2011, 2012) optimize encoding described Section 5.5.
4. Cones. setting previous partitions system cones
adds constraints restrict search find top-level diagnoses (TLDs), described
Section 3.
5. Sections. setting previous partitions system
sections introduces corresponding redundant cardinality constraints described Section 5.3.
Figure 7 illustrates impact five settings search single minimal
cardinality diagnosis 1182 observations Feldmans observation set system c880.
horizontal axis, consider observations according size minimal cardinality
diagnosis. vertical axis, illustrate average runtime seconds. runs apply 300
second timeout. choose system c880 present results as: (a) midsize system
observation sets contain observations minimal cardinality diagnosis larger
20; (b) largest system exhibits interesting behavior five configurations
without many timeouts shadow results. larger systems, c3515
c7552 considered below, last two five configurations exhibit interesting curves.
three configurations timeout observations.
upper curve Figure 7 describes Vanilla setting one may observe cardinality increases curve converges 300 second timeout. second curve describes
Improved Bound setting illustrates impact Algorithm 3, especially observations minimal cardinality diagnoses size 1 10. Here, using improved bound reduces
402

fiA N OVEL SAT-BASED PPROACH ODEL BASED IAGNOSIS

Figure 7: Impact different settings search single minimal cardinality diagnosis
system c880.

number iterations SAT solver source improvement. explain
see improvement minimal cardinality diagnosis involves larger number
faults, consider first large minimal cardinalities, results meaningless
upper curves converge timeout. medium sized minimal cardinalities, consider
techniques overwhelming part runtime spent last UNSAT iteration. Moreover, number iterations SAT solver techniques
less same. system c880 26 outputs naive bound used
vanilla setting jumps iteration smaller bound (but using
one-by-one decrement). Given evaluation might consider omitting constraints
improved lower bound depending parameters instance. However, cost running
Algorithm 3 negligible always impose corresponding constraints.
third curve (E.P.) shows additional impact applying Equi-Propagation
constraint compiler. results substantial speedups first two settings. example,
finding diagnosis minimal cardinality 20 requires average 18.5 seconds setting
comparison 214.9 seconds without it. two lower curves graph coincide,
fourth setting (cones) makes dramatic impact performance system c880.
average runtime required find first minimal cardinality using setting 0.1
seconds observations. includes finding diagnoses minimal cardinality 26 (!)
58 milliseconds, average. runtimes setting small cannot observe
additional added value applying fifth setting (sections). end consider
next experiment comparison using two larger systems, namely c5315 c7552.
Figure 8 illustrates impact fifth setting involves partitioning system
sections. left graph illustrates impact sections seeking single minimal cardinality
diagnosis observations system c5315 right graph illustrates impact
seeking top-level minimal cardinality diagnoses (TLDs). lower curve (in graphs), summarizes results using sections upper curve without. example, observations
minimal cardinality 24, sections finding first minimal cardinality diagnosis requires
403

fiM ETODI , TERN , K ALECH & C ODISH

Figure 8: Impact sections cones search single minimal cardinality diagnosis (left)
search TLDs (right) using system c5315.

Figure 9: Impact sections cones search single minimal cardinality diagnosis (left)
search TLDs (right) using system c7552.
average 1.13 seconds, without requires 2.43 seconds. observations,
sections, find TLDs average 6 seconds, without requires 15 seconds.
Similar trends illustrated Figure 9 depicts information system c7552.
apply timeout 300 seconds, timeout encountered 48 1,557 observations searching minimal cardinality TLDs (timeout observations considered
average runtimes). However, even 48 observations, using sections provides average
50% TLDs without (15,785 vs. 9,585 TLDs) reaching timeout.
Table 7 details, ISCAS-85 benchmark Feldmans observations, average sizes
SAT encodings using full SATbD algorithm. table indicates number
System
# Components
# Variables
# Clauses

c432
160
190
556

c499
202
240
1193

c880
383
227
758

c1908
880
1026
4063

c2670
1193
636
2055

c3540
1669
2051
7456

c5315
2307
2407
11277

c6288
2416
7161
22061

c7552
3512
3525
12731

Table 7: Average SAT encoding sizes ISCAS-85 benchmark Feldmans observations.
404

fiA N OVEL SAT-BASED PPROACH ODEL BASED IAGNOSIS

components system number variables clauses resulting CNFs, taking
average observations Feldman benchmark. Notably, indicated table,
SAT encodings extremely small (in worst case) less three CNF variables ten
CNF clauses per system component.

8. Discussion
paper focuses MBD problem considering possibly multiple faulty components weak
fault model. presentation restricted assume that: every component single output,
observation includes single input/output, queries observations specific components (probes), information regarding probability component failures. Even
restrictions, problem addressed paper computationally hard
focus many prior works model-based diagnosis literature (Feldman & van Gemund, 2006;
Williams & Ragno, 2007; Feldman et al., 2010a; Siddiqi & Huang, 2007, 2011).
discuss briefly applicability approach general setting. Deeper
analysis adapt approach general setting research topic own.
believe success applying SAT solvers MBD problems simplified setting paves
way application general settings.
8.1 Boolean Extensions
approach applies directly setting components described propositional
formulae mode fault ignored (i.e., weak fault model setting). Boolean
circuits one straightforward example obvious community
focused attention. examples similar assumptions SAT-based approach
expected apply directly include works by: Abreu et al. (2009) authors model
software components propositional formulae apply MBD algorithm find bugs; Kalech
Kaminka (2005, 2006) authors model robots multi-robot system diagnose
violation coordination constraints among robots; Felfernig et al. (2012) authors
model finite domain constraints diagnose inconsistent constraint sets.
Note restricting components single output really restriction straightforward represent component multiple outputs conjunction single output components. way partition cones sections fully compatible multiple-output
components.
8.2 Probabilities
Real world applications MBD typically come information regarding probability
component faulty many MBD algorithms exploit information prioritize diagnoses
respect likelihood (interalia, see de Kleer & Williams, 1989; Williams & Ragno,
2007). Sachenbacher Williams (2004) showed incorporate fault probabilities treedecomposition diagnosis algorithm. Extending approach tonconsider
probabilities
straightfi
forward. essential difference Constraint 2, sum leq( Hc c COMPS , k),
specifies objective function n
aim minimize.fiIt replaced
constraint takes

probabilities account: sum leq( Hc (1 pc ) c COMPS , k) pc probabil405

fiM ETODI , TERN , K ALECH & C ODISH

ity component c faulty. So, constraints likely faulty contribute less
objective function. Note straightforward normalize constraint coefficients
integers. Constraints form called Pseudo-Boolean constraints encoding
CNF well studied (Een & Sorensson, 2006).
8.3 Testing Probes
Another extension straightforward model SAT concerns testing probing (de Kleer
& Williams, 1987). Here, diagnosis algorithm given multiple observations input/output
behavior system (in testing) additional observations internal wires system (in
probing). assumption faulty components consistently faulty, invalidate
diagnoses inconsistent multiple observations. Similarly, probes invalidate diagnoses consistent new internal observation. methods run iteratively
single consistent diagnosis. techniques straightforward encode SAT.
testing, improve diagnosis simply take conjunction encodings respect
different observations, using health variables. probing take conjunction
internal observations. main challenge methods reduce number
probes (or tests) required find actual diagnosis. common, greedy, approach address
challenge choose probe (test) maximizes information gain described Feldman
et al. (2010b).
8.4 Strong Fault Model
consider extension approach setting components associated
wider range possible faulty behavior modes. called Strong Fault Model.
instance, setting circuit component may stuck 0 (always returns output 0), stuck
1(always returns output 1), flip (always flips output) (Struss & Dressier, 1989; de Kleer
& Williams, 1989). context example, naive SAT model may obtained follows.
Instead considering single propositional health variable Hc , consider one additional varif
s1
able per fault mode: Hs0
c (stuck zero), Hc (stuck one), Hc (flip). Now, introduce clauses
f
s1
s0
(a) express fault mode fault (Hc Hc Hc Hc ); (b) express
s1
f
one fault component sum leq({Hs0
c , Hc , Hc }, 1). way propositional health
variable Hc , before, indicates component healthy diagnosis assignment
fault types component. However, extension requires reconsider definitions
minimal diagnosis cardinality presents new challenge identifying useful partitions
system solving problem SAT. consider future work.
8.5 Diagnosis Physical Systems
challenging problem. Physical systems typically dynamic, involve components
time dependent behavior, described terms continuous variables. One common approach apply MBD physical systems use qualitative models behavior
system modeled set constraints non-numerical (discrete) descriptions (Subramanian
& Mooney, 1996). well-known example MBD engine makes relaxations
Livingstone Model-Based Diagnosis System (Williams & Nayak, 1996). Livingstone successfully applied Deep Space One, first spacecraft NASAs New Millennium program.
406

fiA N OVEL SAT-BASED PPROACH ODEL BASED IAGNOSIS

first important step SAT based approach diagnosis physical systems
provide setting MBD strong fault model able capture probabilities. course,
many additional challenges modeling systems using SAT important
feasible challenge.

9. Conclusion
paper addresses MBD challenge extensively researched 25
years wide range papers propose different algorithms. present novel SATbased solution problem determine first time, minimal cardinality diagnoses
entire standard benchmarks. present extensive experimental evaluation comparing
algorithm HA*, CDA*, SAFARI, HDIAG DCAS. Results unequivocal. algorithm outperforms others, often orders magnitude, search single minimal cardinality
diagnosis well search minimal cardinality diagnoses. succeed find
verify minimal cardinality diagnosis 11 28,257 observations benchmark
30 seconds per observation, remaining 11 80 seconds each.
best knowledge, SATbD algorithm first algorithm find minimal cardinality
standard benchmarks discussed above. details regarding experimental evaluation
well prototype implementation SAT-based MBD tool found online (Metodi,
2012a; Metodi et al., 2012b).
major contribution success approach range preprocessing techniques
presented Section 5. impact demonstrated five configurations system
Section 7.3 full combination fifth configuration. Even SAT,
related solvers, improve conjecture careful modeling choices involving combinations
techniques invaluable success future MBD algorithms. belief
results paper pave way develop apply SAT-based methodologies
MBD problems. particular, extensions diagnosis probabilities components
faulty, sequential diagnosis testing probes, and, challenging, diagnosis
physical systems qualitative models. expect methodology, combines
domain dependent preprocessing, clever modeling SAT, application tools optimize
CNF encodings, relevant hard problems AI SAT-based techniques applicable.
Acknowledgments
research supported Israel Science Foundation, grant 182/13.

References
Abreu, R., Zoeteweij, P., Golsteijn, R., & van Gemund, A. J. C. (2009). practical evaluation
spectrum-based fault localization. Journal Systems Software, 82(11), 17801792.
Asn, R., Nieuwenhuis, R., Oliveras, A., & Rodrguez-Carbonell, E. (2009). Cardinality networks
applications. Kullmann, O. (Ed.), SAT, Vol. 5584 Lecture Notes Computer
Science, pp. 167180. Springer.
Asn, R., Nieuwenhuis, R., Oliveras, A., & Rodrguez-Carbonell, E. (2011). Cardinality networks:
theoretical empirical study. Constraints, 16(2), 195221.
407

fiM ETODI , TERN , K ALECH & C ODISH

Balakrishnan, K., & Honavar, V. (1998). Intelligent diagnosis systems. Journal Intelligent Systems, 8(3/4), 239290.
Batcher, K. E. (1968). Sorting networks applications. AFIPS Spring Joint Computing
Conference, Vol. 32 AFIPS Conference Proceedings, pp. 307314.
Bauer, A. (2005). Simplifying diagnosis using LSAT: propositional approach reasoning
first principles. Bartak, R., & Milano, M. (Eds.), International Conference Integration
AI Techniques Constraint Programming Combinatorial Optimization Problems
(CP-AI-OR), Vol. 3524 Lecture Notes Computer Science, pp. 4963, Berlin, Heidelberg.
Springer-Verlag.
Biere, A., Heule, M., van Maaren, H., & Walsh, T. (Eds.). (2009). Handbook Satisfiability, Vol.
185 Frontiers Artificial Intelligence Applications. IOS Press.
Brglez, F., Bryan, D., & Kozminski, K. (1989). Combinatorial profiles sequential benchmark
circuits. IEEE International Symposium Circuits Systems, pp. 19291934.
Bylander, T., Allemang, D., Tanner, M. C., & Josephson, J. R. (1991). computational complexity abduction. Artificial Intelligence, 49(1-3), 2560.
Codish, M., & Zazon-Ivry, M. (2010). Pairwise cardinality networks. Logic Programming,
Artificial Intelligence, Reasoning (LPAR), pp. 154172.
Darwiche, A. (2001). Decomposable negation normal form. Journal ACM, 48(4), 608647.
de Kleer, J., & Williams, B. C. (1987). Diagnosing multiple faults. Artificial Intelligence, 32(1),
97130.
de Kleer, J. (2008). improved approach generating max-fault min-cardinality diagnoses.
International Workshop Principles Diagnosis (DX).
de Kleer, J., & Williams, B. C. (1989). Diagnosis behavioral modes. International Joint
Conference Artificial Intelligence (IJCAI), pp. 13241330.
Dressler, O., & Struss, P. (1995). Occm. http://www.occm.de.
DXC

(2009).
International diagnostic
https://sites.google.com/site/dxcompetition/.

competition

series.

Website.

Een, N., & Sorensson, N. (2006). Translating pseudo-Boolean constraints SAT. Journal
Satisfiability (JSAT), 2(1-4), 126.
El Fattah, Y., & Dechter, R. (1995). Diagnosing tree-decomposable circuits. International Joint
Conference Artificial Intelligence (IJCAI), 95, 17421749.
Feldman, A., Provan, G., de Kleer, J., Robert, S., & van Gemund, A. (2010). Solving model-based
diagnosis problems Max-SAT solvers vice versa. International Workshop
Principles Diagnosis (DX), pp. 185192.
Feldman, A. (2012). Lydia-ng. http://www.general-diagnostics.com/products.
php.
Feldman, A., de Castro, H. V., van Gemund, A., & Provan, G. (2013). Model-based diagnostic
decision-support system satellites. IEEE Aerospace Conference, pp. 114. IEEE.
Feldman, A., Provan, G., & van Gemund, A. (2010a). Approximate model-based diagnosis using
greedy stochastic search. Journal Artificial Intelligence Research (JAIR), 38, 371413.
408

fiA N OVEL SAT-BASED PPROACH ODEL BASED IAGNOSIS

Feldman, A., Provan, G., & van Gemund, A. (2010b). model-based active testing approach
sequential diagnosis. Journal Artificial Intelligence Research (JAIR), 39, 301334.
Feldman, A., & van Gemund, A. J. C. (2006). two-step hierarchical algorithm model-based
diagnosis. Conference Artificial Intelligence (AAAI), pp. 827833.
Felfernig, A., Schubert, M., & Zehentner, C. (2012). efficient diagnosis algorithm inconsistent constraint sets. Artificial Intelligence Engineering Design, Analysis Manufacturing, 26(1), 5362.
Frohlich, P., & Nejdl, W. (1997). static model-based engine model-based reasoning.
International Joint Conference Artificial Intelligence (IJCAI), pp. 466473.
Fujiwara, H., Member, S., Shimono, T., & Member, S. (1983). acceleration test generation
algorithms. IEEE Transactions Computers, 32, 11371144.
Hansen, M. C., Yalcin, H., & Hayes, J. P. (1999). Unveiling ISCAS-85 benchmarks: case
study reverse engineering. IEEE Des. Test, 16, 7280.
Jannach, D., & Schmitz, T. (2014). Model-based diagnosis spreadsheet programs: constraintbased debugging approach. Automated Software Engineering, 1, 140.
Kalech, M., & Kaminka, G. A. (2005). Towards model-based diagnosis coordination failures.
Conference Artificial Intelligence (AAAI), pp. 102107.
Kalech, M., Kaminka, G. A., Meisels, A., & Elmaliach, Y. (2006). Diagnosis multi-robot coordination failures using distributed CSP algorithms. Conference Artificial Intelligence
(AAAI), pp. 970975.
Kirkland, T., & Mercer, M. R. (1987). topological search algorithm ATPG. ACM/IEEE
Design Automation Conference, DAC, pp. 502508.
Knuth, D. E. (2014). Art Computer Programming: Volume 4B, Pre-fascicle 6A, Section
7.2.2.2: Satisfiability. Unpublished. Draft available from: http://www-cs-faculty.
stanford.edu/knuth/fasc6a.ps.gz.
Marques-Silva, J., Lynce, I., & Malik, S. (2009). Conflict-driven clause learning SAT solvers.
Handbook satisfiability, 185, 131153.
Metodi, A. (2012a). SCryptodiagnoser: SAT based MBD solver. http://amit.metodi.
me/research/mbdsolver.
Metodi, A. (2012b). SCryptominisat. http://amit.metodi.me/research/scrypto.
Metodi, A., & Codish, M. (2012). Compiling finite domain constraints SAT BEE. Theory
Practice Logic Programming (TPLP), 12(4-5), 465483.
Metodi, A., Codish, M., Lagoon, V., & Stuckey, P. J. (2011). Boolean equi-propagation optimized SAT encoding. CP, pp. 621636.
Metodi, A., Codish, M., & Stuckey, P. J. (2013). Boolean equi-propagation concise efficient
SAT encodings combinatorial problems. Journal Artificial Intelligence Research (JAIR),
46, 303341.
Metodi, A., Stern, R., Kalech, M., & Codish, M. (2012a). Compiling model-based diagnosis
Boolean satisfaction. Conference Artificial Intelligence (AAAI).
409

fiM ETODI , TERN , K ALECH & C ODISH

Metodi, A., Stern, R., Kalech, M., & Codish, M. (2012b). Compiling model-based diagnosis
Boolean satisfaction: Detailed experimental results prototype implementation. http:
//www.cs.bgu.ac.il/mcodish/Papers/Pages/aaai-2012.html.
Murray, J., Hughes, G., & Kreutz-Delgado, K. (2006). Machine learning methods predicting failures hard drives: multiple-instance application. Journal Machine Learning Research
(JMLR), 6(1), 783.
Nica, I., Pill, I., Quaritsch, T., & Wotawa, F. (2013). route success - performance comparison diagnosis algorithms. International Joint Conference Artificial Intelligence
(IJCAI), pp. 10391045.
Reiter, R. (1987). theory diagnosis first principles. Artificial Intelligence, 32(1), 5795.
Sachenbacher, M., & Williams, B. (2004). Diagnosis semiring-based constraint optimization.
Eureopean Conference Artificial Intelligence (ECAI), pp. 873877.
Selman, B., & Levesque, H. J. (1990). Abductive default reasoning: computational core.
National Conference Artificial Intelligence (AAAI), pp. 343348.
Siddiqi, S. A., & Huang, J. (2007). Hierarchical diagnosis multiple faults. International Joint
Conference Artificial Intelligence (IJCAI), pp. 581586.
Siddiqi, S. A., & Huang, J. (2011). Sequential diagnosis abstraction. Journal Artificial Intelligence Research (JAIR), 41, 329365.
Smith, A., Veneris, A. G., Ali, M. F., & Viglas, A. (2005). Fault diagnosis logic debugging
using Boolean satisfiability. IEEE Trans. CAD Integrated Circuits Systems, 24(10),
16061621.
Soos, M. (2010). Cryptominisat, v2.5.1. http://www.msoos.org/cryptominisat2.
Stein, B., Niggemann, O., & Lettmann, T. (2006). Speeding model-based diagnosis heuristic
approach solving SAT. IASTED international conference Artificial intelligence
applications, pp. 273278.
Stern, R. T., Kalech, M., Feldman, A., & Provan, G. M. (2012). Exploring duality conflictdirected model-based diagnosis. AAAI.
Struss, P., & Dressier, O. (1989). Physical negation: Integrating fault models general
diagnostic engine. International Joint Conference Artificial Intelligence (IJCAI), pp.
13181323.
Struss, P., & Price, C. (2003). Model-based systems automotive industry. AI magazine, 24(4),
1734.
Stumptner, M., & Wotawa, F. (2001). Diagnosing tree-structured systems. Artificial Intelligence,
127(1), 129.
Stumptner, M., & Wotawa, F. (2003). Coupling CSP decomposition methods diagnosis algorithms tree-structured systems. International Joint Conference Artificial Intelligence
(IJCAI), pp. 388393.
Subramanian, S., & Mooney, R. J. (1996). Qualitative multiple-fault diagnosis continuous dynamic systems using behavioral modes. National Conference Artificial Intelligence
(AAAI), pp. 965970.
410

fiA N OVEL SAT-BASED PPROACH ODEL BASED IAGNOSIS

Torasso, P., & Torta, G. (2006). Model-based diagnosis OBDD compilation: complexity
analysis. Reasoning, Action Interaction AI Theories Systems, pp. 287305.
Wang, J., & Provan, G. (2010). benchmark diagnostic model generation system. Part A: Systems
Humans, IEEE Transactions Systems, Man Cybernetics, 40(5), 959981.
Williams, B. C., & Nayak, P. P. (1996). model-based approach reactive self-configuring systems. National Conference Artificial Intelligence (AAAI), pp. 971978.
Williams, B. C., & Ragno, R. J. (2007). Conflict-directed A* role model-based embedded
systems. Discrete Applied Mathematics, 155(12), 15621595.

411


