journal artificial intelligence

submitted published

lifeworld analysis
philip agre

pagre ucsd edu

ian horswill

ian ils nwu edu

department communication
university california san diego
la jolla ca usa
northwestern university computer science department
maple avenue
evanston il usa

abstract

argue analysis agent environment interactions extended
include conventions invariants maintained agents throughout activity
refer thicker notion environment lifeworld present partial set formal
tools describing structures lifeworlds ways computationally
simplify activity one specific example apply tools analysis toast
system versions system different control structures fact
implement common control structure together different conventions encoding
task state positions states objects environment

introduction
biologists long sought concepts describe ways organisms adapted
environments social scientists likewise sought concepts describe ways
people become acculturated participants social worlds around yet
dicult phenomena methods computational modeling
see least two reasons diculty first tradition modeling
artificial intelligence developed around concern cognition mental processes
understood intervene stimuli responses human beings although minority
traditions ecological psychology reacted studying human
life able translate concepts computational mechanisms
match expressive power symbolic programming second reason subtle
one conceives organisms environments spatially extended mechanisms
explained according principles boundary
surface body particularly different interesting
rest total organism environment system challenge computational modeling
conceptualize agents adaptations environments ways neither
treat agents isolated black boxes dissolve one big machine
purposes useful distinguish two aspects agent
involvement familiar environment embodiment embedding embodiment
pertains agent life body finiteness resources limited perspective
world indexicality perceptions physical locality motility
embedding pertains agent structural relationship world habitual
c ai access foundation morgan kaufmann publishers rights reserved

fiagre horswill
paths customary practices fit shapes workings things
connections agents position set roles hierarchy forth
concept embedding extends concrete kinds locatedness
world places things actions abstract kinds location within social systems
ecosystems cultures embodiment embedding obviously interrelated
powerful consequences agents direct dealings agents
solitary activities physical world principal focus article
embedding particularly ways agents maintain relationships objects
functionally significant tasks
develop thoughts embodiment embedding follows

section reviews concept environment developed early work
newell simon

section introduces adaptation traditional idea call life








worlds sketch involved lifeworld analysis
section introduces informally concept factorization lifeworlds refers
roughly structures lifeworld permit agents decisions made
independently one another
section defines basics formal theory lifeworld analysis namely
concepts environments actions policies factorization reduction one
environment another purpose formalism characterize kinds
interactions arise agents familiar lifeworlds
section brie introduces computer program wrote illustrate
phenomena lifeworlds
section applies formalism modeling world program
operates proceeds modeling successively complicated versions world
section explains program keeps track objects world
figure activities discusses issues arise trying model
keeping track formal terms
section sums formal work explaining precise relationship
program formal model world
section expands theory lifeworlds informally introducing
concept cognitive autopoiesis collection means agents manipulate surroundings provide conditions cognitive processes
provide taxonomy phenomena
section concludes suggesting directions future work

concept environment

intuitively notion environment ai robotics refers relatively enduring stable set circumstances surround given individual environment
probably though may similar hand although
environment starts leave skin perhaps clear ending point
necessarily defined terms metric space physically distant circumstances
consequences life via telephone say properly regarded


filifeworld analysis
part environment well environment agents live determines
effects actions environment thus matter importance computational
modeling know agent environment determine given
pattern behavior adaptive particular need positive theory environment
kind principled characterization structures dynamics
attributes environment virtue adaptive behavior adaptive
herbert simon discussed issue pre ai work book administrative behavior example presents uential theory later became known limited
rationality contrast assumption rational choice classical economics simon
describes range cognitive limitations make fully rational decision making organizations impracticable yet organizations thrive anyway argues provide
individual structured environment ensures decisions good
enough division labor example compensates individual limited ability
master range tasks structured ows information likewise compensate
individual limited ability seek information judge relevance hierarchy
compensates individual limited capacity choose goals fixed procedures
compensate individuals limited capacity construct procedures
comparison simon early theory administrative behavior ai downplayed
distinction agent environment newell simon early work
solving environment reduced discrete series choices
presents course solving given phrase task environment came
refer formal structure search space choices outcomes clearly
good way modeling tasks logical theorem proving chess objects
manipulated purely formal tasks involve activities physical world
however picture complex cases solving model analyzes
world distinctive way theory treat world agent separate
constructs instead world shows speak phenomenologically terms
differences make difference agent given particular representations actions
goals agents different perceptual capabilities action repertoires example
inhabit different task environments even though physical surroundings goals
might identical
newell simon theory task environment tends blur difference
agent environment framework analysis phenomenological
valuable wish adapt purposes unfortunately newell
simon carry blurring theory cognitive architecture often unclear
whether solving activity takes place wholly within mind whether
unfolds agent potentially complicated interactions physical world
distinction arise cases theorem proving chess
domain whose workings easily simulated mental reasoning crucial
domain whose actions uncertain outcomes even though wish retain
newell simon phenomenological task analysis therefore wish
presuppose agents reason conducting searches spaces instead
wish develop analytical framework guide design wide range
agent architectures particular want analytical framework help us design
simplest possible architecture given task


fiagre horswill

lifeworlds
use term lifeworld mean environment described terms customary
ways structuring activities take place within conventional uses
tools materials loop invariants maintained within conventional
activities term originally comes phenomenological sociology schutz
luckmann refers familiar world everyday life specifically
world described terms make difference given way life cats
people example understood inhabiting physical environment
different lifeworlds kitchen cupboards window sills spaces underneath chairs
different significances cats people balls yarn upholstery television
sets cats similarly kitchen affords different kind lifeworld chef
mechanic though clearly two lifeworlds may overlap ways well
lifeworld physical environment patterned ways
physical environment functionally meaningful within activity
idea similar gibson theory perception two theories
differ important ways whereas gibson believes perception worldly affordances
direct believe perceptual process explained causal terms
whereas gibson treated categories perception essentially biological innate
regard cultural emergent
analyzing lifeworld one attempts draw individual structures within
facilitate customary activities example lifeworlds typically contain artifacts
tools specifically evolved support activities tools
arranged world ways simplify life reduce cognitive burden
individuals cups typically found cupboards food refrigerators grocery
stores one needs remember butter found specific grocery store
butter grocery stores found well defined dairy section usually along wall
recognized distance dairy section view butter
visible definite area artifacts designed make functional properties
perceptually obvious handles perceptibly suited picking knobs perceptibly
suited turning forks perceptibly suited impaling things brady
agre braunegg connell winston binford katz lowry contrarily
generally assumed artifacts provide readily perceptible grounds
drawing functional distinctions fact interchangeable usually functionally
significant property object obvious lifeworld provides alternate way
marking see record player house example assume
mine unless specific reason aspects lifeworlds
tend make easy perform particular kinds activities within without
remember many facts reinvent screwdriver first principles
lifeworlds contain networks interacting conventions practices simplify specific aspects specific activities practices relieve agents burden solving certain
spot diffuse solutions throughout activity agent
many agents example hospital might try get along without maintaining sterile
conditions people germs technically infected
making sure infections never get control direct solution would


filifeworld analysis
constantly monitor patients assess degree infection treat
becomes severe since undesirable number reasons hospital instead tries
prevent infections patients maintaining sterile conditions might
example looking contaminated objects surfaces disinfecting unfortunately sterility visible surface characteristic instead hospitals solve
structuring space activity different locations kept less sterile depending
conventional uses operating rooms sterile hallway oors objects
generate germs people washed masked gloved critical instruments
come contact specially sterilized use tongue depressors
assumed dirty trash biohazard bag clean
wrapped objects surfaces periodically disinfected regardless
level contamination practices maintained regardless immediate
need hospital reason temporarily without
patients workers would stop washing hands disinfecting bathrooms

factorization lifeworlds

simon sciences artificial argued complex systems nearly
decomposable model rooms building whose walls tend minimize
effects activity one room upon activity another sussman
analysis block stacking tasks classified several types subgoal interactions
attempts break tasks subtasks one hopes tasks
decomposable bugs arise decomposable enough one assumes
task decomposable unless one reason believe otherwise sussman
rich tradition helped inaugurate concerned dicult
constructing plans presence subgoal interactions goal complementary
analyze many ways tasks really decomposable derive
broadest range conditions moment moment activity proceed without
extensive analysis potential interactions
non pathological lifeworld structured ways limit prevent interactions
among subtasks structures might taxonomized follows

activity partition lifeworlds separate activities discrete headings sewing

distinct activity bathing gathering food separate activity giving
birth distinctions provide basis reckoning different activities purposes rest partitions boundaries among
activities often marked type ritual

spatial partition different things often done different places tasks may

confined places associated tools materials stored
suitable conditions lighting safety obtain places may even close together different recipes prepared different sections countertop space
different kinds food kept different parts one plate boundary
regions perhaps employed assemble forkfuls neighboring foods general activities arranged space decisions made one place tend minimal
interaction decisions made places course spatial distance brings


fiagre horswill
absolute guarantees functional independence resources one
location prevent carted another location another use later
general tendencies

material partition different activities often involve different materials decisions affect materials one activity interact decisions affect
materials activity

temporal partition different activities often take place different times thus lim

iting channels might constrain one another times
might standardized points cycle day week ordering
might constrained kind precondition first activity produces
successive ones depend upon

role partition simon pointed division labor eases cognitive burdens
part supplying individuals separate spheres conduct
respective activities

background maintenance many activities background conditions main

tained without reference specific goals example one maintains stocks supplies pantry puts things back belong forth hammond
converse grass call stabilization see section
practices stabilize relationships agent materials used
customary activities tend ensure example one encounter
one hammer currently opened box corn akes definite sorts recurring
situations thus reduce complexity life variety different hassles
arise encouraging rise routine patterns cycles activity rather
constant stream unique puzzles

attributes tools numerous properties tools limit interactions among separate

decisions virtually tools resettable meaning regardless one
restored normal state within
full range functionalities accessible course assumes one
tools customary ways breaking thus
properties tool place ordering constraints activities
use likewise tools committed tasks long periods
turned screw screwdriver example screwdriver stay
stuck screw long period thus necessary schedule
use screwdriver unless several people wish use exceptions
general rule include bowls whose ingredients must often sit waiting future actions
conditions cannot contain anything else meantime stove burners
sometimes must remain committed heating particular dishes
reached certain states clamps must remain fastened
glue dried sawing operations completed

supplies tools latter tools raise spectre generalized scheduling potential deadlock among multiple activities


filifeworld analysis
fact sometimes arise cooking people number
given kitchen adapted time though one solves
scheduling simply enough tools must remain
committed particular purposes period time lansky fogelsong
modeled effects search spaces limited interactions different cooks
overlapping sets tools

warning signs things go wrong unpleasant subgoal interactions ensue

avoid diculties individual community species keeps track warning
signs cultivates capacity notice warning signs include supplies
running low funny smells often done primitive associative level
rats stay away smells associated stuff made sick
people develop phobias things present suffered traumas
communities often arrange certain warning signs become obtrusive
kettles whistle natural gas mixed another gas distinctive smell

simple impossibility sometimes things impossible obviously
necessary invest great effort deciding

monotonicity many actions changes state irreversible irreversible changes
cause decisions interact certain things must done change takes
place provides structure decision process lifeworld needs
make evident must done given irreversible change occurs

flow paths often lifeworld arranged particular materials parts

assembly line paperwork organization food way refrigerator stove
table follow definite paths paths provide great deal structure
decision making inspecting points along path example one see
needs done next determining object one determine
must done must taken afterward paths
consciously mapped others emergent properties set customs

cycles likewise many lifeworlds involve stable cycles activities perhaps

cycles nested inside others resulting rhythms often expressed
recurring combinations materials decisions spatial arrangements warning signs


externalized state computer people state used mass noun means dis

cernible differences things modified voluntarily interpreted functionally significant way early ai treat internal state
memory external state functionally significant mutable states world
importantly different often analytically convenient treat uniform
fashion often advantageous record state world whether relative
locations things persistent states count noun sense
left beach example one need remember whether eggs
broken fact readily perceptible one attention drawn
suitable occasion one understands significance task likewise one


fiagre horswill
save great deal memory retrieving ingredients evening
recipes cupboards placing customary place shelf
lifeworlds great deal structure permits decisions made independently one another point real lifeworlds permit anyone live
reactive mode without performing significant computation even
would desirable point rather nontrivial cognition people perform takes place considerable background familiar generally reliable
dynamic structure
factorability lifeworlds helps particularly understanding activities
agent body great deal focusing inherent embodiment look
one place time handle one tool time activities necessarily
serial attention certain degree hysteresis gotten work
one countertop one particular tool example natural step
carry task crucial therefore different tasks relatively
separate consequences lifeworld provide clues change task
necessary functionally significant conditions generally detected
general purpose forms vigilance occasionally looking around course certain
kinds activities complex require special purpose strategies
go beyond simple heuristic policies something needs
point complex activities many interacting components
rare generally conducted specially designed adapted lifeworlds
lifeworlds structured minimize diculty tasks rather increase
phenomena together formed motivation concept indexicalfunctional deictic representation agre chapman agre embodied agents
focused one activity one set objects time many objects specifically adapted activity relevant states generally readily perceptible objects
perceptibly different generally interchangeable stabilization practices
help ensure objects encountered standardized ways thus makes sense
purposes represent objects generic ways one relationships
ashlight keep car ashlight keep car flashlight
maintain stable relationship ashlight keeping standard place putting
back done intended purposes keeping
batteries fresh presence environment ensures ready access
light car breaks night therefore need separately plan
contingency time drive conventional structures activity
maintain ashlight presence loop invariant presence ashlight
activities ensure structures lifeworld

environments policies reducibility

section introduce formalism purpose formalism directly
specify workings agent cognitive machinery instead purpose construct principled characterizations interactions agents environments
guide explanation design agre formalism words describes
agent embodied activities particular environment characterized dy

filifeworld analysis
namics activities becomes possible design suitable machinery matter
principle want design simplest possible machinery consistent
given pattern interaction horswill therefore make priori commitments
machinery favor particular architecture particular activity
analyzed make priori commitments matters analog
versus digital versus reaction experience real
lifeworlds real activities incorporate great deal useful dynamic structure
effort invest studying structure repaid parsimonious theories
machinery intend methods equally useful investigating types
activity designing types machinery might able participate
concept lifeworld appear specific mathematical entity
formalism intuition however objective material environment
agent directly deal environment complexity instead deals
functional environment projected material environment
projection possible conventions invariants stably present
environment actively maintained agent lifeworld understood
functional world together projection conventions create
section summarizes formal model environmental specialization given horswill
proofs theorems see original subsequent sections apply
extend model
model environments state machines behavior agents policies
mapping states actions
environment e pair state space set possible
actions
action mapping states states
policy p mapping states actions taken
states include facts physical environment straightforward matter include agent internal states well horswill
combination policy environment creates dynamic system environment state mapped policy action maps environment state
whole process repeated
discrete control dcp pair e g environment e goal g
subset e state space
policy solves dynamic system generates environment
eventually reaches goal state
solves halts remains within g entering
example consider robot moving along corridor n equally spaced oces
labeled formalize environment zn f n
g fincn dec ig identity function incn dec map integer
respectively proviso dec incn n n


fiagre horswill

dec
inc

dec

dec

inc


dec

inc



dec

inc



inc



dec

dec

inc

inc


inc



dec

inc
inc

inc

dec

dec

dec
dec

inc

inc
dec

figure environment z left serial product z expressed
graphs function products written pairs e inci written
inc identity actions ii left undrawn reduce clutter
see figure note effect performing identity action stay
state
emphasize policy model agent behavior causal computational processes behavior exhibited specifies agent
state thus theoretical construct data structure
agent head examine implementation issues surround policies
section

product environments

majority formal sections explore phenomenon factoring
particular explore policies factorable environments composed
policies factors state machine environments factorization
factorization state space environment state space cartesian product
state spaces environment whole factorable component
sub environments example position king chess board row
column components thought product components
isomorphic z since eight rows eight columns consider
environment car drives grid city blocks see
kind product z environments grids state spaces
car environment allows one component change time whereas king
environment allows change
must therefore distinguish different kinds factorization call chessboard
case parallel product z car case serial product
focus another kind factorization later let cartesian product two functions f
g fg b f g b let identity function two environments
e e define parallel product

e k e fa g


filifeworld analysis
serial product
e
e fa g fia g
products dcps defined obvious way
e g k e g e k e g g
e g
e g e
e g g
state diagram z
z shown figure
say environment dcp parallel serial separable isomorphic
product environments dcps
solvability separable dcps

important property separable dcps solutions constructed
solutions components
lemma let p policy solves halts states set initial
states let p policy solves halts states
policy
p x p x p
solves k halts states note convention
treating p function pairs function two scalars
lemma let p policy solves states set initial states
let p policy solves states policy
p x p x ip

g x g p x p x
x g g p x ip
solve
halt states
note parallel serial cases different one would expect parallel case
easier solve policy perform actions state components
simultaneously fact dicult one required perform actions
simultaneously leaves agent way preserving one solved subproblem
solving another consider ip op environment f f g fflipg flip x
x f property every state accessible every state f
f
property f k f however f k f one action ips
state components thus two states accessible given state
f k f state ip king fixed add
identity action f possible leave one component product intact
changing identity action sucient necessary weaker
still unnecessary condition f action maps goal states goal
states


fiagre horswill









unreduced environment





reduced environment

figure simple reduction environment e e corresponding
states reduced unreduced environments respectively
corresponding actions projection simple reduction commutes
actions alternatively thus
regardless whether take projection action
achieve

reduction

another important kind structure one environment considered abstraction another newell shaw simon sacerdoti knoblock
abstract environment retains fundamental structure concrete environment
removes unimportant distinctions among states abstract state corresponds set
concrete states abstract actions correspond complicated sequences concrete
actions
say projection environment e another environment e
mapping state space e e say simple reduction
e e every action e corresponding action e
state

equivalently

function composition operator say implementation
use denote function mapping e actions implementations
e
possible define much powerful notion reduction implementations allowed arbitrary policies requires fair amount additional machinery
however including addition state agent since simple reduction suce
purposes simply assert following lemma direct consequence
general reduction lemma horswill
lemma let simple reduction e environment e let e g
dcp policy p solves e g
p p


filifeworld analysis
solves e g

related work

formal environments use state space descriptions environment usually finite state machines rosenschein kaelbling used finite state machines represent
agent environment formalization allowed specialized
mechanisms directly synthesized descriptions desired behavior formalization behavior environment formalization powerful enough form
basis programming language used program real robot later rosenschein developed method synthesizing automata whose internal states provable correlations
state environment given set temporal logic assertions dynamics
environment donald jennings use geometric similar
constructing virtual sensors lyons arbib model organisms robots
process algebras beer employs formalisms dynamic systems theory
wilson specifically proposed classification simulated environments
types mechanisms operate successfully within wilson
used finite state formalization environment divided environments
three classes properties determinacy todd wilson todd
et al taxonomized grid worlds terms behaviors successful
littman used fsm classify environments reinforcement learning
littman parameterized complexity rl agents terms amount
local storage use far future rl looks
empirically classified environments minimal parameters still allowed
optimal control policy learned
extensive literature discrete event dynamic systems kosecka
model environment finite state machine assume transition
information rather state information visible agents
alternative state machine formalism found work dixon
dixon derives semantics first order logic world comes individuated
objects relations rather state space methods used dixon open
avoids need define environment single mathematical structure
work dixon work attempts formally model assumptions system makes
environment dixon interest however individual program means
rather comparing competing programs

toast

toast agre horswill program simulates short order cook reasonably detailed simulation kitchen see figure toast world consists

set objects ovens pans cutting boards globs pancake batter individual eggs
customers restaurant object type e g egg objects
given type common set possible states common set possible operations
performed action involves set objects given types
action require objects specified states may change states
objects others example mix operation would involve objects type


fiagre horswill
time






















































event
break egg egg bowl making omelette
add egg egg omelette batter
add egg egg omelette batter
beat omelette batter whisk
move pan burner
move butter pat pan
melt burner pan butter pat
move slice toaster waiting butter making toast
start toaster slice
move knife plate waiting toast setting table
done goal knife clean plate
move plate kitchen table
move fork plate
done goal fork clean plate
move spoon plate
toaster pops
move butter pat knife back toast
butter slice knife butter pat
pour omelette batter omelette batter butter melted back omelette
move slice plate setting table
done goal slice buttered plate
done goal spoon clean plate
pour flour flour bowl making pancake
add sugar sugar pancake batter
add baking powder baking powder pancake batter
fold omelette spatula tending omelette
add milk milk dispenser pancake batter back pancakes
add egg egg pancake batter
mix pancake batter spoon
move pan burner
flip omelette spatula tending omelette
move butter pat pan pancake
melt burner pan butter pat
move omelette plate finishing omelette
done goal omelette cooked plate
spoon batter pancake batter pan butter pat pancake
flip pancake spatula
move pancake plate
done goal pancake cooked plate
move plate kitchen table
move pan burner pancake
move butter pat pan
melt burner pan butter pat
spoon batter pancake batter pan butter pat
flip pancake spatula
move pancake plate
done goal pancake cooked plate
move plate kitchen table
clean pan cleanup
clean pan
clean spoon
clean spatula
clean bowl
clean knife
clean pan
clean whisk
clean bowl
turn burner
turn burner
turn burner

figure sample run breakfast program agent given goals making
omelette two pancakes slice toast setting table cleaning
comments appear square brackets
mixing bowl batter

spoon would require spoon clean state
effects would put batter mixed state spoon dirty
state objects perform actions toast agent oven customers
modeled objects perform actions cooking transferring heat making
orders respectively
toast divides objects world two important classes see figure
informally tools objects end products cooking easily


filifeworld analysis
material eggs fresh broken beaten cooked
material butter pat fresh melted
material milk supply non empty empty
material pancake batter sugar dry milk mixed
material pancake cooking cooked side ipped cooked burnt
material bread slice fresh toasted buttered
tools forks spoons knives spatulas whisks clean dirty dirty clean
containers bowls plates pans stove burners countertop toaster bread bag
active objects agent stove burners toaster

figure object types current system
reset initial states example knives spoons used dirtied
process cooking end products cooking easily reset
clean state washing materials objects end products cooking
state graphs form linear chains words state material
exactly one state brought exactly one action
bring example egg scrambled goes series
states unbroken broken beaten cooked unbroken state action available
egg break action available beat
toast given stock type object runs customers give goals
orders prepare specific dishes goal specifies type material e g egg
satisfied putting object type finished state egg object
cooked matter toast manages dynamic set goals opportunistically
overlaps preparation processes finish scarce resources stove burners
become free toast uses surprisingly simple
clock cycle simulator
choose material already cooked
look action needed advance next state
action requires additional tools
choose objects proper types
objects reset states
perform action
else choose one unreset tool objects
look perform reset action

intentionally sketchy implemented many versions
intuitively similar different control structures
require different correctness proofs task next section draw
similarities produce coherent theory
toast two interesting features

proceeds table lookup
stateless internal plans stored agent
information used choose actions stored world


fiagre horswill
table lookup implies fast simple statelessness makes simple well relatively robust face unexpected perturbations

modeling toast world

toast work specifically properties environment rely
upon work general strategy identify series structures environment
permit toast tasks factored define series reductions
permit complex versions toast defined terms simpler ones
claim vast generality toast architecture simply observe
environmental regularities toast relies upon common many environments
suggest method arguing toast architecture seems likely extend
types structure environment although different versions toast rely
different structures versions rely
factorability environment individual objects factoring allows us
construct solutions solutions subproblems individual
factors
special properties tool material object classes
maintenance invariants agent activity introduce structure
environment
formalization properties tools materials simple precise formalization factorability objects however surprisingly dicult environment directly factorable methods developed far solve
defining factoring technique called uniform reduction
environment viewed collection overlapping instances schematic environments
containing minimal set objects necessary perform task agent solves
task choosing one instances reducing goal true environment
solution schematic instance agent must keep track
instance operating goes along could accomplished internal memory course agent would need memory performs
tasks concurrently structuring activity agent
make information manifest environment thus storing information
world

single material worlds

start defining schematic environment toast environment
exactly one material cooked one tool needed cook simplify
start ignoring even tools
solve tools case
reduce self resetting tools case tools case
reduce general case self resetting tools case


filifeworld analysis
single material worlds tools

since materials linear chains state spaces action restricted say
least case egg might chain
fresh break
broken beat
beaten heat
cooked heat
burnt
assume identity nop action available every state
trivial assumption given state one non trivial action executed
action selection agent trivial solving dcp involving single material
world one following must hold
current state goal state need execute identity action
current state pregoal state goal state later chain
current state reach executing unique action brings us
next state chain
current state postgoal state goal states earlier chain
unsolvable
really matters single material worlds therefore many states
direction goal lies relative current state sense
really one single material world rather one class namely chains cn given
length
cn f ng fincn ig
note environment zn without actions move
backward along chain
proposition single material worlds n states reducible cn
proof let e single material environment define f ng
letting position e state chain e first state maps second
etc let action denote unique action performed state
pincn action
implementation incn e reduced
one real class single material worlds one real class
policies single material dcps

g
pcn g inc ifotherwise
n
clearly solves dcp cn g n valid g
corollary goal g solvable single material environment e tools
solved policy

g
pe g action ifotherwise


fiagre horswill
single material worlds single state tools

suppose world contains material set tools tools clean
otherwise reset use self resetting tools one state
trivial kind environment define singleton environment environment
exactly one state
freadyg fig
single state environments isomorphic model environment consisting
material self resetting tool k state space simply
freadyg actions set

fa sm ready sm ready ja ag
action performs action component product state
leaves component unchanged induction

proposition environment isomorphic ks n
single state tool worlds trivially reducible tool free worlds
single material worlds general tools

general tool environment identical single state tool environment except
actions change states tools addition states materials solve
general tool case solution single state tool case resetting tools whenever
dirtied
proof simple requires formalize notion tool let e
environment state space form sn let action e
si component state space say

independent si never changes si regardless
value si

focused component si independent components
si tool privileged value readyi si
state si sn e reach state readyi sn

actions focused si
action independent si focused si else
defined states whose si component readyi

prove general tool case reducible single state tool case

lemma environment tool components reduced one tools
replaced singletons specifically let g dcp let readyt
fa readyt ja g
g freadyt g reducible tool


filifeworld analysis
proof let pd solution policy definition tool must
policy pt bring state readyt without changing
component let projection given



readyt
ifotherwise
define implementation pa

readyt
pa ap ifotherwise

reducible general case multiple tools follows induction

multiple material worlds single material goals

reprise want factor environment individual objects describe
toast composite techniques operating individual factors cannot
properly define environments cartesian products individual objects defined isolation
way expressing actions involving multiple objects however
define set objects context minimal schematic environment containing one
copy object done want recapture notion environment
kind product objects different types showing
environment two eggs thought two overlapping copies environment
one egg copies differ choice egg
treat environments state spaces formed products state spaces
objects state environment tuple states objects binding
schematic environment real environment particular kind projection
complex environment schematic one reduction reasonable
projections valid bindings say environment uniformly reducible
schematic environment
bindings uniform reducibility
let e e environments state spaces built cartesian products family

disjoint sets fsi g si might represent state spaces object types egg fork
e e would state spaces make number copies egg
fork
say projection e e simple every component
component argument

sn si si sim
im n thus takes e state probably throws away
components possibly rearranges rest form tuple example might

single particular egg state particular fork state throw state
components away projection simple define kind inverse


fiagre horswill

schematic world

multiple object world

egg

egg

fork

egg

spatula

egg

pan

egg
egg
fork
fork
fork
spatula
spatula
pan
pan

figure binding solid vectors alternate binding dashed
call back projection define back projection
function whose components keeps replaced
corresponding components example defined

back projection would given
sa sb sb sa
say simple projection binding e e simple reduction
e e see figure
lemma let binding e e given

implementation e action simply back projection composed
action
proof follows definitions simple projection back projection
say e uniformly reducible e every simple projection e e binding
existential goals
toast given goal putting instance given material finished state

call existential goal satisfied exactly environment
states exists object specified type specified state let e g
dcp let e uniformly reducible e define existential goal e e g g
e set states e project binding goal state e g

g
e e g




binding e e





filifeworld analysis
g fs gg set states map goal states given
solution schematic goal schematic environment easily construct
number solutions existential goal

lemma policy p solution e g initial states
binding e e
p p
solution e e e g initial states function mapping
actions e corresponding actions e


toast implements policy composition schematic solution
binding maps onto real world consider cooking egg
schematic solution might

break egg pan
beat egg pan whisk
heat egg pan
boldface verbs break beat heat name actions italicized expressions

egg pan name objects state components affect simplified world
binding determines objects real world state components
correspond given binding main control structure need remember sequence
break beat heat may preconditions states tools e
whisk needs clean handled reduction given policies resetting
tools
binding maps

given basic policy cooking single egg single pan whisk construct
policy achieve goal composing basic policy binding policy
solve goal state bound material non postgoal state
policy solve goal solvable state must able change bindings run
time call function states bindings binding map
one simple policy choosing bindings impose priori ordering
objects use first acceptable object ordering ordering might
random might correspond order imposed visual search mechanism
formal standpoint ordering matter without loss generality use
left right order state components environment state tuple let
binding map chooses leftmost pregoal material uses fixed
mapping tools care mapping allows us construct true
solution one requires internal state agent

proposition policy
pm p
solution state defined


fiagre horswill
proof assumption defined initial state environment must map
solvable state initial state since p assumption solution
e pm must solve e unless changes value
pm solve suppose environment must go state
state component e leftmost pregoal material state
component leftmost pregoal material happen
leftmost pregoal material changed goal state b
component pregoal becomes pregoal case b impossible
case implies goal state thus pm must solution

multiple goals metabolism

thus far considered happens policy achieves goal since agents
rarely set achieve goal die want consider account extended
activity involving many goals
one important class extended activities agent transforms whole class
identical objects call metabolizing class metabolism useful
make extra work cooking eggs useful least feeding lot people
dirtying forks however probably means wash
whether policy metabolizes object class depends large part binding map
uses policy pm metabolizes materials material worked
ceases leftmost pregoal material soon arrives goal state
happens changes bindings agent starts work different object policy p
never actually sees material goal state course property leftmost
artifact formalism matters property metabolism simply
binding map implement ordering instances material
choose minimum ordering objects pre goal states
ordering might implemented agent visually scanning work surface
uncooked egg scanning left right top bottom return
issues section
binding maps lead kinds behavior pathological
binding map chooses binding metabolism ceases binding
map chooses uncooked eggs impose ordering might start
cooking infinite number eggs without ever actually finishing one
metabolism issue tool use metabolize materials pm must repeatedly
reset tools alternate policy metabolize tools let us define
binding map uses leftmost pregoal material leftmost reset
tools clearly
pm p
solution state defined policy treats tools disposable
long infinite supply fresh tools p see succession states
tools reset states never need execute resetting action
environment effectively single state tool environment thus reduction section
unnecessary


filifeworld analysis

multiple goals interleaved execution

metabolism involves performing transformation uniformly instances
type object cooking eggs cleaning dirtying forks often times
however agent work toward different kinds goals often
done interleaving actions solutions individual goals say
interleaving function returns one first two arguments
depending third state argument

p p fp p g
last two arguments policies policy define
notation
ip p p p
wanted simultaneously make toast cook egg good interleaving
toast making policy egg cooking policy would one chose egg making
policy whenever egg finished current cooking step ready
ipped removed pan chose toast making policy egg busy
cooking bad interleaving would one chose toast making policy
interleaving fair p p starting state ip p
finite number steps executed p p least finally say
two bindings independent map disjoint sets components images
binding independence special case subgoal independence two policies possibly
interfere alter distinct state components fairness binding independence
sucient conditions interleaving solve conjunctive goal

lemma let p p p p policies solve goals g

g respectively halt independent fair interleaving
p p ip p solves g g halts
proof since fair interleaving two policies executed finite time
regardless starting state induction n number steps
guaranteed executed least n steps policy
policy p composition policy p state space binding
p solves g halts must p solve g halt finite
number steps n execution environment goes series states

sn
project series states

n
claim execution interleaving ip p must bring environment
sequence states project
n


fiagre horswill
string states appears least appears least
state transitions appear
suppose otherwise must point series broken

neither two cases case p executed transition
p contradiction case p executed transition
p changed one state components mapped
independent contradiction thus interleaving solves g reasoning
must halt g since p halts g reasoning must solve g
halt hence must solve intersection halt
useful corollary policy applied two independent
bindings bindings safely interleaved interleaving commutes binding

corollary p p p p policies solve goals g
g respectively halt fair interleaving p p ai p
solves g g halts

implementing policies bindings

modeled toast behavior composition bindings interleavings
basic policy schematic environment case toast basic policy
simple enough implemented table lookup hard part implementing
bindings interleavings given realistic limitations short term memory perceptual
bandwidth
one would assume relatively complete representation world
egg would represented logical constant state would represented
set propositions involving constant binding would implemented
frame structure set variables point logical constants
presupposes underlying perceptual motor systems maintain
correspondence logical constants eggs world one eggs
changes visual system know looking update assertions
egg model
assumption taken lightly capacity human perceptual
system keep track objects world extremely limited ballard et al found
experimental subjects adopt strategies minimized amount world state
needed track internally preferring rescan environment information
needed rather memorize advance environment could even modified
saccadic eye movements without subjects noticing
alternative treat limitations body locality space limited
attentional motor resources resource implementing bindings directly person
visually focus one object stand one place grasp objects
one time orientation body parts relative environment used
encode selection objects operated moment words


filifeworld analysis
implement binding actions body gaze shifts movements places
used shift binding
another alternative use states relationships objects world keep
track bindings egg cooked frying pan fork available
use drawer sink waiting washed
section model use body conventions implement bindings interleavings simplify presentation concrete focus
materials particularly eggs

binding deixis gaze

first approximation people visually recognize objects
directly looking people achieve illusion direct access arbitrary objects rapidly
changing gaze direction thus addition normal state environment
lived world contains additional state component gaze direction since
normally change gaze direction without changing world vice versa lived
world e separated parallel product objective environment gaze
direction
e e k
access world gaze allows us focus one particular
object time gaze implements binding precisely binding map since
depends direction gaze model gaze direction number indicating
object presently foveated
gaze sn sd
person could implement single object binding fixating object wish
bind first would set component egg use binding
since really binding map however rather true binding agent must
pervasively structure activity ensure gaze need never redirected

binding convention

general agents must maintain bindings sort convention whether
structuring internal memory case solver structuring
activity case gaze agent maintains binding
convention spatial relation eye object binding
versions toast date maintained bindings conventions simulated
spatial arrangement states objects
one reason toast cannot rely solely gaze binding technique breaks
binding multiple objects agent must continually move gaze among objects
interest additional convention must introduced ensure
gaze leaves egg later returns returns egg assumes
course toast must return egg tasks may suce toast
return functionally equivalent egg preparing three fried eggs
attention distracted preparing break second one alright attention
returns third egg long gets back second egg eventually


fiagre horswill
state conventions

original version toast used convention eggs bound cooking task
iff starting unbroken state eggs therefore bound
binding map

toast state unique egg unbroken state
agent implement first visually searching unbroken egg
gaze corollary interleaving cooking multiple eggs accomplished interleaving bindings eggs example might assume
visual system searched non deterministically round robin fashion eggs fair
interleaving suce
spatial conventions

later development toast found useful adopt convention
eggs bound cooking task iff located designated workspace cooking
eggs counter frying pan idle eggs refrigerator
convention lets agent use space external memory binding information bind
egg agent faces workspace performs visual search egg egg
finds egg cooked since idle eggs view
still leaves open issue fairness extreme elegant solution fairness
use multiple workspaces employ convention workspace
defines unique binding cook two eggs agent works cooking whatever egg
front spins place alternates workspaces
formally environment consists two copies workspace objects
therein plus extra state component determines workspace agent faces
agent perceptual system implements binding map one
two workspaces bound depending agent orientation given policy
cooking one egg one workspace construct policy cooking two eggs two
interleaving policy ipping operation switches workspaces

proposition let e environment p policy solves goal g

e halts let environment two states two actions
identity flip moves environment opposite state present
state consider product environment

e e
e

binding map e e

md sd
fair interleaving policies

pmd amd p md


filifeworld analysis

real world
idealization

functionally equivalent objects
least reset
binding map

binding maps
interleavings

general tools
resetting policies

self cleaning tools
isomorphism

single object
isomorphism

canonical chain

figure alternative reductions used toast


pflip flip

solution e g g f g
proof consider bindings let p
p p p since binding map md alternates
bindings fair interleaving pmd pflip equivalent interleaving
p p pflip would interleaving fair
p p get run finite time see fact
execution pflip switches md one binding another objection
leaves open possibility pflip get run twice row thus returning
environment original state preventing md switching bindings
cannot occur however since would introduce loop causing interleaving run pflip
forever never running pmd violating assumption fairness interleaving
pmd pflip thus interleaving p p pflip must fair note
p solves goal g f g halts p solves goal g f g halts
pflip solves goal g g f g halts thus lemma interleaving solves
intersection goals g g f g


fiagre horswill

reductions structure toast
shown cooking solved series reductions
conventions binding allows reduction schematic world
action greatly restricted action selection greatly simplified world
reduced given resetting tools world tools
reset world turn equivalent world one object
material cooked one action taken given time actions
found table lookup
multiple materials cooked interleaving execution processes cooking
individual materials interleaving processes equivalent however interleaving
bindings schematic world need even aware pursuing
multiple goals tool bindings continuously changed tools dirtied tools
effectively disposable tools effectively single state separate reduction
general tools single state tools unnecessary material bindings maintained
number conventions involving states positions objects
short describe toast path network possible
simplifications see figure every path actual world
idealized single object world defines possible correct version toast


cognitive autopoiesis
formalizing ideas binding gaze moving toward theory
intentionality depends agent embedding world rather solely upon
internal world agent keep track particular objects terms
functional significance roles play ongoing activity
keep track tools materials associated different tasks keeping
different locations example different regions countertop far however
ideas subject limited simple cases example agent switching
visual focus back forth two objects model complex patterns
found everyday life need much better theory world
embedded theory partially matter biology physics course
matter cultural practices organizing activities space section
would sketch general theory matters concept cognitive
autopoiesis
maturana varela autopoiesis refers processes organisms
act environments order provide conditions continued functioning cognitive autopoiesis refers active means agents structure
environments order provide conditions cognitive activities
include basically means agents provide factorability environments engaging customary activities customary tools materials
partitioning activities customary ways includes range
subtle phenomena kirsh example drawn useful distinction
actions aim achieving functional goals beating eggs sweeping oors


filifeworld analysis
actions aim facilitating cognition setting right number eggs beginning opening curtains dust visible actions course
serve purposes example one chooses boil water kettle rather
saucepan strategy achieves latter provide sign
possible take next action example preparing tea stabilization actions hammond et al provide cognitive conditions actions one might
example develop habit leaving items door moment one realizes
need taken work
phenomena help understanding inadequate concept
environment one conceptualizes environment monolithic whole perhaps
way looks viewed airplane else way looks understood
peephole momentary vector sense perceptions begins seem arbitrary chaotic
hostile certain sense seems static anatomy physiology
fact phenomena cognitive autopoiesis reveal lifeworld great
deal living structure structure actively maintained agents
providing crucial preconditions cognition indeed hard draw clear line
around agent cognition trace sequence causal events led given agent
pour pitcher milk particular moment sequence lead back forth
agent customary surroundings almost surroundings
extension one mind
cognitive autopoiesis complex multifaceted phenomenon single theory
suce explain one useful way think cognitive autopoiesis spatially
terms series buffer zones embodied agent putative dangers
complexities environment people whose lives similar
buffer zones conveniently sorted six headings

body posture markings things might attached hung

prostheses artificial markings things one holding one hands
things serve forms memory example way
remember activity one middle momentary distraction
body motility makes possible wide range voluntary reconfigurations
one physical relationship things example get better view better
leverage

clothing including pockets purses money belts hats everyone carries
around objects ways draw customary practices artifacts cash
wallets keys pockets watch wrist etc configuring things
evolving personal way keys left pocket money right tissues hip pocket
one coat spare change outer ap backpack

temporary workspaces one occupies perform particular activity bound

ed period repairing bicycle example one might spread tools bicycle
parts oor patterns cognitive significance relationship
one body cognitive states chapman agre one
claiming space permanent colony might located patio


fiagre horswill
public park example one lay claim space long enough perform
customarily bounded task

one private spaces home desk oce car trunks stuff kept someone else

attic forth spaces serve numerous functions course among
cognitive functions providing stable locations long periods time
tools materials storage places stuff needs kept adequate supply
practices regulating people access stuff stable
conditions actively maintained provide background wide variety
transient activities

spaces shared people within stable time extended relationships
spaces include living rooms kitchens shared oce spaces forth
line private shared spaces clearly depends particular culture
set relationships distinction might clear point
cognitive functions spaces maintained shared practices
letting someone know borrow stuff

public spaces whole range customary artifacts practices regu

late activities public spaces offer fewer guarantees private shared
spaces include wide variety supports cognition including signs
architectural conventions possible use one body clothing
carry artifacts provide cognitive support dealing public spaces

buffer zones offer perfect protection harm complete support
pursuit goals shared public spaces sites con ict example
con icts include involuntary disruption destruction one body
buffer zones customarily one private control serious theory
activity must include account phenomena well usually
orderly way anything else
event nested buffer zones ordinary life participate large metabolism
continually interweaves cognitive functional purposes among purposes
learning adaptation body parts tools customary activities helps channel action customary directions existing background objects spaces
practices help channel actions children newcomers customary directions
larger scale caretakers regularly construct customized types buffer zones around
young example dicult impossible get anything
could cause harm lifeworld child example differs adult
reach cookie jar locked cupboard roach spray
kept growing literature investigated processes cognitive apprenticeship rogoff situated learning lave wenger distributed cognition hutchins
salomon shared construction activities grin cole go
systematically restrictive supportive lifeworlds


filifeworld analysis

conclusion

explored ways structure lifeworld
supports agents cognition suggested analysis might expanded
cover wider range phenomena much work obviously remains done perhaps
significant part work concerns fundamental assumption lifeworld analysis
people use objects customary ways plausible enough first approximation
true faced diculty goes beyond capacities
usual practices artifacts readily available people frequently improvise
handle spoon might used pry open lid pen might used fish acorns
exhaust duct book might used provide backing sheet one
writing protruding section car bumper might bent straight deliberately
driving car concrete wall cases underlying physical affordances
object beyond ready hand appropriation routine patterns
interaction underlying affordances situations breakdown example tool breaks proves inadequate job cases people
confer improvised meanings upon artifacts phenomena particularly important
conversation utterance interpreted context created previous
utterances simultaneously helping create context interpretation successive utterances well edwards mercer atkinson heritage point
lifeworld exist rather something actively created
well something adapted socialization one challenge future
learn computational methods might help modeling phenomena
phenomena might help us rethink basic ideas computation

acknowledgements

appreciate detailed comments referees work funded part
national science foundation grant number iri institute
learning sciences established support anderson consulting part
arthur anderson worldwide organization

glossary terms

binding simple projection mapping state space components two environ

ments acts reduction one environment another see section
binding map mapping environment states bindings see section
cartesian product sets b set pairs b b b
environments environment cartesian product two environments iff
state space cartesian product state spaces since set actions
left open definition many possible ways forming products e g serial
product parallel product uniform extension etc see section
discrete control dcp environment set goal states within
see section
environment state machine e set possible states set possible actions
mapping states states sets states actions need finite see section


fiagre horswill

focus action focused state component alters component see

section
material object environment whose state space chain see section
policy mapping states actions formalization agent control structure
see section
projection mapping state space one environment state space
another see section
simple projection mapping state spaces maps state space components
one environment state space components another see section
state component environments whose state spaces cartesian products
element environment state tuple see section
solution policy solves dcp initial state run state
eventually reaches goal state see section
tool roughly state component brought ready state without altering
state components see section
uniform reducibility roughly e uniformly reducible e consists multiple
copies e objects see section

glossary notation

function composition operator f g x f g x

projection p
inverse e set states map given state p
simple projection generalized inverse since maps certain
components components replaced corresponding
components p
simple reduction environment e e function mapping action
e action implements e p
cn chain environment n states p
e environment
e e g g goal e e uniformly reducible e existential goal g e
set e states map goal state binding p
e
e serial product cartesian product e e actions


two environments must taken separately p
e k e parallel product cartesian product e e actions
two environments must taken simultaneously p
le e e environment uniformly reducible e leftmost ready binding map
e e p
p policy
pe g standard policy single material environment e goal g p
singleton environment environment exactly one state used represent
self resetting tool p




filifeworld analysis

references

agre p horswill cultural support improvisation tenth national conference artificial intelligence cambridge american association artificial
intelligence mit press
agre p e computational interaction agency artificial intelligence

agre p e computation human experience cambridge university press
cambridge uk
agre p e chapman pengi implementation theory activity
proceedings sixth national conference artificial intelligence pp
atkinson j heritage j structures social action cambridge university
press cambridge uk
ballard h hayhoe pook p k rao r p n deictic codes
embodiment cognition technical report university rochester national
resource laboratory study brain behavior rochester ny revised
july
beach k role external mnemonic symbols acquiring occupation
gruneberg morris p e sykes r n eds practical aspects memory
current issues memory everyday life wiley chichester
uk
beer r dynamical systems perspective agent environment interaction
artificial intelligence
brady j agre p e braunegg j connell j h mechanic mate
proceedings european conference artificial intelligence pisa italy
chapman agre p e abstract reasoning emergent concrete activity
georgeff p lansky l eds reasoning actions plans proceedings workshop timberline oregon morgan kaufmann publishers
los altos ca
dixon embedded computation semantics programs tr ssl
xerox palo alto center palo alto ca
donald b r jennings j constructive recognizability task directed robot
programming robotics autonomous systems
edwards mercer n common knowledge development understanding classroom methuen london
gibson j j ecological visual perception erlbaum hilldale nj
originally published


fiagre horswill
grin n p cole construction zone working cognitive change
school cambridge university press cambridge
hammond k j converse grass j w stabilization environments
artificial intelligence
horswill analysis adaptation environment artificial intelligence

hutchins e cognition wild mit press cambridge
kirsh intelligent use space artificial intelligence
knoblock c theory abstraction hierarchical benjamin
p ed change representation inductive bias kluwer boston
kosecka j control discrete event systems grasp lab report university
pennsylvania computer information science department philadelphia pa
lansky l fogelsong localized representations methods
parallel domains proceedings sixth national conference artificial
intelligence pp menlo park ca aaai press
lave j wenger e situated learning legitimate peripheral participation
cambridge university press cambridge uk
littman l optimization categorization reinforcement learning
environments meyer wilson meyer wilson pp
lyons arbib formal model computation sensory
robotics ieee transactions robotics automation
maturana h r varela f j tree knowledge biological roots
human understanding shambhala boston
meyer j wilson w eds animals animats second
international conference simulation adaptive behavior mit press cambridge

newell shaw j c simon h report general solving
program proceedings international conference information processing
pp paris
newell simon h gps program simulates human thought
feigenbaum e feldman j eds computers thought pp
mcgraw hill
rogoff b apprenticeship thinking cognitive development social context
oxford university press york


filifeworld analysis
rosenschein j formal theories knowledge ai robotics report csli center study language information stanford ca
rosenschein j synthesizing information tracking automata environment
descriptions brachman r j levesque h j reiter r eds proceedings
first international conference principles knowledge representation
reasoning pp
rosenschein j kaelbling l p synthesis machines provable
epistemic properties halpern j ed proc conf theoretical aspects
reasoning knowledge pp morgan kaufmann
sacerdoti e hierarchy abstraction spaces artificial intelligence

salomon g ed distributed cognitions psychological educational considerations cambridge university press
schutz luckmann structures life world northwestern
university press evanston il
simon h administrative behavior study decision making processes
administrative organization macmillan york
simon h sciences artificial mit press cambridge
sussman g j computer model skill acquisition elsevier york
todd p wilson w somayaji b yanco h blind breeding
blind adaptive behavior without looking cliff husbands p meyer
j wilson w eds animals animats third international
conference simulation adaptive behavior pp mit press
todd p wilson w environment structure adaptive behavior
ground meyer wilson meyer wilson pp
wilson w animat path ai meyer j wilson w eds
animals animats proceedings first international conference simulation
adaptive behavior pp mit press cambridge
winston p h binford katz b lowry learning physical descriptions
functional definitions examples precedents proceedings national
conference artificial intelligence pp austin tx




