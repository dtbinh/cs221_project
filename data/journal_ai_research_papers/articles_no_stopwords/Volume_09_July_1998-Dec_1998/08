Journal Artificial Intelligence Research 9 (1998) 317-365

Submitted 5/98; published 12/98

AntNet: Distributed Stigmergetic Control
Communications Networks
Gianni Di Caro
Marco Dorigo

IRIDIA, Universite Libre de Bruxelles
50, av. F. Roosevelt, CP 194/6, 1050 - Brussels, Belgium

gdicaro@iridia.ulb.ac.be
mdorigo@ulb.ac.be

Abstract

paper introduces AntNet, novel approach adaptive learning routing
tables communications networks. AntNet distributed, mobile agents based Monte
Carlo system inspired recent work ant colony metaphor solving
optimization problems. AntNet's agents concurrently explore network exchange
collected information. communication among agents indirect asynchronous,
mediated network itself. form communication typical social insects
called stigmergy. compare algorithm six state-of-the-art routing algorithms coming telecommunications machine learning fields. algorithms'
performance evaluated set realistic testbeds. run many experiments
real artificial IP datagram networks increasing number nodes several paradigmatic spatial temporal trac distributions. Results encouraging.
AntNet showed superior performance experimental conditions respect
competitors. analyze main characteristics algorithm try explain
reasons superiority.

1. Introduction
Worldwide demand supply communications networks services growing exponentially. Techniques network control (i.e., online off-line monitoring management
network resources) play fundamental role best exploiting new transmission
switching technologies meet user's requests.
Routing core whole network control system. Routing, conjunction
admission, ow, congestion control components, determines overall network
performance terms quality quantity delivered service (Walrand & Varaiya,
1996). Routing refers distributed activity building using routing tables, one
node network, tell incoming data packets outgoing link use
continue travel towards destination node.
Routing protocols policies accommodate con icting objectives constraints imposed technologies user requirements rapidly evolving commercial
scientific pressures. Novel routing approaches required eciently manage distributed multimedia services, mobile users networks, heterogeneous inter-networking,
service guarantees, point-to-multipoint communications, etc. (Sandick & Crawley, 1997;
ATM Forum, 1996).
adaptive distributed routing algorithm propose paper mobileagent-based, online Monte Carlo technique inspired previous work artificial ant
c 1998 AI Access Foundation Morgan Kaufmann Publishers. rights reserved.

fiDi Caro & Dorigo

colonies and, generally, notion stigmergy (Grasse, 1959), is, indirect communication taking place among individuals modifications induced
environment.
Algorithms take inspiration real ants' behavior finding shortest paths (Goss,
Aron, Deneubourg, & Pasteels, 1989; Beckers, Deneubourg, & Goss, 1992) using information trail chemical substance (called pheromone) deposited ants,
recently successfully applied several discrete optimization problems (Dorigo,
Maniezzo, & Colorni, 1991; Dorigo, 1992; Dorigo, Maniezzo, & Colorni, 1996; Dorigo &
Gambardella, 1997; Schoonderwoerd, Holland, Bruten, & Rothkrantz, 1996; Schoonderwoerd, Holland, & Bruten, 1997; Costa & Hertz, 1997). algorithms set artificial
ants collectively solve problem consideration cooperative effort.
effort mediated indirect communication information problem structure
ants concurrently collect building solutions using stochastic policy. Similarly,
AntNet, algorithm propose paper, set concurrent distributed agents
collectively solve adaptive routing problem. Agents adaptively build routing tables
local models network status using indirect non-coordinated communication
information collect exploring network.
ensure meaningful validation algorithm performance devised realistic
simulation environment terms network characteristics, communications protocol
trac patterns. focus IP (Internet Protocol) datagram networks irregular
topology consider three real artificial topologies increasing number
nodes several paradigmatic temporal spatial trac distributions. report
behavior AntNet compared effective static adaptive state-of-the-art
routing algorithms (vector-distance link-state shortest paths algorithms (Steenstrup,
1995), recently introduced algorithms based machine learning techniques).
AntNet shows best performance stable behavior considered
situations. many experiments superiority striking. discuss results
main properties algorithm, compared competitors.
paper organized follows. Section 2 definition, taxonomy characteristics routing problem reported. Section 3 describe communication
network model used. Section 4 describes detail AntNet, novel routing algorithm,
Section 5 brie describe algorithms compared AntNet.
Section 6, experimental settings reported terms trac, networks algorithm
parameters. Section 7 reports several experimental results. Section 8 discuss
results try explain AntNet's superior performance. Finally, Section 9, discuss
related work, Section 10, draw conclusions outline directions future
research.

2. Routing: Definition Characteristics
Routing distributed systems characterized follows. Let G = (V; E ) directed
weighted graph, node set V represents processing/queuing and/or forwarding unit edge transmission system. main task routing algorithm
direct data ow source destination nodes maximizing network performance.
318

fiAntNet: Distributed Stigmergetic Control Communications Networks

problems interested in, data ow statically assigned follows
stochastic profile hard model.
specific case communications networks (Steenstrup, 1995; Bertsekas & Gallager,
1992), routing algorithm manage set basic functionalities tightly
interacts congestion admission control algorithms, links' queuing
policy, user-generated trac. core routing functions (i)
acquisition, organization distribution information user-generated trac
network states, (ii) use information generate feasible routes maximizing
performance objectives, (iii) forwarding user trac along selected routes.
way three functionalities implemented strongly depends underlying network switching transmission technology, features
interacting software layers. Concerning point (iii), two main forwarding paradigms
use: circuit packet-switching (also indicated terms connection-oriented
connection-less). circuit-switching approach, setup phase looks reserves
resources assigned incoming session. case, data packets
belonging session follow path. Routers required keep state
information active sessions. packet-switching approach, reservation
phase, state information maintained routers data packets follow different
paths. intermediate node autonomous decision taken concerning node's
outgoing link used forward data packet toward destination.
work described paper, focus packet-switching paradigm,
technique developed used manage circuit-switching expect
qualitatively similar results.

2.1 Broad Taxonomy

common feature routing algorithms presence every network node
data structure, called routing table, holding information used algorithm
make local forwarding decisions. routing table local database local
model global network status. type information contains way
information used updated strongly depends algorithm's characteristics.
broad classification routing algorithms following:
centralized versus distributed;
static versus adaptive.
centralized algorithms, main controller responsible updating node's
routing tables and/or make every routing decision. Centralized algorithms used
particular cases small networks. general, delays necessary gather
information network status broadcast decisions/updates make
infeasible practice. Moreover, centralized systems fault-tolerant. work,
consider exclusively distributed routing.
distributed routing systems, computation routes shared among network
nodes, exchange necessary information. distributed paradigm currently
used majority network systems.
static (or oblivious) routing systems, path taken packet determined
basis source destination, without regard current network state.
319

fiDi Caro & Dorigo

path usually chosen shortest one according cost criterion,
changed account faulty links nodes.
Adaptive routers are, principle, attractive, adapt routing policy time spatially varying trac conditions. drawback, cause
oscillations selected paths. fact cause circular paths, well large uctuations measured performance. addition, adaptive routing lead easily
inconsistent situations, associated node link failures local topological changes.
stability inconsistency problems evident connection-less
connection-oriented networks (Bertsekas & Gallager, 1992).
Another interesting way looking routing algorithms optimization perspective. case main paradigms are:
minimal routing versus non-minimal routing;
optimal routing versus shortest path routing.
Minimal routers allow packets choose minimal cost paths, non-minimal
algorithms allow choices among available paths following heuristic strategies
(Bolding, Fulgham, & Snyder, 1994).
Optimal routing network-wide perspective objective optimize function individual link ows (usually function sum link costs assigned
basis average packet delays) (Bertsekas & Gallager, 1992).
Shortest path routing source-destination pair perspective: global cost
function optimize. objective determine shortest path (minimum cost)
two nodes, link costs computed (statically adaptively) following
statistical description link states. strategy based individual rather
group rationality (Wang & Crowcroft, 1992). Considering different content stored
routing table, shortest path algorithms subdivided two classes
called distance-vector link-state (Steenstrup, 1995).
Optimal routing static (it seen solution multicommodity ow problem) requires knowledge trac characteristics. Shortest paths algorithms
exible, don't require priori knowledge trac patterns
widely used routing algorithms.
appendix A, detailed description properties optimal shortest
path routing algorithms reported.
Section 4, introduce novel distributed adaptive method, AntNet, shares
optimization perspective (minimal non-minimal) shortest path algorithms
usual implementation paradigms (as depicted appendix A).

2.2 Main Characteristics Routing Problem

main characteristics routing problem communications networks summarized following way:

Intrinsically distributed strong real-time constraints: fact, database

decision system completely distributed network nodes, failures
status information propagation delays negligible respect user's
320

fiAntNet: Distributed Stigmergetic Control Communications Networks

trac patterns. impossible get complete up-to-date knowledge distributed state, remains hidden. decision node, routing algorithm
make use local, up-to-date information, non-local, delayed information
coming nodes.
Stochastic time-varying: session arrival data generation process is,
general case, non-stationary stochastic. Moreover, stochastic process
interacts recursively routing decisions making infeasible build working model whole system (to used example dynamic programming
framework).
Multi-objective: several con icting performance measures usually taken account. common throughput (bit/sec) average packet delay (sec).
former measures quantity service network able offer
certain amount time (amount correctly delivered bits per time unit),
latter defines quality service produced time. Citing Bertsekas
Gallager (1992), page 367: \the effect good routing increase throughput
value average delay per packet high offered load conditions
decrease average delay per packet low moderate offered load conditions".
performance measures consider impact routing algorithm network resources terms memory, bandwidth computation, algorithm
simplicity, exibility, etc.
Multi-constraint: constraints imposed underlying network technology,
network services provided user services requested. general, users ask
low-cost, high-quality, reliable, distributed multimedia services available across heterogeneous static mobile networks. Evaluating technological commercial factors,
network builders service providers try accommodate requests maximizing profit criteria. Moreover, high level fault-tolerance reliability
requested modern high-speed networks, user sessions formulate precise
requests network resources. case, session accepted,
system able guarantee session gets resources needs,
recoverable fault event.
interesting note characteristics make problem routing belong
class reinforcement learning problems hidden state (Bertsekas & Tsitsiklis,
1996; Kaelbling, Littman, & Moore, 1996; McCallum, 1995). distributed system agents,
components routing algorithm node, determine continual online
learning best routing table values respect network's performance criteria.
exact measure evaluation scores forwarding decisions available, neither online
form training set. Moreover, distributed nature problem
constraints, complete state network hidden agent.

3. Communication Network Model

paper, focus irregular topology connection-less networks IP-like network layer (in ISO-OSI terminology) simple transport layer. particular,
focus wide-area networks (WAN). cases, hierarchical organization schemes
321

fiDi Caro & Dorigo

adopted.1 Roughly speaking, sub-networks seen single host nodes connected
interface nodes called gateways. Gateways perform fairly sophisticated network layer tasks,
including routing. Groups gateways, connected arbitrary topology, define logical
areas. Inside area, gateways hierarchical level \ at" routing
performed among them. Areas communicate means area border gateways.
way, computational complexity routing problem, seen gateway,
much reduced (e.g., Internet, OSPF areas typically group 10 300 gateways),
complexity design management routing protocol much increased.
instance communication network mapped directed weighted graph
N processing/forwarding nodes. links viewed bit pipes characterized
bandwidth (bit/sec) transmission delay (sec), accessed following
statistical multiplexing scheme. purpose, every node, type store-and-forward,
holds buffer space incoming outgoing packets stored. buffer
shared resource among queues attached every incoming outgoing link
node. traveling packets subdivided two classes: data routing packets.
packets class priority, queued served
basis first-in-first-out policy, routing packets greater priority data
packets. workload defined terms applications whose arrival rate dictated
selected probabilistic model. application (or session, connection following),
mean process sending data packets origin node destination node.
number packets send, sizes intervals assigned according
defined stochastic process. didn't make distinction among nodes, act
time hosts (session end-points) gateways/routers (forwarding elements).
adopted workload model incorporates simple ow control mechanism implemented
using fixed production window session's packets generation. window
determines maximum number data packets waiting sent. sent, packet
considered acknowledged. means transport layer neither manages error
control, packet sequencing, acknowledgements retransmissions.2
incoming packet, node's routing component uses information stored
local routing table assign outgoing link used forward packet toward
target node. link resources available, reserved transfer
set up. time takes move packet one node neighboring one depends
packet size link transmission characteristics. If, packet's arrival,
enough buffer space hold it, packet discarded. Otherwise, service
time stochastically generated newly arrived packet. time represents delay
packet arrival time time put buffer queue
outgoing link local routing component selected it.
Situations causing temporary steady alteration network topology
physical characteristics taken account (link node failure, adding deleting
network components, etc.).
1. hierarchical structure adopted Internet, organized hierarchical Autonomous Systems
multiple routing areas inside Autonomous System (Moy, 1998).
2. choice \Simple Trac" model MaRS network simulator (Alaettinoglu,
Shankar, Dussa-Zieger, & Matta, 1992). seen basic form File Transfer Protocol
(FTP).

322

fiAntNet: Distributed Stigmergetic Control Communications Networks

developed complete network simulator C++. discrete event simulator
using main data structure event list, holds next future events.
simulation time continuous variable set currently scheduled event. aim
simulator closely mirror essential features concurrent distributed
behavior generic communication network without sacrificing eciency exibility
code development.
end section remarks concerning two features model.
First, chose implement \real" transport layer proper management
error, ow, congestion control. fact, additional control component
considerable impact network performance,3 making dicult evaluate
study properties control algorithm without taking consideration complex
way interacts control components. Therefore, chose test
behavior algorithm competitors conditions number
interacting components minimal routing component evaluated isolation,
allowing better understanding properties. study routing conjunction error,
ow congestion control, components designed time,
allow good match among characteristics produce synergetic effect.
Second, chose work connection-less connection-oriented networks connection-oriented schemes mainly used networks able deliver
Quality Service (QoS) (Crawley, Nair, Rajagopalan, & Sandick, 1996).4 case,
suitable admission control algorithms introduced, taking account many
economic technological factors (Sandick & Crawley, 1997). But, again, first step
think reasonable try check validity routing algorithm
reducing number components heavily uencing network behavior.

4. AntNet: Adaptive Agent-based Routing Algorithm
characteristics routing problem (discussed Section 2.2) make well suited
solved mobile multi-agent approach (Stone & Veloso, 1996; Gray, Kotz, Nog,
Rus, & Cybenko, 1997). processing paradigm good match distributed
non-stationary (in topology trac patterns) nature problem, presents high
level redundancy fault-tolerance, handle multiple objectives constraints
exible way.
AntNet, routing algorithm propose paper, mobile agents system showing essential features parallel replicated Monte Carlo systems (Streltsov & Vakili,
1996). AntNet takes inspiration previous work artificial ant colonies techniques
solve combinatorial optimization problems (Dorigo et al., 1991; Dorigo, 1992; Dorigo et al.,
1996; Dorigo & Gambardella, 1997) telephone network routing (Schoonderwoerd et al.,
3. example, authors reported improvement ranging 2 30% various performance
measures real Internet trac (Danzig, Liu, & Yan, 1994) changing Reno version
Vegas version TCP (Peterson & Davie, 1996) (the current Internet Transport Control Protocol),
authors even claimed improvements ranging 40 70% (Brakmo, O'Malley, & Peterson,
1994).
4. case current Internet, IP bearer service \best-effort" type, meaning
best guarantees service quality terms delay bandwidth
jitter, etc., assured.

323

fiDi Caro & Dorigo

1996, 1997). core ideas techniques (for review see Dorigo, Di Caro,
Gambardella, 1998) (i) use repeated concurrent simulations carried
population artificial agents called \ants" generate new solutions problem, (ii)
use agents stochastic local search build solutions incremental way,
(iii) use information collected past simulations direct future search
better solutions.
artificial ant colony approach, following iterative process, ant builds
solution using two types information locally accessible: problem-specific information
(for example, distance among cities traveling salesman problem), information added
ants previous iterations algorithm. fact, building solution,
ant collects information problem characteristics performance,
uses information modify representation problem, seen locally
ants. representation problem modified way information
contained past good solutions exploited build new better solutions. form
indirect communication mediated environment called stigmergy, typical
social insects (Grasse, 1959).
AntNet, retain core ideas artificial ant colony paradigm, apply
solve adaptive way routing problem datagram networks.
Informally, AntNet algorithm main characteristics summarized
follows.

regular intervals, concurrently data trac, network node








mobile agents asynchronously launched towards randomly selected destination
nodes.
Agents act concurrently independently, communicate indirect way,
information read write locally nodes.
agent searches minimum cost path joining source destination nodes.
agent moves step-by-step towards destination node. intermediate
node greedy stochastic policy applied choose next node move to.
policy makes use (i) local agent-generated maintained information, (ii) local
problem-dependent heuristic information, (iii) agent-private information.
moving, agents collect information time length, congestion
status node identifiers followed path.
arrived destination, agents go back source nodes
moving along path opposite direction.
backward travel, local models network status local routing
table visited node modified agents function path
followed goodness.
returned source node, agents die.

following subsections scheme explained, components explicated discussed, detailed description algorithm given.
324

fiAntNet: Distributed Stigmergetic Control Communications Networks

4.1 Algorithm Description Characteristics

AntNet conveniently described terms two sets homogeneous mobile agents (Stone
& Veloso, 1996), called following forward backward ants. Agents5 set
possess structure, differently situated environment; is,
sense different inputs produce different, independent outputs.
broadly classified deliberative agents, behave reactively retrieving
pre-compiled set behaviors, time maintain complete internal state
description. Agents communicate indirect way, according stigmergy paradigm,
information concurrently read write two data structures stored
network node k (see Figure 1):
Outgoing Links

Network Nodes

Routing Table
Network
Node

Local

P1 1

P1 2

........

P1 N

P2 1

P2 2

........

P2 N

PL 1

PL 2

........

PL N

Traffic
Statistics

Network Nodes
Stat (1)

Stat (2)

Stat(N)

Figure 1: Node structures used mobile agents AntNet case node
L neighbors network N nodes. routing table organized
vector-distance algorithms, entries probabilistic values. structure
containing statistics local trac plays role local adaptive model
trac toward possible destination.
i) routing table Tk , organized vector-distance algorithms (see Appendix A),
probabilistic entries. Tk defines probabilistic routing policy currently
adopted node k: possible destination neighbor node n, Tk
stores probability value Pnd expressing goodness (desirability), current
network-wide routing policy, choosing n next node destination node
d:
X
Pnd = 1; 2 [1; N ]; Nk = fneighbors(k)g:
ii)

n2Nk
array Mk (d ; 2 ; Wd ), data structures defining simple parametric statistical

model trac distribution network seen local node k.
model adaptive described sample means variances computed
trip times experienced mobile agents, moving observation window Wd
used store best value Wbestd agents' trip time.

5. following, use interchangeably terms ant agent.

325

fiDi Caro & Dorigo

destination network, estimated mean variance, 2 ,
give representation expected time go stability. used arithmetic, exponential windowed strategies compute statistics. Changing strategy affect performance much, observed best results using
exponential model:6

+ (ok!d , );
2

2 + ((ok!d , )2 , 2 );
(1)
ok!d new observed agent's trip time node k destination d.7
moving observation window Wd used compute value Wbestd best
agents' trip time towards destination observed last w samples.
new sample, w incremented modulus jWjmax , jWjmax maximum allowed
size observation window. value Wbestd represents short-term memory
expressing moving empirical lower bound estimate time go node
current node.
seen memories local nodes capturing different aspects
network dynamics. model maintains absolute distance/time estimates
nodes, routing table gives relative probabilistic goodness measures linkdestination pair current routing policy implemented network.
AntNet algorithm described follows.
1. regular intervals every network node s, mobile agent (forward ant) Fs!d
launched toward destination node discover feasible, low-cost path
node investigate load status network. Forward ants share
queues data packets, experience trac loads. Destinations
locally selected according data trac patterns generated local workload:
fsd measure (in bits number packets) data ow ! d,
probability creating node forward ant node destination
f
pd = N sd :
X
fsd0

(2)

d0 =1

way, ants adapt exploration activity varying data trac distribution.
2. traveling toward destination nodes, agents keep memory paths
trac conditions found. identifier every visited node k time
elapsed since launching time arrive k-th node pushed onto memory
stack Ss!d (k).
6. model used Jacobson/Karels algorithm estimate retransmission timeouts
Internet TCP(Peterson & Davie, 1996).
7. factor weights number recent samples really affect average. weight
ti -th sample used estimate value j samplings, j > i, is: (1 , )j,i .
way, example, = 0:1, approximately latest 50 observations really uence
estimate, = 0:05, latest 100, on. Therefore, number effective observations
5(1=).

326

fiAntNet: Distributed Stigmergetic Control Communications Networks

3. node k, traveling agent headed towards destination selects node
n move choosing among neighbors already visit,
neighbors case previously visited. neighbor n selected
0 computed normalized sum probabilistic
probability (goodness) Pnd
entry Pnd routing table heuristic correction factor ln taking account
state (the length) n-th link queue current node k:
0 =
Pnd

Pnd + ffln
1 + ff(jNk j , 1) :

(3)

heuristic correction ln [0,1] normalized value proportional length qn
(in bits waiting sent) queue link connecting node k
neighbor n:
q
ln = 1 , jN jn :
k
X
qn0

(4)

n0 =1

value weights importance heuristic correction respect
probability values stored routing table. ln ects instantaneous state
node's queues, assuming queue's consuming process almost stationary
slowly varying, ln gives quantitative measure associated queue waiting
time. routing tables values, hand, outcome continual
learning process capture current past status whole network
seen local node. Correcting values values l allows
system \reactive", time avoiding following network
uctuations. Agent's decisions taken basis combination long-term
learning process instantaneous heuristic prediction.
experiments ran, observed introduced correction
effective mechanism. Depending characteristics problem, best value
assign weight vary, ranges 0.2 0.5, performance
doesn't change appreciably. lower values, effect l vanishing,
higher values resulting routing tables oscillate and, cases, performance
degrades.
4. cycle detected, is, ant forced return already visited node,
cycle's nodes popped ant's stack memory
destroyed. cycle lasted longer lifetime ant entering
cycle, (that is, cycle greater half ant's age) ant destroyed.
fact, case agent wasted lot time probably wrong sequence
decisions congestion states. Therefore, agent carrying
old misleading memory network state counterproductive use
update routing tables (see below).
5. destination node reached, agent Fs!d generates another agent
(backward ant) Bd!s , transfers memory, dies.
327

fiDi Caro & Dorigo

6. backward ant takes path corresponding forward ant,
opposite direction.8 node k along path pops stack Ss!d(k)
know next hop node. Backward ants share link queues data
packets; use higher priority queues, task quickly propagate
routing tables information accumulated forward ants.
7. Arriving node k coming neighbor node f , backward ant updates
two main data structures node, local model trac Mk routing table Tk , entries corresponding (forward ant) destination node
d. precautions, updates performed entries corresponding
every node k0 2 Sk!d; k0 6= \sub-paths" followed ant Fs!d visiting current node k. fact, elapsed trip time sub-path statistically
\good" (i.e., less + (; ), estimate confidence interval
), time value used update corresponding statistics
routing table. contrary, trip times sub-paths deemed good,
statistical sense defined above, used don't give correct idea
time go toward sub-destination node. fact, forward ant routing
decisions made function destination node. perspective,
sub-paths side effects, intrinsically sub-optimal local
variations trac load (we can't reason perspective dynamic
programming, non-stationarity problem representation). Obviously, case good sub-path use it: ant discovered, zero cost,
additional good route. following two items way updated
described respect generic \destination" node d0 2 Sk!d.
i) Mk updated values stored stack memory Ss!d(k). time
elapsed arrive (for forward ant) destination node d0 starting
current node used update mean variance estimates, d0 d0 2 ,
best value observation window Wd0 . way, parametric
model traveling time destination d0 maintained. mean value
time dispersion vary strongly, depending trac conditions:
poor time (path) low trac load good one heavy
trac load. statistical model able capture variability
follow robust way uctuations trac. model plays
critical role routing table updating process (see item (ii) below). Therefore,
investigated several ways build effective computationally inexpensive
models, described following Section 4.2.
ii) routing table Tk changed incrementing probability Pfd0 (i.e.,
probability choosing neighbor f destination d0 ) decrementing,
normalization, probabilities Pnd0 . amount variation
probabilities depends measure goodness associate trip time
Tk!d0 experienced forward ant, given below. time represents
available explicit feedback signal score paths. gives clear indication goodness r followed route proportional
8. assumption requires links network bi-directional. modern networks
reasonable assumption.

328

fiAntNet: Distributed Stigmergetic Control Communications Networks

length physical point view (number hops, transmission capacity
used links, processing speed crossed nodes) trac congestion
point view (the forward ants share queues data packets).
time measure , composed sub-paths elapsed times, cannot
associated exact error measure, given don't know \optimal"
trip times, depend whole network load status.9 Therefore,
used reinforcement signal. gives rise credit assignment
problem typical reinforcement learning field (Bertsekas & Tsitsiklis, 1996;
Kaelbling et al., 1996). define reinforcement r r(T; Mk )
function goodness observed trip time estimated basis
local trac model. r dimensionless value, r 2 (0; 1], used current
node k positive reinforcement node f backward ant Bd!s comes
from. r takes account average far observed values
dispersion score goodness trip time , smaller
is, higher r (the exact definition r discussed next subsection).
probability Pfd0 increased reinforcement value follows:
Pfd0

Pfd0 + r(1 , Pfd0 ):

(5)

way, probability Pfd0 increased value proportional
reinforcement received previous value node probability (that is,
given reinforcement, small probability values increased proportionally
big probability values, favoring way quick exploitation new,
good, discovered paths).
Probabilities Pnd0 destination d0 neighboring nodes n implicitly
receive negative reinforcement normalization. is, values
reduced sum probabilities still 1:
Pnd0

Pnd0 , rPnd0 ; n 2 Nk ; n 6= f:

(6)

important remark every discovered path receives positive reinforcement selection probability, reinforcement (in general) non-linear
function goodness path, estimated using associated trip time.
way, (explicit) assigned value r plays role,
(implicit) ant's arrival rate. strategy based trusting paths receive
either high reinforcements, independent frequency, low frequent
reinforcements. fact, trac load condition, path receives one
high reinforcements much better previously explored paths.
hand, transient phase sudden increase network load
paths likely high traversing times respect learned
model preceding, low congestion, situation. Therefore, case
good paths differentiated frequency ants' arrivals.
9. network congested state, trip times score poorly respect times
observed low load situations. Nevertheless, path high trip time scored good
path trip time significantly lower trip times observed congested
situation.

329

fiDi Caro & Dorigo

Assigning always positive, low, reinforcement value case paths
high traversal time allows implementation mechanism based
frequency reinforcements, while, time, avoids giving
excessive credit paths high traversal time due poor quality.
use probabilistic entries specific AntNet observed
effective, improving performance, cases, even 30%-40%.
Routing tables used probabilistic way ants
data packets. observed improve AntNet performance,
means way routing tables built AntNet well matched
probabilistic distribution data packets good paths.
Data packets prevented choosing links low probability remapping 's entries means power function f (p) = pff ; > 1,
emphasizes high probability values reduces lower ones (in experiments
set 1.2).
Figure 2 gives high-level description algorithm pseudo-code, Figure
3 illustrates simple example algorithm behavior. detailed discussion
characteristics algorithm postponed Section 8, performance
algorithm analyzed respect set competitor algorithms. way,
characteristics AntNet meaningfully evaluated compared
state-of-the-art algorithms.

4.2 Score Goodness Ant's Trip Time

reinforcement r critical quantity assigned considering three main
aspects: (i) paths receive increment selection probability proportional
goodness, (ii) goodness relative measure, depends trac
conditions, estimated means model M, (iii) important
follow trac uctuations. last aspect particularly important. Uncontrolled
oscillations routing tables one main problems shortest paths routing
(Wang & Crowcroft, 1992). important able set best trade-off
stability adaptivity.
investigated several ways assign r values trying take account
three requirements:

simplest way set r = constant: independently ant's \experiment

outcomes", discovered paths rewarded way. simple
meaningful case, work implicit reinforcement mechanism due
differentiation ant arrival rates. Ants traveling along faster paths arrive
higher rate ants, hence paths receive higher cumulative
reward.10 obvious problem approach lies fact that, although ants
following longer paths arrive delayed, nevertheless effect
routing tables ants followed shorter paths.

10. case, core algorithm based capability \real" ants discover shortest paths
communicating means pheromone trails (Goss et al., 1989; Beckers et al., 1992).

330

fiAntNet: Distributed Stigmergetic Control Communications Networks

:= Current time;
tend := Time length simulation;
:= Time interval ants generation;
foreach (Node) = Concurrent activity network =
= Local trac model;
= Node routing table;
( tend )
parallel = Concurrent activity node =
( mod = 0)
destination node := SelectDestinationNode(data trac distribution);
LaunchForwardAnt(destination node, source node);
end
foreach (ActiveForwardAnt [source node, current
(current node 6= destination node)

node, destination node])

next hop node := SelectLink(current node, destination node,T ; link queues);
PutAntOnLinkQueue(current node, next hop node);
WaitOnDataLinkQueue(current node, next hop node);
CrossTheLink(current node, next hop node);
PushOnTheStack(next hop node, elapsed time);
current node := next hop node;

end

LaunchBackwardAnt(destination node, source node, stack data);
Die();

end foreach
foreach (ActiveBackwardAnt [source node, current
(current node 6= destination node)

node, destination node])

next hop node := PopTheStack();
WaitOnHighPriorityLinkQueue(current node, next hop node);
CrossTheLink(current node, next hop node);
UpdateLocalTracModel(M, current node, source node, stack data);
reinforcement := GetReinforcement(current node, source node, stack data, M);
UpdateLocalRoutingTable(T , current node, source node, reinforcement);

end
end foreach
end parallel
end
end foreach

Figure 2: AntNet's top-level description pseudo-code. described actions take place
completely distributed concurrent way network nodes (while,
text, AntNet described individual ant's perspective).
constructs level indentation inside context statement
parallel executed concurrently. processes data generation
forwarding described, thought acting concurrently
ants.
331

fiDi Caro & Dorigo

Forward Ant (1

4)

1

2

3
(1

4
4) Backward Ant

Figure 3: Example AntNet behavior. forward ant, F1!4 , moves along path
1 ! 2 ! 3 ! 4 and, arrived node 4, launches backward ant B4!1
travel opposite direction. node k; k = 3; : : : ; 1, backward
ant use stack contents S1!4 (k) update values Mk (4 ; 4 2 ; W4 ),
and, case good sub-paths, update values Mk (i ; 2 ; Wi ); =
k + 1; : : : ; 3. time routing table updated incrementing
goodness Pj 4 , j = k + 1, last node k + 1 ant B4!1 came from,
case node = k + 1; : : : ; 4 destination node, decrementing
values P neighbors (here shown). increment
function trip time experienced forward ant going node k
destination node i. M, routing table always updated case
node 4 destination, nodes i0 = k + 1; : : : ; 3 sub-paths
taken consideration destination nodes trip time associated
corresponding sub-path forward ant statistically good.
experiments ran strategy, algorithm showed moderately good
performance. results suggest \implicit" component algorithm,
based ant arrival rate, plays important role. course, compete
state-of-the-art algorithms, available information path costs used.
elaborate approaches define r function ant's trip time ,
parameters local statistical model M. tested several alternatives, using
different linear, quadratic hyperbolic combinations values.
following limit discussion functional form gave best results,
used reported experiments:
r = c1

W

best









+ c2 (I , IIsup ),+Iinf
(T , Iinf ) :
sup inf

(7)

Equation 7, Wbest best trip time experienced ants traveling toward
destination d, last observation window W . maximum size window
(the maximum number considered samples resetting Wbest value) assigned
basis coecient Equation 1. said, weights number
samples effectively giving contribution value estimate, defining sort
moving exponential window. Following expression number effective samples
reported footnote 7, set jWjmax = 5(c=), c < 1. way, longterm exponential mean short-term windowing referring comparable set
observations, short-term mean evaluated fraction c samples used
332

fiAntNet: Distributed Stigmergetic Control Communications Networks

long-term one. Isup Iinf convenient estimates limits
p approximate
jWj), z =
confidence
interval


.


set

W
,


=

+
z
(
=
sup
inf
best
p
11
1= (1 , ) gives selected confidence level. level arbitrariness
computation confidence interval, set asymmetric way
arithmetic estimates. Anyway, need quick, raw estimate
mean value dispersion values (for example, local bootstrap procedure
could applied extract meaningful confidence interval, choice
reasonable CPU time-consuming perspective).
first term Equation 7 simply evaluates ratio current trip time
best trip time observed current observation window. term corrected
second one, evaluates far value Iinf relation
extension confidence interval, is, considering stability latest trip
times. coecients c1 c2 weight importance term. first term
important one, second term plays role correction. current
implementation algorithm set c1 = 0:7 c2 = 0:3. observed c2 shouldn't
big (0.35 upper limit), otherwise performance starts degrade appreciably.
behavior algorithm quite stable c2 values range 0.15 0.35
setting c2 0.15 slightly degrades performance. algorithm robust changes
, defines confidence level: varying confidence level range 75%
95% changes performance little. best results obtained values around
75%80%. observed algorithm robust internal parameter settings
didn't try \adapt" set parameters problem instance. different
experiments carried \reasonable" settings. could surely improve
performance means finer tuning parameters, didn't
interested implementing robust system, considering world networks
incredibly varied terms trac, topologies, switch transmission characteristics, etc.
value r obtained Equation 7 finally transformed means squash
function s(x):

!,1
;
s(x) = 1 + exp
xjN j
k

r

s(r)
:
s(1)

x 2 (0; 1]; 2 R+ ;

(8)
(9)

Squashing r values allows system sensitive rewarding good (high)
values r, tendency saturate rewards bad (near zero) r
values: scale compressed lower values expanded upper part.
way emphasis put good results, bad results play minor role.
11. expression obtained using Tchebycheff inequality allows definition confidence
interval random variable following distribution (Papoulis, 1991) Usually, specific probability
densities Tchebycheff bound high, conveniently use (i) want
avoid make assumptions distribution and, (ii) need raw estimate
confidence interval.

333

fiDi Caro & Dorigo

1

0.8
5 neighbors
4 neighbors
3 neighbors
2 neighbors

0.6
s(r)/s(1)

coecient a=jNk j determines
parametric dependence squashed
reinforcement value number
jNk j neighbors reinforced node
k: greater number neighbors,
higher reinforcement (see Figure 4). reason
want similar, strong, effect
good results probabilistic routing tables, independent number
neighbor nodes.

0.4

0.2

0
0

0.2

0.4

0.6

0.8

1

r

Figure 4: Examples squash functions
variable number node neighbors.

5. Routing Algorithms Used Comparison

evaluate performance AntNet, compared state-of-the-art routing algorithms telecommunications machine learning fields. following algorithms,
belonging various possible combinations static adaptive, distance-vector
link-state classes (see Appendix A), implemented used run comparisons.

OSPF (static, link state): implementation current Interior Gateway Pro-

tocol (IGP) Internet (Moy, 1998). interested studying routing
assumptions described Section 3, routing protocol implemented
mirror real OSPF protocol details. retains basic features
OSPF. Link costs statically assigned basis physical characteristics
routing tables set result shortest (minimum time) path computation sample data packet size 512 bytes. worth remarking
choice penalizes version OSPF respect real one. fact, real
Internet link costs set network administrators use additional heuristic
on-field knowledge trac workloads.

SPF (adaptive, link-state): prototype link-state algorithms dynamic met-

ric link costs evaluations. similar algorithm implemented second
version ARPANET (McQuillan, Richer, & Rosen, 1980) successive revisions (Khanna & Zinky, 1989). implementation uses ooding algorithm,
link costs assigned discrete scale 20 values using ARPANET
hop-normalized-delay metric12 (Khanna & Zinky, 1989) statistical window average method described (Shankar, Alaettinoglu, Dussa-Zieger, & Matta,
1992a). Link costs computed weighted averages short long-term
real-valued statistics ecting delay (e.g., utilization, queueing and/or transmis-

12. transmitting node monitors average packet delay (queuing transmission) average
packet transmission time fix observation windows. measures, assuming M/M/1
queueing model (Bertsekas & Gallager, 1992), link utilization cost measure calculated 1 , t=d.

334

fiAntNet: Distributed Stigmergetic Control Communications Networks

sion delay, etc.) fixed time intervals. Obtained values rescaled saturated
linear function. tried several additional discrete real-valued metrics
discretized hop-normalized-delay gave best results terms performance
stability. Using discretized scale reduces sensitivity algorithm
time reduces undesirable oscillations.

BF (adaptive, distance-vector): implementation asynchronous distributed
Bellman-Ford algorithm dynamic metrics (Bertsekas & Gallager, 1992; Shankar
et al., 1992a). algorithm implemented following guidelines Appendix A, link costs assigned way described SPF above.
Vector-distance Bellman-Ford-like algorithms today use mainly intra-domain
routing, used Routing Information Protocol (RIP) (Malkin
& Steenstrup, 1995) supplied BSD version Unix. Several enhanced versions basic adaptive Bellman-Ford algorithm found literature (for
example Merlin-Segall (Merlin & Segall, 1979) Extended Bellman-Ford
(Cheng, Riley, Kumar, & Garcia-Luna-Aceves, 1989) algorithms). focus mainly
reducing information dissemination time case link failures. link
failures major issue, paper, behavior general equivalent
basic adaptive Bellman-Ford.

Q-R (adaptive, distance-vector): Q-Routing algorithm proposed Boyan

Littman (1994). online asynchronous version Bellman-Ford
algorithm. Q-R learns online values Qk (d; n), estimates time
reach node node k via neighbor node n. Upon sending packet P
k neighbor node n destination d, back packet Pback immediately
generated n k. Pback carries information current time estimate
tn!d = minn0 2Nn Qn (d; n0 ) held node n time go destination d,
sum tPk!n queuing transmission time experienced P since arrival
node k. sum Qnew (d; n) = tn!d + tPk!n used compute variation
Qk (d; n) = (Qnew (d; n) , Qk (d; n)) Q-learning-like value Qk (d; n).

PQ-R (adaptive, distance-vector): Predictive Q-Routing algorithm (Choi & Ye-

ung, 1996), extension Q-Routing. Q-routing best link (i.e., one
lowest Qk (d; n)) deterministically chosen packets. Therefore, link
happens high expected Qk (d; n), example temporary load
condition, never used links exiting node
worse, higher, Qk (d; n). PQ-R learns model rate variation
links' queues, called recovery rate, uses probe links that, although
lowest Qk (d; n), high recovery rate.

Daemon (adaptive, optimal routing): approximation ideal algorithm.

defines empirical bound achievable performance. gives information much improvement still possible. absence priori
assumption trac statistics, empirical bound defined algorithm
possessing \daemon" able read every instant state queues
network calculating instantaneous \real" costs links assigning
335

fiDi Caro & Dorigo

paths basis network-wide shortest paths re-calculation every packet
hop. Links costs used shortest paths calculations following:



Cl = dl + p + (1 , ff) Q(l) + Q(l) ;
b
b
b
l

l

l

dl transmission delay link l, bl bandwidth, Sp size (in
bits) data packet hop, SQ(l) size (in bits) queue link
l, SQ(l) exponential mean size links queue correction
actual size link queue basis observed moment.
correction weighted value set 0.4. course, given arbitrariness
introduced calculating Cl , could possible define even better Daemon
algorithm.

6. Experimental Settings
functioning communication network governed many components, may
interact nonlinear unpredictable ways. Therefore, choice meaningful testbed
compare competing algorithms easy task.
limited set classes tunable components defined class choices
explained.

6.1 Topology physical properties net

Topology defined basis real net instance defined hand,
better analyze uence important topological features (like diameter, connectivity,
etc.).
Nodes mainly characterized buffering processing capacity, whereas links
characterized propagation delay, bandwidth streams multiplexing scheme.
both, fault probability distributions defined.
experiments, used three significant net instances increasing numbers
nodes. describe main characteristics summarize
topological properties means triple numbers (, , N ) indicating respectively
mean shortest path distance, terms hops, pairs nodes, variance
average, total number nodes. three numbers get idea
degree connectivity balancing network. diculty routing
problem roughly increases value numbers.

SimpleNet (1.9, 0.7, 8) small network specifically designed study aspects

behavior algorithms compare. Experiments SimpleNet
designed closely study different algorithms manage distribute load
different possible paths. SimpleNet composed 8 nodes 9 bi-directional
links bandwidth 10 Mbit/s propagation delay 1 msec. topology
shown Figure 5.
NSFNET (2.2, 0.8, 14) old USA T1 backbone (1987). NSFNET WAN
composed 14 nodes 21 bi-directional links bandwidth 1.5 Mbit/s.
336

fiAntNet: Distributed Stigmergetic Control Communications Networks

2

1

4

3

8
5

6

7

Figure 5: SimpleNet. Numbers within circles node identifiers. Shaded nodes
special interpretation experiments, described later. edge graph
represents pair directed links. Link bandwidth 10 Mbit/sec, propagation
delay 1 msec.
topology shown Figure 6. Propagation delays range 4 20 msec. NSFNET
well balanced network.

Figure 6: NSFNET. edge graph represents pair directed links. Link bandwidth 1.5 Mbit/sec, propagation delays range 4 20 msec.

NTTnet (6.5, 3.8, 57) major Japanese backbone. NTTnet NTT (Nippon

Telephone Telegraph company) fiber-optic corporate backbone. NTTnet
57 nodes, 162 bi-directional links network. Link bandwidth 6 Mbit/sec,
propagation delays range around 1 5 msec. topology shown Figure 7.
NTTnet well balanced network.

Figure 7: NTTnet. edge graph represents pair directed links. Link bandwidth 6 Mbit/sec, propagation delays range 1 5 msec.
337

fiDi Caro & Dorigo

networks simulated zero link-fault node-fault probabilities, local
node buffers 1 Gbit capacity, data packets maximum time live (TTL) set 15
sec.

6.2 Trac patterns

Trac defined terms open sessions pairs different nodes. Trac patterns
show huge variety forms, depending characteristics session
distribution geographical temporal points view.
single session characterized number transmitted packets,
size inter-arrival time distributions. generally, priority, costs requested quality
service used completely characterize session.
Sessions network characterized inter-arrival time distribution
geographical distribution. latter controlled probability assigned
node selected session start end-point.
considered three basic patterns temporal distribution sessions,
three spatial distribution.
Temporal distributions:
Poisson (P): node Poisson process defined regulates arrival
new sessions, i.e., sessions inter-arrival times negative exponentially distributed.
Fixed (F): beginning simulation, node, fixed number oneto-all sessions set left constant remainder simulation.
Temporary (TMPHS): temporary, heavy load, trac condition generated turning
nodes act hot spots (see below).
Spatial distributions:
Uniform (U): assigned temporal characteristics session arrivals set identically network nodes.
Random (R): case, assigned temporal characteristics session arrivals
set random way network nodes.
Hot Spots (HS): nodes behave hot spots, concentrating high rate input/output trac. fixed number sessions opened hot spots
nodes.
General trac patterns obtained combining temporal spatial
characteristics. Therefore, example, trac means that, node, identical
Poisson process regulating arrival new sessions, RP case process
different node, UP-HS means Hot Spots trac model superimposed
trac.
Concerning shape bit stream generated session, consider two basic
types:
Constant Bit Rate (CBR): per-session bit rate maintained fixed. Examples
applications CBR streams voice signal telephone network,
converted stream bits constant rate 64 Kbit/sec, MPEG1
compression standard, converts video signal stream 1.5 Mbit/sec.
338

fiAntNet: Distributed Stigmergetic Control Communications Networks

Generic Variable Bit Rate (GVBR): per-session generated bit rate time varying.

term GVBR broad generalization VBR term normally used designate
bit stream variable bit rate known average characteristics
expected/admitted uctuations.13 Here, GVBR session generates packets whose
sizes inter-arrival times variable follow negative exponential distribution.
information characteristics never directly used routing
algorithms, IP-based networks.
values used experiments shape trac patterns \reasonable" values
session generations data packet production taking consideration current network
usage computing power. mean packet size distribution set 4096
bits experiments. Basic temporal spatial distributions chosen
representative wide class possible situations arbitrarily composed
generate meaningful subset real trac patterns.

6.3 Metrics performance evaluation

Depending type services delivered network associated costs,
many performance metrics could defined. focused standard metrics performance evaluation, considering sessions equal costs, benefits priority
without possibility requests special services real-time. framework,
measures interested are: throughput (correctly delivered bits/sec), delay distribution data packets (sec), network capacity usage (for data routing packets),
expressed sum used link capacities divided total available link capacity.

6.4 Routing algorithms parameters

algorithms used collection parameters set. Common parameters
routing packet size elaboration time. Settings parameters shown
table 1. parameters assigned values used previous simulation
Packet size (byte)
Packet elaboration time (msec)

AntNet OSPF & SPF
BF
Q-R & PQ-R
24 + 8Nh 64 + 8jNn j 24 + 12N
12
3
6
2
3

Table 1: Routing packets characteristics implemented algorithms (except
Daemon algorithm, generate routing packets). Nh incremental number hops made forward ant, jNn j number neighbors
node n, N number network nodes.
works (Alaettinoglu et al., 1992) and/or basis heuristic evaluations taking
13. knowledge characteristics incoming CBR VBR bit streams fundamental
importance networks able deliver Quality Service. basis knowledge
network accept/refuse session requests, and, case acceptance, allocate/reserve necessary
resources.

339

fiDi Caro & Dorigo

consideration information encoding schemes currently available computing power (e.g.,
size forward ants determined size BF packet plus 8 bytes
hop store information node address elapsed time). Concerning
main parameters, specific algorithm, AntNet competitors used
best settings could find literature and/or tried tune parameters
much possible obtain better results. OSPF, SPF, BF, length
time interval consecutive routing information broadcasts length time
window average link costs same, set 0.8 3 seconds, depending
experiment SPF BF, 30 seconds OSPF. Link costs inside window
assigned weighted sum arithmetic average window
exponential average decay factor equal 0.9. obtained values discretized
linear scale saturated 1 20, slope set 20 maximum admitted
variation equal 1. Q-R PQ-R transmission routing information totally
data-driven. learning adaptation rate used used
algorithm's authors (Boyan & Littman, 1994; Choi & Yeung, 1996).
Concerning AntNet, observed algorithm robust internal parameters
tuning. finely tune parameter set, used set values
different experiments ran. settings used previously given
text moment parameter discussed reported
section. ant generation interval node set 0.3 seconds. Section 7.4
shown robustness AntNet respect parameter. Regarding
parameters statistical model, value , weighting number samples
considered model (Equation 1), set 0.005, c factor expression
jWjmax (sect. 4.2) put equal 0.3, confidence level factor z (sect. 4.2)
equal 1.70, meaning confidence level approximately 0.95.

7. Results

Experiments reported section compare AntNet competing routing algorithms described Section 5. studied performance algorithms increasing
trac load, examining evolution network status toward saturation condition,
temporary saturation conditions.
low load conditions, algorithms tested similar performance.
case, considering huge variability possible trac patterns,
hard assess whether algorithm significantly better another not.
high, near saturation, loads, tested algorithms able deliver
offered throughput quite similar way, is, cases generated trac routed without big losses. contrary, study packet delay
distributions shows remarkable differences among different algorithms. present
simulation results regarding packet delays decided either report whole empirical distribution use 90-th percentile statistic, allows one compare
algorithms basis upper value delay able keep 90%
correctly delivered packets. fact, packet delays spread wide
range values. intrinsic characteristics data networks: packet delays
range low values sessions open adjacent nodes connected
340

fiAntNet: Distributed Stigmergetic Control Communications Networks

fast links, much higher values case sessions involving nodes far apart
connected many slow links. this, often empirical distribution
packet delays cannot meaningfully parametrized terms mean variance,
90-th percentile statistic, still better whole empirical distribution,
much meaningful.
saturation packet losses and/or packet delays become big,
cause network operations slow down. Therefore, saturation
temporary situation. not, structural changes network characteristics,
adding new faster connection lines, rather improvements routing
algorithm, order. reasons, studied responsiveness
algorithms trac loads causing temporary saturation.
reported data averaged 10 trials lasting 1000 virtual seconds simulation
time. One thousand seconds represents time interval long enough expire transients
get enough statistical data evaluate behavior routing algorithm.
fed data trac, algorithms given 500 preliminary simulation seconds
data trac build initial routing tables. way, algorithm builds routing
tables according \vision" minimum cost paths. Results throughput
reported average values without associated measure variance. inter-trial
variability fact always low, percent average value.
Parameter values trac characteristics given Figure captions
following meaning (see previous section): MSIA mean sessions inter-arrival
time distribution Poisson (P) case, MPIA stands mean packet interarrival time distribution. CBR case, MPIA indicates fixed packet production
rate. HS number hot-spots nodes MPIA-HS equivalent MPIA
hot-spot sessions. following, otherwise explicitly stated, shape
session bit streams assumed GVBR type.
Results throughput packet delays considered network topologies
described three following subsections. Results concerning network resources
utilization reported Section 7.4.

7.1 SimpleNet

Experiments SimpleNet designed study different algorithms manage
distribute load different possible paths. experiments, trac,
F-CBR type, directed node 1 node 6 (see Figure 5), trac load
set value higher capacity single link, cannot routed
eciently single path.
Results regarding throughput (Figure 8a) case strongly discriminate among
algorithms. type trac workload small number nodes determined
significant differences throughput. AntNet algorithm able deliver almost
generated data trac: throughput short transient phase approaches
closely level delivered Daemon algorithm. PQ-R attains steady value
approximately 15% inferior obtained AntNet. algorithms behave
poorly, stabilizing values 30% inferior provided AntNet.
341

fiDi Caro & Dorigo

case, rather clear AntNet algorithm able exploit best three
available paths (1-8-7-6, 1-3-5-6, 1-2-4-5-6) distribute data trac without inducing
counterproductive oscillations. utilization routing tables probabilistic way
data packets case plays fundamental role achieving higher quality results. Results throughput confirmed packet delays, reported
graph Figure 8b. differences empirical distributions packet delays ect
approximatively proportions evidenced throughput case.
14.0

1.0

13.5

Throughput (106 bit/sec)

12.5
12.0

0.8
Empirical Distribution

OSPF
SPF
BF
Q-R
PQ-R
AntNet
Daemon

13.0

11.5
11.0
10.5

0.6

0.4

OSPF
SPF
BF
Q-R
PQ-R
AntNet
Daemon

0.2

10.0
9.5

0.0
0

100

200

300

400

500

600

700

800

900

1000

Simulation Time (sec)

0

0.05

0.1

0.15

0.2

Packet Delay (sec)

(a)

(b)

Figure 8: SimpleNet: Comparison algorithms F-CBR trac directed node 1 node 6
(MPIA = 0.0003 sec). (a) Throughput, (b) packet delays empirical distribution.

7.2 NSFNET

carried wide range experiments NSFNET using UP, RP, UP-HS TMPHSUP trac patterns. cases considered, differences throughput minor
importance respect shown packet delays. one UP, RP
UP-HS cases ran five distinct groups ten trial experiments, gradually increasing
generated workload (in terms reducing session inter-arrival time). explained
above, studied behavior algorithms moving trac load towards
saturation region.
case, differences throughput (Figure 9a) small: best performing
algorithms BF SPF, attain performance 10% inferior
Daemon amount better AntNet, Q-R PQ-R,14
OSPF behaves slightly better last ones. Concerning delays (Figure 9b)
14. worth remarking experiments presented following, PQ-R's
performance slightly worse Q-R. seems contrast results presented
PQ-R's authors article introduced PQ-R (Choi & Yeung, 1996). think
behavior due fact (i) link recovery rate matches discrete-time system
simulator time continuous variable, (ii) experimental simulation conditions
rather different (in article specified way produced trac patterns
implement realistic network simulator).

342

fiAntNet: Distributed Stigmergetic Control Communications Networks

AntNet

2.4

OSPF

2.3

SPF

2.2

BF

2.1

Q-R

2

PQ-R

Daemon

4.5
4.0
3.5
3.0
2.5
2.0
1.5
1.0
0.5
0.0
AntNet

OSPF

2.4

SPF

2.3

(b)

2.2

BF

2.1

Q-R

2

PQ-R

Daemon

situation rather different, seen fact algorithms AntNet
able produce slightly higher throughput expenses much worse
results packet delays. trend packet delays confirmed experiments
ran. OSPF, Q-R PQ-R show really poor results (delays order 2 seconds
high values, even considering 90-th percentile distribution),
BF SPF behave similar way performance order 50% worse
obtained AntNet order 65% worse Daemon.
18
16
14
12

8

10

6
4
2
0

(a)

90-th percentile packet delays (sec)

343

RP case (Figure 10a), throughputs generated AntNet, SPF BF
similar, although AntNet slightly better performance. OSPF PQ-R behave
slightly worse Q-R worst algorithm. Daemon able obtain slightly
better results AntNet. Again, looking packet delays results (Figure 10b) OSPF,
Q-R PQ-R perform badly, SPF shows results bit better BF
order 40% worse AntNet. Daemon case far better,
indicates testbed dicult.
case UP-HS load, throughputs (Figure 11a) AntNet, SPF, BF, Q-R
Daemon similar, OSPF PQ-R clearly show much worse results.
(Figure 11b), packet delays results OSPF, Q-R PQ-R much worse
algorithms (they much worse fit scale chosen
make clear differences among algorithms). AntNet still best performing
algorithm. case, differences SPF order 20% 40% respect
BF. Daemon performs 50% better AntNet scales much better AntNet,
which, again, indicates testbed rather dicult.
last graph NSFNET shows algorithms behave case TMPHSUP situation (Figure 12). time = 400 four hot spots turned superimposed
existing light trac. transient kept 120 seconds. case,
one, typical, situation reported detail show answer curves. Reported values

Figure 9: NSFNET: Comparison algorithms increasing load trac. load
increased reducing MSIA value 2.4 2 seconds (MPIA = 0.005 sec). (a)
Throughput, (b) 90-th percentile packet delays empirical distribution.

Throughput (106 bit/sec)

fi12

10

8

6

4

2

0
AntNet

2.8

OSPF

2.7

SPF

(a)

2.6

BF

2.5

Q-R

2.4

Daemon

4.0
3.5
3.0
2.5
2.0
1.5
1.0
0.5
0.0
AntNet

Di Caro & Dorigo

PQ-R

90-th percentile packet delays (sec)

18
16
14
12
10
8
6
4
2
0
AntNet

OSPF

2.4

SPF

2.3

BF

2.2

Q-R

2.1

PQ-R

2

(a)

Daemon

344

0.5

0.4

0.3

0.2

0.1

0.0
AntNet

OSPF

2.8

SPF

2.7

OSPF

2.4

SPF

2.3

BF

2.6

(b)

(b)

2.2

BF

2.5

Q-R

2.1

Q-R

2.4

2

PQ-R

PQ-R

Daemon

Daemon

\instantaneous" values throughput packet delays computed average
5 seconds moving windows. algorithms similar good performance
far throughput concerned, except OSPF PQ-R, lose percent
packets transitory period. graph packet delays confirms previous
results: SPF BF similar behavior, 20% worse AntNet 45%
worse Daemon. three algorithms show big out-of-scale jump,
able properly dump sudden load increase.

Figure 11: NSFNET: Comparison algorithms increasing load UP-HS trac. load
increased reducing MSIA value 2.4 2.0 seconds (MPIA = 0.3 sec, HS = 4,
MPIA-HS = 0.04 sec). (a) Throughput, (b) 90-th percentile packet delays
empirical distribution.

90-th percentile packet delays (sec)

Figure 10: NSFNET: Comparison algorithms increasing load RP trac. load
increased reducing MSIA value 2.8 2.4 seconds (MPIA = 0.005 sec). (a)
Throughput, (b) 90-th percentile packet delays empirical distribution.

Throughput (106 bit/sec)
Throughput (106 bit/sec)

fiThroughput (106 bit/sec)

AntNet: Distributed Stigmergetic Control Communications Networks

16.0
14.0
12.0
10.0
8.0
6.0

Packet Delay (sec)

0.06
OSPF
SPF
BF
Q-R
PQ-R
AntNet
Daemon

0.05

0.04

0.03
200

300

400

500

600

700

800

900

1000

Simulation Time (sec)

Figure 12: NSFNET: Comparison algorithms transient saturation conditions
TMPHS-UP trac (MSIA = 3.0 sec, MPIA = 0.3 sec, HS = 4, MPIA-HS =
0.04). (a) Throughput, (b) packet delays averaged 5 seconds moving
windows.

7.3 NTTnet
set experiments run NSFNET repeated NTTnet.
case results even sharper obtained NSFNET: AntNet performance
much better competitors.
UP, RP UP-HS cases, differences throughput significant (Figures
13a, 14a 15a). algorithms, OSPF exception, practically behave
way Daemon algorithm. Concerning delays (Figures 13b, 14b 15b),
differences AntNet competitors one order magnitude.
AntNet keeps delays low values, close obtained Daemon, SPF,
BF, Q-R PQ-R perform poorly OSPF completely collapses.
RP cases (Figures 13b 14b) SPF BF performs similarly, even SPF
shows slightly better results, 50% better Q-R PQ-R.
UP-HS case, again, SPF BF show similar results, Q-R performs comparably much irregular way PQ-R keep delays 30% lower. OSPF,
worse algorithm case, shows interesting behavior. increase
generated data throughput determines decrease slow increase delivered
throughput delays decrease (Figure 15a 15b). case load high
algorithm balance two, con icting, objectives, throughput
345

fi45
40
35
30
25
20
15
10
5
0
AntNet

3.1

OSPF

3

SPF

BF

2.9

(a)

2.8

Q-R

2.7

Daemon

0.0

1.0

2.0

3.0

4.0

5.0

6.0

7.0

8.0

9.0

10.0

Di Caro & Dorigo

PQ-R

90-th percentile packet delays (sec)

45
40
35
30
25
20
15
10
5
0
AntNet

OSPF

3.1

SPF

3

BF

2.9

(a)

2.8

Q-R

2.7

PQ-R

Daemon

346

10.0
9.0
8.0
7.0
6.0
5.0
4.0
3.0
2.0
1.0
0.0

AntNet

AntNet

OSPF

3.1

SPF

3

2.9

(b)

OSPF

3.1

SPF

3

2.9

(b)

BF

BF

2.8

2.8

Q-R

Q-R

2.7

2.7

PQ-R

PQ-R

Daemon

Daemon

packet delays, showed inverse dynamics: lot packet losses made possible
surviving packets obtain lower trip delays.
TMPHS-UP experiment (Figure 16), concerning sudden load variation, confirms
previous results. OSPF able follow properly variation throughput
delays. algorithms able follow sudden increase offered
throughput, AntNet (and Daemon) show regular behavior. Differences
packet delays striking. AntNet performance close obtained Daemon
(the curves practically superimposed scale used Figure). Among
algorithms, SPF BF best ones, although response rather irregular and,
case, much worse AntNet's. OSPF Q-R out-of-scale show
delayed recovering curve. PQ-R, huge jump, takes graph out-of-scale

Figure 14: NTTnet: Comparison algorithms increasing load RP trac. load
increased reducing MSIA value 3.1 2.7 seconds (MPIA = 0.005 sec). (a)
Throughput, (b) 90-th percentile packet delays empirical distribution.

90-th percentile packet delays (sec)

Figure 13: NTTnet: Comparison algorithms increasing load trac. load
increased reducing MSIA value 3.1 2.7 seconds (MPIA = 0.005 sec). (a)
Throughput, (b) 90-th percentile packet delays empirical distribution.

Throughput (106 bit/sec)
Throughput (106 bit/sec)

fiAntNet: Distributed Stigmergetic Control Communications Networks

4

3.9

3.8

3.7

90-th percentile packet delays (sec)

4.1
50

Throughput (106 bit/sec)

45
40
35
30
25
20
15
10
5
0
AntNet

OSPF

SPF

BF

Q-R

PQ-R

Daemon

4.1

4

3.9

3.8

3.7

7.0
6.0
5.0
4.0
3.0
2.0
1.0
0.0
AntNet

OSPF

(a)

SPF

BF

Q-R

PQ-R

Daemon

(b)

Figure 15: NTTnet: Comparison algorithms increasing load UP-HS trac. load

increased reducing MSIA value 4.1 3.7 seconds (MPIA = 0.3 sec, HS = 4,
MPIA-HS = 0.05 sec). (a) Throughput, (b) 90-th percentile packet delays
empirical distribution.

Throughput (106 bit/sec)

first 40 seconds hot spots turned on, shows trend approaching BF
SPF.
55.0
45.0
35.0
25.0
15.0

Packet Delay (sec)

0.8
OSPF
SPF
BF
Q-R
PQ-R
AntNet
Daemon

0.6
0.4
0.2
0.0
200

300

400

500

600

700

800

900

1000

Simulation Time (sec)

Figure 16: NTTnet: Comparison algorithms transient saturation conditions
TMPHS-UP trac (MSIA = 4.0 sec, MPIA = 0.3 sec, HS = 4, MPIA-HS =
0.05). (a) Throughput, (b) packet delays averaged 5 seconds moving
windows.
347

fiDi Caro & Dorigo

7.4 Routing Overhead

Table 2 reports results concerning overhead generated routing packets.
algorithm network load generated routing packets reported ratio
bandwidth occupied routing packets total available network bandwidth.
row table refers previously discussed experiment (Figs. 8 11 13
15). Routing overhead computed experiment heaviest load
increasing load series.
SimpleNet - F-CBR
NSFNET -
NSFNET - RP
NSFNET - UP-HS
NTTnet -
NTTnet - RP
NTTnet - UP-HS

AntNet OSPF SPF BF Q-R PQ-R
0.33
0.01 0.10 0.07 1.49 2.01
2.39
0.15 0.86 1.17 6.96 9.93
2.60
0.15 1.07 1.17 5.26 7.74
1.63
0.15 1.14 1.17 7.66 8.46
2.85
0.14 3.68 1.39 3.72 6.77
4.41
0.14 3.02 1.18 3.36 6.37
3.81
0.14 4.56 1.39 3.09 4.81

Table 2: Routing Overhead: ratio bandwidth occupied routing packets
total available network bandwidth. data scaled factor 10,3 .
data scaled factor 10,3 . data table show routing
overhead negligible algorithms respect available bandwidth. Among
adaptive algorithms, BF shows lowest overhead, closely followed SPF. AntNet
generates slightly bigger consumption network resources, widely compensated
much higher performance provides. Q-R PQ-R produce overhead bit
higher AntNet. routing load caused different algorithms function
many factors, specific algorithm. Q-R PQ-R data-driven algorithms:
number data packets and/or length followed paths (because topology
bad routing) grows, number generated routing packets. BF, SPF
OSPF predictable behavior: generated overhead mainly function
topological properties network generation rate routing information
packets. AntNet produces routing overhead depending ants generation rate
length paths travel.
ant trac roughly characterized collection additional trac sources,
one network node, producing small packets (and related acknowledgement
packets) constant bit rate destinations matching offered data trac. average
ants travel rather \short" paths size grow 8 bytes hop.
Therefore, \ant routing trac source" represents light additional trac source
respect network resources ant launching rate excessively high.
Figure 17, sensitivity AntNet respect ant launching rate reported.
sample case data trac model NSFNET (previously studied Figure
9) interval g two consecutive ant generations progressively decreased (g
nodes). g values sampled constant intervals logarithmic
scale ranging 0.006 25 seconds. lower, dashed, curve interpolates
348

fiAntNet: Distributed Stigmergetic Control Communications Networks

AntNet Normalized Power Vs. Routing Overhead

1.0

0.8
Normalized Power
Routing Overhead
0.6

0.4

0.2

0.0
0.001

0.01

0.1

1

10

100

Interval g Two Consecutive Ants Generations (sec)

Figure 17: AntNet normalized power vs. routing overhead. Power defined ratio
delivered throughput packet delay.
generated routing overhead expressed, before, fraction available network
bandwidth used routing packets. upper, solid, curve plots data obtained
power normalized highest value, power defined ratio
delivered throughput packet delay. value used delivered throughput
throughput value time 1000 averaged ten trials, packet delay used
90-th percentile empirical distribution.
figure, see excessively small g causes excessive growth
routing overhead, consequent reduction algorithm power. Similarly, g
big, power slowly diminishes tends toward plateau number
ants enough generate maintain up-to-date statistics network status.
middle two extreme regions wide range g intervals gives raise similar,
good power values, while, time, routing overhead quickly falls
toward negligible values. figure strongly confirms previous assertion
robustness AntNet's internal parameter settings.

8. Discussion
AntNet, continual on-line construction routing tables emergent result
collective learning process. fact, forward-backward agent pair complex
enough find good route adapt routing tables single source-destination
path, cannot solve global routing optimization problem. interaction
agents determines emergence global effective behavior
network performance point view. Ants cooperate problem-solving activity
communicating indirect non-coordinated way. agent acts independently.
Good routes discovered applying policy function information
349

fiDi Caro & Dorigo

accessed network nodes visited, information collected route
eventually released nodes. Therefore, inter-agent communication
mediated explicit implicit way \environment", is, node's data
structures trac patterns recursively generated data packets' utilization
routing tables. communication paradigm, called stigmergy, matches well
intrinsically distributed nature routing problem. Cooperation among agents goes
two levels: (a) modifications routing tables, (b) modifications
local models determine way ants' performance evaluated. Modifications
routing tables directly affect routing decisions following ants towards
destination, well routing data, which, turn, uences rate arrival
ants towards destination. interesting remark used stigmergy
paradigm makes AntNet's mobile agents exible software engineering point
view. perspective, interface node's data structure defined,
internal policy agents transparently updated. Also, agents could
exploited carry multiple concurrent tasks (e.g., collecting information distributed
network management using SNMP-like protocol Web data-mining tasks).
shown previous section, results obtained stigmergetic
model computation excellent. terms throughput average delay, AntNet
performs better classical recently proposed routing algorithms wide
range experimental conditions. Although interesting per se, following
try justify AntNet superior performance highlighting characteristics
comparing competing algorithms. focus following
main aspects:

AntNet seen particular instance parallel Monte Carlo simulation






system biased exploration. algorithms either explore
net exploration local tightly connected ux data packets.
information AntNet maintains node complete organized
less critical way managed algorithms.
AntNet propagate local estimates nodes, competitors
do. mechanism makes algorithm robust locally wrong estimates.
AntNet uses probabilistic routing tables, triple positive effect better redistributing data trac alternative routes, providing ants built-in
exploration mechanism allowing exploitation ants' arrival rate
assign cumulative reinforcements.
experimentally observed AntNet much robust competitors
frequency routing tables updated.
structure AntNet allows one draw parallels well-known
reinforcement learning (RL) algorithms. characteristics routing problem,
seen distributed time-varying RL problem (see sect. 2.2), determines
departure AntNet structure classical RL algorithms.

aspects AntNet discussed detail following.
350

fiAntNet: Distributed Stigmergetic Control Communications Networks

8.1 AntNet on-line Monte Carlo system biased exploration
AntNet routing system seen collection mobile agents collecting data
network status concurrently performing on-line Monte Carlo simulations (Rubistein, 1981; Streltsov & Vakili, 1996). Monte Carlo methods, repeated experiments
stochastic transition components run collect data statistics interest. Similarly, AntNet ants explore network performing random experiments
(i.e., building paths source destination nodes using stochastic policy dependent
past current network states), collect on-line information network
status. built-in variance reduction effect determined (i) way ants' destinations
assigned, biased frequently observed data's destinations, (ii) way
ants' policy makes use current past trac information (that is, inspection
local queues' status probabilistic routing tables). way, explored paths match
interesting paths data trac point view, results ecient
variance reduction effect stochastic sampling paths. Differently usual
off-line Monte Carlo systems, AntNet state space sampling performed on-line,
is, sampling statistics controlling non-stationary trac process
performed concurrently.
way exploring network concurrently data trac different
happens algorithms where, either exploration (OSPF,
SPF BF), exploration tightly coupled data trac local nature
(Q-R PQ-R). Conveniently, shown Section 7.4, extra trac generated
exploring ants negligible wide range values, allowing good performance.

8.2 Information management network node
Key characteristics routing algorithms type information used build/update
routing tables way information propagated. algorithms (except
static OSPF) make use node two main components: local model
cost measures routing table . SPF BF use estimate smoothed averages
local link costs, is, distances neighbor nodes. case,
local model maintaining estimates local components. Q-R local model
fictitious raw transition time directly used value update . PQ-R
uses slightly sophisticated model respect Q-R, storing measure
link utilization. algorithms propagate part local information
nodes, which, turn, make use update routing tables build global
view network. SPF BF content updated, regular intervals,
\memoryless strategy": new entries depend old values,
discarded. Therefore, whole adaptive component routing system represented
model M. Otherwise, Q-R PQ-R adaptive content almost
negligible adaptive component algorithm represented smoothed
average carried Q-learning-like rule. AntNet shows characteristics rather different
competitors: model contains memory-based local perspective global
status network. content allow reinforcements weighted
basis rich statistical description network dynamics seen local node.
reinforcements used update routing table, adaptive component
351

fiDi Caro & Dorigo

maintained node. updates carried asynchronous way
function previous values. Moreover, used straightforward probabilistic
way data packets, traveling ants select next node using , is,
adaptive representation past policy, model current local link queues,
is, instantaneous representation node status. evident AntNet builds
uses information competitors: two different memory-based components
instantaneous predictor used combined different levels. Moreover,
way AntNet robustly redistributes among completely local components criticality
estimates decisions.

8.3 AntNet's robustness wrong estimates

remarked above, AntNet, differently competitors, propagate local
estimates nodes. node routing table updated independently, using
local information ants' experienced trip time. Moreover, (i) ant experiment
affects one entry routing table visited nodes, one relative ant's
destination, and, (ii) local information built \global" information collected
traveling ants, implicitly reducing way variance estimates.
characteristics make AntNet particularly robust wrong estimates. contrary,
algorithms locally wrong estimate propagated nodes
used compute estimates many different destinations. bad
algorithm performance depends long wrong estimate effect lasts. particular,
function time window estimates computed SPF
BF, learning parameters Q-R PQ-R.

8.4 AntNet's probabilistic use routing tables route data packets

tested algorithms AntNet use deterministic routing tables.15 algorithms,
entries routing tables contain distance/time estimates destinations.
estimates provide misleading information algorithm fast enough follow
trac uctuations, case heavy load conditions. Instead, AntNet
routing tables probabilistic entries that, although ecting goodness particular
path choice respect others available, force data packets choose
perceived best path. positive effect allowing better balancing
trac load different paths, resulting better utilization resources (as
shown particular experiments SimpleNet). remarked
end Section 4.1, intrinsic probabilistic structure routing tables way
updated allow AntNet exploit ant's arrival rate way assign implicit
(cumulative) reinforcements discovered paths. obvious effect
could obtained using routing tables containing distance/time estimates using
estimates probabilistic way. fact, case new trip time sample would
15. Singh, Jaakkola, Jordan (1994) showed stochastic policies yield higher performance
deterministic policies case incomplete access state information environment.
(Jaakkola, Singh, & Jordan, 1995), authors developed Monte-Carlo-based stochastic policy
evaluation algorithm, confirming usefulness Monte-Carlo approach, used AntNet too,
deal incomplete information problems.

352

fiAntNet: Distributed Stigmergetic Control Communications Networks

modify statistical estimate would simply oscillate around expected value without
inducing arrival-dependent cumulative effect.
Probabilistic routing tables provide remarkable additional benefits: (a) give
ants built-in exploration method discovering new, possibly better, paths, (b)
since ants data routing independent AntNet, exploration new routes
continue while, time, data packets exploit previously learned, reliable
information. interesting note use probabilistic routing tables whose entries
learned adaptive way changing positive feedback ignoring negative
feedback, reminiscent older automata approaches routing telecommunications
networks. approaches, learning automaton usually placed network
node. automaton defined set possible actions vector associated
probabilities, continuous set inputs learning algorithm learn input-output
associations. Automata connected feedback configuration environment
(the whole network), set penalty signals environment actions
defined. Routing choices modifications learning strategy carried
probabilistic way according network conditions (see example (Nedzelnitsky
& Narendra, 1987; Narendra & Thathachar, 1980)). main difference lies fact
AntNet ants part environment itself, actively direct
learning process towards interesting regions search space. is,
whole environment plays key, active role learning good state-action pairs.

8.5 AntNet robustness routing table update frequency

BF SPF broadcast frequency routing information plays critical role, particularly BF, local representation network status. frequency
unfortunately problem dependent, easy way make adaptive, while,
time, avoiding large oscillations. Q-R PQ-R, routing tables updating
data driven: Q-values belonging pairs (i; j ) neighbor nodes visited
packets updated. Although reasonable strategy given exploration
new routes could cause undesired delays data packets, causes delays discovering new
good routes, great handicap domain good routes could change
time. OSPF, routing tables updated, set static link costs
basis physical characteristics. lack adaptive metric main reason
poor performance OSPF (as remarked Section 5, slightly penalized OSPF
respect real implementations, additional heuristic knowledge trac
patterns used network administrators set link costs). AntNet, experimentally
observed robustness changes ants' generation rate: wide range generation rates, rather independent network size, algorithm performance good
routing overhead negligible (see Section 7.4).

8.6 AntNet reinforcement learning

characteristics routing problem allow one interpret distributed, stochastic time-varying RL problem. fact, well structure AntNet, make natural
draw parallels AntNet classical RL approaches. worth remarking
RL problems studied, algorithms de353

fiDi Caro & Dorigo

veloped, problems where, unlike routing, assumptions Markovianity stationarity
process considered satisfied. characteristics adaptive routing problem
make dicult well suited solved usual RL algorithms. fact,
explain below, determines departure AntNet classical RL algorithms.
first way relate structure AntNet (general) RL algorithm
connected way outcomes experiments, trip times Tk!d , processed.
transformation raw values Tk!d refined reinforcements r
reminiscent happens Actor-Critic systems (Barto, Sutton, & Anderson, 1983):
raw reinforcement signal processed critic module, learning model (the
node's component M) underlying process, fed learning system (the
routing table ) transformed evaluation policy followed ants.
case, critic adaptive, take account variability trac process,
rather simple, meet computational requirements.
Another way seeing AntNet classical RL system related interpretation
parallel replicated Monte Carlo (MC) system. shown Singh Sutton (1996),
first-visit MC (only first visit state used estimate value trial)
simulation system equivalent batch temporal difference (TD) method replacing
traces decay parameter =1. Although AntNet first-visit MC simulation system,
important differences type MC used Singh Sutton (and
RL works), mainly due differences considered class problems.
AntNet, outcomes experiments used update local models able capture
variability whole network status (only partially observable) generate
sequence stochastic policies. contrary, MC system considered Singh
Sutton, outcomes experiments used compute (reduced) maximum-likelihood
estimates expected mean variance states' returns (i.e., total reward
following visit state) Markov chain. spite differences, weak parallel
TD() methods rather interesting, allows highlight important difference
AntNet competitors (and general TD methods): AntNet, following
generation stochastic transition chain forward ant, back-chaining
information one state (i.e., triple fcurrent node, destination node, next hop
nodeg) predecessors. state rewarded basis ant's trip time
information strictly relevant it. approach completely different followed
(TD methods) Q-R, PQ-R, BF and, different perspective, SPF. fact,
algorithms build distance estimates node using predictions made
nodes. particular, Q-R PQ-R, propagate estimation information one
step back, precisely distributed versions TD(0) class algorithms. could
transformed generic TD(), 0 < 1, transmitting backward previously
visited nodes information collected routing packet generated data hop.
course, would greatly increase routing trac generated,
done hop data packet, making approach least costly, feasible
all.
general, using temporal differences methods context routing presents important problem: key condition method, self-consistency estimates
successive states16 may strictly satisfied general case. due
16. instance, prediction made node k time to-go destination node

354

fiAntNet: Distributed Stigmergetic Control Communications Networks

fact (i) dynamics node related highly non-linear way dynamics neighbors, (ii) trac process evolves concurrently nodes,
(iii) recursive interaction trac patterns control actions
(that is, modifications routing tables). aspect explain part poor
performance pure TD(0) algorithms Q-R PQ-R.

9. Related Work
Algorithms based ant colony metaphor inspired ant colony foraging
behavior (Beckers et al., 1992). first proposed Dorigo (1992), Colorni et
al. (1991) Dorigo et al. (1991, 1996) applied traveling salesman
problem (TSP). Apart natural metaphor, idea behind first application
similar one presented paper: set agents repeatedly run Monte
Carlo experiments whose outcomes used change estimates variables used
subsequent ants build solutions. ant-cycle, one first ant-based algorithms,
value called \pheromone trail" associated edge graph representing
TSP. ant builds tour exploiting pheromone trail information follows.
node ant chooses next node j move among visited yet
probability Pij function amount pheromone trail edge
connecting j (as well local heuristic function; interested reader find
detailed description ant-cycle elsewhere (Dorigo, 1992; Dorigo et al., 1996)). value
pheromone trails updated ants built tours. ant adds
visited edges quantity pheromone trail proportional quality tour
generated (the shorter tour, higher quantity pheromone trail added).
effect similar AntNet's increase routing tables probabilities, since higher
pheromone trail particular edge increase probability chosen
future. obviously many differences ant-cycle AntNet, mostly due
different types problems applied, combinatorial
optimization problem versus distributed, stochastic, time varying, real-time problem.
Though majority previous applications ant colony inspired algorithms concern combinatorial optimization problems, recent applications routing.
Schoonderwoerd et al. (1996, 1997) first consider routing possible application domain ant colony algorithms. ant-based control (ABC) approach,
applied routing telephone networks, differs AntNet many respects. main
differences direct consequence different network model considered,
following characteristics (see Figure 18): (i) connection links potentially carry
infinite number full-duplex, fixed bandwidth channels, (ii) transmission nodes
crossbar switches limited connectivity (that is, necessity queue management nodes). model, bottlenecks put nodes, congestion
degree network expressed terms connections still available switch.
result, network cost-symmetric: congestion status available paths
completely bi-directional. path n0 ; n1 ; n2 ; : : : ; nk connecting n0 nk exhibit
additively related prediction destination one k's neighbors,
neighbor one ways go d.

355

fiDi Caro & Dorigo

level congestion directions congestion depends state
nodes path. Moreover, dealing telephone networks, call occupies
exactly one physical channel across path.
Therefore, \calls" multiplexed
Link 1
links, accepted refused, depending possibility reserving physical
N bidirectional channels
circuit connecting caller receiver.
Link 2
modeling assumptions make probLink 4
lem Schoonderwoerd et al. different
cost-asymmetric routing problem data
networks presented paper. difn << N possible connections
ference ected many algorithmic differences ABC AntNet, imFigure 18: Network node portant ABC ants update
telecommunications network pheromone trails step, without waiting
model Schoonderwoerd et completion experiment done
AntNet. choice, reminiscent
al. (1996).
pheromone trail updating strategy implemented
ant-density, another first ant colony based algorithms (Dorigo et al., 1991; Dorigo,
1992; Colorni et al., 1991), makes ABC behavior closer real ants', made possible
cost-symmetry assumption made authors.
differences ABC use local models score ants trip times,
local heuristic information ant-private memory improve ants decision policies.
Also, recover cycles use information contained
ant sub-paths.
different network model used many implementation details
tightly bound network model, impossible us re-implement compare
ABC algorithm AntNet.
Subramanian, Druschel, Chen (1997) proposed ant-based algorithm
packet-switched nets. algorithm straightforward extension Schoonderwoerd
et al. system adding so-called uniform ants, additional exploration mechanism
avoid rapid sub-optimal convergence algorithm. limitation Subramanian
et al. work that, although algorithm propose based cost-symmetry
hypothesis ABC, apply packet-switched networks requirement
often met.
Link 3

10. Conclusions Future Work
paper, introduced AntNet, novel distributed approach routing packetswitched communications networks. compared AntNet 6 state-of-the-art routing
algorithms variety realistic testbeds. AntNet showed superior performance
robustness internal parameter settings almost experiments. AntNet's
innovative aspect use stigmergetic communication coordinate actions
set agents cooperate build adaptive routing tables. Although
first application stigmergy-related concepts optimization problems (e.g., Dorigo et al.,
356

fiAntNet: Distributed Stigmergetic Control Communications Networks

1991; Dorigo, 1992; Dorigo et al., 1996; Bonabeau, Dorigo, & Theraulaz, 1999), application presented unique many respects. First, AntNet, stigmergy-based control
coupled model-building activity: information collected ants used
modify routing tables, build local models network status used
better direct routing table modifications. Second, first attempt evaluate
stigmergy-based control realistic simulator communications networks: used simulator retains many basic components real routing system. interesting step
forward, direction testing applicability idea presented real networks,
would rerun experiments presented using complete Internet simulator.
Third, first attempt evaluate stigmergy-based control comparing
stigmergetic algorithm state-of-the-art algorithms realistic set benchmark problems. promising AntNet turned best performing
tested conditions.
obviously number directions current work could extended,
listed below.
1) first, natural, extension current work would consider inclusion
simulator ow congestion control components (with re-transmissions error management). inclusion require paired tuning routing ow-congestion
components, select best matching dynamics.
2) AntNet, forward ant makes random experiment: builds path
source node destination node d. path built exploiting information contained
probabilistic routing tables status queues visited nodes.
building path, ant collects information status network. done
sharing link queues data packets, measuring waiting times queues
traversal times used raw reinforcements backward ants. Since forward
ants share queues data packets, time required run experiment depends
network load, approximately time Ts!d required packet
go source node destination node d. delays moment
information collected forward ants distributed backward ants, makes
less up-to-date could be. possible improvement schema would
add model link-queue depletion nodes, let forward ants use high priority
queues reach destinations without storing crossing times (for first step
direction see Di Caro & Dorigo, 1998). Backward ants would make path,
opposite direction, forward ants, use queue local models find
way estimate local \virtual" queueing crossing times. Raw reinforcements, used
update routing tables, computed using estimates. Clearly,
trade-off delayed real information recent estimated information.
interesting see scheme works better, although confident
local queue models allow backward ants build estimates accurate enough
make improved system effective current AntNet, cost little
increase computational complexity nodes.
3) discussed Section 8, AntNet missing one main components classical
RL/TD algorithms: back-chaining information state previous ones,
node policy learned using complete local perspective. obvious extension
work would therefore study versions AntNet closer TD() algorithms.
357

fiDi Caro & Dorigo

case node maintain Q-values expressing estimate distance
destination via neighbor. estimates updated using
ant trip time outcome estimates coming successive nodes (closer
destination node) could carried backward ant.
4) paper applied AntNet routing datagram communications networks.
reasonable think AntNet could easily adapted used generation
real-time car route guidance Dynamic Trac Assignment (DTA) systems (see example
Yang, 1997). DTA systems exploit currently available emerging computer, communication, vehicle sensing technologies monitor, manage control transportation
system (the attention focused mainly highway systems) provide various
levels information advice system users make timely informed
travel decisions. Therefore, adaptive routing vehicle trac presents similar features
routing data packets communications networks. Moreover, vehicle trac control
systems interesting property simplified \transport" layer. fact, many
activities interfere routing implemented transport layer
communications networks exist, exist limited extent, vehicles trac
control algorithms. example, typical transport layer activities data acknowledgement retransmission cannot implemented real vehicles. activities,
ow control, strong constraints (e.g., people would happy forbidden
leave oces for, say, one hour grounds already many cars
streets!). makes AntNet still interesting since express full potential
routing algorithm.
5) AntNet, whenever ant uses link desirability (probability) incremented.
Although strategy, finds roots ant colony biological metaphor
inspired work, allowed us obtain excellent results, would interesting investigate
use negative reinforcements, even potentially lead stability problems,
observed people working older automata systems. discussed before, AntNet differs
automata systems active role played ants. Therefore, use
negative reinforcements could show effective, example, reducing
probability choosing given link ant used performed badly.

Acknowledgements
work supported Madame Curie Fellowship awarded Gianni Di Caro (CECTMR Contract N. ERBFMBICT 961153). Marco Dorigo Research Associate
FNRS. gratefully acknowledge help received Tony Bagnall, Nick Bradshaw
George Smith, proofread commented earlier draft paper, well
many useful comments provided three anonymous referees Craig Boutilier,
associate editor managed review process.

Appendix A. Optimal Shortest Path Routing
appendix, characteristics two used routing paradigms, optimal
shortest path routing (introduced Section 2.1) summarized:
358

fiAntNet: Distributed Stigmergetic Control Communications Networks

A.1 Optimal routing
Optimal routing (Bertsekas & Gallager, 1992) network-wide perspective objective optimize function individual link ows.
Optimal routing models called ow models try optimize total
mean ow network. characterized multicommodity ow problems,
commodities trac ows sources destinations,
cost optimized function ows, subject constraints ow conservation node positive ow every link. worth observing ow
conservation constraint explicitly stated trac arrival rate known.
routing policy consists splitting source-target trac pair strategic points,
shifting trac gradually among alternative routes. often results use
multiple paths trac ow origin-destination pair.
Implicit optimal routing assumption main statistical characteristics
trac known time-varying. Therefore, optimal routing used static
centralized/decentralized routing. evident kind solution suffers
problems static routers.

A.2 Shortest path routing
Shortest path routing (Wang & Crowcroft, 1992) source-destination pair perspective.
opposed optimal routing, global cost function optimized. Instead,
route node pair considered priori knowledge
trac process required (although course knowledge could fruitfully used).
costs assigned dynamic way, based statistical measures link congestion
state, strong feedback effect introduced routing policies trac
patterns. lead undesirable oscillations, theoretically predicted
observed practice (Bertsekas & Gallager, 1992; Wang & Crowcroft, 1992).
popular cost metrics take account queuing transmission delays, link usage, link
capacity various combination measures. way costs updated usually
involves attempting reduce big variations considering long-term short-term
statistics link congestion states (Khanna & Zinky, 1989; Shankar, Alaettinoglu, DussaZieger, & Matta, 1992b).
hand, costs static, ect measure
expected/wished trac load links transmission capacity. course,
serious loss eciency could arise case non-stationary conditions priori
assumptions trac patterns strongly violated practice.
Considering different content stored routing table, shortest path algorithms
subdivided two classes called distance-vector link-state (Steenstrup, 1995;
Shankar et al., 1992b). common behavior shortest path algorithms
depicted follows.
1. node assigns cost outgoing links. cost static
dynamic. latter case, updated presence link failure basis
observed link-trac statistics averaged defined time-window.
359

fiDi Caro & Dorigo

2. Periodically without required inter-node synchronization, node sends
neighbors packet information describing current estimates
quantities (link costs, distance nodes, etc.).
3. node, upon receiving information packet, updates local routing table
executes class-specific actions.
4. Routing decisions made deterministic way, choosing best path indicated
information stored routing table, adopting exible strategy
uses information stored table choose randomized
alternative path.
following, main features specific class described.

A.2.1 Distance-vector
Distance-vector algorithms make use routing tables consisting set triples
form (Destination, Estimated Distance, Next Hop), defined destinations
network neighbor nodes considered switch.17 case, required
topological information represented list reachable nodes identifiers.
average per node memory occupation order O(Nn), N number nodes
network n average connectivity degree (i.e., average number neighbor
nodes considered nodes).
algorithm works iterative, asynchronous distributed way. information
every node sends neighbors list last estimates distances
nodes network. receiving information neighbor
node j , receiving node updates table distance estimates overwriting entry
corresponding node j received values.
Routing decisions node made choosing next hop node one satisfying
relationship:
arg min fdij + Dj g
j 2N


dij assigned cost link connecting node neighbor j Dj
estimated shortest distance node j destination.
shown process converges finite time shortest paths
respect used metric link cost changes given time (Bertsekas & Gallager,
1992).
brie described algorithm known literature distributed
Bellman-Ford (Bellman, 1958; Ford & Fulkerson, 1962; Bertsekas & Gallager, 1992)
based principles dynamic programming (Bellman, 1957; Bertsekas, 1995).
prototype ancestor wider class distance-vector algorithms (Malkin
& Steenstrup, 1995) developed aim reducing risk circular loops
accelerating convergence case rapid changes link costs.
17. cases, best estimates kept nodes. Therefore, triples defined
destinations only.

360

fiAntNet: Distributed Stigmergetic Control Communications Networks

A.2.2 Link-state

Link-state algorithms make use routing tables containing much information
used vector-distance algorithms. fact, core link-state algorithms
distributed replicated database. database essentially dynamic map whole
network, describing details components current interconnections.
Using database input, node calculates best paths using appropriate
algorithm Dijkstra's (1959) algorithm (a wide variety alternative ecient algorithms
available, described example Cherkassky, Goldberg, & Radzik, 1994).
memory requirements node case O(N 2 ).
common form link-state algorithm, node acts autonomously, broadcasting information link costs states computing shortest paths
destinations basis local link costs estimates estimates
received nodes. routing information packet broadcast neighbor
nodes turn send packet neighbors on. distributed ooding
mechanism (Bertsekas & Gallager, 1992) supervises information transmission trying
minimize number re-transmissions.
case vector-distance, described algorithm general template
variety different versions implemented make algorithm behavior
robust ecient (Moy, 1998).

References

Alaettinoglu, C., Shankar, A. U., Dussa-Zieger, K., & Matta, I. (1992). Design implementation MaRS: routing testbed. Tech. rep. UMIACS-TR-92-103, CS-TR-2964,
Institute Advanced Computer Studies Department Computer Science, University Maryland, College Park (MD).
Barto, A. G., Sutton, R. S., & Anderson, C. W. (1983). Neuronlike adaptive elements
solve dicult learning control problems. IEEE Transaction Systems, Man
Cybernetics, SMC-13, 834{846.
Beckers, R., Deneubourg, J. L., & Goss, S. (1992). Trails U-turns selection
shortest path ant Lasius Niger. Journal Theoretical Biology, 159, 397{415.
Bellman, R. (1957). Dynamic Programming. Princeton University Press.
Bellman, R. (1958). routing problem. Quarterly Applied Mathematics, 16 (1), 87{90.
Bertsekas, D. (1995). Dynamic Programming Optimal Control. Athena Scientific.
Bertsekas, D., & Gallager, R. (1992). Data Networks. Prentice-Hall.
Bertsekas, D., & Tsitsiklis, J. (1996). Neuro-Dynamic Programming. Athena Scientific.
Bolding, K., Fulgham, M. L., & Snyder, L. (1994). case chaotic adaptive routing.
Tech. rep. CSE-94-02-04, Department Computer Science, University Washington,
Seattle.
361

fiDi Caro & Dorigo

Bonabeau, E., Dorigo, M., & Theraulaz, G. (1999). Natural Artificial Swarm
Intelligence. Oxford University Press.
Boyan, J., & Littman, M. (1994). Packet routing dinamically changing networks: reinforcement learning approach. Advances Neural Information Processing Systems
6 (NIPS6), pp. 671{678. San Francisco, CA:Morgan Kaufmann.
Brakmo, L. S., O'Malley, S. W., & Peterson, L. L. (1994). TCP vegas: New techniques
congestion detection avoidance. ACM Computer Communication Review (SIGCOMM'94), 24 (4).
Cheng, C., Riley, R., Kumar, S. P. R., & Garcia-Luna-Aceves, J. J. (1989). loop-free
extended bellman-ford routing protocol without bouncing effect. ACM Computer
Communication Review (SIGCOMM '89), 18 (4), 224{236.
Cherkassky, B. V., Goldberg, A. V., & Radzik, T. (1994). Shortest paths algorithms: Theory
experimental evaluation. Sleator, D. D. (Ed.), Proceedings 5th Annual
ACM-SIAM Symposium Discrete Algorithms (SODA 94), pp. 516{525 Arlington,
VA. ACM Press.
Choi, S., & Yeung, D.-Y. (1996). Predictive Q-routing: memory-based reinforcement
learning approach adaptive trac control. Advances Neural Information
Processing Systems 8 (NIPS8), pp. 945{951. MIT Press.
Colorni, A., Dorigo, M., & Maniezzo, V. (1991). Distributed optimization ant colonies.
Proceedings European Conference Artificial Life (ECAL 91), pp. 134{142.
Elsevier.
Costa, D., & Hertz, A. (1997). Ants colour graphs. Journal Operational Research
Society, 48, 295{305.
Crawley, E., Nair, R., Rajagopalan, B., & Sandick, H. (1996). framework QoS-based
routing internet. Internet Draft (expired September, 1997) draft-ietf-qosrframework-00, Internet Engineering Task Force (IEFT).
Danzig, P. B., Liu, Z., & Yan, L. (1994). evaluation TCP Vegas live emulation.
Tech. rep. UCS-CS-94-588, Computer Science Department, University Southern
California, Los Angeles.
Di Caro, G., & Dorigo, M. (1998). Two ant colony algorithms best-effort routing
datagram networks. Proceedings Tenth IASTED International Conference Parallel Distributed Computing Systems (PDCS'98), pp. 541{546.
IASTED/ACTA Press.
Dijkstra, E. W. (1959). note two problems connection graphs. Numer. Math.,
1, 269{271.
Dorigo, M. (1992). Optimization, Learning Natural Algorithms (in Italian). Ph.D.
thesis, Dipartimento di Elettronica e Informazione, Politecnico di Milano, IT.
362

fiAntNet: Distributed Stigmergetic Control Communications Networks

Dorigo, M., Di Caro, G., & Gambardella, L. M. (1998). Ant algorithms distributed
discrete optimization. Tech. rep. 98-10, IRIDIA, Universite Libre de Bruxelles. Submitted Artificial Life.
Dorigo, M., & Gambardella, L. M. (1997). Ant colony system: cooperative learning
approach traveling salesman problem. IEEE Transactions Evolutionary
Computation, 1 (1), 53{66.
Dorigo, M., Maniezzo, V., & Colorni, A. (1991). Positive feedback search strategy.
Tech. rep. 91-016, Dipartimento di Elettronica, Politecnico di Milano, IT.
Dorigo, M., Maniezzo, V., & Colorni, A. (1996). ant system: Optimization colony
cooperating agents. IEEE Transactions Systems, Man, Cybernetics{Part
B, 26 (1), 29{41.
Ford, L., & Fulkerson, D. (1962). Flows Networks. Prentice-Hall.
Goss, S., Aron, S., Deneubourg, J. L., & Pasteels, J. M. (1989). Self-organized shortcuts
Argentine ant. Naturwissenschaften, 76, 579{581.
Grasse, P. P. (1959). La reconstruction du nid et les coordinations interindividuelles
chez bellicositermes natalensis et cubitermes sp. La theorie de la stigmergie: essai
d'interpretation du comportement des termites constructeurs. Insectes Sociaux, 6,
41{81.
Gray, R., Kotz, D., Nog, S., Rus, D., & Cybenko, G. (1997). Mobile agents: next
generation distributed computing. Proceedings Second Aizu International
Symposium Parallel Algorithms/Architectures Synthesis (pAs '97), pp. 8{24. IEEE
Computer Society Press.
Jaakkola, T., Singh, S. P., & Jordan, M. I. (1995). Reinforcement learning algorithm
partially observable Markov decision problems. Advances Neural Information
Processing Systems 7, pp. 345{352. MIT Press.
Kaelbling, L. P., Littman, M. L., & Moore, A. W. (1996). Reinforcement learning: survey.
Journal Artificial Intelligence Research, 4, 237{285.
Khanna, A., & Zinky, J. (1989). revised ARPANET routing metric. ACM SIGCOMM
Computer Communication Review, 19 (4), 45{56.
Malkin, G. S., & Steenstrup, M. E. (1995). Distance-vector routing. Steenstrup, M. E.
(Ed.), Routing Communications Networks, chap. 3, pp. 83{98. Prentice-Hall.
McCallum, A. K. (1995). Reinforcement learning selective perception hidden state.
Ph.D. thesis, Department Computer Science, University Rochester, Rochester
(NY).
McQuillan, J. M., Richer, I., & Rosen, E. C. (1980). new routing algorithm
ARPANET. IEEE Transactions Communications, 28, 711{719.
363

fiDi Caro & Dorigo

Merlin, P., & Segall, A. (1979). failsafe distributed routing protocol. IEEE Transactions
Communications, COM-27 (9), 1280{1287.
Moy, J. T. (1998). OSPF Anatomy Internet Routing Protocol. Addison-Wesley.
Narendra, K. S., & Thathachar, M. A. (1980). behavior learning automaton changing environment application telephone trac routing. IEEE
Transactions Systems, Man, Cybernetics, SMC-10 (5), 262{269.
Nedzelnitsky, O. V., & Narendra, K. S. (1987). Nonstationary models learning automata
routing data communication networks. IEEE Transactions Systems, Man,
Cybernetics, SMC-17, 1004{1015.
Papoulis, A. (1991). Probability, Random Variables Stochastic Process (Third edition).
McGraw-Hill.
Peterson, L. L., & Davie, B. (1996). Computer Networks: System Approach. Morgan
Kaufmann.
Rubistein, R. Y. (1981). Simulation Monte Carlo Method. John Wiley & Sons.
Sandick, H., & Crawley, E. (1997). QoS routing (qosr) working group report. Internet
Draft, Internet Engineering Task Force (IEFT).
Schoonderwoerd, R., Holland, O., & Bruten, J. (1997). Ant-like agents load balancing
telecommunications networks. Proceedings First International Conference
Autonomous Agents, pp. 209{216. ACM Press.
Schoonderwoerd, R., Holland, O., Bruten, J., & Rothkrantz, L. (1996). Ant-based load
balancing telecommunications networks. Adaptive Behavior, 5 (2), 169{207.
Shankar, A. U., Alaettinoglu, C., Dussa-Zieger, K., & Matta, I. (1992a). Performance
comparison routing protocols dynamic static file transfer connections.
ACM Computer Communication Review, 22 (5), 39{52.
Shankar, A. U., Alaettinoglu, C., Dussa-Zieger, K., & Matta, I. (1992b). Transient
steady-state performance routing protocols: Distance-vector versus link-state. Tech.
rep. UMIACS-TR-92-87, CS-TR-2940, Institute Advanced Computer Studies
Department Computer Science, University Maryland, College Park (MD).
Singh, S. P., & Sutton, R. S. (1996). Reinforcement learning replacing eligibility traces.
Machine Learning, 22, 123{158.
Singh, S. P., Jaakkola, T., & Jordan, M. I. (1994). Learning without state estimation
partially observable Markovian decision processes. Proceedings Eleventh
Machine Learning Conference, pp. 284{292. New Brunswick, NJ: Morgan Kaufmann.
Steenstrup, M. E. (Ed.). (1995). Routing Communications Networks. Prentice-Hall.
Stone, P., & Veloso, M. M. (1996). Multiagent systems: survey machine learning
persective. Tech. rep. CMU-CS-97-193, Carnegie Mellon University, Pittsburgh, PA.
364

fiAntNet: Distributed Stigmergetic Control Communications Networks

Streltsov, S., & Vakili, P. (1996). Variance reduction algorithms parallel replicated
simulation uniformized Markov chains. Discrete Event Dynamic Systems: Theory
Applications, 6, 159{180.
Subramanian, D., Druschel, P., & Chen, J. (1997). Ants reinforcement learning:
case study routing dynamic networks. Proceedings IJCAI-97, International
Joint Conference Artificial Intelligence, pp. 832{838. Morgan Kaufmann.
ATM Forum (1996). Private Network-Network Interface Specification: Version 1.0.
Walrand, J., & Varaiya, P. (1996). High-performance Communication Networks. Morgan
Kaufmann.
Wang, Z., & Crowcroft, J. (1992). Analysis shortest-path routing algorithms dynamic
network environment. ACM Computer Communication Review, 22 (2).
Yang, Q. (1997). Simulation Laboratory Evaluation Dynamic Trac Management Systems. Ph.D. thesis, Department Civil Environmental Engineering,
Massachusetts Institute Technology (MIT).

365


