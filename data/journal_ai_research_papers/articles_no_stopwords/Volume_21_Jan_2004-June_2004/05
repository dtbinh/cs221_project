Journal Artificial Intelligence Research 21 (2004) 579-594

Submitted 08/03; published 05/04

Learn Beat Best Stock
Allan Borodin

bor@cs.toronto.edu

Department Computer Science
University Toronto
Toronto, ON, M5S 3G4 Canada

Ran El-Yaniv

rani@cs.technion.ac.il

Department Computer Science
Technion - Israel Institute Technology
Haifa 32000, Israel

Vincent Gogan

vincent@cs.toronto.edu

Department Computer Science
University Toronto
Toronto, ON, M5S 3G4 Canada

Abstract
novel algorithm actively trading stocks presented. traditional expert
advice universal algorithms (as well standard technical trading heuristics) attempt
predict winners trends, approach relies predictable statistical relations
pairs stocks market. empirical results historical markets provide strong
evidence type technical trading beat market moreover, beat
best stock market. utilize new idea smoothing critical
parameters context expert learning.

1. Introduction
portfolio selection (PS) problem challenging problem machine learning, online
algorithms and, course, computational finance. well known (e.g. see Lugosi, 2001)
sequence prediction log loss measure viewed special case portfolio selection, perhaps surprisingly, certain worst case minimax criterion,
portfolio selection essentially harder (than prediction) shown (Cover & Ordentlich, 1996) (see Lugosi, 2001, Thm. 20 & 21). seems qualitative
difference practical utility universal sequence prediction universal
portfolio selection. Simply stated, universal sequence prediction algorithms various
probabilistic worst-case models appear work well practice whereas known
universal portfolio selection algorithms seem provide substantial benefit
naive investment strategy (see Section 5).
major pragmatic question whether computer program consistently
outperform market. closer inspection interesting ideas developed information theory online learning suggests promising approach exploit natural
volatility market particular benefit simple rather persistent statistical relations stocks rather try predict stock prices winners.

c
2004
AI Access Foundation. rights reserved.

fiBorodin, El-Yaniv, & Gogan

present non-universal portfolio selection algorithm1 , try predict
winners. motivation behind algorithm rationale behind constant rebalancing
algorithms worst case study universal trading introduced Cover (1991).
proposed algorithm substantially beat market historical markets,
beats best stock. presenting algorithm simply
making money? are, course caveats obstacles utilizing algorithm.
large investors possibility goose laying silver (if golden) eggs
perhaps impossible.

2. Portfolio Selection Problem
Assume market stocks. Let vt = (vt (1), . . . , vt (m)) daily closing prices2
stocks tth day, vt (j) price jth stock. convenient
work relative prices xt (j) = vt (j)/vt1 (j) investment $d jth
stock tth day yields dxt (j) dollars. let xt = (xt (1), . . . , xt (m)) denote
market vector relative prices corresponding tth day. portfolio b allocation
wealth stocks, specified proportions b = (b(1),
P . . . , b(m)) current dollar
wealth invested stocks, b(j) P
0 j b(j) = 1. daily return
portfolio b w.r.t. market vector x b x = j b(j)x(j) (compound) total
return, retX (b1 , . . .Q
, bn ), sequence portfolios b1 , . . . , bn w.r.t. market sequence
X = x1 , . . . , xn nt=1 bt xt . portfolio selection algorithm deterministic
randomized rule specifying sequence portfolios let retX (A) denote total
return market sequence X.
simplest strategy buy-and-hold stocks using portfolio b. denote
strategy BAHb let U-BAH denote uniform buy-and-hold b = (1/m, . . . , 1/m).
say portfolio selection algorithm beats market outpeforms U-BAH
given market sequence although practice market represented
non-uniform BAH.3 Buy-and-hold strategies rely tendency successful markets
grow. Much modern portfolio theory focuses choose good b buyand-hold strategy. seminal ideas Markowitz (1959) yield algorithmic procedure
choosing weights portfolio b minimize variance feasible
expected return. variance minimization possible placing appropriate (larger)
weights subsets sufficiently anti-correlated stocks, idea shall utilize.
denote optimal hindsight buy-and-hold strategy (i.e. invest best
stock) BAH .
alternative approach static buy-and-hold dynamically change portfolio
trading period. approach often called active trading. One example
active trading constant rebalancing; namely, fix portfolio b (re)invest dollars
day according b. denote constant rebalancing strategy CBALb let
CBAL denote optimal (in hindsight) CBAL. constant rebalancing strategy often
1. PS algorithm modified universal investing fixed fraction initial wealth
universal algorithm.
2. nothing special daily closing prices problem defined respect
(sub)sequence (intra-day) sequence price offers appear stock market.
3. example Dow Jones Industrial Average (DJIA) calculated non uniform average 30
DJIA stocks; see e.g. http://www.dowjones.com/

580

fiCan Learn Beat Best Stock

take advantage market fluctuations achieve return significantly greater
always least good best stock BAH real market
sequences constant rebalancing strategy take advantage market fluctuations
significantly outperform best stock (see e.g. Table 1). now, consider Cover
Glusss (1986) classic (but contrived) example
cash one stock
1 consisting

1 ofa1market
, 12 , . . .. consider CBALb
market sequence price relatives 1/2
, 2 , 1/2
b = ( 21 , 12 ). odd day daily return CBALb 21 1+ 12 12 = 34 even
day, 3/2. total return n days therefore (9/8)n/2 , illustrating constant
rebalancing strategy yield exponential returns no-growth market.
assumption daily market vectors observations identically independently
distributed (i.i.d) random variables, shown (Cover & Thomas, 1991) CBAL
performs least good (in sense expected total return) best online portfolio
selection algorithm. However, many studies (see e.g. Lo & MacKinlay, 1999) argue
stock price sequences long term memory i.i.d.
non-traditional objective (in computational finance) develop online trading
strategies sense always guaranteed perform well.4 Within line
research pioneered Cover (Cover & Gluss, 1986; Cover, 1991; Cover & Ordentlich, 1996)
one attempts design portfolio selection algorithms provably well (in terms
total return) respect online offline benchmark algorithms. Two
natural online benchmark algorithms uniform buy hold U-BAH, uniform
1
1
,...,
). natural
constant rebalancing strategy U-CBAL, CBALb b = (

offline benchmark BAH challenging offline benchmark CBAL .
portfolio selection algorithm called universal every market sequence X
n days, guarantees subexponential ratio (in n) return retX (A)
retX (CBAL ). particular, Cover Ordentlichs Universal Portfolios algorithm (Cover,
1991; Cover & Ordentlich, 1996), denoted UNIVERSAL, proven universal;
specifically every market sequence X stocks n days, guarantees
subexponential (indeed polynomial) ratio
m1
(1)
retX (CBAL )/retX (UNIVERSAL) = n 2 .
BAH . CBAL

theoretical perspective surprising performance ratio bounded
polynomial n (for fixed m) whereas CBAL capable exponential returns.
practical perspective, bound useful empirical returns observed
CBAL portfolios often exponential number trading days. However,
motivation underlies potential CBAL algorithms useful! follow motivation develop new algorithm call ANTICOR. attempting systematically
follow constant rebalancing philosophy, ANTICOR capable extraordinary performance absence transaction costs, even small transaction costs.
4. trading strategy online computes portfolio (t+1)st day using market information
first days. contrast offline algorithms U-BAH , CBAL optimal
strategy picking best stock individual day. offline algorithms compute sequence
portfolios function entire market sequence.

581

fiBorodin, El-Yaniv, & Gogan

3. Trying Learn Winners
direct approach expert learning portfolio selection (reward based)
weighted average prediction scheme, adaptively computes weighted average
experts gradually increasing (by multiplicative additive update rule) relative
weights successful experts. section briefly discuss related
portfolio selection results along lines.
example, context PS problem consider exponentiated gradient
EG() algorithm proposed (Helmbold et al., 1998). EG() algorithm computes
next portfolio
bt (j) exp {xt (j)/(bt xt )}
bt+1 (j) = Pm
,
j=1 bt (j) exp {xt (j)/(bt xt )}
learning rate parameter. EG designed greedily choose best portfolio
yesterdays market xt time paying penalty movingp
far yesterdays portfolio. universal bound EG, Helmbold et al. set = 2xmin 2(log m)/n
xmin lower bound price relative.5 easy see n increases,
decreases 0 think small order achieve universality.
= 0, algorithm EG() degenerates uniform CBAL (assuming started
uniform portfolio) universal algorithm. case
day price relatives stocks identical, EG (as well PS algorithms)
converge uniform CBAL. Combining small learning rate reasonably
balanced market expect performance EG similar uniform
CBAL confirmed experiments (see Table 1).6
Covers universal algorithms adaptively learn days portfolio increasing
weights successful CBALs. update rule universal algorithms
R
b rett (CBALb )d(b)
bt+1 = R
,
rett (CBALb )d(b)
() prior distribution portfolios. Thus, weight possible portfolio
proportional total return rett (b) thus far times prior. particular universal algorithm consider experiments uses Dirichlet prior (with parameters
( 21 , . . . , 12 )) (Cover & Ordentlich, 1996).7 Somewhat surprisingly, noted (Cover & Ordentlich, 1996) algorithm equivalent static weighted average (given (b))
CBALs (see Borodin & El-Yaniv, 1998, p. 291). equivalence helps demystify
universality result shows algorithm never outperform CBAL .
5. Helmbold et al. show eliminate need know xmin n. EG made universal,
performance ratio sub-exponential (and polynomial) n.
6. Following Helmbold et al. fix = 0.01 experiments. Additional experiments, wide range
fixed settings, confirm datasets choice = 0.01 optimal near optimal
choice. course, possible adaptively set throughout trading period, beyond
scope paper.
7. papers (Cover, 1991; Cover & Ordentlich, 1996; Blum & Kalai, 1998) consider simpler version
algorithm (Dirichlet) prior uniform. algorithm universal achieves
ratio (nm1 ). Experimentally (on datasets) negligible difference two
variants report results asymptotically optimal algorithm.

582

fiCan Learn Beat Best Stock

different type winner learning algorithm obtained sequence
prediction strategy, noted (Borodin, El-Yaniv, & Gogan, 2000). stock j,
(soft) sequence prediction algorithm provides probability p(j) next symbol
j {1, . . . , m}. view prediction stock j best relative
price next day set bt+1 (j) = pj . paper (Borodin et al., 2000) considers
predictions made using prediction component well-known Lempel-Ziv (LZ) lossless
compression algorithm (Ziv & Lempel, 1978). prediction component nicely described
(Langdon, 1983) (Feder, 1991). prediction algorithm, LZ provably powerful
various senses. First shown asymptotically optimal respect
stationary ergodic finite order Markov source (Rissanen, 1983; Ziv & Lempel, 1978).
Moreover, Feder shows LZ universal worst case sense respect
(offline) benchmark class finite state prediction machines. summarize, common
approach devising PS algorithms attempt learn winners using simple
sophisticated winner learning schemes.

4. Anticor Algorithm
propose different approach, motivated CBAL-inspired philosophy.
interpret success uniform CBAL Cover Gluss example Section 2?
Clearly, uniform CBAL taking advantage price fluctuation constantly transferring wealth high performing stock relatively low performing stock. Even
less contrived market, CBAL capable large returns. market model favoring
use CBAL one stock growth rates stable long term occasional larger return rates followed smaller rates (and vice versa). market
phenomenon sometimes called reversal mean.
many ways one interpret implement algorithms based
philosophy reversal mean. particular, CBAL viewed static
implementation philosophy. describe motivation basic ingredients
ANTICOR algorithm adaptively (based recent empirical statistics) rather
aggressively8 implements reversal mean.
given trading day, consider recent past w trading days, w
integer parameter. growth rate stock window time measured
product relative prices window.9 Motivated assumption
portfolio stocks performing similarly terms long term growth rates,
ANTICORs first condition transferring money stock stock j growth
rate stock exceeds stock j recent window time.10 addition,
ANTICOR algorithm requires indication stock j start emulate past
growth stock near future. end, ANTICOR requires positive correlation
stock second last window stock j last window.
relative extent transfer money stock stock j depend
8. ANTICOR algorithm aggressive (say, compared CBAL) sense transfer
assets given stock. Various heuristics used moderate behavior.
9. Since would rather deal arithmetic instead geometric means use logarithms
relative prices.
10. Note umderlying model assumption reversal mean. One modify
algorithm account different means.

583

fiBorodin, El-Yaniv, & Gogan

strength correlation well strength self anti-correlations
stocks j (again two consecutive windows). ANTICOR named use
correlations anticorrelations consecutive windows indicate potential
anticorrelations growth rates stocks j near future (with hopefully
growth rate stock j becoming greater stock i).
Formally, define
LX1 = log(xt2w+1 ), . . . , log(xtw )T LX2 = log(xtw+1 ), . . . , log(xt )T ,

(2)

log(xk ) denotes (log(xk (1)), . . . , log(xk (m))). Thus, LX1 LX2 two vector
sequences (equivalently, two w matrices) constructed taking logarithm
market subsequences corresponding time windows [t 2w + 1, w] [t w + 1, t],
respectively. denote jth column LXk LXk (j). Let k = (k (1), . . . , k (m)),
vectors averages columns LXk . Similarly, let k , vector standard
deviations columns LXk . cross-correlation matrix (and normalization)
column vectors LX1 LX2 defined as11
1
(LX1 (i) 1 (i))T (LX2 (j) 2 (j));
w

1
(
Mcov (i,j)
1 (i)2 (j) 1 (i), 2 (j) 6= 0;
Mcor (i, j) =
0
otherwise.

Mcov (i, j) =

(3)

Mcor (i, j) [1, 1] measures correlation log-relative prices stock
first window stock j second window. note 1 (i) (respectively,
2 (j)) zero window growth rate stock second last
window (respectively, stock j last window) constant window.
sufficiently large windows time constant growth stock unlikely. However,
unlikely case choose move money stock i.12
pair stocks j compute claimij , extent want shift
investment stock stock j. Namely, claim iff 2 (i) > 2 (j)
Mcor (i, j) > 0 case claimij = Mcor (i, j) + A(i) + A(j) A(h) = |Mcor (h, h)|
Mcor (h, h) < 0, else 0. Following interpretation success CBAL, Mcor (i, j) > 0
used predict stocks j correlated consecutive windows (i.e.
current window next window based evidence last two windows)
Mcor (h, h) < 0 predicts stock h P
negatively auto-correlated consecutive
windows. Finally,
b
(i)
=
b
(i)
+

j6=i [transferji transferij ] transferij =
P t+1
bt (i) claimij / j claimij . pseudocode summarizing ANTICOR algorithm appears
Figure 1. pseudocode describes routine ANTICOR(w, t, Xt , bt ) receives
window size w, current trading day t, historical market sequence Xt (giving
market vectors corresponding days 1, . . . , t) current portfolio bt defined
bt = bt1xt (bt (1)xt (1), . . . , bt (m)xt (m)). routine first called empty historical
market sequence bt uniform portfolio (over stocks). routine
11. Recall correlation coefficient normalized covariance covariance divided
product standard deviations; is, Cor(X, ) = Cov(X, )/(std(X) std(Y ))
Cov(X, ) = E[(X mean(X))(Y mean(Y ))].
12. course, approaches used accommodate constant nearly constant growth rate.

584

fiCan Learn Beat Best Stock

returns new portfolio, rebalance start (t + 1)st trading
day.
Algoritm ANTICOR(w, t, Xt , bt )
Input:
1. w: Window size
2. t: Index last trading day
3. Xt = x1 , . . . , xt : Historical market sequence
4. bt : current portfolio (by end trading day t)
Output: bt+1 : Next days portfolio
1. Return current portfolio bt < 2w.
2. Compute LX1 LX2 defined Equation (2), 1 2 , (vector) averages
LX1 LX2 , respectively.
3. Compute Mcor (i, j) defined Equation (3).
4. Calculate claims: 1 i, j m, initialize claimij = 0
5. 2 (i) 2 (j) Mcor (i, j) > 0
(a) claimij = claimij + Mcor (i, j);
(b) Mcor (i, i) < 0 claimij = claimij Mcor (i, i);
(c) Mcor (j, j) < 0 claimij = claimij Mcor (j, j);
6. Calculate new portfolio: Initialize bt+1 = bt . 1 i, j
P
(a) Let transferij = bti claimij / j claimij ;
(b) bt+1
= bt+1
transferij ;


(c) bt+1
= bt+1
+ transferji ;



Figure 1: Algorithm

ANTICOR

ANTICORw algorithm one critical parameter, window size w. Figure 2
depict total return ANTICORw two historical datasets function
window size w = 2, . . . , 30 (detailed descriptions datasets appear Section 5).
might expect, performance ANTICORw depends significantly window size.
However, w, ANTICORw beats uniform market and, moreover, beats best
stock using window sizes. course, online trading cannot choose w hindsight.
Viewing ANTICORw algorithms experts, try learn best expert.
windows, individual stocks, induce rather volatile set experts standard expert
combination algorithms (Cesa-Bianchi et al., 1997) tend fail.13
Alternatively, adaptively learn invest weighted average ANTICORw
algorithms w less maximum W . simplest case uniform investment windows; is, uniform buy-and-hold investment algorithms
ANTICORw , w [2, W ], denoted BAHW (ANTICOR). Figure 3 graphs total return
BAHW (ANTICOR) function W values 2 W 50 four datasets
consider here. Considering graphs, choice W = 30 arbitrary clearly
13. assertion based empirical studies conducted various expert advice algorithms.

585

fiBorodin, El-Yaniv, & Gogan

NYSE: Anticorw vs. window size

TSX: Anticorw vs. window size

120

BAH(Anticor(Window))
Anticor(Window)
Best Stock
Market Return

8

10

80

Anticorw

5

Total Return

Total Return (logscale)

100

10

BAH(Anticorw)
Anticorw
Best Stock
Market

Best Stock

Anticorw
Best Stock

60

40

2

10

20

1

10

0

10

2

5

10

15

20

25

0

30

5

10

Window Size (w)

(a)

30

BAH(Anticorw)
Anticorw

Best Stock
Market Return

2.5

Best Stock
Market Return

Anticorw

8

Total Return

Total Return

25

DJIA: Anticorw vs. window size

3

BAH(Anticor )
w
Anticorw

10

20

(b)

SP500: Anticorw vs. window size
12

15
Window Size (w)

Anticorw
6

2

1.5

4
2

1

Best Stock

Best Stock

1
5

10

15

20

25

30

Window Size (w)

5

10

15

20

25

30

Window Size (w)

(c)
Figure 2:

0.5

(d)

ANTICORw

total return (per $1 investment) vs. window size 2 w 30
(a) NYSE; (b) TSX; (c) SP500; (d) DJIA. dashed (red) lines represent
final return best stock dash-dotted (blue) lines, final return
(uniform) market. dotted (green) horizontal lines represent uniform
investment number ANTICORw applications later described.

optimal. course, could try optimize parameter W particular dataset
training algorithm historical data beginning trade. However, claim
almost choice W yield returns beat best stock (the exception
W = 2 DJIA dataset).
Since consider various algorithms stocks (whose prices determined
cumulative returns algorithms), back original portfolio selection
problem ANTICOR algorithm performs well stocks may perform well
algorithms. thus consider active investment various ANTICORw algorithms using
ANTICOR. consider windows w W . course, continue compound
algorithm number times. compound twice use buy-and-hold
investment. resulting algorithm denoted BAHW (ANTICOR(ANTICOR)). One impact
compounding, depicted Figure 4, smooth anti-correlations exhibited
stocks. evident compounding twice returns become almost completely
586

fiCan Learn Beat Best Stock

NYSE: Total Return vs. Max Window

30

7

6

25

BAH (Anticor)
W

BAHW(Anticor)

5

10

Total Return

Total Return (logscale)

10

TSX: Total Return vs Max Window
BAHW(Anticor)

10

Best Stock
Market

4

10

3

10

Best Stock

20
BAHW(Anticor)
15

10

2

Best Stock
Market

Best Stock

10

1

5

10

0

10

2

10

20

30

40

2

50

10

20

(a)
1.6

W

6

Total Return

Total Return

1.4

5

Best Stock
4

Figure 3:

BAHW(Anticor)
Best Stock

1.2

BAHW(Anticor)

1

3

1
2

BAHW(Anticor)

20

30

Best Stock
Market

0.8

Best Stock
Market
10

50

DJIA: Total Return vs Max Window

BAH (Anticor)

2

40

(b)

SP500: Total Return vs Max Window
7

30

Maximal Window Size (W)

Maximal Window size (W)

40

50

2

10

20

30

Maximal Window Size (W)

Maximal Window Size (W)

(c)

(d)

40

50

BAHW (ANTICOR)s

total return (per $1 investment) function maximal
window W : NYSE (a); TSX (b); SP500 (c); DJIA (d).

correlated thus diminishing possibility additional compounding substantially
help.14 idea smoothing critical parameters may applicable learning
applications. challenge understand conditions applications
process compounding algorithms smoothing effect.

5. Empirical Comparison Algorithms
present experimental study ANTICOR algorithm three online
learning algorithms described Section 3. focus BAH30 (ANTICOR), abbreviated
ANTI1 BAH30 (ANTICOR(ANTICOR)), abbreviated ANTI2 . Four historical datasets
used. first NYSE dataset, one used (Cover, 1991; Cover & Ordentlich, 1996;
Helmbold et al., 1998) (Blum & Kalai, 1998). dataset contains 5651 daily prices
36 stocks New York Stock Exchange (NYSE) twenty two year period July
3rd , 1962 Dec 31st , 1984. second TSX dataset consists 88 stocks Toronto
Stock Exchange (TSX), five year period Jan 4th , 1994 Dec 31st , 1998. third
14. smoothing effect allows use simple prediction algorithms expert advice
algorithms (Cesa-Bianchi et al., 1997), better predict good window size.
explored direction.

587

fiBorodin, El-Yaniv, & Gogan

DJIA: Dec 14, 2002 Jan 14, 2003
Anticor1

Stocks
1.1

2

Anticor

2.2
2.6

1

Total Return

2.8

2

0.9

2.4
1.8

0.8

2.2

1.6
0.7

2

1.4
0.6

1.8

1.2

0.5

1.6

1

0.4
5 10 15 20 25
Days

5 10 15 20 25
Days

5 10 15 20 25
Days

Figure 4: Cumulative returns last month DJIA dataset: stocks (left panel);
ANTICORw algorithms trading stocks (denoted ANTICOR1 , middle panel);
ANTICORw algorithms trading ANTICOR algorithms (right panel).

dataset consists 25 stocks SP500 (as Apr. 2003) largest market
capitalization. set spans 1276 trading days period Jan 2nd , 1998 Jan 31st ,
2003. fourth dataset consists thirty stocks composing Dow Jones Industrial
Average (DJIA) two year period (507 days) Jan 14th , 2001 Jan 14th , 2003.15
Algorithm
Market (U-BAH)
Best Stock
CBAL
U-CBAL
ANTI1
ANTI2
LZ
EG
UNIVERSAL

NYSE
14.49
54.14
250.59
27.07
17,059,811.56
238,820,058.10
79.78
27.08
26.99

TSX
1.61
6.27
6.77
1.59
26.77
39.07
1.32
1.59
1.59

SP500
1.34
3.77
4.06
1.64
5.56
5.88
1.67
1.64
1.62

DJIA
0.76
1.18
1.23
0.81
1.59
2.28
0.89
0.81
0.80

NYSE1
0.11
0.32
2.86
0.22
246.22
1383.78
5.41
0.22
0.22

TSX1
1.67
37.64
58.61
1.18
7.12
7.27
4.80
1.19
1.19

SP5001
0.87
1.65
1.91
1.09
6.61
9.69
1.20
1.09
1.07

DJIA1
1.43
2.77
2.97
1.53
3.67
4.60
1.83
1.53
1.53

Table 1: Monetary returns dollars (per $1 investment) various algorithms four
different datasets reversed versions. winner runner-up
market appear boldface. figures truncated two decimals.
four datasets quite different nature (the market returns datasets
appear first row Table 1). every stock NYSE increased value, 32
88 stocks TSX lost money, 7 25 stocks SP500 lost money
15. four datasets, including sources individual stock compositions downloaded
http://www.cs.technion.ac.il/rani/portfolios.

588

fiCan Learn Beat Best Stock

25 30 stocks negative market DJIA lost money. exception
TSX, data sets include highly liquid stocks large market capitalizations.
order maximize utility datasets yet present rather different markets,
ran market reverse. simply done reversing order inverting
relative prices. reverse datasets denoted -1 superscript.
reverse markets particularly challenging. example, NYSE1 stocks
going down. Note forward reverse markets (i.e. U-BAH) TSX
increasing TSX1 challenging market since many stocks (56 88)
declining.
Table 1 reports total returns various algorithms eight datasets.
see prediction algorithms LZ quite well aggressive ANTI1
ANTI2 excellent sometimes fantastic returns. Note active strategies
beat best stock even CBAL markets exception TSX1
case still significantly outperform market. reader may well distrustful
appears unbelievable returns ANTI1 ANTI2 especially applied
NYSE dataset. However, recall NYSE dataset consists n = 5651 trading
days n = total NYSE return approximately 1.0029511
ANTI1 (respectively, 1.0074539 ANTI2 ); is, average daily increase less
.3% (respectively, .75%). observe learning algorithms UNIVERSAL EG
substantial advantage U-CBAL. previous expositions algorithms
highlighted particular combinations stocks returns significantly outperformed
best stock. said U-CBAL.
DJIA: Cumulative Total Returns
2.2

Cumulative Total Return

2

Anti1
Anti2
Best Stock
Market

Anti2
1

Anti

1.8
1.6
1.4
1.2

Best Stock

1
0.8

Market

Jan01

Jan02

Jan03

Date

Figure 5: DJIA: Cumulative returns
(the market).

ANTI1 , ANTI2 ,

best stock uniform

BAH

total returns ANTI1 ANTI2 presented Table 1 impressive far
telling complete story. Consider graphs figure 6. ANTI1 ANTI2
perform well respect uniform market best stock throughout
investment period, periods cumulative return strategies
589

fiBorodin, El-Yaniv, & Gogan

decrease. (not surprising) behavior indicates certain degree risk
using investment algorithms.
finance standard risk measure standard deviation return. Table 2
provide annualized returns risks well risk-adjusted returns markets
algorithms considered here.16 example, annualized return best stock
DJIA set 8.6%, annualized risk (standard deviation) 42% annualized
risk-adjusted return (Sharpe ratio) 11%.
Algorithm
Market
(U-BAH)
Best Stock
CBAL
U-CBAL
ANTI1
ANTI2
LZ
EG
UNIVERSAL

NYSE
12 14%
58%
19 24%
63%
27 30%
78%
15 13%
88%
110 28%
367%
136 35%
370%
21 23%
76%
15 13%
88%
15 13%
87%

TSX
10 12%
46%
44 55%
73%
46 40%
106%
9 13%
44%
93 45%
196%
108 60%
172%
5 25%
6%
9 13%
44%
9 13%
44%

SP500
5 24%
8%
30 51%
50%
31 42%
65%
10 22%
28%
40 37%
95%
41 44%
86%
10 25%
25%
10 22%
28%
10 22%
27%

DJIA
12 24%
-67%
8 42%
11%
11 26%
27%
9 25%
-54%
26 35%
62%
50 39%
119%
5 28%
-33%
9 25%
-54%
9 25%
-55%

NYSE1
9 15%
-86%
4 21%
-41%
4 40%
1%
6 13%
-77%
27 27%
86%
38 33%
101%
7 21%
17
6 13%
-77%
6 13%
-77%

TSX1
10 22%
29%
106 104%
98%
125 78%
156%
3 13%
-3%
48 41%
107%
48 46%
96%
36 27%
117%
3 13%
-2%
3 13%
-2%

SP5001
2 22%
-28%
10 32%
20%
13 27%
35%
1 21%
-9%
45 32%
126%
56 36%
143%
3 26%
-0.8%
1 22%
-9%
1 22%
-11%

DJIA1
19 25%
61%
65 114%
54%
71 76%
88%
23 25%
77%
90 31%
277%
113 35%
304%
35 27%
112%
23 25%
77%
23 25%
76%

Table 2: Annualized returns respective annualized volatilities well annualized riskadjusted returns (Sharpe Ratio) various algorithms three datasets
reversed versions. winner runner-up Sharpe Ratio market
appear boldface. figures truncated two decimals.

6. Commissions, Trading Friction Caveats
handling portfolio stocks algorithm may perform transactions
per day. major concern therefore commissions incur. Within proportional commission model (see e.g. Blum & Kalai, 1998; Borodin & El-Yaniv, 1998, Section
14.5.4) exists fraction (0, 1) investor pays rate /2
buy sell. Therefore, return
sequence b1 , . . . , bn portfolios

Q
P
respect market sequence x1 , . . . , xn bt xt (1 j 2 |bt (j) bt (j)|) ,
16. annualized return estimated using geometric mean ofthe individual daily returns risk
standard deviation daily returns multiplied 252 252 assumed standard
number trading days per year. calculations standard. (annualized) Sharpe ratio
(Sharpe, 1975) ratio annualized return minus risk-free return (taken 4%) divided
(annualized) standard deviation.

590

fiCan Learn Beat Best Stock

bt = bt1xt (bt (1)xt (1), . . . , bt (m)xt (m)).17 investment algorithm simplest form
tolerate small proportional commission rates still beat best stock.
graphs Figure 6 depict total returns BAH30 (ANTICOR) proportional commission factor = 0.1%, 0.2%, . . . , 1%. strategy withstand small commission factors.
example, = 0.1% algorithm still beat best stock four markets
consider (and beats market < 0.4%). Moreover still clearly beats market
whenever < 0.4%.
NYSE

10

30

5

Best Stock

10

TSX

25

Anti1
Return

Return (logscale)

10

Market

20
15
10
5

0

10

0

6

0.2
0.4
0.6
0.8
Commission Rate ()

0
0

1

SP500

2

0.2
0.4
0.6
0.8
Commission Rate ()

1

DJIA

5
Return

Return

4
3
2

1.5

1

1
0

0.1 0.2
0.4
0.6
0.8
Commission Rate ()

Figure 6: Total returns
0.1%, 0.2%, . . . , 1%.

0.5
0

1

BAH30 (ANTICOR)

0.2
0.4
0.6
0.8
Commission Rate ()

1

proportional commissions

=

However, current online brokers charge small proportional commissions, perhaps addition small flat commission rate trades.18 means large
investor scale investment suffer small proportional transaction rate.
additional caveat assumption trades could implemented using
closing price. principle nothing special closing price (i.e.
algorithms trade time trading day) practical consideration related
dataset gathering availability dictated use prices.19 algorithms
17. note Blum Kalai (1998) showed performance guarantee UNIVERSAL still holds
(and gracefully degrades) case proportional commissions.
18. example, USA site, E*TRADE (https://us.etrade.com) offers flat fee $10 trade
5000 shares $.01/share thereafter.
19. Specifically, historical closing prices public domain allow experimental reproducibility.
Historical intraday trading quotes gathered data usually protected
costly obtain.

591

fiBorodin, El-Yaniv, & Gogan

assume portfolio adjustments implemented using quoted prices receive
inputs. means transactions implemented simultaneously using
quoted prices. current online brokers computerized system issue transaction
orders almost instantly guarantee implemented instantly.
trading friction necessarily generate discrepancies input prices
implementation prices.
related problem one must face actually trading difference
bid ask prices. bid-ask spreads (and availability stocks buying
selling) functions stock liquidity typically small large market capitalization
stocks. consider large market cap stocks.
report abnormal returns using historical markets suspected data
snooping. particular, historical data sets conditioned fact
stocks traded every day bankrupcies stocks became
virtually worthless data sets. Furthermore, dataset excessively
mined testing many strategies substantial chance one strategies
successful simple over-fitting. Another data snooping hazard stock selection.
ANTICOR algorithms fully developed using NYSE TSX datasets.
DJIA SP500 sets obtained (from public domain sources) algorithms
fixed. Finally, algorithm one parameter (the maximal window size W ).
experiments clearly indicate algorithms performance robust respect W
(see, example, Figure 4).

7. Concluding Remarks
Traditional work financial economics tend focus understanding stock price
determination. main question is: predict stock market? Judging
extensive inconclusive work done financial forecasting, perhaps
beneficial question ask. Rather, computer program consistently outperform
market? Besides practicality, clear successful portfolio selection algorithm
mathematical model provide new intuition stock price formation.
example, case, algorithms suggest stock price fluctuations
sufficiently periodic anti-correlated.
number well-respected works report statistically robust abnormal returns
simple technical analysis heuristics, slightly beat market. example,
landmark study Brock, Lakonishok, LeBaron (1992) apply 26 simple trading
heuristics DJIA index 1897 1986 provide strong support technical
analysis heuristics. consistently beating market considered significant (if
impossible) challenge, approach portfolio selection indicates beating best
stock achievable goal. mainly focused idealized frictionless
setting, believe even frictionless setting (which seems reasonable
starting point) results previously claimed literature.
results presented raise various interesting questions. Since simple statistical
relations correlation give rise outstanding returns plausible various
other, perhaps sophisticated machine learning techniques, give rise better

592

fiCan Learn Beat Best Stock

portfolio selection algorithms capable larger returns tolerating larger commissions
fees.
theoretical side, missing point time analytical model
better explains active trading strategies successful. regard,
investigating various statistical adversary models along lines suggested Raghavan
(1992) Chou et al. (1995). Namely, would show algorithm performs
well (relative benchmark) market sequence satisfies certain constraints
empirical statistics.
One final caveat needs mentioned. Namely, entire theory portfolio selection
algorithms assumes one portfolio selection algorithm impact market!
goose laying golden eggs, widespread use soon lead end
goose. case, market quickly react method consistently
substantially beat market.

Acknowledgments
thank Michael Loftus helpful comments. thank Izzy Nelken Super
Computing Inc. help validating DJIA dataset.

References
Blum, A., & Kalai, A. (1998). Universal portfolios without transaction costs.
Machine Learning, 30 (1), 2330.
Borodin, A., & El-Yaniv, R. (1998). Online Computation Competitive Analysis. Cambridge University Press.
Borodin, A., El-Yaniv, R., & Gogan, V. (2000). competitive theory practice
portfolio selection. Proc. 4th Latin American Symposium Theoretical
Informatics (LATIN00), pp. 173196.
Brock, L., Lakonishok, J., & LeBaron, B. (1992). Simple technical trading rules
stochastic properties stock returns. Journal Finance, 47, 17311764.
Cesa-Bianchi, N., Freund, Y., Haussler, D., Helmbold, D., Schapire, R., & Warmuth, M.
(1997). use expert advice. Journal ACM, 44 (3), 427485.
Chou, A., Cooperstock, J., El-Yaniv, R., Klugerman, M., & Leighton, T. (1995).
statistical adversary allows optimal money-making trading strategies. Proceedings
6th Annual ACM-SIAM Symposium Discrete Algorithms.
Cover, T. (1991). Universal portfolios. Mathematical Finance, 1, 129.
Cover, T., & Gluss, D. (1986). Empirical bayes stock market portfolios. Advances Applied
Mathematics, 7, 170181.
Cover, T., & Ordentlich, E. (1996). Universal portfolios side information. IEEE
Transactions Information Theory, 42 (2), 348363.
Cover, T., & Thomas, J. (1991). Elements Information Theory. John Wiley & Sons, Inc.
Feder, M. (1991). Gambling using finite state machine. IEEE Transactions Information
Theory, 37, 14591465.
593

fiBorodin, El-Yaniv, & Gogan

Helmbold, D., Schapire, R., Singer, Y., & Warmuth, M. (1998). Portfolio selection using
multiplicative updates. Mathematical Finance, 8 (4), 325347.
Langdon, G. (1983). note Lempel-Ziv model compressing individual sequences.
IEEE Transactions Information Theory, 29, 284287.
Lo, A., & MacKinlay, C. (1999). Non-Random Walk Wall Street. Princeton
University Press.
Lugosi, G. (2001).
Lectures prediction
URL:http://www.econ.upf.es/lugosi/ihp.ps.



individual

sequences.

Markowitz, H. (1959). Portfolio Selection: Efficient Diversification Investments. John
Wiley Sons.
Raghavan, P. (1992). statistical adversary on-line algorithms. dimacs Series
Discrete Mathematics Theoretical Computer Science, 7, 7983.
Rissanen, J. (1983). universal data compression system. IEEE Transactions Information Theory, 29, 656664.
Sharpe, W. (1975). Adjusting risk portfolio performance measurement. Journal
Portfolio Management, 2934. Winter.
Ziv, J., & Lempel, A. (1978). Compression individual sequences via variable rate coding.
IEEE Transactions Information Theory, 24, 530536.

594


