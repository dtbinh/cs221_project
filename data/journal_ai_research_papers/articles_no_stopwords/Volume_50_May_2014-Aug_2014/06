journal artificial intelligence

submitted published

belief tracking sensing width
complexity approximations
blai bonet

bonet ldc usb

departamento de computacion
universidad simon bolvar
caracas venezuela

hector geffner

hector geffner upf edu

icrea universitat pompeu fabra
roc boronat
barcelona spain

abstract
consider belief tracking setting states valuations set variables partially observable beliefs stand sets
states possible intractable worst case
recently shown deterministic conformant contingent belief tracking exponential width parameter often bounded small work
extend two ways first introduce width notion applies
non deterministic well develop factored belief tracking exponential width applies existing benchmarks second
introduce meaningful powerful sound approximation scheme beam tracking
exponential smaller parameter causal width much broader applicability illustrate value large instances
battleship minesweeper wumpus yields state art performance
real time

introduction
incomplete information formulated search belief space
two issues need addressed keeping track beliefs searching goal
belief bonet geffner two tasks intractable worst case
compact representations adopted recent conformant
contingent planners beliefs handled sat regression techniques logical
normal forms cnf dnf obdds search goal beliefs guided
domain independent heuristics bertoli cimatti roveri traverso hoffmann
brafman bryce kambhampati smith pontelli son shani
brafman brafman shani
recently complexity belief tracking deterministic conformant contingent
shown exponential width parameter often
bounded small palacios geffner albore palacios geffner
bound follows family translations developed compiling
beliefs states translations exponential
c

ai access foundation rights reserved

fibonet geffner

width deterministic conformant solved
classical planners
difficulty extending palacios albore geffner nondeterministic setting consequence special role played initial situation
deterministic case uncertainty particular uncertainty
observations action preconditions goals one matters
complete planner uncertainty initial situation nondeterministic setting hand uncertainty produced dynamically
application non deterministic actions moreover uncertain initial situation
modeled fully known initial situation dummy non deterministic
action opposite transformation simple indeed non deterministic effects
compiled deterministic effects conditional value hidden variables
number hidden variables required must grow horizon
weld anderson smith albore ramirez geffner
aim work study computational complexity belief tracking
terms novel width parameters apply deterministic non deterministic
formulation practical approximate belief tracking
efficient effective even large width achieve
considering two decomposition schemes belief tracking three
decompositions precisely introduce
width notion close correspondence notion introduced
palacios albore geffner applies non deterministic
well
first belief tracking factored belief tracking sound complete
deterministic non deterministic p runs time space
exponential width w p decomposition
p projected subproblems px one every goal precondition
variable x one including variables relevant x
second belief tracking causal belief tracking alternative
decomposition scheme subproblems px defined every goal precondition
observable variable x one including variables causally relevant
x sound complete large meaningful class
still time exponential width space exponential
causal width often much smaller
final belief tracking beam tracking sound incomplete approximation causal belief tracking often practical enough even
large widths runs time space exponential causal
width
power last beam tracking shown empirically large
instances minesweeper battleship wumpus state

fibelief tracking sensing

art performance obtained real time combining belief tracking
simple heuristics action selection
organization follows structure preceded overview
relevant notation background followed description experiments
discussion related work summary integrates two conference
papers bonet geffner b providing proofs additional details work
related proposals tractable forms belief tracking logical probabilistic
frameworks doucet freitas murphy russell amir russell yet
two key differences one start exact account used determine
certainty whether goal achieved action applicable second
belief tracking accounts complete formulas order
sound complete planner beliefs observations action preconditions
goals required important observations action preconditions
goals given structure actions sensors goals exploited
track beliefs efficiently observation implicit lazy belief tracking
schemes incomplete information appeal sat solvers hoffmann
brafman regression shani brafman well say related work
section

model
model sensing simple extension model conformant
goal achieved certainty spite uncertainty initial
situation action effects goldman boddy smith weld model
conformant characterized tuple hs sg f
finite state space
non empty set possible initial states
sg non empty set goal states sg
set actions denoting sets actions applicable
f non deterministic state transition function f denotes nonempty set possible successor states follow action
solution conformant model action sequence maps possible initial state
goal state precisely ha conformant plan possible
sequence states sn si f ai si n
action ai applicable si sn goal state
conformant cast path finding beliefs defined
sets states deemed possible time point bonet geffner
initial belief b belief ba action belief state b
ba b f



real time animation several instances minesweeper seen https
www youtube com watch v u ow n ra source code graphical interfaces
obtained http code google com p belief tracking



fibonet geffner

action applicable b applicable state b formulation
conformant plan action sequence maps initial belief b goal belief bg
e set goal states
contingent sensing uncertainty
feedback model contingent model conformant extended
sensor model sensor model function mapping state action pairs
observations tokens expression means token possible
observation true state system last action done
observed token provides partial information true possibly hidden system
state token may possible different states two different tokens
belong means one observed
last action sensing deterministic noiseless contains one token else
non deterministic noisy contingent model similar pomdps kaelbling
littman cassandra uncertainty encoded sets states rather
probability distributions
executions contingent setting sequences ha pairs actions
ai observations oi b bi belief state action ai applied oi
token observed belief ba action ai given
belief bi boa follows observing token
boa ba



execution ha possible starting initial belief b action
ai applicable belief bi e ai bi belief bi
empty
line contingent action selection strategy sought ensures
possible executions end goal belief line contingent action
selection strategy sought ensures single execution
interaction real system simulator ends goal belief cases
action selection strategy expressed partial function beliefs called policy
b action belief b function partial
defined initial belief b non goal beliefs b namely
reached b line reached
b line

language
syntactically conformant expressed compact form set
state variables convenience assume multi valued precisely
conformant tuple p hv gi v stands
variables x one finite discrete domain dx set clauses
v literals defining initial situation set actions g set v literals
defining goal every action precondition p given set v literals
multi valued variables compiled boolean variables compilation affects syntactic
structure principle structure could recovered boolean encodings
would complex formulation



fibelief tracking sensing

set conditional effects c e en c ei sets conjunctions
v literals conditional effect non deterministic n else n effect
deterministic
p hv gi defines conformant model p hs sg f
set possible valuations variables v sg sets valuations
satisfy g respectively set operators whose preconditions true
f non deterministic transition function collecting
successor states may follow selecting one head ei conditional
effect c e en whose body c true
contingent described extending syntactic description conformant compact encoding sensor model assume set
v observable multi valued variables necessarily disjoint state variables
v e state variables may observable formulas wa state
variables action possible value observable variable
formula wa implicitly encodes states observation literal
possible last action executed formulas wa different
values dy must logically exhaustive every state action pair must give rise
observation addition formulas wa different values
logically exclusive every state action pair gives rise single observation
sensing deterministic state variable x observable wa x x
formula x x
contingent p tuple p hv g v w defines contingent
model made conformant model hs sg f determined first four
components p sensor model determined last two components
iff valuation observable variables v
true formula wa w true dy
standard language representing contingent compact form featuring incomplete information non deterministic actions sensors two
distinctive features relation similar languages use multi valued variables
distinction state observable variables
illustration x encodes position agent encodes position
object seen agent x observable variable
z es n encoding whether
object seen agent
w
w defined
formulas wa z es ld x ly l wa z n ld x ly l
set possible locations action deterministic
sensor non deterministic sensor could used example agent cannot detect

presence
w object certain locations l suffices push
disjunct ld x l formulas characterizing wa z es wa z n
two observations z es z n would possible agent
position l
since conformant hv gi expressed contingent
hv g v w one dummy observable variable z z
v domain
conditional effects must consistent sense explained



fibonet geffner

dz observation model wa z true every action focus
general contingent
likewise convenience variable boolean often represent literals
true f alse similarly variable observable unless stated
otherwise assume observation model deterministic formula
wa f alse becomes complement formula wa true

belief tracking flat belief tracking
execution p hv g v w sequence ha
actions ai observations oi ai observation oi full
valuation observation variables v execution ha possible
p non empty belief state b generates sequence beliefs b bn
preconditions action ai true belief bi belief states
bi empty belief tracking contingent
determining execution possible final belief state achieves goal
definition belief tracking btp determining whether
execution ha p hv g v w possible
whether resulting belief state makes goal g true
complete planner needs solve determining actions applicable given execution observations may whether goal
achieved machinery develop aimed slightly general
belief tracking generalized executions executions ha
observations oi partial rather full valuations observable variables moreover suffices consider generalized executions observations
valuations single observable variable observations oi represented
observation literals
definition generalized belief tracking gbtp determining whether generalized execution ha p
hv g v w possible whether achieves given goal precondition
observation literal
given procedure deciding gbtp simple decide btp execution
calling procedure deciding gbtp generalized execution replaces
observation oi sequence observation literals true oi separated
op actions actions effects
proposition btp polynomial time reducible gbtp
interest belief tracking convenient focus
generalized none belief update equations sensitive
distinction simplicity however talk belief tracking make
explicit distinctions btp gbtp normal generalized
executions needed


fibelief tracking sensing

plain solution belief tracking given updates expressed
eqs belief states explicitly represented sets states states full
valuations state variables actions transition function observations
obtained syntactic representation
definition flat belief tracking execution ha
p starts belief b contains states satisfy initial situation
setting next belief state bi boa b bi ai oi
complexity flat belief tracking exponential number state variables yet
often state variables add complexity tracking beliefs syntactically
happens state variable x initially known variables causally
relevant x see initially known well neither x variable
causally relevant x appears head non deterministic effect say
variables determined value every reachable belief known fully
predicted preceding actions preceding values example variable
encodes position agent wumpus game determined initial
value known effect actions variable deterministic depends
previous value
formally define set variables determined
largest set state variables x initially known every
state variable x causally relevant x belongs set set variables
easily identifiable low polynomial time complexity flat belief tracking
expressed follows
theorem flat belief tracking exponential vu vu v vk vk
set state variables determined
given first question arises bad naive flat belief
tracking interestingly following decision shows flat belief
tracking bad worst case
theorem btp gbtp turing complete class pnp
btp gbtp decided polynomial time oracle np sat
example every decision decided polynomial time
oracle decided polynomial time oracle btp gbtp
complexity class pnp includes classes np conp contained pspace
sipser

structure width
possible improve complexity flat belief tracking specific
exploiting structure introducing graph captures
structure convenient make explicit assumptions restrict
generality make definitions simpler first assume
formula encoding initial situation contains positive negative literals e unit
clauses restrictive assumption since set clauses encoded


fibonet geffner

help dummy observations second assume non deterministic effects
involve one variable heads achieved adding extra
variables effects example non deterministic effect x z z
action replaced deterministic effects x w z x w z
along non deterministic effect true w w w random boolean
variable initially unknown changes randomly third assume
consistent meaning initial situation logically consistent initial
belief state b empty effects action consistent
heads deterministic conditional effects applicable reachable state along
choice heads non deterministic conditional effects applicable
jointly consistent last assume every observable variable relevant
variable appearing precondition goal notion relevance spelled
observable variables dont comply condition eliminated
relevant information loss
relevance width
variable x whether state variable observable variable immediate
causes x defined follows
definition variable x immediate cause variable p written
x ca iff x x occurs body c conditional effect c
e en occurs head ei n observable variable x
occurs formula wa dy action
basically x immediate cause uncertainty x may affect
uncertainty directly variables x necessarily immediate
cause x appears precondition action affects preconditions
must known certainty hence propagate uncertainty notion
causal relevance given transitive closure immediate cause relation
definition x causally relevant p x x ca x causally
relevant variable z causally relevant
order test whether given literal z z known certain execution
ha ai actions conformant setting possible one
progress state variables x causally relevant z
proposition belief tracking deterministic non deterministic conformant setting exponential maximum number non determined variables causally
relevant variable appearing action precondition goal
bound closely related bound obtained palacios geffner
deterministic setting indeed refer number non determined state variables
semantic point view means state possible successor state
action applicable e f iff every literal x x true x x head
deterministic non deterministic conditional effect action whose body true x x
true effect action x x head x x whose body
true



fibelief tracking sensing

causally relevant x conformant width x set width p
maximum conformant width variables x appear action preconditions
goals proposition simply says belief tracking non deterministic conformant
exponential width width notion however exactly
equivalent notion palacios geffner used deterministic setting
defined variables rather literals say distinction
general however two accounts yield similar widths deterministic
benchmarks
contingent setting variables whose uncertainty may affect variable
z causally relevant z situation similar one arising
bayesian networks pearl relevance flows causally direction
arrows evidentially observations direction arrows
definition x evidentially relevant p x observable variable
causally relevant x
notion relevance captures transitive closure directional causal evidential relations
definition x relevant x causally evidentially relevant x
relevant variable z relevant
thus variable x w relevant variable wn iff chain variables
wi n variable wi causally evidentially relevant next
variable wi chain example x causally relevant z
observable variable relevant z evidentially relevant x x
causally relevant z
bayesian networks relevance relations understood graph theoretically
thus directed edge z stands z immediate cause x
causally relevant x directed path x x x evidentially
relevant x x observable variable directed path x
x terms bayesian networks relevance relation takes transitive closure
causal evidential relationships encodes potential dependency given
may observed information certain variables observed
observable unlike bayesian networks means however relevance relation
symmetric namely cause x relevant automatically
relevant x causally relevant observable variable z may
context variable set variables relevant
x
definition context variable x ctx x denotes set state variables
relevant x
width variable defined number state variables context
determined
definition width variable x w x ctx x vu vu v vk
vk set state variables determined


fibonet geffner

width
definition width w p conformant contingent p whether deterministic maxx w x x ranges variables appear goal
action precondition p
relation width complexity expressed
theorem belief tracking p exponential w p
proof theorem follows
achieves complexity bound presented significance theorem belief
tracking domains width bounded constant becomes polynomial
number variables see examples complexity bound
similar ones obtained deterministic conformant contingent palacios
geffner albore et al main difference account applies
non deterministic well account simpler general
see slightly less tight deterministic domains

examples
illustrate definitions benchmark domains starting det ring
cimatti roveri bertoli domain ring n rooms
agent move forward backward along ring room window
opened closed locked closed initially status windows
known agent know initial location domain agent
means obtaining information status windows position
goal windows locked plan deterministic conformant
repeat n times actions close lock f wd skipping last f wd action alternatively
action f wd replaced action bwd throughout plan state variables
encode agent location loc n status window
w open closed locked n location variable loc causally relevant
window variable w window variable w relevant loc w k
k w causally relevant observable variable none variables
determined largest contexts window variables w include two
variables w loc width domain independent
number state variables w grows number rooms n causal
graph directed edge x means x immediate cause
shown figure
non det ring variation domain actions f wd bwd
agent non deterministic effect status windows locked
capturing possibility external events open close unlocked windows
non determinism effect causal graph variables
change effect contexts domain width remains bounded equal
number rooms n
last version domain considered cimatti et al non det ring key
key required lock windows initial position key known


fibelief tracking sensing

loc

loc

w

w



w n

w

det ring

w

kloc



w n

h

b cont non det ring key

figure causal graphs det ring left cont non det ring key
right latter variable h observable tells us whether key held
arc x denotes x immediate cause graphs variables
preconditions goals underlined yellow colored observable variables
enclosed blue circle
yet agent tries collect key room key agent
key conformant plan repeat actions pick f wd n
times skipping last f wd action following plan det ring non detring key additional state variable kloc n hand represents
key location agent location loc relevant kloc relevant window
variable w size contexts ctx w width
increase width however remains bounded value independently
number rooms n
presence partial observability analysis similar necessary
consider relevance relationships arise due presence observable variables
example one express agent observe whether holding
key boolean observable variable h deterministic observation
model wa h true given kloc hand actions relevance
relation among state variables arises adding observable variable
loc kloc causally relevant h loc relevant kloc
way around yet affect domain width remains
n causal graph resulting domain shown figure b

factored belief tracking
belief tracking p exponential width w p p
achieves bound exploits relevance relations encoded variable contexts
decomposing beliefs particular variable relevant variable
width beliefs variable maintained separately
belief decomposition obtained projecting p smaller ps
set state variables p semantically projected ps capture
dynamics p expressed subset state variables syntactically
projected ps defined means logical notion projection
encoded making holding key precondition rather condition
locking windows encoding variable kloc longer relevant window
variables w according definitions kloc hand must known certainty
hence uncertainty windows variables w affected uncertainty kloc
encoding domain width reduces



fibonet geffner

logical projection formula f subset variables refers formula f
defined variables valuations satisfy f exactly
extended valuations satisfy f darwiche marquis likewise
projection conditional effect c e e n conditional effect cs es esn
body c effects e replaced logical projections cs esi
respectively
definition projection p hv g v w set variables
v ps hvs gs vs ws vs gs
initial goal formulas g logically projected variables
preconditions conditional effects projected vs v ws set
formulas wa w logically projected variables
notion projected used setting
classical introducing class admissible heuristics known pattern databases
edelkamp use richer contingent setting decomposing belief
tracking p belief tracking smaller ps obtained
p projecting away state variables p
defining target subproblems ps decomposition notice variables
state observable variables p belong vs
vs meaning observable variables projected ps
moreover formulas variables ws become wa true
dy meaning ps observations possible
regardless state last action done observations thus completely
irrelevant ps effect case p ps share set actions
set observations even actions observations ps may
defined smaller set state variables
target subproblems ps defined terms set state variables
relevant precondition goal variables recall assume observable
variable relevant action precondition goal else variable
could safely removed
definition projection p variable x denoted px
projection ps p set variables ctx x ctx x context
x p e set state variables p relevant x
two basic properties projected px
proposition variable x appears goal precondition number state
variables px determined bounded w p
proposition execution ha possible p possible
px state variable x p
b belief execution p call bx belief
execution projected px completeness
decomposition global belief b p expressed terms local beliefs bx
subproblems px treat beliefs b bx relations database


fibelief tracking sensing

state variables beliefs columns possible combination values
states local states rows projection b set variables thus
represents combination values variables possible b
join bx
nby represents combination values x sets variables
two beliefs bx x coincide variables x
example b contains valuations states x x
projection x b contain valuations x x likewise b contains
z z join b
n b contain x z
x z
theorem state variable x let b bx beliefs execution
possible p px
x bx x b



equation states literal x x possible true global belief b iff
possible belief bx execution projected
px exactly type completeness needed variable
x involved action precondition goal stronger form completeness
formulas expressed


nx bx b




n stands join operation x ranges precondition goal variables
needed actually necessarily true even state
variables appear context ctx x example value boolean variable
z initially unknown variables x initially false action conditional
effects z x z z belief b two states corresponding
terms z x z x x precondition goal variables
relevant projected px contain variables
x z projected py contain variables z belief
bx resulting execution action px include local states
corresponding terms z x z x belief py include
local states corresponding terms z z clearly projection b
bx variable x coincide dictated join two local
beliefs bx yield global belief b would correspond indeed
formula x false latter former prove
inductively size execution
theorem execution possible p iff possible subproblems
px x precondition goal variable p execution precondition
goal variable x x x resp x x true b iff x x resp x x true
bx b bx beliefs executing p px respectively
since plain belief tracking projected px exponential size
px bounded w p determined variables excluded follows


fibonet geffner

theorem flat belief tracking projected px x
precondition goal variable p provides sound complete factored
belief tracking p time space exponential width p
call factored belief tracking order check whether precondition
goal literal x x true execution factored belief tracking checks whether
x x true belief bx execution subproblem px
execution possible action precondition x x true bx
empty belief subproblem theorem thus says factored belief tracking
sound complete btp time space complexity exponential
width indeed since every observable variable relevant precondition
goal variable x assumption every direct cause z relevant x
evidentially relevant x thus formula wa evaluated bx
determine whether observation necessary possible impossible applying
action thus factored belief tracking solves generalized btp
illustration theorem let us go back det ring p whose
structure analyzed theorem implies order check whether given
possible execution achieves goal p sufficient check whether goal literal
w locked n achieved execution subproblem pw thus
factored belief tracking p done n time since n subproblems
pw one involving variables w constant size domain loc
domain size n
exact situation arises non deterministic conformant non det
ring whose causal graph one det ring hand nondet ring key subproblems must keep track kloc variable encoding key
location thus belief update operation requires n time still much better
flat belief tracking p requires time exponential n complexity
applies longer conformant agent observe whether
holding key
experimental figures domains shown table factored belief
tracking used combination simple heuristics experiments run
xeon woodcrest cpu running ghz gb ram planner
kacmbp cimatti et al uses obdd belief representation cardinality
heuristics solve n rooms producing plans
steps slightly seconds non det ring key conformant planners
palacios geffner cannot used non deterministic
tables b scalability factored belief tracking context
greedy best first search p
heuristic h b similar one used albore ramirez
geffner h b ni h bi bi belief factor projected
goal variable w representing status ith window h bi
representing fraction states bi goal w locked false displayed
tables resulting planner scales polynomially non det ring key
rooms produces plan actions seconds contingent
version agent detects key room cont detring key policy greedy cardinality heuristic h b maxni bi used instead


fibelief tracking sensing

n

steps

exp

time

n

steps

exp

time

n

avg steps

avg time


























































































































det ring key

b non det ring key

c cont det ring key

table conformant contingent ring obtained combining factored belief tracking simple heuristics data point panel c contingent
average sample standard deviation random instances times
seconds column exp contains number expansions

ties broken randomly bi belief factor goal variable w
seen table c resulting planner runs polynomial time solve
rooms thus heuristic policy weak long executions
belief tracking efficient scales well

causal belief tracking
factored belief tracking exponential width many however
width may high method usable practice illustration
consider p state variables x xn observable variables
oi true iff xi xi sensors thus wa oi true xi xi
wa oi f alse xi xi actions n let us assume
actions may affect xi variables introduce
causal relations among state variables appear preconditions
goals causal graph shown figure width n
state variables interact indeed variable xi relevant variable xk
relevance flowing xi xi vice versa variables causally relevant
observable variable oi evidentially relevant
p projected pxi coincide denote
contexts state variables include state variables
focus different decomposition belief tracking maps p
smaller subproblems pxc whose size bounded number state variables
causally relevant given precondition goal observation variable width
measure called causal width shown figure
width n causal width explore belief tracking
exponential causal width analyze conditions


fibonet geffner

x

x

x



xn











xn

figure causal graph layer network example state variables x xn
observable variables immediate causes observable oi
variables xi xi precondition goal variables appear underlined
yellow box observable variables appear within blue circle since xi variables
relevant width n hand since
two variables causally relevant precondition goal observable variable
causal width
complete first generalize make explicit decomposition underlying
factored belief tracking
definition decomposition p pair ht bi set
variables x appearing p called target variables decomposition b
collection beams b x associated target variable made
state variables p
decomposition ht bi maps p set subproblems pxd one variable
x corresponds projections p state variables beam b x
decomposition underlies factored belief tracking
definition factored decomposition f htf bf p decomposition
target variables tf given state variables x appearing action preconditions goals
beams bf x given state variables relevant x
factored belief tracking flat belief tracking applied subproblems determined
factored decomposition introduce next different
decomposition
definition causal decomposition c htc bc p decomposition
target variables tc given observable variables state variables appearing
action precondition goals beams bc x given state variables
causally relevant x
causal decomposition determines larger number subproblems subproblems
generated observable variables subproblems smaller beams
bc x contain state variables causally relevant x opposed
variables relevant x causal width given size
largest beam causal decomposition discounting variables determined

definition causal width variable x p wc x number
state variables causally relevant x determined causal width


fibelief tracking sensing

p maxx wc x x ranges target variables causal decomposition
p
first simplest belief tracking defined causal decomposition
call decoupled causal belief tracking runs time space
exponential causal width
definition decoupled causal belief tracking decoupled cbt flat belief tracking
applied independently pxc determined causal decomposition
c htc bc p subproblem pxc p projected variables
bc x x tc e pxc pbc x
since causal width never greater width often much smaller decoupled
cbt runs much faster factored belief tracking general however comes
price express expression b denoting projection states
belief b variables
theorem decoupled cbt runs time space exponential wc p
sound complete target variable x causal decomposition
b bx beliefs resulting execution p pxc respectively
bx bc x b necessarily true bx bc x b
one reason incompleteness beliefs bx associated different target
variables x assumed independent decoupled cbt may
true indeed causal decomposition may give rise beam bc
involving variable x second beam bc z involving variable x another
variable x variable observed x x may become false
observation z may lead x x becoming false well yet decoupled cbt
inference cannot captured information flow across beams factored
decomposition situation cannot happen variable x relevant variable
x hence beams contain x necessarily contain x x relevant x
causally relevant z evidentially relevant x
causal decomposition beams kept small closing relevance
relation beliefs beams longer independent however
regarding beliefs tables relations consistency relation among local beliefs
causal decomposition enforced means join operation resulting
coupled causal belief tracking abbreviated simply causal belief tracking
definition causal belief tracking cbt belief tracking operates
causal decomposition c htc bc setting beliefs b x time beam
bc x projection bc x initial belief x tc successive beliefs
bi
x
bi
n biy oa tc relevant x

x bc x
ai oi action observation time execution
biy oa boa eqs b biy
cbt beliefs tracked independently subproblems pxc
causal decomposition rather beliefs first progressed filtered independently


fibonet geffner

merged projected back onto beams making consistent
progression filtering local beliefs causal decomposition performed time space exponential causal width full consistency
operation captured join project operation requires time worst case
exponential width
theorem cbt space exponential causal width time
exponential width
cbt sound incomplete however range cbt complete
unlike decoupled cbt large meaningful enough includes example three
domains considered experiments battleship minesweeper
wumpus express completeness conditions cbt introducing notion
memory variables
definition state variable x memory variable p value x k
variable x time point k execution determined uniquely observation
value x x time point k actions execution initial
belief state
example static variables memory variables change thus
knowing value time point determines value point determined
variables section memory variables since value x k variables
determined initial belief actions done time k likewise variables
permutation domains actions permute values variables amir russell
memory variables three sufficient conditions state variable
memory variable easy check said causally
decomposable following condition holds
definition p causally decomposable every pair beams bc x
bc x causal decomposition p non empty intersection x
observation variable variables intersection memory variables
variable w causal decomposition relevant x x
whose causal beam bc w contains bc x bc x
causally decomposable filtering implemented updates
cbt equation suffices completeness
theorem causal belief tracking sound complete causally decomposable
importance many meaningful domains whose
instances causally decomposable particular domains variables appear
two different beams static include minesweeper domains variables
appear two different beams static determined includes wumpus
non static variable agent location determined domains
hidden non static state variables appear one beam includes battleship
hidden non static variables appear intersection beams cases
well sect present variation wumpus monster moves
non deterministically grid instance causally decomposable



fibelief tracking sensing

approximation beam tracking
causal belief tracking shows possible track beliefs
sound complete manner large meaningful class considering
beliefs subproblems smaller factored decomposition
however space exponential causal width
time exponential width global consistency operation
enforced beam tracking final belief tracking consider
replaces global consistency operation local consistency operation
performed polynomial time beam tracking thus approximation causal belief
tracking aimed efficient effective rather complete
definition beam tracking belief tracking operates causal
decomposition c htc bc setting beliefs b x time projection initial
belief beam x tc setting successive beliefs bi
x two steps first


set progressed filtered belief ba b bx ai oi
ai oi action observation time execution local form
consistency enforced upon beliefs means following updates fixed
point reached


bi
nbi

x bc x bx
refers target variable causal decomposition bc
bc x non empty
filtering represented iterative update eq defines form relational
arc consistency dechter beek equality constraints among beams sharing
common variables enforced polynomial time space size beams beam
tracking remains sound complete causally decomposable however
incompleteness sole replacing global local consistency

extensions modeling width
testing beam tracking empirically present two simple extensions
language contingent useful modeling briefly discuss
modeling choices affect causal width first extension allows
use defined variables preconditions goals second extension allows use
state constraints restricting possible value combination subsets variables
defined variables
variable z domain dz defined function subset state variables
function belief variables example boolean variable
z defined true two variables x equal third variable w
known true defined variables z function set sz state variables
function belief variables handled action preconditions
goals introducing beam decomposition includes variables sz
along variables relevant causally relevant according whether
decomposition factored causal width causal width follow


fibonet geffner

size largest beam factored causal decompositions
determined variables excluded
state constraints
state constraints used restrict value combinations given subsets state variables game battleship example modeled state variables associated
cells grid representing whether cell part ship size
ship cell belongs relative position cell within ship
cell belongs whether ship placed vertically horizontally state variables however independent indeed ship size
horizontally placed cell cells must belong
ship
formally state constraint represented formula c state variables
encoded means dummy observable variable observed
true observed true states c holds e model
wa true c every action implementation however pays treat
constraints c relations set valuations satisfy c include
joins beliefs include variables c causal belief tracking
effect completeness complexity beam tracking
changing update

n c
n
n cn
n bi
bi

x bc x bx



c cn state constraints whose variables included bc x bc
makes local consistency stronger effect complexity moreover one pair beams state constraint state constraints
increase causal width constant factor yet
effective causal width change beams associated
dummy observables introduced constraints redundant ignored
later case beam tracking constraints ci need stored
extensional form relations handled intentionally boolean functions
test whether assignment join two beams satisfies constraint
modeling width
complexity belief tracking function width causal width
turns depends way encoded often small
changes encoding drastic effect resulting widths example
wumpus russell norvig natural define conditions
stench signal received setting observation model

w
w
wa stench true c pos c c wumpc
pos encodes agent position c ranges possible cells c ranges cells
adjacent c wumpc denotes presence wumpus c encoding
however beam observable variable stench includes wumpc


fibelief tracking sensing

szx

hitx

waterx

nhitsx

ancx

hzx

figure causal graph fragment battleship circled variables observable
others state variables one type variable cell x
grid causal width
variables hence whose size grows grid size better alternative
beams bounded causal width exploit fact position agent pos
determined taking advantage observable variable stench replaced
observable variables stenchc one cell grid sensors characterized
model
wa stenchc true pos c

w

c

wumpc

beams stenchc variables contain four wumpc variables one cell
c adjacent c way causal width wumpus becomes bounded
independent grid size number wumpus pits see
idea
w generalized automated observation model form wa z
z x x x x formula constructed determined variables
replaced observation wa zx z x x expanding
number observable variables likewise multiple observation wai z z
one observable variable z different actions ai ir conveniently replaced
observation wai zi z r different observable variables zi
different formulas involve different variables alternatives domain encoding
difference bounded unbounded causal width hence whether
complexity beam tracking grow polynomially exponentially

experiments
tested beam tracking large instances battleship minesweeper wumpus combination simple heuristics action selection make use computed beliefs width bounded hence neither factored
causal belief tracking used except small instances hand
domains small bounded causal widths encodings provided hence
beam tracking runs efficiently time space exact belief tracking
domains difficult kaye scott stege rooij sizes
instances considered much larger used contingent moreover
domains full contingent solutions thus compare line
planner relies handcrafted heuristics two reported solvers rely belief
tracking tailored domains consider non deterministic version
wumpus domain obtained xeon woodcrest cpu
running ghz gb ram


fibonet geffner

battleship
battleship popular two player guessing game standard version consists four
ships length units secretly placed grid ship
adjacent diagonally adjacent another task sink ships firing torpedos
specific cells fired torpedo told whether torpedo hits water ship
ship sunk cells hit encoded state variables
per cell x hitx tells torpedo fired cell szx tells size
ship occupying cell ship hzx tells ship placed horizontally
vertically true ship nhitsx tells number hits ship
ship ancx tells relative position ship cell ship
single observable boolean variable water deterministic sensor model given
wf ire x waterx true szx action model complex firing
torpedo x may cause change variables associated cells x
indeed denotes maximum size ship standard game f ire x
includes conditional effects variables referring cells x vertical
horizontal distance units goal achieve equality
nhitsx szx cells may contain ship state constraints used
constraining sets state variables described encoding causal beams
never contain variables even though width bounded
grows grid size figure shows fragment causal graph battleship
table shows two policies random policy fires non fired cell
random greedy policy fires non fired cell likely contain ship
approximations probabilities obtained beliefs maintained beam
tracking difference performance two policies shows beliefs
informative moreover game agent fires torpedos
average matching quite closely average silver veness
obtained combination uct kocsis szepesvari action selection
particle filter doucet et al hand tuned domain belief tracking
however involves simulation per action order seconds
per game instances greedy takes seconds per game
minesweeper
objective minesweeper clear rectangular minefield without detonating mine
play opens flags cell first case cell contains mine game
terminated otherwise integer counting number mines surrounding cell
revealed initial configuration minesweeper consists n minefield k
randomly placed mines three standard difficulty levels game
made boards mines respectively
rich encoding allows accommodate observation ship fully sunk
experiments however observation used order compare reported
silver veness
probabilities events defined variables beam obtained ratio number states
beam satisfy event total number states beam



fibelief tracking sensing

avg time per
dim

policy

ships

torpedos

decision

game






greedy
greedy
greedy
greedy











e
e
e
e

e
e
e







random
random
random
random











e
e
e
e

e
e
e
e

table battleship table contains greedy random
policies described text board ships sizes
size board increased n number ships size gets multiplied
n average sample standard deviation number torpedos required sunk
ships calculated random instances board shown average times
seconds

encoded mn boolean state variables minex openedx
f laggedx denote presence absence mine cell x whether cell
opened flagged mn observable variables obsx domain
two type actions open x f lag x first precondition effect f laggedx openedx second precondition minex
effect f laggedx sensor model given formulas specify integer
agent receives opening cell terms status minex variables
surrounding cells formulas
wopen x obsx minex
wopen x obsx k minex

w

tn x k

k

wopen x obsx k true

x x k

wf lag x obsx k true

x k

n x k terms cell variables minex surrounding cell x
make exactly k literals true initial situation variables openedx
f laggedx false minex unknown goal get disjunction f laggedx openedx cell x without triggering explosion
beams factored decomposition contain mn state variables making beams identical resulting unbounded width mn causal
width hand causal beams openedx f laggedx identical
contain variables beams obsx contain minex variables
cells x surround cell x along variable minex figure
contains fragment causal graph minesweeper


fibonet geffner

minex

minex

f laggedx

openedx

obsx
figure sketch causal graph minesweeper observable variables obsx
state variables minex f laggedx openedx cell x cell x
represents one adjacent cells x since cells causal width

avg time per
dim

mines

density

win

guess

decision

game


























e
e
e
e






table minesweeper table contains three standard levels
game plus larger instance average runs shown average
times seconds

table shows three standard levels game much larger
instance battleship greedy policy used action selection makes use beliefs
computed beam tracking flagging opening cell certain content else
selecting cell lowest probability containing mine opening
probabilities approximated beliefs beams indicated despite
complexity game np complete checking consistency kaye conpcomplete inference scott et al beam tracking scales well solves difficult
games quickly moreover shown table competitive recently
reported lin buffet lee teytaud obtained combination
uct action selection domain specific csp solver tracking beliefs success
ratios report instances mines
instances mines instances
mines authors report times
wumpus
wumpus game russell norvig consists maze agent
moves around looking gold avoiding hidden pits wumpus monsters
initially agent know positions gold pits wumpuses senses
glitter cell gold senses stench breeze adjacent
cell wumpus pit respectively n instance described known state
variables position orientation agent hidden boolean variables
cell tell whether pit wumpus nothing cell one


fibelief tracking sensing

heading
gold pos

pos

pitx

wumpx

glitter

deadx

breezex

stenchx

figure fragment causal graph wumpus observable variables
breezex stenchx deadx state variables heading pos pitx wumpx
x ranging grid cells cells x stand cells adjacent x
causal width cells state variables heading
pos determined
hidden state variable stores position gold observable variables boolean
glitter breezex stenchx deadx x ranging different cells
actions move forward rotate right left grab gold causal width
encoding width grows n figure shows fragment
causal graph wumpus size causal beams breeze stench
variables bounded cell neighbors heading
position variables agent determined
table shows different grid sizes number pits wumpus
agent selects actions greedy policy heuristic returns length
minimum length safe path nearest cell may contain gold beliefs
computed beam tracking used determine cells safe known contain
wumpus pit may contain gold aware tested
scalable solver wumpus making comparison exception recent
lw planner built work bonet geffner figures table
clearly beam tracking computes beliefs effectively efficiently domain
instance instances pits wumpus solved successfully
time less seconds average moreover unsolved instances
actually shown unsolvable sense agent could reach unvisited
cell safe manner proved unsolved instance calling sat solver
propositional theory encodes game literals learned agent
execution
non deterministic moving wumpus
order evaluate beam tracking complex non deterministic domain nondet ring key domain section small width designed non deterministic
variant wumpus domain moving wumpus one wumpus grid
wumpus moves around non deterministically everytime agent moves
grid still contains hidden pits hidden gold order make game safer
agent wumpus sensor enhanced detect position wumpus
euclidean distance less agent else safe strategy escaping
death general


fibonet geffner

avg time per
dim

pits wumpus

density

decisions

win

decision

game
























































e
e
e
e
e
e
e
e
e
e

e
e
e
e







table wumpus size performed runs table shows
total number density pits wumpus grid total number decisions
across runs percentage runs agent found gold average
time seconds per decision game

moving wumpus causally decomposable thus incompleteness beam tracking
domain due replacement full consistency among beams done
cbt weaker efficient relational arc consistency done beam tracking
see observe variable memory variable position
wumpus wloc however two beams causal decomposition
contain variable beam wloc beam observable variable
tells position wumpus former beam contained latter beam
experimental beam tracking domain presented table
policy obtained aot lookahead ao bonet geffner
builds lookahead tree depth expansions heuristic function
measures distance agent position closest unvisited cell
evaluated different instances grids nn n
number pits equal n grid size performed
evaluations different initial configurations wumpus pits gold randomly
placed instance game may turn unsolvable gold isolated
agent pits agent finds position safe movement
agent exceeded maximum number actions set times number
cells grid

indeed general version involves wumpuses move non deterministically
grid version causally decomposable beams positions wumpuses
one wumpus contained beam observable variable general case
would causal width equal



fibelief tracking sensing

avg time per
dim

pits

density

decisions

win

decision

game



















































e
e
e
e






e









table non deterministic moving wumpus domain grid size
averages runs shown table shows total number density pits
grid total number decisions across runs percentage runs
agent found gold average time seconds per decision game

related work
formulation closely related recent translation approaches
conformant contingent compile beliefs away palacios geffner
albore et al translations however assume deterministic
account yields similar widths deterministic benchmarks
simpler defined multi valued variables general
handles non deterministic actions yet account less tight deterministic illustration x xn actions ai
conditional effect xi g n conformant goal g width
palacios geffners account width n relevance account
literals indeed finer one variables difficult
generalize non deterministic settings difference seem practical
effects benchmarks disjunctions initial situation exclusive
implicitly encode possible values set multi valued variables another important
difference approaches complete translations exponential
width complexity bound worst case e variables contexts
highly correlated actual complexity factored belief tracking much lower
notion width appears bayesian networks inference exponential
width network pearl three differences pointed
relation notion width exploit knowledge certain variables
observable determine use knowledge certain variables
determined make use distinction action conditions preconditions example agent go n doors
whose status open closed observed agent near door
width smaller n modeled dynamic bayesian network door
variables affect agent location variable setting however width


fibonet geffner

status door need known agent open close
walk door
causal decomposition resulting causal belief tracking similarly related ideas variable splitting renaming graphical
variable x appearing different factors replaced different variables xi one per
factor choi darwiche ramirez geffner width
reduced equality constraints relating xi variables must enforced
approximate belief tracking dynamic bayesian networks pomdps
appealed idea decomposing global beliefs variables local beliefs subsets variables boyen koller shani poupart brafman shimony
key difference causal belief tracking provide
conditions type decomposition remains sound complete
hand deal uncertainty represented sets states probability
distributions
number logical schemes representing tracking beliefs used
developed contingent appealing obdds cnf dnf representations
bertoli et al bryce et al et al relevance considerations tran
nguyen son pontelli lazy sat regression techniques hoffmann brafman rintanen shani brafman none approaches however
tried domains considered instances similar size
indeed causal width domains bounds complexity beam tracking similar bound known schemes unlike beam tracking complete
moreover principle schemes handle non determinism naturally
methods sat k replanner bonet geffner
efficient effective belief tracking method polynomial
fully general cannot deal non deterministic actions follow lw planner
bonet geffner shares features k replanner complete width

experimental perspective several comments questions order
relation beam tracking used belief tracking contingent
planners existing benchmarks first practically benchmarks used
far contingent easy belief tracking point view indeed
quadratic linear time representation beliefs clg lw respectively
shown adequate including wumpus
exception minesweeper belief tracking provably np hard
linear approximation lw turns much weaker beam tracking failing
solve without guessing instances beam tracking solve
way bonet geffner means whether width
low high effective width cases beam tracking cannot help
computationally actually may degrade performance except minesweeper beam
tracking exponential causal width lower width general
usually higher effective width p minimum non negative
integer value contingent translation xi p palacios geffner albore
et al solution effective width never greater width
much smaller width causal width example


fibelief tracking sensing

avg time per
dim

mines

density

succ

failure

aborted

decision

game

































table comparison sdr line planner minesweeper instances sdr fed
random hidden states solutions action sequences computed beam tracking
guessing planner task check applicability actions given
solution whether goal holds instance size sdr tested different
random column failure indicates number times sdr able
verify correct solution column aborted indicates number times
sdr terminated early due bug times seconds beam tracking takes
seconds solving instances see table

actions ai conditional effects map valuations vi set variables
x xn goal literal width causal width smaller
n variables xi causally relevant yet effective width
may values xi variables observed directly
inferred observations goal achieved without
actions sense notion effective width provides lower bound
number state variables whose uncertainty must tracked jointly order make
solvable notions width characterized syntactically provides upper
bound number state variables whose uncertainty must tracked jointly
solution would missed gap two bounds large indeed
obtaining syntactic characterizations former open
related question belief tracking used contingent regression obdds cnf dnf scale domains
general comparison complete exponential incomplete polynomial beam tracking domains bounded causal width would
fair would still interesting easy cases scale polynomially exponentially performing tests however
simple requires getting code planners would
follow fixed common policy instance thus leaving component aside
moreover even fixing policy instance enough planners
line hence track beliefs many possible executions one
case line planners
purpose illustration performed test one difficult
domains minesweeper supplying line planner sdr shani brafman
execution computed beam tracking along hidden initial state
execution setting line planner sdr rather
tracking beliefs verify goal achievement preconditions
given applicable action time point minesweeper instances solved


fibonet geffner

beam tracking without guessing e pure inference first fixed choice table
shows sdr tracks beliefs form regression rintanen
shani brafman two observations made comparing
table table beam tracking first sdr takes
seconds average verifying solutions instances
respectively beam tracking takes seconds finding solutions
following greedy policy since finding solutions expensive verifying
one must least identify applicable actions time point difference
performance turns several orders magnitude growing grid size
addition regression mechanism sdr fails verify correct solutions several cases
aborts failure large number cases large instances case
performance gap surprising belief tracking minesweeper np hard thus
complete regression run exponential time worst case
beam tracking remains polynomial causal width domain bounded
challenging gap performance beam tracking complete belief
tracking similar beam tracking useful causal width
bounded large trading principled way completeness
tractability

summary
effective belief tracking crucial incomplete information sensing
intractable general shown elsewhere belief tracking deterministic exponential width parameter often bounded
small work introduced related formulation applies nondeterministic well factored belief tracking set
projected whose size bounded width beliefs goals
preconditions obtained directly beliefs projected
maintained independently developed different decomposition
scheme belief tracking maintains beliefs smaller projections
provided conditions complete causal belief tracking
space exponential causal width remains time exponential width global consistency beliefs smaller projections need
enforced finally beam tracking sound incomplete approximation causal belief
tracking global consistency replaced local powerful form consistency
beam tracking runs time space exponential causal width
often much smaller width tested beam tracking large
instances battleship minesweeper wumpus combination simple heuristics
action selection performance compares well state art solvers
orders magnitude less time future would explore extensions
proposed framework belief tracking pomdps belief states sets
states probability distributions particle provide common
approximation doucet et al


fibelief tracking sensing

acknowledgments
thank gabriel detoni java tewnta framework http code google com p
tewnta implementing client server games graphical interface developed graphical interfaces battleship minesweeper wumpus thanks
james biagioni wumpuslite java simulator http www cs uic edu jbiagion
wumpuslite html adapted run experiments wumpus guy shani
help running sdr hector geffner partially supported eu fp grant
spacebook micinn csd simulpast

appendix proofs
formal needed stated propositions theorems
main text article appear form lemmas
complexity flat belief tracking
let us first formally define decision btp gbtp btp language
btp hp p contingent possible execution b g
p hv g v w ha execution b belief
execution initial belief state gbtp btp except
consists triplets hp p contingent possible generalized
execution goal precondition observation literal b
observe btp gbtp respectively include tuples hp hp
empty initial belief state due two complementary literals appearing unit clauses since case every execution trivially possible b
trivially entails literal
proposition btp polynomial time reducible gbtp
proof idea map normal execution generalized execution
replacing pair ha oi sequence ha noopa noopa v
v observation literals made true one observable variable
v noopa action requires nothing nothing whose sensor
model wnoopa wa observation literal
formally given instance hp btp reduction must generate polynomial
time instance hp gbtp hp btp iff hp gbtp
p p extended actions noopa boolean
variable xgoal denotes achievement goal g p action agoal
precondition g effect xgoal dummy observable variable domain
wa true actions hand generalized
execution hm agoal xgoal clearly reduction works polynomial
time hp btp iff hp gbtp
theorem flat belief tracking exponential vu vu v vk vk
set state variables v determined


fibonet geffner

proof described definition flat belief tracking consists explicit representation
beliefs set states savings space time obtained noting
variables vk determined
explicit representation beliefs belief tracking gets trivially solved
checking whether execution ha possible literal
true reduces computing belief bn checking whether
bn empty whether every state satisfies time complexity
time needed compute initial belief b plus n multiplied time needed
compute bi bi plus time needed check validity among times
last easiest calculate linear size bn thus need bound
first two times begin proof showing flat belief tracking done
time exponential v reduce exponential dependency v vu
computing b enough generate possible states valuations variables
filter satisfy clauses total time thus spent
v v since v valuations clauses clause
v literals
time compute bi bi consists time check preconditions
hold b times compute ba b boa ba b bi ai
oi preconditions easily verified iterating states b time
bounded v v since contains v preconditions b contains
v states precondition satisfied state b execution
possible
belief ba computed b iterating state b
possible state ba checking whether f two nested
iterations require time v v v test f performed
time exponential v follows let ci e eni
collection conditional effects action trigger state f
applying one head conditional effect since
v variables among heads v heads map
rest subsumed first subsets heads size
v enumerated v time subset checking whether gets
mapped requires v time therefore checking f requires v time
well computing ba b
ba obtained boa calculated removing filtering ba states
comply observation state ba observation literal
compatible state belongs boa iff wa latter test
performed time linear wa size formula wa hence since
v observation literals compatible boa computed ba time ba
v wa wa max wa max ranges observation literals
boa empty ba non empty execution possible
calculation implicitly assume variable domains constant size otherwise
domains size n linear input size number valuations bounded v log n
instead v case number valuations still exponential number variables
well resulting complexity flat belief tracking



fibelief tracking sensing

times weighed see flat belief tracking done time
exponential v
reduce exponent v vu direct since determined
variable valuation across states reachable belief hence variables
contribute increase number states reachable beliefs likewise
subsets heads size vu need considered computing belief ba b
hence computations done time space exponential vu
theorem btp gbtp turing complete class pnp
proof proposition btp polynomial time reducible gbtp thus enough
hardness btp inclusion gbtp
class pnp set decisions decided deterministic
polynomial time oracle sat btp hard class
enough unsat reduced polynomial time btp since every
call np oracle replaced call btp oracle hand
gbtp belongs pnp enough
complement gbtp since pnp closed complementation runs polynomial
time makes calls oracle sat
hardness let c cm cnf theory boolean variables x xn
need construct polynomial time contingent p hv g v w
execution hp btp iff unsatisfiable variables
p boolean given v x xn q v z zm
empty set clauses g q true actions empty
preconditions conditional effects sensor model wai zi true ci q
wai zj true f alse j finally execution ha om
oi v valuation makes zi true zj false j
note initial belief contains n v valuations half satisfying
q half q first observation received valuations
satisfy clause c q preserved thus inductively observation oi
received valuations satisfy clauses c c ci q preserved
therefore b set valuations satisfy q hence non empty e
possible execution thus b g iff valuations q gone iff unsatisfiable
inclusion complement gbtp consists tuples hp b non empty
non executable b since consists unit clauses b iff
contains pair complementary literals assume ha n
literals observation literals let bi belief action ai
applied e bi boa b bi ai possible iff
bi non empty action ai applicable bi assume established
prefix ha ai possible checking whether possible
involves two operations checking precondition literal ai holds bi
checking whether least one state bai complies b bi
first check done calling sat oracle cnf theory
time indexed propositions state variable literals actions encodes possible
state trajectories fixed valuation actions time horizon theory


fibonet geffner

theory built way satisfiable iff state
time e bi satisfy least one precondition ai theory
polynomial size built polynomial time likewise second check
performed calling sat oracle cnf theory property
satisfiable iff state bi complies observation
hence decides complement gbtp works building theories
n stage accepts input satisfiable
unsatisfiable end accepted yet builds another theory
n instead checking whether precondition action ai doesnt
hold checks whether input literal doesnt hold n satisfiable accepts
since belief b satisfy else rejects hp gbtp
factored belief tracking
following state valuation variables subset variables write
denote valuation restricted variables called projection
general use symbols primed versions denote states
symbols u v primed versions denote projected states restrictions
partial valuations
proposition belief tracking deterministic non deterministic conformant setting exponential maximum number non determined variables causally
relevant variable appearing action precondition goal
proof proposition special case theorem theorem
theorem belief tracking p exponential w p
proof conformant setting observable variables hence evidential
relevance relation empty relevant relation equals causally relevant relation
therefore context variable x equals set variables causally relevant
x theorem establish proposition conformant setting
general setting theorem shown constructing belief
tracking whose time complexity exponential w p definition analysis
done series claims terminate theorem
proposition variable x appears goal precondition number state
variables px determined bounded w p
proof number state variables px ctx x number state variables
determined px ctx x vu definition width quantity
less equal w p x goal precondition variable
establish two fundamental lemmas progression actions projection observable following say subset variable causally
closed variable x variable causally relevant x
likewise causal closure variable z minimum respect set inclusion
subset variables causally closed includes z


fibelief tracking sensing

lemma factored progression consider consistent p let state
action applicable causally closed subset variables
every u u fs f u
every f fs
fs transition function projected ps therefore f
fs every state applicable f u fs u every
set u valuations applicable
proof part let u element fs let hs esi
collection
heads conditional effects csi esi trigger u
fixed know csi esi definition causally
relevant relation v ars c thus csi c therefore c effect
triggers applied effect affects variable
triggers applied indeed conditional effect c f affects
variable triggers c thus cs fs hs finally effects
trigger affect variables p ps since p
consistent set effects e
contained set h heads effects
trigger applied therefore u projection state
applying effects h e u
part let element f let h e
collection heads
conditional effects c e trigger fixed
know c thus c therefore effects csi esi trigger
applied ps effect affects variable
triggers applied ps indeed let us suppose projected conditional
effect cs fs affects variable triggers v ars f thus
v ars c since causally closed cs c therefore c effect
triggers applied finally since effects trigger affect
variables p ps applying

projected effects esi
e fs
lemma observational closure every variable x action observation literal
z z wa wa true ctx x
proof let x xn variables wa definition relevant relation
z relevant xi vice versa hence z xi belongs z
xi belongs well therefore wa wa true
following obtained induction length executions
noted loss generality consider generalized executions instead
executions however easier consider even general executions correspond
finite sequences alphabet ha lits v
set actions lits v set observation literals type executions
general require interleaving actions observations e
execution may contain multiple actions observations sequence example


fibonet geffner

execution ha ha ha indicates initial belief needs
progressed actions filtered formula wa filtered
formula wa case normal generalized executions
direct mapping generalized executions type executions
one execution b denotes belief applying initial
belief b b ba ba denote beliefs executions
h ai h ha ii respectively therefore making induction
length executions prove claim need claim initial belief
corresponds empty execution beliefs form ba ba b b
next definition lemma make precise notion decomposable belief
plays fundamental role intuitively belief b decomposable
every pair states b state w b agrees variables
subset agrees variables subset certain
subsets variables symbols w b w w
definition lemma decomposability belief state b decomposable iff
every variable x observation literal z z action subset v ars wa
causally closed ctx x holds


b w w b w ctx x ctx x w
turns every reachable belief decomposable
proof let b reachable belief execution b b
proof induction length empty claim holds since contains
unit clauses ctx x
assume beliefs reachable executions length less equal
n decomposable consider execution length n augments
execution length n following b denotes belief b res denotes
state applying deterministic action state
case h let x statement lemma ctx x
let two states ba therefore two determinizations
res res b apply inductive hypothesis
obtain w b w w since disjoint
causally closed determinization res res w
res res w sought w ba thus w res w
case h ha ii let x statement lemma

let z z let two states ba consider two subcases whether
v ars wa ctx x
subcase v ars wa since b apply inductive hypothesis get w b

w w w ba w wa
wa
existence determinization granted second assumption
fact sets variables disjoint



fibelief tracking sensing

subcase v ars wa lemma v ars wa let minimal
causally closed subset variables includes v ars wa observe
since belongs intersection z relevant relevant x thus
z relevant x contradicting v ars wa apply inductive hypothesis
get w b w w w

looking thus w w ba since
w wa wa
last technical lemma giving proofs theorems establish
existence partial valuations projection filtered beliefs following
lemma factored filtering let x variable ctx x b reachable belief
action z z observation literal ba non empty u
u b u wa u ba
proof assume ba non empty let u valuation satisfies antecedent lemma wa wa u wa u ba
wa wa lemma v ars wa let minimal
causally closed subset variables includes v ars wa note
z evidentially relevant relevant x thus z relevant x
v ars wa therefore let ba b apply lemma get
w b w u w hence w wa wa w ba
u ba
theorem state variable x let b bx beliefs execution
possible p px x bx x b
proof let execution possible p px prove
general bx b ctx x general x
x bx x b x b proof induction length empty
execution follows readily since contains unit clauses assume
claim holds executions length n let execution length n
augments execution length n possible p px let b
bx beliefs p px respectively inductive
hypothesis bx b
case h ai need bx ba following fs denotes
transition function px forward inclusion given



u bx u u bx u fs u



us u bx u fs u b u



uss u bx u fs u b u f u



ss b f u



ba u u ba


fibonet geffner

definition bx inductive hypothesis lemma
definitions ba ba respectively backward inclusion





ba b f b f fs



bx fs bx
definition ba lemma inductive hypothesis
definition bx therefore bx ba

case h ha ii need ba
x b forward inclusion







u ba
x u bx u wa u b u wa u b

definition ba
x inductive hypothesis lemma
backward inclusion






ba b wa bx wa ba
x
definition ba inductive hypothesis definition


ba
x therefore bx b
theorem execution possible p iff possible subproblems
px x precondition goal variable p execution precondition
goal variable x x x resp x x true b iff x x resp x x true
bx b bx beliefs executing p px respectively
proof part proof induction length executions base case
induction empty execution possible p px assume
claim holds executions length n let b bx beliefs
p subproblem px respectively let execution length
n augments following f denotes collection precondition goal
variables p ctx x x f
case h ai first assume possible p need possible
px x f assumption literal p b
let literal p u bx x f v ars inductive
hypothesis theorem since applicable p px applied u
b therefore u applicable bx
assume possible px x f need
possible p x x precondition p holds
state u bx b inductive hypothesis theorem applied
u bx u thus applicable b
case h ha ii first assume possible p e ba non empty need
ba
x non empty well x f






ba b wa bx wa ba
x


fibelief tracking sensing

definition ba inductive hypothesis theorem

definition ba
x hence bx non empty
finally assume possible px e ba
x non empty x f

need b non empty let x f wa wa
ctx x exists fourth assumption p lemma





u ba
x u bx u wa u bx u wa b u



u bx wa b u





wa b ba
definition ba
x inductive hypothesis theorem
wa wa definition ba hence ba non empty
part let possible execution p hence part possible px
let b bx beliefs p px respectively theorem
x bx x b therefore x x x x holds bx iff holds b
theorem flat belief tracking projected px x
precondition goal variable p provides sound complete factored
belief tracking p time space exponential width p
proof direct theorem let execution b bx
beliefs executing p px respectively possible p iff
possible px therefore flat belief tracking subproblems px tells whether
possible p furthermore precondition goal variable x x x holds
b iff holds bx thus flat belief tracking subproblems px sufficient
determine action applicable goal belief reached
theorem flat belief tracking subproblem px exponential ctx x vu
therefore flat belief tracking subproblems px simultaneously exponential
maxx ctx x vu max ranges precondition goal variables x
latter expression one defines w p
proposition execution ha possible p possible
px state variable x p
proof x precondition goal variable claim follows theorem
assume x state variable appear precondition goal
induction length generalized execution possible p
possible px base case empty executions direct consider
execution length n extends execution length n let b bx
applying execution p px respectively let ctx x
case h ai let precondition p ctx
ctx ctx x relevant x lemma bx


fibonet geffner

hand theorem every therefore holds state
bx applicable bx possible px
case h ha ii wa true ba
x bx non empty inductive
hypothesis thus possible px wa true z z z
relevant x since assumption precondition goal variable z
relevant difficult x relevant thus ctx x ctx
bx lemma since possible p ba
non empty theorem
possible p
ba

non empty


x
x
causal belief tracking
lemma soundness causally closed decompositions let ht bi decomposition whose beams causally closed let pxd subproblem corresponding
projection p variables b x x target variable x b
bx beliefs resulting execution p pxd respectively bx b x b
proof proof induction length executions empty execution
claims holds since contains unit clauses let execution length
augments following b bx denote beliefs p pxd resulting
execution denotes b x
case h ai let u ba b u f
lemma u fs thus since bx inductive hypothesis u bx
case h ha ii let ba b wa inductive
hypothesis wa bx thus ba
x
theorem decoupled cbt runs time space exponential wc p
sound complete target variable x causal decomposition
b bx beliefs resulting execution p pxc respectively
bx bc x b necessarily true bx bc x b
proof soundness follows directly lemma bounds time space
direct size beam bc x bounded causal width wc p
theorem cbt space exponential causal width time
exponential width
proof cbt maintains beliefs beams causal decomposition whose size
bounded causal width join project operation cbt
performed across time considering one valuation time without need first
compute store full joint done recursively iterating beliefs
oa participate join combining partial valuations belief
storing projection resulting belief bi
x number valuations join
w p

bounded
variable z bc relevant x relevant
x thus z ctx x


fibelief tracking sensing

remains theorem stated proof straightforward
split two parts first part reformulates cbt called wide
causal belief tracking wbt cbt performs join operation
beliefs variables variables relevant
x shows soundness completeness wbt second part
cbt simply wbt applied subproblem pctx x associated variable x
factored decomposition f use soundness completeness factored
decomposition finish proof first part proof consists lemmas
second part consists lemma theorem
wbt works causal decomposition c htc bc cbt beliefs time
wbt cbt initial belief projected causal
beams bc x x tc beliefs later times associated executions
augment executions denote belief variable x tc execution
bx update equations wbt
bx h ai bc x
n ft tc
bx h ha ii bc x
n f ilter wa tc




bc beam ft u set uu ft u f ilter u
set u u u equations essentially equation cbt
progression filtering separated except join performed
target variables instead joining target variables relevant x
following basic facts joins projections filtering easily shown
used proofs include proofs statements sets
u ui refer sets valuations refers collection subset variables refers
subset variables si v ars ui refers logical formula facts
bf u
n u
bf collection ui ii


n si
n ui
n ui

bf f ilter u f ilter u
definition lemma decomposition ht bi factors set u v valuations
iff u
n b x u x
decomposition ht bi preserves transitions set u v valuations iff
pair variables x z b x b z known u e
u z u z u u u ii b x b b w variable w
iii every action transition function fs variable z u
causal closure z
let ht bi decomposition v xt b x b x causally
closed x u set v valuations v formula following
claims hold
factors u
f u
n b x f u x
n fb x b x u x


fibonet geffner

factors preserves transitions u
f u
n b x f u x
n fb x b x u x
factors u x b x
f ilter u
n b x f ilter u x
n f ilter b x b x u x
proof part containment direct bf equality follows directly
b x f u fb x b x u lemma
part second equality forward inclusion first equality
part thus need f u
n b x f u x let
u element right hand side expression x u b x
b x f u lemma ux b x u u b x fb x ux
claim ux xt consistent collection valuations indeed
valuations ux uy variable z ux z uy z clearly z known
u b x b b w w exchange ux uy
uw b x uw b respectively otherwise see function fs
causal closure z z contradicting assumptions therefore
valuation u u b x ux x e u
n b x u x thus
assumption u u finally since b x f u fb x u b x fb x ux
lemma u b x b x f u u f u
part first observe bf bf imply chain containments
f ilter u
n b x f ilter u x
n f ilter b x b x u x
finish showing equality holds proving last subset contained
first let u element last subset u belongs
n b x u x
u since factors u thus need u direct
since assumption x b x thus u b x b x
lemma soundness wbt wbt sound c htc bc causal
decomposition p bx xtc local beliefs time b global
belief time b
n bx x tc bc x b bx x tc
proof really need proof first claim b
n bx x tc second
follows directly observing bx belief variables bc x
proof first claim induction length executions base
case empty execution easily verified assume claims hold executions
length n let execution length n augments execution
length n observe c factors u
n tc bf b u inductive
hypothesis
case h ai


n bx





x tc
n bc x
n fbc tc x tc


fibelief tracking sensing




n bc x
n fbc bc u tc x tc




f u f b b
eq bc u part lemma
inductive hypothesis
case h ha ii


n bx





x tc
n bc x
n f ilter wa bc tc x tc





n b

c x


n f ilter wa b

c

bc u

tc x tc





f ilter wa u f ilter wa b b
eq
inductive hypothesis



bc u



part lemma





lemma completeness wbt let c htc bc causal decomposition
p c preserves transitions every reachable belief state wbt complete
bx xtc local beliefs time b global belief time
b
n bx x tc bc x b bx x tc
proof proof induction length executions base case
empty execution easily verified since contains unit clauses assume claims
hold executions length n let execution length n augments
execution length n observe c factors u
n tc bf
inductive hypothesis implies b u bc u proof first claim
b
n bx x tc exactly proof lemma except containments
replaced equalities part lemma inductive hypothesis
second claim make similar induction tandem first induction
base case induction easily verified inductive step
case h ai




bx bc x
n fbc tc bc x
n fbc bc u tc




bc x f u bc x f b bc x b
eq inductive hypothesis part lemma
case h ha ii


bx bc x
n f ilter wa bc tc


bc x
n f ilter wa bc bc u tc




bc x f ilter wa u bc x f ilter wa b bc x b
eq inductive hypothesis part lemma


fibonet geffner

following lemma shows tracking cbt variable x equivalent
tracking wbt subproblem px factored decomposition e
px pbf x factored decomposition f htf bf
lemma let f htf bf c htc bc factored causal decompositions
w
p execution x tc state variable bc
x bx
c
bx denotes local belief variable x computed cbt
p bw
x denotes local belief variable x computed wbt
subproblem pbf x
proof sketch simple tedious proof provide sketch let cx
htx bx causal decomposition subproblem pbf x x tf e
causal decomposition subproblem associated variable x tf factored
decomposition beams participate join cbt beams
variables tc relevant x variables appear tx well tx
variables however observable variables relevant x yet since
state variables pbf x relevant x projected formulas wa bf x
variables equal true hence beams variables
empty set variables contain empty valuation therefore beams
removed join defines wbt pbf x without altering value
resulting join wbt pbf x contain beams variables tc
relevant x
fact observed proof consists simple induction length
executions induction left exercise
theorem causal belief tracking sound complete causally decomposable
proof let f htf bf c htc bc factored causal decompositions
p cx htx bx causal decomposition subproblem pbf x
x tf notice x state variable tf comprised let
w
execution let bc
x bx local beliefs variable x computed
cbt p wbt pbf x respectively let bfx local belief
variable x computed factored belief tracking p let b
global belief p
observable variable relevant x bc x bf x cbt x equal
factored belief tracking x sound complete theorem
observable variables relevant x first notice
w
f
bc
x bx bc x bx bc x b



lemma soundness wbt cf lemma soundness completeness fbt cf theorem therefore cbt sound
causal decomposition cx preserves transitions every reachable belief state
pbf x containment equality cbt complete well
thus finish proof showing decomposition cx causally decomposable
decomposition preserves transitions reachable belief pbf x


fibelief tracking sensing

let x tc variable let bx reachable belief pbf x let x
two variables tx target variables causal decomposition
pbf x let z variable bc x bc x z
known bx bc x bc x bc w variable w tx every
action transition function fs variable z bx causal
closure z case causal decomposition cx preserves transitions every
reachable belief pbf x
x

consider two cases
case x x observable first apply causal decomposability p conclude
variable w tc relevant x x bc w bc x
bc x z memory variable former case w relevant x thus
belongs tx latter case z known bx transition
function fs z bx causal closure z action
applicable bx
indeed proof contradiction let us suppose z known bx
transition function two valuations bx two
progressions fx fx z z z z
therefore observing value z state knowing initial belief
actions execution h ai execution leads bx one cannot infer
value z bx two different values compatible
observation namely z z hence z memory variable contradicting
assumed causal decomposability p
case x x observables divide case two subcases
whether variables x x causal ancestors x affirmative
subcase bc x bc x bc x negative subcase assume without loss
generality x causal ancestor x observable variable
x causal ancestor relevant x hence bc bc x
implies z bc bc x case reduced previous case

references
albore palacios h geffner h translation contingent
proc st int joint conf artificial intelligence pp
pasadena california
albore ramirez geffner h compiling uncertainty away nondeterministic conformant proc th european conf artificial intelligence pp lisbon portugal
albore ramirez geffner h effective heuristics belief tracking
incomplete information proc st int conf automated
scheduling pp freiburg germany
amir e russell logical filtering proc th int joint conf artificial
intelligence pp acapulco mexico


fibonet geffner

bertoli p cimatti roveri traverso p nondeterministic domains partial observability via symbolic model checking nebel b
ed proc th int joint conf artificial intelligence pp seattle wa
morgan kaufmann
bonet b geffner h incomplete information heuristic search
belief space chien kambhampati knoblock c eds proc th
int conf artificial intelligence systems pp breckenridge co
aaai press
bonet b geffner h partial observability classical replanning
theory experiments proc nd int joint conf artificial intelligence pp
barcelona spain
bonet b geffner h action selection mdps anytime ao vs uct
proc th aaai conf artificial intelligence pp toronto canada
bonet b geffner h b width complexity belief tracking nondeterministic conformant contingent proc th aaai conf
artificial intelligence pp toronto canada
bonet b geffner h causal belief decomposition sensing
completeness practical approximation proc rd int joint conf
artificial intelligence pp beijing china
bonet b geffner h flexible scalable partially observable
linear translations proc th aaai conf artificial intelligence pp
quebec city canada
boyen x koller tractable inference complex stochastic processes
cooper g moral eds proc th conf uncertainty artificial intelligence pp madison wi morgan kaufmann
brafman r shani g replanning domains partial information
sensing actions journal artificial intelligence
bryce kambhampati smith e graph heuristics belief
space search journal artificial intelligence
choi darwiche edge deletion semantics belief propagation
practical impact approximation quality proc st nat conf artificial
intelligence pp
cimatti roveri bertoli p conformant via symbolic model
checking heuristic search artificial intelligence
darwiche marquis p knowledge compilation map journal artificial
intelligence
dechter r beek p v local global relational consistency theoretical
computer science
doucet freitas n murphy k russell rao blackwellised particle filtering dynamic bayesian networks proc th conf uncertainty artificial
intelligence pp


fibelief tracking sensing

edelkamp pattern databases cesta ed proc th
european conf pp toledo spain springer lncs
goldman r p boddy expressive explicit knowledge
drabble b ed proc rd int conf artificial intelligence systems
pp edinburgh scotland aaai press
hoffmann j brafman r contingent via heuristic forward search
implicit belief states biundo myers k rajan k eds proc th
int conf automated scheduling pp monterey ca morgan
kaufmann
hoffmann j brafman r conformant via heuristic forward search
artificial intelligence
kaelbling l p littman cassandra r acting partially
observable stochastic domains artificial intelligence
kaye r minesweeper np complete mathematical intelligencer
kocsis l szepesvari c bandit monte carlo proc th
european conf machine learning pp springer
lin w buffet lee c teytaud optimistic heuristics minesweeper
proc int computer symposium ics http hal inria fr docs
pdf mines pdf
palacios h geffner h compiling uncertainty away conformant
bounded width journal artificial intelligence

pearl j probabilistic reasoning intelligent systems morgan kaufmann
ramirez geffner h structural relaxations variable renaming
compilation solving mincostsat proc th int conf principles
practice constraint programming pp springer
rintanen j regression classical nondeterministic ghallab
spyropoulos c fakotakis n avouris n eds proc th european
conf artificial intelligence pp patras greece
russell norvig p artificial intelligence modern rd edition
prentice hall
scott stege u rooij v minesweeper may np complete
hard nonetheless science business media llc
shani g brafman r replanning domains partial information
sensing actions proc nd int joint conf artificial intelligence pp
barcelona spain
shani g poupart p brafman r shimony efficient add operations
point rintanen j nebel b j c beck e h eds
proc th int conf automated scheduling pp sydney
australia


fibonet geffner

silver veness j monte carlo large pomdps proc th
annual conf advances neural information processing systems pp
sipser introduction theory computation nd edition thomson course
technology boston
smith weld conformant graphplan mostow j rich c eds
proc th nat conf artificial intelligence pp madison wi aaai
press mit press
pontelli e son c effectiveness cnf dnf representations contingent proc nd int joint conf artificial intelligence
pp barcelona spain
tran v nguyen k son c pontelli e conformant planner
approximation cpa h acm trans intelligent systems technology

weld anderson c smith extending graphplan handle uncertainty
sensing actions proc th nat conf artificial intelligence pp
aaai press




