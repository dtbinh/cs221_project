journal artificial intelligence

submitted published

commentary
case durative actions commentary pddl
david e smith
nasa ames center
computational sciences division mail stop
moffett field ca u

desmith arc nasa gov

abstract
addition durative actions pddl sparked controversy fox long
argued actions considered instantaneous start stop processes
ultimately limited notion durative actions incorporated language argue
notion still impoverished underlying philosophical position
regarding durative actions shorthand start action process stop action
ignores realities modelling execution complex systems

introduction
pddl introduces limited notion time classical strips framework
particular introduces notion durative actions actions take time however notion durative action rather limited somewhat begrudging reflects
underlying philosophical position fox long actions really instantaneous
initiate terminate continuous processes according view durative actions
seen shorthand start action process stop action durative
actions lack important features namely ability require pre conditions hold
specified intervals effects take place arbitrary time points within
action fox long argued features captured breaking durative action series smaller actions effects beginning end
preconditions beginning end entire action however
representation exceptionally cumbersome ignores fact agent may
separate control actions addition representation forces planner
additional work order connect actions

example
illustrate pddl notion durative action consider simple
example spacecraft must turn order point instrument particular target
order turn spacecraft thrusters reaction control system rcs fired order
supply angular velocity spacecraft coasts pointing correct direction nearly rcs thrusters fire order stop rotation firing
thrusters consumes propellant requires controller dedicated task
addition thrusters firing vibration spacecraft certain
operations cannot performed thruster firings relatively quick coasting
phase general turning large spacecraft slow process may take several
minutes reason speedy turns require greater acceleration deceleration
therefore consume propellant

fis mith

first question need answer best way model complex operation could model turning operation initial action start spacecraft turning another action stop turn interspersed processes model
craft level detail seems reasonable model
physics however may well turning guidance built primitive operations spacecraft possibility starting stopping turns
independently could model operation consisting instantaneous action
start turn followed finite process terminates turn complete
bother fact interested effects process initiated
starting turn reasons seems natural proper regard durative action effects take place throughout action
lets suppose want model operation durative action pddl
could say something
durative action turn
parameters current target target target
duration
duration angle current target target
turn rate
condition
start pointing current target
start propellant propellant required
start controller use
effect
start pointing current target
start decrease propellant propellant required
start controller use
start vibration
end controller use
end vibration
end pointing target

however model action quite conservative ties controller entire
turn operation specifies vibration present entire operation addition
consumes required propellant beginning operation reality rcs
firing beginning end turn controller needed two periods vibration present two periods propellant
consumed two periods might matter coast phase relatively quick however indicated earlier turning large spacecraft take several
minutes unfortunately pddl rather limited notion durative action cannot
specify action conditions effects times start end action

decomposition sub actions
fox long pointed possible model durative action intermediate conditions effects breaking sequence sub actions turn
action would need three sub actions illustrated start turn action coast
action stop turn action together turn action bind together

note assumes precomputed provided angles possible pairs targets
want must provide vector direction target planner would need
ability vector arithmetic trigonometry within formulas
personal communication



fit c ase



urative ctions c ommentary pddl

durative action turn
parameters current target target target
duration
duration angle current target target
turn rate
condition
start pointing current target
start propellant propellant required
end finished
effect
start pointing current target
start turning
start enabled start turn
end turning
end finished turning
end pointing target
durative action start turn
parameters
duration
duration start turn duration
condition
start controller use
start propellant propellant required
turning
enabled start turn
effect
start decrease propellant propellant required
start controller use
start vibration
end controller use
end vibration
end enabled start turn
end enabled coast
durative action coast
parameters
duration
duration coast duration
condition
turning
enabled coast
effect
end enabled coast
end enabled stop turn
durative action stop turn
parameters
duration
duration rcs duration
condition
start controller use
start propellant propellant required
turning
enabled stop turn
effect
start decrease propellant propellant required
start controller use
start vibration
end controller use
end vibration
end enabled stop turn
start finished

figure shows graphically actions tied together goal pointing
particular target turn action required turn action end precondition
finished satisfied adding stop turn action stop turn


fis mith

condition enabled stop turn satisfied end effect coast action
likewise coast action condition enabled coast satisfied end effect start turn action start turn action condition
enabled start turn satisfied start effect turn action
turn action forces three sub actions plan sub action forces predecessor sub actions turn action plan three sub actions
condition turning satisfied turn action way
consistently achieved three sub actions packed sequentially
turn action
pointing current
turning
enabled start turn

pointing target
turning
finished

turn

pointing current

finished

enabled start turn
enabled coast

start turn
turning
enabled start turn

coast
turning
enabled coast

enabled coast
enabled stop turn

finished

enabled stop turn

stop turn
turning
enabled stop turn

figure sub actions turn operation start end conditions
shown action interconnecting start end effects shown
action simplicity omitted effects concerning vibration controller
use propellant usage
two additional subtleties representation first although
three sub actions occur turn action obvious requirement
occur turn action suppose tried place start turn
action previous turn action previous turn action would three subactions wayward start turn action would conflict sub actions thus
order make work would push three sub actions earlier turn
action realizing cannot work requires difficult induction argument
seems unlikely existing planner could actually infer trial
error process generating plans involving actions would incur significant computational overhead engage needless search
second subtlety overlooked decomposition computing
durations sub actions bit tricky reasonable assume start
stop turn actions fixed duration duration coast action depends current
turns finished effect stop turn must start effect rather end effect reason
occur end effect stop turn action would need complete prior end turn
action since finished effect mutex finished end effect turn action despite
asymmetry representation stop turn still forced occur wholly within turn action
overall condition turning



fit c ase



urative ctions c ommentary pddl

target orientations spacecraft fact duration coast action must
duration turn action minus durations start stop turn actions
way introduce additional numeric turn duration function set
turn action used compute duration coast action
process decomposing action sub actions complex convoluted htn paradigm done time reason
generative adopted view better worse one allowed
directly specify action used actions connected
order force sub actions abut fit within turn action must
tricky things one might argue need htn capability order model
actions indeed would certainly make things easier however another way

richer durative actions
one dealing modelling admit richer language
modelling durative actions make convenient model actions turn action
need able specify conditions must hold points intervals within
action effects take place points intervals within action
many possible ways one could express conditions effects one
straw man possibility
durative action turn
parameters current target target target
duration
duration angle current target target turn rate
condition
start pointing current target
start propellant propellant required
start controller use
end rcs duration propellant propellant required
end rcs duration controller use
effect
start pointing current target
start decrease propellant propellant required
start start rcs duration controller use
start start rcs duration vibration
end rcs duration decrease propellant propellant required
end rcs duration end controller use
end rcs duration end vibration
end pointing target

need explicitly construct actions starting stopping turn
coasting reason need worry durations connecting
sub actions instead simply specified effects appropriate times
turn action note specified vibration controller use interval effects seems
less cumbersome specifying two separate effects stating controller use
beginning interval longer use end however
fundamental difference two encodings encoding possibility another independent action could somehow make controller available
interval use bedrax weiss et al argued introduction
explicit notion resource pddl language notion could
simplify encoding even specifying controller reusable
resource required turn action appropriate intervals vibration stability could treated resource although somewhat less intuitive


fis mith

one final issue avoided notion continuous change spacecraft
example certainly continuous change going propellant burned instantaneously orientation spacecraft changes continuously question
need model certainly domains necessary reason continuous change fox long point concurrent actions well simultaneous consumption production resources may necessary reason
resources change course actions example mars rover receives
energy solar panels time driving place place since battery minimum maximum capacity one cannot model easily discrete
consumption production effects however consumption production happen
simultaneously one model continuous change taking place start end
action sufficient spacecraft example since actions increase
propellant one cannot perform two simultaneous actions affect spacecrafts
orientation

conclusion
durative actions pddl limited expressing complex durative actions
decomposition sub actions difficult clumsy time clear
modelling actions turning spacecraft terms processes necessary useful particularly possibility process deliberately interrupted
domains richer expressive notion durative action seems right
modelling tool note would argue modelling processes completely
unnecessary however many practical applications overkill
complex representation process necessary
cheating model complex processes durative actions course modelling cheating real world physics nothing instantaneous indivisible
cheating model anything instantaneous action yet usually content model
action turning light switch instantaneous indivisible even though
take small amount time complex processes behind durative action
different simply choosing model details process structure behind
action even though may necessary model fact action takes time
effects take place different times action many practical applications durative actions essential modelling tool deserve richer treatment
provided pddl

references
bedrax weiss mcgann c ramakrishnan formalizing resources proceedings icaps workshop pddl
fox long pddl modeling continuous time dependent effects proceedings rd international nasa workshop scheduling space
fox long pddl extension pddl expressing temporal domains journal artificial intelligence issue




