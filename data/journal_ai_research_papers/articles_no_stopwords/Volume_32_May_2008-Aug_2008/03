Journal Artificial Intelligence Research 32 (2008) 525-564

Submitted 10/07; published 06/08

Efficiency Envy-freeness Fair Division Indivisible
Goods: Logical Representation Complexity
Sylvain Bouveret

sylvain.bouveret@onera.fr

ONERA Centre de Toulouse.
2, avenue Edouard Belin, BP74025.
31055 Toulouse cedex 4, FRANCE.

Jerome Lang

lang@irit.fr

IRIT-CNRS. 118, route de Narbonne.
31062 Toulouse cedex, FRANCE.

Abstract
consider problem allocating fairly set indivisible goods among agents
point view compact representation computational complexity. start
assuming agents dichotomous preferences expressed propositional formulae. express efficiency envy-freeness logical setting, reveals unexpected
connections nonmonotonic reasoning. identify complexity determining
whether exists efficient envy-free allocation, several notions efficiency,
preferences represented succinct way (as well restrictions problem).
first study problem assumption preferences dichotomous,
general case.

1. Introduction
Allocating goods agents important issue considered different perspectives economics (especially social choice theory) computer science (especially
Artificial Intelligence Operations Research), arises various real-world settings:
auctions, divorce settlements, electronic spectrum frequency allocation, airport traffic management, fair efficient exploitation Earth Observation Satellites (see
survey Chevaleyre, Dunne, Endriss, Lang, Lematre, Maudet, Padget, Phelps,
Rodrguez-Aguilar, & Sousa, 2006, detailed description). general issue covers
huge variety allocation problems, depending following parameters (see
work Chevaleyre et al., 2006, detailed taxonomy):
nature resources allocated (are divisible not? single-unit
multi-unit?);
nature preferences agents (are numerical simply ordinal?
preferential dependencies goods?)
nature permitted allocations (can goods shared among several agents?
goods allocated? allocations accompanied side payments?);
evaluation quality allocation (Pareto-efficiency, utilitarian egalitarian social welfare etc.);
c
2008
AI Access Foundation. rights reserved.

fiBouveret & Lang

nature process leads allocation (centralized decentralized).
instance, standard combinatorial auctions (Cramton, Shoham, & Steinberg, 2005)
typically correspond indivisible goods (possible multi-unit), numerical preferences
possible dependencies goods, monetary payments, maximization total value
sold items, centralized computation.
paper focus fair division indivisible goods without money transfers1 . Fair
division makes prominent use ex-post fairness criteria equity envy-freeness,
point departs auctions, rather focus kinds fairness (as
well efficiency procedure), truthful mechanisms, fairness
procedure (Brams & Taylor, 1996; Young, 1995). key concept literature
fair division envy-freeness: allocation envy-free agent likes
share least much share agent. Ensuring envy-freeness considered
desirable property; however, envy-freeness alone suffice criterion finding
satisfactory allocations (this especially obvious compulsory allocate
goods: case, allocating anything anyone results envy-free allocation, yet
totally unsatisfactory), therefore paired efficiency criterion,
Pareto optimality maximum social welfare. However, known reasonable
notion efficiency, profiles efficient envy-free allocation exists2
(Brams, Edelman, & Fishburn, 2003). even trivial every good must assigned
someone: case, profiles even envy-free allocation exists.
Another well-known notion fairness (that consider paper, except one
result) Rawlsian egalitarianism, says allocation equitable maximizes
satisfaction least satisfied agent. Unlike envy-freeness, egalitarianism requires
interpersonal comparability preferences.
Whereas social choice theory developed important literature fair division,
computational issues rarely considered. hand, artificial intelligence
studied issues extensively, focused mainly combinatorial
auctions related classical utilitarian problems. Combinatorial auctions, aiming maximizing auctioneers revenue (consisting sum prices paid agents),
specific form allocation process, namely pure utilitarian form money
transfers considerations equity fairness relevant. literature
combinatorial auctions related problems investigating issues compact representation (so allow agents express bids concise way see
work Nisan, 2005, overview) well computational complexity, algorithms,
tractable subclasses approximation. Complexity issues negotiation (where agents
exchange goods means deals) studied (e.g. Dunne, Wooldridge, &
Laurence, 2005; Chevaleyre, Endriss, Estivie, & Maudet, 2004).
discussion reveals existence gap (summarized Table 1): compact
representation complexity issues fair division received little attention
now, apart recent work (Lipton, Markakis, Mossel, & Saberi, 2004)
1. Note possibility money transfers reintroduces divisibility extent, considering money
particular divisible good.
2. Consider example situation single item two agents want it:
case, allocation either efficient envy-free (when item given one two
agents), envy-free efficient (if item allocated anyone).

526

fiEfficiency Envy-freeness Fair Division Indivisible Goods

studies approximation schemes envy-freeness. need compact representation
arises following dilemma, formulated several social choice theorists: either (a)
allow agents express possible preference relation set subsets items,
end exponentially large representation (which actually happens example3
work Herreiner & Puppe, 2002); (b) severely restrict set expressible
preferences, typically assuming additive independence items, design
procedures agents express preferences single items, preferences
extended sets items assuming additivity, thus giving possibility
expressing preferential dependencies complementarity substitutability effects
among items; path followed Brams et al. (2003), Brams King (2005)
Demko Hill (1998). Yet, advocate paper, conciliating conciseness
expressivity possible, means compact representation.
axiomatic study
auctions
(and related problems)

economics

fair division

economics
(especially social choice)

computational study
computer science
(especially AI)
?

Table 1: Computational issues fair division.
works fair allocation indivisible items, focus joint search
envy-freeness efficiency. impossibility guarantee existence efficient
envy-free allocation implies determining whether exists allocation
crucial task, since positive answer leads choose allocation whereas negative
answer calls relaxation one criteria, investigated papers
(Lipton et al., 2004; Chevaleyre, Endriss, & Maudet, 2007b).
consider problem determining whether exists efficient envy-free
allocation point view compact representation computational complexity.
First, since cases agents preferential dependencies (or synergies)
goods, raise issue fair division problem indivisible goods
expressed. focus first simple case agents dichotomous preferences,
is, simply express partition satisfactory unsatisfactory shares.
interest restriction spite expressivity loss imposes,
shown less complex general case, much simpler expose.
Dichotomous preferences considered social choice contexts,
Bogomolnaia, Moulin, Stong (2005) fair division context, course approval
voting (Brams & Fishburn, 1978), every voter specifies dichotomous preference
set candidates. natural representation dichotomous preference (with
preferential dependencies formulae otherwise problem trivial) single
3. Quoting work Brams et al. (2003): Herreiner Puppe (...) assume person
linear preference order 2B . allows complementarity substitutability effects among items
(...). view interdependencies may beset subset evaluations (...), procedures Herreiner
Puppe offer creative way dealing subset preference. hand, sheer number
subsets (more million n = 20) presumption clear preference subsets,
could detract practicability procedures.

527

fiBouveret & Lang

propositional formula, variables correspond goods. Expressing envy-freeness
efficiency within logical representation reveals unexpected connections nonmonotonic
reasoning; issue addressed Section 3.
following Sections devoted detailed complexity study following problem: given fair division problem, exist efficient end envy-free allocation?. latter problem studied different notions efficiency various
restrictions. start (in Sections 3 4) assuming preferences dichotomous,
identify complexity existence envy-free Pareto-efficient allocation, turns p2 -complete. consider several restrictions
latter problem, namely, (a) fixing number agents two; (b) forcing agents
identical preferences; (c) restricting syntax propositional formulae expressing preferences agents. study variations problem obtained
replacing Pareto-efficiency notions efficiency, namely: (a) asking complete
allocations (such every good allocated agent); (b) requiring maximum
number agents satisfied. Section 5 consider general problem
obtained removing assumption preferences dichotomous. problem
becomes dependent choice particular language compact preference
representation, pick particular one (weighted propositional formulae) extends
simple way pure propositional representation considered Section 3, identify
complexity existence envy-free efficient allocations, several notions
efficiency. Finally, Section 6 sum contributions discuss related work
issues.

2. Background
section provide basic concepts definitions use along
paper.
2.1 Fair Division Problems
Definition 1 (Fair division problem) fair division problem4 tuple P = hI, X, Ri

= {1, . . . , N } set agents;
X = {x1 , . . . , xp } set indivisible goods;
R = hR1 , . . . , RN preference profile, Ri reflexive, transitive
complete relation 2X .
Ri preference relation agent i. ARi B alternatively denoted Ri (A, B)
B; write B (strict preference) (A B B A) B
(indifference) (A B B A).
addition, Ri said monotonic A, B, B X implies
B A. R = hR1 , . . . , RN monotonic Ri monotonic every i.
4. following, use indifferently terms fair division resource allocation.

528

fiEfficiency Envy-freeness Fair Division Indivisible Goods

Definition 2 (Allocation) allocation P = hI, X, Ri mapping : 2X
j 6= i, (i) (j) = . every x X exists
x (i) complete allocation.
words, possible framework give good different
agents time, possible throw away goods. paper,
focus especially two desirable properties allocations: Pareto-efficiency
envy-freeness.
Definition 3 Let , 0 two allocations. dominates 0 (a) i, (i)
0 (i) (b) exists (i) 0 (i). (Pareto-) efficient
0 0 dominates .
Definition 4 allocation envy-free (i) (j) holds
j 6= i.
2.2 Propositional Logic
Let V finite set propositional variables. LV propositional language generated
V , usual connectives , Boolean constants > usual
way5 .
interpretation LV element 2V , i.e., truth assignment symbols:
x V , x (resp. x 6 ) means assigns x true (resp. false).
od() = {M 2V | |= } set models (the satisfaction relation |=
defined usual, well satisfiability logical consequence).
literal formula LV form x form x, x V . formula
negative normal form (or NNF) negation symbol appears
literals. formula turned polynomial time equivalent NNF
formula. instance, (b c) NNF equivalent NNF formula
(b c).
formula positive contains occurrence negation symbol. instance,
(b c) (a b) positive, whereas (b c) (a c) (a b) are.
> considered positive well.
Let LV . V ar() V set propositional variables appearing .
instance, V ar((a c) (a b)) = {a, b, c} V ar(>) = .
V
Lastly, = {1 , . . . , n } finite
W set formulae = 1 . . . n
conjunction formulae S, = 1 . . . n disjunction formulae
S.
2.3 Computational Complexity
paper refer complexity classes located polynomial hierarchy.
BH2 (also referred DP) class languages form L1 L2 L1
NP L2 coNP. p2 = PNP class languages recognizable deterministic
Turing machine working polynomial time using NP oracles. Likewise, p2 = NPNP . p2 =
5. Note connectives allowed; important definition positive formulae
(to come).

529

fiBouveret & Lang

p2 [O(log n)] subclass p2 problems need logarithmic number
oracles. See instance book Papadimitriou (1994) details.

3. Fair Division Problems Dichotomous Preferences: Logical
Representation
start considering full detail case preferences dichotomous.
Definition 5 Ri dichotomous exists subset Goodi 2X
A, B X, B Goodi B
6 Goodi . R = hR1 , . . . , RN
dichotomous every Ri dichotomous.
obvious way representing dichotomous preferences compactly, namely
propositional formula (for agent i) language LX (a propositional symbol
vx good x) od() = Goodi . Formally:
Definition 6 Let Ri dichotomous preference 2X , Goodi associated subset
2X , propositional formula propositional language LX . say
represents Ri od(i ) = Goodi .
Clearly,
preference Ri formula representing Ri : =
Vfor dichotomous
V
v

v
x . Furthermore, formula unique logical equivAGoodi
xA x
x6A
alence.
W

Example 1 X = {a, b, c} Goodi = {{a, b}, {b, c}}. Note Ri monotonic.
= (a b c) (a b c) represents Ri . 0i = b ((a c) (a c)),
logically equivalent .
easy yet useful result:
Proposition 1 Let Ri dichotomous preference 2X . following statements
equivalent:
1. Ri monotonic;
2. Goodi upward closed, is, Goodi B imply B Goodi .
3. Ri representable positive propositional formula.
Proof (1) (2). Suppose Ri monotonic, let Goodi B A. must
B A, therefore B Goodi (since Goodi ).
(2) (3). Suppose Goodi upward closed,
consider
`V set
min (Goodi ) inclusionW
minimal sets Goodi . formula = Amin (Goodi )
xA vx represents Ri following
reasons. B Goodi , set min (Goodi ) B. Thus corresponding
conjunction satisfied, satisfied. Conversely, set B 6 Goodi ,
min (Goodi ) B. Therefore, none terms satisfied,
satisfied. Moreover, clearly positive propositional formula.
(3) (1). Suppose Ri representable positive propositional formula , let
B two sets items B. 6 Goodi clearly B A. Goodi ,
od(i ). Since positive, B od(i ) also. Therefore B Goodi , finally B A.


530

fiEfficiency Envy-freeness Fair Division Indivisible Goods

on, assume allocation problems P represented propositional
form, namely, instead I, X R specify h1 , . . . , N i. X obviously
determined h1 , . . . , N i. following, write propositional variables
corresponding items x instead vx short, since often unambiguous.
Let P = h1 , . . . , N allocation problem dichotomous preferences;
N , rewrite obtained replacing every variable x
new symbol xi . instance, 1 = (b c) 2 = 1 = a1 (b1 c1 )
2 = a2 d2 .
Example 2 Consider following allocation problem: 1 = (b c), 2 =
3 = ab (therefore = {1, 2, 3} X = {a, b, c}). formulae positive, therefore
preferences monotonic. instance, Good1 set composed supersets {a}
supersets {b, c}.
1 = a1 (b1 c1 );
2 = a2 ;
3 = a3 b3
N , let Xi = {xi , x X}. allocation standard allocation problem
P corresponds model V = X1 . . . XN satisfying one xi x X.
terms, bijective mapping
set possible allocations
V
V
models following formula: P = xX i6=j (xi xj ).
V
allocation required complete, P replaced C
P = P xX (x1
. . . xn ). rest unchanged.
Let V = {xi | = 1, . . . , N, x X}. interpretation od(P )
never case xi xj simultaneously true 6= j, therefore map
od(P ) allocation simply defined (i) = {x | |= xi }. mapping
obviously bijective; write F () model od(P ) corresponding allocation
, course F 1 (M ) allocation corresponding interpretation od(P ).
Example 2 (continued) allocation problem Example 2, have:
P = (a1 a2 ) (a1 a3 ) (a2 a3 )
(b1 b2 ) (b1 b3 ) (b2 b3 )
(c1 c2 ) (c1 c3 ) (c2 c3 )
interpretation sets a1 , b3 , c1 true clearly model
P . corresponds allocation F 1 (M ) = , (1) = {a, c}, (2) =
(3) = {c}.
3.1 Envy-freeness
show search envy-free allocation mapped model finding
problem. Let j|i formula obtained substituting every symbol xi
xj : instance, 1 = a1 (b1 c1 ) 2|1 = a2 (b2 c2 ). Notice obviously,
i|i = .
first give following lemma, easy yet useful:
531

fiBouveret & Lang

Lemma 1 i, j, (j) Goodi F () |= j|i .
particular, = j (i) Goodi F () |= .
Proof definition F , (j) Goodi {x | F () |= xj } Goodi , is, {x | F () |=
xj } |= . latter relation equivalent {xi | F () |= xj } |= , finally {xj | F () |=
xj } |= j|i definition j|i , deduce result.


Using lemma, map envy-freeness property satisfiability
logical formula:
Proposition 2 Let P = h1 , . . . , N allocation problem dichotomous preferences propositional form, formulae j|i mapping F defined above.
Let



^
^

P =
j|i
i=1,...,N

j6=i

envy-free F () |= P .
Proof Let allocation. envy-free pair (i, j), 6= j
(j) (i), (j) Goodi (i) 6 Goodi , turn equivalent F () |= j|i

F () 6|= lemma 1. Therefore envy-free F () |= P .

intuitive meaning result allocation envy-free if,
every agent i, either satisfied share (i), envies one,
is, every j, would satisfied js share either.
search envy-free allocations thus reduced model finding problem:
{F 1 (M ) | |= P P } set envy-free allocations P. Note that, importantly,
P P polynomial size (precisely, quadratic) size input data.
problem existence envy-free allocation without property
interesting, allocation always exists : suffices consider allocation gives empty share everyone. However,
problem deciding whether exists envy-free allocation satisfying
property expressible polynomial size formula (e.g. completeness) reduced
satisfiability problem;
problem finding (resp. counting) envy-free allocations comes
problem finding (resp. counting) models P P .
Example 2 (continued) allocation problem Example 2, have:
P =

((a1 (b1 c1 )) ((a2 (b2 c2 )) (a3 (b3 c3 ))))
(a2 (a1 a3 ))
((a3 b3 ) ((a1 b1 ) (a2 b2 )))

od(P P ) = {{c1 }, {c1 , b3 }, {c2 , b3 }, {c2 }, {b3 }, {c3 }, }.
therefore 7 envy-free allocations, namely (c, , ), (c, , b), (, c, b), (, c, ),
(, , b), (, , c) (, , ). Note none complete.
532

fiEfficiency Envy-freeness Fair Division Indivisible Goods

3.2 Efficient Allocations
Similarly envy-freeness property, Pareto-efficiency expressed logical
property. logical expression property requires definition maximal consistent subset set formulae.
Definition 7 Let = {1 , . . . , } set formulae
formula.
V
maximal -consistent subset Vif (a) consistent (b)
0 0 0 consistent. Let axCons(, ) set
maximal -consistent subsets . Moreover, write axCons() set
maximal-consistent subsets , is, set axCons(, >).
Proposition 3 Let P = h1 , . . . , N allocation problem. Let P = {1 , . . . , N }.
Pareto-efficient P {i | F () |= } maximal P -consistent
subset P .
Proof Let allocation. Let Sat() set agents satisfied , is, Lemma 1,
Sat(), F () |= P
|= definition V
set {i | F () |= }. Sat(),
V F ()

|


Sat()}
=

{i | F () |= }. Therefore
definition

F
().
Therefore
F
()
|=

{
P
P

V

{i | F () |= } P consistent.
definition, Pareto-dominated allocation 0 Sat( 0 ) )
Sat(). Therefore, Pareto-dominated consistent subset P (corresponding

V
{i | F ( 0 ) |= }) {i | F () |= } S. Moreover, since 0 allocation, P
consistent.
V
Conversely,
{i | F () |= } P consistent,
V let P
0
1
model P . definition, = F (M ) well-defined allocation, 0 (i) Goodi
S. Since {i | F () |= } S, Sat( 0 ) ) Sat(). Therefore Pareto-dominated.

simple result suggests efficient allocations computed logical
expression P problem, namely, computing maximal
P -consistent subsets
V
P ; call {S1 , . . . , Sq }. Si , let Mi = od( Si P ) let = qi=1 Mi .
F 1 (M ) set efficient allocations P . Note general
exponentially many maximal P -consistent subsets P (and therefore exponentially many
efficient allocations). tempered (a) many practical cases
number maximal consistent subsets small; (b) generally asked look
efficient allocations; look one, done computing one
maximal P -consistent subset P .
Example 2 (continued) maximal
P -consistent subsets P S1 =V{1 , 2 },
V




S2 = {1 , 3 } S3 = {2 , 3 }.
S1 VP one model: {b1 , c1 , a2 }.
2 P
two models: {a1 , b3 } {b1 , c1 , a3 }. S3 P one model: {a2 , b3 }. Therefore
four efficient allocations P (bc, a, ), (a, , b), (bc, , a) (, a, b). None
envy-free.
3.3 Efficient Envy-free Allocations
position putting things together. Since envy-free allocations correspond
models P efficient allocations models maximal P -consistent subsets
P , existence efficient envy-free (EEF) allocation equivalent
V
following condition: exists maximal P -consistent subset P
533

fiBouveret & Lang

P P consistent. case, models latter formula EEF allocations.
Interestingly, instance well-known problem nonmonotonic reasoning:
Definition 8 supernormal default theory6 pair = h, = {1 , . . . , },
1 , . . . , propositional formulae. propositional formula skeptical
consequence D, denoted | , axCons(, )
V
|= .
Proposition 4 Let P = h1 , . . . , N fair division problem. Let DP = hP , P i.
exists efficient envy-free allocation P DP 6| P .
Proof Let P = h1 , . . . , N fair division problem. Let Pareto-efficient envy-free
V
allocation, = {i | F () |= }.
2. F () |=
V F () |= P Proposition
V
definition
S, F () |= P , proves P consistent, or,
V
terms, 6|= P . Moreover,
V maximal P -consistent subset P Proposition 3. Thus
axCons(P , P ), P 6|= P , implies hP , P 6| P definition 6| .

set axCons(P , P )
V Conversely, suppose hP , P 6| P .
P V
P model . Proposition 3, F 1 (M ) Pareto-efficient allocation (since
model P ), Proposition 2, F 1 (M ) envy-free (since model P ).


somewhat unexpected connection nonmonotonic reasoning
several impliV
cations. First, EEF allocations correspond models
P P
axCons(P , P ); however, axCons(P , P ) may exponentially large, argues avoiding start computing efficient allocations filtering
envy-free, rather compute EEF allocations single step, using default reasoning algorithms. Thus, fair division may benefit computational work default logic
connected domains belief revision answer set programming (Baral, 2003;
Gebser, Liu, Namasivayam, Neumann, Schaub, & Truszczynski, 2007). Moreover, alternative criteria selecting extensions default reasoning (such cardinality, weights
priorities) correspond alternative efficiency criteria allocation problems.

4. Allocation Problems Dichotomous Preferences: Complexity
study section complexity problem existence EEF
allocation restrictions, case preferences dichotomous,
several notions efficiency.
4.1 Complexity General Problem
known skeptical inference p2 -complete (Gottlob, 1992); now, Proposition
4, problem existence EEF allocation reduced complement
skeptical inference problem, immediately tells p2 . Less obviously,
show complete class, even preferences required monotonic.
prove hardness, use following restriction skeptical inference problem:
Problem 1: restricted skeptical inference (rsi)
INSTANCE: set propositional formulae = {1 , . . . , n }.
QUESTION: maximal-consistent subsets contain 1 ?
6. Supernormal defaults called normal defaults without prerequisites (e.g. Reiter, 1980).

534

fiEfficiency Envy-freeness Fair Division Indivisible Goods

Proposition 5 problem rsi p2 -complete.
Proof Membership p2 comes easily fact problem rsi restriction
skeptical inference problem, formula infer simply 1 . Hardness comes fact
instance h, , skeptical inference problem, h, |
h{} , | , h{ } {1 , . . . , n }, >i | , maximal
-consistent subsets {, 1 , . . . , n } contain , instance rsi.


Proposition 6 problem eef existence determining whether exists efficient envy-free allocation given problem P monotonic, dichotomous preferences logical form p2 -complete.
show hardness following reduction rsi (the complement problem rsi,
is, one maximal-consistent subset contain 1 ?) eef
existence. Given finite set propositional formulae, let V = V ar() set
propositional symbols appearing , let P() = hI, X, P() following
instance eef existence:
1. = {1, 2, ..., n + 3};
2. X = {v |v V , 1...n} {v |v V , 1...n} {xi |i 1...n + 1} {y};
3. = 1, . . . , n, let obtained following sequence operations:
(i) put NNF form (let i0 result); (ii) every v V , replace, i0 ,
(positive) occurrence v v occurrence v v ; let
formula obtained. Then:
= 1, . . . , n, = xi ,
V



Vn
Vn


n+1 y,
n+1 =
v
v

x
vV
i=1
i=1
n+2 = y,
n+3 = 1 .
prove Proposition 6 using several lemmas.
Lemma 2 allocation P said regular n + 3,
(i) (i),


n, (i) = vV {v , v } {xi };


(n + 1) = vV ,i=1,...,n {v , v } {xn+1 , y};
(n + 2) = {y}.
(n + 3) = (1).
Given allocation , let R defined R (i) = (i) (i).
1. R regular;
2. efficient R efficient;
535

fiBouveret & Lang

3. envy-free R envy-free.
Proof (1) obvious. i, goods outside (i) influence satisfaction
(since appear ), therefore R (i) (i), (2) follows. formulae
positive, preference relations monotonic, therefore (j) R (j) holds i, j.
Now, envy-free i, j (i) (j), therefore R (i) (i) (j) R (j)
therefore R envy-free, (3) follows.


Lemma 3 regular
1. 1 envy n + 3;
2. n + 3 envy 1;
3. 2, . . . , n envy one;
4. n + 1 envy n + 2;
5. n + 2 envy n + 1;
Proof First, note i, j 6= i, envies j (i) |= (j) |= .
1. Let = 1 j {2, . . . , n, n + 2}. 1 envies j, x1 (j). regular, x1 6 (j),
therefore cannot envy j.
2. Since n+3 = 1 , holds agent n + 3.
3. Let {2, . . . , n} j 6= i. envies j (j) |= xi , impossible
xi 6 (j), due regularity .
4. Assume n + 1 envies j j {1, . . . , n,n + 3}. (j) |= n+1 . Since
(j) |= impossible
`V n
`V n

V
n+1


(because regular), (j) |=

x
, thus (j) |= xn+1
v

v
vV
i=1
i=1
impossible well, since regular.
5. Let = n + 2 j {1, . . . , n, n + 3}. envies j (j) |= y, impossible
regular.


Lemma 4 Let regular allocation satisfying n + 1 n + 2 leaving 1 n + 3
unsatisfied. Let () interpretation V obtained by: v V ,
() |= v (i.e., v ()) n + 1 receives v 1 , . . . , v n , () |= v otherwise, i.e.,
n + 1 receives v 1 , . . . , v n . efficient envy-free () 6|= 1 .
Proof Let regular allocation satisfying n + 1 n + 2. Since satisfies n + 2, (n + 2).
Now, satisfies n + 1 without giving y, therefore, v, n + 1 receives either v
v s. shows definition () well-founded.
assume efficient envy-free, suppose () |= 1 . One
agents 1
1
n +
3

satisfiable
without
spoiling

agent
j

6
{1,
n
+
3},

giving

{x
}

(v | () |=



v ) (v | () |= v ). since efficient must satisfy least one 1 n + 3. cannot
satisfy simultaneously (because x1 ). Thus one among 1 n + 3 satisfied ,
one envying her. contradicts envy-freeness , thus proving () 6|= 1 .


Lemma 5 interpretation V , let us define : 2X by:
1, . . . , n, (i) = {v | |= v} {v | |= v} {xi };
(n + 1) = {xn+1 } {v | |= v, = 1, . . . , n} {v | |= v, = 1, . . . , n};
(n + 2) = {y}
536

fiEfficiency Envy-freeness Fair Division Indivisible Goods

(n + 3) = .
Then:
1. well-defined regular allocation satisfying n + 1 n + 2;
2. (M ) = (M (M ) obtained Lemma 4).
3. 1, . . . , n, satisfies |= .
4. efficient satisfies maximal consistent subset .
Proof
1. One easily check give good one individual,
give agent set items (i). Therefore
well-defined regular allocation. allocation obviously satisfies n + 1 n + 2.
2. |= v (n + 1) contains {v | = 1, . . . , n} therefore (M ) |= v. case
|= v similar.
3. Let 1, . . . , n. Since gives xi i, satisfies F (M (i)) |= ,
equivalent |= .
4. point 3, {i | satisfies i} = {i | |= } {n + 1, n + 2} (obviously, n + 3
satisfied). Now, since preferences dichotomous, allocation efficient
set individuals satisfies maximal respect inclusion. Therefore, efficient
satisfies maximal consistent subset .


Lemma 6 Let regular efficient allocation satisfying n + 1 n + 2. ()
satisfies maximal consistent subset .
Proof regular satisfies n+1 n+2, therefore obviously (n+2) = {y} lemma 4 ()
well-defined. consider allocation () , defined previous lemmas.
() (n + 1) = {xn+1 } {v |M () |= v} {v |M () |= v} = {xn+1 } {v |{v 1 , . . . , v n }
(n + 1)} {v |{v 1 , . . . , v n } (n + 1)}. Since n + 1 satisfied , (n + 1) must contain {xn+1 },
assert () (n + 1) (n + 1).
Let {2, . . . , n}. Since regular, (i) (i). Since () complete allocation
definition, regular lemma 5, (i) () (i) () (n + 1). Since () (n + 1) (n + 1)
(i) () (i) (n + 1), thus (i) () (i) (n + 1). allocation,
course (i) (n + 1) = , follows (i) () (i).
regular, (1)(n+3) (1)(n+3). Since (1) = (n+3), latter inclusion
comes (1) (n + 3) (1). Now, (1) () (1) () (n + 1) () (n + 3)
similar reasons {2, . . . , n}, which, together () (n+1) (n+1) () (n+3) = ,
comes (1) () (1) (n + 1), and, (1) (n + 1) = , deduce inclusion
(1) (n + 3) () (1).
prove () efficient. Since preferences monotonic, individuals n + 3
satisfied satisfied 0 well (since 6= n + 3, (i) () (i)).
n + 3 satisfied , immediately deduce () efficient.
n + 3 satisfied , suppose () efficient. case, allocation
0 i, () satisfies implies 0 satisfies particular j 6= 1 0
satisfies j () satisfy j. Clearly, 0 satisfies 1 (since () does), thus j 6= n + 3
(satisfying simultaneously 1 n + 3 impossible). Consider allocation 00 deduced
0 swapping shares 1 n + 3. have, {2, . . . , n + 2}, satisfies
implies () satisfies implies 0 satisfies implies 00 satisfies i. satisfies n + 3
satisfy 1, 00 . Thus satisfies implies 00 satisfies
i. Moreover, 00 satisfies j {2, . . . , n + 2} (the j above) () not,
therefore neither . proves Pareto-dominated, contradictory
hypotheses.

537

fiBouveret & Lang

Therefore () efficient, conclude, together lemma 5 (point 4), ()
satisfies maximal consistent subset .


Lemma 7 envy-free efficient allocation P() satisfies n + 1 n + 2,
leaves 1 n + 3 unsatisfied.
Proof Suppose satisfy n + 1; 6 (n + 1); now, (n + 2) n + 1 envies
n + 2; 6 (n + 2) efficient giving n + 2 would satisfy n + 2 thus lead
better allocation .
Now, suppose satisfy n + 2, is, 6 (n + 2); (n + 1) n + 2 envies n + 1;
6 (n + 1) again, efficient giving n + 2 would satisfy n + 2 thus lead
better allocation .
Concerning agents 1 n + 3, one notice since identical preferences,
envy-free allocation must either satisfy both, leave unsatisfied. Since cannot
simultaneously satisfied (because x1 ), envy-free allocation leaves unsatisfied.

Lemma 8 exists EEF allocation, exists maximal consistent subset
contain 1 .
Proof Let efficient envy-free allocation. Lemma 2, R regular, efficient envyfree. Lemma 7, R satisfies n + 1 n + 2 leaves 1 n + 3 unsatisfied. Lemma 6,
(R ) satisfies maximal consistent subset , Lemma 4, (R ) 6|= 1 . Therefore {i
| (R ) |= } maximal consistent subset contain 1 .


Lemma 9 exists maximal consistent subset contain 1
exists EEF allocation.
Proof Assume
V exists maximal consistent subset contain 1 , let
model S. point 4 Lemma 5, efficient.
point 1 Lemma 5, regular; Lemma 3, envy-free (i) 1
envy n + 3, (ii) n + 3 envy 1 (iii) n + 1 envy n + 2 (iv) n + 2 envy
n + 1. definition , satisfy n + 3, hence (i) holds. point 3 Lemma 5, 6|= 1
implies satisfy 1, therefore (ii) holds well. finally, point 1 lemma 4, n + 1
n + 2 satisfied , thus (iii) (iv) hold. Therefore envy-free.


position putting things together proving Proposition 6:
Proof (Proposition 6) Lemmas 8 9, existence maximal consistent subset
contain 1 existence efficient envy-free allocation P() equivalent.
Clearly, P() computed polynomial time. Therefore, P polynomial reduction rsi eef
existence, shows latter problem p2 -hard, therefore p2 -complete.


corollary, p2 -completeness result holds general (not necessarily monotonic)
dichotomous preferences:
Corollary 1 eef existence general, dichotomous preference logical form p2 complete.
4.2 Restrictions Language
consequence high complexity, worth studying restrictions variants
latter problem complexity may fall down. investigate three kind
intuitive restrictions eef existence problem, defined by:
fixing number agents, especially, restricting problem case
2 agents;
538

fiEfficiency Envy-freeness Fair Division Indivisible Goods

forcing agents identical preferences;
restricting syntax agents goals, limiting expression subclasses propositional formulae (e.g. clauses, cubes, . . . ).
Contrary general eef existence problem, complexity restrictions
may sensitive whether preferences monotonic not.
4.2.1 Identical Preferences
start considering identical dichotomous preference profiles, is, agents
preference, i.e. formula .
Proposition 7 eef existence N identical dichotomous, monotonic preferences
NP-complete. result holds even fixed number agents N 2.
Proof preferences identical, envy-free allocation satisfies either agents none; now,
preferences monotonic, always possible satisfy least one agent (by giving items).
Therefore, allocation EEF satisfies agents. Clearly, checked
polynomial time given allocation satisfies agents, hence membership NP.
Hardness comes simple reduction set splitting:
Problem 2: set splitting
INSTANCE: collection C = {X1 , . . . , Xn } subsets finite set S.
QUESTION: partition hS1 , S2 subset C entirely contained either
S1 S2 ?
Given instance hC, Si set splitting, let P(C, S) following eef existence instance:
Agents:
Objects:
Preferences:

2 agents,
one object x(a) per element S,
V
W
V
W
1 = 2 = Xi C aXi x(a) (and usual k = Xi C aXi xk (a)): agent
wants least one object set.

easy see set splitting hS1 , S2 hC, Si, possible find allocation
satisfy two agents, giving respectively x(S1 ) x(S2 ). Conversely, suppose
efficient envy-free allocation , allocation must satisfy two agents. Let
1
hS1 , S2 = hx1 ((1)),
Wx ((2))i. Suppose Xi C Xi S1 Xi S2 (say
e.g Xi S1 ). aXi x2 (a) false, thus making 2 false, contradictory initial
hypothesis. Therefore hS1 , S2 set splitting hC, Si.
clearly polynomial-time reduction, hence NP-hardness eef existence 2 agents
identical dichotomous monotonic preferences.


Unlike Proposition 6, Proposition 7 sensitive whether preferences required
monotonic not.
Proposition 8 eef existence N identical dichotomous preferences coBH2 -complete.
result holds even fixed number agents N 2.
Proof preferences identical, envy-free allocation satisfies either agents none. Let
formula representing one agents preferences (of course identical agents).
satisfiable possible satisfy least one agent. case, allocation EEF
satisfies agents. satisfiable, every allocation EEF. Therefore,
exists EEF allocation 1 . . . . . . N satisfiable unsatisfiable. shows
membership coBH2 .
Hardness comes simple reduction sat-or-unsat. Let = h, pair propositional formulae, assumed w.l.o.g. variables common; map following allocation
problem:

539

fiBouveret & Lang

Agents:
Objects:
Preferences:

2 agents;
2 objects v v 0 per propositional variable v appearing , one object w per propositional variable w appearing , one object y;
1 = 2 = 0 (y ) 0 denotes formula variable v
replaced v 0 .

1. Suppose satisfiable, (corresponding negative instance sat-orunsat). possible satisfy least one agent giving objects v
corresponding variables assigned true model . However possible
satisfy simultaneously second agent unsatisfiable (and way 0 ),
first agent already taken y. Therefore case EEF allocation.
2. Suppose satisfiable unsatisfiable (corresponding positive instance
sat-or-unsat). two cases:
satisfiable. case, matter whether satisfiable not, possible satisfy
two agents satisfying simultaneously first one 0 second one.
Consequently EEF allocation.
unsatisfiable (recall case unsatisfiable satisfiable covered
point 1). case clearly impossible satisfy agent. case, empty
allocation efficient envy-free.
Therefore EEF allocation satisfiable unsatisfiable, proves
proposition.


4.2.2 Two Agents
Note two previous results, hardness result holds fixed number
agents ( 2). Things different Proposition 6, hardness hold
N fixed. Namely, following results.
Proposition 9 eef existence two agents monotonic dichotomous preferences
NP-complete.
Proof Hardness corollary Proposition 7. Membership obtained follows. Let h1 , 2
preference profile, 1 , 2 positive. formulae , formulae defined
earlier (see section 3), well F () allocation . efficient either (a)
satisfies agents, (b) satisfies one agent, 1 2 unsatisfiable, (c)
impossible satisfy even one agent, i.e., 1 2 unsatisfiable. (c) impossible
1 , 2 positive. Now, envy-free |= . Therefore, EEF (a)
|= 1 2 (b) |= (1 2 ) . Thus, exists EEF allocation
( 1 2 ) ( (1 2 ) ) satisfiable, hence membership NP.


Proposition 10 eef existence 2 agents dichotomous preferences coBH2 complete.
Proof Membership comes following reduction sat-or-unsat. Consider instance P
EEF problem 2 agents respectively preferences 1 2 . translate instance
instance h, 0 sat-or-unsat defined follows ( defined usual): = ( 1 2 )
(1 2 ) (1 2 ) 0 = (1 2 ). prove satisfiable 0 unsatisfiable
EEF allocation P.
1. Suppose satisfiable, 0 is. Since satisfiable, valid allocation
satisfy agents (because 1 2 satisfiable). Since 0 satisfiable, possible
satisfy least one agent (because 1 2 satisfiable). deduce every
efficient allocation satisfies exactly one agent. Since (1 2 ) (1 2 ) satisfiable,
od(1 ) = od(2 ) (in words, 1 2 logically equivalent). Let allocation

540

fiEfficiency Envy-freeness Fair Division Indivisible Goods

satisfying agent 1 (the case similar agent 2), F () |= 1 , thus F () |= 2|1 .
Since F () 6|= 2 (because impossible satisfy agents), F () 6|= thus
envy-free. Hence every efficient allocation raises envy: EEF allocation.
2. Suppose satisfiable 0 satisfiable.
0 satisfiable. case easy possible satisfy even one agent.
Therefore every allocation efficient envy free.
satisfiable. two cases:
1 2 satisfiable. case, allocation, corresponding model
1 2 , satisfies agents. allocation clearly EEF.
1 2 satisfiable 1 2 satisfiable (the case 2 1 similar).
case possible satisfy agents. However, since satisfiable,
possible satisfy least one, and, point 1, every efficient allocation satisfies
exactly one agent. Since 1 2 satisfiable, model 1
model 2 . allocation corresponding model agent 1
satisfied agent 2, latter agent cannot envy first one.
finally proves correctness reduction, clearly polynomial.
Hardness comes directly Proposition 8.



4.2.3 Restriction Propositional Language
previous results, made specific assumptions formulae expressing
agents preferences, except (sometimes) monotonicity. However, restrict set possible propositional formulae, decrease complexity eef existence problem.
investigate first two natural restrictions propositional language: first case
restrict formulae set clauses (disjunctions literals), second case
preferences expressed using cubes (conjunctions literals). restrictions
match two different kinds real-world problems.
case, agents preferences represented clauses, corresponds
kind problems agent wants one single object certain class. One
consider example set patients waiting kidney transplant.
patient needs one kidney, several ones may compatible.
case, agents preferences represented cubes, corresponds
kind problems agent needs single bundle objects. typical
kind problems agents build object want set basic
material (or virtual) components: set objects stand basic components,
cube one agent stands complete device wants.
Making one two assumptions actually decreases complexity eef existence problem: even renders tractable case clauses objects.
Proposition 11 eef existence agents dichotomous preferences restricted
clauses objects solved polynomial time.
Proof first make two additional assumptions prove complexity problem
decrease two assumptions. (1) suppose first agents preferences
monotonic. one agent non-monotonic preferences, means one negative literal
clause. Giving empty share satisfy without spoiling another agent, thus
safely removed problem. (2) suppose agent wants least one object. one

541

fiBouveret & Lang

agent empty clause goal, means matter gets, cannot satisfied.
Thus safely removed problem. rest proof, consider
problems verify assumptions (1) (2).
proof based following result: agents preferences disjunction objects
assumptions (1) (2), allocation Pareto-efficient envy-free satisfies
every agent. implication immediate. prove implication need notice
agent satisfied receives least one object clause. take allocation
agent satisfied . either possible satisfy without
spoiling another agent, one object clause given agent want it,
already satisfied another agent: case Pareto-efficient. possible
objects agent disjunction given agents truly
want them: case, agent envies agents, thus envy-free.
Therefore, finding Pareto-efficient envy-free allocation comes finding allocation gives agent one object wants. Thus, instance P eef existence
problem reduced maximal matching problem, bipartite graph GP one
node per agent one side, one node per object side, edge
agent-node object-node agent clause. easily
checked Pareto-efficient envy-free allocation matching size
n GP . latter problem solved time O(nm) (Ford & Fulkerson, 1962),
size biggest disjunction.


investigate case agents preferences cubes objects.
surprisingly, case harder previous one, remains NP.
Proposition 12 eef existence agents dichotomous preferences restricted
cubes objects NP-complete. result holds require preferences
monotonic.
Proof proof organized follows. first prove membership NP without assumption
monotonicity preferences. show hardness monotonic case.
first introduce additional notations. following, denote Obj + (i) (resp.

Obj (i)) set objects appearing positive (resp. negative) literals agent cube. Let
allocation. said minimally regular i, either (i) = Obj + (i) (i) = .
given allocation , denote R corresponding minimally regular allocation, is,
allocation i, R (i) = Obj + (i) 6 (i), R (i) = Obj + (i) Obj + (i) (i).
+
write
Sat() set agents satisfied : Sat(M R ) = {i | R (i) = Obj (i)}),
Allocated() = iI (i) (the set objects allocated agent).
following result:
Lemma 10 Let allocation. have:
R minimally regular;
Sat() Sat(M R );
Pareto-efficient, R Pareto-efficient.
Proof
agent i, R (i) = R (i) = Obj + (i) definition R . Therefore
R minimally regular.
Let allocation, let agent. satisfied , Obj + (i) (i)
Obj (i) (i) = . definition R , R (i) = Obj + (i), thus still
Obj + (i) (i) Obj (i) (i) = , therefore agent still satisfied R .
proves Sat() Sat(M R ).
Suppose Pareto-efficient, suppose 0 Pareto-dominates
R . Sat() Sat(M R ) ( Sat( 0 ), contradicts fact
Pareto-efficient. proves third point.


542

fiEfficiency Envy-freeness Fair Division Indivisible Goods

Lemma 11 minimally regular allocation R Pareto-efficient
(a) 6 Sat(M R ) (b) Obj + (i) Allocated(M R ) = .
Proof Let R minimally regular allocation, suppose
6 Sat(M R ) Obj + (i) X \ Allocated(M R ). allocation 0 j 6=
0 (j) = R (j) 0 (i) = Obj + (i) well-defined (since Obj + (i) among set unallocated
objects R ), Pareto-dominates R , since agents satisfied R satisfied
0 , satisfied 0 whereas R .
Conversely, suppose R Pareto-efficient, let 0 Pareto-efficient alloca0
tion Pareto-dominates R . Lemma 10,
R Pareto-efficient, Pareto0
dominates R . Sat(M R ), R (i) = R (i) = Obj + (i) since two allocations
0
minimally regular, agent satisfied R satisfied
R . Moreover,
0
+
j 6 Sat(M R ) R (j) = Obj (j). Since Allocated(M R ) = iSat(M R ) Obj + (i)

0
+
+
since
R (j) X \
iSat(M R ) Obj (i), Obj (j) X \ Allocated(M R ),
finally proves lemma.

two lemmas provide procedure check given allocation Pareto-efficient: first
compute R (which done polynomial time). Lemma 10, Sat() Sat(M R ).
inclusion strict (that is, Sat() ( Sat(M R )), obviously Pareto-efficient since R
Pareto-dominates it. Otherwise, checking Pareto-efficient comes checking R
Pareto-efficient, comes down, according Lemma 11, n set inclusion tests. Now, checking
envy-free still polynomial. Hence problem NP.
prove hardness problem focusing monotonic preferences (that is,
Obj (i) = i). hardness proof, need additional lemmas.
Lemma 12 Let allocation suppose agents monotonic preferences.
envy-free R envy-free.
Proof Let allocation. Lemma 10, Sat() Sat(M R ). Conversely, let Sat(M R ).
R (i) (i), proves Sat(), deal monotonic preferences.
suppose envies j R . satisfied R , thus neither satisfied
. Since R (j) (j) agent preferences monotonic, still envy j . Thus
envy-free, R .

important corollary lemma deal monotonic cubes, existence
Pareto-efficient envy-free allocation equivalent existence minimally regular Paretoefficient envy-free allocation. Therefore restrict existence problem minimally
regular allocations.
Lemma 13 Let j two different agents (and still suppose agents monotonic
preferences). (there exists minimally regular allocation R envies j)
Obj + (i) Obj + (j).
Proof Let R minimally regular allocation, suppose envies j. obviously
satisfied j is; hence R (j) = Obj + (j). Since envies j, thus directly
Obj + (i) Obj + (j).
Conversely, suppose Obj + (i) Obj + (j). allocation R gives Obj + (j)
j nothing agents clearly minimally regular, obviously
envies j.

introduce NP-complete problem use prove NP-hardness (in monotonic
case):
Problem 3: exact cover 3-sets (Karp, 1972)
INSTANCE: set size 3q, collection C = hS1 , . . . , S|C| 3-element subsets
QUESTION: C contain exact cover S, i.e. sub-collection C 0 C every element
occur exactly one member C 0 ?
Given instance hS, C = hS1 , . . . , S|C| ii exact cover 3-sets (we assume w.l.o.g.
Si different), let P(S, C) following eef instance:

543

fiBouveret & Lang

Agents:

set |C| + 2|S| agents = I1 I2 , I1 = {1, . . . , |C|} I2 = {|C| + 1, . . . , |C| +
2|S|},

Objects:

set 2|S| items X = X1 X2 , X = {x1 , . . . , x|S| } X 0 = {x01 , . . . , x0|S| },
pair (xi , x0i ) corresponding different element ai S,
V
agent I1 , = aj Si xj , k {1, . . . , |S|}, |C|+2k1 =
|C|+2k = xk x0k .

Preferences:

words, first |C| agents preferences correspond sets collection C, last
2|S| agents gathered pairs, member pair preferences
member.
Since Si different size 3, 6= j, Si 6 Sj , thus Obj + (i) 6 Obj + (j).
definition preferences, Obj + (i) 6 Obj + (j) (i, j) I1 I2
(i, j) I2 I1 well. Hence, Lemma 13, potential source envy instance
comes agent I2 envying partner. Since impossible satisfy two agents
pair time, allocation envy-free satisfy agent
I2 .
Lemma 11, minimally regular allocation R Pareto-efficient
6 Sat(M R ) Obj + (i) X \ Allocated(M R ). Therefore minimally regular allocation R
Pareto-efficient envy-free k {1, . . . , |S|} R (|C| + 2k 1) =
{xk , x0k } R (|C| + 2k) = {xk0 , x0k0 }, k0 {1, . . . , |S|} {xk0 , x0k0 }
X \ Allocated(M R ) (this last condition comes xk0 6 Allocated(M R ), since xk0 x0k0 must
allocated together minimally regular allocation). Finally, R Pareto-efficient envy-free

kS {1, . . . , |S|}, I1 xk R (i), is,
iI1 R (i) =
aj {xj }.
Let R minimally regular allocation. define sub-collection g(M R )
g(M R ) = {Si C | R (i) = Obj + (i)}. mapping g clearly defines bijection set
non-overlapping
sub-collections


set minimally regular allocations, one notice
iI1 R (i) =
Sj g(M R )
ak Sj {xk }.
1
0
Let C 0 CSis exact cover
S.
g (C ) exists
valid minimally regular allocation.
1
0
iI1 g (C )(i) = Sj C ak Sj {xk } = aj {xj } C 0 cover. Therefore

g 1 (C 0 ) Pareto-efficient envy-free previous result.
Conversely, suppose minimally regular Pareto-efficient andSenvy-free allocation
R .

g(M R ) non-overlapping sub-collection C, Si g(M R ) aj Si {aj } =



{aj } = xj {M R (i) | iI1 } {aj }. R Pareto-efficient envy-free,
SiI1 xj R (i)S


iI1 R (i) =
aj {xj }, hence
xj {M R (i) | iI1 } {aj } =
xj {xj | aj S} {aj } = S. proves
g(M R ) exact cover S.
reduction clearly polynomial; hence NP-hardness.


previous proof (and especially Lemma 13) sheds light hard case
eef existence problem conjunctive preferences. instance problem,
possible source envy comes Obj + (i) Obj + (j) deal minimally
regular allocations. case, cannot satisfy j without raising envy i.
Obj + (i) ( Obj + (j), one remove j instance, satisfied,
envy (note true non-monotonic preferences, one
give object agent want prevent envy another agent,
thus cannot restrict problem minimally regular allocations).
pair (i, j), 6= j, Obj + (i) = Obj + (j), one remove every
agent j 6= Obj + (j) ( Obj + (i). that, easy
see every minimally regular allocation envy-free. Since least one Paretoefficient minimally regular allocation, guarantees existence Pareto-efficient
envy-free allocation case, may preferences monotonic not. formally:
544

fiEfficiency Envy-freeness Fair Division Indivisible Goods

Proposition 13 always exists efficient envy-free allocation instance
eef existence problem agents dichotomous preferences restricted
cubes objects following condition holds:

(i, j) 2 , 6= j, (i = j ) k k 6= i, k 6= j Obj + (k) ( Obj + (i) . (1)
course, equivalence condition 1 existence Paretoefficient envy-free allocation7 , may happen that, given two agents j
preferences, satisfaction one two agents prevented
another agent k Obj + (i) Obj + (k) 6= , Obj + (k) 6 Obj + (i).
hard case: two agents j identical preferences, agent k
Obj + (k) ( Obj + (i), may however possible prevent j satisfied
satisfying another agent k 0 Obj + (i) Obj + (k 0 ) 6= , following example
shows: 1 = 2 = x1 x2 , 2 = x2 x3 . Satisfying agent 2 leads efficient
envy-free allocation, whereas condition 1 hold.
Proof (Proposition 13) following denote I1 set agents whose preferences inclusion-minimal, is, I1 = {i | @j Obj + (j) Obj + (i)}. denote
I2 agents: I2 = \ I1 .
simple procedure finding Pareto-efficient envy-free allocation: greedily select
maximal set agents I1 , agent receives Obj + (i) (until becomes
impossible select another unsatisfied agent I1 ).
allocation resulting procedure minimally regular, Lemma 13 clearly
envy-free (by definition I1 ). Moreover, suppose 6 Sat() Obj + (i) X \
Allocated(). 6 I1 , since case, procedure would selected therefore
satisfied. 6 I2 , case, j I1
Obj + (j) Obj + (i), therefore Obj + (j) X \ Allocated(), impossible
reasons above. Therefore, Pareto-efficient Lemma 11.


investigated two natural restrictions propositional language used
dichotomous preferences, introduce general result, based fact
hardness result Proposition 6 clearly linked NP-completeness sat
problem. happens restrict expression preferences certain class C
sat(C) solved polynomial time ? general case, additional
assumption made C cannot say anything complexity eef
existence problem complexity general problem. However, C
closed conjunction, complexity falls NP:
Proposition 14 Let C class propositional formulae closed conjunction
sat(C) P. eef existence agents dichotomous preferences
expressed formulae class C NP.
Proof Membership NP comes fact that, non-deterministically guessed
allocation , checking envy-free Pareto-efficient done polynomial time. Given
allocation, checking envy-free done time O(nm) (where length biggest
CNF), checking, unsatisfied agent, would satisfied share
another agent. Given set Sat() ofVthe agents satisfied , checking Pareto-efficiency
comes check \ Sat() jsatI j unsatisfiable. done making
linear number calls sat(C) oracle, since preferences C, since class closed
conjunction. thus proves eef existence formulae C NP.

7. Otherwise, Proposition 12 would false, would proved P = NP.

545

fiBouveret & Lang

corollary, classes propositional formulae sat(C) polynomial,
contain cubes, eef existence problem NP-complete. applies
example class 2-CNF formulae class Horn clauses.
4.3 Alternative Efficiency Criteria
main reason high complexity eef existence problem Paretoefficiency allocation hard check. consequence, complexity decrease
choose alternative notion efficiency. investigate two alternative efficiency
criteria: completeness allocation, maximal number satisfied agents.
First, weaken Pareto-efficiency requiring allocations complete.
Unsurprisingly, makes complexity fall NP.
Proposition 15 problem deciding whether complete envy-free allocation agents
dichotomous preferences exists NP-complete, even 2 agents identical preferences.
Proof Since checking allocation complete done polynomial time, membership
NP straightforward.
prove hardness reduction sat problem. Let propositional formula.
create following instance resource allocation problem : map propositional variable
different object add another object ; two agents preferences,
represented formula y. Obviously, every complete allocation satisfies least one agent (the
one receives y). satisfiable, possible satisfy agent well share
corresponds model : thus case exists complete envy-free allocation.
Conversely, suppose exists complete envy-free allocation. one two agents
must satisfied thanks (since cannot given agents), hence proving satisfiable.


Notice hardness proof longer valid require preferences
monotonic. anonymous referee pointed out, proved reduction
exact-cover-by-3-sets result holds require monotonicity, relaxing
restriction number agents. However, know NP-hardness holds
two agents monotonic preferences (we conjecture does).
Secondly, think looking cardinality-maximal subsets satisfied agents,
instead inclusion-maximal subsets Pareto-efficiency does.
Proposition 16 problem deciding whether envy-free allocation satisfying maximal number agents monotonic dichotomous preferences exists p2 -complete.
Proof Checking whether exists envy-free allocation satisfying least k agents NP;
therefore, maximal number agents satisfied simultaneously computed
dichotomy within log n NP oracles. suffices, step done, guess allocation
check envy-free satisfies maximal number agents, adding one NP oracle.
Hence membership p2 .
Hardness obtained reduction following problem8 :
Problem 4: max-index-satodd (Wagner, 1990)
INSTANCE: sequence propositional formulae h1 , . . . , n (i unsatisfiable) (i+1
unsatisfiable.)
QUESTION: maximum index satisfiable odd number ?
8. problem referred several times literature, seem name.

546

fiEfficiency Envy-freeness Fair Division Indivisible Goods

First notice complexity latter problem decrease following assumptions:
n even (if not, add formula end sequence);
sets propositional variables formulae pairwise-disjoint (if two formulae
i+1 share variables, transform variable v say copy v 0 :
change (un)satisfiability set propositional variables i+1
disjoint).
Let h1 , . . . , n instance max-index-satodd two additional latter assumptions,
let Vi denote set propositional variables appearing . translate instance
following instance P(1 , . . . , n ):
Agents:
Objects:
Preferences:

2n agents : I1,2 I3,4 In1,n , group I2i1,2i contains four agents
{4i 3, 4i 2, 4i 1, 4i}.
create v Vi (for {1, . . . , n}) four objects xv , xv , yv , yv ,
add n dummy objects dk (k {1, . . . , n});
group I2i1,2i (i {1, . . . , n/2}), preferences agents are:
4i3 = 4i2 = (02i1 d2i1 ) (02i d2i ),
V
4i1 = vV2i1 V2i xv xv ,
V
4i = vV2i1 V2i yv v ,
0k formula k v replaced xv yv , v
replaced xv v .

proof proposition primarily based fact problem split n/2
subproblems concerning agents I2i1,2i :
Lemma 14 denote P|i restriction P(1 , . . . , n ) set agents I2i1,2i
objects want. allocation said splittable 6= j, (I2i1,2i ) (I2j1,2j ) = .
restriction splittable allocation (I2i1,2i ) written |i .
exists envy-free allocation satisfying maximal number agents P(1 , . . . , n )
exists splittable allocation {1, . . . , n/2}, |i envy-free satisfies
maximal number agents P|i .
Proof First, restrict attention regular allocations, regular means, Lemma 2,
allocation gives object agent wants it. safe reasons
Lemma 2: existence envy-free allocation satisfying maximal number agents
equivalent existence regular envy-free allocation satisfying maximal number
agents. Since sets Vi pairwise-disjoint, two different subproblems P|i P|j share
object, therefore regular allocation splittable.
0
Let regular allocation. Suppose allocation |i
problem P|i
satisfies agents |i . splittable allocation made sub-allocations |j
0
j 6= |i
valid, regular, satisfies agents . Conversely, suppose
regular allocation 0 satisfies agents . least one
0
strictly agents I2i1,2i satisfied |i
|i . proves regular
allocation satisfies maximal number agents i, |i satisfies maximal
number agents.
Suppose envy-free. obviously |i well. Conversely, suppose
|i envy-free. envy-free, (1) agent envy another agent
group, |i envy-free, (2) agent group envy
agent another group j, since (I2i1,2i ) (I2j1,2j ) = .

interpretation Intk Vk , define following sets objects:
f (Intk ) = {xv | Intk |= v} {xv | Intk 6|= v};
g(Intk ) = {yv | Intk |= v} {yv | Intk 6|= v};
f (Intk ) = {xv | Intk 6|= v} {xv | Intk |= v};

547

fiBouveret & Lang

g(Intk ) = {yv | Intk 6|= v} {yv | Intk |= v}.
Moreover, given two interpretations Int2i1 Int2i respectively V2i1 V2i , write
Int2i1 ,Int2i following allocation P|i :
Int2i1 ,Int2i (4i 3) = f (Int2i1 ) g(Int2i1 ) {d2i1 };
Int2i1 ,Int2i (4i 2) = f (Int2i ) g(Int2i ) {d2i };
Int2i1 ,Int2i (4i 1) = f (Int2i1 ) f (Int2i );
Int2i1 ,Int2i (4i) = g(Int2i1 ) g(Int2i ).
Lemma 15 Let Int2i1 Int2i two respective interpretations V2i1 V2i .
Int2i1 ,Int2i satisfies agents 4i 1 4i;
Int2i1 ,Int2i satisfies 4i 3 Int2i1 |= 2i1 , Int2i1 ,Int2i satisfies 4i 2
Int2i |= 2i ;
Proof Let Int2i1 Int2i two respective interpretations V2i1 V2i .
definition, f (Intk ) contains xv xv v Vk , thus Int2i1 ,Int2i (4i1) contains xv
xv v V2i1 V2i . Therefore agent 4i 1 satisfied Int2i1 ,Int2i (4i 1).
reasoning holds agent 4i.
definition, 2i1 satisfied Int2i1 02i1 satisfied interpretation
defined setting true xv yv (resp. xv yv ) Int2i1 |= v
(resp. Int2i1 6|= v). Thus, Int2i1 |= 2i1 , Int2i1 ,Int2i satisfied 02i1 . Since
satisfies d2i1 , 4i 3 satisfied Int2i1 ,Int2i . Conversely, 4i 3 satisfied
Int2i1 ,Int2i , obviously 02i1 must satisfied Int2i1 ,Int2i (because 4i 3
receive d2i ), proves 2i1 satisfied Int2i1 . result holds
2i agent 4i 2.

Lemma 16 Consider restricted problem P|i .
neither 2i1 2i satisfiable, interpretations Int2i1 Int2i V2i1
V2i respectively, Int2i1 ,Int2i envy-free satisfies maximal number agents.
2i1 satisfiable, M2i1 model 2i1 , M2i1 ,Int2i satisfies maximal
number agents. Moreover, envy-free allocation satisfying maximal number
agents case.
2i1 2i satisfiable, M2i1 M2i respective models 2i1
2i , M2i1 ,M2i satisfies maximal number agents envy-free.
Proof Suppose neither 2i1 2i satisfiable. allocation |i satisfying 4i 3
(resp. 4i 2) must least one v V2i1 V2i {xv , xv , yv , yv }
|i (4i 3) (resp. |i (4i 2)), otherwise one could deduce model 2i1 2i
|i (4i 3) (resp. |i (4i 2)). Thus agents 4i 4i 1 satisfied case:
maximal number agents possible satisfy 2. Since every allocation form
Int2i1 ,Int2i satisfies agents 4i 1 4i, satisfies maximal number agents
case. obviously envy-free, since neither d2i d2i1 shares agents 4i 1
4i, thus 2 agents cannot envy them.
Suppose 2i1 satisfiable. allocation satisfying agents 4i 3
4i 2 must satisfy 02i1 one two agents, 02i one (because d2i
d2i1 ). Since 2i satisfiable, case neither 4i 1 4i satisfied |i ,
reasons above. deduce possible satisfy 4
agents. Neither possible satisfy 3 agents 4i 3 4i 2 satisfied. consider
allocation M2i1 ,Int2i , M2i1 model 2i1 . Lemma 15, M2i1 ,Int2i satisfies
3 agents: 4i 3, 4i 1 4i. allocation envy-free, allocation satisfying
maximal number agents case (because either 4i 3 4i 2 remains unsatisfied
allocation, envying partner).
Lastly, suppose 2i1 2i satisfiable, let M2i1 M2i models.
Lemma 15, M2i1 ,M2i satisfies 4 agents, thus satisfying maximal number agents
obviously envy-free.


548

fiEfficiency Envy-freeness Fair Division Indivisible Goods

conclude proof. Lemma 14, exists envy-free allocation satisfying
maximal number agents P(1 , . . . , n ) exists splittable allocation
{1, . . . , n/2}, |i envy-free satisfies maximal number agents P|i . Lemma 15,
exists envy-free allocation |i satisfying maximal number agents P|i either
none two formulae 2i1 2i satisfiable, are. suppose maximum
index j j satisfiable odd number (say 2i 1). case, envyfree allocation satisfying maximal number agents P|i since 2i1 satisfiable 2i not.
Conversely, suppose maximum index j j satisfiable even number (say 2i).
case, envy-free allocation satisfying maximal number agents P|k , since
P|k either two formulae 2k1 2k satisfiable (if k i), none (if k > i).
thus reduction latter problem problem existence envy-free
allocation satisfying maximal number agents. proves p2 -completeness.


5. Non-dichotomous Preferences
consider case preferences longer dichotomous.
5.1 General Logical Preferences
Again, since explicit description preferences exponentially large, need
compact description thereof clear. Many languages exist succinct representation
preference. limit investigation following class languages:
Definition 9 (Compact language logical form) Let L language representing set preference relations set alternatives 2X . L said compact
language logical form :
(a) able express dichotomous preference compactly previous language
introduced, is, language expressing dichotomous preferences propositional
form polynomially reduced L;
(b) comparing two sets goods done polynomial time.
two previous conditions practise restricting, met many
languages succinct representation representation. See instance paper Lang
(2004) survey logical languages compact preference representation. Note
several widely studied representation languages, CP-nets graphical languages, logical form, fail represent preferences expressed
logical formulas within polynomial space9 . Interestingly, Proposition 6 extends
compact representation language logical form:
Corollary 2 eef existence monotonic compact preference logical form p2 complete.
Proof eef existence problem solved using following algorithm:
1. non-deterministically guess allocation ;
2. check envy-free;
3. check Pareto-efficient.
9. natural question complexity fair division problems preferences expressed
languages. left study.

549

fiBouveret & Lang

condition (b), step two done polynomial time, since requires quadratic number
polynomial oracles. condition (b) also, problem checking whether given allocation
Pareto-efficient co-NP. Therefore, previous non-deterministic algorithm uses 1 NP oracle,
runs polynomial-time. Hence membership p2 .
Hardness corollary Proposition 6 together condition (a).


5.2 Numerical Preferences Logical Form
latter result preferences numerical since Pareto-efficiency
envy-freeness purely ordinal notions. Now, preferences numerical, implies
possibility intercomparing aggregating preferences several agents, then, besides
Pareto-efficiency, may consider efficiency based social welfare functions. consider
two classical way aggregating collection utility functions
social welfare function:
Definition 10 (Classical utilitarianism egalitarianism) Given collection individual utility functions hu1 , . . . , un i, i, ui : 2X Z:
?

P classical utilitarian social welfare function function defined sw : 7
ui ((i));

egalitarian social welfare function function defined sw(e) : 7 mini ui ((i));
Maximizing egalitarian social welfare function often viewed alternative criterion fairness, encoding Rawlsian egalitarian point view (Rawls, 1971). However,
see Proposition 17, egalitarianism (as well classical utilitarianism)
always compatible envy-freeness. link two alternative points
view fairness deeply investigated Brams King (2005).
Since deal anymore ordinal (or dichotomous) preferences,
define precisely mean compact representation numerical preferences.
pick basic numerical language one simple compact languages,
consisting associating numerical weights propositional formulae see e.g. (Chevaleyre,
Endriss, & Lang, 2006), (Ieong & Shoham, 2005) context coalitional games:
Definition 11 (Weighted propositional language) Given set goods X, weighted
propositional language associated X set possible subsets LX Z.
Given set weighted propositional formulae = {h1 , w1 i, . . . , hr , wr i}, utility
function associated is:

1 |= k
X
u : 2
Z
, k =
Pr
0 otherwise.

7
k=1 wk k
Using language, preferences monotonic formulae positive weights
positive.
Now, define notion compact numerical language:
Definition 12 (Compact numerical language logical form) Let L language representing set utility functions set alternatives 2X . L said
compact numerical language logical form :
550

fiEfficiency Envy-freeness Fair Division Indivisible Goods

(a) able express utility function compactly weighted propositional
language, is, weighted propositional language polynomially reduced
L;
(b) computing utility one set goods done polynomial time.
course, since compact numerical language logical form compact
language logical form, complexity result form Corollary 2 still holds. However,
appears complexity problem deciding whether efficient envy-free
allocation exists decreases Pareto-efficiency replaced weaker notion:
maximization one two latter social welfare functions.
Proposition 17 Given collection utility functions 2R given compact numerical
language logical form:
problem deciding whether exists envy-free allocation among
maximize utilitarian social welfare p2 -complete, even N = 2, even
agents identical preferences.
problem deciding whether exists envy-free allocation among
maximize egalitarian social welfare p2 -complete, even N = 2.
Proof results, membership comes easily fact maximum value social
welfare computed dichotomy set possible social welfare values;
exponentially many, therefore need polynomial number NP oracles this; step
done, suffices guess allocation check envy-free maximizes social
welfare, adding one NP oracle.
Hardness obtained utilitarian egalitarian cases simple reduction instance
fair division problem preferences expressed weighted propositional language
following problem:
Problem 5: max-sat-asgeven (Wagner, 1987)
INSTANCE: propositional formula Conjunctive Normal Form, set propositional
variables V = {v1 , . . . , vn }, weight function w interpretations : V {0, 1},
def P
i1
defined w(I) =
.
I(vi ) 2
QUESTION: maxM model w(M ) even number (in words, v1 falsified model
maximal weight) ?
suppose formula least model 6|= v1 .
change complexity, v1 verified every model , clearly answer problem
max-sat-asgeven no: consequence, every instance h, V without assumption
solved first checking v1 unsatisfiable (which coNP-complete problem), then,
not, solving unsat-or-max-sat-asgeven problem instance least one model
falsifying v1 .
Utilitarian social welfare: instance h, V max-sat-asgeven , create following
instance P(, V ):
Agents:
Objects:
Preferences:

2 agents;
literal vi , create two objects xi x0i , except v1 ,
one object x1 created, add two objects 0 ;
agents 1 2 identical preferences, ask h( y) ( 0
0 ), 2n+1 i, hx1 y, 1i, . . . , hxn y, 2n1 i, hx02 0 , 2i, . . . , hx0n 0 , 2n1 i, formula symbol vi replaced xi , 0 formula
symbol vi (except v1 replaced x1 ) replaced x0i .

551

fiBouveret & Lang

Let (M1 , M2 ) pair models (with possibly M1 = M2 ) M2 6|= v1 . define
allocation M1 ,M2 by: M1 ,M2 (1) = {y} {xi |M1 |= vi } M1 ,M2 (2) = {y 0 } {x0i |M2 |= vi }.
proof based following lemma:
Lemma 17 exists envy-free allocation among maximize utilitarian social welfare
two models M1 M2 (possibly M1 = M2 ) M2 6|= v1 , M1 ,M2
envy-free maximizes utilitarian social welfare.
Proof Let allocation maximizing utilitarian social welfare. Let model
falsifying v1 (our hypothesis least one). F (M,M (1)) |=
F (M,M (2)) |= 0 0 , proves individual utility two agents least 2n+1 .
Hence least one allocation whose utilitarian social welfare greater equal
2n+2 . Therefore, allocation maximizing utilitarian social welfare must
F ((1)) |= F ((2)) |= 0 0 , vice versa. Moreover, either x1 6 (1), x1 6 (2).
Suppose x1 (2): swapping shares agents leads allocation 0
completely equivalent respect Pareto-efficiency envy-freeness, due identical
preferences. therefore assume w.l.o.g x1 6 (2)
Since F ((1)) |= , model M1 (1) = {y} {xi |M1 |= vi } S1 ,
S1 {x1 , x02 , . . . , x0n }. Similarly, model M2 M2 6|= v1 , (2) =
{y 0 } {x0i |i > 1, M2 |= vi } S2 , S2 {x1 , . . . , xn }. consider allocation M1 ,M2 ,
well-defined since M2 6|= v1 . u1 () = u1 (M1 ,M2 ), since x0i satisfy
formula preferences agent 1 without 0 (given agent 2), u2 () = u2 (M1 ,M2 )
reasons. terms, M1 ,M2 gives utility agents. M1 ,M2
thus envy-free maximizes utilitarian social welfare.

Lemma 17, thus restrict problem allocations form M1 ,M2 .
have, M1 M2 defined earlier, u1 (M1 ,M2 ) = 2n+1 + w(M1 ) u2 (M1 ,M2 ) = 2n+1 +
w(M2 ); thus sw? (M1 ,M2 ) = 2n+2 + w(M1 ) + w(M2 ). have: argmaxM ,M sw? (M1 ,M2 ) =
1
2
argmax(M ,M ) {w(M1 )+w(M2 )|M1 6|=v1 M2 6|=v1 } . Given symmetry problem, assume
1
2
M2 satisfy M2 6|= v1 , thus latter allocation becomes: Mopt ,argmaxM {w(M2 )|M2 6|=v1 } ,
2
Mopt model maximal weight.
Suppose Mopt 6|= v1 , allocation maximizing utilitarian social welfare Mopt ,Mopt
clearly envy-free, agents utility. suppose Mopt |= v1 ,
allocation maximizing utilitarian social welfare Mopt ,Mopt0 , Mopt0 model
maximal weight assigns v1 false. w(Mopt0 ) < w(Mopt ), thus u1 (Mopt ,Mopt0 ) >
u2 (Mopt ,Mopt0 ), hence allocation envy-free.
latter reduction clearly polynomial (recall weights 2n+1 encoded using
linear space). proves proposition utilitarian case.
Egalitarian social welfare: instance h, V max-sat-asgeven , create following
instance P(, V ):
Agents:
Objects:
Preferences:

2 agents;
literal vi , create two objects xi x0i , add two objects
y0 ;
preferences agent 1 hx1 , 1i, . . . , hxn , 2n1 i, h y, 2n i, preferences
agent 2 hy 0 , 22n i, hx1 , 1i, formula symbol vi
replaced xi .

Every allocation maximizes egalitarian social welfare must give least utility 22n
agent 2. case, egalitarian social welfare given utility agent 1,
utility cannot greater 22n . Therefore, maximizing social welfare comes maximizing
utility agent 1, words give items corresponding model maximum
weight. v1 set true model, x1 given agent 1, since given
agent 1, agent 2 could get strictly higher utility agent 1s share. Therefore allocation
envy-free. v1 set false latter model, x1 given agent 1, thus given
agent 2, producing envy-free allocation. Since reduction polynomial, proves hardness
egalitarian case.


552

fiEfficiency Envy-freeness Fair Division Indivisible Goods

notice combination envy-freeness numerical criterion
classical utilitarianism egalitarianism induces complexity gap, since, stated
Bouveret, Fargier, Lang, Lematre (2005), complexity problems maximizing classical utilitarian egalitarian collective utility functions, agents
weighted logical preferences, NP-complete.
previous proof utilitarian case, notice hardness result still
holds require allocation Pareto-efficient instead maximizing utilitarian
social welfare. suggests case language extending weighted propositional
formulae, eef existence problem identical preferences much harder
case agents identical dichotomous preferences. actually following
result:
Proposition 18 Given collection N identical utility functions 2R given compact
numerical language logical form problem deciding whether Pareto-efficient
envy-free allocation exists p2 -complete, even N = 2, even preferences
monotonic.
Proof Since preferences identical, envy-free allocation satisfies agents equally. Thus,
Pareto-efficient envy-free allocation, one, allocation gives everyone utility
, maximal among set allocations satisfy everyone equally. value computed
using polynomial number NP oracles (like previous proof). value
, checking Pareto-efficient envy-free allocation comes check
allocation giving least agents, least + 1 least one agent,
problem coNP, hence adds one call NP oracle.
hardness proof, one may notice reduction one used utilitarian
case proof Proposition 17 works case, allocation Pareto-efficient
envy-free particular problem envy-free maximizes utilitarian social
welfare.


5.3 Additive Numerical Preferences
last case consider case additive numerical preferences. Additive
numerical preferences degenerate case weighted logical preferences,
formulae single positive literals. words, preferences agent given
set pairs hxk , wk i, xk object wk weight (possibly 0)
associated object. utility function associated preferences thus
following:
u : 2X Z
P

7
xk wk .
Notice agents preferences monotonic numbers wk
positive.
preference representation language natural one dealing
resource allocation problems; however, unable express compactly kind dependencies (superadditivity subadditivity) objects. particular,
extend dichotomous preferences. Hence previous hardness results extend
additive preferences. However, since still able compare two alternatives
polynomial time, membership p2 guaranteed.
553

fiBouveret & Lang

intuition problem hard eef existence problem
dichotomous preferences:
Conjecture 1 eef existence additive numerical preferences p2 -complete, even
preferences monotonic.
know problem NP-hard (this implied Proposition 20
presented later) p2 , precise complexity remains open. However, things become
much easier require allocation complete, instead Pareto-efficient.
case already investigated Lipton et al. (2004), following result:
Proposition 19 (Lipton et al., 2004) problem deciding whether exists
complete envy-free allocation agents additive preferences NP-complete, even
preferences monotonic.
restrictions eef existence problem additive preferences worth
studied. First, study dichotomous case restriction identical additive
preferences:
Proposition 20 eef existence N identical additive numerical preferences NPcomplete, fixed N 2. result holds require preferences
monotonic.
Proof Membership easy prove. Since preferences identical (we write hu(x1 ), . . . , u(xp )i
utility vector associated set object), allocation Pareto-efficient gives
object xj u(xj ) > 0 one agent, trashes object xj u(xj ) 0.
Moreover, allocation envy-free agents utility. two latter
properties checked polynomial-time, hence membership NP.
Hardness comes reduction partition:
Problem 6: partition
INSTANCE: finite set size s(a) N
P S.P
QUESTION: subset 0 s(a) = aS\S 0 s(a) ?
given instance hS, si partition problem, create following instance P(S, s)
eef existence problem:
Agents:
Objects:
Preferences:

2 agents;
S, associate object xa ;
two agents preferences identical defined size elements
initial set: u(x(a)) = s(a).

isP
Pareto-efficient
P envy-free allocation P(S, s) allocation
x(1) u(x) = x(2) u(x), is, partition problem returns true. reduction
clearly done polynomial time, proves proposition.


another interesting case case preferences necessary identical,
atomic utilities ui (xj ) either 0 1. words, agent either
wants object want it, agent wants maximize number
desired objects gets.
Proposition 21 eef existence additive 01-preferences (i.e. i, j, ui (xj ) {0, 1})
NP-complete.
554

fiEfficiency Envy-freeness Fair Division Indivisible Goods

Proof Pareto-efficiency easy check case. first safely remove objects
appear anywhere preferences. Afterwards, allocation Pareto-efficient
object xj given agent ui (xj ) = 1, following reasons. () Let
Pareto-efficient allocation, suppose xj given agent,
given agent ui (xj ) = 0. Let k agent uk (xj ) = 1 (there
one since previously trashed undesired objects). giving xj agent k increases
ks utility others utilities remains same. Thus Pareto-dominated. () Let
allocation object xj given
P
ui (xj ) = 1,
P agent iP
P suppose
Pareto-dominated allocation 0 . iI ui ( 0 (i)) = iI xj 0 (i) ui (xj ) > iI ui ((i)) =
P P
iI
xj 0 (i) ui (xj ) = p. Therefore least one ui (xj ) ui (xj ) > 1,
possible due restriction 01-preferences.
thus give simple way check Pareto-efficiency, checking sum utilities equal
number objects p desired least one agent. usual, envy-freeness verified
polynomial time; therefore eef existence additive 01-preferences NP.
Hardness proved polynomial reduction exact cover 3-sets (problem 3).
Given instance hS, C = hS1 , . . . , S|C| ii exact cover 3-sets, create following eef existence instance P(C, S) (we suppose elements written ai , {1, . . . , |S|}):
Agents:
Objects:
Preferences:

set 3|C| agents gathered triples {3i 2, 3i 1, 3i};
set |S| + 3|C| items X =SM (M main, dummy),
= {m1 , . . . , m|S| }, = i{1,...,|C|},j{1,2,3} {di,j };

agents {3i 2, 3i 1, 3i} desire set objects ak Si {mk }
{di,1 , di,2 , di,3 } (the three objects corresponding Si plus three dummy objects
di,j ).

exact cover C 0 instance hC, Si, consider following allocation:
agent triple {3i 2, 3i 1, 3i} gets respectively di,1 , di,2 , di,3 , Si C 0 ,
one three agents gets one three objects mk corresponding elements set
Si . allocation admissible Pareto-efficient (because objects allocated).
envy-free, following reasons:
agents triple cannot envy other, equally satisfied.
agent k1 cannot envy agent k2 another triple, objects k1 could
envy k2 share mi . k2 one mi , k1 utility least
one, k1 cannot envy k2 .
rest proof based following result: allocation
Pareto-efficient
envy-free P(C, S) must (3i 2) (3i 1) (3i) = ak Si {mk } {di,1 , di,2 , di,3 }
(3i) (3i 1) (3i) = {di,1 , di,2 , di,3 }. easy show. Since agents triple
{3i 2, 3i 1, 3i} ones desire objects di,k , three objects must given
three agents, allocation efficient. Since three agents preferences,
allocation satisfy equally order envy-free. Thus number objects allocated
three agents must divisible 3, gives two possible numbers, 3 6, hence
two possible allocations.
Suppose Pareto-efficient envy-free allocation P(C, S). Consider subcollection C 0
= hS1 , . . . , S|C 0 | made triples Si collection C (3i 2) (3i
1) (3i) = ak Si {mk } {di,1 , di,2 , di,3 }. following results.
Si pairwise disjoints. Suppose pair (i, j) 6= j
element ak belonging Si Sj . mk allocated two different agents: one
member triple {3i 2, 3i 1, 3i}, one member triple {3j + 1, 3j + 2, 3j + 3},
impossible.

i{1,...,|C 0 |} Si = S. Let ak element S. Since Pareto-efficient, mk must
allocated one agent wants (say
agent belongs triple {3j + 1, 3j + 2, 3j + 3}),
unless one wants it, occurs i{1,...,|C 0 |} Si 6= S. Then, previous result,

objects al Sj {ml } must allocated triple. Consequently, Sj C 0 . Since ak Sj ,
ak belongs least one set collection C 0 .

555

fiBouveret & Lang

Therefore, C 0 exact cover S, finally proves proposition.



see Proposition 21 Conjecture 1 huge complexity gap
problem allow weights freely given problem
require weights 0 1 (at least conjecture true). natural question
raises know complexity fall specific 01-preferences, occurs
fixed upper bound weights.
Conjecture 2 complexity eef existence problem additive 01. . . k
preferences k 2 fixed hard general problem unbounded additive preferences.
precise complexity problem remains open problem, stated
conjecture, intuition hard eef existence problem
unbounded additive preferences.
Another natural problem raised Proposition 21: complexity
eef existence problem stratified 01-preferences ? stratified 01-preferences,
mean preferences given set pairs hxk , pi, xk object p
priority level. Comparing two sets objects comes compare lexicographically
vectors component index number objects priority
share agent. Notice problem instance eef existence
problem additive preferences, instance eef existence problem
logical numerical preferences logical form. However easy see remains
p2 , precise complexity remains unknown.
Finally, investigate case number objects less number
agents. One could think intuitively problem trivial case. However,
always case, see. begin with, following results shows
problem easy monotonic preferences:
Proposition 22 Let P allocation problem n agents additive monotonic
numerical preferences wanting least one object, p objects desired
least one agent.
p < n, Pareto-efficient envy-free allocation.
p = n, problem deciding whether exists efficient envy-free allocation agents monotonic additive preferences P.
Proof
object desired least one agent, every Pareto-efficient allocation complete. number objects p strictly lower number agents N , least one
agent unsatisfied. Consequently, agent j obtains object wanted i, hence
creating envy. Thus Pareto-efficient allocation envy-free.
Since many objects agents, agent receive one object values
(that is, ui ({x}) maximal), allocation Pareto-efficient
envy-free. Indeed, agent receives object preferred one, means
another agent j receives (otherwise allocation would Pareto-efficient), creating envy
i. Therefore, checking existence Pareto-efficient envy-free allocation comes
case checking possible give every agent one best-valued objects.
comes checking perfect matching bipartite graph made one
node per agent one side, one node per object side, connecting

556

fiEfficiency Envy-freeness Fair Division Indivisible Goods

agent object x x among best-valued objects agent preferences.
perfect matching computing polynomial time, hence result.


Interestingly, latter result hold allow non-monotonic preferences.
case, complexity increases complexity general eef existence
problem additive preferences.
Proposition 23 eef existence problem additive numerical preferences
number objects less number agents complexity
eef existence problem additive numerical preferences, assumption
number objects.
Proof Let us consider instance hI, X, h. . . , ui (xj ), . . . eef existence problem additive numerical preferences, N agents p objects (p > N ). create following instance
P(hI, X, h. . . , ui (xj ), . . . i):
Agents:
Objects:
Preferences:

p + 3 agents (the number agents important, greater
number objects initial number agents);
p initial objects xi plus two dummy ones d1 d2 ;
preferences N first agents hI, X, h. . . , ui (xj ), . . . i;
preferences (N +1)st agent uN +1 ({d1 }) = uN +1 ({d2 }) = 1 u{N +1} (xj ) =
0 items xj ; preferences remaining agents uN +1 ({d1 }) =
1, uN +1 ({d2 }) = 2 uN +1 (xj ) = 0 remaining objects.

efficient envy free allocation hI, X, h. . . , ui (xj ), . . . easily
checked allocation gives items N first agents P(hI, X, h. . . , ui (xj ), . . . i),
{d1 , d2 } (N + 1)st agent, nothing remaining ones efficient envy-free. Conversely,
Pareto-efficient envy-free allocation P(hI, X, h. . . , ui (xj ), . . . i) yields Pareto-efficient
envy-free allocation hI, X, h. . . , ui (xj ), . . . restricting N first agents objects
two dummy ones.


6. Related Work Discussion
already argued Introduction, computational studies resource allocation either
concern divisible goods, focus classical utilitarianism combinatorial auctions.
Existing work fair division indivisible goods, hand, mainly axiomatic,
computational aspects neglected, except papers
mentioning below.
results course lot common complexity results combinatorial
auctions. all, structure problems are, extent, similar: items
indivisible, allocations preemptive10 , agent preferences sets items
expressed compact representation language. Logical bidding languages
designed (Boutilier & Hoos, 2001). However, complexity results completely differ:
standard decision problem combinatorial auctions NP-complete (Rothkopf, Pekec,
& Harstad, 1998) decision problems considered typically located
second level polynomial hierarchy, even degenerate case preferences
dichotomous. explained fact combinatorial auctions care
efficiency, envy-freeness. Requiring criteria together (efficiency
10. Here, preemptive means object cannot allocated one agent. assumption
absent problems implying example virtual objects, software licences.

557

fiBouveret & Lang

envy-freeness) makes things much difficult: while, usual assumption
preferences monotonic, efficiency monotonic property (allocating goods never
makes allocation less efficient), envy-freeness (allocating goods agent
may generate envy)11 . reason may exist EEF allocation,
source high complexity problem.
Moreover, due failure monotonicity envy-freeness, searching EEF
allocation cannot simply formulated maximization minimization simple
criterion, problematic designing local search algorithms approximation
schemes. authors (Lipton et al., 2004; Chevaleyre, Endriss, Estivie, & Maudet,
2007a; Brams, Jones, & Klamler, 2007) suggested relax envy-freeness criterion
make gradual notion, defining measure envy-freeness. Lipton et al. (2004)
assume input consists numerical utility functions sets goods; degree
agent envies agent j allocation either defined envy difference
di,j () = max(0, ui ((j)) ui ((i))) envy ratio rij () = max 1, uuii((j))
((i)) .
cases, global degree envy maximum degree envy pair
players. Alternative definitions degree envy society proposed
Chevaleyre et al. (2007a), number envious agents, number pairs (i, j)
envies j, sum local degrees envy, relatively similar
measure envy considered Brams et al. (2007), based maximum number
agents single agent may envy. Chevaleyre et al. (2007b) suggest radically
different way relaxing envy-freeness: society comes along undirected graph
(which reflects acquaintance agents), allocation envy-free
agent envies agent connected.
Then, Lipton et al. (2004) focus search complete allocation minimum
envy; moreover, case additive utilities, provide approximation schemes. Another work approximation algorithms fair allocation indivisible goods
one Asadpour Saberi (2007), assume beginning utilities linear
consider problem finding maximally equitable allocation, is, allocation maximizing utility least satisfied agent (cf. problem considered
Proposition 17); consider envy-freeness all12 .
approaches considered far (including ours) assume allocation
computed centralized way neutral, objective agent. contexts,
centralized approach possible realistic, allocation obtained
decentralized way, successive negotiations groups agents. approach
initiated Sandholm (1998), studies convergence properties allocation
depending structural restrictions made exchanges goods may occur.
investigated Dunne (2005) Dunne et al. (2005), study
computational complexity negotiation problems, Endriss, Maudet, Sadri,
Toni (2006). approaches, optimality criterion classical utilitarian
11. Note antimonotonic either: allocating less goods agent may generate envy well.
12. Note alternative ways relaxing search EEF allocations exist. One may instance
keep envy-freeness hard requirement relax efficiency, allow relaxing look
allocation shows good trade-off efficiency envy-freeness (considering
problem two-criteria optimization problem).

558

fiEfficiency Envy-freeness Fair Division Indivisible Goods

social welfare. Envy-freeness considered distributed setting Chevaleyre et al.
(2007a, 2007b).
far, computational issues referred design study algorithms
run computers find allocation, designing studying
protocols query agents interactively gather enough information solution
determined. procedural issues, although extensively studied literature
fair division divisible goods (see below), well voting (Conitzer & Sandholm, 2005)
rarely considered allocating indivisible goods, notable exception
Herreiner Puppe (2002), study properties interactive protocols
two agents enumerate preferred bundles one one, allocation found.
mentioned Introduction, drawback protocols exponentially
long, henceforth infeasible soon number objects units.
Beyond works computational aspects fair division indivisible goods,
much consider computational procedural aspects fair division
divisible goods (or, least, assume least one good divisible e.g., money).
literature subject vast techniques quite far used
allocating indivisible goods (see particular literature cake-cutting algorithms, e.g.
Brams & Taylor, 1996; Robertson & Webb, 1998) find relevant give
detailed bibliography subject. interested reader refer book Brams
(2008) covers fair resource allocation indivisible divisible case.

7. Conclusion
studied several computational aspects search efficient envy-free allocations fair division problems indivisible goods. results Section 3 show
case dichotomous preferences, search allocations reduced
search preferred models prerequisite-free default logic. connection
rather unexpected, implies practical search EEF allocations done
using existing algorithms default logic. However search likely timeconsuming, due complexity results: indeed, extensive study complexity
deciding whether efficient envy-free allocation exists, various restrictions (dichotomous preferences not, two agents more, agents identical preferences
not, monotonic preferences not) various notions efficiency (Pareto-efficiency,
completeness, maximum number satisfied agents, maximum social welfare classical
utilitarian egalitarian), seems show problem intrinsically difficult,
since lies second level polynomial hierarchy, even preferences dichotomous monotonic. implies designing fast algorithms solving problem
general case reach. may first focus restrictions
problem NP-complete. Unfortunately, restrictions (agents identical
preferences; two agents; purely conjunctive, purely disjunctive 2-CNF preferences;
search complete allocations without efficiency requirement; additive 0-1 preferences) compelling imply huge loss generality.
complexity results introduced paper summed-up Figure 1 Table 2.
Several issues research remain explored.
559

fiBouveret & Lang

12
12

1

16

?

1

p2

22

13

?

p2

15

14

15

p2

p2

7
7

p2

p2
5

3

coBH2

coBH2
4
11

NP

2

11
6

9

9

6

?

18
6?

17

18
17

19

NP

8
8

P

10

21

10

P

20

O(1)

O(1)
? Proof included paper.

1

problem whose complexity proved paper (the mapping
numbers problems specified table 2).

17

problem whose complexity already known literature.

22



?

problem whose complexity remains unknown.

j

intersection problems corresponding outgoing edges.
Problem included problem j. Arcs obtained transitivity
omitted.

Figure 1: different problems complexity classes inclusion relations.

560

fiEfficiency Envy-freeness Fair Division Indivisible Goods

Efficiency

number agents

preferences

monotonicity

comp.



yes (1) (1)

p2 -c.

identical

yes

NP-c.

identical



coBH2 -c.




yes


NP-c.
coBH2 -c.

ident.

yes (6) (6, 6)

NP-c.



yes (7) (7)

p2 -c.

disjunctions
conjunctions
conj.
condition 1
C st sat(C) P
closed

yes (8) (8)
yes (9) (9)

P
NP-c.

yes (10) (10)

O(1)

yes (11) (11)

NP-c.

numerical

yes (12) (12)

p2 -c.

numerical



p2 -c.

numerical



p2 -c.

Dichotomous preferences
1, 1

Pareto-eff.

fixed

2

Pareto-eff.

3

Pareto-eff.

4
5

Pareto-eff.
Pareto-eff.

6, 6, 6

complete all.

7, 7

max nb ag.

fixed (6, 6, 6)
fixed N 2
(6, 6)
fixed

8, 8
9, 9

Pareto-eff.
Pareto-eff.




10, 10

Pareto-eff.



11, 11

Pareto-eff.



12, 12

Pareto-eff.

fixed

13

utilitarian sw

14

egalitarian sw

15, 15

Pareto-eff.

16
17, 17

Pareto-eff.
complete all.

18, 18

Pareto-eff.

19
20
21
22

Pareto-eff.
Pareto-eff.
Pareto-eff.
Pareto-eff.

fixed fixed
N 2
fixed fixed
N 2
2 agents
2 agents

Non-dichotomous preferences
fixed fixed
N 2
fixed fixed
N 2
fixed fixed
N 2
fixed
fixed
fixed fixed
N 2

> Nb objects
= Nb objects
Nb objects

numerical,
identical
additive
additive

yes (15) (15)

p2 -c.


yes (17) (17)

p2 -c. ?
NP-c.

additive ident.

yes (17) (17)

NP-c.

additive 01
additive
additive
additive

yes
yes
yes


NP-c.
O(1)
P
p2 -c. ?

Table 2: set resource allocation problems studied paper. complexity
classes represented figure 1.

561

fiBouveret & Lang

First, knowing efficient envy-free allocation given problem
helpful practice allocation found anyway. solution
consists defining functions return allocation cases, even envyfreeness efficiency cannot jointly met. way addressing issue consists
defining suitable relaxations problem, as: (a) using measure envy instead
seeing envy-freeness strict criterion (as suggested Lipton et al., 2004; Chevaleyre
et al., 2007b); (b) make envy-freeness relative notion, instance introducing
acquaintance graph agents (Chevaleyre et al., 2007b); (c) keeping envy-freeness
strict criterion relaxing efficiency. cases, new problems arise, complexity
identified.
Second, results mostly negative, since interesting problems studied NP-hard (and often even worse), therefore, would worth pursuing work
design practical algorithms problems. likely would require coming
appropriate optimization criteria either (a) giving polynomial algorithms
approximate desired objective (Lipton et al., 2004) (b) implementing
experimenting local search algorithms relevant heuristics.
Third, throughout paper assumed everyones preferences completely
known. reality, presumably agents need report preferences, introduces
issue strategic misreporting (manipulation). One direction future research would
investigate prevent this, is, mechanism design aspects.

Acknowledgments
thank Michel Lematre stimulating discussions fair division compact
representation; Thibault Gajdos stimulating discussions envy-freeness
pointing us relevant papers; Steven Brams, giving us feedback
earlier version paper pointing us relevant references; participants
AgentLink Technical Forum Group Multiagent Resource Allocation. work
partly supported project ANR-05-BLAN-0384 Preference Handling
Aggregation Combinatorial Domains, funded Agence Nationale de la Recherche.

References
Asadpour, A., & Saberi, A. (2007). approximation algorithm max-min fair allocation
indivisible goods. Tech. rep., Department Management Science Engineering,
Stanford University, Stanford.
Baral, C. (2003). Knowledge Representation, Reasoning Declarative Problem Solving.
Cambridge University Press.
Bogomolnaia, A., Moulin, H., & Stong, R. (2005). Collective choice dichotomous
preferences. Journal Economic Theory, 122, 165184.
Boutilier, C., & Hoos, H. H. (2001). Bidding languages combinatorial auctions. Proc.
17th International Joint Conference Artificial Intelligence (IJCAI-01), pp.
12111217, Seattle, Washington, USA.
562

fiEfficiency Envy-freeness Fair Division Indivisible Goods

Bouveret, S., Fargier, H., Lang, J., & Lematre, M. (2005). Allocation indivisible goods:
general model complexity results. Dignum, F., Dignum, V., Koenig, S.,
Kraus, S., Singh, M. P., & Wooldridge, M. (Eds.), Proceedings AAMAS05, Utrecht,
Nederlands. ACM Press.
Brams, S., & Fishburn, P. (1978). Approval voting. American Political Science Review,
72 (3), 831857.
Brams, S. J. (2008). Mathematics Democracy: Designing Better Voting FairDivision Procedures. Princeton University Press.
Brams, S. J., Edelman, P. H., & Fishburn, P. C. (2003). Fair division indivisible items.
Theory Decision, 55 (2), 147180.
Brams, S. J., Jones, M. A., & Klamler, C. (2007). Divide-and-conquer: proportional,
minimal-envy cake-cutting procedure. Tech. rep., NYU Department Politics.
Brams, S. J., & King, D. L. (2005). Efficient fair division: Help worst avoid envy?.
Rationality Society, 17 (4), 387421.
Brams, S. J., & Taylor, A. (1996). Fair Division: Cake-Cutting Dispute Resolution.
Cambridge Univ. Press.
Chevaleyre, Y., Dunne, P. E., Endriss, U., Lang, J., Lematre, M., Maudet, N., Padget, J.,
Phelps, S., Rodrguez-Aguilar, J. A., & Sousa, P. (2006). Issues multiagent resource
allocation. Informatica, 30, 331. Survey paper.
Chevaleyre, Y., Endriss, U., Estivie, S., & Maudet, N. (2004). Multiagent resource allocation k-additive utility functions. Proc. DIMACS-LAMSADE Workshop
Computer Science Decision Theory, Vol. 3 Annales du LAMSADE, pp. 83100.
Chevaleyre, Y., Endriss, U., Estivie, S., & Maudet, N. (2007a). Reaching envy-free states
distributed negotiation settings. Veloso, M. (Ed.), Proceedings 20th International Joint Conference Artificial Intelligence (IJCAI-2007), pp. 12391244.
Chevaleyre, Y., Endriss, U., & Lang, J. (2006). Expressive power weighted propositional
formulas cardinal preference modelling. Proceedings 10th International
Conference Principles Knowledge Representation Reasoning (KR), pp. 145
152, Lake District, UK. AAAI Press.
Chevaleyre, Y., Endriss, U., & Maudet, N. (2007b). Allocating goods graph eliminate
envy. Proceedings AAAI-07, pp. 700705.
Conitzer, V., & Sandholm, T. (2005). Communication complexity common votiong rules.
Proceedings EC-05.
Cramton, P., Shoham, Y., & Steinberg, R. (Eds.). (2005). Combinatorial Auctions. MIT
Press.
Demko, S., & Hill, T. P. (1998). Equitable distribution indivisible items. Mathematical
Social Sciences, 16, 145158.
Dunne, P. E. (2005). Extremal behaviour multiagent contract negotiation. Journal
Artificial Intelligence Research, 23, 4178.
563

fiBouveret & Lang

Dunne, P. E., Wooldridge, M., & Laurence, M. (2005). complexity contract negotiation. Artificial Intelligence, 164 (1-2), 2346.
Endriss, U., Maudet, N., Sadri, F., & Toni, F. (2006). Negotiating socially optimal allocations resources. Journal Artificial Intelligence Research, 25, 315348.
Ford, L. R., & Fulkerson, D. R. (1962). Flows Networks. Princeton University Press.
Gebser, M., Liu, L., Namasivayam, G., Neumann, A., Schaub, T., & Truszczynski, M.
(2007). first answer set programming system competition. Baral, C., Brewka,
G., & Schlipf, J. (Eds.), Proceedings Ninth International Conference Logic
Programming Nonmonotonic Reasoning (LPNMR07), Vol. 4483 Lecture Notes
Artificial Intelligence, pp. 317. Springer-Verlag.
Gottlob, G. (1992). Complexity results nonmonotonic logics. Journal Logic
Computation, 2, 397425.
Herreiner, D. K., & Puppe, C. (2002). simple procedure finding equitable allocations
indivisible goods. Social Choice Welfare, 19, 415430.
Ieong, S., & Shoham, Y. (2005). Marginal contribution nets: compact representation
scheme coalitional games. Proceedings EC05.
Karp, R. M. (1972). Reducibility among combinatorial problems. Miller, R. E., &
Watcher, J. W. (Eds.), Complexity Computer Computations, pp. 85103, New York.
Plenum Press.
Lang, J. (2004). Logical preference representation combinatorial vote. Annals Mathematics Artificial Intelligence, 42 (1), 3771.
Lipton, R. J., Markakis, E., Mossel, E., & Saberi, A. (2004). approximately fair allocations indivisible goods. EC 04: Proceedings 5th ACM conference
Electronic commerce, pp. 125131, New York, NY, USA. ACM Press.
Nisan, N. (2005). Bidding Languages Combinatorial Auctions. MIT Press.
Papadimitriou, C. H. (1994). Computational complexity. AddisonWesley.
Rawls, J. (1971). Theory Justice. Harvard University Press, Cambridge, Mass.
Reiter, R. (1980). logic default reasoning. Artificial Intelligence, 13, 81132.
Robertson, J., & Webb, W. (1998). Cake-Cutting Algorithms. A.K. Peters.
Rothkopf, M., Pekec, A., & Harstad, R. (1998). Computationally manageable combinational
auctions. Management Science, 8 (44), 11311147.
Sandholm, T. (1998). Contract types satisficing task allocation: theoretical results.
Proc. AAAI Spring Symposium: Satisficing Models.
Wagner, K. W. (1987). complicated questions maxima minima,
closures NP. Theoretical Computer Science, 51, 5380.
Wagner, K. W. (1990). Bounded query classes. SIAM Journal Computing, 19 (5), 833
846.
Young, H. P. (1995). Equity Theory Practice. Princeton University Press.

564


