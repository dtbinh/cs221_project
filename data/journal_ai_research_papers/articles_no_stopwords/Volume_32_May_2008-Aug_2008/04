Journal Artificial Intelligence Research 32 (2008) 825877

Submitted 06/07; published 08/08

Qualitative System Identification Imperfect Data
George M. Coghill

g.coghill@abdn.ac.uk

School Natural Computing Sciences
University Aberdeen, Aberdeen, AB24 3UE. UK.

Ashwin Srinivasan

ashwin.srinivasan@in.ibm.com

IBM India Research Laboratory
4, Block C, Institutional Area
Vasant Kunj Phase II, New Delhi 110070, India.

Department CSE Centre Health Informatics
University New South Wales, Kensington
Sydney, Australia.

Ross D. King

rdk@aber.ac.uk

Deptartment Computer Science
University Wales, Aberystwyth, SY23 3DB. UK.

Abstract
Experience physical sciences suggests realistic means understanding complex systems use mathematical models. Typically,
come mean identification quantitative models expressed differential equations.
Quantitative modelling works best structure model (i.e., form
equations) known; primary concern one estimating values parameters model. complex biological systems, model-structure rarely known
modeler deal model-identification parameter-estimation.
paper concerned providing automated assistance first problems. Specifically, examine identification machine structural relationships
experimentally observed variables. relationship expressed
form qualitative abstractions quantitative model. qualitative models may
provide clues precise quantitative model, assist understanding essence model. position paper background knowledge
incorporating system modelling principles used constrain effectively set
good qualitative models. Utilising model-identification framework provided Inductive Logic Programming (ILP) present empirical support position using series
increasingly complex artificial datasets. results obtained qualitative
quantitative data subject varying amounts noise different degrees sparsity.
results point presence set qualitative states, term kernel
subsets, may necessary qualitative model-learner learn correct models.
demonstrate scalability method biological system modelling identification
glycolysis metabolic pathway data.

1. Introduction
growing recognition research life sciences increasingly concerned ways relating large amounts biological physical data structure
function higher-level biological systems. Experience physical sciences suggests
c
2008
AI Access Foundation. rights reserved.

fiCoghill, Srinivasan, & King

realistic means understanding complex systems use
mathematical models. topical example provided Physiome Project seeks
utilise data obtained sequencing human genome understand describe
human organism using models that: . . . include everything diagrammatic schema,
suggesting relationships among elements composing system, fully quantitative, computational models describing behaviour physiological systems organisms
response environmental change (see http://www.physiome.org/). paper concerned computational tool aims assist identification mathematical
models complex systems.
Broadly speaking, system identification viewed field modelling dynamic systems experimental data (Soderstrom & Stoica, 1989). distinguish
between: (a) classical system identification techniques, developed control engineers econometricians; (b) machine learning techniques, developed computer
scientists. two main aspects activity. First, appropriate structure
determined (the model-identification problem). Second, acceptably accurate values
parameters model obtained (the parameter-estimation problem). Classical
system identification usually (but always) used possible model structure
known priori. Machine learning methods, hand, interest little
nothing known model structure. tool described machine learning
technique identifies qualitative models observational data. Qualitative models
non-parametric; therefore computational effort focussed model-identification
(there parameters estimated). task therefore somewhat easier
ambitious machine learning programs attempt identify parametric quantitative models (Bradley, Easley, & Stolle, 2000; Dzeroski, 1992; Dzeroski & Todorovski, 1995;
Todorovski, Srinivasan, Whiteley, & Gavaghan, 2000). Qualitative model-learning
number advantages: models quite comprehensible; system-dynamics
obtained relatively easily; space possible models finite; noise-resistance
fairly high. down-side, qualtitative model-learners often produced models
under- over-constrained; models provide clues precise mathematical structure; models largely restricted abstractions ordinary
differential equations (ODEs). attempt mitigate first shortcomings
adopting framework Inductive Logic Programming (ILP) (see Bergadano & Gunetti,
1996; Muggleton & Raedt, 1994). Properly constrained models identified using library syntactic semantic constraintspart background knowledge ILP
systemon physically meaningful models. ILP systems, library relatively
easily extendable. position paper that:
Background knowledge incorporating physical (and later, biological) system modelling principles used constrain set good qualitative models.
Using classical physical systems test-beds demonstrate empirically that:
small set constraints, conjunction Bayesian scoring function, sufficient
identify correct models.
Correct models identified qualitative quantitative data need
contain measurements variables model; learned
826

fiQualitative System Identification

sparse data large amounts noise. is, correct models identified
input data incomplete, incorrect, both.
closer examination performance test systems led discovery
term kernel subsets: minimal qualitative states present guarantee
implementation identify model correctly. concept may value model
identification systems.
primary interests, made clear outset, lie biological system identification.
completion sequencing key model genomes rise new technologies
opened prospect modelling cells silico unprecedented detail. models essential integrate ever-increasing store biological knowledge,
potential transform medicine biotechnology. key task emerging field
systems biology identify cellular models directly experimental data. applying qualitative system identification systems biology focus models metabolism:
interaction small molecules enzymes (the domain classical biochemistry).
models best established systems biology. end, demonstrate
approach scales identify core well-known, complex biological system
(glycolysis) qualitative data. system modelled set 25 qualitative relations, several unmeasured variables. scale-up achieved augmenting
background knowledge incorporate general chemical biological constraints
enzymes metabolites.
rest paper organised follows. next section present learning
approach ILP-QSI means example: u-tube. describe details
learning algorithm section. Section 3 apply learning experiments
number systems class u-tube, present results obtained,
discuss results experiments reported thus far. Section 4 extends work
learning qualitative data set proof-of-concept experiments assess
ability ILP-QSI learn quantitative data. scalability method tested
Section 5 application large scale metabolic pathway: glycolysis. Section 6
discuss related work; finally Section 7 provide general discussion research
draw general conclusions.

2. Qualitative System Identification Using ILP
order aid understanding method presented paper first present
detailed description process applied illustrative system: u-tube.
u-tube chosen well understood system, one
used literature (Muggleton & Feng, 1990; Say & Kuru, 1996). results emerging
set experiments allow us draw tentative conclusions regarding
qualitative systems identification.
subsequent sections present results applying method described
section examples class system; enable us
generalise tentative conclusions. apply method large scale biological
system demonstrate scalability method.
827

fiCoghill, Srinivasan, & King

State
1
2
3
4
5
6

h1
< 0, std >
< 0, inc >
< (0, ), dec >
< (0, ), dec >
< (0, ), std >
< (0, ), inc >

h2
< 0, std >
< (0, ), dec >
< 0, inc >
< (0, ), inc >
< (0, ), std >
< (0, ), dec >

qx
< 0, std >
< (, 0), inc >
< (0, ), dec >
< (0, ), dec >
< 0, std >
< (, 0), inc >

qx
< 0, std >
< (0, ), dec >
< (, 0), inc >
< (, 0), inc >
< 0, std >
< (0, ), dec >

Table 1: envisionment states used u-tube experiments. qualitative values
standard form used QSIM. Positive values magnitude
represented interval (0, ), negative values interval (, 0) zero
0. directions change self explanatory increasing represented
inc, decreasing dec steady std.
2.1 Illustrative System: U-tube
u-tube system (Fig. 1) closed system consisting two tanks containing (or potentially containing) fluid, joined together base pipe. Assuming fluid
system passes one tank via pipe tank higher
fluid level tank lower fluid level (as function difference height).
height fluid tanks system equilibrium
fluid flow.
u-tube represented system ordinary differential equations follows:
dh1
dt
dh2
dt



= k (h1 h2 )


(1)


= k (h2 h1 )

qualitative model may obtained simply abstracting real numbers,
would normally associated Equation 1, quantity space signs.
common formalism used represent qualitative models QSIM (Kuipers, 1994).
representation models conjunctions constraints, two three place
predicates representing abstractions real valued arithmetic functional operations.
variables model values represented two element vectors consisting (in
abstract case) sign magnitude direction change variable.
order accommodate restriction number variables constraint may
rewrite Equation 1 follows:

h = (h1 h2 )



qx = k h
(2)
dh1


dt = qx


dh2
dt = qx

h1 h2 height fluid Tank 1 Tank 2 respectively; h
difference height fluid tanks; q x flow fluid tanks.
converted directly QSIM constraints shown Fig. 1.

828

fiQualitative System Identification

Tank 2

Tank 1

Delta_h

h1

+

h

h2
dt

dt

h1
h2

-qx

-

qx

M+

DERIV(h1,qx ),
DERIV(h2,qx ),
ADD(h2,Delta h, h1 ),
M+ (Delta h,qx ),
MINUS(qx,qx ).

qx

Figure 1: u-tube: (left) physical; (middle) QSIM diagrammatic; (right) QSIM constraints. QSIM version model Delta h corresponds h
physical model. QSIM, M+ (, ) qualitative version functional relation
indicates monotonically increasing relation two
variables arguments. + (, ) constraint represents family
functions includes linear non-linear relations.

2

6
5

3

1

4

Figure 2: u-tube envisionment graph.
Appropriate qualitative analysis u-tube produce states shown Table 1,
states envisionment. represent distinct qualitative states
u-tube may exist Fig. 2 depicts possible behaviours (in terms
transitions states)1 . figure represents complete envisionment system,
graph containing qualitative states system transitions
particular input value. case u-tube presented
input (which equivalent value zero). hand behaviours
u-tube may observed number experimental (initial) conditions,
measurements taken height fluid tank flow
tanks. converted (by means quantitative-to-qualitative converter)
set qualitative observations (or states). sufficient temporal information available
enable calculation qualitative derivatives, observation tuple stating
magnitude direction change measured variable. observations
contain states complete envisionment Table 1 (or subset thereof).
1. State 1 represents situation fluid system, nothing happens
interesting.

829

fiCoghill, Srinivasan, & King

u-tube member large class dynamic systems defined
states: state systems. systems values variables future times
defined current state system regardless state achieved (Healey,
1975). means simulation, system state act initial state.
current context means order learn structure systems need
focus states may ignore transitions states.
enables us explore power set envisionment ascertain conditions
system identification possible. Given qualitative observations examples,
background knowledge consisting constraints models (described later) QSIM
relations, learning system (which name ILP-QSI) performs search acceptable
models. suitable first approximation, basic task viewed discrete
optimisation problem finding lowest cost elements amongst finite set alternatives.
is, given finite discrete set models real-valued cost-function f : <,
find subset H H = {H|H f (H) = min Hi f (Hi )}. problem
may solved employing procedure searches directed acyclic graph
representation possible models. representation, pair models connected
graph one transformed another operation called refinement. Fig. 3
shows parts graph u-tube model refined another
addition qualitative constraint. optimal search procedure (the branch-and-bound
procedure) traverses graph order, times keeping cost best nodes
far. Whenever node reached certain descendents
cost higher best nodes, node descendents removed
search.
number features apparent u-tube model relevant
learning method utilised work (and discussed Section 2.3) described
since regard general modelling issues relevant learning qualitative models
dynamic systems.
first thing may noted regard expressions Equation
2 resulting qualitative constraints ordered; is, given values
exogenous variables magnitude state variables (the height fluid
tanks case) equations placed order variables
left hand side may values calculated appear right hand
side equation2 . particular form ordering known causal ordering (Iwasaki
& Simon, 1986). causally ordered system depicted graphically shown Fig. 4.
causally ordered model contains algebraic loops. quantitative systems one tries
avoid algebraic loops hard simulate, requiring additional simultaneous
equation solvers used.
qualitative model combined Qualitative Reasoning (QR) inference engine
provide envisionment system interest. is, generate qualitatively distinct states system may exist. case u-tube six
states given Table 1. Example behaviours resulting states shown
Fig. 2.
2. ordering required QSIM order preform qualitative simulation. However, ability
order equations manner utilised filter learning system order eliminate
models containing algebraic loops.

830

fiQualitative System Identification

ADD( h1, h 2, h1)

ADD( h1, h 2, h1)
DERIV( h2,h1 )
MPLUS( h2,f12)

ADD(h 2, h2, h1)

ADD( h1, h 2, x1)

ADD( h1, h 2, h1)
DERIV( h2,h1 )
MPLUS( h2,f12)
MINUS( x8,f12 )
MPLUS( x8,h1 )

ADD( h1, h 2, x1)
MPLUS( x1,f12 )
MPLUS( h2,x4)

DERIV(h1,x2 )

DERIV( h1,x2 )

[]

DERIV( h1,h2 )

DERIV( h1,f12)

DERIV( h1,f12)
DERIV( h2,x5)
ADD( h2,x6,h1 )

MPLUS( h1,f12)

DERIV( h1,f12)
DERIV( h2,x5)
ADD( h2,x6,h1 )
MPLUS( x6,f12 )
MINUS( f12,x6 )

MPLUS( h1,f12)

MPLUS( h1,f12)

MPLUS( h1,f12)
ADD( f12,x7,h2 )
DERIV( h2,f12)

Figure 3: portions u-tube lattice (with target model box).
may noted differential equation model captures essence explanation given first paragraph section. sufficient explain operation
system, well predict way behave, contains
variables constants necessary achieve task - i.e. model parsimonious. 3
Furthermore, examination causal diagram Fig. 4 indicates causal
ordering particular direction magnitudes state variables
derivatives. link derivatives magnitudes state variables
integration time. integral causality preferred kind
3. possible didactic purposes may want include detail, example relation
intertank flow pressure difference, height fluid pressure.
reason would expect relations found; although context
adequate theoretical framework model fits, model provides pointers direction.
hand, one envisage simpler models existing may suitable prediction
inadequate required kind explanation. See Section 6 this.

831

fiCoghill, Srinivasan, & King

k

h1

h1

h

qx

h2

h2

Figure 4: causal ordering u-tube model given Equation 2.
causality systems engineering modelling; simulation generally.
integration smooths noise whereas differentiation introduces it.
variables either endogenous exogenous. Exogenous variables influence system influenced it. Well posed models flapping variables;
is, endogenous variables appear one constraint. QSIM includes
DERIV constraint linking state variables directly derivatives, systems interested regulatory, containing feedback paths, endogenous
variables must appear least two constraints.
Well posedness parsimony mandatory properties model, properties desirable always achievable may relaxed. However,
systems examined paper properties holds.
final feature u-tube model represents single system.
assumption implicit learning experiments described paper data
measured belongs single coherent system. keeping general experimental
approaches assumed measurements related way
part system. course may get wrong relax requirement
discover thought related cannot actually brought together
single model. generalises requirement parsimony line Einsteins
adage model simple possible simpler. case
translates minimising number disjoint sub-systems identified.
2.2 Qualitative Solution Space
Section 2.3 shall present algorithm automatically constructing models
data. method utilise background knowledge consisting QSIM modelling
primitives combined systems theory meta-knowledge (e.g. parsimony causality).
Later shall provide analysis models learned states utilised learn
order ascertain which, any, states important successful learning.
One way facilitate analysis make use solution space relate qualitative
states critical points relevant class systems (via isoclines system) 4
4. critical points dynamic system points one derivatives state
variables zero. isoclines contours critical points.

832

fiQualitative System Identification

(Coghill, 2003; Coghill, Asbury, van Rijsbergen, & Gray, 1992). stated previously,
qualitative analysis u-tube generate envisionment containing six states,
shown Table 1, depicted envisionment graph given Fig. 2. Continuing
h2
h1
h2

height

6

5

5

f12 = 0

2

4
2

time

1

3

h1

Figure 5: qualitative states u-tube system presented representative time
courses (left) solution space (right). state numbers refer
states u-tube described above. (State 5 represents steady state
strictly speaking reached = , practice taken occur
two trajectories sufficiently close, shown here.)

u-tube; two ways behave (ignoring state 1), captured Fig. 5. Either
head fluid tank 1 greater tank 2 (state 4) (in extreme tank
1 empty state 3), head greater tank 2 tank 1 (state 6). Fig. 5 (left)
shows transient behaviour extreme case tank 1 empty (state 2);
seen diagram head starts condition eventual end
equilibrium (state 5). state Equation 1 rewritten as:


0 = k (h1 h2 )


(3)


0 = k (h2 h1 )

definition k must non-zero; solution pair equations is:
h2 = h 1
relation plotted graph shown right hand side Fig. 5.
qualitative states u-tube may placed solution space graph relation
equilibrium line. representation (similar form phase space diagram)
useful provides global picture location qualitative states
envisionment relative equilibria critical points system.
utilised construction diagnostic expert systems (Warren, Coghill, & Johnstone,
2004). details means analysing envisionments see work Coghill
(2003) Coghill et al. (1992).
833

fiCoghill, Srinivasan, & King

bb(i, , f ) : Given initial element discrete set S; successor function : 2 ; cost function
f : <, return H H contains set cost-minimal models. h i,j H, f (hi ) =
f (hj ) = fmin s0 S\H f (s0 ) > fmin .
1. Active := h(i, )i.
2. worst :=
3. selected :=
4. Active 6= hi
5. begin
(a) remove element (k, costk ) Active
(b) costk < worst
(c) begin
i. worst := costk
ii. selected := {k}
iii. let P rune1 Active s.t. j P rune1 , f (j) > worst f (j) lowest cost
possible j successors
iv. remove elements P rune1 Active
(d) end
(e) elseif costk = worst
i. selected := selected {k}
(f) Branch := (k)
(g) let P rune2 Branch s.t. j P rune2 , fmin (j) > best fmin (j) lowest cost
possible j successors
(h) Bound := Branch\P rune2
(i) x Bound
i. add (x, f (x)) Active
6. end
7. return selected

Figure 6: basic branch-and-bound algorithm. type Active determines specialised
variants: Active stack (elements added removed front)
depth-first branch-and-bound results; Active queue (elements added
end removed front) breadth-first branch-and-bound
results; Active prioritised queue best-first branch-and-bound results.

2.3 Algorithm
ILP learner used research multistage procedure, addresses
discrete optimisation problem. general terms, posed follows: given finite
discrete set cost-function f : <, find subset H H =
{s|s f (s) = minsi f (si )}. optimal algorithm solving problems
branch-and-bound algorithm, shown Fig. 6 (the correctness, complexity optimality
properties algorithm presented paper Papadimitriou & Steiglitz, 1982).
specific variant algorithm available within software environment comprising
Aleph (Srinivasan, 1999). modified procedure Fig. 7. principal differences
Fig. 6 are:
1. procedure given set starting points H 0 , instead single one (i Fig. 6);
834

fiQualitative System Identification

2. limitation number nodes explored (n Fig. 7);
3. use boolean function acceptable : H B E {F ALSE, RU E}.
acceptable(k,B,E) TRUE, if: (a) Hypothesis k explains examples
E, given B usual sense understood ILP (that is, B k |= E absence
noise); (b) Hypothesis k consistent constraints contained
background knowledge (that B kI 6|= 2). practice, possible merge
requirements encoding requirement entailing examples
constraint B;
4. Inclusion background knowledge examples (B E Fig. 7).
arguments refinement operator (the reason become apparent
shortly) cost function f .
following points relevant implementation used here:
qualitative model represented single definite clause. Given definite
clause C, qualitative constraints model (the size model) obtained
counting number qualitative constraints C. called
size C.
Constraints, restriction well-posed models (described below), assumed encoded background knowledge;
initial set H0 Fig. 7 consists empty clause denoted . is,
H0 = {};
acceptable(C, B, E) RU E qualitative model C consistent
constraints B, given E.
Active prioritised queue sorted f ;
successor function used . defined follows. Let size
acceptable model C qualitative model size 0 n = 0 .
assume B contains set mode declarations form described (Muggleton,
1995). Then, given definite clause C, obtain definite C 0 (C, B, E) =
n1
nA = hD 0 |
(C, B, E) s.t. 0 1A (D, B, E)i, (n 2). C 0 1A (C, B, E)
obtained adding literal L C, that:
argument mode +t L substituted input variable type
appears positive literal C variable type
occurs negative literal C;
argument mode L substituted variable C type
appears argument new variable type t;
argument mode #t L substituted ground term type t.
assumes availability generator elements Herbrand universe
terms;
acceptable(C 0 , B, E) RU E.
835

fiCoghill, Srinivasan, & King

bbA (B, E, H0 , , f, n) : Given background knowledge B B; examples E E; non-empty set initial elements
H0 discrete set possible hypotheses H; successor function : H B E 2 H ; cost function
f : H B E <; maximum number nodes n N (n 0) explored, return H H
H contains set cost-minimal models models explored.
1. Active = hi
2. H0
(a) add (i, ) Active
3. worst :=
4. selected :=
5. explored := 0
6. (explored < n Active 6= hi)
7. begin
(a)
(b)
(c)
(d)

(e)
(f)
(g)
(h)
(i)

remove element (k, costk ) Active
increment explored
acceptable(k, B, E)
begin
i. costk < worst
ii. begin
A. worst := cost
B. selected := {k}
C. let P rune1 Active s.t. j P rune1 , f (j, B, E) > worst f (j, B, E)
lowest cost possible j successors
D. remove elements P rune1 Active
iii. end:
iv. elseif costk = worst
A. selected := selected {k}
end
Branch := (k, B, E)
let P rune2 Branch s.t. j P rune2 , f (j, B, E) > worst f (j, B, E) lowest
cost possible j successors
Bound := Branch\P rune2
x Bound
i. add (x, f (x, B, E)) Active

8. end
9. return selected

Figure 7: variant basic branch-and-bound algorithm, implemented within
Aleph system. B E sets logic programs; N set
natural numbers.

following properties 1A (and, turn ) shown hold (Riguzzi,
2005):
locally finite. is, 1A (C, B, E) finite computable (assuming
constraints B computable);
weakly complete. is, clause containing n literals obtained
n refinement steps empty clause;
836

fiQualitative System Identification

proper. is, C 0 equivalent C;
optimal. is, C 0 obtained multiply refining different
clauses.
addition, clear definition given qualitative model C, acceptable(C 0 , B, E)
RU E model C 0 1A (C, B, E). turn, follows acceptable(C 0 , B, E)
RU E C 0 (C, B, E).
cost function used (following Muggleton, 1996) f Bayes (C, B, E) = P(C|B, E)
P(C|B, E) Bayesian posterior probability estimate clause C, given
background knowledge B positive examples E. Finding model maximal posterior probability (that is, lowest cost) involves maximising function (McCreath, 1999):
1
Q(C) = logDH (C) + p log
g(C)
DH prior probability measure space possible models; p
number positive examples (that is, p = |E|); g generality model.
use approach used ILP system C-Progol obtain values two
functions. is, prior probability related complexity models (more
complex models taken less probable, priori); generality model
estimated using number random examples entailed model, given
background knowledge B (the details presented Muggleton paper
1996).
selected Bayesian function score hypotheses since represents,
best knowledge, one ILP literature explicitly developed
case data consist positive examples (as situation
paper, examples observations system behaviour: system identification
non-behaviour represent usual understanding task
attempting here).
evident choices make branch-and-bound procedure simple generateand-score approach. Clearly, approach scalable constraints encoding
well-posed models sufficient restrict acceptable models reasonable number:
describe set constraints sufficient models examined
paper. rest paper, term ILP-QSI taken mean Aleph
branch-and-bound algorithm specific choices above.
2.3.1 Well-posed models
Well-posed models introduced Section 2.1; current implementation
defined satisfying least following syntactic constraints:
1. Size. model must particular size (measured number qualitative
relations physical models Sections 2.4 3 number metabolites
biological model Section 5). size pre-specified.
2. Complete. model must contain measured variables.
837

fiCoghill, Srinivasan, & King

3. Determinate. model must contain many relations variables (a basic principle
systems theorythe reader may recall version school algebra, system
equations contains many equations unknowns).
4. Language. number instances qualitative relation model must
pre-specified limit. kind restriction studied greater
detail work Camacho (2000).
least following semantic constraints:
5. Sufficient. model must adequately explain observed data. adequate,
intend acknowledge due noise measurements, observations
may logical consequences model 5 . percentage observations must
explainable sense user-defined value.
6. Redundant. model must contain relations redundant. example, relation ADD(inf low, outf low, x1) redundant model already
ADD(outf low, inf low, x1).
7. Contradictory. model must contain relations contradictory given
relations present model.
8. Dimensional. model must contain relations respect dimensional constraints.
prevents, example, addition relations ADD(inf low, outf low, amount)
perform arithmetic variables different units measurement.
following additional constraints incorporated algorithm could
ignored (because preferences rather absolute rules), results presented
paper require satisfied:
9. Single. model must contain two disjoint models. assumption
set measurements made within particular context
user desires single model includes measurement variables.
10. Connected. intermediate variables appear least two relations.
11. Causal. model must causally ordered (Iwasaki & Simon, 1986) integral
causality (Gawthrop & Smith, 1996). is, causality runs algebraic
constraints model magnitudes state variables derivatives;
derivatives magnitudes DERIV constraint only.
list intended exhaustive: fully expect would need augmented domain-specific constraints (the biological system identification problem
described Section 5 provides instance this). advantage using ILP
augmentation possible relatively straightforward manner.
5. Strictly speaking, model conjunction background knowledge.

838

fiQualitative System Identification

2.4 Experimental Investigation Learning U-tube System
section present comprehensive experimental test learning algorithm
described previous section. focus u-tube illustrate approach
explain results obtained. subsequent section present results
applying ILP-QSI learning structure number different systems similar
kind. data utilised experiments qualitative. assumed either
measurements yield qualitative values quantitative time series
converted qualitative values. latter may necessary situations
quantitative time series data available sufficient quantity permit
quantitative system identification performed.
following general method applied learning systems studied
paper.
2.4.1 Experimental Aim
Using u-tube system, investigate model identification capabilities ILP-QSI using
qualitative data subject increasing amounts noise made increasingly sparse order ascertain circumstances target system may
accurately identified, function number qualitative observations available.
2.4.2 Materials Method
model learning system ILP-QSI seeks learn qualitative structural models qualitative data; therefore focus experiments learning qualitative data.
Data inputs (exogenous variables) system. data required
learning combinations qualitative states (of 6) envisionment shown Table 1.
Method two distinct sets experiments reported here: based noise
free data based noisy data. former assume data provided
correct used test capability ILP-QSI handling sparse data. latter set
experiments captures situation qualitative data may incorrect
measurement errors due noise original signal, errors introduced
quantitative qualitative transformation (which may occur cases original
data numerical).
Noise-free data. use following method evaluating ILP-QSIs system-identification
performance noise-free data:
system investigation:
1. Obtain complete envisionment specific values exogeneous variables.
(In particular case u-tube discussed section exogenous
variables envisionment states shown Table 1, stated above.)
839

fiCoghill, Srinivasan, & King

2. non-empty subsets states envisionment training data construct
set models using ILP-QSI record precision result. 6 number
possible non-empty sets states different test scenarios u-tube 63.
(2N 1, N number states complete envisionment)
3. Plot learning curves showing average precision versus size training data.
Noisy data. use following method evaluating ILP-QSIs system-identification
performance noisy qualitative data:
system investigation:
1. Obtain complete envisionment specific values exogeneous variables.
2. Replace non-empty subsets states envisionment randomly generated
noise states. combination correct random states, training
data construct set models using ILP-QSI record precision result. 7
Given complete envisionment N states, replacing random subset k > 0
random states result noisy envisionment consisting N k noisefree states k random states. Step 2 noise-free data, exhaustive
replacement possible subsets complete envisionment random states
result 2N 1 noisy test sets.
3. Plot learning curves showing average precision versus size training data.
2.4.3 Results
results performing experiments, showing precision learning target
model versus number states used (for noise-free noisy data) shown
Fig. 8. evident situations precision improves number states
used results experiments noisy data lower precision
noise-free data (though curves general shape).
results one would expect.
noise-free data find possible identify target model using
one state data. However possible identify target model using pairs
states 53% cases. states are:
[2, 3], [2, 4], [2, 5], [3, 5], [3, 6], [4, 5], [4, 6], [5, 6]
refer Kernel sets. time merely report finding delay
discussion significance reporting results experiments
systems class.
6. proportion models result equivalent correct model. Thus,
training data set, result returned ILP-QSI precision 0.0 1.0. term
precision used meaning usually associated Machine Learning community
rather familiar Qualitative Reasoning.
7. non-noisy data, training data set, result returned ILP-QSI
precision 0.0 1.0.

840

fiQualitative System Identification

1

0.9

0.8

Precision

0.7

0.6

0.5

0.4

0.3

0.2

Clean
Noisy

0.1

0
1

2

3

4

5

6

Number States

Figure 8: Precision models obtained u-tube.

3. Experiments Systems
section present experimental setup applied number systems:
coupled tanks, cascaded tanks mass spring damper. systems representative
class system appearing industrial contexts (e.g. cascaded tanks system
used model diagnosis industrial Ammonia Washer system Warren
et al., 2004) well useful analogs metabolic compartmental systems.
case experimental method identical utilised u-tube
described Section 2.4. system give description system target
model, envisionment associated system, statement data used
experiments, summary results obtained experiments.
3.1 Experimental Aim
three physical systems: coupled tanks, cascaded tanks mass-spring-damper (a well
known example servomechanism), investigate model identification capabilities
ILP-QSI using qualitative data subject increasing amounts noise
made increasingly sparse.
3.2 Materials Method
Data Qualitative data available consist complete envisionment arising specific
values input variables. precise details data given experiment.
Method

method used u-tube described Section 2.4.
841

fiCoghill, Srinivasan, & King

h1
< 0, std >
< 0, inc >
< (0, ), dec >
< (0, ), dec >
< (0, ), inc >
< (0, ), dec >
< (0, ), std >
< (0, ), dec >
< (0, ), dec >
< (0, ), dec >

State
1
2
3
4
6
7
8
9
10
11

h2
< 0, std >
< (0, ), dec >
< 0, inc >
< (0, ), inc >
< (0, ), dec >
< (0, ), std >
< (0, ), dec >
< (0, ), dec >
< (0, ), dec >
< (0, ), dec >

qx
< 0, std >
< (, 0), inc >
< (0, ), dec >
< (0, ), dec >
< (, 0), inc >
< (0, ), dec >
< 0, inc >
< (0, ), dec >
< (0, ), std >
< (0, ), inc >

qo
< 0, std >
< (0, ), dec >
< 0, inc >
< (0, ), inc >
< (0, ), dec >
< (0, ), std >
< (0, ), dec >
< (0, ), dec >
< (0, ), dec >
< (0, ), dec >

Table 2: envisionment states used coupled tanks experiments. (The states
labeled accord u-tube; since state 5 u-tube
appear coupled tanks envisionment state labeled 5
table.)
3.3 Coupled Tanks
open system consisting two reservoirs shown Fig. 9. Essentially,
seen u-tube input output. input, q , flows top tank
1 output, qo , flows base tank 2 (see Fig. 9).
Tank 2

Tank 1
qi

h2

h1

+
h

h

M+

dt

h1

h 1

h2
qi
qx

+

M+

dt
h 2

qx

+

qo

DERIV(h1,h01 ),
DERIV(h2,h02 ),
ADD(h2 ,Delta h, h1 ),
M+ (Delta h,qx ),
M+ (h2 ,qo ),
ADD(h02 ,qo ,qx ),
ADD(qx,h01 ,qi ).

qo

Figure 9: coupled tanks: (left) physical; (middle) QSIM diagram; (right) QSIM relations.
experiments assume observe: q , qx , h1 , h2 , qo . Thus system
identification must discover model three intermediate variables, h 01 , h02 h.
Data one exogenous variable, namely flow liquid tank 1 (q ).
experiments described input flow kept zero (that is, q = h0, stdi), making
system particular case moderately complex u-tube.
complete envisionment consists 10 states, shown Table 2 Fig. 10, means
1024 experiments set.

842

fiQualitative System Identification

1

8

9

3

6

7

10

4

11

2

Figure 10: Coupled tanks envisionment graph.
3.3.1 Results
precision graphs coupled tanks experiments shown Fig. 11.
results show improvement precision number states used increases
deterioration precision noise added. effect noise worse fewer states
used case u-tube, though effect nullified states
used.
1

0.9

0.8

Precision

0.7

0.6

0.5

0.4

0.3

Clean
Noisy

0.2

0.1

0

1

2

3

4

5

6

7

8

9

10

Number States

Figure 11: Coupled tanks precision graphs.
noise free data possible identify models using single
datum utilising pairs states yielded target model 11% cases. relevant
pairs states (kernel sets) are:
[2, 7], [3, 8], [4, 8], [6, 7], [7, 8]
843

fiCoghill, Srinivasan, & King

Whereas u-tube experiments states target model successfully
learned supersets pairs, coupled tanks case sets three states
(which supersets pairs listed above) result successful identification
target model:
[2, 3, 9], [2, 3, 10], [2, 3, 11]
[2, 4, 9], [2, 4, 10], [2, 4, 11]
[3, 6, 9], [3, 6, 10], [3, 6, 11]
[4, 6, 9], [4, 6, 10], [4, 6, 11]
3.4 Cascaded Tanks
system open system. However, flow system always unidirectional (unlike coupled tanks system). principle, system broken
two sub-systems containing one reservoir, input output.
example system shown Fig. 12. Liquid flows tank 1, unidirectionally tank 1 tank 2. apparent figure, flow
top tank 1 base tank 2.
qi

h1

h1
qx

h2
M+

dt
h 1

Tank

M+

dt
h 2

qo

h2

qi

+

qx

+

qo

DERIV(h1,h01 ),
DERIV(h2,h02 ),
M+ (h1 ,qx ),
M+ (h2 ,qo ),
ADD(h02 ,qo ,qx ),
ADD(qx,h01 ,qi ).

Tank B

Figure 12: cascaded tanks: (left) physical; (middle) QSIM diagrammatic; (right) QSIM
relations.
assume observe: qi , h1 , h2 , qx . Thus system identification must
discover model two intermediate variables, h 01 h02 . numbered list states
(or complete envisionment) case shown Fig. 13 Table 3.

Data one exogenous variable, namely flow liquid tank 1 (q ).
increase complexity allowing steady positive input flow (that is, q = h(0, ), stdi).
complete envisionment consists 14 states, shown Fig. 13 Table 3
means 16,383 experiments required .
3.4.1 Results
precision graphs cascaded tanks shown Fig. 14. graphs similar
shape coupled systems, showing generally lower precision noisy-data.
examination shows unable identify target model fewer
three states. subset triples (which form kernel sets case)
844

fiQualitative System Identification

1

12

8

4

2

13

9

5

11

14

10

6

7

3

Figure 13: Cascaded tanks envisionment graph.
State
1
2
3
4
5
6
7
8
9
10
11
12
13
14

h1
< 0, inc >
< 0, inc >
< (0, ), dec >
< (0, ), dec >
< (0, ), dec >
< (0, ), dec >
< (0, ), std >
< (0, ), std >
< (0, ), std >
< (0, ), std >
< (0, ), inc >
< (0, ), inc >
< (0, ), inc >
< (0, ), inc >

h2
< 0, std >
< (0, ), dec >
< 0, inc >
< (0, ), dec >
< (0, ), std >
< (0, ), inc >
< 0, inc >
< (0, ), dec >
< (0, ), std >
< (0, ), inc >
< 0, inc >
< (0, ), dec >
< (0, ), std >
< (0, ), inc >

qx
< 0, inc >
< 0, inc >
< (0, ), dec >
< (0, ), dec >
< (0, ), dec >
< (0, ), dec >
< (0, ), std >
< (0, ), std >
< (0, ), std >
< (0, ), std >
< (0, ), inc >
< (0, ), inc >
< (0, ), inc >
< (0, ), inc >

qo
< 0, std >
< (0, ), dec >
< 0, inc >
< (0, ), dec >
< (0, ), std >
< (0, ), inc >
< 0, inc >
< (0, ), dec >
< (0, ), std >
< (0, ), inc >
< 0, inc >
< (0, ), dec >
< (0, ), std >
< (0, ), inc >

Table 3: envisionment states used cascaded tanks experiments.

target model identified are:
[1, 3, 4], [1, 3, 5], [1, 3, 8], [1, 3, 9], [1, 7, 4], [1, 7, 5], [1, 7, 8], [1, 7, 9]

845

fiCoghill, Srinivasan, & King

1

Clean
Noisy

0.9

0.8

Precision

0.7

0.6

0.5

0.4

0.3

0.2

0.1

0

0

2

4

6

8

10

12

14

Number States

Figure 14: Cascaded tanks precision graph.
3.5 Mass-Spring-Damper
final physical system considered abstraction wide variety servomechanisms
displacing force. example system shown Fig. 15. situation,
mass held equilibrium two forces. equilibrium disturbed, oscillatory
behaviour observed. motion mass damped oscillations
continue indefinitely, eventually return original equilibrium position.
external force applied (for example pulling mass down) final resting place
displaced natural equilibrium point (see Fig. 15). mass displacement
dispM rest position, time, t, moving velocity vel
accelerating rate accM . assume observe variables: disp , velM , accM ,
disp M+ H 1
+

dt
Damping

Spring

vel M+

H2

H
+

force

dt
vel
disp

a=v/sec

accM M+

H3

DERIV(dispM ,velM ),
DERIV(velM ,accM ),
M+ (dispM ,H1 ),
M+ (velM ,H2 ),
M+ (accM ,H3 ),
ADD(H1,H2 ,H4 ),
ADD(H3,H4 ,force).

force

Figure 15: spring system (a) physical; (b) QSIM diagrammatic; (c) QSIM relations
f orce. Qualitative system identification must find model four intermediate
variables, H1 , H2 , H3 H4 ; well intermediate relation ADD(H 1 ,H2 ,H4 ),
846

fiQualitative System Identification

three variables. input force, force, exogenous. experiments here,
consider case steady force applied system (that
is, ForceA = h(0, ), stdi). complete envisionment case shown Fig. 16,
equilibrium point represented state 2. precision graphs shown
2
19

24

29

17

0

3

18

22

27

16

23

28

20

21

26

12

7

5

6

10

8

9

15

13

14

11

4

1

30

25

Figure 16: Mass-spring-damper envisionment graph
Fig. 17. system envisionment contains 31 states, makes exhaustive testing
unrealistic. Instead sets clean noisy states randomly selected space
possible experiments. Nonetheless observed average precision graphs
in-line obtained tanks experiments. However, actual precision values
suggest sparse data noise less effect systems.
may due tight relationship two derivatives spring model,
making system extremely constrained.
3.6 Discussion Results
inspection experimental results reveals expected pattern: cases
precision curves (for noisy noise free experiments) general shape.
Experiments utilise fewer states identify target model less often
greater number states used. However, closer examination results reveals
even states used (pairs triples) target model may consistently
found particular combinations states used. order understand
requires us look solution spaces systems concerned. 8
examine u-tube coupled tanks together closely
related systems zero input. cascaded tanks system slightly different
non-zero input discussed later section.
8. discuss spring system complexity.

847

fiCoghill, Srinivasan, & King

1

0.9

0.8

Precision

0.7

0.6

0.5

0.4

0.3

0.2

Clean data
Noisy data

0.1

0
1

4

7

10

13

16

19

22

25

28

31

Number States

Figure 17: Mass-spring-damper precision graph
3.6.1 U-tube Coupled Tanks
bare results, interesting, give indication particular pairs
triples highlighted precisely identify target model. order ascertain why?
must examine envisionment states given Tables 1 2, itemise
relevant features sets states follows:
u-tube coupled tanks least one critical point pair.
systems pair states contains one state branch
envisionment graph (Fig. 2 & Fig. 10); least one extreme
branch. is, states one tank either empty state immediately
succeeding this, tank relatively full derivatives
height tank opposite signs.
systems supersets minimal sets precisely learn target
model.
observations lead us suggest coupled systems ability learning
system identify structure model dependent data used including
critical points data covers different types starting point
system behaviours have. keeping systems theory would lead
us expect (Gawthrop & Smith, 1996).
order properly appreciate indicated kernel sets relation
systems need look solution spaces (Coghill et al., 1992;
848

fiQualitative System Identification

Coghill, 2003) two systems. shown Fig. 18 (and derivation
similar given Section 2.2 detailed Appendix A). get
clear picture kernel pairs triples lie respect critical points
system.
h1=h2=0

h2

h1=0

h2

5

8

6

6

2

11

2

10

4

h2=0

9
7
4

1

3

h1

1

3

h1

Figure 18: solution spaces u-tube coupled tanks systems.
system diagrams provided Fig. 1 Fig. 9 seen u-tube
coupled tanks systems differ fact coupled tanks outlet orifice,
whereas u-tube not. accounts major difference solution spaces;
namely coupled tanks two critical points (states 7 9) whereas u-tube
one (state 5) actually steady state. gives rise additional
states: 9, 10 11 lie critical points. 9 observed
outlet orifice tank 2 coupled tanks system decreases size space
isoclines solution space become narrower disappears orifice
closes. seen formally comparing equations 6 10 Appendix A.
clear k2 approaches zero, equation 6 approximates equation 10 (and
k2 = 0 two equations same).
look sets pairs observe related ways
reflect relationship two coupled systems. Firstly, looking pairs.
u-tube 4 pairs include critical point (steady state), state 5: [2,
5], [3, 5], [4, 5], [5, 6]. noting discussion state 5 u-tube
relates either states 7 8 coupled tanks find analogous pairs
exist kernel set coupled tanks: [2, 7], [3,8], [4, 8], [6, 7]. leaves one
pair coupled tanks pairs unaccounted for: [7, 8]. However, surprise since
pair taken map state 5 u-tube; consistent finding
singleton state sufficient learn model system.
9. three states differ magnitude qx qdir h01 h02 ,
neither appear explicitly solution space. Readers may convince
comparing Table 1 envisionment Table 2.

849

fiCoghill, Srinivasan, & King

still 4 pairs u-tube experiments able learn reliably
target model corresponding coupled tanks pair. are: [2, 3],
[2, 4], [3, 6], [4, 6]. comparison triples learning coupled tanks
model reveals states pairs conjoined either state 9, 10
11 make triples. inclusion states warrants explanation since
states distinguish closed u-tube open coupled tanks.
three states state variables value h(0, ), dec)i; situation
cannot occur u-tube. Combining fact four pairs listed
contain critical point qualitatively identical systems leads one
conclusion additional information contained triple kernel sets enables
one distinguish u-tube coupled tanks case.
results extend, strengthen deepen reported Coghill et al. (2004)
Garrett et al. (2007).
3.6.2 Cascaded Tanks
cascaded tanks system asymmetrical flow possible one direction. fact input positive steady flow makes setup marginally
complex regard coupled systems, input flow.
kernel sets model system may learned (presented Section
3.4.1 depicted schematically Fig. 19 order explain results obtained.
look first middle columns diagram ignore, time being,
downstream tank, see represented two pairs states: tank
empty combined tank steady state, tank empty combined
state amount fluid tank greater steady state. confirmed
experimentally kernel sets single tank model learned.
ignore upstream tank (apart outflow) examine middle
third columns diagram see divide two groups according
whether input downstream tank steady decaying (positive decreasing).
two pairs states, upstream tank:
tank empty combined tank steady state, tank empty combined
state amount fluid tank greater steady state.
case tank seen cross product states appear kernel sets
case represents valid possible situation.
results lead two major conclusions regard cascaded tanks system:
1. ILP-QSI effectively identifies individual components cascade combines
cascade point.
2. situation downstream tank, input either steady flow
decreasing flow, indicates utilising variety inputs aid identification
process.
former conclusion may serve pointer possibility incremental learning
cascaded systems.
850

fiQualitative System Identification

1

3

8

4

5

9

7

8

4

5

9

Figure 19: schematic representation triples states target model
cascaded tanks systems learned.

851

fiCoghill, Srinivasan, & King

4. Experiments Quantitative Data
part experimental testing system proof-of-concept test.
stated system designed learn qualitative models qualitative data.
assumed conversion quantitative data already performed,
least needed qualitative data analysis would require another research project
beyond scope paper. However, order test usability system
quantitative data test ability go whole process receiving
data producing model, implemented rudimentary data analysis package
facilitate this. course exhaustive, permit us test results
produced via process consistency produced experiments
qualitative data.
4.1 Experimental Aim
Using four physical systems, investigate model identification capabilities ILPQSI using numeric traces system behaviour subject increasing amounts
noise.
4.1.1 Quantitative Qualitative Conversion
proceeding describe experiments carried out, present method used
convert numerical data qualitative form required ILP-QSI
utilised set experiments.
adopted straightforward simple approach performing conversion.
quantitative variable x, values N real-valued time series steps numerically
differentiated means central difference approach (Shoup, 1979) that,
(xi xi1 )+(xi+1 xi )
2





dxi
dt

=

d2 x
dt2


= (xi xi1 ) (xi+1 xi )

= 2N 1

quantitative variable x converted qualitative variable q = hqmag, qdiri,
qmag {(-,0), 0, (0,)} generated x, qdir {dec, std, inc} generated
dx/dt. qualitative derivative q, q, obtained similar manner generated
dx/dt d2 x/dt2 respectively.
data typically noisyeither inherently, process differentiation
perform simple smoothing first second derivatives using Blackman
filter (a relative moving average filter see Blackman & Tukey, 1958). case,
filter actually applied result Fast Fourier Transform (FFT) result obtained taking real part inverse FFT. note form
smoothing appropriate sufficient number time steps present.
obtained (smoothed) numerical value x variable x instant i, qualitative magnitude qmag(xi ) is, principle, simply obtained following:
qmag(xi ) =



(, 0)

xi < 0
0
xi = 0


(0, +) otherwise
852

fiQualitative System Identification

practice, since floating-point values unlikely exactly zero, found
advantageous re-apply filtering process data straddling zero eliminate small
fluctuations around value. Despite measures, addition generating correct
qualitative states (true positives) conversion produce errors: states generated may
correspond true states (false positives); true states may generated
(false negatives). Fig. 20 shows example (the problem is, course, exacerbated
original quantitative data noisy). reason imperfect results
noise free quantitative data twofold: one smoothing process small fluctuations around zero; main reason that, discussed above, creating full qualitative
state involves numerical differentiation introduces noise data derivatives affects ability process convert quantitative qualitative
absolute accuracy.
System
u-tube
Coupled
Cascaded
Spring

True
States
6
10
14
33

Generated
States
6
14
8
33

True
Positives
4
6
5
20

False
Positives
2
8
3
13

False
Negatives
0
0
6
0

Figure 20: example errors resulting generating qualitative states traces
system behaviour. Here, traces generated following initial
conditions: h1 = 2.0, h2 = 0.0 three tank systems; disp = 2.0,
velM = 0.0 spring.

4.2 Materials Method
Numerical simulations four physical systems constructed using general
relations qualitative models. experiments carried utilising
noise free noisy data, described rest section.
4.2.1 Data
models used numerical simulations structure qualitative
models, substitution real valued parameter monotonic function
relation. gives linear relation two variables; complex, non-linear
functions might used, linear functions provided suitable approximation
known behavior systems, shown graphically Fig. 21 (a)(d);
much required proof-of-concept study.
given set function parameter values, initial conditions, input value,
quantitative model produces single quantitative behaviour (this contrasts qualitative
models produce list possible behaviours model). Parameter values
chosen models approached steady state time period
test. models implemented Matlab 5.3 using ODE15s ODE solver.
853

fiCoghill, Srinivasan, & King

3

3

Tank
Tank B

2.9

Tank
Tank B
2.5

2.8

2.7
2

Level

Level

2.6

2.5

1.5

2.4
1
2.3

2.2
0.5
2.1

2

0

50

100

150

200

250
300
Time seconds

350

400

450

0

500

3

0

50

100

150

200

250
300
Time seconds

350

400

450

500

20

Tank
Tank B

Displacement
Velocity

15

2.5
10

Displacement/Velocity

Level

2

1.5

5

0

5

1
10

0.5
15

0

0

50

100

150

200

250
300
Time seconds

350

400

450

20

500

0

50

100

150

200

250
300
Time seconds

350

400

450

500

Figure 21: graph example numeric behavior (a) u-tube, top left; (b) coupled
tanks, top right; (c) cascaded tanks, bottom left, (d) damped spring,
bottom right.

time point generated simulation made available part sampled data.
ensures sampling rate suitably fast respect Nyquist criterion.
guarantees sufficient number data points available required
Beckman filter.
4.2.2 Method
Noise-free data. use following method evaluating ILP-QSIs system-identification
performance noise-free data:
four test-systems:
(a) Obtain system behaviour test system number different initial
conditions input values. Convert qualitative states using
procedure Section 4.1.1.
(b) Using qualitative states obtained training data construct set models
using ILP-QSI record precision result (this proportion
854

fiQualitative System Identification

models result equivalent correct model). Thus,
training data set, result returned ILP-QSI precision
0.0 1.0.
following details relevant: (a) quantitative models put three
separate initial conditions, magnitude two state variables set (2, 0),
(0, 3) (2, 3). Specifically, initial values two tank levels three
tank systems, displacement velocity spring. values
crucial chosen initial conditions caused numerical models
converge steady state system reasonable number iterations; (b)
initial condition gave rise system behaviour hence set qualitative states.
second step above, qualitative states behaviours used training data.
kernel subsets necessary correct system identification usually contain
qualitative states multiple quantitative behaviours. (c) conversion process results
erroneous qualitative states (see Section 4.1.1). Thus, training data used contain
false positives false negatives.
Noisy data. use following method evaluating ILP-QSIs system-identification
performance noisy quantitative data:
four test-systems:
(a) Obtain system behaviour test system number different initial
conditions input values.
(b) Corrupt system behaviour additive noise;
(c) Convert corrupted behaviour qualitative states using procedure
Section 4.1.1.
(d) Using qualitative states obtained training data construct set models
using ILP-QSI record precision result (this proportion
models result equivalent correct model). Thus,
training data set, result returned ILP-QSI precision
0.0 1.0.
second step noise added numerical data sets follows. Gaussian noise
signal (with 0.0 1.0) generated using built-in Matlab function
normrnd scaled three orders magnitude original noise, namely 0.01, 0.1
1.0 (representing low, medium high amounts noise respectively). scaled
noise variants added numerical values system behaviour obtained
initial condition.
4.3 Quantitative Experimental Results
process converting quantitative qualitative states introduces errors, even
noise free data. Table 4 shows proportion correct qualitative states total
number qualitative states obtained numerical signal, including noisy
states. table shows proportion four systems, different degrees
855

fiCoghill, Srinivasan, & King

Model
u-tube

Coupled

Cascaded

Spring

Noise level
0
0.01
0.1
1
0
0.01
0.1
1
0
0.01
0.1
1
0
0.01
0.1
1

Initial States
(2,0)
(0,3)
(2,3)
4/6
4/6
3/5
2/8
2/8
2/9
2/10
2/10
2/15
2/37
2/37
2/53
6/14
5/13
5/14
6/16
4/14
4/12
6/16
5/25
4/15
6/58
6/61
4/46
5/8
5/8
3/8
4/10
4/12
2/9
4/17
4/21
2/13
4/39
4/49
4/38
20/33 19/35 22/39
23/48 20/36 18/41
23/49 20/38 18/44
20/65 20/52 19/53

Table 4: input data numeric experiments, described proportion
number clean states / total number converted states different systems
degrees noise.

noise. numerical simulations intended exhaustive cover
every possible behaviour; surprising observe case
states complete envisionment generated.
results qualitative experiments detailed previous section indicate
order successfully learn target model data branches envisionment
required, greater number states used greater liklihood
learning target model structure. Therefore experiments utilised states
generated numerical simulations.
results numerical data experiments shown Fig. 22. experiments show possible learn models clean noisy numerical data even
qualitative states generated clean numerical data contain number
unavoidable data transformation errors. results systems used
follows:
spring system system 31 states complete envisionment Table 4
shows quantitative qualitative conversion process yields around 20
states. seen Fig. 17 learning 20 states gives 100% precision
learning target model, even presence noise. surprising,
therefore, find learning precision perfect highest noise level.
Since qualitative experiments done sampling, slight downturn
highest noise level could due large number noisy states generated
856

fiQualitative System Identification

1
0.9
0.8

Utube
Coupled Tanks
Cascaded Tanks
Spring

Precision

0.7
0.6
0.5
0.4
0.3
0.2
0.1
0
0
0.01
0.1
1.0

Amount Noise

Figure 22: comparison results numerical learning tests, averaged
three initial conditions. Tests attempted learn states,
cascaded tanks, likely fail large numbers
states, spring. consistent kernel subset principle
introduced Section 2.4 since model-learning precise without presence
certain key states input data.

experiment. Hence say results keeping qualitative
experiments.
u-tube & coupled tanks complete envisonments systems contain 6 10
states respectively. Table 4 shows number true states generated less
complete envisionment, significantly less number noisy states
case. one would expect results presented Fig. 8 u-tube gives
better results coupled tanks (having higher proportion envisionment
states present). Ultimately, ability learn model completely curtailed
noise; though sooner case coupled tanks (which qualitative
experiments show sensitive presence noise). consistent
results qualitative experiments.
cascaded tanks qualitative learning experiments kernel subset triples
state 0 included. state representing situation tanks
empty begin with, one initial states included numerical
857

fiCoghill, Srinivasan, & King

simulations. Also, perusal Fig. 14 reveals introduction noise radically
reduces learning precision, 4 states (the average number true states
generated qualitative quantitative conversion process) zero. Taking
account facts expected cascaded tanks model would
successfully identified experiments. consistent
findings qualitative experiments.

5. Application Biological System Identification
work reported thus far aimed demonstrating viability ILP-QSI
identifying bounds operation approach. section examine scalability
method identify complex real world biological network. use glycolysis
pathway test case identification.
5.1 Test System: Glycolysis
chose study metabolic pathway glycolysis test case. Glycolysis one
important ubiquitous biology, historically one first
discovered, still presents challenge model accurately.
QSIM primitives sufficient model adequately qualitative behaviour
glycolysis pathway. are, however, two problems. First, biologists would
understand model, would reason much higher level abstraction. Second, computational complexity corresponding system identification task
glycolsis (a qualitative model 100 QSIM relations) is, least currently,
intractable. address modelling metabolic pathways abstract
manner using biologically meaningful metabolic components (MC) (a similar approach
constructing complex qualitative models human heart used Bratko, Mozetic,
& Lavrac, 1989). Specifically, note metabolic pathways, essentially two
types object: metabolites (small molecules) enzymes (larger molecules catalyze
reactions). use component models objects described (King,
Garrett, & Coghill, 2005).
5.1.1 Modelling Metabolites Enzymes
concentrations metabolites vary time synthesised utilised
enzymatically catalysed reactions. result concentration given time-point
function of: (a) concentration previous time-point; (b) degree
used created various enzyme reactions.
modelling enzymes, enzyme assumed two substrates
two products. two substrates products considered form
substrate product complex, amount complex proportional
amount substrates products multiplied together. models probability
substrates (or products) collide enzyme sufficient timeliness
catalysed product complex (or substrate complex). substrate complex
converted product complex, disassociates product metabolites,
vice versa. shall use phrase flow enzyme denote amount
858

fiQualitative System Identification

substrate complex formed minus amount product complex formed. (See work
Voit Radivoyevitch (2000) details enzyme kinetics.)

Metabolite

Metabolites1

Metabolites2
E nzm

Metab

*
S_for
w

dt
Mtb

M_dt

M+

-

M+

P_rev

Sum

-

FlowFlow+

*
Flow1 Flown

Metabolitep1

Metabolitep2

Figure 23: Metabolic Components (MCs) used biological experiments,
underlying QSIM primitives.
Quantitative, corresponding qualitative representations metabolite enzymes using QSIM relations, therefore:
Enzymes:

Metabolites:
n

X
dM
=
F lowi
dt
i=1
DERIV(M etabolite,Mdt),
SUM(F low1 , . . ., F lown ,
Md t).

(4)

F lowi = f (




s=1

etabolites) g(

P


etabolitep)

(5)

p=1

PROD(M etabolite1, . . ., etabolites, S-for),
PROD(M etabolite1, . . ., etabolitep, P-rev),
M+(S-for, Ds),
M+(P-rev, Dp),
SUB(Ds, Dp, F low),
MINUS(F low,F lowminus).

Here, refers input metabolites enzymatic reaction, substrates, P
refers products enzymatic reaction. SUM() PROD() predicates simply
extensions ADD() MULT() predicates, number inputs. Fig. 23 shows
constraints grouped together metabolic components (MCs). permits
us create general constraints representing metabolite enzyme components
follows:
ENZYME((S1 , S2 ) (P1 , P2 ) enzymeF low)
METABOLITE(metaboliteConc metaboliteF low (enzymeF low 1 . . . enzymeF lown ))
859

fiCoghill, Srinivasan, & King

1.
2.
3.
4.
5.
6.
7.
8.
9.
10.

(Hexokinase):
(Phosphoglucose isomerase):
(Phosphofructokinase):
(Aldolase):
(Triose phosphate isomerase):
(Glyceraldehyde 3-phosphate dehydrogenase):
(Phosphoglycerate kinase):
(Phosphoglycerate mutase):
(Enolase):
(Pyruvate kinase):

Glc + ATP G6P + ADP.
G6P F6P.
F6P + ATP F16BP + ADP
F16BP DHAP + G3P
DHAP G3P
G3P + NAD 13BP + NADH.
13BP + ADP 3PG + ATP.
3PG 2PG.
2PG PEP
PEP + ADP Pyr + ATP.

Figure 24: reactions included qualitative model glycolysis. reactions
consume ATP NADH explicitly included.

ENZYME predicate identifies substrates products (the first argument)
returns single variable representing flow enzyme (the second argument).
METABOLITE predicate relates level flow metabolites (the first second
arguments) flow enzymes (the third argument).
5.1.2 Modelling Glycolysis
Using qualitative components representing metabolites enzymes, construct qualitative model glycolysis. model uses 15 metabolites, namely: pyruvate (Pyr), glucose (Glc), phosphoenolpyruvate (PEP), fructose 6-phosphate (F6P), glucose 6-phosphate
(G6P), dihydroxyacetone phosphate (DHAP), 3-phosphoglycerate (3PG), 1,3-bisphosphoglycerate
(13BP), fructose 1,6-biphosphate (F16BP), 2-phosphoglycerate (2PG), glyceraldehyde 3phosphate (G3P), ADP, ATP, NAD, NADH. included H+, H 2 O, Orthophosphate assumed ubiquitous (in addition, restriction substrates
products three number prevents inclusion).
qualitative state glycolysis defined set qualitative states 15
metabolites. Table 5 representation one qualitative state. understand
state consider first entry intended represent qualitative state NAD (that is,
NAD concentration: < 0, ), dec >, NAD flow: < (, 0), dec >). meaning
concentration NAD positive (0, ) decreasing (dec),
rate change concentration NAD (in analogy physical systems, flow
NAD) negative (, 0) decreasing (dec). Similar meanings apply
metabolites. Note metabolic concentrations must 0 ; cannot
negative, 0 state uninteresting.

Using representation, possible model glycolysis shown Fig. 25. model describes constraints levels flows metabolites. Thus, constraint enzyme((G3Pc,
NADc), (13BPc, NADHc), Enz6f) states flow enzyme 6 (Enz6f) controls transformation concentrations G3Pc NADc levels 13BPc
NADHc; whereas constraint metabolite(NADc, NADc, (Enz6f, -)) states
860

fiQualitative System Identification

Metabolite
NAD
NADH
ATP
ADP
Pyr
Glc
PEP
F6P
G6P
DHAP
3PG
13BP
F16PB
2PG
G3P

Concentration
< (0, ), dec >
< (0, ), inc >
< (0, ), dec >
< (0, ), dec >
< (0, ), inc >
< (0, ), dec >
< (0, ), dec >
< (0, ), dec >
< (0, ), dec >
< (0, ), dec >
< (0, ), inc >
< (0, ), std >
< (0, ), inc >
< (0, ), dec >
< (0, ), inc >

Flow
< (, 0), dec >
< (0, ), inc >
< (, 0), dec >
< (, 0), dec >
< (0, ), dec >
< (, 0), inc >
< (, 0), dec >
< (, 0), dec >
< (, 0), dec >
< (, 0), dec >
< (0, ), std >
< 0, inc >
< (0, ), dec >
< (, 0), dec >
< (0, ), inc >

Table 5: legal qualitative state 15 metabolites observed glycolysis.
ENZYME((Glcc, ATPc),(G6Pc,ADPc),Enz1f),
ENZYME((G6Pc),(F6Pc),Enz2f),
ENZYME((F6Pc,ATPc),(F16BPc,ADPc),Enz3f),
ENZYME((F16BPc),(G3Pc,DHAPc),Enz4f),
ENZYME((DHAPc),(G3Pc),Enz5f),
ENZYME((G3Pc,NADc),(13BPc,NADHc),Enz6f),
ENZYME((13BPc,ADPc),(3PGc,ATPc),Enz7f),
ENZYME((3PGc),(2PGc),Enz8f),
ENZYME((2PGc),(PEPc),Enz9f),
ENZYME((PEPc,ADPc),(Pyrc,ATPc),Enz10f),
METABOLITE(ATPc,ATPf, (Enz10f +), (Enz7f, +),(Enz1f, -),(Enz3f, -)),
METABOLITE(ADPc,ADPf,(Enz1f, +),(Enz3f, +),(Enz10f, -)(Enz7f, -)),
METABOLITE(NADc,NADf,(Enz6f, -)),
METABOLITE(NADHc,NADHf,(Enz6f, +)),
METABOLITE(Pyrc,Pyrf,(Enz10f, +)),
METABOLITE(Glcc,Glcf,(Enz1f, -)),
METABOLITE(PEPc,PEPf,(Enz9f, +),(Enz10f, -)),
METABOLITE(F6Pc,F6Pf,(Enz2f, +),(Enz3f, -)),
METABOLITE(G6Pc,G6Pf,(Enz1f, +),(Enz2f, -)),
METABOLITE(DHAPc,DHAPf,(Enz4f, +),(Enz5f, -)),
METABOLITE(3PGc,3PGf,(Enz7f, +),(Enz8f, -)),
METABOLITE(13BPc,13BPf,(Enz6f, +),(Enz7f, -)),
METABOLITE(F16BPc,F16BPf,(Enz3f, +), (Enz4f, -)),
METABOLITE(2PGc,2PGf,(Enz8f, +),(Enz9f, -)),
METABOLITE(G3Pc,G3Pf,(Enz5f, +),(Enz4f, +),(Enz6f, -)).

Figure 25: representation qualitative model glycolysis (see text details).

concentration (NADc) flow (NADf) metabolite NAD controlled flow
single enzyme number 6 (Enz6f : Glyceraldehyde 3-phosphate dehydrogenase),
enzyme removes (signified -) NAD (+ would mean enzyme flow adds
corresponding metabolite).
861

fiCoghill, Srinivasan, & King

5.2 Experimental Aim
specific system identification task interested is: Given qualitative observations metabolic states, ILP-QSI identify correct qualitative model glycolysis?
5.3 Materials Method
methodology depicted Fig. 26, describe two separate ways identifying
biochemical pathways. make following assumptions:
1. data sparse necessarily measured part continuous time series.
realistic given current experimental limitations metabolomics, rules
possibility numerical system identification approaches.
2. metabolites known structure involved model. reason
employ chemoinformatic heuristic decrease number possible
reactions. heuristic based reasonable assumption chemical
reaction catalysed enzyme breaks chemical bonds. Full details
paper King et al. (2005). strongest assumption make. Even given
rapid advance metabolomics (NMR, mass-spectroscopy, etc.), currently
realistic assume relevant metabolites pathway observed
structure determined.
3. metabolites known structure involved particular pathway.
restriction current metabolomics technology observe compounds
structurally identified.
4. reactions involve three substrates three products.
5. qualitative states: measure direction change metabolite level
first-derivative. requires sampling level least three times succession.
5.3.1 Logical/Graph-based Constraints
first considered logical/graph-based (LG) nature problem. specific domain metabolism imposes strong constraints possible LG based models. used
constraints following way:
1. Chemical reactions conserve matter atom type (Valdes-Perez, 1994). glycolysis generated possible ways combining 18 metabolites form matter
atom type balance reactions ( 3 reactants 3 products). produced 172
possible reactions substrates balanced products number type
element. number compares well 2,300,000 possible reactions
would naively possible.
2. Typical biochemical reactions make/break bonds, cannot arbitrarily
rearrange atoms make new compounds. reaction considered plausible
broke 1 bond per reactant. analysis done originally hand,
subsequently developed general computer program automate task.
862

fiQualitative System Identification

LG Modelling

possible
combinations
metabolites
Conservation mass
element type.

QR Modelling

Bonds broken

Typical
biochemistry

QR System
Identification

QR

2

Glycolysis

Glycolysis

Figure 26: Metabolic System Identification methodology.
172 balanced reactions 18 considered chemically plausible. 18
reactions, 10 actual reactions glycolysis 8 decoy reactions.
5.3.2 Qualitative Reasoning Constraints
used simple generate test approach learning. first computational
experiment used 10 reactions glycolysis 8 decoy reactions
considered chemically feasible, see Fig. 24. reactions, absence evidence
contrary, considered irreversible. first generated possible ways
combining 18 reactions connected 15 main substrates glycolysis (models
non-disjoint). generated 27,254 possible models 10 reactions -
necessary look models reactions target (parsimony),
models generated size order. smallest number reactions necessary
include 15 metabolites size 5. 27,254 models involved reaction:
glyceraldehyde 3-phosphate + NAD 1,3-bisphosphoglycerate + NADH (reaction 6);
could immediately conclude reaction occurred glycolysis.
863

fiCoghill, Srinivasan, & King

formed example qualitative states glycolysis using QR simulator (in pseudo
random manner) test models. states thus generated contain noise.
27,254 possible models tested states, model could
generate particular state removed consideration (accuracy constraint).
Note flows metabolites enzyme observed -
intermediate variables. observe overall levels flows metabolites.
makes system identification task much harder.
efficiency, used fast YAP Prolog compiler. formed compiled
versions enzyme metabolite MCs (input/output look-up tables), compiled
parts QSIM. adopted resource allocation method employed increasingly computationally expensive tests: i.e. forming filter tests exponentially increasing
numbers example states.
5.3.3 Results
several months compute time 65 node Beowulf cluster reduced 27,254
possible models 35 (a 736 fold reduction). models included target model
(glycolysis), plus 34 models could qualitatively distinguished it.
35 models included following six reactions (see Fig. 24):
3. F6P + ATP F16BP + ADP
4. F16BP DHAP + G3P
5. DHAP G3P
6. G3P + NAD 13BP + NADH
8. 3PG 2PG
9. 2PG PEP
reactions form core glycolysis.
Examining 35 models revealed correct model fewest cycles,
however know general phenomenon.
attempted use Progol positive compression measure distinguish models. based comparing models randomly generated states.
However, unsuccessful model covered 100,000 random states
generated! believe due extremely large state space. However, simple
modification approach work. produce random states glucogenesis
(glycolysis driven reverse direction), true model glycolysis covers fewer
examples 34 alternatives, identified true model. Note
approach, unlike use Progol positive compression measure, requires
new experimental data obtained.
Thus demonstrated method learning qualitative models dynamic
systems scalable handle relatively large metabolic system. achieved
means MCs represent meaningful units domain, map directly
QSIM constraints abstracted. enable us present
complex models user friendly manner, removing need understand
structure high order differential equations.
864

fiQualitative System Identification

6. Related Work
System identification long history within machine learning: present
important signposts directly relevent work here. focus
strand research deals learning qualitative models dynamic systems.
earliest description aware concerning computer program identifying quantitative model explain experimental data work Collins (1968).
procedure described heuristically searches equation structures,
linear combination functions observed variables. Better known Bacon
system (Langley, 1981), early versions largely concentrated parameter estimation problem, particular selecting appropriate values exponents
equations. example, given class algebraic equation structures Bacon.1 able
reconstruct Keplers model planetary motion data. later work (for example work Nordhausen & Langley, 1993) attempted extend work deal
identifying algebraic structure relevant parameters, Bacon highlighted
importance bias (Mitchell, Keller, & Kedar-Cabelli, 1986) machine learning,
constraining possible model structures space possible models conforming structures. quantitative equation discovery systems lineage are:
Coper (Kokar, 1985), uses dimensional analysis restrict space equations;
Fahrenheit/EF (Langley & Zytkow, 1989) E examine space bivariate equations; Abacus (Falkenhainer & Michalski, 1986) identify piecewise
equations; Sds uses type dimensionality restrictions constrain space
equations; Lagrange family equation finders (Dzeroski & Todorovski, 1993; Todorovski & Dzeroski, 1997; Todorovski et al., 2000; Todorovski, 2003) attempt identify
models form ordinary partial differential equations; IPM (Langley, George,
Bay, & Saito, 2003) extensions developments, Prometheus/RPM (Bridewell,
Sandy, & Langley, 2004; Asgharbeygi, Bay, Langley, & Arrigo, 2006), incorporate
process descriptions (Forbus, 1984) aid construction revision quantitative
dynamic models.
Focussing specifically non-classical system identification metabolic models, perhaps notable work identification Arkin, Shen, Ross (1997)
identified graphical model reactions part glycolysis experimental data.
work Reiser, King, Kell, Muggleton, Bryant, Oliver (2001) presents unified
logical approach simulation (deduction) system identification (induction abduction). interesting recent approach, presented Koza, Mydlowec, Lanza, Yu, Keane
(2000), examines identification metabolic ODE models using genetic programming
techniques. this, cellular system viewed electrical circuit space
possible circuits searched means genetic programming approach.
earliest reported work identification qualitative models Mozetic,
1987, colleagues, identified model electrical activity heart. work,
reported fully (Bratko et al., 1989) remains landmark effort qualitative
modelling complex biological system. However, researchers noted (Bratko,
Muggleton, & Varsek, 1992), results obtained static models
provide insight models dynamic systems identified.
865

fiCoghill, Srinivasan, & King

first machine learning system learning qualitative models dynamic systems
Genmodel (Coiera, 1989a, 1989b). Genmodel need negative examples
system behaviour models learned restricted qualitative relationships amongst
observed variables (that is, intermediate, hidden, variables hypothesized). model, obtained using notion specific generalization observed
variables (in sense Plotkin, 1971), usually over-constrained. is, contained
constraints necessary characterize fully dynamics system
modeled. updated version Genmodel developed Hau Coiera (1993) showed
dimensional analysis (Bhaskhar & Nigam, 1990) could used form directed
negative example generation. new version could learn real-valued experimental data (which converted internally qualitative form), still required
variables known measured outset. system MISQ, entirely similar
complexity abilities earlier version Genmodel developed Kraan,
Richards, Kuipers (1991). later re-implemented general-purpose relational learning program Forte (Richards & Mooney, 1995), allowed hypothesis
intermediate variables (Richards, Kraan, & Kuipers, 1992). relational pathfinding
approach used MISQ (through auspices Forte) special form Inductive Logic
Programming, general framework much powerful
Bratko colleagues first view problem learning dynamic qualitative
models explicitly exercise Inductive Logic Programming (ILP) first demonstrated possibility introducing intermediate (unobserved) variables models.
used ILP system Golem (Muggleton & Feng, 1990) along QSIM representation produce model u-tube system. model identified equivalent
accepted model (in sense predicted behaviour) structure
generated form could help explain behaviour (Coghill & Shen, 2001).
Genmodel, model produced constrained. Unlike Genmodel, Golem
required positive negative examples system behaviour shown Hau
Coiera (1993) sensitive actual negative examples used.
Say Kuru (1996) describe program system identification qualitative data
called QSI. QSI first finds correlations variables, iteratively introduces
new relations (and intermediate variables), building model comparing output
model known states satisfactory model found. Say Kuru
characterized approach one diminishing oscillation approaches correct
model. Genmodel MISQ, QSI require negative observations system
behaviour. Unlike systems, use dimensional analysis
appear mechanism incorportating constraints easily within program.
importance dimensional analysis recognised though: authors suggest
central search procedure.
Thus, identification quantitative models longer history machine
learning, learning qualitative models subject notable research efforts.
view, MISQ (the version implemented within Forte) QSI probably represent
state-of-the-art area. primary shortcomings these:
866

fiQualitative System Identification

apparent description experimental evaluation MISQ whether
able handle imperfect data (the correctness theorem presented
applies complete, noise-free data).
MISQ seeks constrained model consistent data. Often,
exactly opposite sought (that is, want parsiomonius model).
QSI deals qualitative data appear include easy mechanism incorporation new constraints guide search.

7. General Discussion
paper presented method learning qualitative models dynamic systems
time-series data (both qualitative quantitative). section discuss
general findings limitations, well suggesting number directions developing
research theme.
7.1 Computational Limitations
major limitation ILP-QSI system identifying glycolysis time taken
(several months Beowulf cluster) reduce models 27,000 possible ones
generated using chemoinformatic constraints, single correct one using qualitative
state constraints. would preferable process faster, important
note identifying system 10 reactions 15 metabolites scratch
extremely hard identification task. doubt human could achieve it,
believe would challenge system identification methods aware of.
difficult compare system identification methods believe need
competitions run KDD compare methods.
computational time identification dominated time taken test
particular model produce certain observed states: examining 27,000 models
unusual machine learning program, unusual program take hours
test individual examples covered. slow speed identification method
therefore problem normally considered learning method (i.e.
search space possible models done), rather, intrinsic complex
relationship model states defines. cover-test method is, worst
case, exponential maximum size model. Note lack efficient, i.e.
polynomial algorithm, determine cover using qualitative states.
believe inherent difficulty task applies quantitative qualitative
models. areas mathematics moving discrete real domain
simplify problems - basis much power analysis. However,
currently little evidence case system identification, quantitative
models would seem aggravate problem. cover tests essentially deductions:
set axioms rules (computer program/model) produce particular logical sentence
(observed state); general non-computable. However, real scientific systems,
bounded space time, non-computability problem, however
expect system identification methods struggle task (Sadot, Fisher, Barak,
Admanit, Stern, Hubbard, & Harel, 2008).
867

fiCoghill, Srinivasan, & King

7.2 Kernel Subsets
presentation results experimentation clear certain subsets
states (termed kernel subsets) guarantee target model learned.
analysis kernel subsets state sets, hypothesise kernel sets reflect
qualitative structure system interest.
coupled system, order learn structure system high degree
precision, data used come tests yielding qualitatively different behaviors:
i.e. behaviors would appear distinct branches envisionment graph. However,
hypothesis provides necessary, sufficient, condition learning
identify states branch suitable starting points experiment.
example consider coupled tanks system. One could select states 9 11;
different branches yet form kernel subset. hand,
noted presenting results system key states kernel subsets
states 7 8. states different branches represent critical points
first derivative state variables system. indicates importance
states definition system.
test set state variables critical points
test could run short time correct model structure identified. However,
probably impossible practice set test; especially situation
structure system completely unknown. alternative set multiple tests
state variables set extrema: initial conditions states
envisionment eventually passed through. However still may difficult
set tests, could take long time complete. two scenarios form
ends spectrum within practical experimental setting lie.
identification best strategies important area research present
work clearly relevant.
hand, cascaded systems kernel sets capture asymmetry
structure. extrema critical points play important role;
case subordinate fact ILP-QSI automatically decomposes system
constituent parts learning. fact points important conclusion learning
larger scale complex systems; namely learning facilitated by, possible,
decomposing system cascaded subsystems.
7.3 Future Work
validated ILP-QSI data derived real biological systems, next step
explore successful modelling real experimental data. would relatively
straightforward obtain data water tanks springs, would much
interesting work real biological data. work successful likely
quantitative qualitative conversion process need improved. Although
focus work here, developing rigorous approach would crucial using
ILP-QSI laboratory setting (Narasimhan, Mosterman, & Biswas, 1998).
done much easier use real experimental data analysis ILP-QSI.
Specifically, improvements required ability extract qualitative states
868

fiQualitative System Identification

passed numerical simulation, whilst minimizing noise. Nevertheless,
direct limitation ILP-QSI method.
following possibilities would benefit investigation:
QR representation used could changed QSIM detailed
flexible one Morven (Coghill & Chantler, 1994; Coghill, 1996).
hypotheses presented kernel subsets, formed
states others, need confirmed analyzed further.
ability map explore features model space would great
use planning enhancements and, alongside kernel subsets, help give
understanding exactly states allow reliable learning.
Large scale complex systems generally identified piece piece. results
cascaded tanks experiments indicate circumstances may
easily facilitatied. investigation warranted.
alternative methods described paper, incremental approach
identifies subsystems complete system interesting avenue investigation
(Srinivasan & King, 2008).

8. Summary Conclusions
paper presented novel system, named ILP-QSI, learns qualitative
models dynamic processes. system stands squarely strand research
integrates Machine Learning Qualitative Reasoning extends work area
following ways:
ILP-QSI algorithm extends work; branch bound algorithm
makes use background knowledge (at least) three kinds order focus guide
search well posed models dynamic processes.
Syntactic Constraints: model size prespecified; models must complete
determinate; must proliferate instances qualitative relations.
Semantic Constraints: model must adequately explain data; must contain
relations redundant contradictory; relations model must
respect dimensional constraints.
System Theoretic Constraints: model singular disjoint; endogenous variables must appear least two relations; model
causally ordered.
thoroughly tested system number well known dynamic processes.
enabled us ascertain ILP-QSI capable learning variety
conditions noisy noise free data. testing allowed us identify
conditions possible learn appropriate model dynamic system.
conclusions aspect work are:
869

fiCoghill, Srinivasan, & King

Learning precision related richness (or sparcity) noisiness data
learning performed.
target model precisely learnt data used kernel subset.
kernels made states different branches envisionment graph.
system critical points play important role identifying model structure.
spectrum possibilities regard setting suitable experiments garner data learn models physical biological systems
interest.
Cascaded parts systems help identify suitable points decomposition model
learning.
ILP-QSI designed learn qualitative structural model qualitative data,
sometimes case original measurements quantitative (albeit sparse
possibly noisy). order ascertain ILP-QSI would cope qualitative data generated quantitative measurements carried proof-of-concept set experiments
physical process models previously utilised. results
keeping results obtained qualitative experiments. adds weight
conclusions regarding viability approach learning structural models
dynamic systems adverse conditions.
Finally, order test scalability method, applied ILP-QSI large
scale metabolic pathway: glycolysis. case search space deemed large
attempt learning QSIM primitives alone. However, knowledge domain enabled us
group primitives set Metabolic Components models metabolic
pathways easily constructed. Also, part research Logical graph
based models used represent background domain knowledge. Utilising these,
able identify 35 possible structures glycolysis pathway (out possible
27,254); target model fewest cycles (though know
general phenomenon) minimally covered data generated reverse pathway
glucogenesis.
overall conclusions work qualitative reasoning methods combined
machine learning (specifically ILP) successfully learn qualitative structural models
systems high complexity number adverse circumstances. However, work
reported herein constitutes step line research recently begun; and,
interesting lines research, raises turn interesting questions need
addressed.
Acknowledgments
work supported part BBSRC/EPSRC grant BIO10479. authors would
thank Stephen Oliver Douglas Kell helpful discussions biological
aspects paper. would thank Simon Garrett many interesting
fruitful interactions.
870

fiQualitative System Identification

Appendix A. Derivation Solution Space Tanks Systems
appendix provide summary whence solution spaces tanks systems
utilised project constructed. details regarding envisionments
associated solution spaces may found work Coghill et al. (1992) Coghill
(2003).
order facilitate analysis need make use quantitative version
system models. ease exposition make additional assumption
systems linear.10
A.1 U-tube
quantitative model u-tube system
dh1
= k(h1 h2 )
dt
dh2
= k(h2 h1 )
dt
inspection two equations easy see (ignoring trivial case
k = 0) derivatives two equations zero when:
h1 = h 2

(6)

is:
dh2
dh1
=
=0
dt
dt
accounts relationship, depicted Fig. 18, h 1 h2
derivatives zero. envisionment table u-tube (Table 1 Section 2.2)
see state zero derivatives state 5; hence represented line.
h1 = h 2

A.2 Coupled Tanks
quantitative model coupled tanks system
dh1
= qi k1 (h2 h1 )
dt
dh2
= k1 (h2 h1 ) k2 h2
dt


dh1
dt

(7)
(8)

= 0 Equation 7 rewritten as:
0 = qi k1 (h2 h1 )
= q k 1 h2 k 1 h1

10. fact types non-linearity normally associated systems kind solution spaces
qualitatively identical described here, although analysis required construct
slightly complicated.

871

fiCoghill, Srinivasan, & King

re-arranged give
h2 =

qi
h1
k1

qi zero reduces
h2 = h 1


dh2
dt

(9)

= 0 Equation 8 rewritten as:
0 = k1 (h2 h1 ) k2 h2
= k 1 h1 k 1 h1 k 2 h2
= (k1 k2 )h2 k1 h1


(k1 k2 )h2 = k1 h1
Re-arranging gives
h2 =

k1
h1
(k1 k2 )

(10)

accounts relations h 1 h2 depicted solution space Fig.
18.
A.3 Cascaded Tanks
quantitative model cascaded tanks system is:



dh1
dt

dh1
= q k 1 h1
dt

(11)

dh2
= k 1 h1 k 2 h2
dt

(12)

= 0 Equation 11 re-arranged as:
qi = k 1 h1


h1 =


dh2
dt

qi
k1

= 0 Equation 12 rewritten as:
k2 h2 = k 1 h1


872

fiQualitative System Identification

h2 =

k1
h1
k2

accounts relations h 1 h2 depicted solution space Fig.
27.

h2

h'1 = 0

3

7

11

1

h'2 = 0

4
12

8
5
9

13

h1

0

6

10

2

Figure 27: solution space cascaded tanks system.

References
Arkin, A., Shen, P., & Ross, J. (1997). test case correlation metric construction
reaction pathway measurements. Science, 277, 12751279.
Asgharbeygi, N., Bay, S., Langley, P., & Arrigo, K. (2006). Inductive revision quantitative
process models. Ecological modelling, 194, 7079.
Bergadano, F., & Gunetti, D. (1996). Inductive Logic Programming: Machine Learning
Software Engineering. MIT Press.
Bhaskhar, R., & Nigam, A. (1990). Qualitative physics using dimensional analysis. Artificial
Intelligence, 45, 73111.
Blackman, R. B., & Tukey, J. W. (1958). Measurement Power Spectra. John Wiley
Sons, New York.
Bradley, E., Easley, M., & Stolle, R. (2000). Reasoning nonlinear system identification. Tech. rep. CU-CS-894-99, University Colorado.
Bratko, I., Mozetic, I., & Lavrac, N. (1989). KARDIO: Study Deep Qualitative
Knowledge Expert Systems. MIT Press, Cambridge, Massachusetts.
873

fiCoghill, Srinivasan, & King

Bratko, I., Muggleton, S., & Varsek, A. (1992). Learning qualitative models dynamic
systems. Muggleton, S. (Ed.), Inductive Logic Programming, pp. 437452. Academic
Press.
Bridewell, W., Sandy, J., & Langley, P. (2004). interactive environment modeling
discovery scientific knowledge.. Tech. rep., Institute Study Learning
Expertise, Palo Alto, CA.
Camacho, R. (2000). Inducing Models Human Control Skills using Machine Learning
Algorithms. Ph.D. thesis, University Porto.
Coghill, G. M. (1996). Mycroft: Framework Constraint-Based Fuzzy Qualitative Reasoning. Ph.D. thesis, Heriot-Watt University.
Coghill, G. M. (2003). Fuzzy envisionment. Proc. Third International Workshop
Hybrid Methods Adaptive Systems, Oulu, Finland.
Coghill, G. M., Asbury, A. J., van Rijsbergen, C. J., & Gray, W. M. (1992). application vector envisionment compartmental systems.. Proceedings first
international conference Intelligent Systems Engineering, pp. 123128, Edinburgh,
Scotland.
Coghill, G. M., & Chantler, M. J. (1994). Mycroft: framework qualitative reasoning. Proceedings Second International Conference Intelligent Systems
Engineering, pp. 4955, Hamburg, Germany.
Coghill, G. M., Garret, S. M., & King, R. D. (2004). Learning qualitative models
metabolic systems. Proceedings European Conference Artificial Intelligence ECAI-04, Valencia, Spain.
Coghill, G. M., & Shen, Q. (2001). specification multiple models diagnosis
dynamic systems. AI Communications, 14 (2), 93104.
Coiera, E. W. (1989a). Generating qualitative models example behaviours. Tech. rep.
8901, University New South Wales, Deptartment Computer Science.
Coiera, E. W. (1989b). Learning qualitative models example behaviours. Proc.
Third Workshop Qualitative Physics, Stanford.
Collins, J. (1968). regression analysis program incorporating heuristic term selection.
Dale, E., & Michie, D. (Eds.), Machine Intelligence 2. Oliver Boyd.
Dzeroski, S. (1992). Learning qualitative models inductive logic programming. Informatica, 16 (4), 3041.
Dzeroski, S., & Todorovski, L. (1993). Discovering dynamics. International Conference
Machine Learning, pp. 97103.
Dzeroski, S., & Todorovski, L. (1995). Discovering dynamics: inductive logic programming machine discovery. J. Intell. Information Syst., 4, 89108.
Falkenhainer, B., & Michalski, R. S. (1986). Integrating quantitative qualitative discovery: abacus system. Machine Learning, 1 (4), 367401.
Forbus, K. D. (1984). Qualitative process theory. Artificial Intelligence, 24, 169204.
874

fiQualitative System Identification

Garrett, S. M., Coghill, G. M., Srinivasan, A., & King, R. D. (2007). Learning qualitative
models physical biological systems. Dzeroski, S., & Todorovski, L. (Eds.),
Computational discovery communicable knowledge, pp. 248272. Springer.
Gawthrop, P. J., & Smith, L. P. S. (1996). Metamodelling: Bond Graphs Dynamic
Systems. Prentice Hall, Hemel Hempstead, Herts, England.
Hau, D. T., & Coiera, E. W. (1993). Learning qualitative models dynamic systems.
Machine Learning, 26, 177211.
Healey, M. (1975). Principles Automatic Control. Hodder Stoughton.
Iwasaki, Y., & Simon, H. A. (1986). Causality device behavior. Artificial Intelligence,
29, 332. See De Kleer Browns rebuttal Iwasaki Simons reply
rebuttal volume journal.
King, R. D., Garrett, S. M., & Coghill, G. M. (2005). use qualitative reasoning
simulate identify metabolic pathways.. Bioinformatics, 21 (9), 2017 2026.
Kokar, M. M. (1985). Coper: methodology learning invariant functional descriptions.
Mitchell, T., Carbonell, J., & Michalski, R. (Eds.), Machine Learning: Guide
Current Research, pp. 151154. Kluwer Academic Press.
Koza, J. R., Mydlowec, W., Lanza, G., Yu, J., & Keane, M. A. (2000). Reverse engineering
automatic synthesis metabolic pathways observed data using genetic
programming.. Tech. rep. SMI-2000-0851, Stanford University.
Kraan, I. C., Richards, B. L., & Kuipers, B. J. (1991). Automatic abduction qualitative
models. Proceedings Qualitative Reasoning 1991 (QR91).
Kuipers, B. (1994). Qualitative Reasoning. MIT Press.
Langley, P. (1981). Data-driven discovery physical laws. Cognitive Science, 5, 3154.
Langley, P., George, D., Bay, S., & Saito, K. (2003). Robust induction process models
time series data.. Proc. twentieth International Conference Machine Learning,
pp. 432439, Washington, DC. AAAI Press.
Langley, P., & Zytkow, J. (1989). Data-driven approaches empirical discovery. Artificial
Intelligence, 40, 283312.
McCreath, E. (1999). Induction first order logic noisy training examples fixed
example set sizes. Ph.D. thesis, University New South Wales.
Mitchell, T. M., Keller, R. M., & Kedar-Cabelli, S. (1986). Explanation-based generalization: unifying view. Machine Learning, 1, 4780.
Mozetic, I. (1987). Learning qualitative models. Bratko, I., & Lavrac, N. (Eds.),
Progress Machine Learning: Proceedings EWSL 87: 2nd European Working Session Learning, pp. 201217. Sigma Press.
Muggleton, S. (1995). Inverse Entailment Progol. New Gen. Comput., 13, 245286.
Muggleton, S. (1996). Learning positive data. Lecture Notes AI, 1314, 358376.
Muggleton, S., & Feng, C. (1990). Efficient induction logic programs. Proc.
First Conf. Algorithmic Learning Theory. OHMSHA, Tokyo.
875

fiCoghill, Srinivasan, & King

Muggleton, S., & Raedt, L. D. (1994). Inductive logic programming: Theory methods.
Journal Logic Programming, 19,20, 629679.
Narasimhan, S., Mosterman, P., & Biswas, G. (1998). systematic analysis measurement selection algorithms fault isolation dynamic systems. Proc. Ninth Intl.
Workshop Principles Diagnosis (DX-98), pp. 94101, Cape Cod, MA.
Nordhausen, B., & Langley, P. (1993). integrated framework empirical discovery.
Machine Learning, 12, 1747.
Papadimitriou, C., & Steiglitz, K. (1982). Combinatorial Optimisation. Prentice-Hall,
Edgewood-Cliffs, NJ.
Plotkin, G. (1971). Automatic Methods Inductive Inference. Ph.D. thesis, Edinburgh
University.
Reiser, P., King, R., Kell, D., Muggleton, S., Bryant, C., & Oliver, S. (2001). Developing
logical model yeast metabolism. Electronic Transactions Artificial Intelligence,
5, 233244.
Richards, B. L., Kraan, I., & Kuipers, B. J. (1992). Automatic abduction qualitative
models. Proc. Tenth National Conference Artificial Intelligence (AAAI92), pp. 723728. MIT Press.
Richards, B. L., & Mooney, R. J. (1995). Automated refinement first-order horn-clause
domain theories. Machine Learning, 19 (2), 95131.
Riguzzi, F. (2005). Two results regarding refinement operators. Kramer, S., & Pfahringer,
B. (Eds.), Late Breaking Papers, 15th International Workshop Inductive Logic
Programming (ILP05), August 1013, 2005, pp. 5358, Munich, Germany.
Sadot, A., Fisher, J., Barak, D., Admanit, Y., Stern, M. J., Hubbard, E. J. A., & Harel, D.
(2008). Towards verified biological models.. IEEE/ACM Trans. Comput. Biology
Bioinformatics., 5(2), 112.
Say, A. C. C., & Kuru, S. (1996). Qualitative system identification: deriving structure
behavior. Artificial Intelligence, 83, 75141.
Shoup, T. E. (1979). Practical Guide Computer Methods Engineers. Prentice-Hall
Inc., Englewood Cliffs, N. J. 07632.
Soderstrom, T., & Stoica, P. (1989). System Identification. Prentice Hall.
Srinivasan, A. (1999). Aleph Manual. Available http://www.comlab.ox.ac.uk/oucl/
research/areas/machlearn/Aleph/.
Srinivasan, A., & King, R. D. (2008). Incremental identification qualitative models
biological systems using inductive logic programming. J. Machine Learning Research
appear.
Todorovski, L. (2003). Using domain knowledge automated modeling dynamic systems
equation discovery. Ph.D. thesis, Faculty Electrical Engineering Computer
Science, University Ljubljana, Slovenia.
Todorovski, L., Srinivasan, A., Whiteley, J., & Gavaghan, D. (2000). Discovering structure partial differential equations example behavior. Proceedings
876

fiQualitative System Identification

Seventeenth International Conference Machine Learning, pp. 991998, San Francisco.
Todorovski, L., & Dzeroski, S. (1997). Declarative bias equation discovery. Proc. 14th
International Conference Machine Learning, pp. 376384. Morgan Kaufmann.
Valdes-Perez, R. E. (1994). Heuristics systematic elucidation reaction pathways.. J.
Chem. Informat. Comput. Sci., 34, 976983.
Voit, E. O., & Radivoyevitch, T. (2000). Biochemical systems analysis genome-wide
expression data. Bioinformatics, 16 (11), 10231037.
Warren, P., Coghill, G. M., & Johnstone, A. (2004). Top botton development
fuzzy rule-based diagnostic system. Proc. Fourth International Workshop
Hybrid Methods Adaptive Systems, Aachen, Germany.

877


