Journal Artificial Intelligence Research 32 (2008) 1-36

Submitted 05/07; published 5/08

Enhancing Cooperative Search Concurrent Interactions
MANISTER @ BIU .013. NET. IL

Efrat Manisterski
Department Computer Science,
Bar-Ilan University, Ramat Gan, 52900 Israel

SARNED @ CS . BIU . AC . IL

David Sarne
Department Computer Science,
Bar-Ilan University, Ramat Gan, 52900 Israel

SARIT @ CS . BIU . AC . IL

Sarit Kraus
Department Computer Science,
Bar-Ilan University, Ramat Gan, 52900 Israel

Abstract
paper show taking advantage autonomous agents capability maintain
parallel interactions others, incorporating cooperative economic search model
results new search strategy outperforms current strategies use. framework
analysis use electronic marketplace, buyer agents incentive search
cooperatively. new search technique quite intuitive, however analysis process
extracting optimal search strategy associated several significant complexities.
difficulties derived mainly unbounded search space simultaneous dual affects
decisions taken along search. provide comprehensive analysis model, highlighting,
demonstrating proving important characteristics optimal search strategy. Consequently,
manage come efficient modular algorithm extracting optimal cooperative
search strategy given environment. computational based comparative illustration
system performance using new search technique versus traditional methods given, emphasizing main differences optimal strategys structure advantage using
proposed model.

1. Introduction
Coalition formation well recognized key process multi-agent systems, mostly desirable
environments group agents perform task efficiently single agent
(Lermann & Shehory, 2000). recent years many coalition formation models suggested,
various domains (Talukdar, Baerentzen, Gove, & de Souza, 1998; Dias, 2004), particularly
electronic commerce (Tsvetovat, Sycara, Chen, & Ying, 2000; Yamamoto & Sycara, 2001; Sarne
& Kraus, 2005). latter context, common coalition coalition buyers, derived
mainly potential obtaining volume discounts (Tsvetovat et al.; Sarne & Kraus, 2003)
ability search cooperatively market opportunities efficient manner (Sarne &
Kraus, 2005).

c
2008
AI Access Foundation. rights reserved.

fiM ANISTERSKI , ARNE , & K RAUS

cooperative economic search1 incentive derives principally existence search
costs found MAS. costs reflect resources (not necessarily monetary) need
invested consumed searching opportunities environment (Sarne & Kraus, 2005)
(e.g., searching opportunity buy product context electronic marketplace).
scenario search costs common MAS agent needs (for decision
making process) immediate information concerning market opportunities. Given richness
opportunities dynamic open nature environments, central mechanisms usually incapable supplying information level completeness accuracy required
agent, certainly without cost. Thus agent needs spend resources
search related activities. Despite reduction magnitude search costs electronic commerce era, continuous growth number retailers virtual stores
Internet, followed phenomenal increase number opportunities available, makes
overall search cost important parameter affecting buyers search strategy (Choi & Liu, 2000;
Kephart & Greenwald, 2002; Sarne & Kraus, 2005; Bakos, 1997).
context, cooperative search offers advantage sharing, reusing re-allocating
opportunities among coalition members (Sarne & Kraus, 2005). example, using cooperative
search agents exploit opportunities would discarded otherwise
agents would conducted alternative separate search. Nevertheless, process forming
maintaining coalition induces overhead, derived mainly communication
coordination activities (Sarne & Kraus, 2003), thus coalition set search strategy
cost/effective manner.
classic example traditional markets procurement management officer
corporation. Instead individual cooperation spend time resources
locating specific requested supplies, task delegated procurement management
officer. Here, addition price discounts obtained aggregated demands identical items,
procurement management officer becomes highly updated different offers specific
supplies available different merchants markets. result cost locating
best deal request becomes significantly smaller (in comparison equivalent search
conducted individuals).
basic concepts coalition manage cooperative search, including
analysis computational means extracting optimal search strategies, given Sarne
Kraus (2005). Nevertheless, assumption used model constructing coalitions
strategy coalition interacts one seller agent time. assumption ignores
inherent strength autonomous agents, capability efficiently interact
several agents parallel. capability derives primarily improved communication capabilities ability process enormous amount information short time
compared people. paper, take advantage capability incorporate
cooperative economic search model, supplying comprehensive analysis resulting parallel
cooperative search variant. show throughout paper, parallel model weakly dominates
existing sequential cooperative search model described Sarne Kraus: potential
significantly improving searchers performance various environments, always guarantees reaching least performance existing cooperative search model. particular,
parallel interaction preferable whenever agents search cost non-linear combines fixed
1. opposed classical AI search (Hart, Nilsson, & Raphael, 1968) agent seeks sequence actions
bring initial state desired goal state.

2

fiE NHANCING C OOPERATIVE EARCH



C ONCURRENT NTERACTIONS

components (e.g. operational costs), depending number interactions maintained (e.g. advantage size). cases, adoption parallel technique coalition suggests
reduction average cost per interaction seller agents.
Moreover, improvement achieved using parallel technique increases finite decision horizon (i.e., whenever coalition deadline finishing search). addition
advantage reducing average cost per interaction, finite horizon settings coalition
benefits fact increase intensity search and, thus, scan opportunities (in comparison sequential search model described Sarne & Kraus, 2005) prior
reaching deadline.
integration parallel interactions technique single agents search process
quite intuitive, finding optimal (overall utility maximization) strategy cooperative search
case trivial all. major difficulty derives fact different coalition members
may heterogeneous multi-attribute utility functions. Therefore, extracting value encapsulated future streams opportunities complex. overcome difficulty present
algorithm extracting coalition strategy. algorithm facilitates calculation process
coalition strategy polynomial number parallel interactions. significant improvement brute-force algorithm exponential number parallel
interactions.
Similar model introduced Sarne Kraus (2005), apply multi-attribute utility
theory (MAUT) (Keeney & Raiffa, 1976) analyze preferences multiple attributes agent
based search mechanism. enables set preferences represented numerical utility
function. consider agents heterogeneous, i.e. utility function.
model general, though emphasize several specific implementation aspects relating B2C
market (businesses selling products services end-user consumers), sellers supply
almost demanded volume, C2C market (transactions consumers),
sellers offer single items sale. Based proposed analysis, coalition calculate
optimal strategy given utility functions coalition members specific environment
operates.
Three basic stages common coalition formation models (Sandholm, Larson, Andersson, Shehory, & Tohme, 1999; Tsvetovat et al., 2000): coalition structure generation (where
agents form/join coalition), executing coalition task, dividing generated value among
coalition members. Among three stages focus finding optimal search strategy
coalition, given structure opportunity distribution. suggested Sarne
Kraus (2005), coalition operates environment alongside many coalitions differing
size, members utility functions products seeking. coalitions,
well different individual utility functions play important role studying stability
coalition issue revealing true utility function (truth telling). analysis
important issues based ability properly derive coalitions utility given specific
self structure environment within operates. 2 paper aims supply functionality, laying foundation enabling research many important aspects coalition
formation given context cooperative search (truth telling, stability, payoff division,
etc.).
2. utility considered agents reported, necessarily true, utility function, since goal extract
optimal strategy given input.

3

fiM ANISTERSKI , ARNE , & K RAUS

main contributions work fourfold: First, formally model analyze
parallel cooperative search problem agents operating costly environment. parallel cooperative search model general search model applied various domains addition
electronic marketplace used framework work. Second, show
many environments parallel cooperative search outperforms previous search strategies (either
agent searches using cooperative sequential search). Furthermore,
draw attention scenarios sequential cooperative search proven non-beneficial,
however parallel cooperative search favorable technique. Third, supply algorithm
facilitates calculation coalitions optimal strategy, significantly reduces complexities associated attempt extract strategy appropriate set equations. Finally
provide comprehensive analysis parallel model finite decision horizon. draw
attention significant improvement achieved integrating parallel technique
cooperative search finite decision horizon.
rest paper organized follows. Section 2 reviews related work, emphasizing
uniqueness proposed parallel cooperative search model. model description
underlying assumptions given section 3. section 4, formally describe performance
coalition using parallel cooperative search function strategy used
present complexities associated extracting optimal search strategy. exploring
unique characteristics coalitions optimal strategy using cooperative parallel search
manage overcome computational complexity. process described section 5. Consequently, present efficient algorithm extracting optimal cooperative search strategy.
interesting properties new search model, regard market takes
place, illustrated section 6. section 7, finite decision horizon variant model
discussed. parallel cooperative search performance advantages current search
models, infinite finite decision horizons, illustrated section 8. Finally, conclude
discussion suggested future research directions section 9.

2. Related Work
many scenarios autonomous agents multi-agent environments may cooperate order perform tasks. need cooperation may arise either agent incapable completing
task operating group improve overall performance (Breban & Vassileva, 2001; Lermann & Shehory, 2000; Tsvetovat et al., 2000). Group based cooperative behavior
found various domains, solving complex optimization problems (Talukdar et al.,
1998), military rescue domains (Dias, 2004), e-business applications (Tsvetovat et al., 2000;
Yamamoto & Sycara, 2001) many more. recognition advantages encapsulated
teamwork cooperative behaviors, main driving force many coalition formation models
area cooperative game theory MAS (Lermann & Shehory, 2000; Li, Rajan, Chawla, &
Sycara, 2003; Shehory & Kraus, 1998). Many examples extensive literature coalition formation found books journals (Kahan & Rapoport, 1984). electronic
market domain, authors focus coalitions formed obtain volume discounts Tsvetovat
et al., Yamamoto Sycara. Additional coalition formation models electronic marketplace
consider extensions transaction-oriented coalitions long-term ones Breban Vassileva,
large-scale electronic markets Lermann Shehory.

4

fiE NHANCING C OOPERATIVE EARCH



C ONCURRENT NTERACTIONS

Traditionally, majority research effort focused issues concerning optimal
division agents disjoint exhaustive coalitions (Sandholm et al., 1999; Yamamoto & Sycara,
2001), division coalition payoffs Yamamoto Sycara enforcement methods interaction
protocols. authors considered coalitions problem determining strategy
electronic commerce domain, coalition formed (Ito, Ochi, & Shintani, 2002).
Nevertheless, single exception (Sarne & Kraus, 2005), none proposed models
considered coalition search costly environment, particular none (including
Sarne & Kraus, 2005) made use capabilities maintain parallel interactions.
problem searcher operating costly environment, seeking maximize long term
utility addressed classical search theory (Lippman & McCall, 1976; McMillan & Rothschild,
1994, references therein). three main search models found literature.
first search model Fixed Sample Size (FSS) model, introduced Stigler (1961).
model searcher first chooses sample size draws single sample observations made simultaneously. second model Single Agent Sequential Search (SASS)
strategy (Rothschild, 1974; Lippman McCall). model searcher draws exactly one observation time. Based value observations drawn till time, searcher decides
whether draw another observation. decision depends upon observed. Attempts
adopt sequential search model agent-based electronic trading environments associated
search costs suggested Choi Liu (2000), Kephart Greenwald (2002), though
main focus establishing appropriate characteristics environment search strategy
rather computational aspects extracting it. last search method, Single Agent Parallel Search (SAPS) (Benhabib & Bull, 1983; Gal, Landsberger, & Levykson, 1981; Morgan, 1983;
Morgan & Manning, 1985), encompasses search models special cases. model
searcher may choose number samples taken sample size period.
latter method, outperforms two, fact single agents equivalent parallel
cooperative search model considered paper. Nevertheless, search theory mainly focused
single searcher, looking single opportunity, either one sided (taking environments
reaction search strategy used agent static) two sided (as matching model,
analyzed equilibrium perspective) model. analysis cooperative search lacking.
This, in-spite fact cooperative search proven (Sarne & Kraus, 2005)
inherently different single agents search relation complexity, strategy structure
solution methodology.
Several extensions economic search theory suggested case consumer
searching multiple different commodities, facing imperfect information prices (Gatti,
1999; Carlson & McAfee, 1984; Burdett & Malueg, 1981). Here, find different variants
consumer visits one stores order minimize total expenditure. Nevertheless, attempt adjust proposed methods suggested models support parallel
cooperative search process results solution complexity exponential number parallel interactions. contrast algorithm extracting optimal search strategy polynomial
number parallel interactions.

3. Parallel Cooperative Search Model
base model description formulation definitions given Sarne Kraus (2005)
extend reflect agents parallel search capabilities. consider electronic mar5

fiM ANISTERSKI , ARNE , & K RAUS

ketplace numerous buyer seller agents found. agent interested buying
offering sell well defined product. product offered many different seller agents
various terms policies (including price). assume buyer agents ignorant
individual seller agents offers, acquainted overall distribution opportunities
(where opportunity defined option buy product specific terms policies)
marketplace.
Assuming central mechanisms mediators supply agents full
immediate information concerning current market opportunities, agent needs search
appropriate opportunities buy requested product. Throughout search buyer agents
locate seller agents learn offers interacting them. buyer agent evaluates
opportunities using multi-attribute utility function. Buyer agents may heterogeneous
preferences thus utility given opportunity differs according evaluating buyer
agent.
basic form, buyer agent interacts several sellers parallel stage
search thus learns new set opportunities. Based agents evaluation utility
gained opportunity set, agent makes decision whether exploit
opportunities encountered throughout search (i.e. buy sellers)
resume search similar method. decision resume search always accompanied
number parallel interactions conducted next.
search activity assumed costly (Choi & Liu, 2000; Kephart & Greenwald, 2002;
Sarne & Kraus, 2005; Bakos, 1997). search stage buyer agent locates, interacts
evaluates seller agents, process induces search cost. cost function number
parallel interactions initiated maintained agent. search cost structure principally
parameter markets liquidity volatility, thus assumed shared buyer
agents operating specific marketplace. Recognizing benefits cooperative search,
buyer agents, interested similar products interchangeable products, may form coalitions (Sarne
& Kraus, 2005). various methods coalition members coordinate
cooperative search (e.g. assign representative agent search behalf coalition simply
take turns searching), deriving different search cost overhead structure. coalitions search
costs assumed increase function number parallel interactions forms
number buyer agents coalition. 3 assume buyer agents utility given
opportunity may interpreted monetary terms. Thus utilities additive total
search utility obtained subtracting search cost process induces
value.
part search process, coalition needs set strategy determining, given set
known opportunities, whether terminate resume search. latter case, coalition
needs determine number parallel interactions used next search round.
optimal strategy one maximizing expected total search utility (opportunities utility
minus search costs). discussed detail cooperative search model (Sarne & Kraus, 2005),
given option side-payments overall utility maximization strategy taken coalition
always preferred one coalition members (i.e. conflict interests), regardless
pre-set coalitions payoff division protocol. Given coalitions goal maximizing overall coalition utility, decision influenced payoff division protocol, coalition
3. reason correlating coalitions search cost number coalition members mainly associated
coordination overhead (Sarne & Kraus, 2005).

6

fiE NHANCING C OOPERATIVE EARCH



C ONCURRENT NTERACTIONS

stability considerations, rather influences two factors (Sarne & Kraus, 2005).
agents pre-determined portion coalitions utility increase absolute value along
increase net coalition utility, thus overall utility maximization strategy preferred
strategy agents every stage search.

4. Parallel Cooperative Search (PCS) Analysis
following section formally defines search environment coalitions search strategy.
convenience, notations given, meanings, summarized table end
paper.
Let B = (B1 , B2 , ..., Bk ) set attributes defining potentially available
opportunities market, attribute B assigned value finite set
(bimin , ..., bimax ). opportunitys type defined vector ~o = (b1 , b2 , ...bk ), assigning value
bi specific attribute Bi .4 use p denote space potential opportunity types
coalition may encounter. opportunity types distribution marketplace denoted
probability function p(~o), ~oO p p(~o) = 1. consider coalition = {a 1 , a2 , ..., a|A| } general
size, j j th buyer agent coalition. buyer agent, j , evaluates opportunities
using utility function U j : p R, U j (~o) agents utility opportunity type ~o.
denote search cost associated coalition n agents maintaining w simultaneous
interactions seller agents search round function c(w, n).
Let collection possible sets opportunities environment
agents reside. Given set known opportunities known coalition needs determine
strategy (whether terminate/resume search number parallel interactions
later case). Similar analysis suggested Sequential Cooperative Search (SCS) model
(Sarne & Kraus, 2005) reduce large number world states coalition
be, adopting representation states sets effective known opportunities.
purpose consider function alloc : np maps given set opportunities
coalition members (i.e. allocation) way aggregated agents utility using
allocation maximized.5 B2C markets opportunity may allocated
one agent, C2C markets opportunity restricted one agent. Given coalition

/ represent allocation resulting applying
A, use alloc() = (~y1 , ...
yn ), ~yi ( {0})
function alloc set , ~y denotes opportunity associated agent (yi = 0/
denotes opportunity allocated agent ).
computation method used function alloc market-dependent. B2C markets
function assigns agent opportunity maximizes utility, ~y j = arg max~y U j (~y), j =
1, ..., n, C2C markets alloc computed solving maximum weighted matching
bipartite graph (Avis & Lai, 1988). Specifically set opportunities found C2C
market construct graph G = (V1 ,V2 , E), vertex V1 corresponds agent
vertex V2 corresponds opportunity ~o . edge connects agent j V1
opportunity ~o V2 (each member two groups edges connecting members
4. Notice ~o noted vector since assigns specific value different attributes, terms
conditions associated specific opportunity. example, specific opportunity buy calculator
represented vector ~o = (scienti f ic, 20$, small display, pocket, 1Y R warranty).
5. one allocation maximizes overall coalition utility function alloc chooses one
according pre-defined order.

7

fiM ANISTERSKI , ARNE , & K RAUS

group). weight edge utility agent j opportunity ~o, U j (~o).
alloc() = (~y1 , .., y~n ), {(a1 , y~1 ), .., (an , y~n )} maximum weighted matching G .
illustrate computation used function alloc, use following example:
Example 1. Consider following environment:
Environment 1. three agents, 1 , a2 a3 , searching product (e.g., memory chip)
characterized two attributes, B 1 (e.g., quality) B2 (e.g., store rating). attribute
either value 1 2, equal probability 1/2. means four possible
opportunities ~o1 = (1, 1) (both attributes values equal 1), ~o 2 = (1, 2), ~o3 = (2, 1), ~o4 =
(2, 2). utility function agents 1 , a2 a3 U1 (~o) = 9B1 + B2 , U2 (~o) = 4B1 + 5B2 ,
U3 (~o) = B1 + 10B2 , respectively. Table 1 summarizes environments setting.
Opportunity
~o1
~o2
~o3
~o4

(Attribute1,
Attribute2)
(1,1)
(1,2)
(2,1)
(2,2)

Probability
Agent a1
10
11
19
20

1
4
1
4
1
4
1
4

Utility
Agent a2
9
14
13
18

Agent a3
11
21
12
22

Table 1: Agents utilities four opportunities Environment 1
Assume coalition already interacted 4 sellers, encountering two opportunities
type ~o1 two single opportunities types ~o 3 ~o4 . Here, set known opportunities
known = {~o1 ,~o1 ,~o3 ,~o4 }.
first calculate alloc(known ) coalition operating B2C market. market
assume sellers supply demanded volume. Therefore allocation maximizes
coalitions overall utility assigning agent opportunity maximizes utility
known . Since opportunity ~o4 maximizes utility agents, obtain alloc( known ) =
(~o4 ,~o4 ,~o4 ).
C2C markets allocation impossible, since opportunity ~o 4 assigned
one agents (each seller offers single item sale). case optimal allocation
calculated solving maximum matching problem resulting assignment alloc( known ) =
(~o3 ,~o1 ,~o4 ).
Given set known opportunities known , use function alloc consequent
allocation alloc(known ) calculate immediate utility coalition terminates search
current time point. utility, defined aggregated agents utility
agents allocated according allocation alloc( known ), denoted Vt (known ) (abbreviation
Vterminate ) calculated using:
n

Vt (known ) =

U j (~y j )

j=1

/ = 0, j.
alloc(known ) = (~y1 , ...~yn ) U j (0)
8

(1)

fiE NHANCING C OOPERATIVE EARCH



C ONCURRENT NTERACTIONS

Notice point, world state space upon coalition defines strategy
defined set opportunities known known coalition. space potentially
large. order reduce strategys space, introduce concept equivalence
different sets opportunities within context cooperative search. consider two sets
opportunities 0 , 00 equivalent (0 00 ), following hold: (a) Vt (00 ) = Vt (0 );
(b) Vt (0 ) = Vt (00 ) set opportunities coalition may encounter
future. two equivalent sets 0 , 00 , coalition indifferent knowing opportunities
0 opportunities 00 . set opportunities coalition encounter
future results similar utility, thus coalitions overall utility
cases. Moreover, since coalitions decisions merely determined overall utility
cases similar utilities reached similar probabilities, coalition uses
search strategy (either terminates search uses number parallel interactions
subsequent search stage) opportunities sets.
Notice according definition equivalent transitive relation ( 0 00 , 00
000
0 000 ). Moreover, 0 00 implies (0 ) (00 ), . Given allocation
` = (~y1 , ..., y~n ) set , use {`} denote set opportunities appear `.
Similar former cooperative search models (Sarne & Kraus, 2005; Manisterski, 2007)
following theorem holds cooperative search model (and proven similar manner).
Theorem 1. set opportunities equivalent set opportunities returned
function alloc(). Formally stated: {alloc()}.
Theorem 1 enables us reduce set known opportunities affect coalitions strategy.
immediate implication Theorem 1 coalitions strategy affected
subset known defined {alloc(known )}. Thus coalition need keep known
opportunities. reduce set known opportunities determines strategy
subset, s. Given result, define state set opportunities members
{alloc(known )}. Formally, calculate state coalition acquainted set
known known opportunities using function = state( known ) = {alloc(known )}. use
SA denote set possible states coalition A. definition significantly simplifies
analysis enables coalition calculate optimal strategy exclusively based sets
opportunities SA . following example illustrates computation state.
Example 2. Consider environment set known opportunities described Example
1. computed Example 1, allocation maximizes coalitions overall utility
B2C market alloc(known ) = (~o4 ,~o4 ,~o4 ). Thus coalitions current state B2C market
state(known ) = {~o4 }. result coalition ignore opportunities encountered
{~o1 ,~o1 ,~o3 } strategy (terminate resume search number parallel interactions
later case) strategy known = {~o4 }. Similarly, coalitions state
C2C market includes opportunities alloc( known ) thus state(known ) = {~o3 ,~o1 ,~o4 }.
coalitions transition one state another search B2C C2C
markets described directed acyclic graph (DAG). vertices graph present
potential coalition states. directed edge (s, 0 ) connects two states, s0 ,
opportunity ~o p changes current coalitions state 0 (i.e ~o, s.t state(s ~o) = s0 ).
better understand use DAG markets, use following two environments:
9

fiM ANISTERSKI , ARNE , & K RAUS

Environment 2. two agents 1 a2 searching product (e.g., computer mouse)
B2C market associated 3 types opportunities (e.g., 3 models): o~ 1 , o~2 o~3 . Table 2
summarizes environments setting.
Opportunity
~o1
~o2
~o3

Utility
Agent a1 Agent a2
5
10
10
5
20
21

Table 2: Agents utilities three opportunities Environment 2
Environment 3. two agents 1 a2 searching product (e.g., used book)
C2C market associated two types opportunities (e.g., English edition American edition):
o~1 o~2 . Table 3 summarizes environments setting.
Opportunity
~o1
~o2

Utility
Agent a1 Agent a2
5
10
10
5

Table 3: Agents utilities two opportunities Environment 3
Figure 1(a) Figure 1(b) show DAG states Environment 2 (the B2C market)
Environment 3 (the C2C market) described below, respectively. Notice possible
opportunities change coalitions current state (since opportunities increase coalitions overall utility). simplify graph mark opportunities.
notable C2C market sets include n opportunities feasible states (state
feasible belongs SA , i.e. set state() = s). hold
B2C market. example, set {~o 1 ,~o3 } feasible state since ~o3 maximizes agents
utility. Thus coalition encounters opportunity opportunities ignored.
coalition reaches state along search change state 0
sequence directed edges state state 0 . coalition conduct parallel interactions,
thus transition within single search round state 0 directly connected
state s. example, Environment 3, state = {} coalition change state
s0 = {~o1 ,~o2 } one search round (even though directed edge them).
happen coalition conducts two parallel interactions encounters
opportunities ~o1 ~o2 . transition new state suggests new state coalition
termination utility equal higher utility current state.
define strategy function x : N, x(s) = 0 agent decides terminate
search; otherwise x(s) number parallel interactions coalition maintain next,
state s. denote optimal strategy x .
define V (s, w) coalitions expected utility using w parallel interactions
state (assuming search decision taken future state 0 6= make use optimal
number parallel interactions). term V (s, 0) denotes immediate utility obtained,
10

fiE NHANCING C OOPERATIVE EARCH

{o1}

o1
{o1,o2}

o3

{}

o1

o2

o2
o3

C ONCURRENT NTERACTIONS

o3

{}

o1



o2

{o1}

{o2}

{o2}

o1
o3

o1

o2

{o1,o1}
o2

{o3}

(a)

o2
{o2,o2}

{o1,o2}

o1

(b)

Figure 1: States Diagram (a) Environment 2 (B2C market); (b) Environment 3 (C2C market).

coalition decides terminate search state s, thus: V (s, 0) = Vt (s). value w (w N,
w 0) maximizes coalitions expected utility V (s, w), equal x (s):
x (s) = arg max V (s, w)
w

(2)

coalitions expected utility point onwards using optimal strategy, denoted
V (s), expressed as:
V (s) = maxwV (s, w) = V (s, x (s))

(3)

order formulate appropriate equation V (s, w) (from x (s) V (s)
derived) make use several additional notations definitions. Consider search round
coalition interacts simultaneously w seller agents, yielding set w = {~
o1 , ..., o~w },
~oi p opportunities. Let w collection w-sized sets opportunities
produced environment coalition operates. denote p w (w ) probability
encountering specific set opportunities w , maintaining w random interactions
seller agents.
Similar basic cooperative search (Sarne & Kraus, 2005) divide w-sized opportunities space, w , two sub-spaces, containing improving non-improving w-sized sets opportunities coalitions utility, respectively. Nevertheless, definition needs extended
fit scenario parallel search follows. Given number simultaneous interactions,
w, state s, let simprovew collection w-size sets opportunities, w , change
coalitions current state (formally stated as: simprovew = {w |w w state(s w ) 6= s}).
denote complementary set simprovew sstayw (the set includes w-size sets
opportunities w change coalitions current state).
Therefore coalition encounters set opportunities w , distinguish two
possible scenarios:
(1) w belongs sstayw coalitions current state still s. case coalitions future
expected utility (i.e., point on) remains V (s, w). derived stationary nature 6
6. Stationary strategy strategy player chooses moves every structurally equivalent subgame
(Baron & Ferejohn, 1989).

11

fiM ANISTERSKI , ARNE , & K RAUS

problem - better state reached, search resumes using number
parallel interactions w, yielding expected utility.
(2) w belongs simprovew coalitions current state changes 0 = state(s w ) 6= s. Since
assume coalitions decision taken future state 0 6= make use coalitions
optimal strategy x (s0 ), coalitions expected utility expressed V (state(s w )).
using analysis, expected utility using w parallel interactions
state s, V (s, w), expressed (w > 0):
V (s, w) =c(w, n)+



pw (w )V
w simprovew



(s0 )+



pw (w )V (s, w)
w sstayw

(4)

s0 coalitions new state encounters set opportunities w , s0 = state(s w ).
applying basic mathematical manipulations term obtain:
V (s, w) =

c(w, n) + w simprove pw (w )V (s0 )
w

1 w sstayw pw (w )

(5)

Since 1 w sstayw pw (w ) = w simprove pw (w ) obtain:
w

V (s, w) =

c(w, n) + w simprove pw (w )V (s0 )
w

w simprovew pw (w )

(6)

Notice case new better state reached, denominator becomes zero,
V (s, w) = . quite straightforward since coalition maintains endless costly search
(trying reach better state actually exist). Here, inevitably coalitions optimal
strategy terminate search. important characteristic used later design proposed
algorithms extracting optimal search strategy.
point, one may attempt compute coalitions strategy x solving set equations
types 1, 3 6. Nevertheless, straightforward solution approach accompanied many
inherent complexities, derived structure equations. First, notice Equation 6
recursive equation one needs know optimal strategy taken future states 0
extracting optimal strategy given state s. Second, computation V (s, w) Equation
6 exponential number parallel interactions, w, used (affecting number sets
simprovew , denominator numerator). Last, according formulation,
potential number parallel interactions may used bounded 7 , thus reaching local
maximum guarantee higher utility cannot obtained. Therefore, algorithmic
approach reduce complexity extracting optimal cooperative parallel search
favorable.

5. Algorithmic Approach
section present comprehensive analysis problem, emphasizing unique
characteristics coalitions optimal strategy. findings lead algorithm computing
V (s, w) polynomial complexity number potential interactions, w (which key
component computing x (s) V (s)).
7. number opportunities theoretically infinite due high arrival rate new opportunities derived
dynamic environment.

12

fiE NHANCING C OOPERATIVE EARCH



C ONCURRENT NTERACTIONS

5.1 Reducing Calculation Complexity
Recall attempting solve problem set equations (see section 4) potential
number parallel interactions may used unbounded. Nevertheless, order extract
x (s) essential supply coalition upper bound, w smax , optimal number
parallel interactions used state s. order overcome difficulty suggest
upper bound wsmax make use following notation. use = (s1 , ...s|SA | ) denote
states constituting SA , sorted termination utilities Vt (s)8 , s1 state
highest expected utility Vt (s) SA .
following proposition suggests efficient upper bound x (s).


Proposition 1. state si upper bound wsmax
, x (si ) calculated using wsmax
= dwe,
w solution following equation:

(7)

c(w, n) = Vt (s1 ) Vt (si )


suggested bound valid simply every value w greater w smax
search cost
associated following immediate search round c(w, n) greater possible future
improvement coalitions utility Vt (s1 ) Vt (si ) (since maximum additional utility
coalition gain bounded difference coalitions overall maximum utility
Vt (s1 ) immediate utility current state Vt (si )). Later on, show upper
bound value byproduct main loop proposed algorithm, thus even need
directly calculated.
upper bound x (s) important step towards solution, however calculation
V (s, w) (from x (s) derived) still exponential number parallel interactions
used, w. analysis, based restructuring different elements composing
V (s, w), allows us bypass complexity introduction finite algorithm
polynomial computational complexity w inevitably identify optimal strategy
coalition.
order reduce complexity computing coalitions best strategy, make use
following notations definitions:

use pstay (s, w) denote probability coalition remain state
conducting w parallel interactions. calculated probability none
encountered w opportunities changing coalitions state:
pstay (s, w) = (pstay (s, 1)) = (
w



p(~o))w

(8)

{~o}sstay1

term 1(pstay (s, 1))w used better structured representation element
w simprovew pw (w ) Equation 6.
use V new (s, k) denote coalitions expected utility obtained potentially reaching
new states (e.g. different s) maintaining k parallel interactions, using
optimal strategy x (s0 ) new future state s0 . term V new (s, k) take
account cost associated current k interactions. However consider
8. several states equal utility sorted according pre-defined order.

13

fiM ANISTERSKI , ARNE , & K RAUS

search costs associated search stages, originating new states. Notice
V new (s, k) equal zero coalition remains state k interactions. term
V new (s, k) expressed as:
(
)
(state(s )) k > 0

p
(
)V

k
k improve k k
k
V new (s, k) =
.
(9)
0
k=0
Note V new (s, w) actually one elements Equation 6. Therefore, Equation 6
formulated (w > 0):
V (s, w) =

c(w, n) +V new (s, w)
1 pstay (s, 1)w

(10)

calculation V new (s, w) using Equation 9 still exponential number parallel
interactions. order efficiently compute V new (s, w) Equation 10 consider w simultaneous interactions w sequential interactions, associated search costs. fully complies
definition V new (s, w) given (as cost w interactions already considered). justification representation method given Lemma 1 follows
directly Theorem 1.
Lemma 1. new state reached obtaining new set opportunities equivalent state
reached sequentially obtaining pairwise disjoint subsets set. Formally stated, given set
/ 6= j, 1w1 ... rwr = w
w number subsets 1w1 , ..., rwr , iwi w , iwi wj j = 0,
state s, following holds:
r
state(s, w ) state(state(...state(state(s 1w1 ) 2w2 )... r1
wr1 ) wr )

(11)

Proof. begin proving following supporting lemma:
Lemma 2. Let 0 , 00 two sets opportunities. 0 00 , state(0 )
state(00 ).
Proof. Since 0 00 , definition equivalence relation follows 0 00
. Theorem 1 state definition follows 0 {alloc(0 )} = state(0 )
00 {alloc(00 )} = state(00 ). transitive characteristic equivalence
relation follows state(0 ) state(00 ).
Let state let w set opportunities. prove Lemma 1 induction
number disjoint sets r. r = 2, let 0w0 00w00 sets satisfy 0w0 00w00 = w
/ Theorem 1 state definition obtain:
0w0 00w00 = 0.
0w0 {alloc(s 0w0 )} = state(s 0w0 )

(12)

12 Lemma 2 follows
state(s w ) = state(s 0w0 00w00 ) state(state(s, 0w0 ) 00w00 )

(13)

assume number disjoint sets r r > 2, 1w1 , ..., rwr , iwi w , iwi wj j =
/ 6= j, 1w1 ... rwr = w Equation 11 holds prove Equation 11 holds r=M+1.
0,
14

fiE NHANCING C OOPERATIVE EARCH



C ONCURRENT NTERACTIONS

Given w sets 1w1 , ..., rwr , decompose w two disjoint sets wwr rwr ,
wwr = w \ rwr . Therefore proved r = 2 following holds:
state(s w ) state(state(s, wwr ) rwr ).

(14)

addition decompose set wwr r 1 sets 1w1 , ..., r1
wr1 . Therefore using
induction assumption:
state(s wwr ) state(...state(state(s, 1w1 ) 2w2 )... r1
wr1 )

(15)

Lemma 2 15 obtain:
r
state(state(s wwr ) rwr ) state(state(...state(state(s 1w1 ) 2w2 )... r1
wr1 ) wr )

(16)

14, 16 transitive characteristic equivalence relation follows that:
r
state(s w ) state(state(...state(state(s 1w1 ) 2w2 )... r1
wr1 ) wr )
specific case Lemma 1 subset consists single opportunity. Thus
calculation V new (s, k) recursively rely values V new (s0 , k 1), s0 represents
new states reached obtaining one additional opportunity p . Therefore
order compute V new (s, k), merely consider expected utility conducting one interaction
planned k interactions. Here, probability p stay (s, 1) coalition remains
state s, expected utility (having k 1 additional interactions go) V new (s, k 1)
(recall V new (s, 0) = 0 according Equation 9). Otherwise, new state 0 reached
single interaction, possibility reaching new states remaining
k 1 interactions (taking states utility consideration term V new (s0 , k 1))
probability pstay (s0 , k 1) remaining new state s0 even additional k 1 interactions
(in case utility one obtained resuming search state using
optimal strategy, V (s0 )). description encapsulated following recursive equation:
V

new

(s, k) =

(

pstay (s, 1)V new (s, k 1) + {~o}simprove p(~o)(V new (s0 , k 1) + pstay(s0 , k 1)V (s0 )) k > 0
1
0
k=0
(17)

s0 = state(s ~o ). Notice repeating calculation using equation
increasing k value starting k = 1, iteration includes single unknown parameter,
(V new (s, k)). addition, values V new (s0 , k 1) V (s0 ) depend values
computed state (s0 precedes set Ss ).
5.2 Algorithm Computing Coalitions Optimal Strategy
analysis leads algorithm computing coalitions optimal strategy (Algorithm
1). algorithm computes coalitions strategy expected utility possible states
init
SA . execution time polynomial w init
max (for convenience use wmax denote bound
number parallel interactions w, coalition begins search, i.e., coalitions state
= sinit = {}).
Notice stage execution, algorithm 1 reuses components computed earlier
stages. example, V new (s, w) appears computation V (s, w) (using Equation 10),
computation V new (s0 , w + 1) (using Equation 17, ~o0 p state(s0 ~o0 ) = s)
15

)

fiM ANISTERSKI , ARNE , & K RAUS

Algorithm 1 algorithm computing optimal search strategy x
Input: p - set potential opportunity types market; p(~o) - opportunity types probability
function; n - coalitions size; U j (), j = 1, ..., n - coalition members utility functions; c(w, n) search cost function; SA - set possible states coalition A.
Output: x (s) SA - coalitions optimal strategy.
1: Build set ordered states
2: i=1 |Ss |
3:
Set V (si , 0) = Vt (si ) using Equation 1
4:
Set V new (si , 0) = 0
5:
Set w = 1
6:
c(w, n) (Vt (s1 ) Vt (sinit ))
7:
Compute V new (si , w) using Equation 17
8:
Compute V (si , w) using Equation 10
9:
w++;
10:
end
11:
Set x (si ) = arg maxw0 (0,...,w1) V (si , w0 ), V (si ) = V (si , x (si ))
12: end
13: Return (x (si ), = 1, ..., s|SA | )
computation V new (s00 , w + 1) (using Equation 17, ~o00 p state(s00
~o00 ) = s). Storing result computational element memory, purpose
reusing later stages, significantly improves efficiency algorithm. accomplished
using two matrixes V V new size |SA | (winit
max + 1), corresponding V (s, w)
V new (s, w) values stored pair (s, w), representing state correlated result
number parallel interactions used calculations. Additionally, store x V
values using two arrays size |S | reusing x (s0 ) V (s) computation V new (s, w).
Theorem 2. Algorithm 1 returns optimal strategy coalition polynomial time w init
max .
Proof. proof, assume use matrices V V new storing values computed along execution algorithm described above. order build set ordered
states Ss , algorithm needs compute coalitions termination utility states
SA , according equation 1. Computing coalitions termination utility given state
takes O(|A|3 ) C2C markets9 O(|A|2 ) B2C markets10 . coalitions termination utility calculated state . Thus overall complexity computing coalitions
termination utility states O(|S ||A|2 ) O(|SA ||A|3 ) B2C C2C markets, respectively (the sets Ss SA size). Sorting members order build Ss takes
O(|SA | log |SA |). computation step 3 takes constant time assuming stored
9. mentioned previously, computing coalitions termination utility C2C markets equivalent finding
maximum matching weighted bipartite graph. Finding maximum matching weighted bipartite graph
done O(n(n log n + m)), n number vertices number edges (Wang, Makedon, & Ford,
2004). Since graph agent connected opportunities, number opportunities given
state bounded number agents, process computing coalitions termination utility takes O(|A|3 ).
10. mentioned previously, computing coalitions termination utility B2C markets done finding
opportunity agent coalition maximizes utility. number opportunities given state
bounded number agents, computing coalitions termination utility takes O(|A|2 ).

16

fiE NHANCING C OOPERATIVE EARCH



C ONCURRENT NTERACTIONS

state coalitions termination utility built. Steps 3-5 performed states,
thus, overall complexity O(|S |). loop step 6 performed w init
max times.
init
reaching value w = w max + 1 step 6, loop condition longer holds (i.e.,
c(w, n) > (Vt (s1 ) Vt (sinit ))). Notice first elements calculated state 1 (i.e. one
maximum utility) according loop step 2. Here, explained section 4, expected utility strategy search resumed (i.e., using w 1) V (s, w) =
1
(formally, since simprove
= 0/ w pstay (s1 , w) = 1 V new (s1 , w) = 0 w (1, .., winit
max ), thus,
w
init
V (s1 , w) = w (1, .., wmax )). Therefore, optimal strategy state 1 terminate
search, i.e. x (s1 ) = 0 V (s1 , 0) = Vt (s1 ). state, s, reaching step 7,
algorithm already computed V (s0 ) V new (s0 , w) w (0, ..winit
max ) potential future new state s0 originating state s. due fact future states state
appear set ordered states (either higher utility, equal utility
yet sorted according function alloc). addition, number parallel interactions w 1, algorithm already computed V new (s, w 1). Therefore, computation
time step 7 sums order |O p | components already computed. Then,
reaching step 8, value V new (which part numerator equation 10)
already computed. Therefore, ignore, now, time computing coalitions new
state s0 encounters opportunity ~o given state time computing p stay
values, computation step 7 takes O(|O p |) computation step 8 takes constant
time. Since steps performed w init
max |SA | times, overall complexity computing steps O(|O p |winit
|S
|).

step
11,

algorithm chooses maximum value among

max
winit
values


already

computed.
Since
step performed state ,
max
overall complexity performing step O(w init
max |SA |). complexity computing
coalitions new state s0 encounters opportunity ~o given current state depends
market type. B2C markets, complexity O(|A|) store state
alloc(s) value (we compute value compute coalitions termination utility).
C2C markets, computing new state takes O(|A| 3 )11 . store values using matrix f uture size |SA | |O p | new state s0 = state(s ~o) stored pair (s,~o).
Therefore, overall complexity computing future states states O(|S ||A||O p |) B2C
markets, O(|SA ||A|3 |O p |) C2C markets. Computing pstay (s, w) done constant
time based pstay (s, w 1). Moreover, store values using matrix Pstay size
stay (s, w) stored pair (s, w). Therefore, total com|SAg | winit
max value p
plexity computing pstay values O(|SA | winit
max ). Given analysis, overall complexity
algorithm O(|SA ||A|2 + |SA | log |SA | + |SA ||O p |winit
max + |SA ||A||O p |) B2C markets,
O(|SA | log |SA | + |SA ||A|3 |O p | + |SA ||O p |winit
)

C2C
markets.
Hence algorithm polynomial
max
init
wmax .

Note algorithm uses winit
max upper bound optimal number interactions x (si ),

= 1, ..., |Ss | . bound valid since according Equation 7 value w smax
increases
Vt (si ) decreases coalitions termination utility reaches minimum initial state
(Vt (sinit ) = Vt ({}) = 0). suggests significant improvement algorithm.
si
Instead using winit
max states, calculate specific upper bound, w max , state si
step 6, according Equation 7. point may require re-computation V (s , w) w

11. Computing coalitions new state C2C markets done finding maximum matching weighted bipartite
graph (see footnote 10 complexity analysis).

17

fiM ANISTERSKI , ARNE , & K RAUS

values used previous execution stages algorithm; however, total number
calculations state si many cases significantly decrease 12 .

6. Properties Parallel Cooperative Search (PCS) Model
Prior extending analysis scenarios coalition faces finite decision horizon,
emphasize interested unique characteristics parallel cooperative search derived
general analysis. First wish emphasize PCS model generalization
Single Agent Parallel Search (SAPS) Sequential Cooperative Search (SCS) model stated
following proposition.
Proposition 2. cooperative parallel search generalization single agent parallel
search cooperative sequential search models 13 .
Proof. analysis given section 4 clear Algorithm 1 results strategy
used cooperative sequential search single agents parallel search, specific

cases si wsmax
= 1 parallel interactions n = 1 agents, respectively. 14
Furthermore, emphasize coalitions expected utility never decreases using
proposed mechanism comparison sequential cooperative search. Indeed case
maintaining single interaction favorable strategy Algorithm 1 results one
interaction time strategy, used sequential cooperative search. Obviously using
parallel interaction decrease search cost (i.e. search cost conducting number
interactions sequentially equal smaller conducting interactions parallel),
sequential cooperative search dominating strategy stated next proposition.
Proposition 3. cost conducting number parallel interactions equal higher
cost conducting interactions sequentially (i.e w, w c(1, n) c(w, n)) use
parallel search match expected utility sequential cooperative search.
Proof. Consider optimal cooperative parallel search strategy x par . Obviously state
SA satisfying: (1) coalitions strategy conduct one interaction, x par (s) > 1
(2) future state s0 coalition conducts one interaction (or terminates search),
i.e., xpar (s0 ) 1. replace parallel search strategy state sequential
search state expected utility increase. worst
case scenario coalition execute w interactions incurring cost x par ,
ending expected termination utility. case, whenever coalition
reaches state s0 strategy according xpar terminate search prior completing w
interactions, expected utility least expected utility achieved using x par (otherwise
coalitions strategy s0 according xpar resume search) . Therefore use
new strategy improve expected utility. Using backward induction apply
logic former states x par implies one interaction parallel.
12. extent achieved improvement highly correlated specific environment coalition
operates.
13. Notice context single agent sequential search specific case single agent parallel search,
agent interacts single seller agent time.
14. Assuming similar cost structures three models.

18

fiE NHANCING C OOPERATIVE EARCH



C ONCURRENT NTERACTIONS

Consequently, obtain sequential strategy results least large expected utility
xpar .
Next consider case agents fully homogeneous (in terms utility
functions) operate B2C markets. Here, prove optimal strategy coalition
stationary (i.e. change according current state). Furthermore, show
stationary strategy characteristic holds fully homogeneous agents
agents correlated preferences. Two agents j correlated preferences
agent ai prefers ~o0 ~o00 agent j prefers opportunity ~o0 ~o00 (i.e ~o0 ,~o00 p ,
U j (~o0 ) U j (~o00 ) Ui (~o0 ) Ui (~o00 )) vice versa.
Theorem 3. B2C market, agents correlated preferences, search strategy
based reservation value15 Urv . scenario number parallel interactions
coalition uses according optimal strategy (in case resumes search) fixed
search (s SA Vt (s) < Urv exists x (s) = w f ixed ).
Proof. scenario, search problem equivalent problem single agent
utility function equal sum different agents utilities, U = U 1 +U2 + ... +Un .
case terminating search, coalition members always assigned
opportunity. Therefore, search strategy reservation value based, search terminated
upon reaching opportunity utility exceeding pre-set reservation value U rv . Since
probability reaching opportunity depend coalitions state, number
parallel interactions used throughout search fixed.
Nevertheless Theorem 3 hold C2C market even agents homogeneous next lemma states.
Lemma 3. C2C market even fully homogeneous agents (all agents utility
functions) search strategy always stationary optimal number parallel interactions changed search according coalitions current state.
Proof. order prove lemma, consider coalition operates C2C market
following environment:
Environment 4. Assume coalition two agents, 1 a2 , searching product (e.g., used
book) characterized one attribute (e.g., indicating whether book signed author)
two possible values, 1 (signed) 2 (not signed). results two opportunity types, o~ 1 = (1)
o~2 = (2). Assume opportunity o~1 rare found probability 1/100,
opportunity o~2 common (a probability 99/100). agents utilities 100 rare
opportunity 1 common opportunity. Consider cost conducting w parallel
interactions equal cost conducting w interactions sequentially, c(w, n) = wc(1, n),
cost conducting single interaction c(1, n) = 0.1 + 0.05n, (n > 1). Table 4 summarizes
environments setting.
consider two following states: (1) coalition starts search (the coalitions current
state initial state = {}) (2) coalition encounters opportunity o~ 1 (the coalitions current
15. reservation value value coalition sets a-priori terminates search reached opportunity
associated utility greater equal value (Sarne & Kraus, 2005).

19

fiM ANISTERSKI , ARNE , & K RAUS

Opportunity

Attribute

Probability

~o1
~o2

signed
signed

0.01
0.99

Utility
Agent a1 Agent a2
100
100
1
1

Table 4: Agents utilities four opportunities Environment 4
state s0 = {~
o1 }).
order coalition terminate search members exploit opportunity o~ 1 (otherwise expected utility resuming search exceeds search cost). Thus order
coalition terminate search former case (the coalitions state = {}) must encounter
opportunity o~1 twice latter case (the coalitions state 0 = {~
o1 }) encounter
opportunity o~1 once. Thus expect number optimal interactions, coalitions
state s, different number optimal interactions, state 0 . Indeed
computation coalitions optimal number interactions (using Algorithm 1) results
x (s) = 299 x (s0 ) = 161.

7. Finite Decision Horizon
important variant cooperative parallel search one agents forming
coalition restricted deadline finalizing search. example, consider coalition
searches costumes members wear costume party. case coalition
search costumes forever since customs value coalition members
purchased prior party. type environment often referred search theory
finite decision horizon environment. Specifically, within context paper consider
finite decision horizon environments coalition whole terminate search prior
within next r search rounds. Note sequential search definition equivalent
definition stating coalition conduct r additional interactions.
addition general advantages recognized parallel cooperative search, finite decision horizon environments model enable coalition conduct maximum
r interactions facilitated sequential model (whenever necessary). Moreover, environments coalition cannot improve performance interacting several sellers
parallel (e.g., cases described Proposition 3), introduction finite decision
horizon constraint creates strong incentive interact single seller time.
illustrated following example:
Example 3. Consider coalition operates B2C market, characteristics
Environment 4, introduced section 6. environment coalitions optimal
strategy infinite decision horizon search sequentially (see Proposition 3). Nevertheless, various finite decision horizon values coalition benefit using parallel
search technique. trivial example case coalition terminate
search within next search round. case, coalition conducts several interactions
next round, probability encounter opportunity o~1 increases comparison case
conducts single search. example coalition conducts 100 interactions
probability 0.99100 encounter opportunity o~2 search probability
20

fiE NHANCING C OOPERATIVE EARCH



C ONCURRENT NTERACTIONS

1 0.99100 encounter opportunity o~1 search expected utility expressed
as: (1 0.99100 ) Vt ({~
o1 }) + 0.99100Vt ({~
o2 }) c(100, 2) = (1 0.99100 ) 200 + (0.99)100 2
0.2 100 = 107.52. value significantly greater expected utility using sequential cooperative search 0.01 Vt ({~
o1 }) + 0.99Vt ({~
o2 }) c(1, 2) = 3.78.
order compute coalitions strategy finite decision horizon model variant extend
definitions include number remaining search rounds, r. use V (s, w, r) denote
coalitions expected utility, conducts w interactions next round terminate
search within next r rounds. term V (s, 0, r) denotes immediate utility obtained,
coalition decides terminate search state s, thus: V (s, 0, r) = Vt (s). denote x (s, r)
V (s, r) coalitions optimal strategy expected utility (when using optimal strategy)
state s, terminate search within next r rounds.
V (s, r) x (s, r) calculation similar infinite decision horizon case, except
whenever coalition reaches decision deadline inevitably terminates search. Namely,
r = 0, x (s, 0) = 0 coalitions expected utility V (s, 0) equal Vt (s).

arg maxw V (s, w, r) r > 0
(18)
x (s, r) =
0
r=0
(19)

V (s, r) = V (s, x (s), r)

begin computing V (s, w, r), r > 0 (since V (s, w, 0) = 0, w). Here, apply
analysis methodology used section 4. However, expected utility coalition
resuming search following current search stage reflect change decision
horizon. Therefore, instead using Equation 4, use following modification:



V (s, w, r) = c(w, n) +

w simprovew

pw (w )V (s0 , r 1) + pstay (s, w)V (s, r 1),

w > 0, r > 0
(20)

= state(s w ).
computation Equation 20 exponential number parallel interactions. order
reduce complexity V(s,w,r) r > 0 consider two following cases:
s0

w = 1: coalition encounters single opportunity thus Equation 20 expressed as:
V (s, 1, r) = c(1, n) +



{~o}simprove

p(~o)V (state(s ~o ), r 1) +



p(~o)V (s, r 1),

r > 0

{~o}sstay1

1

(21)
case, additional computational complexity introduced, comparison SCS
model (Sarne & Kraus, 2005).
w > 1: attempt find computational means extracting value term
w simprovew V (s0 , r 1) + pstay (s, w)V (s, r 1) (in Equation 20) complexity polynomial
w. expression denotes coalitions expected utility conducts w interactions
without considering cost associated conducting w interactions. order efficiently compute value consider coalitions expected utility conducting one
w interactions obtaining opportunity ~o. case, coalitions expected utility
21

fiM ANISTERSKI , ARNE , & K RAUS

equal coalitions expected utility starting state state(s ~o) conducting
w 1 interactions plus cost equivalent cost maintaining w 1 interactions,
c(w 1, n) (these added since already subtracted expected utility
Equation 20 V (state(s ~o), w 1, r) subtracts again):
V (s, w, r) = c(w, n) +



p(~o)(V (state(s ~o), w 1, r) + c(w 1, n)),

~oO p

w > 1, r > 0
(22)

sum Equation 22 represented sum expected utility opportunities change coalitions current state sum opportunities change
coalitions current state:
V (s, w, r) = c(w, n)+



p(~o)V (s0 , w1, r)+

{~o}simprove
1

p(~o)V (s, w1, r)+c(w1, n),

{~o}sstay1

w > 1, r > 0
(23)

= state(s ~o).
Equations 23 21 facilitate calculation V (s, w, r) polynomial time w. order
find coalitions optimal strategy, efficient bound optimal number interactions
given Equation 7 valid finite decision horizon variant.
analysis leads Algorithm 2 modification Algorithm 1. algorithm
computes coalitions strategy expected utility states . order compute
V (s, r), algorithm uses backward induction. starts computing V (si , 0) states.
Here, coalition forced terminate search thus algorithm sets expected utility
equal termination utility: V (si , 0) = Vt (si ). Then, algorithm computes V (s , r, w) r > 0
using Equation 21 23 starting w = 1 till c(w, n) Vt (s1 ) Vt (sinit ). algorithm sets
coalitions optimal strategy number interactions w maximizes V (s , r, w).
Similar infinite decision horizon case, Algorithm 2 reuses components computed earlier
stages stage execution. Nevertheless, case order store results
memory reuse later, need three dimensional matrix V size |S | (winit
max + 1) (rmax + 1)
rmax initial decision horizon. corresponding V (s, w, r) values stored
triplet (s, w, r), representing coalitions state, number simultaneous interactions used
limit number rounds coalition conduct. Additionally, store V (s, r)
x (s, r) values two matrixes V X size |S | (rmax + 1) reusing x (s0 , r 1)
V (s0 , r 1) computation V (s, w, r).
following theorem prove algorithm 2 returns coalitions optimal strategy
expected utility, polynomial time w init
max (the bound number parallel interactions
computed using Equation 7) rmax .
s0

Theorem 4. Algorithm 2 returns optimal strategy coalition expected utility
following strategy, terminate search within next r max rounds, polynomial time winit
max rmax .
Proof. proof, assume use matrices storing computed values described
above. process extracting Ss done exactly finite decision horizon. Thus, step
1 complexity O(|SA ||A|2 + |SA | log |SA |) O(|SA ||A|3 + |SA | log |SA |) B2C markets,
22

fiE NHANCING C OOPERATIVE EARCH



C ONCURRENT NTERACTIONS

Algorithm 2 algorithm computing optimal search strategy x coalition
terminate search within next r max rounds
Input: p - set potential opportunity types market; p(~o) - opportunity types probability
function; n - coalitions size; U j (), j = 1, ..., n - coalition members utility functions; r max -
maximum number search rounds terminating search (the decision horizon); c(w, n)
- search cost function; SA - set possible states coalition A.
Output: x (s, r),V (s, r) Ss , 0 r rmax - coalitions optimal strategy expected
utility.
1: Build set ordered states
2: = 1 |Ss |
3:
Set x (si , 0) = 0
4:
Set V (si , 0) = Vt (si ) using Equation 1
5: end
6: r = 1 rmax
7:
i=1 |SA |
8:
Set V (si , 0, r) = Vt (si ) using Equation 1
9:
Compute V (si , 1, r) using Equation 21
10:
Set w = 2
11:
c(w, n) (Vt (s1 ) Vt (sinit ))
12:
Compute V (si , w, r) using Equation 23
13:
w++;
14:
end
15:
Set x (si , r) = arg maxw0 (0,...,w1) V (si , w0 , r), V (si , r) = V (si , x (si , r), r)
16:
end
17: end
18: Return (x (si , r), = 1, ..., s|SA | , r = 0, ..., rmax )
C2C markets, respectively. computation steps 3 4 takes constant time, assuming
stored state coalitions termination utility built . steps performed
states, thus, overall complexity computing steps throughout loop O(|S |).
Again, step 8 performed constant time, assuming coalitions termination utility
stored state. state, s, limit number search rounds r > 0
reaching step 9 algorithm, algorithm already computed V (s0 , r 1) potential
future new state s0 originating state s. Therefore, computation step 9 simply summing order |O p | components already computed. Consequently, ignore
time computing coalitions new states 0 (we add time computing values
later), computation step takes O(|O p |). Since steps 8-9 performed rmax |SA | times,
overall complexity computing steps (when ignoring time computing new
states) O(|O p |rmax |SA |). Notice w = winit
max + 1 obtain c(w, n) > (Vt (s1 ) Vt (sinit )).
Thus, loop step 11 performed w init
max times. w > 0 reaching step 12,
0
algorithm already computed V (s , w 1, r) potential future new state 0 originating
state s. Therefore, computation step 12 takes O(|O p |) ignoring time computing new states. Since step performed r max |SA |winit
max times, overall complexity
computing step (when ignoring time computing new states) O(|O p |rmax |SA |winit
max ).
23

fiM ANISTERSKI , ARNE , & K RAUS

step 15, coalition chooses maximum value among w init
max values already
computed. Since step performed state , r {0, ..., rmax },
overall complexity performing step O(w init
max |SA |rmax ). Computing coalitions new state
s0 encounters opportunity ~o given current state done described
infinite decision horizon case. Thus, overall complexity computing future states states
O(|SA ||A||O p |) B2C markets, O(|SA ||A|3 |O p |) C2C markets. Given analysis,
2
overall complexity algorithm O(|S | log |SA | + |SA ||O p |winit
max rmax + |SA ||A| + |SA ||A||O p |)
3
B2C markets, O(|SA | log |SA | + |SA ||O p |winit
max rmax + |SA ||A| |O p |) C2C markets. Hence
16
init
algorithm polynomial wmax rmax .
Similar infinite decision horizon significant improvement algorithms peri , state,
formance achieved calculating using specific upper bound, w smax

step 11, according Equation 7.
following section illustrate properties PCS model infinite
finite decision horizons model variants.

8. Illustrative Examples PCS Model
efficient means calculating coalitions optimal strategy using parallel cooperative search, demonstrate specific properties search method. reference
use Single Agents Parallel Search (SAPS), Single Agents Sequential Search (SASS)
Sequential Cooperative Search (SCS) models.
8.1 Infinite Decision Horizon
begin illustrating parallel cooperative search infinite decision horizon. First
demonstrate influence level heterogeneity utility functions different coalition members coalitions performance (in terms expected utility achieved). order
demonstrate use following environment, used originally evaluating
performance SCS model (Sarne & Kraus, 2005):
Environment 5. coalition two agents, 1 a2 , searching opportunities defined two
attributes, B1 (e.g., quality) B2 (e.g., store rating), attribute value
discrete range (1, ..., 5) equal probability values. agents
heterogeneous respect way evaluate potential opportunity. Agent 1 associated utility function U1 (~o) = B1 + B2 , agent a2 associated utility function
U2 (~o) = 2(1 )B1 + 2B2 . Thus, parameter indicates level agents similarity/heterogeneity. search cost single agent conducting single interaction c base
w parallel interactions (w > 1): c(w, 1) = c base + c parallel (w 1). search cost coalition
size n c(w, n) = c(w, 1)ln(n + 1), (n > 1).
Figure 2 depicts expected utility per agent using different search methods 17
C2C market (left hand-side) B2C market (right hand-side) parameter similarity
level, , utility functions agents constituting coalition.

16. algorithm uses winit
max upper bound optimal number interactions x (si ), = 1, ..., |SA |. bound
si
valid since according Equation 7 value wmax increases Vt (si ) decreases coalitions termination
utility reaches minimum initial state (Vt ({}) = 0).
17. cooperative models average expected utility per coalition member measure used.

24

fiE NHANCING C OOPERATIVE EARCH

utility
9.3

utility
9.3
9.1

1



9.1

PCS

C ONCURRENT NTERACTIONS

PCS
1

8.9

8.9

2

2
SAPS
8.5
8.3

SAPS

8.7

8.7

8.5

3

SCS

8.3

4

8.1

SASS

7.9
7.7

3
SCS

8.1
7.9

4

SASS

7.7

0.01 0.11 0.21 0.31 0.41 0.51 0.61 0.71 0.81 0.91

0.01 0.11 0.21 0.31 0.41 0.51 0.61 0.71 0.81 0.91

similarity level ( )

Figure 2: Average expected utility per buyer agent function similarity level different models
different markets

Curve 1 graph depicts average expected utility two agents form coalition function similarity level agents utility functions, making use
suggested parallel cooperative search. Here, search cost conducting single interaction
set 0.2 (cbase = 0.2) search cost conduct additional interactions set 0.05
(c parallel = 0.05). expected model (represented curve 1) outperforms SCS model (represented curve 3) terms expected utility agents. two curves describe
average expected utility agents searches separately using Single Agent
Parallel Search (SAPS) (represented curve 2) Single Agent Sequential Search (SASS)
(represented curve 4) models. specific environment use cooperative parallel
search outperforms single agent parallel search model though always case.
Notice results obtained cooperative parallel search consistent general
characteristic cooperative search (Sarne & Kraus, 2005) use method
B2C market results better expected utility C2C market. case separated
single searches (SAPS SASS models) market type affect strategy structure
expected utility since agent searches single opportunity benefit.
Figure 2 reflects interesting insight contradicts important strategy domination
relationship found single cooperative sequential search techniques fully homogeneous agents (i.e. utility function, case = 0.5 example)
operating C2C markets. sequential search use single agent search always outperforms cooperative search C2C markets (when considering fully homogeneous
agents) (Sarne & Kraus, 2005), actual evidence parallel search concerned,
cooperative search technique may outperform aggregated result single homogeneous
agents search.
Figure 3 shows expected utility per agent using different search methods
C2C market (left hand-side) B2C market (right hand-side) parameter cost
conducting additional interaction c parallel (notice agents performance affected
value SASS SCS models). results based Environment 5 (the
environment used Figure 2), = 0.1 c base = 0.2. expected cost c parallel
25

fiM ANISTERSKI , ARNE , & K RAUS

decreases average expected utility using parallel models (PSC SAPS models) increases
(and thus greater improvement comparison sequential models). Note whenever
c parallel cbase performance converges one achieved obtaining one observation
time, used sequential models. behavior correlated Proposition 3.

0.17

0.21

9.7

utility

utility

9.7

9.5

9.5

9.3

9.3

9.1

1

9.1

PCS

1
8.9

8.9

SAPS

8.7

2

2
3

8.5

SCS

8.3

4

8.1

SAPS

8.7

8.5

3

PCS

SCS

8.3

4

SASS

SASS

8.1

0.01

0.05

0.09

0.13

0.17

0.21

0.01

0.05

0.09

0.13

0.17

0.21

cost parallel interaction

Figure 3: Average expected utility per buyer agent function c parallel using different search
methods different markets

cost conducting additional interaction c parallel influences optimal number
interactions coalition conduct. Figure 4 shows optimal number parallel
interactions coalition conduct beginning search, x ({}), function
c parallel environment used Figure 3 (Environment 5). expected,
optimal number interactions, x ({}), increases c parallel decreases equal 1,
c parallel cbase .
Figure 4 coalitions optimal number interactions using PCS model higher
coalition operates C2C market B2C market.
intuitive explanation (in C2C market opportunity exploited one agents
coalition needs encounter opportunities C2C market) cannot generalized.
following example illustrates scenario optimal number interactions actually
greater operating B2C market.
Environment 6. coalition two agents, 1 a2 , searching product (e.g., computer
game) associated 4 types opportunities {~o 1 ,~o2 ,~o3 ,~o4 } (e.g., representing different configurations). agents utilities opportunities distribution given Table 5. search cost
single agent conduct single interaction c base = 0.2, search cost conducting
additional search c parallel = 0.1, c(w, 1) = cbase + c parallel (w 1). search cost
coalition c(w, n) = c(w, 1)ln(n + 1), (n > 1).
Figure 5 shows optimal number interactions used coalition (in SCS model)
agent (in SAPS model) beginning search, operating Environment
6. one see coalitions optimal number interactions using PCS model B2C
26

fiE NHANCING C OOPERATIVE EARCH

optimal # interactions

32



C ONCURRENT NTERACTIONS

(1) Coalition B2C

28
(2) Coalition C2C
24

1
(3) Agent A1

20
4

(4) Agent A2

16
12

3

2

8
4
0
0.01

0.06

0.11

cost parallel interaction

0.16

0.21

Figure 4: Coalitions agents optimal number parallel interactions beginning search
function c parallel

Opportunity

Probability

~o1
~o2
~o3
~o4

0.499
0.25
0.25
0.001

Utility
Agent a1 Agent a2
0
0
0
1
1
0
100
100

Table 5: Agents utilities four opportunities Environment 6
market (44) larger coalitions optimal number parallel interactions C2C market
(8). Moreover figure contradicts two additional hypothesis one may presume
optimal number coalitions parallel interactions. first coalitions optimal number
parallel interactions equal overall number parallel interactions,
agents conducts search autonomously. seen Figure 5, optimal number
parallel interactions B2C market greater total number parallel interactions,
agents conducts search autonomously (10 + 10 = 20 < 44). second hypothesis
suggests coalitions optimal number parallel interactions least number parallel
interactions, agents conducts search autonomously. This, proven
wrong Figure 5, coalitions optimal number parallel interactions C2C market
(8) smaller number parallel interactions agent 1 (10), number parallel
interactions agent a2 (10).
Next introduce make use simpler sample environment demonstrating
additional properties cooperative parallel search.
Environment 7. coalition two agents, 1 a2 , searching opportunities defined two
attributes, B1 (e.g., quality) B2 (e.g., store rating), attribute value
discrete range (1, 2) equal probability values. utility functions
used U1 (~o) = 1.9B1 + 0.1B2 U2 (~o) = 0.1B1 + 1.9B2 . search cost single agent
27

fiM ANISTERSKI , ARNE , & K RAUS

x*({})
45

36
27
18
9
0
PCS
C2C

PCS
B2C

SAPS
Agent 1

SAPS
Agent 2

Figure 5: Coalitions optimal number parallel interactions beginning search
c(w, 1) = 0.5 + 0.05w, coalition c(w, n) = c(w, 1) ln(n + 1), (n > 1). Table 6
summarizes environments setting.
Opportunity
~o1
~o2
~o3
~o4

(Attribute1,
Attribute2)
(1,1)
(1,2)
(2,1)
(2,2)

Probability
1
4
1
4
1
4
1
4

Utility
Agent a1 Agent a2
2
2
2.1
3.9
3.9
2.1
4
4

Table 6: Agents utilities four opportunities Environment 7

7.1
utility
7
6.9
6.8
6.7
6.6
6.5
6.4
1

2

3

4

5

6

7

8

9

10

# parallel interactions (w)

Figure 6: Coalitions overall expected utility function w
Figure 6 depicts expected coalitions overall utility respect number interactions
conducted beginning search (i.e. first search stage, coalition knows
opportunities), assuming states coalition uses optimal number
28

fiE NHANCING C OOPERATIVE EARCH



C ONCURRENT NTERACTIONS

parallel interactions, x (s). Here, see effect two conflicting forces: number
parallel interactions coalition uses stage increases, probability associating better
opportunity two coalition members increases. However overall search cost
associated search stage increases. figure, conclude optimal number
parallel interactions used stage x ({}) = 5.
additional important characteristic cooperative parallel search wish emphasize
concerns number parallel interactions used part optimal search strategy along
search. single agents parallel search search strategy stationary (i.e. number
parallel interactions used change along search process) model number
parallel interactions along search needs maintained depends coalitions state
(i.e. set opportunities known coalition). demonstrated directed acyclic
graph (DAG) given Figure 7, describes search process Environment 7. vertices
graph present potential coalitions states (the state determined according relevant
set known opportunities, correlated definition given section 4). edge connects
two states s0 possibility reach state following search round
coalition conducts search according optimal search strategy. example directed
edge connects = {} s0 = {(1, 2), (2, 1)}, since coalition proceed 0
conducts five parallel interactions according optimal search strategy encounters
opportunities (1, 2) (2, 1). Notice reaching states {(1, 2), (2, 1)} {(2, 2), (2, 2)}
optimal strategy coalition terminate search. Therefore edge originating
states. illustrated Figure 7, number parallel interactions coalition
use according optimal search strategy (denoted x (s)) depends coalitions state.
comparison purposes, notice single agents separate search (i.e. single agent
parallel search model) optimal strategy constantly use 4 parallel interactions (as long
agents strategy resume search).

x*(s)=4
{(1,2)}
x*(s)=5

{}
Vt(s)=0

x*(s)=5

Vt(s)=6

{(1,1)}
Vt(s)=4

x*(s)=0
{(1,2),(2,1)}
Vt(s)=7.8
x*(s)=0

x*(s)=4
{(2,1)}
Vt(s)=6

{(2,2)}
Vt(s)=8

Figure 7: Optimal strategy potential transitions states simple B2C market

8.2 Finite Decision Horizon
section demonstrate properties PCS model variant coalition
given finite decision horizon. First explore influences cost conducting addi29

fiM ANISTERSKI , ARNE , & K RAUS

tional interaction, c parallel , agents expected utility. Figure 8 depicts results obtained
varying c parallel 0.01 0.3. figure use environment used Figure
3 (Environment 5), = 0.1, cbase = 0.2 decision horizon two search rounds.
cost conducting additional interaction c parallel decreases, coalitions expected utility
using parallel models PSC SAPS increases superiority sequential models
increases. Moreover shown Figure 8 parallel model outperforms sequential model even
c parallel cbase (e.g., c parallel = 0.2). Recall c parallel cbase parallel technique improve expected utility infinite decision horizon (as suggested
Proposition 3).
9.6

utility

utility

9.6

9.1

9.1

8.6

1

2
8.1

PCS

SAPS
8.1

SAPS

7.6
7.1

1 PCS
2

8.6

7.6

4

SASS

3

7.1

SCS
4

6.6

6.6

3
6.1
0.01

SASS

SCS
6.1
0.06

0.11

0.16

0.21

0.26

0.01

0.06

0.11

0.16

0.21

0.26

cost parallel search

Figure 8: average expected utility per buyer agent function c parallel coalition
terminate search within two next rounds.

Another factor affects expected utility decision horizon, represented value
parameter r. Figure 9 presents coalitions expected utility function r. figure
used environment used Figure 8, set cost additional
search, c parallel = 0.2. observed Figure 9, search models, earlier coalition
terminate search smaller expected utility. Moreover, expected utility improvement
obtained PCS (in comparison SCS) SAPS (in comparison SASS) models
increases r decreases. case ability conduct parallel interactions compensates
small number search rounds coalition conduct. Note r increases, average
expected utility per buyer agent converges average expected utility per buyer agent
infinite decision horizon model.
Finally, Figure 10 depicts optimal number interactions coalition (in PCS model)
agent (in SAPS model) beginning search, function r. figure
used environment parameters used Figure 9. expected number
parallel interactions increases r decreases.
demonstrated throughout section, PCS outperforms sequential cooperative search. Generally, magnitude improvement depends size domain, search
cost structure, different utility functions used.

30

fiE NHANCING C OOPERATIVE EARCH

utility
2

7.7

utility

PCS

1

8.2



SAPS

4

SASS

PCS
1
3

8.3

SCS

SAPS
2

7.2
6.7

C ONCURRENT NTERACTIONS

4

7.8

SASS

6.2
7.3

5.7
5.2

6.8

3

4.7

SCS

4.2

6.3

3.7
3.2

5.8
1

5

9

13

1

4

7

10

13

limit number search rounds- r

Figure 9: average expected utility per buyer agent function limit number search

optimal # interactions

rounds, r

(1) Coalition B2C

8

(2) Coalition C2C
6

3

(3) Agent A1
2
(4) Agent A2

4

4
1
2

0

1

5

9

limit number search rounds- r

13

Figure 10: Optimal number interactions function decision horizon, r

9. Discussion Conclusions
capability using parallel interactions part search process inherent infrastructure autonomous information agents. using cooperative parallel search, coalition
use new strategy, different structure comparison optimal strategy used
cooperative sequential search single agents parallel search. expected, use new
model potential significantly improving coalitions expected utility demonstrated
previous section. Furthermore, emphasize coalitions expected utility never
decrease using proposed mechanism comparison pure sequential cooperative search.
mainly suggested algorithm converge one interaction time strategy,
used sequential cooperative search (which specific case model) case
31

fiM ANISTERSKI , ARNE , & K RAUS

maintaining single interaction world states favorable. Obviously
search cost linear depends solely number interactions maintained,
use coalition increase number sellers interacts given
search round. Nevertheless, scenarios coalitions search cost combines additional fixed
components non-linear dependency number interactions maintained much realistic (Sarne & Kraus, 2005). scenarios parallel cooperative search yields large benefits
searchers.
parallel cooperative search weakly dominates sequential cooperative search,
necessarily dominate autonomous search (where agents search instead
cooperatively). decision whether use parallel cooperative search autonomously
depends amount coalition overhead costs induced cooperative search. Therefore,
computational means developed work enables agents identify fruitful opportunities searching cooperatively. Generally, introduction parallel cooperative search
model substantially increases number scenarios agents prefer search cooperatively.
novelty analysis given paper threefold. First supplies us better
understanding space opportunities, dividing improving non-improving areas.
Thus, instead dual simultaneous dependencies states define single
directional dependency pair states. Second, supplies bound optimum number
parallel interactions coalition uses state optimal strategy. Third represent parallel search sequential process, without breaching model assumptions.
three features allow us overcome main complexity associated attempt solve
problem set equations proffer finite algorithm polynomial number
parallel interactions (rather brute-force algorithm exponential number
parallel interactions) inevitably reaches optimal strategy. Moreover, provide comprehensive analysis parallel model extracting optimal search strategy given finite
decision horizon. Here, illustrate, coalition benefit significantly infinite
decision horizon integration parallel interactions cooperative search. PCS
model (both finite infinite decision horizon forms) general applied
coalition regardless cost function preferences used agents. adaptation
additional markets (other C2C B2C) achieved appropriately modifying
allocation function used assigning agent one opportunities found along
search.
focus research finding optimal search strategy coalition, given
structure, opportunity distribution, reported members preferences. treats coalition unified entity sharing common goal (to maximize sum members utilities).
Nevertheless, various, important aspects coalition formation, context cooperative search, always correlate assumptions used therefore
addressed. example, may incentive coalition members misreport preferences side-payments used. Alternatively, agents may able form side coalitions,
free-ride actively searching coalitions single agent member actively
searching coalition (that member would act spy side coalition). Moreover,
environments agents may face tight budget constraints could violated within
coalition side-payments. analysis important issues based ability properly
derive coalitions utility given specific setting. paper supplies functionality, laying
32

fiE NHANCING C OOPERATIVE EARCH



C ONCURRENT NTERACTIONS

foundation enabling research. Future work encompass extend scope
research include additional topics associated coalition formation process,
coalition stability division payoffs coalition members. important
extensions include relaxation assumptions underlying opportunity model
(e.g., different deadlines different opportunities).

Acknowledgments
work supported part NSF grant IIS0705587 ISF. Kraus affiliated
UMIACS.

Appendix A. Summary Notations
Notation

Meaning

B = (B1 , B2 , ..., Bk )

set attributes defining potentially available opportunities market, attribute B
assigned value finite set (b imin , ..., bimax ).
space potential opportunity types coalition may encounter.
coalition agents.
Agent j utility opportunity type ~o.
search cost associated coalition n agents
maintaining w simultaneous interactions seller agents.
function maps given set opportunities known
coalition members way aggregated agents utility
maximized
state coalition acquainted set known known
opportunities.
set possible states coalition throughout search.
immediate utility coalition terminates search
given set known opportunities known .
coalitions expected utility using w parallel interactions
state s.
immediate utility obtained, coalition decides terminate search state s.
number parallel interactions coalition conducts
state according optimal strategy.
collection w-sized sets opportunities produced environment coalition operates.

Op

U j (~o)
c(w, n)
alloc(known )

state(known )
SA
Vt (known ):
V (s, w)
V (s, 0)
x (s)
w

33

fiM ANISTERSKI , ARNE , & K RAUS

Notation
pw (w )
simprovew
sstayw
Ss
pstay (s, w)
wsmax
winit
max
V new (s, k)

r
x (s, r)
V (s, r)

V (s, w, r)

Meaning
probability encountering specific set opportunities w ,
maintaining w random interactions seller agents.
collection w-sized sets opportunities, w , change
coalitions current state s.
collection w-sized sets opportunities, w ,
change coalitions current state s.
set states belonging SA , sorted according
termination utilities Vt (s).
probability agent stays state conducting
w parallel interactions.
upper bound optimal number parallel interactions
used coalition state s.
upper bound optimal number parallel interactions
used coalition begins search (s = {}).
coalitions expected utility obtained potentially reaching
new states (e.g. different s) executing k parallel interactions (without incorporating search cost conducting
k interactions), assuming future strategy uses x (s0 ) new
future state s0 .
Finite Decision Horizon
maximum number search rounds coalition
conduct.
coalitions optimal strategy state s, needs terminate
search within next r search rounds.
expected utility coalition restricted maximum r
search rounds, reaching state assuming acts optimally
throughout search.
coalitions expected utility conducts w interactions
next round terminate search within next r
rounds.

References
Avis, D., & Lai, C. (1988). probabilistic analysis heuristic assignment problem.
SIAM J. Comput., 17(4), 732741.
Bakos, Y. (1997). Reducing buyer search costs: Implications electronic marketplaces. Management Science, 42(12), 167692.
Baron, D. P., & Ferejohn, J. A. (1989). Bargaining legislatures. American Political Science
Review, 83(4), 11811206.
Benhabib, J., & Bull, C. (1983). Job search: choice intensity. J. Political Economy, 91(5),
747764.

34

fiE NHANCING C OOPERATIVE EARCH



C ONCURRENT NTERACTIONS

Breban, S., & Vassileva, J. (2001). Long-term coalitions electronic marketplace. B.
Spencer, ed., Proceedings E-Commerce Applications Workshop.
Burdett, K., & Malueg, D. A. (1981). theory search several goods. Journal Economic
Theory, 24, 362376.
Carlson, J. A., & McAfee, R. P. (1984). Joint search several goods. Journal Economic Theory,
32, 337345.
Choi, S., & Liu, J. (2000). Optimal time-constrained trading strategies autonomous agents.
Proceedings MAMA-2000, pp. 1113.
Dias, M. (2004). TraderBots: New Paradigm Robust Efficient Multirobot Coordination
Dynamic Environments. Ph.D. thesis, Robotics Institute, Carnegie Mellon University.
Gal, S., Landsberger, M., & Levykson, B. (1981). compound strategy search labor
market. International Economic Review, 22(3), 597608.
Gatti, J. (1999). Multi-commodity consumer search. Journal Economic Theory, 86(2), 219244.
Hart, P. E., Nilsson, N. J., & Raphael, B. (1968). formal basis heuristic determination
minimum cost paths. IEEE Transactions Systems, Science Cybernetics, 4(2), 100107.
Ito, T., Ochi, H., & Shintani, T. (2002). group-buy protocol based coalition formation
agent-mediated e-commerce. International Journal Computer Information Science
(IJCIS), 3(1), 1120.
Kahan, J., & Rapoport, A. (1984). Theories Coalition Formation. Hillsdale, NJ:Lawrence Erlbaum Associates.
Keeney, R., & Raiffa, H. (1976). Decisions Multiple Objectives: Preferences Value Tradeoffs. New York, US:John Wiley & Sons.
Kephart, J., & Greenwald, A. (2002). Shopbot economics. JAAMAS, 5(3), 255287.
Lermann, K., & Shehory, O. (2000). Coalition formation large scale electronic markets.
Proceedings ICMAS-00, pp. 167174.
Li, C., Rajan, U., Chawla, S., & Sycara, K. (2003). Mechanisms coalition formation cost
sharing electronic marketplace. Proceedings ICEC-03, pp. 68 77.
Lippman, S., & McCall, J. (1976). economics job search: survey. Economic Inquiry,
14(3), 155189.
Manisterski, E. (2007). Protocols Strategies Agents Teamwork. Ph.D. thesis, Department
Computing Science, Bar Ilan University.
McMillan, J., & Rothschild, M. (1994). Search. Aumann, R. J., & Sergiu Hart, A. (Eds.),
Handbook Game Theory Economic Applications, pp. 905927. Elsevier.
Morgan, P. (1983). Search optimal sample size. Review Economic Studies, 50(4), 659675.
Morgan, P., & Manning, R. (1985). Optimal search. Econometrica, 53(4), 923944.
Rothschild, M. (1974). Searching lowest price distribution prices unknown.
Journal Political Economy, 82(4), 689711.
Sandholm, T., Larson, K., Andersson, M., Shehory, O., & Tohme, F. (1999). Coalition structure
generation worst case guarantees. Artificial Intelligence, 111(1-2), 209238.
35

fiM ANISTERSKI , ARNE , & K RAUS

Sarne, D., & Kraus, S. (2003). search coalition formation costly environments.
Proceedings CIA-03, pp. 117136.
Sarne, D., & Kraus, S. (2005). Cooperative exploration electronic marketplace. Proceedings AAAI-05, pp. 158163.
Shehory, O., & Kraus, S. (1998). Methods task allocation via agent coalition formation. Artificial
Intelligence, 101(1-2), 165200.
Stigler, G. (1961). economics information. Journal Political Economy, 69(3), 213225.
Talukdar, S., Baerentzen, L., Gove, A., & de Souza, P. S. (1998). Asynchronous teams: Cooperation
schemes autonomous agents. Journal Heuristics, 4(4), 295321.
Tsvetovat, N., Sycara, K., Chen, Y., & Ying, J. (2000). Customer coalitions electronic markets.
Proceedings AMEC-00, pp. 121138.
Wang, Y., Makedon, F., & Ford, J. (2004). bipartite graph matching framework finding correspondences structural elements two proteins. Proceedings EMBC-04, Vol. 42,
pp. 297275.
Yamamoto, J., & Sycara, K. (2001). stable efficient buyer coalition formation scheme
e-marketplaces. Proceedings Agents-01, pp. 576583.

36


