journal artificial intelligence

submitted published

continuation method nash equilibria structured
games
ben blum

bblum cs berkeley edu

university california berkeley
department electrical engineering computer science
berkeley ca

christian r shelton

cshelton cs ucr edu

university california riverside
department computer science engineering
riverside ca

daphne koller

koller cs stanford edu

stanford university
department computer science
stanford ca

abstract
structured game representations recently attracted interest multiagent artificial intelligence scenarios rational behavior commonly characterized
nash equilibria presents efficient exact computing nash equilibria structured game representations including graphical games multi agent
influence diagrams maids derived continuation method
normal form extensive form games due govindan wilson follow trajectory space perturbed games equilibria exploiting game structure
fast computation jacobian payoff function theoretically
guaranteed least one equilibrium game may
provides first efficient computing exact equilibria graphical games
arbitrary topology first exploit fine grained structural properties
maids experimental presented demonstrating effectiveness comparing predecessors running time graphical game
similar often better running time previous approximate
maids effectively solve games much larger
solvable previous methods

introduction
attempting reason interactions multiple agents artificial intelligence
community recently developed interest game theory tool economics game
theory general mathematical formalism representation complex multiagent scenarios called games agents choose actions receive payoffs
depend outcome game number game representations
introduced past years exploit structure represent games efficiently
representations inspired graphical probabilistic reasoning
artificial intelligence literature include graphical games kearns littman singh
c

ai access foundation rights reserved

fiblum shelton koller

multi agent influence diagrams maids koller milch g nets la mura
action graph games bhat leyton brown
goal describe rational behavior game game theory description
behavior agents game referred strategy profile joint assignment
strategies agent basic criterion look strategy profile
optimal agent taken individually agent able improve utility
changing strategy fundamental game theoretic notion nash equilibrium nash
satisfies criterion precisely nash equilibrium strategy profile
agent improve payoff deviating unilaterally changing strategy
agents hold fixed types game theoretic solutions
nash equilibrium fundamental often agreed minimum solution
requirement
computing equilibria difficult several reasons first game representations
grow quite large however many games would interested
solving require full generality description leads large representation
size structured game representations introduced ai exploit structural properties
games represent compactly typically structure involves locality
interaction agents concerned behavior subset agents
one would hope compact representations might lead efficient computation equilibria would possible standard game theoretic solution
described mckelvey mclennan unfortunately even compact representations games quite hard solve present showing finding
nash equilibria beyond single trivial one np hard types structured games
consider
describe set computing equilibria structured
games perform quite well empirically family continuation
methods begin solution trivial perturbed game track solution
perturbation incrementally undone following trajectory space equilibria
perturbed games equilibrium original game found
recent work govindan wilson gw hereafter
applies standard game representations normal form extensive form
gw great interest computational game theory community
right nudelman et al tested leading
found certain cases effective available however
unstructured games infeasible large games
game structure exploited perform key computational step
gw give alternative presentation work
methods address graphical games maids several recent papers
presented methods finding equilibria graphical games many proposed kearns et al littman kearns singh vickrey koller ortiz
kearns focused finding approximate equilibria agent may
fact small incentive deviate sorts problematic
approximations must crude reasonable running times guarantee
exact equilibrium neighborhood approximate one
exact equilibria restricted narrow class games kearns et al


fia continuation method nash equilibria structured games

present first efficient finding exact equilibria graphical games arbitrary structure present experimental showing running time
similar often better running time previous approximate
moreover capable approximate starting
points finding exact equilibria
literature maids limited koller milch
takes advantage certain coarse grained structure maids otherwise falls
back generating solving standard extensive form games methods related types
structured games la mura limited coarse grained structure
currently unimplemented approximate approaches maids vickrey come
without implementation details timing provide first exact
take advantage fine grained structure maids present experimental
demonstrating solve maids significantly outside scope
previous methods
outline guide background material
require background several distinct areas including game theory continuation
methods representations graphical games representation inference bayesian
networks clearly outside scope provide detailed review
topics attempted provide topics sufficient background
allow understood
begin overview game theory section describing strategy representations payoffs normal form games single move games extensive form
games games multiple moves time concepts utilized
presented section thorough treatment available standard
text fudenberg tirole section introduce two structured game
representations addressed graphical games derived normal form games
maids derived extensive form games section give complexity computing equilibria graphical games maids proof deferred
appendix b next outline continuation methods general scheme
use compute equilibria section continuation methods form broad computational
framework presentation therefore necessarily limited scope watson
provides thorough grounding section describe particulars applying
continuation methods normal form games extensive form games presentation
methods exactly gw
section present main contribution exploiting structure perform
gw efficiently graphical games maids bayesian
network inference maids used perform key computational step gw
efficiently taking advantage finer grained structure previously possible
utilizes subroutine clique tree inference bayesian
networks although present clique tree method full describe
properties method allow used within provide
enough detail allow implementation standard clique tree
package black box comprehensive introduction inference bayesian


fiblum shelton koller

networks refer reader reference cowell dawid lauritzen spiegelhalter
section present running time variety graphical games
maids conclude section

game theory
begin briefly reviewing concepts game theory used referring
text fudenberg tirole good introduction use notation
employed gw readers familiar game theory may wish skip directly
table notation appendix
game defines interaction set n n n n n agents agent
n n set n available strategies strategy determines agents behavior
game precise definition set n depends
q game representation
discuss strategy profile n n n n nn n defines strategy
n n agent n n given strategy profile game defines expected
payoff gn agent n n use n refer set strategy profiles
agents n n agents n n n refer one profile
generalize notation n n set strategy profiles two agents
strategy profile n n strategy agent n n n strategy
profile n deviates play n agents act according
solution game prescription strategy profile agents
use nash equilibria solution concept strategy profiles agent
profit deviating unilaterally agent knew others playing according
equilibrium profile would change behavior would incentive
deviate notation outlined define nash equilibrium
strategy profile n n strategies n n
gn n n gn n n
define notion approximate equilibrium agents incentive deviate small equilibrium strategy profile agent
improve expected payoff unilaterally deviating
words n n strategies n n gn n n gn n n
unfortunately finding equilibrium necessarily step toward finding exact
equilibrium fact equilibrium guarantee existence exact
equilibrium neighborhood
normal form games
normal form game defines simultaneous move multi agent scenario agent independently selects action receives payoff depends actions selected
agents precisely let g normal form game set n agents
agent n n hasq
discrete action set payoff array gn entries every
action profile nn joint actions n
agents use refer joint actions agents n n


fia continuation method nash equilibria structured games

strategy representation
agents restricted choosing actions deterministically equilibrium guaranteed exist however agents allowed independently randomize actions
seminal game theory nash guarantees existence mixed strategy
equilibrium mixed strategy n probability distribution
strategy set n therefore defined probability simplex mixed
strategies support mixed strategy set actions non zero
probability strategy n agent n said pure strategy single
action support pure strategies correspond
exactly deterministic actions
q
set mixed strategy profiles nn n product simplices mixed
strategy single agent represented vector probabilities one
action notational simplicity later concatenate allpthese vectors regard
mixed strategy profile single vector nn vector
indexed actions nn action probability agent
n plays action note notational convenience every action associated
particular agent different agents cannot take action
payoffs
mixed strategy profile induces joint distribution action profiles compute
expectation payoffs respect distribution let gn represent
expected payoff agent n agents behave according strategy profile
calculate value
x

gn
gn
ak

aa

kn

general case fully mixed strategy profile every sum includes
every entry game array gn exponentially large number agents
extensive form games
extensive form game represented tree game proceeds sequentially
root non leaf node tree corresponds choice agent
nature outgoing branches represent possible actions taken node
natures choice nodes game definition includes probability distribution
outgoing branches points game something happens randomly
world large leaf z z tree outcome associated
vector payoffs g z gn z denotes payoff agent n leaf z choices
agents nature dictate path tree followed
choice nodes belonging agent partitioned information sets
information set set states among agent cannot distinguish thus agents
strategy must dictate behavior nodes information set set
agent ns information sets denoted set actions available information
set denoted define agent history hn node tree
agent n sequence containing pairs information sets belonging n
traversed path root excluding information set


fiblum shelton koller









b

b













b

















b





















figure simple agent extensive form game
contained action selected n one since actions unique information
sets action cant taken two different information sets omit
information sets represent history ordered tuple actions two nodes
agent n history paths used reach indistinguishable n
although paths may differ ways natures decisions decisions
agents make common assumption perfect recall agent forget
information known choices made previous decisions precisely two nodes
information set agent n hn hn
example game tree shown figure two agents alice bob alice
first chooses actions bob next chooses b b alice chooses
two set pair depends bobs choice information
sets indicated nodes connected dashed lines bob unaware alices actions
nodes information set alice aware bottom level
initial action bobs action nodes distinct information set
edges labeled probability agent whose action follow
note actions taken nodes information set must probability
distribution associated eight possible outcomes game
labeled pair payoffs alice bob respectively

strategy representation
unlike case normal form games several quite different choices strategy
representation extensive form games one convenient formulation terms behavior
strategies behavior profile b assigns information set distribution


fia continuation method nash equilibria structured games

actions probability agent n takes action information set
written b node write b abbreviation
b
methods primarily employ variant sequence form representation koller
megiddo von stengel romanovskii built upon behavior
strategy representation sequence form strategy n agent n represented
realization plan vector real values value realization probability
realization plan corresponds distinct history sequence hn agent n
nodes game tree sequences may partial records ns
behavior game proper prefixes larger sequences strategy representation
employed gw equivalent sequence form representation
restricted terminal sequences agent n histories least one leaf node
shall henceforth refer modified strategy representation simply sequence form
sake simplicity
agent n consider realization plan n vector realization
probabilities terminal sequences outcome z hn z abbreviated n z
probability agent ns choices allow realization outcome z
q words
product agent ns behavior probabilities along history hn z hn z b
several different outcomes may associated terminal sequence
agent n may fewer realization probabilities leaves tree set
realization plans agent n therefore subset ir n n number distinct
terminal sequences agent n number leaves tree
example example alice eight terminal sequences one
four information sets bottom level history one
last action realization probability equal b b b
bob two last actions whose realization probabilities exactly
behavior probabilities
realization probabilities non zero realization plans behavior strategies
one one correspondence probabilities zero many possible behavior strategy profiles might correspond realization plan described koller
megiddo affect work presented
q behavior strategy
profile b easily calculate realization probability n z hn z b
understand reverse transformation note map behavior strategies
full realization plans defined non terminal sequences
originally defined
q
koller megiddo defining n h h b intuitively n h
probability agent ns choices allow realization partial sequence h
observation compute behavior strategy extended realization plan partial sequence h extends sequence h one action namely action information set
belonging agent n compute b nn h
h extended realization
probabilities computed terminal realization probabilities recursive
procedure starting leaves tree working upward atpinformation set
agent n history h determined uniquely perfect recall n h aa n h
several different information sets agent n history h n h
computed multiple ways order terminal realization plan valid


fiblum shelton koller

must satisfy constraint choices information sets agent n history h must
give rise value n h formally partial sequence h

p constraints
p pairs information sets hn hn h

h


aa n
aa n h game tree example consider alices
realization probability expressed
two sums must

recursively defining realization probability sum realization probabilities longer sequences constraints expressed terms terminal realization
probabilities fact constraints linear probabilities several
constraints probabilities must nonnegative agent n n
empty sequence agent n history first information set agent n
encounters latter constraint simply enforces probabilities sum one together
linear constraints define convex polytope legal terminal realization plans
payoffs
agents play according payoff agent n extensive form game
x

gn
gn z
k z

zz

kn

augmented n include nature notational convenience
simply expected sum payoffs leaves agent
q k k z
product probabilities controlled n along path z thus kn k z
multiplication probabilities along path z precisely probability
z occurring importantly expression similar multi linear form payoff
normal form game realization plans rather mixed strategies
extensive form games expressed inefficiently normal form games
guaranteed equilibrium mixed strategies extensive form game
satisfying perfect recall mixed strategy profile represented payoff equivalent
behavior profile hence realization plan kuhn

structured game representations
artificial intelligence community recently introduced structured representations
exploit independence relations games order represent compactly
methods address two representations graphical games kearns et al
structured class normal form games maids koller milch structured
class extensive form games
graphical games
size payoff arrays required describe normal form game grows exponentially
number agents order avoid blow kearns et al introduced
framework graphical games structured representation inspired probabilistic graphical graphical games capture local structure multi agent interactions


fia continuation method nash equilibria structured games

allowing compact representation scenarios agents payoff affected
small subset agents examples interactions structure occurs include agents interact along organization hierarchies agents interact according
geographic proximity
graphical game similar definition normal form game representation
augmented inclusion interaction graph node agent
original definition assumed undirected graph easily generalizes directed graphs
edge agent n agent n graph indicates agent ns payoffs depend
action agent n precisely define famn set agents consisting
n parents graph agent ns payoff function gn array indexed
actions agents famn thus description game exponential
degree graph total number agents case use
fn afn refer strategy profiles action profiles respectively agents
famn n
example suppose l landowners along road running north south deciding
whether build factory residential neighborhood shopping mall plots
plots laid along road l grid half agents east side
e el half west side w wl agents payoff depends
builds neighbors north south across road build
example agent wants build residential neighborhood next factory agents
payoff matrix indexed actions four agents fewer ends road
entries opposed full l entries required equivalent normal form
game example due vickrey koller
multi agent influence diagrams
description length extensive form games grow exponentially number agents many situations large tree represented compactly
multi agent influence diagrams maids koller milch allow structured representation games involving time information extending influence diagrams howard
matheson multi agent case
maids influence diagrams derive much syntax semantics
bayesian network framework maid compactly represents certain type extensiveform game much way bayesian network compactly represents joint
probability distribution thorough treatment bayesian networks refer
reader reference cowell et al
maid representation
bayesian network maid defines directed acyclic graph whose nodes correspond
random variables random variables partitioned sets set x chance
variables whose values chosen nature represented graph ovals
agent n set dn decision variables whose values chosen agent n represented
rectangles agent n set un utility variables represented diamonds
chance decision variables domains finite sets possible actions
refer domain random variable v dom v chance decision variable


fiblum shelton koller

v graph defines parent set pav variables whose values choice v
depend utility variables finite sets real payoff values domains
permitted children graph represent components agents
payoffs game state
game definition supplies chance variable x conditional probability
distribution cpd p x pax conditioned values parent variables x
semantics chance variable identical semantics random variable
bayesian network cpd specifies probability action dom x
selected nature given actions taken xs parents game definition supplies
utility function utility node u utility function maps instantiation
pa dom pau deterministically real value u pa notational algorithmic
convenience regard utility function cpd p u pau
pa dom pau value u pa probability p u pa values
probability domain u simply finite set possible utility values
end game agent ns total payoff sum utility received uni un
index variable note component uni agent ns payoff depends
subset variables maid idea compactly decompose payoff
additive pieces
strategy representation
counterpart cpd decision node decision rule decision rule
decision variable dni dn function specified n mapping instantiation
pa dom padni probability distribution possible actions dom dni
decision rule identical form conditional probability distribution refer
notation p dni padni semantics chance node decision
rule specifies probability agent n take particular action dom dni
seen actions taken dni parents assignment decision rules dni dn
comprises strategy agent n agent n chooses strategy ns behavior dni
depends actions taken dni parents padni therefore regarded
set nodes whose values visible n makes choice dni agent ns choice
strategy may well take nodes account actual game play nodes
except padni invisible n
example extensive form game considered example represented
maid shown figure alice bob initial decision make without
information previous actions alice another decision make
aware bobs action alice bob one utility node
two condensed single node graph sake brevity whose payoff
structure wholly general dependent every action game thus whose possible
values exactly values payoff vectors extensive form game
example figure b shows complicated maid somewhat realistic
scenario three landowners along road deciding whether build store
house payoff depends happens adjacent along road
decision proceeds two stages stage building stage second


fia continuation method nash equilibria structured games


p

p

b

p

e

e

c



c

b

ab

c

b

r

l



b

r

l

b

figure simple maid equivalent extensive form game figure b
two stage road game three agents

landowner instance two decision variables p b receives certain
penalty utility node c builds opposite planned build
learns something neighbor left planned
chance node e represents noisy espionage transmits action taken p
learning value e may second landowners interests deviate
plan even means incurring penalty interest start trend
distinguishes previous builders subsequent builders follow utility
node l rewards building opposite built b utility node
r rewards third landowner builds thing b
note maid exhibits perfect recall choice made stage
visible agent makes next choice building stage
payoffs
particular strategy profile tuple strategies players
decision nodes cpds specified since chance utility nodes endowed cpds
already maid therefore induces fully specified bayesian network b variables
v x u directed graph maid chain rule bayesian
networks qb induces joint probability distribution p variables v
p v v v p v pav cpds chance utility variables given maid
definition cpds decision variables given game g represented
maid expected payoff agent n receives expectation ns utility
node values respect distribution
x
gn
ep uni
uni un



x

x

uni un udom uni



u p u

fiblum shelton koller

section related expectations calculated efficiently
bayesian network inference giving substantial performance increase
calculation payoffs extensive form game
extensive form strategy representations maids
maid provides compact definition extensive form game note although
correspondence maids extensive form games provides intuition
maids details mapping relevant remainder discussion
therefore briefly review construction referring work koller milch
details
game tree associated maid full balanced tree path corresponding complete assignment chance decision nodes network
node tree corresponds chance node decision node one
players outgoing branch possible action node nodes
depth tree correspond maid node assume nodes
along path tree ordered consistently ordering implied directed
edges maid maid node x parent maid node tree
branches x branches information sets tree nodes associated
decision node dni correspond assignments parents padni tree nodes
corresponding dni assignment padni single information set
note construction assignment padni determined earlier tree
partition information sets well defined example simple maid
figure expands much larger game tree saw earlier figure
translating opposite direction extensive form games maids
natural game tree unbalanced cannot simply reverse
process however care possible construct maid larger
given extensive form game may exponentially smaller number agents
details fairly technical omit interest brevity
despite fact maid typically much compact equivalent
extensive form game strategy representations two turn equivalent
equal size decision rule decision variable dni assigns distribution actions
joint assignment padni behavior strategy assigns distribution actions
information set extensive form game discussed assignment
parents dni information set strategy profile maid set decision
rules every decision variable therefore equivalent set behavior strategies
every information set simply behavior profile
make assumption perfect recall since maid strategies simply
behavior strategies represent sequence form perfect recall requires
agent forget anything learned course game maid
formalism perfect recall assumption equivalent following constraint agent
n two decision nodes dni dnj second occurring first
parents dni information n aware making decision dni dni must
parents dnj implies agent ns final decision node dnd parents ns
previous decision nodes parents joint assignment dnd padnd precisely


fia continuation method nash equilibria structured games

determines agent ns sequence information sets actions leading outcome
game agent n history outcome
realization probability particular sequence computed multiplying
behavior strategy probabilities actions sequence maids sequence corresponds joint assignment dnd padnd behavior strategy probabilities
sequence entries consistent assignment decision rules agent n
therefore derive agent ns realization probabilities multiplying
together conditional probability distributions decision rules agent ns decision nodes sequence multiplying conditional probability distributions
entries whose assignments consistent multiplied conversely
given realization plan derive behavior strategies hence decision rules
according method outlined extensive form games
simple maid example figure terminal sequences
equivalent extensive form game road example figure b agent
terminal sequences one joint assignment final decision node b
parents e p associated realization probabilities given multiplying
decision rules p b

computational complexity
developing compute equilibria efficiently question naturally arises
well one expect perform complexity computing
nash equilibria studied time gilboa zemel first showed
np hard one nash equilibrium normal form game
conitzer sandholm recently utilized simpler reduction arrive
several others vein recent hardness pertain restricted
subclasses normal form games e g chu halpern codenotti stefankovic
however apply agent normal form games true
proving certain subclass class np hard proves entire
class np hard np hardness measure worst case complexity
proof might tell us little complexity outside subclass
issue particularly apparent computing equilibria games
grow along two distinct axes number agents number actions per agent
hardness conitzer sandholm apply number actions
per agent increases agent normal form games fully connected graphical
games apply graphical games
however interested hardness graphical games number
agents increases rather number actions per agent graphical games
large numbers agents capture structure games
graphical game representation designed order prove
asymptotic hardness computing equilibria along interesting setting
axis representation size require different reduction proof number
previous hardness proofs games e g chu halpern conitzer sandholm
codenotti stefankovic reduces sat equilibrium computation however
previous proofs variables sat instances mapped actions sets actions


fiblum shelton koller

game players whereas reduction mapped agents although
differing reduction much spirit reduction appearing
work conitzer sandholm many corollaries main
follow form adapted graphical games
theorem constant k deciding whether
graphical game family size k actions per player
one nash equilibrium np hard
proof deferred appendix b
reduction games one equilibria least one pure
strategy equilibrium immediately gives us
corollary np hard determine whether graphical game one nash
equilibrium discretized strategies even coarsest possible granularity
finally graphical games represented trivial maids
agent single parentless decision node single utility node agents
utility node parents decision nodes graphical game family agent
obtain following corollary
corollary np hard determine whether maid constant family size least
one nash equilibrium

continuation methods
continuation methods form basis solving structured game representations begin high level overview continuation methods
referring reader work watson detailed discussion
continuation methods work solving simpler perturbed tracing
solution magnitude perturbation decreases converging solution
original precisely let scalar parameterizing continuum
perturbed perturbed original one
perturbed one solution known let w represent vector
real values solution perturbed defined characterize
solutions equation f w f real valued vector function
dimension w vector zeros function f w solution
perturbed f w
continuation method traces solutions along level set solution pairs w
satisfying f w specifically solution pair w would trace
solution nearby solution differential changes w must cancel
f remains equal
w changes direction unit vector u f change
direction


f u f jacobian f written w f f
want direction u f remains unchanged e equal thus need
solve matrix equation


dw
w f f





fia continuation method nash equilibria structured games

equivalently changes dw along path must obey w f dw f rather
inverting matrix w f solving equation use adjoint adj w f
still defined w f null space rank adjoint matrix cofactors
element j j times determinant sub matrix row
column j removed inverse defined adj w f det w f w f
practice therefore set dw adj w f f det w f jacobian
w f f null space rank everywhere curve uniquely defined
function f constructed curve starting guaranteed
cross point corresponding value w solution original
continuation method begins known solution null space
jacobian f current solution w defines direction along solution
moved small amount jacobian recalculated process repeats
tracing curve cost step computation least cubic
size w due required matrix operations however jacobian may
general much difficult compute watson provides simple examples
continuation methods

continuation methods games
review work gw applying continuation method task finding equilibria games provide continuation methods normal form
extensive form games form basis extension structured
games described next section continuation methods perturb game giving agents fixed bonuses scaled actions independently whatever
else happens game bonuses large enough unique dominate
original game structure agents need consider opponents actions
thus unique pure strategy equilibrium easily determined bonuses
continuation method used follow path space equilibrium
profiles resulting perturbed game decreasing zero point
corresponding strategy profile equilibrium original game
continuation method normal form games
make intuition precise beginning normal form games
perturbations
perturbation vector b vector values chosen random one action
game bonus ba given agent n owning action playing independently
whatever else happens game applying perturbation target game g gives
us game denote g b
g b n gn ba b made sufficiently large g b unique
equilibrium agent plays pure strategy ba maximal


fiblum shelton koller

characterization equilibria
order apply equation need characterize equilibria perturbed games
zeros function f structure theorem kohlberg mertens gw
continuation method path deriving equilibrium characterization
leads convergence perturbation vectors except set measure zero
present equilibrium characterization proofs characterization
methods convergence given govindan wilson
first define auxiliary vector function v g indexed actions payoffs
agent deviating play single action call v g deviation function
element vag corresponding single action owned agent n payoff
agent n deviates mixed strategy profile playing pure strategy
action
x


vag
gn
tk
tan

kn n

viewed component agent ns payoff derives action
strategy profile since bonuses given actions independently
effect bonuses v g independent vag measures payoff deviating
playing bonuses given precisely deviation v gb v g b
utilize retraction operator r irm defined gul pearce stachetti maps arbitrary vector w point space mixed
strategies nearest w euclidean distance given operator equilibrium
characterization follows
lemma gul et al strategy profile g r v g iff
equilibrium
although omit proof give intuition true
suppose fully mixed equilibrium every action non zero probability
single agent n vag must actions n
incentive deviate play single one let vn vector entries
v g corresponding actions n let n defined similarly vn scalar multiple
ones vector simplex n ns mixed strategies defined x
vn orthogonal n v g therefore orthogonal retracting v g onto
gives precisely reverse direction fully mixed strategy profile satisfying
r v g v g must orthogonal polytope mixed strategies
agent every pure strategy payoff therefore fact
equilibrium little care must taken dealing actions support
refer gul et al details
according lemma define equilibrium solution equation
r v g hand r w w irm
equivalent condition w r w v g r w equilibrium iff condition
satisfied easily verified therefore search point w irm
satisfies equality case r w guaranteed equilibrium
form continuation equation

f w w r w v g r w b



fia continuation method nash equilibria structured games

v g b deviation function perturbed game g b f w
zero r w equilibrium g b game unperturbed
f w iff r w equilibrium g
computation
expensive step continuation method calculation jacobian w f
required computation maintains constraint equation
w f v g r identity matrix hard part
calculation v g pure strategies n n value
location v g equal expected payoff agent n plays
pure strategy agent n plays pure strategy agents act according
strategy profile

x
gn
tk

tan
kn n
x



gn
tk

g
va


tan n



kn n n

g
va


computing equation
requires large number multiplications sum
q
space n kn n n ai exponentially large number agents
continuation method extensive form games
method applies extensive form games sequence form strategy representation
perturbations
normal form games game perturbed bonus vector b agent n owning
sequence h paid additional bonus bh playing h independently whatever else
happens game applying perturbation gives us game g b
z z g b n z gn z bhn z
bonuses large enough unique gw perturbed
game unique pure strategy equilibrium one realization probabilities
however calculating simple case normal form games
behavior strategies must calculated leaves upward recursive procedure
step agent owns node question chooses action
sequence largest bonus since actions recursively
determined action node question determines outcome realization
plans derived behavior profile method outlined section


fiblum shelton koller

characterization equilibria
first define vector function capturing benefit deviating given
strategy profile indexed sequences
x

k z

vhg
gn z
zzh

kn n

zh set leaves consistent sequence h interpretation
v g natural case normal form games possible agent
play one sequence exclusion others possible actions partially
determined actions agents case vhg regarded
portion payoff agent n receives playing sequence h unscaled agent ns
probability playing sequence normal form games vector bonuses
added directly v g v gb v g b
retraction operator r realization plans defined way normalform strategies takes general vector projects onto nearest point valid
region realization plans constraints defining space linear discussed
section therefore express constraint matrix c c
valid profiles addition probabilities must greater equal zero
calculate w must minimizing w w squared euclidean distance
w subject c quadratic program qp
solved efficiently standard methods jacobian retraction easily
computable set active constraints
equilibrium characterization realization plans surprisingly similar
mixed strategies normal form games gw equilibria
characterized r v g r retraction sequence form
v g deviation function continuation equation f takes exactly form
well
computation
key property reduced sequence form strategy representation deviation function multi linear function extensive form parameters shown
equation elements jacobian v g thus general structure particular element corresponding sequence h agent n sequence h
agent n

x
gn z
k z
h
zzh
kn n
x


gn z
k z

g
vh h


zzh h



kn n n

zh h set leaves consistent sequences h agent n
h agent n zh h empty set hence v g h h incompatible
equation precisely analogous equation normal form games sum
outcomes utility outcome multiplied strategy probabilities


fia continuation method nash equilibria structured games








figure abstract diagram path horizontal axis represents vertical
axis represents space strategy profiles actually multidimensional
starts right follows dynamical system
point found equilibrium original game
continue trace path equilibria labeled

agents note sum leaves tree may exponentially
numerous number agents
one additional subtlety must addressed method equilibrium computation extensive form games relates zero probability actions actions induce
probability zero entire trajectories tree possibly leading equilibria
unrealizable threats additionally information sets occur zero probability
agents behave arbitrarily without disturbing equilibrium criterion resulting continuum equilibria possible bifurcation continuation path prevents
methods converging therefore constrain realization probabilities greater
equal small fact requirement gws equilibrium
characterization hold thus looks perfect equilibrium fudenberg
tirole strategy profile component constrained
agents strategy best response among satisfying constraint note
entirely different equilibrium perfect equilibrium exists
long large make set legal strategies empty perfect equilibrium interpreted equilibrium perturbed game agents small
probability choosing unintended action limit perfect equilibria approaches
perfect equilibrium fudenberg tirole refinement basic notion
nash equilibrium approaches equilibria found gws therefore
converge exact perfect equilibrium continuity variation continuation
method path small enough perfect equilibrium vicinity
found perfect equilibrium easily found local search


fiblum shelton koller

path properties
case normal form games gw structure theorem kohlberg
mertens path one manifold without boundary
probability one choices b provide analogous structure theorem
guarantees property extensive form games figure shows abstract
representation path followed continuation method gw path
must cross hyperplane least yielding equilibrium fact path
may cross multiple times yielding many equilibria single run path must
eventually continue side odd number equilibria run
completion
normal form extensive form games path piece wise polynomial
piece corresponding different support set strategy profile pieces
called support cells path smooth cell boundaries due discontinuities
jacobian retraction operator hence w f support changes care
must taken step boundaries exactly following path point
jacobian support calculated path traced
support cell
case two agents path piece wise linear rather taking steps
jump corner corner along path applied
two agent game particular bonus vector used single entry nonzero steps support cell support cell takes identical
pivots lemke howson lemke howson two agent generalsum games two precisely set solutions govindan
wilson thus continuation method strict generalization lemkehowson allows different perturbation rays games two
agents
process described detail pseudo code presented
figure
computational issues
guarantees convergence apply long stay path defined dynamical system continuation method however computational purposes discrete
steps must taken error inevitably accumulates path traced
f becomes slightly non zero gw use several simple techniques combat
adopt techniques introduce one employ adaptive step
size taking smaller steps error accumulates quickly larger ones
f nearly linear example actions support
current strategy profile technique speeds computation significantly
gw use two different techniques remove error accumulated suppose
point w wish minimize magnitude f w w v g r w
b r w two values might change w b change first without
affecting guarantee convergence every steps run local newton method
search w minimizing f w search decrease error sufficiently
perform gw call wobble change perturbation vector wobble


fia continuation method nash equilibria structured games

continuation path make current solution consistent set b w v g r w
r w equilibrium characterization equation immediately satisfied changing
perturbation vector invalidates theoretical guarantees convergence however
nonetheless attractive option immediately reduces error zero
local newton method wobbles described detail govindan
wilson
techniques potentially send cycle practice
occasionally however necessary keeping path
cycles random restarts decrease step size improve convergence
sophisticated path following might used general could improve
success rate execution time
iterated polymatrix approximation
perturbed games may large number equilibria path
may wind back forth number continuation
take trace way back solution original game speed
initialization procedure iterated polymatrix approximation
ipa gw polymatrix game normal form game payoffs
agent n equal sum payoffs set two agent games involving
n another agent polymatrix games linear combination two agent
normal form games reduce linear complementarity solved
quickly lemke howson lemke howson
agent n n polymatrix game payoff array matrix b n indexed
n
actions agent n agent actions ba




payoff n receives playing game agent n n plays agent
ns
payoffs receives games agent
p total
ppayoff sum
n
n n
aan ba given normal form game g strategy profile
construct polymatrix game p whose payoff function jacobian
gs setting
g
n

ba
va
game p linearization g around jacobian everywhere gw
equilibrium g equilibrium p follows
equation v g v g n holds see
holds consider single element indexed
x
x
x

v g

gn
tk
n n n



x

x

n n n

tan

kn n n

tan n

gn



tk

kn n

g

n v
equilibrium characterization equation therefore written

r v g n


fiblum shelton koller

g p value v thus equilibrium characterization
function satisfies one satisfies
define mapping p p equilibrium p specifically
first equilibrium found lemke howson p
equilibrium g ipa procedure govindan wilson aims
fixed point begins randomly chosen strategy profile calculates p
running lemke howson adjusts toward p approximate
derivative estimate p built past two iterations p sufficiently
close terminates approximate equilibrium
ipa guaranteed converge however practice quickly moves near
good solution possible point calculate perturbed game close
original game essentially one differs amount gs polymatrix
approximation differs g found approximate equilibrium fact
exact equilibrium continuation method run starting point
exact equilibrium original game continuation method guaranteed
converge starting point however practice found
converge long ipa configured search high quality equilibrium approximations
although theoretical required quality ipa refine starting
point continuation method fails ipa quick start
substantially reduces overall running time
fact use approximate quick start
without guarantees convergence given approximate equilibrium inverse
image r defined set linear constraints let w v g
use standard qp methods retract w nearest point w satisfying
constraints let b w w r w r v g b
continuation method path alternatively choose b wobbling case
set b w v g r w r w

exploiting structure
continuation method foundation game representation
calculation v g step b pseudo code figure different
consumes time normal form worst case extensiveform games requires exponential time number agents however
section structured representation graphical game maid
effectively exploit structure game drastically reduce computational
time required
graphical games
since graphical game normal form game definition deviation function
v g equation vag payoff agent n deviating
play deterministically however due structure graphical game choice
strategy agent outside family n affect agent n payoff
observation allows us compute payoff locally


fia continuation method nash equilibria structured games

input game g
set choose initial b quick start procedure e g ipa randomizing set
w v g b
greater negative threshold e still good chance picking
another equilibrium
initialize current support cell set steps counter number steps take
crossing cell depending current amount error f linear nearly linear
example strategy profile nearly pure agents set steps
cross entire cell
b steps
compute v g
ii set w f w v g r w already know f b set dw
adj w f b det w f satisfy equation
iii set equal distance wed go direction dw reach next support
boundary scale dw steps
iv change signs course step record equilibrium point

v set w w dw steps steps
vi sufficient error accumulated use local newton method w minimizing
f w reduce error enough increase steps thereby decreasing step
size already increased steps perform wobble reassign b
vii set steps steps

figure pseudo code cont
jacobian graphical games
begin definition v g normal form games modified slightly account
local payoff arrays recall afn set action profiles agents famn
n let afamn set action profiles agents famn
divide sum full action profiles two sets switching
normal form version gn graphical game version gn follows
x

vag
gn
tk
tan



x
uafn

kn n

gn u



uk

x



v j



kfamn n vafamn jn famn

note latter sum product simply sum probability distribution hence
equal due constraints thus eliminated without
changing value v g takes valid strategy profiles however partial derivatives
respect strategies agents famn non zero enter computation v g
suppose wish compute row jacobian matrix corresponding action
agent n must compute entries action agent n n trivial
g since appear anywhere expression
case n n va


vag next compute entries action agent n famn


fiblum shelton koller

case
g
va


x


gn u

f



gn u

uafn



x








v j



uk

kfamn n



gn

tafn n

x

vafamn jn famn

kfamn n

uan

x

uk

kfamn

n famn

tk



n n

next compute entry single action agent n
famn derivative
equation takes different form case variable question second
summation first
x

x


g
va
v j
gn u
uk


f


x

gn u



x



uk

gn u

uafn



x

vafamn

kfamn n

uafn

vafamn jn famn

kfamn n

uan

uk






v j

jn famn

n famn



kfamn n

notice calculation depend therefore action
agent famn need compute elements row
copy value columns actions belonging agents famn
computational complexity
due graphical game structure computation v g takes time exponential
maximal family size game hence takes time polynomial number
agents family size constant particular methods lead following
theorem complexity continuation method graphical games
theorem time complexity computing jacobian deviation function
v g graphical game f df n n f maximal family size
maximal number actions per agent
proof consider single row jacobian corresponding single action owned
single agent n f entries row actions owned
g
members famn one action computation jacobian element va

f

according equation takes time total cost entries therefore
f df n f entries actions owned non familyg calculated time
members value va

f

copied across row time n f computational cost
row f df n n rows total computational
cost n f df n


fia continuation method nash equilibria structured games

p

p

p

b

b

b


b



b

figure strategic relevance graphs maids figure b figure b

iteration calculates v g therefore proved
single iteration takes time polynomial n f constant fact matrix operations make
complexity cubic n however normal form games theoretical
many steps continuation method required convergence
maids
graphical games exploitation structure straightforward turn
difficult exploiting structure maids take advantage two
distinct sets structural properties first coarse grained structural measure known
strategic relevance koller milch used previous computational
methods decomposing maid according strategic relevance relations
exploit finer grained structure extensive form continuation method gw
solve components equivalent extensive form game next two sections
describe two kinds structure
strategic relevance
intuitively decision node dni strategically relevant another decision node dnj agent
n order optimize decision rule dnj needs know agent ns decision rule
dni relevance relation induces directed graph known relevance graph
decision nodes appear edge node dnj node dni present iff dni
strategically relevant dnj event relevance graph acyclic decision
rules optimized sequentially reverse topological order children
node dni decision rules set decision rule dni optimized
without regard nodes
cycles exist relevance graph however steps must taken within
strongly connected component scc set nodes directed path
two nodes exists relevance graph decision rules cannot optimized sequentially
linear ordering nodes scc node must optimized one


fiblum shelton koller

children impossible koller milch maid
decomposed sccs solved individually
example relevance graph maid figure shown figure
one scc consisting b another consisting maid would
first optimize decision rule optimal decision rule rely
decision rules b makes decision alice already knows
actions taken b need know decision rules led
would turn chance node cpd specified optimized decision
rule optimize decision rules b relevance graph figure b
shown figure b forms single strongly connected component
computational method koller milch stops strategic relevance
scc converted equivalent extensive form game solved standard
methods viewed augmentation method maid
decomposed sccs solve sccs methods taking
advantage finer grained maid structure within equilibria efficiently
maids test including road maid figure b
strongly connected relevance graphs cannot decomposed see figure b
figure
jacobian maids
maid equivalent extensive form game deviation function v g
one defined equation however compute payoffs make
jacobian v g efficiently consider payoff gn z agent n outcome z
outcome z simply assignment x variables maid realization
probability n z product
q probabilities decisions agent n
assignment x product kn k z realization probabilities simply joint
probabilitypof assignment
expected payoff agent n receive strategy
q
profile zz gn z kn k z therefore expectation gn z expectation
respect distribution p defined bayesian network b whose structure
maid decision node cpds determined
entries v g strictly expected payoffs however equation
rewritten
q
x gn z
kn k z
g
vh h


n z n z
zzh h

expectation quantity gn z n z n z payoff gn z sum agent
ns utility nodes due linearity expectation perform computation separately
agent ns utility nodes simply add separate contributions
therefore restrict attention computing contribution single utility
node un agent n furthermore value n z depends values
set nodes n consisting ns decision nodes parents thus instead
computing probabilities assignments variables need compute
marginal joint distribution un n n distribution
compute contribution un expectation equation every pair terminal
sequences belonging agents n n


fia continuation method nash equilibria structured games

p

p

p

e

e

c

c

b

c

b

r

l

p e
b b

e p
b b

p e
b b

e p
b b

b

r

l



b

figure two stage road maid three agents shown divided cliques
four cliques surrounded dashed line three decision nodes
chance node b resultant clique tree

bayesian network inference
analysis reduces required computations significantly rather computing
separate expectation every pair sequences h h might first seemed
necessary need compute one marginal joint distribution variables un
n n every pair agents n n marginal joint distribution one defined
bayesian network b naively computation requires execute bayesian
network inference n times ordered pair agents n n fact
exploit structure maid perform computation much efficiently
basis method standard clique tree lauritzen spiegelhalter
clique tree fairly complex detailed presentation outside
scope choose treat black box describing
properties relevant understanding used within
computation note details suffice allow method implemented
one many shelf implementations clique tree reader
wishing understand clique tree derivation detail referred
reference cowell et al complete description
clique tree bayesian network b data structure defined undirected
tree set nodes c node ci c corresponds subset variables
b typically called clique clique tree satisfies certain important properties
must family preserving node x b exists clique ci c
x pax ci satisfies separation requirement c lies unique path
c c joint distribution defined b variables c must
conditionally independent c given c
division agent road maid cliques shown figure
maid cliques notice every family contained clique including families
chance nodes utility nodes clique tree maid shown figure b


fiblum shelton koller

clique maintains data structure called potential table entry
joint assignment variables clique table sort generally called
factor inference typically use two basic operations factors factor product
factor marginalization f g two factors possibly overlapping sets
variables x respectively define product fg factor
x entry fg particular assignment variables x
product entries f g corresponding restriction assignment x
respectively notion multiplication corresponds way conditional
probability distributions multiplied marginalize sum variable x
factor f x way
pwe would sum variable joint
probability distribution factor xp
f variables x x
entry particular assignment variables x f equal sum entries
f compatible assignment one value x
factor entry every joint assignment variables size
potential ci exponential ci clique tree inference proceeds
passing messages factors one clique another tree messages
used update potential receiving clique factor multiplication
process messages sent directions edge tree
tree said calibrated point potential every clique ci contains precisely
joint distribution variables ci according b details refer
reference cowell et al
use clique tree perform inference b consider final
decision node agent n due perfect recall assumption ns previous decisions
parents parents decision node family preservation
property therefore implies n fully contained clique implies
family utility node contained clique expectation equation
thus requires computation joint distribution three cliques tree one
containing paun one containing n one containing n need compute
joint distribution every pair agents n n
first key insight reduce one computing joint marginal distribution pairs cliques tree assume computed pb ci cj
every pair cliques ci cj consider triple cliques ci cj ck two
cases one cliques path two first
case assume without loss generality cj path ci ck case
separation requirement pb ci cj ck pb ci cj pb cj ck pb cj
second case exists unique clique c lies path pair
cliques separation property c renders cliques conditionally
independent compute
pb ci cj ck

x pb ci c pb cj c pb ck c
pb c

c





thus reduced one computing marginals pairs
cliques calibrated clique tree use dynamic programming execute process
efficiently construct table contains pb ci cj pair cliques ci cj
construct table order length path ci cj base case ci


fia continuation method nash equilibria structured games

cj adjacent tree case pb ci cj pb ci pb cj pb ci
cj probability expressions numerator simply clique potentials
calibrated tree denominator obtained marginalizing two
cliques fact expression computed byproduct calibration process
marginalization required cliques ci cj adjacent let ck
node adjacent cj path ci cj clique ck one step closer
ci construction already computed p ci ck apply
separation property

pb ci cj

x pb ci ck pb ck cj
pb ck

ck





computational complexity
theorem computation v g performed time u n
number cliques clique tree g size largest clique
number entries potential n number agents u total
number utility nodes game
proof cost calibrating clique tree b cost computing
equation single pair cliques must compute factor
variables three cliques summing must perform computation
times pair cliques total cost compute marginal
joint probabilities triples cliques pauni n n every utility node uni every
agent n n u n triples computing factor
variables three cliques may first require computing factor variables four
cliques cost given factor computing expected value utility
node takes time affect asymptotic running time total cost
computing marginal joint probabilities expected utilities therefore u n
total cost computing v g u n

method shown single iteration continuation method
accomplished time exponential induced width graph number
variables largest clique clique tree induced width optimal clique
tree one smallest maximal clique called treewidth network
although finding optimal clique tree np hard good heuristic
known cowell et al games interactions agents
highly structured road maid example size largest clique
constant even number agents grows case complexity computing
jacobian grows quadratically number cliques hence number
agents note matrix adjoint operation takes time cubic least
n single step along path actually cubic computational cost


fiblum shelton koller




cont
ipa cont
vk









seconds

seconds

cont
ipa cont
vk

























agents

















agents







b





x


cumulative





terminating run






seconds iteration

iterations

cont
cubic fit





















agents






c





agents





figure l road game rock scissors payoffs running time
road game random payoffs b running time c number
iterations cont average time per iteration cont


performed run time tests wide variety graphical games
maids tests performed intel xeon processor running ghz
gb ram although memory never taxed calculations
graphical games
graphical games compared two versions cont simple continuation method ipa cont continuation method ipa initialization tested
hybrid equilibrium refinement vickrey koller vk hereafter


fia continuation method nash equilibria structured games






cont
ipa cont
vk



cumulative



terminating run



iterations


seconds

x


























agents



















agents







b






x

cont

cumulative

ipa cont





terminating run

vk

iterations

seconds






















agents









c






agents





figure ring game random payoffs running time b number
iterations cont l l grid game random payoffs c running
time number iterations cont

comparison parameters used vk returns
equilibria exact methods exist comparable
run two classes games defined vickrey koller
two additional classes road game example denoting situation
agents must build land plots along road played l grid agent three
actions payoffs depend actions grid neighbors following vk
ran road games additive rock scissors payoffs agents
payoffs sum payoffs independent rock scissors games
neighbors game fact polymatrix game hence easy solve
methods order test typical examples experimented


fiblum shelton koller

road games entries payoff matrix agent chosen uniformly
random experimented ring graph three actions per
agent random payoffs finally order test games increasing treewidth
experimented grid games random payoffs defined manner
road games except game graph l l grid
class games chose set game sizes run selected
randomly cases payoffs random set test games solve
solved game cont ipa cont vk cont started different
random perturbation vector time recorded time number iterations
necessary reach first equilibrium ipa cont started different initial
strategy profile ipa time recorded total time ipa cont reach
first equilibrium
equilibria found error essentially machine
precision hybrid refinement vk found equilibria average error
road games rock scissors payoffs road games grid
games random payoffs ring games random payoffs although
equilibria error high road games ring games
smaller games converged equilibrium larger
games cont ipa detected entered cycle terminated without finding
equilibrium maintaining hash table support cells passed
already cont ipa able detect entered support cell
second time although sure sign entered cycle strong
indicator potential cycles detected restarted
random initialization values note cycles execution cont never arise
stray path dictated theory gw random
restarts reflect failure follow path accurately
equilibrium eventually found cumulative time random
restarts recorded error bars running time graphs variance due
number random restarts required choices initialization values random
games choice game
random restarts required games tested average restarts
necessary games note figure skewed larger games
occasionally required many restarts largest games sometimes required restarts
large graphical games random road games random ring games ipa
converge restarts cases record ipa cont cont
found equilibrium within restarts shown figures b c
figures b c
random roads plotted number iterations time per iteration
cont figures c number iterations varies game
perturbation vector chosen however time per iteration almost exactly cubic
predicted note ipa used quick start cont invariably converged
immediately within second time spent ipa
road games methods efficient smaller games become costly due polymatrix nature rock scissors road games
ipa cont solves immediately lemke howson


fia continuation method nash equilibria structured games

therefore significantly less expensive vk random ring games
efficient vk smaller games agents ipa cont performing considerably better cont however road games running time
grows rapidly vk larger games become
impractical nevertheless performed well games agents
actions per agent previously intractable exact
l l grid games performed much better vk see figures c without ipa quick start reflects fact running time
complexity depend treewidth graph

equilibria

















players



runs

figure number unique equilibria found function size game
number runs averaged ten random ring games

examined number equilibria found ipa cont ran
ipa cont ring graphical game differing numbers agents number
agents fixed random games ran times game recorded
cumulative number unique equilibria found average number equilibria found
games number agents plotted figure small games
presumably small number equilibria number equilibria found quickly saturated
large games almost linear increase number equilibria found
subsequent random restart implying run produced
set solutions
maids
previous computational method maids koller milch stopped strategic
relevance scc converted equivalent extensive form game solved
standard methods takes advantage structure game already decomposed according strategic relevance test cases therefore
selected relevance graphs consisting single strongly connected component


fiblum shelton koller



na

b

ab

nb

c

bc




b

c

b

figure chain game b strategic relevance graph case three
agents b c

order ascertain much difference enhancements made compared
maid maid cont achieved converting game
extensive form running ef cont extensive form version cont specified
gw gambit mckelvey mclennan turocy standard game theory software
package time required conversion extensive form included
ran two classes games varying sizes first
refer chain game alternates decision chance nodes see figure
decision node belongs different agent agent two utility nodes
connected decision node neighbors except end agents
one utility node single neighbor three actions decision node
probability tables payoff matrices chosen uniformly random second
class two stage road building game example shown figure b
class chose payoffs carefully hand ensure non trivial mixed strategy equilibria
ran chain games sizes road games sizes
size randomly selected perturbation vectors games
road games since payoffs set hand chain games
payoffs randomly assigned tested games initialized
perturbation vectors averaged across test cases timing appear
figures b error bars reflect variance due choice game chain
games choice perturbation vector number random restarts required
cases graphical game tests maid cont failed equilibrium terminating early detected entered cycle cases
restarted perturbation vector successfully terminated
equilibrium eventually found cumulative time random restarts
recorded course test runs two chain games required random restart
size failed frequently road games spike
road games size reflects fact games size required average


fia continuation method nash equilibria structured games




cont
ef cont
gambit







cont
ef cont
gambit






seconds

seconds
































agents





















agents













b




cont
cubic fit







seconds iteration

iterations


























agents










c








agents



figure maids running times chain maid two stage
road maid b running time c number iterations time per iteration

random restarts equilibrium found strangely maid cont much
successful road game size succeeding without random restarts two
cases
tested gambit ef cont smaller games time memory
requirements testing larger ones beyond means
ef cont faster gambit extensive form games inadequate
larger maids able solve maid cont surprising
road game size decision chance nodes equivalent extensive form game
tree million outcome nodes maids size bayesian network
inference techniques used become necessary


fiblum shelton koller

maids realization probabilities constrained least e
found perfect equilibria accuracy equilibria within
machine precision
graphical games recorded number iterations convergence well
time per iteration maid cont appear figures c time
per iteration fit well cubic curve accordance theoretical predictions
variance primarily due execution retraction operator whose running time
depends number strategies support

discussion conclusions
described two adaptations continuation method gw
purpose accelerated execution structured games
represent significant advances state art equilibrium computation
graphical games maids
related work graphical games
last years several papers addressed issue finding equilibria structured games graphical games exact proposed far apply games
interaction structure undirected tree agent two
possible actions kearns et al provide exponential time compute
exact equilibria game littman et al provide polynomial time
compute single exact equilibrium limited set games
may preferable since come running time guarantees
however yet tested whether fact efficient practice moreover methods applicable fully general games indicate
perform well
effort focused computation equilibria general graphical
games number recently proposed task
use discretized space mixed strategies probabilities must selected grid
simplex made arbitrarily fine computational reasons however
grid must typically quite coarse number grid points consider grows
exponentially number actions per agent methods implicitly
explicitly define equilibrium set constraints discretized strategy space
use constraint solving method kearns et al use tree propagation
kls vickrey koller use standard csp variable elimination methods
vk ortiz kearns use arc consistency constraint propagation followed
search ok vickrey koller propose gradient ascent vk
provide hybrid refinement method computation reduce
equilibrium error
exact methods kls restricted tree structured games
comes without experimental running time although guaranteed run
polynomial time kearns et al give suggestion working non tree graph
constructing junction tree passing messages therein however necessary
computations clear potentially expensive


fia continuation method nash equilibria structured games

vk applicable graphical games arbitrary topology
number actions per agent takes time exponential treewidth graph
treewidth constant scales linearly number agents however
quickly becomes infeasible treewidth expands grid
game
methods come complexity guarantees depend treewidth
graph others ok vk well insensitive treewidth
single iteration takes time polynomial size game representation
hence exponential maximum degree graph however require
unknown number iterations converge corollary shows general computation
equilibria discretized strategies games fixed degree hard thus lack
complexity guarantees methods surprising
nonetheless experimental ok seem promising indicate
average relatively iterations required convergence indicate ok
capable solving grid games least agents although cases
large much better random fully mixed strategy profile however
running time provided
vk exhibits strong experimental vickrey koller successfully found equilibria games agents errors maximal
payoff
main drawback compute equilibria equilibrium may sufficient certain applications utility functions
approximate agent certainly might satisfied best response make
assumption slightly costly agents change minds agent might
need incentive greater deviate however equilibria bring set
primary one guarantee exact equilibrium
neighborhood equilibrium make difficult equilibria
small values attempts refine given equilibrium may fail lack nearby
nash equilibrium implies certain instability agent unsatisfied
equilibrium play may deviate quite far finally equilibria numerous
nash equilibria uncountably general exacerbates difficulty agent
faces choosing equilibrium play
computing equilibria frequently faster especially
approximations crude games agents however
exact equilibria found satisfying solutions
performance comparable approximate methods
cases surprisingly many games running time
fastest available particularly case games large treewidth grid
game test cases furthermore since use approximate equilibrium
starting point advances approximate methods complement
method hybrid vickrey koller turns unsuited
purpose tends remove pure strategies support
interesting see whether methods including listed might
effective remains seen small must methods reliably refine
approximate equilibrium


fiblum shelton koller

related work maids
koller milch km define notion dependence agents decisions
relevance provide decompose solve maids
fairly coarse independence structure able exploit finer grained
structure resolving open left km general method automatically exploit structure obtained decomposing game relevance
components methods best regarded complement km decomposition according relevance applied equilibria
efficiently decomposed running time indicate methods
significantly faster previous standard extensive form games
unsurprising since game representation test cases exponentially larger
number players converted extensive form
vickrey proposes approximate hill climbing maids takes
advantage sort fine grained structure bayesian network inference
employed calculate expected utility one component score function single
iteration constraint satisfaction proposed however proposals
never implemented hard determine quality equilibria would
quickly would
la mura proposes continuation method finding one equilibria
g net representation similar maids proposal exploits
limited set structural properties strict subset exploited km
proposal never implemented several issues regarding non converging paths
seem unresolved
therefore first able exploit finer grained structure
maid moreover applied conjunction decomposition method
km able take advantage full known independence structure maid
potential drawback requirement strategies perturbed however decreasing
incurs additional computational cost although limits imposed machine
precision perfect equilibria highly desirable refinement nash equilibria defined
limit sequence perturbed equilibria goes zero therefore
computed effectively little additional computational cost
sense use perturbed strategies advantageous implemented
local search exact perfect equilibrium neighborhood found
perturbed equilibrium although straightforward
conclusion work
presented two related computing exact equilibria structured
games methods gw perform key computational
steps methods much efficiently exploiting game structure
yields first exact take advantage structure general graphical games
first take full advantage independence structure maid
capable computing exact equilibria games large numbers
agents previously intractable exact methods


fia continuation method nash equilibria structured games

come without theoretical running time bounds noticed certain interesting trends graphical game maid version
iteration executes time polynomial number agents examined
number iterations required convergence adaptive step size technique decreases
number random restarts required equilibrium increases number
iterations required cross support cell larger games adaptive step size
disabled noticed number iterations required averaged across games
random payoffs seems grow approximately linearly intuitively makes sense
number iterations least linear starting pure strategy profile
linear number actions number agents must enter support order us
reach general strategy profile support boundary requires least one iteration
somewhat surprising however number iterations required
grow quickly interesting open analyze number
iterations required convergence
large games tendency cycle increases phenomenon
attributed partially cumulative effect wobbling great number
wobbles possible path altered sufficiently pass
equilibrium noticed games seem intrinsically harder
others requiring many random restarts convergence large games
overall running time therefore quite unpredictable
might improved number ways importantly continuation method would profit greatly sophisticated path following methods
number cases cont maid cont failed equilibrium strayed
far path better path following techniques might greatly increase reliability
particularly obviated need wobbles negate gws
theoretical guarantee convergence continuation method
number theoretical questions gw
remain unresolved nothing known worst case average case running time
ipa theoretical bounds exist number iterations required cont
interesting speculate choice perturbation ray might affect execution
directed toward particular equilibria interest
careful selection perturbation ray change continuation
method way selecting perturbation rays equilibria found
way selecting perturbation ray speed execution time
several improvements might made maid cont adapted ipa use
maids possible making use generalized lemke
koller megiddo von stengel solve intermediate linearized maids
computation v g might accelerated variant pairs clique tree
computes potentials pairs sepsets sets variables shared
adjacent cliques rather pairs cliques
work suggests several interesting avenues fact
initial publication blum shelton koller least one
application techniques already developed bhat leyton brown
shown adaptation cont used efficiently solve class structured games called action graph games generalization local effect games presented


fiblum shelton koller

leyton brown tennenholtz believe games structured
representations great promise enablers applications game theory
several advantages unstructured counterparts well suited games
large number agents determined fewer parameters making feasible
human researchers fully specify meaningful way built structure
makes intuitive medium frame structured real world scenarios
however avoid computational intractability general class
structured games requires equilibrium computation hypothesize
cont ipa excellent starting point addressing need

acknowledgments work supported onr muri grant n
air force contract f darpas task program special
thanks robert wilson kindly taking time guide us details
work srihari govindan david vickrey aiding us testing
alongside thank anonymous referees helpful comments


fia continuation method nash equilibria structured games

appendix table notation
notation games
n
set agents
n
strategy agent n
n
strategy space agent n

strategy profile

space strategy profiles
n
strategy profile restricted agents n
n
space strategy profiles agents n
n n strategy profile agent n plays strategy n agents act
according n
gn
expected payoff agent n strategy profile
g
v
vector deviation function
r
retraction operator mapping points closest valid strategy profile
f
continuation method objective function

scale factor perturbation continuation method
w
free variable continuation method
notation normal form games

action agent n

set available actions agent n

action profile

set action profiles

action profile restricted agents n

space action profiles agents n
notation extensive form games
z
leaf node game tree outcome
z
set outcomes

information set

set information sets agent n

set actions available information set
hn
sequence history agent n determined node
zh
set outcomes consistent sequence history h
b
probability behavior profile b agent n choose action
n z
realization probability outcome z agent n
notation graphical games
famn
set agent n agent ns parents
f
n
strategy profiles agents famn n
f

space action profiles agents famn n
notation maids
dni
decision node index belonging agent n
uni
utility node index belonging agent n
pax
parents node x
dom joint domain variables set


fiblum shelton koller

c

c



c


b


b

c

b
c

c

figure reduction sat instance b c b c b c
graphical game

appendix b proof theorem
proof proof reduction sat given sat instance construct
graphical game whose equilibria encode satisfying assignments variables
let c c c cm clauses sat instance question let v
v v v v vn vn set literals variable appears one clause
immediately assigned satisfy clause therefore assume variables
appear least two clauses
construct undirected graphical game clause ci create
agent ci connected ci ci except c cm one clause
neighbor create agents vi literal ci
example ci clause v v agents viv viv connect
ci every variable v group agents viv vjv connect line
way connected clauses order unimportant
clause agents neighbors two clauses side three
literals literal agents neighbors two literals side
one clause completely specifies game topology example figure shows
graphical game corresponding sat abc abc abc
define actions payoff structure agent interpreted
boolean variable two actions true false correspond boolean
values true false intuitively clause ci plays true satisfied agent
viv plays true v non negated variable v assigned true vjv
plays true v assigned false
payoff matrix clause agent ci designed ensure one clause
unsatisfied entire sat instance marked unsatisfied best expressed
pseudo code follows
ci
clause neighbors play false
playing false
payoff
playing true
else least one ci literals plays true ci satisfied


fia continuation method nash equilibria structured games


payoff




playing false
playing true

else
ci unsatisfied

playing false
payoff
playing true
end
payoff matrix literal agent vi designed encourage agreement
literals along line variable v associated described
pseudo code follows
parent
clause ci plays false
playing consistently false assignment v
payoff
playing opposite
else vi sliteral neighbors play consistently single assignment v
playing consistently neighbors
payoff
playing opposite
else

playing consistently false assignment v
payoff
playing opposite
end
formula satisfying assignment pure equilibrium
literal consistent assignment clauses play true fact
agents receive higher payoffs case equilibrium satisfying
assignments correspond equilibria maximum social welfare
parent clauses play false clearly equilibrium non negated literals
must play false negated literals must play true trivial equilibrium
remains trivial equilibrium equilibrium unsatisfiable formulas e non trivial equilibrium used construct satisfying assignment
first prove two simple claims
claim nash equilibrium clauses play true probability one
clauses play false probability one
proof case advantageous clause choose true false neighbor
clause takes action false fact disadvantageous thus clause
non zero probability playing false equilibrium neighbors consequently
clauses must play false probability one therefore possible equilibria
clauses playing false clauses playing true
follows immediately claim every non trivial equilibrium clauses
playing true probability one
claim non trivial nash equilibrium line literals variable
v literals play pure strategies must choose consistently single
assignment v


fiblum shelton koller

proof since equilibrium non trivial clauses play true suppose one
literals v employs pure strategy corresponding false assignment v suffices
fact literals line must pure strategies corresponding false


assignment v consider neighbor v v v neighbors one
v play consistently false assignment v case v must play
consistently false assignment v neighbors play inconsistently case

else clause v payoff matrix applies v must play consistently
false assignment v may proceed way line manner
literals line must therefore pure strategies consistent false assignment
v contradicting literals

suppose non trivial equilibrium claim clauses must play
true probability literals pure strategies clear
equilibrium corresponds satisfying assignment literals must consistent
assignment claim clauses must satisfied subtleties arise
consider mixed strategy equilibria
note first clause payoff choosing true choosing false case satisfying assignment literals less case
unsatisfying assignment therefore unsatisfying assignment non zero
probability clause must play false
consider single clause ci assumed choosing true equilibrium mixed
strategies ci literals induce distribution joint
ci plays true
w actions

joint action non zero probability must satisfy vi literal vi mixed
strategy consider happen change strategy one possible
pure strategies true false joint actions non zero probability

ones remain subset originals still satisfy
w removed
essentially value affect satisfiability c assigned
v


arbitrarily
thus literal line certain variable mixed strategy assign
variable true false give literal line corresponding
pure strategy without making clauses connected literals unsatisfied
fact literals line pure strategies consistent
indeed literals pure strategies assign variable according
claim case

observe briefly constructed graphical game finite number
equilibria even peculiarities sat instance give rise equilibria mixed
strategies clauses play false one equilibrium clauses play true
remove graph trim payoff matrices literals
accordingly line literals case generic graphical game finite set
equilibria equilibria original game must subset direct product
finite sets


fia continuation method nash equilibria structured games

references
bhat n r leyton brown k computing nash equilibria action graph
games proceedings twentieth international conference uncertainty
artificial intelligence
blum b shelton c koller continuation method nash equilibria
structured games proceedings eighteenth international joint conference
artificial intelligence pp
chu f halpern j np completeness finding optimal strategy
games common payoff international journal game theory
codenotti b stefankovic computational complexity nash equilibria
bimatrix games information processing letters
conitzer v sandholm complexity nash equilibria proceedings eighteenth international joint conference artificial intelligence
pp
cowell r g dawid p lauritzen l spiegelhalter j probabilistic
networks expert systems springer verlag
fudenberg tirole j game theory mit press
gilboa zemel e nash correlated equilibria complexity considerations games economic behavior
govindan wilson r structure theorems game trees proceedings
national academy sciences
govindan wilson r global newton method compute nash equilibria
journal economic theory
govindan wilson r computing nash equilibria iterated polymatrix
approximation journal economic dynamics control
gul f pearce stachetti e bound proportion pure strategy
equilibria generic games mathematics operations
howard r matheson j e influence diagrams howard r matheson j e eds readings principles applications decision analysis
vol pp strategic decision group article dated
kearns littman l singh graphical game theory
proceedings seventeenth international conference uncertainty artificial
intelligence pp
kohlberg e mertens j f strategic stability equilibria econometrica

koller megiddo n complexity two person zero sum games extensive
form games economic bahavior
koller megiddo n von stengel b efficient computation equilibria
extensive two person games games economic behavior


fiblum shelton koller

koller milch b multi agent influence diagrams representing solving
games proceedings seventeenth international joint conference artificial
intelligence pp
kuhn h w extensive games information contributions
theory games ii eds h w kuhn w tucker vol pp
princeton university press princeton nj
la mura p game networks proceedings sixteenth international conference uncertainty artificial intelligence pp
lauritzen l spiegelhalter j local computations probabilities
graphical structures application expert systems journal royal
statistical society b
lemke c e howson jr j equilibrium points bimatrix games journal
society applied mathematics
leyton brown k tennenholtz local effect games proceedings
eighteenth international joint conference artificial intelligence pp
littman l kearns singh efficient exact singly
connected graphical games advances neural information processing systems
vol pp
mckelvey r mclennan computation equilibria finite games
handbook computational economics vol pp elsevier science
mckelvey r mclennan turocy l gambit software tools
game theory version http econweb tamu edu gambit
nash j non cooperative games annals mathematics
nudelman e wortman j shoham leyton brown k run gamut
comprehensive evaluating game theoretic third international conference autonomous agents multi agent systems
ortiz l e kearns nash propagation loopy graphical games advances
neural information processing systems vol pp
romanovskii reduction game complete memory matrix game
doklady akademii nauk sssr english translation soviet mathematics

vickrey multiagent solving structured games undergraduate
honors thesis stanford university
vickrey koller multi agent solving graphical games
proceedings eighteenth national conference artificial intelligence aaai
pp
von stengel b efficient computation behavior strategies games economic
behavior
watson l theory globally convergent probability one homotopies nonlinear programming siam journal optimization




