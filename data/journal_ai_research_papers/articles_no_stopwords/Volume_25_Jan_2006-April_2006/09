journal artificial intelligence

submitted published

representing conversations scalable overhearing
gery gutnik
gal kaminka

gutnikg cs biu ac il
galk cs biu ac il

computer science department
bar ilan university
ramat gan israel

abstract
open distributed multi agent systems gaining interest academic community
industry open settings agents often coordinated standardized
agent conversation protocols representation protocols analysis validation monitoring etc important aspect multi agent applications recently petri
nets shown interesting representation radically
different approaches petri nets proposed however relative strengths
weaknesses examined moreover scalability suitability
different tasks addressed addresses challenges first
analyze existing petri net representations terms scalability appropriateness overhearing important task monitoring open multi agent systems
building insights gained introduce novel representation colored petri
nets explicitly represent legal joint conversation states messages representation offers significant improvements scalability particularly suitable
overhearing furthermore representation offers comprehensive coverage conversation features fipa conversation standards present
procedure transforming auml conversation protocol diagrams standard humanreadable representation colored petri net representation

introduction
open distributed multi agent systems mas composed multiple independently built
agents carry mutually dependent tasks order allow inter operability agents
different designs implementation agents often coordinate standardized interaction protocols conversations indeed multi agent community investing
significant effort developing standardized agent communication languages acl facilitate sophisticated multi agent systems finin labrou mayfield kone shimazu
nakajima chaibdraa fipa site standards define communicative acts top interaction protocols ranging simple queries
state another agent complex negotiations auctions bidding contracts
instance fipa contract net interaction protocol fipa specifications b defines
concrete set message sequences allows interacting agents use contract
net protocol negotiations
formalisms proposed describe standards e g smith cohen
parunak odell parunak bauer b auml site particular aumlagent unified modelling languageis currently used fipa acl standards
c

ai access foundation rights reserved

figutnik kaminka

fipa specifications b c odell parunak bauer uml
auml site emerging standard influenced auml potential
become fipa acl standard forthcoming ieee standard future however moment large set fipa specifications remains formalized auml
auml intended human readability visualization interaction protocols
ideally represented way amenable automated analysis validation
verification online monitoring etc
lately increasing interest petri nets petri nets site modelling
multi agent interaction protocols cost cost chen finin labrou peng
lin norrie shen kremer nowostawski purvis cranefield purvis
hwang purvis cranefield schievink cranefield purvis nowostawski hwang
ramos frausto camargo mazouzi fallah seghrouchni haddad
poutakidis padgham winikoff broad literature petri nets
analyze aspects distributed systems e g deadlock detection shown
khomenco koutny recent work specific uses petri nets
multi agent systems e g validation testing desel oberweis zimmer
automated debugging monitoring poutakidis et al dynamic interpretation
interaction protocols cranefield et al de silva winikoff liu modelling
agents behavior induced participation conversation ling loke
interaction protocols refinement allowing modular construction complex conversations
hameurlain
however key questions remain open use petri nets conversation representation first radically different approaches representation petri nets
proposed relative strengths weaknesses investigated second
many investigations addressed restricted subsets features needed representing complex conversations standardized fipa see detailed discussion
previous work section finally procedures proposed translating
human readable auml protocol descriptions corresponding machine readable petri
nets
addresses open challenges context scalable overhearing
overhearing agent passively tracks many concurrent conversations involving multiple participants solely exchanged messages participant
overheard conversations novick ward busetta serafini singh zini
kaminka pynadath tambe poutakidis et al busetta dona nori
legras gutnik kaminka rossi busetta overhearing useful visualization progress monitoring kaminka et al detecting failures
interactions poutakidis et al maintaining organizational situational awareness novick ward legras rossi busetta non obtrusively
identifying opportunities offering assistance busetta et al instance
overhearing agent may monitor conversation contractor agent engaged multiple
contract net protocols different bidders bid callers order detect failures
begin analysis petri net representations respect scalability
overhearing classify representation choices along two dimensions affecting scalability
fipa specifications c currently deprecated however use specification since describes
many important features needed modelling multi agent interactions



firepresenting conversations scalable overhearing

technique used represent multiple concurrent conversations ii choice
representing individual joint interaction states runtime complexity monitoring conversations different approaches choices
along two dimensions significantly different space requirements thus
choices scalable number conversations others argue
representations suitable overhearing require use explicit message places though
subset previously explored techniques utilized
building insights gained presents novel representation uses
colored petri nets cp nets places explicitly denote messages valid joint
conversation states representation particularly suited overhearing number
conversations scaled representation used represent
essentially features fipa auml conversation standards including simple complex interaction building blocks communicative act attributes message guards
cardinalities nesting temporal aspects deadlines duration
realize advantages machine readable representations debugging
poutakidis et al existing human readable protocol descriptions must converted
corresponding petri net representations final contribution
provide skeleton semi automated procedure converting fipa conversation protocols
auml petri nets demonstrate use complex fipa protocol
procedure fully automated takes first step towards addressing open challenge
organized follows section presents motivation work
sections present proposed representation addressing fipa conversation features including basic interaction building blocks section message attributes
section nested interleaved interactions section temporal aspects section
section ties features together presents skeleton transforming
auml protocol diagram petri net representation demonstrates use challenging fipa conversation protocol section concludes rounds three
appendixes first provides quick review petri nets complete coverage
fipa interactions appendix b provides additional interaction building blocks appendix c
presents petri net complex conversation protocol integrates many features
developed representation technique

representations scalable overhearing
overhearing involves monitoring conversations progress tracking messages
exchanged participants gutnik kaminka interested representations facilitate scalable overhearing tracking many concurrent conversations
many agents focus open settings complex internal state control logic agents known advance therefore exclude discussions petri net
representations explicitly model agent internals e g moldt wienberg xu
shatz instead treat agents black boxes consider representations
commit agents conversation state e role progress conversation
suitability representation scalable overhearing affected several facets
first since overhearing tracking messages representation must able
explicitly represent passing message communicative act one agent another


figutnik kaminka

section second representation must facilitate tracking multiple concurrent
conversations tracking runtime bounded number messages
since case messages overheard processed space requirements may differ
significantly see sections
message monitoring versus state monitoring
distinguish two settings tracking progress conversations depending
information available tracking agent first type setting refer
state monitoring tracking agent access internal state conversation
one participants necessarily messages exchanged
settings involves message monitoring tracking agent access
messages exchanged externally observable cannot directly observe
internal state conversation participant overhearing form message
monitoring
representations support state monitoring use places denote conversation
states participants tokens placed places net marking denote
current state sending receiving message participant explicitly
represented instead implied moving tokens transition firings
state places thus representation essentially assumes internal conversation
state participants directly observable monitoring agent previous work utilizing
state monitoring includes work cost cost et al lin et al
mazouzi et al ramos et al
representation present intended overhearing tasks cannot
assume conversation states overheard agents observable instead must
support message monitoring addition tokens state places denote
current conversation state representation uses message places tokens placed
corresponding message overheard conversation state place message
place connected via transition state place denoting conversation state
tokens placed originating placesindicating message received appropriate
conversation statewill cause transition fire tokens placed
conversation state place thus conversation state inferred observing
message previous investigations used explicit message places include work
cost cost et al nowostawski et al purvis et al
cranefield et al poutakidis et al discussed depth
representing single conversation
two representation variants popular within utilize conversation places
addition message places individual state representations use separate places tokens
state participant role thus overall state conversation
represented different tokens marking multiple places joint state representations use
single place joint conversation state participants placement token
cost cost et al present examples state message monitoring representations



firepresenting conversations scalable overhearing

within place represents overhearing agents belief participants
appropriate joint state
previous representations use individual states different markings distinguish conversation state one agent sent message state
agent received net conversation role essentially built separately
merged nets connected via fusion places similar means
cost cost et al used cp nets individual state places
representing kqml fipa interaction protocols transitions represent message events
cp net features token colors arc expressions used represent auml
message attributes sequence expressions authors point deadlines
temporal aspect interaction modelled implementation details provided
cost proposed hierarchical cp nets represent hierarchical multi agent
conversations
purvis et al cranefield et al represented conversation roles separate
cp nets places denote interaction messages states transitions represent operations performed corresponding communicative acts send receive
process special places used pass net tokens different cp nets
special get put transitions simulating actual transmission corresponding
communicative acts
principle individual state representations require two places role every
message given message would two individual places sender
sending sending similarly two receiver receiving
receiving possible conversation statesvalid notcan represented
single message two roles two places role four places total four
possible conversation states message sent received sent received sent
incorrectly believed received sent received states
represented different markings instance conversation state message
sent received denoted token sending place sender
another token receiving place receiver summarized
following proposition
proposition given conversation r roles total possible messages
individual state representation space complexity r
representations represent roles conversation state separately
many applications overhearing require representation valid conversation states
message sent received sent received indeed specifications interaction protocols often assume use underlying synchronization protocols guarantee
delivery messages paurobally cunningham paurobally cunningham jennings assumption every message two joint states
regardless number roles example single message three rolesa
sender two receivers two places two possible markings token
sending receiving place represents conversation state message
yet sent sender two receivers waiting token
sending receiving place denotes message sent received
receivers


figutnik kaminka

nowostawski et al utilize cp nets places denote joint conversation states
utilize places representing communicative acts poutakidis et al proposed
representation place transition nets pt nets restricted representation
petri nets color presented several interaction building blocks
could fit together model additional conversation protocols general following
proposition holds respect representations
proposition given conversation r roles total possible messages
joint state representation represents legal states space complexity
condition representing valid states critical complexity analysis
joint conversation statesvalid invalidare represented space complexity would
r case individual state representation would advantage
would case instance assume use synchronization protocols
e g overhearing agent may wish track exact system state even
message underway e sent yet received
representing multiple concurrent conversations
propositions address space complexity representing single conversation however large scale systems overhearing agent may required monitor
multiple conversations parallel instance overhearing agent may monitoring
middle agent carrying multiple parallel instances single interaction protocol
multiple partners e g brokering fipa specifications
previous investigations propose duplicate appropriate petri net representation monitored conversation nowostawski et al poutakidis et al
every conversation tracked separate petri net thus number
petri nets associated tokens grows number conversations proposition instance nowostawski et al shows example contract net
protocol carried three different contractors three duplicate cp nets
captured following proposition
proposition representation creates multiple instances conversation petri net
represent c conversations requires c net structures c bits tokens
investigations take different single cp net structure used
monitor conversations protocol tokens associated conversations
differentiated token color cost cost et al lin et al
mazouzi et al cranefield et al purvis et al ramos et al
example assigning token color tuple type hsender receiveri agent
differentiate multiple tokens place thus track conversations different pairs
agents color tokens use multiple bits per token log c bits required differentiate c conversations therefore number bits required track c conversations
c tokens c log c leads following proposition
see section distinguish different conversations agents



firepresenting conversations scalable overhearing

proposition representation uses color tokens represent c multiple instances
conversation requires net structures c log c bits tokens

due constants involved space requirements proposition practice
much expensive proposition proposition refers creation
c petri networks duplicated place transition data structures contrast
proposition refers bits required representing c color tokens single cp net
moreover practical settings sufficiently large constant bound number
conversations may found essentially reduce log c factor
propositions possible make concrete predictions scalability
different approaches respect number conversations roles table shows
space complexity different approaches modelling c conversations
protocol maximum r roles messages assumption
underlying synchronization protocols table cites relevant previous work

individual
states
proposition
joint
states
proposition

representing multiple conversations protocol
multiple cp pt nets
color tokens single cp net
proposition
proposition
space r c log c
cost cost et al
space rc
lin et al cranefield et al
purvis et al ramos et al
mazouzi et al
space c
space c log c
nowostawski et al

poutakidis et al
table scalability different representations

building insights gained table propose representation cp nets
places explicitly represent joint conversation states corresponding lower right
cell table tokens color used distinguish concurrent conversations
upper right cell table related works features
table demonstrates novel synthesis
representation uses similar structures found works nowostawski
et al poutakidis et al however contrast previous investigations rely token color cp nets model concurrent conversations space
complexity c log c sections used cover
variety conversation features covered investigations features include
representation full set fipa interaction building blocks communicative act attributes
message guards sequence expressions etc compact modelling concurrent conversations nested interleaved interactions temporal aspects


figutnik kaminka

representing simple complex interaction building blocks
section introduces fundamentals representation demonstrates simple complex auml interaction messages used fipa conversation standards
fipa specifications c implemented proposed cp net representation begin simple conversation shown figure auml protocol
diagram agent sends asynchronous message msg agent













fffi












auml representation















b cp net representation

figure asynchronous message interaction
represent agent conversation protocols define two types places corresponding
messages conversation states first type net places called message places
used describe conversation communicative acts tokens placed message places indicate
associated communicative act overheard second type net places
agent places associated valid joint conversation states interacting agents
tokens placed agent places indicate current joint state conversation within
interaction protocol
transitions represent transmission receipt communicative acts agents
assuming underlying synchronization protocols transition originates within jointstate place message place targets joint conversation state one
possiblesee normally current conversation state known marked
token must wait overhearing matching message denoted token
connected message place token marked transition fires automatically
marking conversation state
figure b presents cp net representation earlier example figure cpnet figure b three places one transition connecting b
b places agent places msg place message place b capital
letters used denote agent agent individual interaction states respectively
indicated individual joint interaction states auml diagram
figure omit annotations later figures thus b place indicates
joint interaction state agent ready send msg communicative act agent
agent waiting receive corresponding message b msg message
place corresponds msg communicative act sent two agents thus
transmission msg communicative act causes agents transition b


firepresenting conversations scalable overhearing

place place corresponds joint interaction state agent already sent
msg communicative act agent agent received b
cp net implementation figure b introduces use token colors
represent additional information interaction states communicative acts
token color sets defined net declaration e dashed box figure b
syntax follows standard cpn ml notation wikstrom milner harper
tofte jensen agen color identifies agents participating
interaction used construct two compound color sets
inter state color set associated agent places represents agents
appropriate joint interaction states record ha agen
color elements distinguishing interacting agents apply inter state color
set model multiple concurrent conversations cp net second color
set sg describing interaction communicative acts associated message places
sg color token record ar ar correspond sender
receiver agents associated communicative act cases additional elements
conversation identification may used see section additional details
figure b b b places associated inter state
color set msg place associated sg color set place color set
written italic capital letters next corresponding place furthermore use
r agen color type variables denote net arc expressions thus given
output arc expression b msg places hs ri r
elements agent place token must correspond r elements message
place token consequently net transition occurs agents message
correspond interacting agents b place input arc expression hr si following
underlying intuition agent going send next interaction communicative
act
figure shows auml representation another interaction building block synchronous message passing denoted filled solid arrowhead msg communicative act sent synchronously agent agent meaning acknowledgement
msg communicative act must received agent interaction may
proceed
corresponding cp net representation shown figure b interaction starts
b place terminates b place b place represents joint
interaction state agent ready send msg communicative act agent
agent waiting receive corresponding message b b place denotes
joint interaction state agent already sent msg communicative act
agent agent received b however since cp net diagram represents
synchronous message passing msg communicative act transmission cannot cause
agents transition directly b place b place therefore define
intermediate b agent place place represents joint interaction state agent
received msg communicative act ready send acknowledgement
b agent waiting acknowledgement taken together msg
communicative act causes agents transition b place b place
acknowledgement msg message causes agents transition
b place b place


figutnik kaminka









































auml representation

b cp net representation

figure synchronous message interaction
transitions typical multi agent interaction protocols composed interaction
building blocks two presented additional interaction buildingblocks fairly straightforward appeared previous work e g poutakidis
et al presented appendix b remainder section present two
complex interactions building blocks generally common multi agent interactions
xor decision parallel
begin xor decision interaction auml representation building
block shown figure sender agent agent send message msg
agent message msg agent send msg msg non filled
diamond x inside auml notation constraint





















































auml representation

b cp net representation

figure xor decision messages interaction
figure b shows corresponding cp net b c capital letters
used denote interaction states agent agent agent respectively


firepresenting conversations scalable overhearing

interaction starts b c place terminates b place
c place b c place represents joint interaction state agent ready
send msg communicative act agent msg communicative act agent
agent agent waiting receive corresponding msg msg message
b c represent b c place color set extend inter state color
set denote joint interaction state three interacting agents e interstate color set msg communicative act causes agents transition b
place b place represents joint interaction state agent sent msg
message agent received b similarly msg communicative act causes
agents agent agent transition c place exclusiveness achieved since
single agent token b c place used activating b c b
transition activating b c c transition
similar complex interaction parallel messages interaction auml representation presented figure sender agent agent send message msg
agent message msg agent non filled diamond auml notation
constraint


fffi





















fffi




fffi






fffi



auml representation












fffi



b cp net representation

figure parallel messages interaction
figure b shows cp net representation parallel interaction interaction starts b c place terminated b place
c place represent inclusiveness interaction protocol define
two intermediate places b place c place b place represents
joint interaction state agent ready send msg communicative act agent
agent waiting receive message b c place similar meaning respect agent normally done petri nets transition connecting
b c place intermediate places duplicates single token b c place
two tokens going b c places consequently two parts
parallel interaction independently executed

representing interaction attributes
extend representation allow additional interaction aspects useful describing multi agent conversation protocols first represent interaction


figutnik kaminka

message attributes guards sequence expressions cardinalities content fipa
specifications c explore depth representation multiple concurrent
conversations cp net
figure shows simple agent interaction auml protocol diagram
interaction similar one presented figure previous section however
figure uses auml message guard conditionmarked condition
following semantics communicative act sent agent agent
condition true













fffi fffi





auml representation















b cp net representation

figure message guard condition
guard condition implementation petri net representation uses transition
guards figure b native feature cp nets auml guard condition mapped
directly cp net transition guard cp net transition guard indicated
net inscription next corresponding transition square brackets transition
guard guarantees transition enabled transition guard true
figure b extend color tokens include information
communicative act used content extend sg color set definition
record hs r ci r elements interpretation previous
section sender receiver c elements define message type content
respectively element color p e determines communicative act
types c element color con en represents communicative act
content argument list e g reply reply etc
addition elements allows additional potential uses instance
facilitate representation multiple concurrent conversations agents
r possible add conversation identification field sg
inter state colors simplicity refrain examples

two additional auml communicative act attributes modelled cp
representation message sequence expression message cardinality sequenceexpressions denote constraint message sent sender agent number
sequence expressions defined fipa conversation standards fipa specifications c
denotes message sent exactly times n denotes message sent
anywhere n times denotes message sent arbitrary number


firepresenting conversations scalable overhearing

times additional important sequence expression broadcast e message sent
agents
explain representation sequence expressions cp nets broadcast
example figure b sequence expressions easily derived example
define inter state card color set color set tuple ha consisting
two elements first tuple element inter state color element denotes
interacting agents previously defined second tuple element integer
counts number messages already sent agent e message cardinality
element initially assigned inter state card color set applied
r place r capital letters used denote sender
receiver individual interaction states respectively r indicates initial joint
interaction state interacting agents two additional colors used figure b
broadcast list arget colors broadcast list color defines
sender broadcast list designated receivers assuming sender must
list carry role arget color defines indexes broadcast list







fffi



























b c


ddd b b b

auml representation

b cp net representation

figure broadcast sequence expression
according broadcast sequence expression semantics sender agent sends
msg communicative act receivers broadcast list cp net introduced figure b behavior interaction starts r place
representing joint interaction state sender ready send msg communicative act receiver receiver waiting receive corresponding msg
message r r place initial marking single token set initialization expression underlined next corresponding place initialization expression hs arget given standard cpn ml notationdetermines r
places initial marking multi set containing single token hs arget thus
first designated receiver assigned agent index broadcast list
message cardinality counter initiated
implement broadcast iterative procedure sending corresponding communicative act separately designated recipients



figutnik kaminka

msg message place initially contains multiple tokens tokens represents msg communicative act addressed different designated receiver
broadcast list figure b initialization expression corresponding msg message place omitted r place token appropriate msg place token
together enable corresponding transition consequently transition may fire thus
msg communicative act transmission simulated
msg communicative act sent incrementally every designated receiver
broadcast list incoming arc expression hs ri incremented transition
outgoing hs arget arc expression causing receiver agent
index broadcast list selected transition guard constraint size
e broadcast list ensures msg message sent broadcast list
times msg communicative act causes agents transition r place
place represents joint interaction state sender already sent msg
communicative act receiver waiting receive msg message
receiver received msg message ready send msg communicative act
sender r finally msg message causes agents transition r
place r place denotes joint interaction state sender received msg
communicative act receiver terminated receiver already sent
msg message sender terminated well r
use figure b demonstrate use token color represent multiple concurrent
conversations cp net instance let us assume sender agent
called agent broadcast list contains following agents agent agent agent
agent agent assume agent already sent msg communicative act agents broadcast list however received msg
reply message agent agent thus cp net current marking complete
interaction protocol described follows r place marked hagent agent
hagent agent hagent agent r place contains tokens hagent agent
hagent agent
example construct cp net representation fipa query interaction
protocol fipa specifications shown auml form figure demonstrate
building blocks presented sections put together interaction
protocol initiator requests p articipant perform inform action one two
query communicative acts query query ref p articipant processes query
makes decision whether accept ref use query request initiator may request
p articipant respond accept ref use message simplicity
assume case case query request accepted
p articipant informs initiator query p articipant fails
communicates f ailure successful response p articipant replies one
two versions inform inform f inform depending type initial query
request
cp net representation fipa query interaction protocol presented figure interaction starts p place use p capital letters
denote initiator p articipant roles p place represents joint
interaction state initiator agent ready send query communicative act query ref message p articipant ii p articipant wait

firepresenting conversations scalable overhearing

fffi






fffi


fffi



fifi
fifi
fifi






fifi



fffi

figure fipa query interaction protocol auml representation

ing receive corresponding message p initiator send query
query ref communicative act assume acts belong class
query communicative act class thus implement messages single
query message place check message type following transition guard
msg query msg query ref query communicative act causes
interacting agents transition p place place represents joint interaction
state initiator sent query communicative act waiting receive
response message p articipant received query communicative act
deciding whether send agree ref use response message initiator p
ref use communicative act causes agents transition p place agree
message causes agents transition p place
p articipant decision whether send agree ref use communicative
act represented xor decision building block introduced earlier figure b
p place represents joint interaction state initiator received ref use
communicative act terminated p articipant sent ref use message
terminated well p p place represents joint interaction state initiator
received agree communicative act waiting response


figutnik kaminka









fffi











b










aff



































fffi





























fffi




































c e








fffi


fffi















c
e



figure fipa query interaction protocol cp net representation

p articipant p articipant sent agree message deciding
response send initiator p point p articipant agent may send one
following communicative acts inform f inform f ailure choice
represented another xor decision building block inform f informresult communicative acts represented single inf orm message place f ailure
communicative act causes transition p place inf orm message causes
transition p place p place represents joint interaction state
p articipant sent f ailure message terminated p initiator received
f ailure terminated p place represents joint interaction state
p articipant sent inf orm message terminated p initiator received
inf orm terminated
implementation query query ref message guard conditions requires detailed discussion implemented usual manner view fact
depend original request communicative act thus create special intermediate place contains original message type marked original essage ype
figure case inf orm communicative act sent transition guard verifies
inf orm message appropriate original query type thus inform f
communicative act sent original query type query
inform message sent original query type query ref


firepresenting conversations scalable overhearing

representing nested interleaved interactions
section extend cp net representation previous sections model nested
interleaved interaction protocols focus nested interaction protocols nevertheless discussion addressed interleaved interaction protocols similar
fashion
fipa conversation standards fipa specifications c emphasize importance
nested interleaved protocols modelling complex interactions first allows reuse interaction protocols different nested interactions second nesting increases
readability interaction protocols
auml notation annotates nested interleaved protocols round corner rectangles odell et al fipa specifications c figure shows example
nested protocol figure b illustrates interleaved protocol nested protocols
one compartments first compartment name compartment
name compartment holds optional name nested protocol nested protocol
name written upper left hand corner rectangle e commitment figure second compartment guard compartment holds optional nested protocol
guard guard compartment written lower left hand corner rectangle e g
commit figure nested protocols without guards equivalent nested protocols
true guard











fffi






fffifi










nested protocol

b interleave protocol

figure auml nested interleaved protocols examples
figure describes implementation nested interaction protocol presented
figure extending cp net representation hierarchies relying standard cp net methods see appendix hierarchical cp net representation contains
three elements superpage subpage page hierarchy graph cp net superpage
represents main interaction protocol containing nested interaction cp net
subpage corresponding nested interaction protocol e commitment inter figure appears fipa conversation standards fipa specifications c nonetheless note
request good request pay communicative acts part fipa acl standards



figutnik kaminka

action protocol page hierarchy graph describes superpage decomposed
subpages

ffff






fffffi
ffff




fffffi
fffffi




ffffff





ffff


ffff




fffffi










figure nested protocol implementation hierarchical cp nets
let us consider detail process modelling nested interaction protocol
figure hierarchical cp net resulting net described figure first
identify starting ending points nested interaction protocol starting point
nested interaction protocol buyer sends request good communicative act
seller ending point buyer receives request pay communicative act
seller model nested protocol end points cp net socket nodes
superpage e interaction p rotocol b request good input socket
nodes b output socket node
nested interaction protocol commitment interaction p rotocol represented
separate cp net following principles outlined sections net
subpage main interaction protocol superpage nested interaction protocol
starting ending points subpage correspond net port nodes b
request good places subpage input port nodes b place output
port node nodes tagged port type tags correspondingly
substitution transition denoted hs hierarchy substitution connects corresponding socket places superpage substitution transition conceals nested interaction protocol implementation net superpage e
interaction p rotocol nested protocol name guard compartments
mapped directly substitution transition name guard respectively consequently
figure define substitution transition name commitment substitution
guard determined commit
superpage subpage interface provided hierarchy inscription
hierarchy inscription indicated dashed box next substitution transition first line hierarchy inscription determines subpage identity e


firepresenting conversations scalable overhearing

commitment interaction p rotocol example moreover indicates substitution transition replaces corresponding subpage detailed implementation superpage remaining hierarchy inscription lines introduce superpage subpage port
assignment port assignment relates socket node superpage port node
subpage substitution transition input socket nodes related tagged
port nodes analogously substitution transition output socket nodes correspond
tagged port nodes therefore port assignment figure assigns net socket
port nodes following fashion b b request good request good
b b
finally page hierarchy graph describes decomposition hierarchy nesting
different protocols cp net interaction p rotocol
commitment interaction p rotocol correspond page hierarchy graph nodes
figure arc inscription indicates substitution transition e commitment

representing temporal aspects interactions
two temporal interaction aspects specified fipa fipa specifications c
section timed cp nets see appendix applied modelling
agent interactions involve temporal aspects interaction duration deadlines
message exchange etc
first aspect duration interaction activity time period two periods
distinguished transmission time response time transmission time indicates
time interval communicative act sent one agent received
designated receiver agent response time period denotes time interval
corresponding receiver agent performing task response incoming
communicative act
second temporal aspect deadlines deadlines denote time limit
communicative act must sent otherwise corresponding communicative act
considered invalid issues addressed previous investigations
related agent interactions modelling petri nets
propose utilize timed cp nets techniques represent temporal aspects
agent interactions assume global clock begin deadlines figure introduces auml representation message deadlines deadline keyword
variation communicative act sequence expressions described section
sets time constraint start transmission associated communicative act
figure agent must send msg communicative act agent defined
deadline deadline expires msg communicative act considered invalid
figure b shows timed cp net implementation deadline sequence expression
timed cp net figure b defines additional msg time color set associated
net message places msg time color set extends sg color set described
section adding time stamp attribute message token thus communicative
cost et al mention deadlines without presenting implementation details
implementing use private clock overhearing agent global clock petri
net representation thus time stamp message overhearers time corresponding
message overheard



figutnik kaminka



















fiff















auml representation

b cp net representation

figure deadline sequence expression
act token record hs r ci ts expression denotes corresponding token
time stamp whereas token time value indicated starting capital accordingly described message token ts time stamp communicative act time limit
defined val deadline parameter therefore deadline sequence expression
semantics simulated following transition guard ts deadline transition guard comparing msg time stamp deadline parameter guarantees
expired msg communicative act received
turn representing interaction duration auml representation shown
figure auml time intensive message notation used denote communicative act transmission time rule communicative act arrows illustrated horizontally
indicates message transmission time neglected however case
message transmission time significant communicative act drawn slanted downwards
vertical distance arrowhead arrow tail denotes message transmission time thus communicative act msg sent agent agent
transmission time



fiff

























fiff


















auml representation

b cp net representation

figure interaction duration


firepresenting conversations scalable overhearing

response time figure indicated interaction thread length
incoming msg communicative act causes agent perform task sending
response msg message corresponding interaction thread duration denoted
time period thus time period specifies agent response time incoming
msg communicative act
cp net implementation interaction duration time periods shown figure b communicative act transmission time illustrated timed cp nets
operator net transitions simulate communicative act transmission
agents therefore representing transmission time cp net transition adds
time period incoming message token time stamp accordingly transition
output arc expression denotes delay time stamp outgoing token thus
corresponding transition takes time units consequently msg communicative act transmission time
contrast communicative act transmission time agent interaction response time
represented implicitly previously defined msg time color set indicates
message token time stamps analogously figure b introduce additional interstate time color set color set associated net agent places presents
possibility attach time stamps agent tokens well let us assume b
msg places contain single token circled next corresponding place
together multi set inscription indicates place current marking thus agent
message place tokens ts ts time stamps respectively ts time
stamp denotes time agent received msg communicative act sent
agent ts time stamp indicates time agent ready send msg
response message agent thus agent response time figure ts ts

concluding example
final contribution skeleton procedure transforming auml
conversation protocol diagram two interacting agents cp net representation
procedure semi automatedit relies human fill detailsbut
automated aspects apply procedure complex multi agent conversation protocol
involves many interaction building blocks already discussed
procedure shown input auml protocol
diagram creates output corresponding cp net representation
cp net constructed iterations queue essentially creates
conversation net exploring interaction protocol breadth first avoiding cycles
lines create initiate queue output cp net respectively
queue denoted holds initiating agent places current iteration
places correspond interaction states initiate conversation interacting agents lines initial agent place b created inserted
queue b place represents joint initial interaction state two agents lines
contain main loop
enter main loop line set curr variable first initiating agent
place queue lines create cp net components corresponding current
iteration follows first line message places associated curr agent place


figutnik kaminka

create conversation net input au l output cp n
queue
cp n cp net




b agent place color information
enqueue b





empty
curr dequeue







p createm essagep laces au l curr
rp createresultingagentp laces au l curr p
r ar createt ransitionsandarcs au l curr p rp
f ixcolor au l cp n p rp r ar












place p rp
p created current iteration
continue
p terminating place
enqueue p


cp n places cp n places p srp
cp transitions cp n transitions
tr

cp n arcs cp n arcs ar




return cp n

created createm essagep laces procedure detail
procedure extracts communicative acts associated given interaction
state auml diagram places correspond communicative acts
take agents joint interaction state curr successor line
createresultingagentp laces procedure creates agent places correspond interaction
state changes communicative acts associated curr agent place
auml diagram createt ransitionsandarcs procedure line
places connected principles described sections thus cp net
structure net places transitions arcs created finally line f ixcolor procedure adds token color elements cp net structure support deadlines cardinality
communicative act attributes
lines determine resulting agent places inserted queue
iteration non terminating agent places e places correspond
interaction states terminate interaction inserted queue lines
however one exception lines resulting agent place already
handled inserted back queue since inserting cause
infinite loop thereafter completing current iteration output cp net denoted


firepresenting conversations scalable overhearing

cp n variable updated according current iteration cp net components lines
main loop iterates long queue empty resulting cp net
returnedline



fifi




























fiff fiff
fiff
fiff

figure fipa contract net interaction protocol auml
demonstrate use fipa contract net interaction
protocol fipa specifications b figure protocol allows interacting agents
negotiate initiator agent issues calls proposals cf p communicative act
p articipants may refuse counter propose given deadline sending
ref use propose message respectively ref use message terminates interaction
contrast propose message continues corresponding interaction
deadline expires initiator accept p articipant response messages evaluates received p articipant proposals selects one several
agents perform requested task accepted proposal sending
accept proposal messages remaining proposals rejected reject proposal
message reject proposal terminates interaction corresponding p articipant
hand accept proposal message commits p articipant perform requested task successful completion p articipant informs initiator sending
inform done inform communicative act however case p articipant
failed accomplish task communicates f ailure message


figutnik kaminka

use introduced create cp net represents
fipa contract net interaction protocol corresponding cp net model constructed
four iterations figure shows cp net representation second
iteration figure shows cp net representation fourth
final iteration
contract net interaction protocol starts p place represents joint interaction state initiator ready send cf p communicative act p articipant
waiting corresponding cf p message p p place created inserted
queue iterations main loop begin
first iteration curr variable set p place creates
net places associated p place e cf p message place
p resulting agent place p place denotes interaction state initiator
already sent cf p communicative act p articipant waiting response p articipant received cf p message deciding
appropriate response p created createm essagep laces
createresultingagentp laces procedures respectively
createt ransitionsandarcs procedure line connects three places
simple asynchronous message building block shown figure b section
line color sets places determined handles
cardinality cf p communicative act putting appropriate sequence expression
transition principles presented figure b section accordingly
color set associated p place changed inter state card color set
since p place terminating place inserted queue
second iteration curr set p place p articipant agent send
response ref use propose communicative act ref use p ropose message
places created createm essagep laces line resulting places p p
corresponding ref use propose communicative acts respectively
created createresultingagentp laces line p place represents joint
interaction state p articipant sent ref use message terminated p
initiator received terminated p place represents joint state
p articipant sent propose message p initiator received
message considering response
line p ref use p p ropose p places connected
xor decision building block presented figure b section f ixcolor
procedure line adds appropriate token color attributes allow deadline sequence
expression ref use propose messages implemented shown
figure b section p place denotes terminating state whereas p
place continues interaction thus lines p place inserted
queue next iteration state net end second
iteration presented figure
third iteration curr set p initiator response p articipant
proposal accept proposal reject proposal createm essagep laces procedure line thus creates corresponding accept proposal reject proposal message
places accept proposal reject proposal messages cause interacting agents
transition p p places respectively agent places created


firepresenting conversations scalable overhearing






























































































































































b

c



e




f




c
e e

e

e



b






figure fipa contract net interaction protocol cp net nd iteration
createresultingagentp laces procedure line p place denotes interaction
state initiator sent reject proposal message terminated interaction p articipant received message terminated well p
contrast p place represents interaction state initiator sent acceptproposal message waiting response p articipant received
accept proposal communicative act performing requested task sending
response p initiator agent sends exclusively accept proposal rejectproposal message thus p reject proposal p accept proposal p places
connected xor decision block createt ransitionsandarcs procedure
line
f ixcolor procedure line operates follows according interaction
protocol semantics initiator agent evaluates received p articipant proposals
deadline passes thereafter appropriate reject proposal accept proposal
communicative acts sent thus f ixcolor assigns msg time color set rejectproposal accept proposal message places creates ts deadline transition guard associated transitions transition guard guarantees initiator
cannot send response deadline expires valid p articipant responses
received resulting p agent place denotes terminating interaction state
whereas p agent place continues interaction thus p agent place
inserted queue
fourth iteration curr set p place associated three communicative acts inform done inform f ailure inform done informresult messages instances inf orm communicative act class thus createmessageplaces line creates two message places inf orm f ailure line
createresultingagentp laces creates p p agent places f ailure communicative act causes interacting agents transition p agent place inf orm
messages cause agents transition p agent place p place represents
joint interaction state p articipant sent f ailure message terminated p


figutnik kaminka

initiator received f ailure communicative act terminated
hand p place denotes interaction state p articipant sent inf orm
message inform done inform terminated p initiator
received inf orm communicative act terminated inf orm f ailure communicative acts sent exclusively thus createt ransitionsandarcs line connects
p f ailure p inf orm p places xor decision building block
f ixcolor assigns msg inform done msg inform transition
guard transition associated inf orm message place since p
p agent places represent terminating interaction states inserted
queue remains empty end current iteration signifies end
conversion complete conversation cp net resulting iteration
shown figure








fffi






































































l









g






f g

fe

f ec





f


j k







j k bbb



l





eh

l e g



l






















l e




















e




f

e


h e








e







































g
















fiff
















abbb

c














































figure fipa contract net interaction protocol cp net th final
iteration
procedure outline guide conversion many agent conversation protocols auml cp net equivalents however sufficiently developed
address general n agent case appendix c presents complex example agent conversation protocol successfully converted manually without guidance
example incorporates many advanced features cp net representation
technique would beyond scope many previous investigations


firepresenting conversations scalable overhearing

summary conclusions
recent years open distributed mas applications gained broad acceptance
multi agent academic community real world industry increasing attention directed multi agent conversation representation techniques
particular petri nets recently shown provide viable representation
cost et al nowostawski et al mazouzi et al
however radically different approaches proposed petri nets modelling multi agent conversations yet relative strengths weaknesses proposed
techniques examined work introduces novel classification previous investigations compares investigations addressing scalability
appropriateness overhearing tasks
insights gained analysis developed novel representation
uses cp nets places explicitly represent joint interaction states messages
representation technique offers significant improvements compared previous approaches terms scalability particularly suitable monitoring via overhearing
systematically representation covers essentially features required
model complex multi agent conversations defined fipa conversation standards fipa specifications c include simple complex interaction building
blocks section appendix b communicative act attributes multiple concurrent
conversations cp net section nested interleaved interactions
hierarchical cp nets section temporal interaction attributes timed cp nets
section developed techniques demonstrated throughout
complex interaction protocols defined fipa conversation standards see particular
example presented appendix c previous approaches could handle
examples though reduced scalability shown cover
required features
finally presented skeleton procedure semi automatically converting
auml protocol diagrams chosen fipa representation standard equivalent cpnet representation demonstrated use challenging fipa conversation protocol difficult represent previous approaches
believe work assist motivate continuing multi agent
conversations including issues performance analysis validation verification desel et al agent conversation visualization automated monitoring kaminka et al
busetta et al deadlock detection khomenco koutny debugging poutakidis et al dynamic interpretation interaction protocols cranefield
et al de silva et al naturally issues remain open future work
example presented procedure addresses auml protocol diagrams representing two
agent roles plan investigate n agent version future

acknowledgments
authors would thank anonymous jair reviewers many useful informative comments minor subsets work published lnai book chapter
gutnik kaminka b k ushi deserves many thanks


figutnik kaminka

appendix brief introduction petri nets
petri nets petri nets site widespread established methodology representing
reasoning distributed systems combining graphical representation comprehensive mathematical theory one version petri nets called place transition nets
pt nets reisig pt net bipartite directed graph node
place transition figure net places transitions indicated
circles rectangles respectively pt net arcs support place transition
transition place connections never connections two places two
transitions arc direction determines input output characteristics place
transition connected thus given arc p connecting place p transition
say place p input place transition vice versa transition
output transition place p p arc considered output arc place p
input arc transition
















firing




b firing

figure pt net example
pt net place may marked small black dots called tokens arc expression
integer determines number tokens associated corresponding arc
convention arc expression equal omitted specific transition enabled
input places marking satisfies appropriate arc expressions example
consider arc p arc connect place p transition thus given
arc arc expression say transition enabled
place p marked two tokens case transition enabled may fire occur
transition occurrence removes tokens transition input places puts tokens
transition output places specified arc expressions corresponding
input output arcs thus figures b demonstrate pt net marking
transition firing respectively
although computationally equivalent different version petri nets called colored
petri nets cp nets jensen b c offers greater flexibility compactly
representing complex systems similarly pt net model cp nets consist net places
net transitions arcs connecting however cp nets tokens single
bits complex structured information carriers type additional information carried token called token color may simple e g integer
string complex e g record tuple place declared place color set


firepresenting conversations scalable overhearing

match tokens particular colors cp net place marking token multi set e
set member may appear corresponding appropriate place
color set cp net arcs pass token multi sets places transitions cp net arc
expressions evaluate token multi sets may involve complex calculation procedures
token variables declared associated corresponding arcs
cp net model introduces additional extensions pt nets transition guards
boolean expressions constrain transition firings transition guard associated
transition tests tokens pass transition enable transition
firings guard successfully matched e test evaluates true cp net
transition guards together places color sets arc expressions appear part
net inscriptions cp net
order visualize manage complexity large cp nets hierarchical cp nets
huber jensen shapiro jensen allow hierarchical representations cpnets sub cp nets used higher level cp nets abstracted away
hierarchical cp nets built cp nets superpages
present higher level hierarchy cp nets refer subpages addition
transitions places subpage may function superpage subpages
way multiple hierarchy levels used hierarchical cp net structure
relationship superpage subpage defined substitution transition substitutes corresponding subpage instance cp net superpage structure
transition superpage substitution transition hierarchy inscription supplies
exact mapping superpage places connected substitution transition called
socket nodes subpage places called port nodes port types determine
characteristics socket node port node mappings complete cp net hierarchical
structure presented page hierarchy graph directed graph vertices correspond directed edges correspond direct superpage subpage relationships
timed cp nets jensen b extend cp nets support representation temporal aspects global clock timed cp net tokens additional color attribute
called time stamp refers earliest time token may used time
stamps used arc expression transition guards enable timed transition
satisfies two conditions transition color enabled e satisfies
constraints defined arc expression transition guards ii tokens ready
e time global clock equal greater tokens time stamps
transition fire

appendix b additional examples conversation representation
building blocks
appendix presents additional interaction building blocks already described section first parallel messages interaction auml representation shown figure sender agent sends msg message
agent msg message agent however order two communicative acts
unconstrained
representation parallel cp net representation shown figure b
b c b c msg msg places defined similarly figures b


figutnik kaminka


































































auml representation

b cp net representation

figure parallel messages interaction
b section however define two additional intermediate agent places b c
b c b c place represents joint interaction state agent sent
msg message agent ready send msg communicative act agent
agent received msg message b agent waiting receive msg
communicative act c b c place represents joint interaction state
agent ready send msg message agent already sent msg communicative act agent agent waiting receive msg message b agent
received msg communicative act c places enable agent send
communicative acts concurrently four transitions connect appropriate places respectively behavior transitions connecting b c b b c c
similar described transitions b c b c b c b c
triggered receiving messages msg msg respectively however transitions consume message token since used triggering transitions
b c b b c c achieved adding appropriate message
place output place corresponding transition
second auml interaction building block shown figure message
sequence interaction similar parallel however message sequence
interaction defines explicitly order transmitted messages msg
msg notation figure specifies msg message sent
sending msg
figure b shows corresponding cp net representation b c b c
msg msg places defined however cp net implementation presents
additional intermediate agent placea b c identical corresponding


firepresenting conversations scalable overhearing



fffi













fffi
















fffi













fffi


















auml representation

b cp net representation

figure sequence messages interaction
intermediate agent place figure b b c defined output place
b c b transition thus guarantees msg communicative act
sent represented b c c transition upon completion msg
transmission b c b transition
last interaction present synchronized messages interaction shown figure agent simultaneously receives msg agent msg agent
auml constraint annotated merging two communicative act arrows
horizontal bar single output arrow


fffi




fffi














fffi






fffi










fffi
























auml representation

b cp net representation

figure synchronized messages interaction


figutnik kaminka

figure b illustrates cp net implementation synchronized messages interaction
previous examples define c b c msg msg b c places
additionally define two intermediate agent places c b c c place represents joint interaction state agent sent msg agent agent
received however agent waiting receive msg c b c place represents
joint interaction state agent sent msg agent b agent
received however agent waiting receive msg c places guarantee
interaction transition b c state msg msg
received agent

appendix c example complex interaction protocol
present example complex agent conversation protocol manually converted cp net representation building blocks conversation
protocol addressed fipa brokering interaction protocol fipa specifications
interaction protocol incorporates many advanced conversation features
representation nesting communicative act sequence expression message guards
etc auml representation shown figure
initiator agent begins interaction sending proxy message broker
agent proxy communicative act contains requested proxied communicative act
part argument list broker agent processes request responds
agree ref use message communication ref use message terminates interaction
broker agent agreed function proxy locates agents matching
initiator request agent found broker agent communicates
failure match message interaction terminates otherwise broker agent
begins interactions matching agents agent broker informs
initiator sending inform done proxy failure proxy communicative act
failure proxy communicative act terminates sub protocol interaction matching
agent question inform done proxy message continues interaction subprotocol progresses broker forwards received responses initiator agent
reply message sub protocol communicative acts however failures
explicitly returned sub protocol interaction e g agent executing
sub protocol failed case broker agent detects failure communicates
failure brokering message terminates sub protocol interaction
cp net representation fipa brokering interaction protocol shown figure brokering interaction protocol starts b place b place represents joint interaction state initiator ready send proxy communicative
act broker waiting receive b proxy communicative act causes
interacting agents transition b place denotes interaction state
initiator already sent proxy message broker broker received b
broker agent send response ref use agree communicative act
cp net component implemented xor decision building block presented
section ref use message causes agents transition b place thus
terminate interaction place corresponds broker sending ref use message
terminating b initiator receiving message terminating


firepresenting conversations scalable overhearing


fffi























































figure fipa brokering interaction protocol auml representation
hand agree communicative act causes agents transition b place
represents joint interaction state broker sent agree message
initiator trying locate receivers proxied message
initiator received agree message
broker agents search suitable receivers may two alternatives first
case matching agents found interaction terminates b agent place
joint interaction place corresponds interaction state broker sent
failure match communicative act b initiator received message terminated second alternative suitable agents found broker
starts sending proxied communicative act messages agents established list
designated receivers e target list first proxied communicative act message causes interacting agents transition b p place b p place denotes
joint interaction state three agents initiator broker p articipant receiver


figutnik kaminka






fffi












b





kb






fffi




































fffi













fffi




































ij






h




l

















g







k k l l

fffi



fffi









k l

e fif









g













b c

k k n l n l





h




p


















fffi













fffi





















r

q


r


fffi








x xx
w






p

u



xy z



h


v


fffi














xy z


w




w







r

xy z z z

r















fffi


fffi





















figure fipa brokering interaction protocol cp net representation
initiator individual state remains unchanged since proxied communicative act
message starts interaction broker p articipant broker individual
state b denotes designated agents found proxied communicative

firepresenting conversations scalable overhearing

act messages ready sent p articipant waiting receive interaction
initiating communicative act p proxied communicative act message place
connected output place transition message place used part
cp net xor decision structure enables broker agent send failure nomatch proxied communicative act respectively thus token denoting proxiedcommunicative act message must consumed transition
thus multiple proxied communicative act messages sent p articipants
implemented similarly broadcast sequence expression implementation section
furthermore proxied communicative act type verified type requested
proxied communicative act obtained original proxy message content
use proxied communicative act type message type place implement cpnet component similarly figure proxied communicative act message causes
interacting agents transition b p b p places
b p place corresponds interaction broker p articipant
agents represents joint interaction state broker ready send proxiedcommunicative act message p articipant b p articipant waiting message
p fact b p place initiates nested interaction protocol b p
place b p place represents joint interaction state p articipant sent
reply message communicative act terminated p broker received
message b example chosen fipa query interaction protocol fipa
specifications figures interaction sub protocol cp net component
implementing nested interaction sub protocol modeled principles described
section consequently interaction sub protocol concealed query subprotocol substitution transition b p proxied communicative act b p places
determine substitution transition socket nodes socket nodes assigned cpnet port nodes figure follows b p proxied communicative act places
assigned p query input port nodes b p place assigned
p p p output port nodes
turn b p place contrast b p place place corresponds
main interaction protocol b p place represents joint interaction state
initiator waiting broker respond broker ready send appropriate response communicative act b best initiators knowledge interaction
p articipant yet begun p broker agent send one two messages
failure proxy inform done proxy depending whether succeeded
send proxied communicative act message p articipant failure proxy message
causes agents terminate interaction corresponding p articipant agent
transition b p place place denotes joint interaction state initiator
received failure proxy communicative act terminated broker sent
failure proxy message terminated well b interaction p articipant
agent never started p hand inform done proxy causes agents
transition b p place b p place represents interaction state broker
sent inform done proxy message b initiator received p articipant
begun interaction broker agent p represented
xor decision building block


figutnik kaminka

finally broker agent send reply message sub protocol failurebrokering communicative act failure brokering message causes interacting agents
transition b p place place indicates broker sent failure brokering
message terminated b initiator received message terminated
p articipant terminated interaction broker agent p replymessage sub protocol communicative act causes agents transition b p place
b p place indicates broker sent reply message sub protocol message
terminated b initiator received message terminated p articipant
successfully completed nested sub protocol broker agent terminated
well p thus b p place denoting successful completion nested sub protocol
corresponding transition input place

references
auml site agent unified modeling language www auml org
busetta p dona nori channelled multicast group communications
proceedings aamas
busetta p serafini l singh zini f extending multi agent cooperation
overhearing proceedings coopis
chaibdraa b trends agent communication languages computational intelligence
cost r framework developing conversational agents ph thesis department computer science university maryland
cost r chen finin labrou peng modeling agent conversations
coloured petri nets proceedings workshop specifying implementing conversation policies third international conference autonomous agents
agents seattle washington
cost r chen finin labrou peng coloured petri nets
conversation modeling dignum f greaves eds issues agent
communications lecture notes computer science pp springer verlag
cranefield purvis nowostawski hwang p ontologies interaction protocols proceedings workshop ontologies agent systems
first international joint conference autonomous agents multi agent systems
aamas bologna italy
de silva l p winikoff liu w extending agents transmitting protocols
open systems proceedings workshop challenges open agent systems second international joint conference autonomous agents multi agent
systems aamas melbourne australia
desel j oberweis zimmer validation information system petri
nets test case generation proceedings ieee international conference systems man cybernetics computational cybernetics simulation
pp orlando florida


firepresenting conversations scalable overhearing

finin labrou mayfield j kqml agent communication language
bradshaw j ed software agents mit press
fipa site fipa foundation intelligent physical agents www fipa org
fipa specifications fipa brokering interaction protocol specification version h
www fipa org specs fipa
fipa specifications b fipa contract net interaction protocol specification version
h www fipa org specs fipa
fipa specifications c fipa interaction protocol library specification version e
www fipa org specs fipa
fipa specifications fipa query interaction protocol specification version h
www fipa org specs fipa
gutnik g kaminka g towards formal overhearing
conversation identification proceedings aamas
gutnik g kaminka k b scalable petri net representation interaction
protocols overhearing van eijk r huget dignum f eds agent
communication lnai international workshop agent communication ac
york ny usa pp springer verlag
hameurlain n mip nets refinement open protocols modeling analysis
complex interactions multi agent systems proceedings rd international
central eastern european conference multi agent systems ceemas pp
prague czech republic
huber p jensen k shapiro r hierarchies coloured petri nets
jensen k rozenberg g eds high level petri nets theory application
pp springer verlag
jensen k coloured petri nets basic concepts analysis methods practical
use vol springer verlag
jensen k b coloured petri nets basic concepts analysis methods practical
use vol springer verlag
jensen k c coloured petri nets basic concepts analysis methods practical
use vol springer verlag
kaminka g pynadath tambe monitoring teams overhearing
multi agent plan recognition jair
khomenco v koutny lp deadlock checking partial order dependencies proceedings th international conference concurrency theory
concur pp pennsylvania state university pennsylvania
kone shimazu nakajima state art agent communication languages knowledge information systems
legras f overhearing local group formation proceedings aamas


figutnik kaminka

lin f norrie h shen w kremer r schema specifying conversation policies dignum f greaves eds issues agent
communications lecture notes computer science pp springer verlag
ling loke w mip nets compositional model multi agent interaction
proceedings rd international central eastern european conference
multi agent systems ceemas pp prague czech republic
mazouzi h fallah seghrouchni e haddad open protocol design
complex interactions multi agent systems proceedings first international
joint conference autonomous agents multi agent systems aamas pp
bologna italy
milner r harper r tofte definition standard ml mit press
moldt wienberg f multi agent systems coloured petri nets
proceedings th international conference application theory petri
nets icatpn pp toulouse france
novick ward k mutual beliefs multiple conversants computational
model collaboration air traffic control proceedings aaai pp
nowostawski purvis cranefield layered modeling
agent conversations proceedings second international workshop infrastructure agents mas scalable mas fifth international conference
autonomous agents pp montreal canada
odell j parunak h v bauer b extending uml design multiagent systems proceedings aaai workshop agent oriented information systems aois
odell j parunak h v bauer b agent uml formalism specifying
multi agent interactions ciancarini p wooldridge eds agent oriented
software engineering pp springer verlag berlin
odell j parunak h v bauer b b representing agent interaction protocols uml ciancarini p wooldridge eds agent oriented software
engineering pp springer verlag berlin
parunak h v visualizing agent conversations enhances dooley graphs
agent design analysis proceedings second international conference
multi agent systems icmas
paurobally cunningham j achieving common interaction protocols open
agent environments proceedings workshop challenges open agent
systems second international joint conference autonomous agents multiagent systems aamas melbourne australia
paurobally cunningham j jennings n r ensuring consistency
joint beliefs interacting agents proceedings second international joint
conference autonomous agents multi agent systems aamas melbourne
australia


firepresenting conversations scalable overhearing

petri nets site petri nets world online services international petri nets
community www daimi au dk petrinets
poutakidis padgham l winikoff debugging multi agent systems
design artifacts case interaction protocols proceedings first international joint conference autonomous agents multi agent systems aamas
pp bologna italy
purvis k hwang p purvis cranefield j schievink interaction protocols network environmental solvers proceedings
iemss international meeting integrated assessment decision support
iemss pp lugano switzerland
ramos f frausto j camargo f methodology modeling interactions
cooperative information systems coloured petri nets international journal
software engineering knowledge engineering
reisig w petri nets introduction springer verlag
rossi busetta p towards monitoring group interactions social roles
via overhearing proceedings cia pp erfurt germany
smith cohen p r toward semantics agent communications
language speech acts proceedings aaai
wikstrom functional programming standard ml international series
computer science prentice hall
xu h shatz agent petri net model application
seller buyer design electronic commerce proceedings th international
symposium autonomous decentralized systems isad pp dallas
texas usa




