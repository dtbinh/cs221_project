journal artificial intelligence

submitted published

engineering note
engineering conformant probabilistic planner
nilufer onder
garrett c whelan
li li

nilufer mtu edu
gcwhelan mtu edu
lili mtu edu

department computer science
michigan technological university
townsend drive
houghton mi

abstract
present partial order conformant probabilistic planner probapop competed blind track probabilistic competition ipc explain
adapt distance heuristics use probabilistic domains probapop
incorporates heuristics probability success explain successes
difficulties encountered design implementation probapop

introduction
probapop conformant probabilistic planner took part probabilistic track
th international competition ipc conformant planner
competed conformant probabilistic paradigm hyafil bacchus
actions state initialization probabilistic e several possible
outcomes annotated probability occurrence addition
conformant e planner construct best plan possible without assuming
actions performed observed example conformant
probabilistic consider student applying graduate studies suppose
application needs include several forms prepared student single
letter recommendation written professor one letter sufficient one
letter acceptable assume typical professor students department
probability sending letter time student asks
one professor letter probability complete application
student observes professor sent letter due date way
complete application would late ask another professor thus
observation actions useless way student increase chances
getting letter ask one professor send letter professors
asked probability getting letter close obviously
asking many people costly therefore student weigh benefits increased
probability costs asking several people
conformant probabilistic planners task best sequence actions
possible actions predefined probabilities cannot observed
regard conformant probabilistic planners classified non observable markov
c

ai access foundation rights reserved

fionder whelan li

decision processes nomdps boutilier dean hanks fully observable mdps
fomdp extreme mdps agent complete cost free
sensors indicate current state planners adopt fomdp framework
generate policies functions states actions nomdp planners
generate unconditional sequences actions predictive model
environment cannot observed boutilier et al middle ground partially
observable mdps pomdps contingency plans domain observable execution actions may depend observations kaelbling
littman cassandra majercik littman onder pollack hansen
feng karlsson hoffmann brafman conformant
planners model imperfect actions may multiple possible
model probability information ferraris giunchiglia bertoli cimatti roveri
brafman hoffmann
work probapop motivated incentive partial order
viable option conformant probabilistic main reasons threefold
first partial order planners worked well parametric lifted actions
useful coding large domains second due least commitment strategy step
ordering partial order pop produces plans highly parallelizable third
many planners handle rich temporal constraints pop
paradigm smith frank jonsson given advantages intuition
design probapop bring together two paradigms model states explicitly
pop planners represent states search space plans blind
planners cannot observe state observation actions available
basic form base plans deterministic partial order
techniques estimate best way improve plans recently repop
nguyen kambhampati vhpop younes simmons planners
demonstrated heuristics speed non partial order planners used
scale partial order distance heuristics mcdermott
bonet geffner implemented relaxed plan graphs partial order
planners repop vhpop employed probabilistic domains
heuristics coupled selective plan improvement heuristics incremental
techniques significant advantages probapop makes partial order
feasible probabilistic domains work probapop invaluable
understanding identifying key solutions issues probabilistic conformant


probapop partial order
partial order probabilistic implemented buridan kushmerick hanks
weld probabilistic top vhpop younes simmons
recent partial order planner partially ordered plan tuple steps
bind ord links open unsafe representing sets actions binding constraints ordering constraints causal links open conditions unsafe links respectively binding
constraint constraint action parameters action parameters ground
literals ordering constraint si sj represents fact step si precedes sj


fiengineering conformant probabilistic planner

causal link triple si p sj si producer step sj consumer step
p represents condition supported si sj open condition pair p
p condition needed step causal link si p sj unsafe plan
contains threatening step sk sk p among effects sk may intervene
si sj open conditions unsafe links collectively referred flaws
quadruple g domain theory consisting
probabilistic operators initial state probability distribution states g
set literals must true end execution termination criterion
probability threshold time limit objective planner
maximal probability plan takes agent g several plans
probability success one least number steps cost preferred
probapop shown figure classical pop
russell norvig younes simmons first constructs initial plan
converting initial goal dummy initial goal steps first
last steps plan empty body refines plans search queue
meets termination criterion termination criterion implemented
include time limit e g stop minutes memory limit e g stop mb
probability threshold e g stop finding plan higher probability
lack significant progress e g stop probability success cannot increased
possible specify multiple termination criterion use earliest one
becomes true termination criterion met plan highest probability
returned
plan refinement operations involve repairing flaws open condition closed
adding step domain theory reusing step already plan unsafe
link handled promotion demotion separation lifted actions used
operations confrontation penberthy weld techniques part
vhpop implementation consider step sk threatening causal link si p sj
promotion involves adding extra ordering constraint sk comes sj sj sk
added ord demotion involves adding extra ordering constraint k
comes si sk si added ord separation involves adding extra inequality
constraint bind sk threatening effect longer unify p finally
actions multiple effects confrontation used making commitment
non threatening effects sk e effects sk contain proposition
unifies p note deterministic domains action multiple
effects due multiple secondary preconditions conditions probabilistic domains
probabilistic actions multiple effects
search conducted guided ranking function
provides f value usual plan f g h g cost
plan h estimated cost completing ranking function used
merge step order plans search queue competition
probapop used distance heuristic add explained next section
flaw selection strategy select flaw method used vhpops static gives
priority static open conditions e condition whose value altered action
domain theory flaws plan contain static open conditions
threats handled next lowest priority given remaining open conditions


fionder whelan li

function probapop initial goal
returns solution plan failure
plans make minimal plan initial goal
bestplan null
loop
termination criterion met return bestplan
plans empty return failure
plan remove front plans
solution plan return plan
plans merge plans refine plan plan
end
function refine plan plan
returns set plans possibly null
flaws plan empty
probsuccess plan probsuccess bestplan
bestplan plan
plan reopen conditions plan
flaw select flaw plan
flaw open condition choose
return reuse step plan flaw
return add step plan flaw
flaw threat choose
return demotion plan flaw
return promotion plan flaw
return separation plan flaw
return confrontation plan flaw

figure probabilistic pop

comment heuristics flaw selection techniques following discussion
competition
deterministic pop plan considered complete
flaws e open unsafe probabilistic domains possibility complete
plans insufficient probability success e g improved
probapop improves plans conducting search reopening conditions
fail explained next section probapop viewed first searching
plan complete deterministic sense searching way improve
plan current implementation discard search queue finding
first plan subsequent improvements made first complete plan found
future plan implement multiple search queues order able jump
different plans improvements figure initial plan
corresponds student application domain mentioned first section open
conditions sending forms forms sent getting letter reference letter sent
probapop uses vhpop guided ranking flaw selection heuristics produce
complete plan probability success shown figure b straight line shows
causal link two actions zigzag line refers causal link plan


fiengineering conformant probabilistic planner

fragment omitted clarity exposition probapop reopens condition
letter sent figure resumes search heuristics come
improved plan involves asking two professors shown figure b assuming
ask profx action probabilistic effects probability success
first complete plan second complete plan several
iterations reopen search leads probapop plan probability
plan cannot improved single precision arithmetic
initial

initial

ask prof

formssent

lettersent

formssent

lettersent

goal

goal



b

figure starting empty plan finding first plan

initial

initial

ask prof

formssent

lettersent

ask prof

lettersent

formssent

goal

lettersent

ask prof

lettersent

goal



b

figure starting complete plan finding improved plan

distance ranking probapop
vhpop deterministic partial order planner described younes simmons
supports distance heuristics provide estimate total number actions
needed close open condition starting search planner builds
graph blum furst literals initial state first level
continues expand graph reaches level goal literals present
graph different graphplans graph sense


fionder whelan li

relaxed e delete lists ignored thus mutex relationships computed bonet
geffner
order able generate relaxed graph multiple probabilistic
effects present one would need split many plan graphs leaves
probabilistic action avoid potential blow split action domain
theory many deterministic actions number nonempty effect lists split
action represents different way original action would work figure
action two probabilistic effects b p q true one effect c
p true q false effect otherwise split action corresponds one
set non empty effects probapop plan graph uses split actions plans
constructed contain full original action planner correctly assess
probability success split actions compute good estimate
number actions needed complete plan use distance heuristics

p
q

prec p q

prec p q



p


b



q

prec p q






b

c


c

figure probabilistic action split deterministic actions
important distinction deterministic partial order probabilistic
partial order multiple support plan literals deterministic case
open condition permanently removed list flaws resolved
probabilistic case reopened planner search additional steps
increase probability literal buridan system implements technique
reopening previously closed conditions complete plan resuming search
another complete plan implementation employs selective reopening sr
conditions guaranteed achieved reopened words
literals supported probability reopened note checking
probability literals costly probabilistic plans save cost performing
check mandatory assessment complete plans obviously avoiding redundant
searches advantage planner current implementation reopen
supported literals probability less leave selection among
set preconditions flaw selection heuristic implementation
contain probability heuristics
important note neither split actions selective reopening technique
change base soundness completeness properties buridan split
actions used relaxed plan graph reopening technique block
alternatives sought would already covered plan search
queue


fiengineering conformant probabilistic planner

probapop ipc
probapop among domain independent planners competed probabilistic
track ipc domain independent mean planner uses ppddl description domain solve employ previously coded
control information table brief description planners edelkamp
hoffman littman younes younes littman weissman asmuth bonet
geffner fern yoon givan thiebaux gretton slaney price kabanza
competition conducted follows planner given set
written probabilistic pddl ppddl allotted minutes solve
server simulated possible way executing plan sending
sequence states starting initial state planners responded state
action solution found simulations conducted
goal success measured whether goal reached
end simulation reward total reward calculated
set included types
competition included domains listed
blocksworld includes pick put actions action fail
blocks given goal build one
towers blocks
colored blocksworld actions blocksworld domain
block one three colors goal towers specified existential
quantifiers e g green block table red block green
block
exploding blocksworld similar blocksworld domain first put
action permanently destroy bottom object block table replanning
repetition approaches fail easily due irreversible nature explosion
boxworld box transportation load unload drive fly actions
drive action fail taking truck wrong city
fileworld objective includes actions put papers files matching
type type found observation action
probabilistics outcomes
tireworld actions include moving several cities tire go flat
trip
towers hanoise variation towers hanoi discs
moved singles doubles discs may slip move
zeno travel travel domain includes actions related flying actions
boarding flying fail
noted competition domains designed full observability
needed changed incorporate blind planner instance pickup action


fionder whelan li

planner code
umass c
nmrdpp g
classy j
replan j
mgpt p
probapop q
cert r

description
symbolic heuristic search symbolic ao loops lao
symbolic real time dynamic programming rtdp
solving decision non markovian hence markovian
rewards
approximate policy iteration inductive machine learning
random walk
deterministic replanner fast forward
labeled real time dynamic programming lrtdp lower bounds
extracted deterministic relaxations mdp
pop style plan space search distance heuristics failure
analysis
heuristic state space search structured policy iteration
factored mdps reachability analysis

table domain independent planners listed order competition code

blocksworld domain precondition requires block picked
held arm action two probabilistic effects one resulting
block held held planner assumes
observability plan involving pickup action cannot improved action
cannot executed unless preconditions hold thus probapop planner cannot
insert second pickup action cover case first one fails help
competition organizers implemented workaround actions
executed conditions hold effect rather causing error
probapop competition name q attempted two planners
attempted classy j replan j
planners attempted listed table probapop attempted
small number due three reasons first started building probapop
vhpops version performance vhpop significantly improved better
memory handling techniques version time competition
convert implementation newer version second competition blocksworld
domains included universally quantified preconditions supported vhpop
implementation preconditions including forall keyword efficient
third implementation disables feature vhpop allows use multiple
search queues different heuristics prohibited us constructing several search
queues different heuristic one finishes earliest
therefore pick single heuristic run competition
picked add ranking metric static flaw selection technique ran
combination
competition announced observed three domain
independent planners namely classy j replan j mgpt p
able solve largest blocksworld whereas probapop able solve
blocks competition included domains


fiengineering conformant probabilistic planner

planner
umass c
nmrdpp g
classy j
replan j
mgpt p
probapop q
cert r











bw nc r








tire nr








tire r








zeno








table number successes trials obtained planners use
domain knowledge attempted probapop q listed
dash means planner attempt bw nc r
blocksworld blocks tire nr tire r goal reward
tireworld domain zeno zeno
travel domain

blocks therefore looked ways improving performance probapop
first reimplemented probapop vhpops newer version second
brought language competition blocksworld domain closer strips
particular removed forall preconditions conditions example
replaced ppddl pick action shown figure two actions shown
figure however version upgrade language simplification sufficient
enable probapop solve blocks explained probapops strategy
first base plan improve plan possible failure points therefore
finding base plan crucial next looked heuristics flaw selection
strategies make blocksworld solvable begin discussing
explaining vhpops add heuristic detail
action pick block
parameters top block bottom
effect top bottom top top bottom
forall b block holding b
forall b block top b top
decrease reward
probabilistic holding top top top bottom
bottom table
top top bottom top top table

figure ppddls pick action
add heuristic achieves good performance computing sum step costs
open conditions relaxed graph e heuristic cost plan
computed h hadd op en cost achieving literal q level
first action achieves q hadd q minaga q hadd ga q ga q


fionder whelan li

action pick
parameters x
precondition clear x ontable x handempty
effect
probabilistic
ontable x clear x handempty holding x
action unstack
parameters x
precondition top x clear x handempty
effect
probabilistic
holding x clear clear x handempty top x

figure simplified form ppddls pick action
action effect q note hadd q q holds initially
q never holds level action first level preconditions become true
hadd hadd p rec addr heuristic modification add heuristic
takes action reuse account thus addition conditions described
heuristic cost literal q plan already contains action achieve q
observed addr effective add blocksworld domain
tested variety flaw selection strategies implemented vhpop together addr
flaw selection strategies tried table adopt notation given
pollack et al revised younes simmons notation
strategy ordered list selection criteria lr refers least refinements
first mcadd refers cost computed add mwadd refers work
add open conditions divided three categories use heuristics
static open condition open condition whose literal provided
initial state e action literal effect local open condition refers
open conditions recently added action used maintain focus
achievement single goal unsafe open condition refers open condition whose
causal link would threatened
five main strategies prioritize flaws differently ucpop strategy
gives priority threats static strategy gives priority static open conditions lcfr
strategy handles flaws order least expected cost mc strategy orders open conditions
respect cost extracted relaxed graph mw strategy orders
open conditions respect expected work extracted relaxed graph
strategy loc annotation gives priority local open conditions among open
conditions strategy conf annotation gives priority unsafe open conditions
among open conditions refer reader younes simmons
thorough description heuristics well experimental
domains
depict experiments blocksworld first
third lines table second fourth lines tables explained later


fiengineering conformant probabilistic planner

strategy
ucpop
static
lcfr
lcfr loc
lcfr conf
lcfr loc conf
mc
mc dsep
mc loc
mc dsep
mw
mw dsep
mw loc
mw loc dsep

description
n lifo lifo
lifo n lifo lifo
n lr
n l lr
n u lr lr
n u lr l lr
n lr mcadd
n lr mcadd lr
n lr l mcadd
n lr l mcadd lr
n lr mwadd
n lr mwadd lr
n lr l mwadd
n lr l mwadd lr

table description variety flaw selection strategies vhpop n nonseparable threat separable threat open condition static
open condition l local open condition u unsafe open condition

seen lcfr mc strategies work blocks
larger solvable actions lifted tried make search
space smaller delaying separable threats peot smith explain delaying
separable threats may decreased branching factor may many
ways add inequality constraints separation delay might help
threat disappear variables bound modified best working strategies
namely variants mc mw implemented delay separable threats table
shown dsep suffix times experiments
without dsep table repeat columns table comparison
time improvement seen blocks
blocks increase time threat must checked see
separable delaying threats made blocks solvable mc loc mw
mw loc strategies however larger solvable strategy
experiments heuristics strategies
search time increases dramatically going blocks larger
solvable able heuristic combination solve larger
noticed competition blocksworld list goal towers top bottom
planner spends lot time dead end plans original goal order
preserved tower built top bottom initial goals almost
undone achieve later goals concluded interaction cannot
detected heuristics used designed consider subgoals
isolation koehler hoffmann describe polynomial time
order goals minimize type undoing operates ground


fionder whelan li






ucpop

static

lcfr













k


lcfrloc





lcfrconf





lcfrloc conf





mc


k
k

mcloc





mw



k

mwloc





mwloc conf





table time msec required base plan blocksworld
blocks






mc


k
k

mc dsep


k
k

mc loc





mc loc dsep


k


mw



k

mw dsep


k
k

mw loc





mw loc dsep


k


table time msec required base plan delaying separable threats
blocksworld blocks

action descriptions generated action schemas implemented
system hoffman nebel used order
top level goals repeated experiments ordering essentially builds
towers bottom top ordered goals shown lines
tables ordering goals mixed example blocks
made lcfr heuristic usable mw heuristic usable however
lowest time increased k k milliseconds larger still
solvable
final strategy combine used planner
pop style search particular ordered top level goals ffs ordering ran vhpop n times n top level goals first
first goal vhpop returned plan steps simulated
resulting state second resulting state initial state goals
goal would preserved redone goal would achieved
used strategy default heuristics vhpop solve blocks
total time milliseconds phases taking milliseconds koehler
hoffmann explain works well invertible
e blocksworld actions reversible case tradeoff
possibility less optimal plans plan ith goal set working
st goal second tradeoff getting several partially ordered plans
breakpoints rather single maximally parallel plan believe
worthwhile work combines individual plans preserve
least commitment ordering possible strategies causally link action preconditions


fiengineering conformant probabilistic planner

latest producers use edelkamp parallelize sequential plans
critical path analysis

conclusion future work
presented design implementation probapop partial order probabilistic
conformant planner described distance condition probability
heuristics used discussed advantages disadvantages incremental goals first ordered submitted one one short
term plans involve implementing multiple search queues different base plans reincorporating adl constructs ppddl future work involves three threads one
looking improving performance probapop adding probability information graph probability open conditions optimistically
estimated considering addition domain specific information kuter
nau probabilistic domains second thread exploring middle
ground observability full observability considering pomdp partial order setting finally would incorporate hill climbing techniques
probabilistic framework current probapop software available
www cs mtu edu nilufer

acknowledgments
work supported excellence fund grant nilufer onder
michigan technological university thank jair ipc special track editor david e
smith anonymous reviewers helpful comments

references
bertoli p cimatti roveri heuristic search symbolic model checking
efficient conformant proceedings eighteenth international joint
conference artificial intelligence ijcai pp
blum l furst l fast graph analysis artificial
intelligence
bonet b geffner h heuristic search artificial intelligence
bonet b geffner h mgpt probabilistic planner heuristic search
journal artificial intelligence
boutilier c dean hanks decision theoretic structural assumptions computational leverage journal artificial intelligence

brafman r hoffmann j conformant via heuristic forward search
proceedings fourteenth international conference automated
scheduling icaps pp


fionder whelan li

edelkamp extended critical paths temporal workshop integrating scheduling international conference automated
scheduling icaps pp
edelkamp hoffman j littman younes h international competition proceedings fourteenth international conference automated
scheduling icaps
fern yoon givan r approximate policy iteration policy language
bias solving relational markov decision processes journal artificial intelligence

ferraris p giunchiglia e satisfiability nondeterministic domains proceedings seventeenth national conference artificial intelligence
aaai pp
hansen e feng z dynamic programming pomdps factored
state representation proceedings fifth international conference artificial
intelligence scheduling aips pp
hoffman j nebel b system fast plan generation
heuristic search journal artificial intelligence
hoffmann j brafman r contingent via heuristic forward search
implicit belief states proceedings fifteenth international conference
automated scheduling icaps pp
hyafil n bacchus f conformant probabilistic via csps proceedings thirteenth international conference automated scheduling
icaps pp
kaelbling l p littman l cassandra r acting
partially observable stochastic domains artificial intelligence
karlsson l conditional progressive uncertainty proceedings
eighteenth international joint conference artificial intelligence ijcai pp

koehler j hoffmann j reasonable forced goal orderings use
agenda driven journal artificial intelligence

kushmerick n hanks weld probabilistic
artificial intelligence
kuter u nau domain configurable search control probabilistic planners proceedings twentieth national conference artificial intelligence
aaai
majercik littman l contingent uncertainty via
stochastic satisfiability proceedings sixteenth national conference artificial intelligence aaai pp
mcdermott regression match graphs control search artificial intelligence


fiengineering conformant probabilistic planner

nguyen x kambhampati reviving partial order proceedings
eighteenth international joint conference artificial intelligence ijcai pp

onder n pollack e conditional probabilistic unifying effective search control mechanisms proceedings sixteenth
national conference artificial intelligence aaai pp
penberthy j weld ucpop sound complete partial order planner
adl proceedings third international conference principles knowledge
representation reasoning kr pp
peot smith e threat removal strategies partial order
proceedings eleventh national conference artificial intelligence aaai
pp
pollack e joslin paolucci flaw selection strategies partial order
journal artificial intelligence
russell j norvig p artificial intelligence modern second
edition pearson education upper saddle river nj
smith e frank j jonsson k bridging gap
scheduling knowledge engineering review
thiebaux gretton c slaney j price kabanza f decision theoretic
non markovian rewards journal artificial intelligence
younes h l littman l weissman asmuth j first probabilistic
track international competition journal artificial intelligence

younes h simmons r vhpop versatile heuristic partial order planner
journal artificial intelligence




