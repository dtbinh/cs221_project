journal artificial intelligence

submitted published

hybrid lprpg heuristic modelling numeric
resource flows
amanda coles
andrew coles
maria fox
derek long

amanda coles kcl ac uk
andrew coles kcl ac uk
maria fox kcl ac uk
derek long kcl ac uk

department informatics
kings college london
strand building
london wc r ls uk

abstract
although use metric fluents fundamental many practical
study heuristics support fully automated planners working fluents
remains relatively unexplored widely used heuristic relaxation metric
fluents interval valued variables idea first proposed decade ago heuristics
depend domain encodings supply additional information fluents
capacity constraints resource related annotations
particular challenge approaches handling interactions metric
fluents represent exchange transformation quantities raw materials
quantities processed goods trading money materials usual relaxation
metric fluents often poor situations since recognise
resources spent longer available spent
present heuristic numeric building propositional
relaxed graph mathematical program numeric reasoning
define class producerconsumer demonstrate numeric
constraints modelled mixed integer program mip mip
combined metric relaxed graph rpg heuristic produce integrated
hybrid heuristic mip tracks resource use accurately usual relaxation
relaxes ordering actions rpg captures causal propositional aspects
discuss two components interact produce single unified
heuristic go explore numeric features
integrated mip encoding limited subset propositional augment mip yield accurate guidance partly exploiting structure
propositional landmarks propositional resources
use heuristic enhances scalability numeric resource interaction
key finding solution

introduction
domain independent last decade focussed part
propositional leading important discoveries powerful heuristics
propositional domains relatively little effort invested
metric fluents despite importance representing many practical
c

ai access foundation rights reserved

ficoles coles fox long

numbers essential efficiently encoding resources money fuel materials
state art remains influential proposed hoffmann
extends ignore delete effects relaxation propositional fluents metric fluents
tracking accumulating upper bound increasing fluents ignoring decreasing negative effects symmetrical treatment fluents purposes determining
lower bound leads representation equivalent interval metric
fluent goals preconditions satisfied provided value interval
sufficient satisfy condition although lpg gerevini saetti serina
mips edelkamp capable handling metric fluents depend
relaxation heuristic offer search guidance approaches explored
kambhampati koehler comparatively less successful
planners metricff heuristic generally effective solving complex interactions values numeric resources
exchange quantities one materials production others
contrast solving numbers heart operational mathematical programming techniques many powerful solvers developed solving
linear programming lps mixed integer programming mips
expressed linear constraints variables case
mips integers although efforts exploit linear programming
propositional schedule actions long fox directly
heuristic van den briel benton kambhampati vossen relatively little work
considered exploitation linear programming techniques improve behaviour
numeric domain independent planners kautz walser shin davis wolfman weld benton van den briel kambhampati work
considered section
revisit issue numeric resources beginning
metric relaxed graph rpg heuristic hoffmann focus specifically
domains exclusively exhibit call producer consumer behaviour defined
section actions increase decrease numeric resources fixed quantities
course represents subset possible numeric behaviours common
intuitive one furthermore easy recognise syntactically domain encoding
simple resort alternative strategies domains conform
constraint might include use producer consumer relaxations approximations
domains complex numeric behaviour
explore behaviour rpg heuristic demonstrating typical
patterns interactions producer consumer numeric domains lead highly
uninformative heuristic guidance particularly domains offer opportunities exchanges metric variables address introduce novel heuristic
mixed integer program mip used alongside rpg better capture numeric
constraints described mip constructed used complement rpg discuss extensions improve identified weakness
encode information propositional behaviour evaluate
lp rpg heuristic exploring spectrum one end strict separation
numbers propositions mip rpg components discarding


fia hybrid lp rpg heuristic

rpg entirely encoding preconditions effects actions entirely mip
determine best trade two lies
work report extension earlier work reporting development lp rpg coles fox long smith extends work
additional detail several variants core heuristic exploring impact
tighter integration propositional metric fluents heuristic
related work
integration linear programming lp mip techniques
considered number contexts relevant present work use
lp basis heuristic propositional subscription benton
kambhampati setting goal plan
maximum utility defined terms reward goals achieved minus costs
occurred achieving benton et al use lp optimisation tool help
decide set goals planner satisfy order achieve maximum reward
work benton et al work described exploit relaxation
action ordering rather effects employ lp well rpg
structure two key differences focus work mip
capture interactions within numeric rely conventional
relaxed graph hoffmann nebel propositional reasoning rather
encoding structure mip work van den briel et al van den briel et al
van den briel vossen kambhampati explores use mathematical
programming encode solve
structure lp mip proposed benton et al van den
briel et al makes time consuming solve requiring actions selected
satisfy preconditions effects actions delete effects paired
add effects contrast mip lp propose attempt capture
causal plan structure making construction solutions programs
state much feasible difference interaction two
components integration mip rpg lp rpg much tighter
mip used graph building indicate variable bounds relaxed plan
extraction indicate actions use comparison earlier mip
used solely introduce bias rpg action selection giving preference actions
used solution mip
linear programming exploited work lpsat wolfman
weld uses satisfiability linked use lp solver
ensure literals representing linear constraints metric fluents maintained
plan construction heuristic guidance search
standard dpll search satisfying assignment combined confirmation
corresponding lp satisfiable ip sat kautz walser uses mip encoding
basis solving vossen et al similar way
later work van den briel et al van den briel et al planners mip
used directly heart solver translated mips
rather used guide search tm lpsat shin davis uses lpsat


ficoles coles fox long

system solve continuous processes kongming li williams
another example planner exploits compilation
mathematical programs solved cplex tackle hybrid mixed continuous
colin system coles coles fox long uses lp encodings
manage reasoning effects continuous processes
completely different use linear mixed integer programming lies
work ono williams blackmore ono williams uses
mixed integer programming foundation solving risk allocation
plan level control systems
alternative approaches handling numeric variables include implemented metricff discussed detail section sapa kambhampati
resource ipp koehler sapa heuristic cost estimates generated relaxed plan extraction supplemented additional costs representing minimal set
additional resource producing actions required achieve resource requirements
relaxed plans straightforward implement interesting
modification pure relaxed plan heuristic separates producing
resources solution rest consequence relaxed
plan steps high resource demands constructed preference
longer plan lower demands heuristic value state distorted
penalty attached relaxed plan achieve high resource requirement potentially hugely overestimating true distance state goal resource ipp depends
identification consumers producers builds
resource time map tracks production consumption resources
graphplan search plan leads extension mutex
relation used constrain search graphplan blum furst however
iterative deepening search used graphplan planners scalable solve
large forward state space search proved dominant strategy past
decade

definition
section define class consider
subset general class pddl non temporal numeric
represent linear producerconsumer include example settlers
domain used throughout illustrate ideas presented
pddl numeric
work concerned finding sequential plans solve non temporal numeric
defined subset pddl fox long within
pddl class defined follows
pddl supports specification objective function measure plan quality defined
numeric variables work focus minimising plan length



fia hybrid lp rpg heuristic

initial state state consists set propositions assignment values set numeric variables notational convenience refer
vector numeric values given state v propositional facts f
set actions tuple hpre eff
pre preconditions conditions must hold state
executed
eff effects applied state updated according
effects eff consists
eff propositions deleted state
eff propositions added state
eff n effects acting upon numeric variables
g goal set propositions f set conditions numeric variables
n sets may empty state hf vi goal state f f v
satisfies condition n
general case pddl numeric conditions used pre n expressed
form
hf v op ci

op c
numeric effects eff n expressed
hv op f v



op

common hoffmanns work metricff restrict attention
preconditions expressed linear normal form lnf expression
f v within preconditions must form weighted sum state variables
plus constant w v k likewise consider numeric effects f v lnf
op restrictions guarantee termination construction
rpg evaluating state introducing non lnf preconditions scaling effects
lead asymptotic numeric behaviour certain conditions satisfied
infinite limit lp rpg heuristic describe work require
numeric behaviour actions represented producerconsumer behaviour
effects cause constant increments decrements variables affect apart
specific circumstances permit assignment effects precisely define
notions circumstances allow assignment effects later
solution sequential plan sequence actions transforms initial state goal state respecting preconditions action application
state hf vi application action effects eff eff eff n yields successor
state hf v
f f eff eff
v x op w v c hv op w v ci eff n
v x v x
otherwise


ficoles coles fox long

example settlers
settlers domain introduced international competition ipc long
fox b used hoffmann edelkamp good example
exhibiting interesting use metric fluents aim settlers
build transport building infrastructure extraction refinement
transportation materials numeric structure domain perhaps sophisticated ipc domains date first six numeric resources several
actions act upon available resources effects actions upon
consumption resource shown negative value production shown
positive value shown table another interesting feature domain
resources directly produced whilst raw materials timber stone
ore directly extracted wood coal iron must refined respective
raw form finally domain contains transferable resources addition actions
shown table resources refined consumed fuel transportation
resources loaded unloaded vehicles effect load unload
actions increase decrease amount resource vehicle decrease
increase amount stored given location apart consuming producing e
releasing remaining cargo space vehicle resource produced consumed
loading unloading moved however expressing model pddl
requires pair effects described decreasing one variable increasing another
indistinguishable combination production consumption
producerconsumer
define constrained producerconsumer numeric behaviour considered
first define producer consumer actions two categories producer
define notion producerconsumer variable identification
consumers producers idea common identify resource producers
consumers scheduling example laborie work scheduling
resource constraints see laborie
producerconsumer actions
simple production action defined follows
definition simple producer
ground action simple producer given numeric variable v iff
effect increase v c c positive constant
precondition refers v
definition two important consequences
table represents debugged version original domain available http sourceforge net
projects tsgp files



fia hybrid lp rpg heuristic

action
move cart
move train
move ship
fell timber
quarry stone
mine ore
saw wood
make coal
smelt iron
build cabin
build quarry
build mine
build saw mill
build iron works
build coal stack
build dock
build wharf
build house
build cart
build train
build ship
build rail

timber

stone

ore

wood

coal

iron








































table production consumption settlers domain
simple producer produces uniformly state satisfies preconditions
effect upon v increase value constant amount c
irrespective precise details
potential maximum value v attained use
restricted value v minimum maximum bounds v
must hold allow production
define bounded producer follows
definition bounded producer
ground action bounded producer numeric variable v iff
effect increase v c c positive constant
precondition v ub c
preconditions depending v
bounded producer applied v ub c therefore maximum
amount v attained denoted max prod v ub achieved
applying state v ub c practice state might reachable
actual upper bound value v reachable might lower ub
simple producer assume max prod v


ficoles coles fox long

define bounded consumer follows
definition bounded consumer
ground action consumer respect given numeric variable v iff
precondition v lb c
effect decrease v c c constant
preconditions depending v
definition analogous bounded producer since requires v exceed
minimum value allowing consumption consequence lb minimum amount
v attained denoted min cons v applying state
v lb c
course many resource use behaviours might encoded
domains producer consumer behaviour identify natural intuitive
one producer produces fixed quantity resource consumer consumes fixed
quantity depends availability quantity variants
compiled form e g consumers must leave fixed sized store resource
untouched simply translate origin resource measurement consider
possible extensions basic behaviour nonetheless must emphasise
heuristic develop targeted producer consumer behaviour
usefulness depends common domains practice frequent
occurrence model scheduling resources suggests natural
useful behaviour
producerconsumer variables
definitions bounded producer consumer actions define properties
variables manipulate
definition producerconsumer variable
variable v denotes resource produced consumed iff
set prod v actions increase value v contains bounded producers
set cons v actions decrease value v contains consumers
upper bound v bounded producers v
lower bound v consumers v



fia hybrid lp rpg heuristic

handling integer resources
consumer actions definition require amount resource available
consumption must least much consumer actually consumes
domain encodings behaviour essentially consistent producerconsumer patterns
represented precondition consumer action consumes c units v
form v k rather v c k c general case v know
v k epsilon infinitesimal positive c units v consumed
suggesting lower bound v k c however case consumers
consume integral quantities rewrite strict inequality since must
case consider example fragment load action settlers
precondition available timber l
effect
decrease available timber l
effects change quantities available resources integral
rewritten
precondition available timber l
effect
decrease available timber l
similar transformation used constant effects variable
rational simply finding least common multiple lcm denominators
fractions involved lcm

metricff revisited
section briefly review way metricff hoffmann handles metric
fluents highlight weaknesses faced particular
kinds numeric behaviours domains
metric relaxed graph heuristic
metric rpg heuristic performing relaxed reachability analysis forwards
state evaluated reachability analysis captured
graph blum furst structure two elements domain relaxed delete
conditions actions ignored optimistic upper lower bounds used record
interval possible values metric fluent may reach positive effects metric
variable increase upper bound reachable values negative effects decrease
lower bound satisfaction preconditions tested checking value interval
variable satisfies metric condition precondition interesting note
preconditions tested individually possible principle single value could
satisfy conditions simultaneously even though condition separately satisfied
value conjunctions convex preconditions includes linear conditions
satisfiable value case condition satisfiable interval
associated variable except case conjunction inconsistent
likely arise erroneous domain encodings


ficoles coles fox long

metricff allows preconditions combine multiple variables effects depend
values variables lp rpg allow linear combinations variables
preconditions effects must conform producerconsumer definitions
allow constant increases decreases
heuristic evaluation state metric rpg heuristic undertaken two
phases graph expansion phase solution extraction phase remind
reader two processes convenience reference discussion follows
metric rpg expansion
graph expansion concisely defined follows
definition rpg expansion
let f denote fact layer comprising
f p set propositions
f v array upper lower bound pairs task numeric variable v
denotes action layer consisting list ground actions rpg begins
fact layer f defined state evaluated
f p contains propositions hold
entry hlbv ubv f v set hs v v e value v
rpg expanded adding successive action layers followed fact layers
action layer contains actions
propositional preconditions f p
numeric preconditions satisfied values variables
f v
fact layer f p determined
propositions f p f p plus facts added
action
values numeric values f v first set f v updated
extending interval variable include values achieved
maximum minimum possible assignment effects action
turn
termination condition met rpg expanded actionlayerfact layer pairs
reachability analysis therefore consists alternate steps determining actions
applicable hence instantiating next action layer extend
next fact layer process presented graphically figure small
facts f fn numeric variables v v considering first propositions


fia hybrid lp rpg heuristic





f

f



f

f

f

f



f



f

f

b

f

b

f

f

f

f

v

v


v



f







c





c

v


v

v

figure portion relaxed graph c produces units v consumes
units v
arrows fact action layers denote precondition dependencies actions
instance action appear layer f present f
arrows action fact layers denote effects instance f f
added
numeric variables v v bounds shown square brackets action c
seen one precondition v two effects increase v decrease v
c exhibits producerconsumer behaviour consumes units v produces
units v preconditions satisfied f therefore effects applied
layer upper bound v increased lower bound v
decreased moreover bounds change layer f possible
application c
variable bounds continue diverge way rpg expansion needs
well defined termination condition positive case terminate success
first layer f goal propositions f p goal numeric expressions
satisfied f v relaxed sense negative case terminate failure
f three following hold
actions appear present hence propositions would present f p
hitherto unsatisfied preconditions v c action u b v would change
f v f v
hitherto unsatisfied preconditions v c action lb v would change
f v f v


ficoles coles fox long

adding action relaxed plan
data r metric rpg action include relaxed plan q subgoal
queue
foreach propositional precondition pre

l layer pre first appears

l insert pre q l prop




foreach numeric precondition pre
l layer pre first appears
l insert pre q l num

intuition behind conditions monotonic expansion rpg
implies facts appearing numeric preconditions could become satisfied future layer graph expansion stagnated relaxed
unsolvable
metric rpg solution extraction
expanded graph found relaxed solution exists
goals appeared next step extract relaxed solution plan done
regressing graph priority queue intermediate sub goals
latest layer first subgoal achieving action added relaxed plan
preconditions added queue goals achieved earlier layer
relaxed plan extraction shown lines priority
queue initialised top level goals propositional numeric
goals added priority queue achieved earliest fact layer
appeared priority queue seeded solution extraction proceeds regressing
layer layer propositions suffices action adds fact
increment heuristic value one add preconditions achieving action
queue numeric preconditions process slightly
involved
subgoal achieve v k v k layer f l action l
assigns value k v action chosen satisfy subgoal
otherwise v k v k must achieved layer f l actions increasing
decreasing v chosen l residual value k e
original value k adjusted take account effects selected actions
small enough large enough reachable layer f l residual condition
v k v k added queue subgoal achieved f l
modified value k
note lines actions chosen action layer
recorded adding set ha used basis helpful action set
action effect common action set ha considered helpful helpful
actions important element performance metricff actions achieve
effects exploited relaxed solution state promoted search
state


fia hybrid lp rpg heuristic

relaxed plan extraction



data r metric rpg f n goals
ha helpful actions h heuristic value
ha h
q deepest first priority queue goal layers
foreach p f
l layer p first appears
insert p q l prop





foreach f n
l layer f first holds
insert f q l num



q empty
l hprop numi pop q
foreach p prop
h h achiever p
action layer add ha
prop prop add effects
call r q



















foreach v c num
action l assigned v k k c
h h
l add ha
call r q
remove v c c k v c c k num







foreach v c num
action l assigned v k k c
h h
l add ha
call r q
remove conditions v c c k num

















foreach v c num
f v l v upper c
h h next increaser v
decrease c v
l add ha
call r q
l insert v c q l num
foreach v c num
f v l v lower c
h h next decreaser v
increase c v
l add ha
call r q
l insert v c q l num



ficoles coles fox long

use relaxed plan search
relaxed plan computed heuristic calculation used two ways search
metricff makes use two stage search number actions
relaxed plan used heuristic goal distance estimate first search phase
enforced hill climbing ehc greedy hill climbing search thought
performing breadth first search forward initial state state progression
action application state global best heuristic value found
state found states discarded ehc search continues
manner search strategy incomplete due greedy nature
discarding states could lead loss solution followed
complete wa search order guarantee completeness planner subject
sufficient time memory
since ehc phase already incomplete designed solutions quickly
metricff makes use another completeness sacrificing technique order attempt
guide planner solutions quickly technique referred helpful action
pruning actions helpful action set state considered
successor generation actions helpful discarded note pruning
used best first search would compromise completeness practice helpful
action pruning improves performance metricff many domains however
lead difficulties actions needed solution given state appear
helpful action set attempt compensate ehc terminates
considering helpful actions returns state last global best heuristic
value searches considering applicable actions terminates
leading wa state global best heuristic value found
point helpful action pruning enabled ehc continues
metric rpg heuristic
although metric rpg powerful tool support metric fluents
common situations heuristic gives flawed
guidance include resource persistence cyclical resource transfer
discuss phenomena misleading heuristic guidance
relaxed plan length poorly approximating actual solution length helpful
action distortion
resource persistence
resource persistence consequence relaxation ignores negative effects
resource consumed disappear relaxation negative effects
opportunity reuse resource suggest significantly shorter plan
available case reality although occurs propositional
metric fluents fact metric fluents commonly encode resources must
carefully managed means often acute domains metric
fluents example state settlers domain units resource
produced ship required goal means travel


fia hybrid lp rpg heuristic

otherwise inaccessible location relaxed plan require production
resources see table
one approximating number missing resource production actions
introduced planner sapa kambhampati v state
evaluated relaxed plan consumes c units v produces p
c p shortfall production v would necessitate additional
actions added relaxed plan case maximum amount v
produced single action v heuristic value increased


cps

v
increase lower bound number additional actions needed
indicate actions might serves increase heuristic value states whose
relaxed plans resource production shortfalls however two main limitations first relaxed plan extraction shown chooses
actions without consideration undesirable resource consumption side effects
good search choice might lead state worse heuristic value purely
accident choice achieving actions consuming resource unnecessarily second
increasing heuristic value without adding specific additional actions relaxed plan
helpful actions record fact appropriate resource production helpful
cyclical resource transfer
phenomenon cyclical resource transfer crt consequence encoding
actions move resources around combined relaxation negative effects
encode movement resource removed one location added another
removal encoded decrease relaxed building metric rpg
moving resources appears generate resource destination making
movement spuriously attractive alternative production consider state
unit timber cart location p goal units timber
p clearly solution plan must involve production timber however
valid relaxed plan solution found metric rpg heuristic



load v p timber
unload v p timber

helpful action distortion
resource persistence crt important consequence ehc
search relaxed plans misleadingly short lengths
relaxed plans typically contain production actions useless transfer actions
situation production actions often appear helpful action set
therefore included ehc search even states could conveniently
applied refer helpful action distortion illustrate arises
reference settlers domain consider state unit
timber location goal unit timber location b relaxed
plan use timber construct cart load timber onto cart
transport planner therefore consider producing timber


ficoles coles fox long

compiling producerconsumer behaviour mathematical
program
section describe mathematical program built characterise
interaction numeric variables action choices producerconsumer framework
constraints producerconsumer variables actions
definition producerconsumer variables definition implies actions
useful property preconditions variables derived effects
actions together global variable bounds specifically action
produces c units v precondition requiring v ub v c
ub v global upper bound v applied condition
expresses effect upper bound precondition value
v since v ub v
consumes c units v v must satisfy v lb v c action
applied expression leads effect precondition tied
one constraint
ordering actions relaxed causal relations force
ordered ignored value v series actions applied v
given
x
v v
ca v

aa

ca non negative count variable indicating many times action
applied v lb v ub v v defined follows
produces c units v v c
consumes c units v v c
otherwise v
note equation linear since definitions require v constant
v
equations support construction mathematical program consisting one
variable action one variable flow equation producerconsumer
variable v program fact mixed integer program mip variables
action counts represent applications actions integral however
relaxation exploited allow action count variables take non integral
values yielding linear program lp significant potential benefit
lps solved far efficiently mips


fia hybrid lp rpg heuristic

bounding action variables
within equation associated state variable e equation action
corresponding variable denoting many times applied general
limit number times action applied however numeric decrease
effects propositional delete effects may impose constraints practice due limited
availability resources example applying action increases v expense
decreasing w w resource producer limit
ca implicit consequence instance equation governing value w
specifically ai never exceed w w value w divided change causes
w moreover w monotonically decreasing w constant action
global upper bound ca set w w w value w
initial state
action increases v expense irreversibly deleting fact p fact
precondition clearly applied one shot action coles
coles fox long however contrast numeric delete effects discussed
captured producerconsumer constraints concerned
numeric change however constraint use captured
setting upper bound ca moreover collection actions
depend fact p irreversibly delete say form one shot
action set p add constraint
ca ca



assignment constraints
general direct assignments values variables cannot represented directly constraints following form equation assignments correspond effectively statedependent increases decreases instance assignment value variable
v state v equivalent producing units equivalent consuming
unit applied state v however producerconsumer equations
notion state coefficients action variables denote production
consumption therefore state variables subject constant valued change
mip cannot used encode general assignment effects without extending
allow quadratic constraints constraints involving products pairs variables
however specific conditions assignments safely modelled
within mathematical program retaining linearity constraints
one class assignment effects encoded mip
actions assignment effects variable v k applied states
v c known constant c case effect rewritten
increase effect v k c making assignment actions follow standard pattern
producer consumer actions particular case rewriting made possible
following conditions hold set actions
action depend upon affect v condition satisfied
achieved actions actions
applying action precludes assignments v


ficoles coles fox long

conditions ensure set actions assign v form one shot action
set value v assumed prior application one actions
set action set rewritten increase v assignment value
situation one arises encodings objects created certain actions
objects associated metric variables initialised object creation
capacity newly created vehicle settlers domain

linear programmingrelaxed graph heuristic
defined producerconsumer behaviour shown supports construction
mip action ordering relaxed mip principle hard solve constructing
solutions np hard basis heuristic evaluation states seems sensible
relax integrality constraints action variables reduce
linear program first consider lp used two stages heuristic
evaluation state reachability analysis relaxed plan extraction
reconsider question whether relaxation linear program necessary practice
compromise might full mip lp
overview
context use lp forward state space search planner task
intend use heuristic evaluation states thus assume
state complete assignment variables define
propositional numeric interested estimating number actions
required transition goal state use
strategy used metricff first construct reachability analysis layered graph
alternating facts actions extract relaxed plan determine whether
action applied reachability stage check propositional preconditions
usual way numeric preconditions checked determining whether values
reachable ranges recorded metric variables satisfy condition
reachable ranges calculated lp described explain
extraction relaxed plan involves determining actions support required
conditions goals preconditions selected actions conditions
involve numeric variables use lp decide actions required
many used
lp graph expansion
graph expansion phase calculation metric rpg heuristic seen
layer layer relaxed propositional reachability analysis synchronised relaxed
numeric bounds analysis definition shows numeric variable bounds appear
graph expansion two places first f used determine
actions appear next action layer whose preconditions within
reachable range actions deemed applicable used update variable
bounds subsequent fact layer f


fia hybrid lp rpg heuristic

maximise v
v cc
v cc
v
v
c

v



v



cc













equations

max






v
v
c solutions min max

b rowcolumn

figure lp maximise value v layer f figure treating layer
initial state construction

due relaxed nature way numeric values considered metric rpg
tends produce highly optimistic bounds numeric values returning figure
see effect action c converts two units v two units v
initially two units v present hence could hope produce two
v f v upper bound v already ignoring consumption effect
c makes possible produce arbitrary amounts v c applicable upper
bound v greater equal two reality true long c
yet applied
accurate estimate variable bounds layer f v found
lp encoding described section model parameterised follows
action variables corresponding actions used ensures
reachable actions considered computing resource bounds relevant
one shot action constraints included absence restriction number
action applications contrasts constraint used metric action
may applied per action layer practice prevent lp variables
becoming unbounded set finite large maximum value action variables
initial value variable v set state evaluated
post value variable v f v v range values could reach
f v v lb v ub v
substituting parameters producerconsumer equation equation yields
x
f v v v
ca v

aa

model use lp solver upper lower bounds
f v v setting objective function accordingly
returning example consider finding upper bounds variables f
figure starting state corresponding one given figure thus
considering constraints layer following state treating starting
point corresponding lp shown figure primed variables ones


ficoles coles fox long

use represent values numeric variables layer interest e
case layer ahead state evaluated maximising v e upper
bound f v v yields greater value possible since setting c
value greater thus producing v would lead violation constraint
v ranges variables computed lp four times minimising
maximising two variables shown figure c seen
improve bounds calculated situation metricff figure
v v respectively
notes lp efficiency
lp solved twice per variable per layer expanding
graph important steps taken minimise computational cost reduce
costs combination techniques avoid needing solve lp
computing bound given variable others reduce cost solving
lp
first consequence termination criteria rpg expansion section
need compute upper lower bound given variable current
value large enough small enough satisfy preconditions goals
appears case avoid solve lp determine variable
bound instead use bound computed previous layer without
affecting behaviour heuristic
variable never appears numeric precondition goal entirely
excluded lp
bounds variables change monotonically additional layers added
graph therefore computing upper lower bound variable v temporarily add lp constraints corresponding bounds
computed preceding layer added separately variable first minimised maximised refuse admit tighter variable bound
previous layer
finally actions increase decrease effect variable yet
added lp need compute upper lower bound variable
effect bound variable increased decreased
beyond value state evaluated
basic use lp solution extraction
consider lp used give guidance action selection relaxed
plan extraction first observe lp directly affected propositions
hence cannot used actions able achieve given fact thus
concern lp used identify actions use attain
numeric subgoals top level numeric goals numeric preconditions
actions chosen solution extraction


fia hybrid lp rpg heuristic

adding weighted action relaxed plan














data r metric rpg action include relaxed plan q subgoal
queue w weight
foreach propositional precondition pre
l layer pre first appears
l
pre k q l prop
k w k w
else insert pre w q l prop
foreach numeric precondition pre
l layer pre first appears
l
pre k q l num
k w k w
else insert pre w q l num

first key difference lp relaxed plan extraction concerns
choice actions achieve numeric preconditions original metric rpg heuristic
given numeric precondition e g x c fact layer regressed
beneficial numeric effects layer giving residual numeric precondition e g x c
achieved fact layer process shown lines
lp rpg case shown numeric precondition layer l temporarily
added lp generated layer l constraint line actions use
achieve lp solved line objective minimise weighted
sum across action variables one possible weighting scheme suffice
purpose minimise sum action variables though return question
appropriate weighting schemes later finally actions whose corresponding
variables non zero line added relaxed plan lines
second must accommodate fact lp relaxation underlying
mip action variables integers may solved applying actions nonintegral number times simple example several actions increment
given variable alone would suffice achieve goal value variable
valid optimal solution lp sum variables corresponding actions every action non zero action count variable
solution considered applied relaxed plan length could greatly estimate
required number actions mitigate subgoal e g x c arising
solution extraction associated weight weights along
values given action variables lp used update relaxed plan length
weights manipulated throughout use summarised
follows

initially goal fact added subgoal queue associated weight e
achieved entirely note contrast


ficoles coles fox long

relaxed plan extraction lp







data r metric rpg p g propositional goals
n g numeric goals
ha helpful actions h heuristic value
ha h
q deepest first priority queue goal layers
foreach p p g
l layer p first appears
insert p q l prop

n g
l final layer r

insert n g q l num









else
f fact n g
l layer f first holds
insert f q l num

q empty
l hprop numi pop q
foreach p w prop
h h w
achiever p
action layer add ha

call r q w

prop prop add effects























foreach g w num
lp lp l constraint g
solve lp minimising weighted action sum
av action variable c lp c
foreach av
h h w c
layer add ha
foreach propositional precondition pre
l layer pre first appears
c min c
pre k q l prop
k w c k w c
remove pre k q l prop
else insert pre w c q l prop

subgoal queue records layer goal introduced well
associated weight
action chosen applied ca times achieve queued propositional numeric sub goal g
chosen applied e ca achiever propositional
subgoal g associated weight w


fia hybrid lp rpg heuristic

action applied given non zero value ca solving lp
achieve numeric subgoal g associated weight w
cases relaxed plan length incremented ca w
weight given preconditions w w min ca weights
preconditions used update weight attached achieving corresponding sub goals earlier layers
propositional precondition p already recorded subgoal earlier
layer weight k weight updated max k w otherwise
p added subgoal rpg satisfied first layer
appears weight w
case added support propositional sub goal numeric
precondition p already recorded subgoal earlier layer
weight k weight updated max k w otherwise p added
subgoal rpg satisfied first layer appears
weight w
consequences use lp solution extraction
use lp aid identification selection actions support achievement
numeric goals subgoals extraction relaxed solution lead
important consequences heuristic guidance offered relaxed solution
already noted non integral fragments actions might combined
achieve numeric effects indicated managed handling fractional
preconditions fractional action costs however potential
discuss
partially applied helpful actions
consider situation precisely five possible ways achieve particular
numeric goal uses three actions simple example small
settlers domain five carts unit timber available
location goal one unit timber location b achieved loading
timber onto carts moving b unloading b
metric rpg heuristic used achieve goal three actions would used
working backwards goal selected actions would
action layer three unload action cart c increase amount timber
b
action layer two action move cart c b
action layer one action load unit timber onto cart c
solving lp achieve goal ignoring propositional preconditions
objective minimising sum action variables solution returned


ficoles coles fox long

objective value denote relevant load unload action variable pair
cart li ui pool solutions could returned satisfying


li ui





x

li ui



non zero variable ui k relevant action move cart b
added relaxed plan weight k line
purposes providing contribution relaxed plan length unimportant
solutions returned sum action variables
sum move actions added giving total relaxed plan length however
discussed section relaxed plan used determine set helpful actions
effect common actions relaxed plan chosen
action layer one example action layer one consists action actions
load unit timber onto cart original metric rpg case exactly one action
would used however lp five actions could fractionally used
consequence within pool lp solutions could returned
lead search much greater branching factor case factor
five greater
source relaxation integrality constraints action
variables extent affects search depends precise solution returned
lp solver different solvers may greater lesser tendency return solutions
action variables assigned non integral values extreme response
would revert mip require action variables integral rather
real valued alternatively focussing issue identified one could require
action variables corresponding actions action layer one integers
case mixed integer programming since cost mip solving
exponential number integer variables difference variants
significant change need made point switch
lp solution extraction rather graph expansion prior assignments
action variables unimportant value objective function used
course price pay potentially significant mip solving np hard
lp solving polynomial however exchange shift complexity
example given left single helpful action longer possible
fractionally load timber onto cart one cart must chosen extent
two possible integer modifications affect search performance considered later
evaluation
preferring earlier actions
within metric rpg heuristic explicit preference actions
appear earlier relaxed graph shown fact
needed goal satisfy precondition action chosen insertion
relaxed plan queued sub goal satisfied first fact layer
appeared action chosen support fact amongst
earliest possible achievers intuition behind preference earlier actions


fia hybrid lp rpg heuristic

observation later action appears relaxed graph
greater number actions need added relaxed plan support
preconditions therefore preferring earlier actions usually leads shorter relaxed plans
hence closer approximations optimal relaxed plan length
within lp objective set minimise sum action variables e use
actions possible distinction actions appear earlier
rpg appear later recalling lp disregards propositional
preconditions actions failing take account action first added
rpg lead lp relaxed plan extraction generating poor quality solutions
consequently poor search guidance
address pressure generated within lp objective function
tuned prefer actions need fewer supporting actions relaxed plan
achieved forcing lp favour actions appear rpg earlier encode
preference earlier actions weighting scheme action variables
objective function actions appearing earlier given smaller weights
appear later propose later evaluate two ways achieving first
simpler use geometric series dictate coefficient given action variable
layer l first appears case objective coefficient

kl
k k
value k controls extent earlier actions preferred interpreted treating k n actions selected layer l exactly good selecting n actions
layer l anything less k n actions layer l preferable selecting
n actions layer l throughout remainder refer scheme
layer weighting value k
second option record cost action estimate number
actions needed support propositional preconditions use weight
objective function achieved rpg cost propagation
sapa kambhampati achieve graph expanded
costs fact action recorded updated layer initially fact
p state evaluated cost fact layer zero cost p zero fact
p true time zero cost p fact costs used derive action
costs rules akin used hadd hmax bonet geffner cost
action layer cost defined according one
cost max max cost p
ppre

cost sum

x

cost p

ppre

action costs turn used update costs proposition
subsequent fact layer cost fact reduced cheaper
way achieve action layer potentially reduce cost
propositions p adds
cost p cost iff cost cost p
cost p otherwise


ficoles coles fox long

graph expanded process alternating action cost estimation
fact cost estimation used propagate cost information rpg
setting objective lp use cost action cost coefficient
action variable corresponding cost propagation described
costs derived solely basis propositional preconditions effects therefore
cost estimate number actions needed support preconditions
purposes desirable lp add actions support numeric
preconditions estimate number actions needed support propositional
preconditions action measure cost impact upon relaxed plan due
action selected

adding propositions lp
benton et al explore idea lp guide search propositional
context subscription work lp used
determine goal subset achieve gain maximum utility whilst successful
achieving aim authors observe use lp heuristic guide search
expensive indeed expensive feasible propositions encoded
lp way propose task solving lp becomes equivalent solving
entire relaxed action ordering non integer action variables
section reconsider inclusion propositions lp considering spectrum
possibilities including propositions way include propositions
even though focus work numeric including propositions
lp might still interest instance supporting propositional goal might
require consumption numeric resources worst case one could compile
numeric goals become preconditions action achieves
dummy propositional fact goal modify goal goal since
numeric goals modified lp used solve
individual preconditions dummy action inevitably chosen rather
requiring goals satisfied conjunction described section since
dummy goal model merely reformulation original information
theoretically accessible conveyed lp generally hope
identify intermediate landmark propositions well final goals could usefully
encoded lp
adding propositional goals lp
although lp describe section contain specific reference propositions hence propositional goals formulate constraints act proxy
considering actions achieve need introduce additional
variables instead add constraints ensure least one achiever chosen
propositional goal goal fact g true state evaluated
list actions achieve g add constraint lp
recent layer graph



fia hybrid lp rpg heuristic

least one achieving action must used specifically given actions
partially applied total least one achieving action must used lp
containing constraints used augment positive termination criteria
graph expansion detailed section terminate first fact layer
goal propositions f f p
goal numeric expressions n satisfied individually f v
lp used compute numeric bounds layer f still solvable
constraints propositional goals added
use goal checking lp two key consequences first actions layer
f cannot used satisfy goals whilst respecting numeric constraints
lp additional layers added graph necessary actions
appeared termination criterion reached thus reasoning resource
persistence section heuristic better able recognise cases although propositional goals might appear individually reachable additional
production needed meet collectively alternative actions need used
state dead end second solution lp used confirm point used
indicate actions add relaxed plan achieve propositional goals
propositional preconditions actions satisfied usual way line

requiring sum action variables selected achieve goals
least one allowing variables real valued lp could theory provide
weaker guidance rpg similar issue noted section
considering helpful actions could ameliorated similar manner namely making
goal achieving action variables integral return issue evaluation
considering whether benefits search
landmarks lp
landmark fact hoffmann porteous sebastia propositional fact must
true point every solution plan given first work
landmarks porteous sebastia hoffmann proposed method extracting
subset landmarks regressing goals
delete relaxation since introduction idea porteous et al
landmarks come play increasingly important role recent development techniques extracting landmarks richter helmert westphahl
zhu givan development heuristics different relaxations richter
westphal domshlak katz lefler helmert domshlak karpas
domshlak allowed community exploit landmarks successfully
relaxed plan extraction phase lp rpg heuristic relaxes action ordering
propositional preconditions effects might benefit substantially delete relaxation
landmarks use landmark facts lp offers mechanism
tightly couple lp rpg allowing increased information sharing


ficoles coles fox long

propositional numeric components heuristic know landmark
fact must occur solution plan yet appeared path state
evaluated add constraints representing lp
propositional goals sum action variables achieving
given landmark must greater equal propositional goals constraint introduces need provide numeric support action chosen support
landmark goals special case landmarks important feature goals
even achieved path current state true
current state must reachieved constraints added lp
ensure reflect landmarks achieved path current state
state modified record record updated landmarks seen
similar lama richter westphal
set disjunctive landmarks set propositional facts one must
true solution extraction disjunctive landmarks
considered gregory cresswell long porteous even difficult
case conjunctive landmarks exploit systems
knowledge certain fact must true allow planner infer certain actions
must present solution plans inform heuristics however disjunctive
landmarks less informative disjunctive landmarks often arise symmetry
example might know order deliver package one place another
loaded truck truck disjunctive landmark
package truck generated even know truck use
know one disjunctive landmarks must hold thus context numeric
resources truck must fueled assuming start empty might entail
additional costs therefore interest take account disjunctive landmarks
numeric reasoning
able make use disjunctive landmarks lp constrain
ensuring support given least one fact within unreached disjunctive landmark dealing standard conjunctive landmarks constraint
sum least one achiever must added propositional landmark
disjunctive landmarks however constraint slightly different disjunctive landmark
set l satisfied constituent landmarks satisfied apply
actions
achieves l eff l
encode disjunctive landmarks lp assuming yet met
two possibilities first add binary variable sf fact f l
constraints sf take value least total one action
adding f least one variable sf take value least
one disjunctive landmarks top
fully met alternative potentially cheaper
add constraint achieves l allows disjunctive
landmark considered satisfied sum across action variables supporting
constituent facts least somewhat weaker constraint individual
non disjunctive landmarks guarantee support least
individual constituent fact instance two fact disjunctive landmark satisfied
support constituent fact considered approaches


fia hybrid lp rpg heuristic

found negligible difference performance time taken nodes expanded
two encodings real saving achieved relaxed
managing propositional preconditions effects
far considered propositions must achieved due
goals landmarks however second class propositions given
values assigned action variables lp must supporting actions added
solution relaxed plan
extend lp capture propositional preconditions effects first introduce
binary variable f integer whose value fact f true
state evaluated involved two constraints first actions


add f


f
case proposition corresponding f goal f hence one
achieving actions must positive value since constraint expressed
continuous variables actions might partially applied relaxation
actions ap apm f precondition
n f ap apm
use n denote sufficiently large number constraint ensures
least one actions depending proposition corresponding f used relaxed
plan f must positive corresponding proposition required true
within relaxation use n ensure f sufficient satisfy
preconditions many actions pair constraints effectively conditional version
constraint meet propositional goal described section cases
proposition neither goal landmark constraints serve enforce least
one action adds f chosen positive value lp action requiring f
chosen even partially
recognising propositional resources
finally consider one case potentially useful model propositions
equivalent numeric form pddl finite domain integer resources modelled
two ways numeric variables set propositions consider following two
formulations fell timber action settlers domain simplicity effect
metric tracking variable labour omitted
action fell timber
parameters p place
precondition cabin p
tempting consider replacing constraint slightly troublesome n constraints
form f api unfortunately appropriate action variable api
greater due multiple applications action yet f sufficient satisfy
precondition action applications



ficoles coles fox long

effect increase available timber p

action fell timber
parameters p place n n value
precondition cabin p
timber p n
less n n
effect timber p n
timber p n

representations situation uses different mechanism first uses numeric variables second uses propositions
numeric propositional formulations metricff heuristic
little practical difference guidance given numeric case fell timber
action applied upper bound amount timber place p increased
means action consuming amount timber executed subsequent
layers regardless many actions resource applied
propositional case delete effect timber e deleting fact
previously relaxed number actions requiring amount
timber applied
turning attention lp rpg heuristic however observe although
rpg part heuristic exhibits weakness propositional case
different relaxation used lp numeric reasoning means consumption
timber would disregarded lp relaxes action ordering rather delete
effects production consumption effects resource modelled numerically
interaction captured accounted therefore interests
lp rpg convert resources modelled propositionally numeric formulation
reasoned lp rather rpg
although formulation resources example instance common
idiom used capture numeric resources propositional encoding situations
natural model resources propositionally outset often
case binary resources resources present resources
course special case general resource model described consider
propositional numeric counterparts action switch water pump
action activate
parameters p pump
precondition p
effect p
p

action activate
parameters p pump


fia hybrid lp rpg heuristic

precondition pumping p
effect increase pumping p

corresponding actions similarly created switch pump fact
p deleted p added equivalently unit pumping p consumed
many senses natural formulation action first propositions
way binary resources encoded benchmark domains however
second formulation equivalent assuming value pumping p initial state
interaction propositional resource resources
identified little motivation add lp since
numeric support required case binary resource impact another
numeric variable shall see efficient model numeric resources
suppose water pumps control flow water two ways model
pddl shown
action activate
parameters p pump
precondition p
effect
increase water flow
p
p

action activate
parameters p pump
precondition pumping p
effect increase pumping p
increase water flow

first two actions switches pump binary propositional resource
produces unit water flow actions domain preconditions
water flow action run water wheel precondition water flow
interaction propositional numeric variables
use first model action rpg capture propositional part
action whether pump lp encode numeric part
action since rpg relaxes delete effects represent fact p
longer true hence prevent pump switched many times
lp built first formulation action activate consume numeric
resources used arbitrarily often increase water flow fact
switching necessary achieve increase ignored thus mixing propositions
numeric resources action degrades information available lp
second formulation state pump appears lp variable
use activate deactivate denote actions activating deactivating


ficoles coles fox long

pump constraints pumping variable
pumping init activate deactivate
pumping
pumping
clear activate action applied applied
deactivate must applied corresponding effect water flow order
satisfy last constraints provides useful guidance indicates
water flow cannot reach units actions actions control pumps
means increasing flow need added lp expansion
graph means attain sufficient flow found dead end
discovered would otherwise wasted search effort
static analysis techniques capable identifying propositional resources developed tim system described long fox used
preprocessing stage recognise propositional resources domains translate
equivalent numeric resources use translation recognised
resources resulting numeric preconditions effects included lp
way numeric variables lp order relaxation rather
rpg delete relaxation used compute heuristic values preventing impossible reuse
resource cases described

extending scope numeric reasoning lp
section discussed lp encoding captures producerconsumer behaviour
actions used first version lprpg coles et al section discuss
encoding enhanced use numeric information representing
structure improve guidance resulting heuristic
provide planner address two key issues ensuring conjunctions
numeric goals satisfied considering issue fractionally applied actions
lp
checking numeric goals alongside propositional goals
section noted constrain lp finds actions achieve
propositional goals extend capture numeric goals n adding
numeric goal directly lp constraint propositional goals
clear advantages terms resource persistence section insisting goals
simultaneously achievable rather individually achievable additionally though
raises expressive power numeric goals able handle anything
expressed linear normal form lnf lnf formula added
lp constraint
catalytic resources
far considered numeric variables conform producerconsumer behaviour however another related class variables expressed


fia hybrid lp rpg heuristic

lp similar way producerconsumer variables variables represent resources must present order action applied
consumed resources used support many actions example
resource catalyst chemical reaction catalyst must created
reactions bought present enables reactions allows take
place quickly catalytic reactions resource must present
consumed though could non catalytic reactions may consume resource
another example one might consider building unit plant support
process unit must order process occur built
used many times enable actions without necessitating destruction often
presence structures represented propositions
need case many indistinguishable processing units present several
units catalyst needed often makes sense represent numerically
extend lp rpg heuristic provide guidance
actions require v c affect value v encounter difficulty
lp encodes notion time ordering actions relaxed impossible ascertain
value v specific time order determine whether catalyst precondition
satisfied therefore add additional constraints lp determine upper
lower bounds v obtained optimistic pessimistic possible ordering
actions whose variables non zero optimistic upper lower bound
v v v respectively add constraints
x
v v
max v

aa
v v

x

min v



aa
upper bound equivalent ordering production actions consumption
actions lower bound reversed equivalent consumption actions
ordered production actions bounds computed
possible values resource variables reachability graph
considering actions actually selected execution relaxed plan
rather could possibly applied seen neither requires
explicit notion time
bounds action precondition v c applied even
fractionally must case v c otherwise precondition action
could never met ordering actions chosen course v c cannot
guarantee legal ordering producers consumers achieves
value need least feasible opportunity satisfy precondition
added lp introduction binary integer variable pair
constraints actions requiring precondition v c n
note complementary class variables whose values must remain certain level
order actions applied produced seem less useful real
nonetheless handled analogous way
section could captured lp even expressed propositionally



ficoles coles fox long

denote large number denote binary variable add pair constraints
n
v lb v c lb v



first constraint forces take value actions requiring
precondition v c applied second constraint determines lower bound
v value lower bound v lb v global lower
bound v otherwise since action needing precondition applied
thus v c constraint implies least one
actions applied however since non zero value makes
lp harder solve pressure set reason
precondition must satisfied important note constraints
added lp v c preconditions matched v c effect
modified heuristic able support previously could
behaviour domains without characteristics entirely unaffected


section present thorough evaluation lp rpg heuristic comparing
state art numeric planners considering use different lp solvers performing
ablation studies determine effective many potential different configurations lp rpg discussed include weighting action variables
lp according rpg layer appear inclusion propositions
numeric goals lp consideration variables lp remain
integer relaxed real numbers tests run ghz
pentium iv machines limited minutes gb memory planner
planner configuration fails report solution within limits deemed
failed solve
evaluation domains
first discuss selection evaluation domains purpose selecting domains
select construct examples informative evaluating behaviour
heuristic domains numeric variables conform producer consumer
behaviour identified syntactically different strategy
employed since syntactic analysis trivial overhead making decision
negligible assume performance domains
applicable consistent whichever alternative strategy selected deployment
consider existing competition benchmarks producerconsumer behaviour
introduce domains exhibit behaviour current benchmarks exhibit interesting producerconsumer behaviour order make comparison informative possible make use
mprime domain ipc
rovers domain numeric variant ipc


fia hybrid lp rpg heuristic

settlers domain ipc
alternative encoding settlers domain described
pathways domain ipc developed metric domain derived
metric time variant replacing durative actions comparable nontemporal actions
addition standard ipc set settlers introduce
make full use scope domain domain allows
building ships transporting materials disjoint islands however
benchmark set none require building ships requires large amount
infrastructure therefore add challenge planners
materials must imported overseas order achieve goals first
requires merely building ship requires import timber overseas
requires building housing overseas adds goals requiring
planner achieve goals mainland build housing island final
considers disjoint islands resources must combined achieve
goal island requires building much greater infrastructure
required original ipc settlers consider two variants
settlers domain standard ipc domain encoding representation
carts proposed gregory rendl number carts given
location represented numeric variable carts location two
possible move actions carts one moves cart unit resource one
location another one moves cart without moving resources e
cart moves whilst empty encoding possible carts transport
single unit material necessary maintain specific named identities
capacities cart
addition benchmark domains use two domains created development lp rpg
market trader domain coles et al
hydro power domain
market trader domain trader begins small amount money
goal increased certain level must achieved travelling
markets sells collection goods certain price
good type buys another lower price money made buying items
cheaper transporting via camel locations command
higher price moving associated cost food required camel
representation general class real world trading aim
make money buying transporting selling goods hydro power domain
concerned financial gains domain different structure rather
transportation concerned energy storage hydroelectric reservoirs
buying electricity pump water uphill periods low demand electricity
cheaper storing potential energy electricity sold higher price


ficoles coles fox long

domain
market trader
hydro power
pathways metric
settlers
settlers numeric carts
mprime
rovers numeric
sugar
total

lp rpg










lp rpg










metricff










lpgtd










table coverage achieved different planners

times greater demand domain encoding augmented take account energy
loss purchasing one unit energy sufficient provide one unit energy later
losses storage process despite temporal axis
interested profit made force planner advance time
specific point ask sufficient profit made planner
choose advance time necessary general continuous processes
customer demand changes continuously simplify discretising
minute time intervals demand schedule transformer domain bell
coles coles fox long uk national grid figures original
transformer model represent temporal features advance time
action rather temporal pddl since lp rpg temporal planner
final domain consider sugar domain radzi objective
produce sugar industrial processes refining raw cane domain
taken set domains designed optimisation several
paths goal originally included allow planner choice trajectories
challenge better quality solutions set domains designed
challenging metric optimisation domains set trivial
standard metricff plan metric ignored almost solved
less second therefore domains consider sugar domain
remains challenging metricff even optimisation required number
paths appear lead goal large without good guidance difficult
solution

say domains uninteresting present interesting challenge
explored radzi carefully modified variant lp rpg however challenge
good quality plans quality determined complex metric simple plan length
neither metricff lp rpg form discussed difficulty finding poor quality plans




fia hybrid lp rpg heuristic

markettrader


hydropower


lprpg



lprpg
lprpg

lpg




time

time





















number















number



lprpg
lprpg

metric lpg





sugar

pathwaysmetric






lprpg
lprpg

lpg




time

time






















number















number

settlers












settlersnumeric


lprpg
lprpg

lpg

lprpg
lprpg

lpg



time

time




















number









number

mprime






roversnumeric


lprpg
lprpg

lpg



lprpg
lprpg

lpg


time


time
























number















number







figure comparison metricff lpgtd time taken solve





ficoles coles fox long

market trader


hydro power


lprpg
best known

lprpg
lprpg

lpg
best known





solution quality

solution quality
























number














number

pathways metric






lprpg
lprpg

lpg
best known




solution quality


solution quality



sugar


lprpg
lprpg

metric lpg
best known

























number

















number

settlers










lprpg
lprpg

lpg
best known


solution quality


solution quality



settlers num carts


lprpg
lprpg

lpg
best known
























number









prime








rovers numeric


lprpg
lprpg

lpg
best known



lprpg
lprpg

lpg
best known


solution quality


solution quality


number





















number

















number



figure comparison metricff lpgtd plan length









fia hybrid lp rpg heuristic

comparison planners
first compare performance lp rpg existing numeric planners use
found strong though uniformly best configuration planner
demonstrate subsequent sections
landmarks propositional goals added lp section
weight action variable objective function used solution extraction l l layer appeared rpg expansion
action variables corresponding actions action layer integral
ibm ilog cplex version used lp solver
compare two historically successful numeric planners metricff hoffmann lpgtd gerevini et al remain state art many
modern planners e g lama handle numeric preconditions action costs
clarify differences performance compare lp rpg reimplementation metricff lp rpg code difference computing
upper lower bounds numeric variables rpg expansion lp rpg allows
actions applied many times action layer rather per action
layer metricff since publication earlier comparison lpgtd coles et al
improved version lpgtd produced version lpgtd
performs much better earlier version use
consider variant lpgtd metric lpgtd gerevini saetti serina designed
responsive plan metrics numeric variables experiments showed
metric lpgtd perform significantly differently lpgtd generating first
feasible plans plan length metric apart pathways domain lpgtd crashes therefore report performance lpgtd
domains except pathways report figures metric lpgtd
interesting pattern emerges relative performance planners across set
evaluation domains shown figure domains organised top
strongly numeric relying propositions towards bottom
propositional structure consequently less numeric structure two
heavily propositional domains mprime rovers lpgtd generally
successful planner solving evaluation sets often
fastest planner pattern holds standard competition
competition formulation settlers domain metricff
performs quite well mprime rovers domains struggles settlers
domain due numeric structure present
strongly numeric domains however lpgtd performs poorly indeed fails
solve single pathways market trader domains due
crashing rather planner searches exhausts resource limits without finding
solution hydro power lpgtd solves five easiest able
scale beyond experiments observed lpgtd struggles domains
limited propositional structure generally search guidance gets
numeric poor comparing two settlers variants gives


ficoles coles fox long

interesting insights carts turned numeric resource lpgtd struggles
much solving instead whereas performance lp rpg fact
improved note although lpgtd successful ipc cannot solve
richer ship building overseas transport required whereas lp rpg
capable solving instances
turning attention comparison metricff observe
solved planners generally solved quickly metricff particularly
domains propositional structure lp rpg additional
overhead solving lp state partly course due highly efficient
metricff code base occasionally general pattern broken lp rpg faster
slight variations ordering heuristically equivalent states lead
significant differences performance lp rpg similar
coverage metricff although sometimes solving different
branch orderings different code base cause differences marked
pathways sugar domains serve demonstrate basic
implementation performing drastically differently standard metricff causing
gains observe
looking numeric domains particular lp rpg heuristic able provide much better guidance allowing lp rpg solve many metricff
notably market trader domain neither metricff lp rpg solve
due poor guidance standard rpg heuristic gives domain relaxing transfer numeric resources relaxed plan buy item
repeatedly sell item sufficient profit made hydro power
similar situation occurs one unit energy pumped unit
energy repeatedly sold future time day making sufficient profit without
guidance pathways chemical reactions must take place relaxation used
metricff allow units substance used repeatedly several different
reactions despite fact used consumed lp rpg heuristic permit therefore gives much better search guidance allowing lp rpg
solve domain numeric resource transfer present settlers
domain leads poor guidance metricff heuristic metricff able solve
use lp effective domain allowing
solved different formulations seem make little difference
coverage metricff neither making easier metricff solve
quality solutions plan length produced different planners displayed
figure emphasize lp rpg current form making attempt
minimise general measure plan quality merely intended give
indication whether large degradation indeed fortuitous increase
quality moving standard rpg heuristic hybrid lp rpg
potential improve plan quality lp rpg style explored
work domains preferences coles coles range
different metrics radzi none use specified metric functions
minimise instead use number actions solution plan value
rpg heuristic tend minimise none planners run optimisation
mode available simply report first plan found search


fia hybrid lp rpg heuristic

domains quality solutions produced lp rpg comparable
produced metricff lpgtd sugar domain lp rpg heuristic compares
favourably lpgtd although could perhaps hope running lpgtd quality mode
would enable produce better solutions pathways lp rpg produces particularly
long solutions trade able scale solve far
return issue solution length domain considering weighting
action variables lp solution extraction
summary lpgtd seems generally successful domains sufficient propositional structure metricff generally efficient
capable solving structure domain becomes heavily numeric
planners perform poorly lp rpg however able solve many
planners making use search guidance lp captures numeric
interactions well
lp solvers
lp rpg construction use lp performed functions commonly
available wide range lp solvers adding variables constraints model setting
variable bounds marking whether variables real integer valued changing objective
function current implementation employs minimal abstraction layer
lp rpg lp solver almost lp solver used
section consider use three lp solvers
ibm ilog cplex version commercial mixed integer linear programming
solver
coin lp clp version open source lp solver feature
integer variables clp used within coin branch cut cbc version
open source
lpsolve version open source mixed integer linear programming solver
experiments lp solvers found cplex substantially
robust two particularly lp extended include satisfying
propositional goals landmarks thus purposes comparison
use configuration lp rpg equivalent used earlier coles et al
efficient presented elsewhere robust
caused clp lpsolve crash less often testing
propositional goals landmarks added lp encodes numeric goals

integer variables potentially helpful actions assignment
effects
layer weighting scheme k used
refer configuration limited lp rpg


ficoles coles fox long

market trader


hydro power


cplex
lpsolve
clp

cplex
lpsolve
clp



time

time




















number















number

pathways metric








sugar


cplex
lpsolve
clp

cplex
lpsolve
clp





time

time


































number

settlers














number

settlers numeric carts


cplex
lpsolve
clp





cplex
lpsolve
clp


time

time


















number









number

prime



rovers numeric


cplex
lpsolve
clp









time

time















cplex
lpsolve
clp








number















number









figure time taken limited lp rpg solve different lp solvers



fia hybrid lp rpg heuristic

market trader


hydro power


cplex
clp
lpsolve




plan length


plan length

cplex
clp
lpsolve




























number














number

pathways metric








sugar


cplex
clp
lpsolve

cplex
clp
lpsolve









plan length

plan length

























number













settlers





number









settlers num carts


cplex
clp
lpsolve



cplex
clp
lpsolve




plan length

plan length






















number









number

prime






rovers numeric


cplex
clp
lpsolve



cplex
clp
lpsolve


plan length


plan length























number

















number









figure lengths plans produced limited lp rpg different lp solvers



ficoles coles fox long

domain
market trader
hydro power
pathways metric
sugar
settlers
settlers numeric carts
mprime
rovers numeric
total

cplex










clp










lpsolve










table coverage limited lp rpg different lp solvers

tests shown figure table beginning market
trader domain quite clear cplex faster clp domain lpsolve
turn substantially performs cplex many two orders magnitude
speed though comes cost terms robustness cplex solves
lpsolve solves lpsolve demonstrates strong performance hydro
power domain clp falls lpsolve cplex
pathways metric domain illustrates robustness cplex extension beyond
basic producerconsumer model encoding domain contains actions numeric
preconditions must true affected action described section encoding requires integer variable precondition domain
contains goals referring multiple numeric variables e g
available cycdp available c myc max
seen domain cplex lp solver allows lp rpg
solve anything smallest beyond clp unable solve
lp reach goals initial state lpsolve solvable lps reported
unsolvable whilst planner make attempt search erroneous state pruning
happening lps falsely declared unsolvable renders unable
solutions
sugar domain solver leads planner performing particularly well
solved contrasts earlier shown table
different configuration lp rpg cplex richer lps able solve
however noted start section compromise
performance planner cplex allow reasonable comparison clp
lpsolve richer lp cplex solves lpsolve
clp perform far worse falsely claiming lps unsolvable returning suboptimal
solutions detriment performance planner
two different encodings settlers domain carts represented explicitly carts function see cplex robust
alternative domain encodings original ipc domain model lpsolve performs
particularly well clp markedly different cplex numeric carts


fia hybrid lp rpg heuristic

domain

lpsolve
clp
cplex
build ms solve ms build ms solve ms build ms solve ms
market trader






hydro power






pathways metric






sugar






settlers






settlers num carts






mprime






rovers numeric






average






table time spent lp building solving different lp solvers

encoding however cplex considerably better solvers robust
change lp structure arising alternative domain encoding
mprime rovers domain clp lpsolve consistently faster
cplex
summarising see limited lp rpg solve clp
lpsolve usually faster cplex cplex offers better coverage
greater robustness grants access richer encodings allow better performance
order investigate detail planner takes much longer solve cplex devised tests table shows average time spent
per state building solving lp lp solver building time time
required integrate constraints inserted lp rpg internal model used
particular solver note necessarily directly comparable planners necessarily take paths state space might evaluating
different states paths nonetheless often similar times taken
strongly indicative give fairest possible comparison include table
data solved three configurations data presented
planner across exactly set startling observation cplex
typically spends order magnitude longer building lps two solvers
settlers two orders magnitude often solves lps quickly total time spent handling lps generally greater indeed cplex time spent
solving lps domains dominated time spent building
indicates although cplex good choice use lp solver solves
lps efficiently practice solvers faster due substantial overheads
building large number lps necessary least one per state suggest
robust lp solver low lp building overheads could dramatically improve
performance lp rpg
considering solution quality note way lp solvers
direct search different trajectory solvers return different optimal solutions
lp point search recall planner configuration seeks
directly minimise plan length objective function lps uses weighted sum


ficoles coles fox long

domain
market trader
hydro power
pathways metric
sugar
settlers
settlers numeric carts
mprime
rovers numeric
total

l










l










l










l










l










hmax










hadd










table coverage varying lp objective function weighting schemes

number actions figure shows similar picture arises plan length
time performance lpsolve often leads planner shorter solutions cplex
helping explain often faster since explores search tree smaller depth
particular happens rovers numeric sugar domains well settlers
variants across domains little variation quality solutions produced
lp objective function weighting schemes
lp solution extraction phase one open issue weighting
scheme use objective function since lp ignores propositional preconditions
actions simple objective minimising sum action variables layerweighting scheme k gives lp solver freedom select equally actions
appearing layers rpg regardless many actions subsequently need
added relaxed plan support discussed earlier layer weighting
scheme k weighting scheme estimated costs achieving
preconditions actions encourage lp solutions favour actions
cheaper apply hmax hadd heuristics candidates base
estimates cost application actions course cases
choice earlier action one lower costs achieve preconditions
flawed choice worse choice would made k
layer weighting scheme simply nature heuristics
section evaluate range lp action variable layer weighting schemes
action cost estimate schemes use k layer weighting schemes
consider setting action variable weights plus cost meeting propositional
preconditions hmax hadd action cost estimate schemes parameters
planners set sensible defaults action variables first action layer
integral propositional goals landmarks included goal checking lp
showing coverage configurations shown table first
observation weighting scheme better layer weighting
k action variables particularly noticeable settlers domain
several situations earlier actions preferred example


fia hybrid lp rpg heuristic

weight vs weight time
sugar
rovers num
prime
settlers num carts
settlers
pathways metric
hydro power
market trader



weight nodes



weight time

weight vs weight nodes expanded

sugar
rovers num
prime
settlers num carts
settlers
pathways metric
hydro power
market trader





















weight time









weight vs weight
sugar
rovers num
prime
settlers num carts
settlers
pathways metric
hydro power
market trader



weight nodes

weight time





weight vs weight nodes expanded

sugar
rovers num
prime
settlers num carts
settlers
pathways metric
hydro power
market trader




weight nodes



















weight time










weight nodes

weight vs weight time
sugar
rovers num
prime
settlers num carts
settlers
pathways metric
hydro power
market trader



weight nodes



weight time

weight vs weight nodes expanded

sugar
rovers num
prime
settlers num carts
settlers
pathways metric
hydro power
market trader























weight time









weight vs weight time

weight time





weight vs weight nodes expanded

sugar
rovers num
prime
settlers num carts
settlers
pathways metric
hydro power
market trader

sugar
rovers num
prime
settlers num carts
settlers
pathways metric
hydro power
market trader



weight nodes




weight nodes



















weight time










weight nodes



figure layer weighting schemes lp k versus k x different values x



ficoles coles fox long

weight vs h max nodes expanded

weight vs h max time

h max time



sugar
rovers numeric
prime
settlers num carts
settlers
pathways metric
hydro power
market trader

sugar
rovers numeric
prime
settlers num carts
settlers
pathways metric
hydro power
market trader



h max nodes




















weight time










weight nodes

weight vs h add nodes expanded

weight vs h add time

h add time



sugar
rovers numeric
prime
settlers num carts
settlers
pathways metric
hydro power
market trader

sugar
rovers numeric
prime
settlers num carts
settlers
pathways metric
hydro power
market trader



h add nodes






















weight time










weight nodes



figure action weighting schemes lp objective function layer weighting k
versus action cost estimate schemes hadd hmax
supposing cart location unit resource initially available
b needs moved location c two two action solutions lp
annotating action layer appears
load cart unload cart c
load cart b unload cart c
layer weighting scheme k two solutions indistinguishable
cost however latter selected two actions needed support
relaxed plan moving cart b moving cart c alternative action
variable weighting schemes set weight loading cart b higher
loading leading preference first solution better outcome
search guidance similar phenomenon occurs rovers domain favouring
earlier actions increases preference recharging rovers close current
locations domain leads better avoidance dead ends since postponing
recharging actions risks possibility rover little charge left get
back recharging location
data layer weighting schemes peak k reasonable trade minimising number actions chosen lp solution
favouring earlier actions overall performance hmax losing performance


fia hybrid lp rpg heuristic

time taken
nodes expanded
plan length
k
hmax hadd hmax hadd hmax hadd
k x x x x x
x x x x x x
x x x x x
x
k
x x x

x x x
x
x x x x
x
k
x
x
x
x
x x x
x
k
x x
x
x

x
x
k
x
x
x

x
x
hmax

x


table two tailed wilcoxon signed rank tests comparing different lp weighting schemes x indicates significance colour indicates better performer
faster fewer nodes expanded shorter plans

sugar rovers gaining settlers hydro power hadd gives
gains settlers leading slightly better coverage layer weighting scheme
k difference performance k hadd weighting schemes
domain dependent hadd increases weight action propositional preconditions true state evaluated settlers domain
gives particularly good performance sound neatly capturing
example case discussed earlier section loading unloading cart
current location preferable later locations domains earlier actions
preferable even propositional preconditions require little support hadd fails
give adequate bias layer weighting scheme higher k performs better
instance sugar domain best coverage obtained k
k scheme performs strongly hadd
examining performance configurations detail comparing time
taken solution plans number nodes evaluated scatterplots comparing
configurations tested layer weighting k shown figures
layer weighting schemes action cost estimate schemes lprpg usually exhausts time limit minutes memory limit time taken
scatterplots closely similar coverage table coverage directly reflected
number points far right graphs indicating layer weighting scheme
k x axis unable solution within minutes lp rpg
different weighting scheme able solve points
k hadd schemes points hadd appearing predominantly
settlers domain k spread across domains
since clear scatterplots whether one configuration better
whether differences significant used two tailed wilcoxon
signed rank test compare pair tested configurations terms time taken
nodes evaluated plan length tests performed p
tests summarised table number interesting observations made
wilcoxon signed rank test non parametric statistical test used compare set matched
samples pairs two different planners sequence
assess whether population mean ranks differ e paired difference test useful
absolute values necessarily comparable samples drawn completely



ficoles coles fox long
l vs l plan length


sugar
rovers numeric
prime
settlers num carts
settlers
pathways metric
hydro power
market trader

sugar
rovers numeric
prime
settlers num carts
settlers
pathways metric
hydro power
market trader


l plan length


l plan length

l vs l plan length





























l plan length

l vs l plan length


l plan length

l plan length

sugar
rovers numeric
prime
settlers num carts
settlers
pathways metric
hydro power
market trader




























l plan length









l vs hadd plan length


sugar
rovers numeric
prime
settlers num carts
settlers
pathways metric
hydro power
market trader

sugar
rovers numeric
prime
settlers num carts
settlers
pathways metric
hydro power
market trader



hadd




l plan length

l vs hmax


hmax plan length



l vs l plan length


sugar
rovers numeric
prime
settlers num carts
settlers
pathways metric
hydro power
market trader





l plan length






















l






l

plan length

plan length

figure effect quality varying action weighting schemes lp objective function

k gives better coverage k k take significantly
different amount time explore significantly different number nodes
however significant difference time taken nodes favour k
compared configurations tested
action cost weighting schemes slower layer weighting schemes
k furthermore compared k expand nodes
unknown distribution two tailed version makes assumption two contenders
better performance e lower mean rank



fia hybrid lp rpg heuristic

key strength action cost weighting schemes lies quality
solutions found general trend layer weighting schemes gain coverage lose
quality k increases action cost schemes generate significantly shorter
plans configuration tested including layer weighting k
increase plan length plans found layer weighting scheme increasing k seen figure reason increase quite clear basic
objective function lp minimise number actions however weightings
added actions according rpg layer appear longer plans
make use earlier actions become attractive increase plan length
however largely restricted two domains first worst affected pathways metric increase k causes preference reactions less efficient terms
number actions needed performed actions earliest layers
graph second settlers numeric carts increase k
leads solutions preference resource production refinement approaches
less efficient comprise actions appear earlier graphs
perhaps expected two domains excluded statistical analysis
significant difference plan length k action cost
schemes
weighting schemes tested best obtained k hadd
single best option former faster expands fewer nodes gives good
balance coverage across domains used latter less prone variations plan
quality domains strong performance settlers domain leads two
solved overall within test domains
use integer constraints
section discussed fact lp relaxation mip proposed
certain situations may beneficial relax action variables making
integral section explore hypothesis considering five configurations
lp rpg
minimal integers actions assignment effects section integers
first layer variables actions appearing rpg layer potentially helpful actions integral
propositional goal achievers variables actions achieve
propositional goals landmarks integral
numeric goal achievers additionally variables actions affecting
numeric state variables appear numeric goals integral
action variables integral
coverage configurations shown tables layerweighting k k respectively k coverage fairly
insensitive configuration used peak coverage numeric goal


ficoles coles fox long

domain

minimal
first layer prop goal num goal

assignments actions
achievers achievers variables
market trader





hydro power





pathways metric





settlers





settlers num carts





mprime





rovers numeric





sugar





total





table coverage varying action variables integer mip layer weighting
k

domain

minimal
first layer prop goal num goal

assignments actions
achievers achievers variables
market trader





hydro power





pathways metric





settlers





settlers num carts





mprime





rovers numeric





sugar





total





table coverage varying action variables integer mip layer weighting
k

achievers configuration though difference worst configuration
k marked increase coverage action
variables integral due sugar domain compared preceding configuration table additional solved domain
k though even better coverage obtained minimal number
integral action variables thus appears need integral variables domain
reduced objective preference earlier actions sufficiently high disregarding
sugar domain k domains close k
configuration
interesting even many integers mip performance lp rpg
terms coverage different integers considering
computational complexity solving mip rather solving lp time spent
calculating heuristic considerably higher rendering integers


fia hybrid lp rpg heuristic

minimal ints vs first layer actions time



minimal ints vs first layer actions nodes expanded

sugar
rovers numeric
prime
settlers num carts
settlers
pathways metric
hydro power
market trader

sugar
rovers numeric
prime
settlers num carts
settlers
pathways metric
hydro power
market trader



first layer actions nodes

first layer actions time





















minimal ints time









minimal ints vs first layer actions prop goal achievers time





minimal ints vs first layer actions prop goal achievers nodes expanded

sugar
rovers numeric
prime
settlers num carts
settlers
pathways metric
hydro power
market trader

sugar
rovers numeric
prime
settlers num carts
settlers
pathways metric
hydro power
market trader



prop goal achievers nodes

prop goal achievers time




minimal ints nodes



















minimal ints time







minimal ints vs first layer actions prop goal achievers numeric goal achievers time




minimal ints nodes



minimal ints vs first layer actions prop goal achievers numeric goal achievers nodes exp

sugar
rovers numeric
prime
settlers num carts
settlers
pathways metric
hydro power
market trader

sugar
rovers numeric
prime
settlers num carts
settlers
pathways metric
hydro power
market trader



num goal achievers nodes

num goal achievers time























minimal ints time









minimal ints vs ints time

ints time





minimal ints vs ints nodes expanded

sugar
rovers numeric
prime
settlers num carts
settlers
pathways metric
hydro power
market trader

sugar
rovers numeric
prime
settlers num carts
settlers
pathways metric
hydro power
market trader



ints nodes




minimal ints nodes


















minimal ints time










minimal ints nodes

figure changing variables integer k





ficoles coles fox long

time taken
first prop num
layer goal goal
acts ach ach
minimal ints
x
x
x
first layer acts

x
prop goal ach
x
num goal ach

nodes expanded
plan length
first prop num first prop num
layer goal goal layer goal goal ints acts ach ach ts acts ach ach ts
x








x

x x



x
x x


x



table two tailed wilcoxon signed rank tests comparing different sets
variables integers mip layer weighting k x indicates significance
p colour indicates better performer faster fewer nodes expanded shorter
plans

time taken
first prop num
layer goal goal
acts ach ach
minimal ints
x
x
x
first layer acts
x
x
prop goal ach
x
num goal ach

nodes expanded
plan length
first prop num first prop num
layer goal goal layer goal goal ints acts ach ach ts acts ach ach ts
x








x

x x



x

x


x



table two tailed wilcoxon signed rank tests comparing different sets
variables integers mip layer weighting k x indicates significance
p colour indicates better performer faster fewer nodes expanded shorter
plans

impractical investigating scatterplots time taken number
nodes expanded shown figure shown k overall
picture k used configuration compared minimal
integers configuration general trend one moves left column increasing
proportion action variables integral points drift line
x e time taken solve increases time though moving
right hand column decrease number nodes evaluated thus
increasing proportion integral action variables seems improve search guidance
though sufficiently allow pay terms time taken solve
confirm significance observations applied two tailed wilcoxon signed
rank tests tables k k respectively
cases consistent increase time taken solve
proportion integral action variables increased difference significant every
case k comparing first layer actions propositional
goal achievers significant difference plan length pair
configurations nodes somewhat less clear appear
minimal integers leads expansion significantly different number nodes


fia hybrid lp rpg heuristic

domain

minimal ints
first layer actions
ints
build ms solve ms build ms solve ms build ms solve ms
market trader






hydro power






pathways metric






sugar






settlers






settlers num carts





mprime






rovers numeric






average






table time spent building solving lp varying variables integer
mip numbers shown domains indicate many instances solved
used computing reported average

compared configuration part due limitation
tests pairwise solved included difference coverage
reflected data analysed test considering configurations though
integers evaluates fewer nodes first layer actions propositional goal
achievers regardless weight used cannot shown expand fewer nodes
numeric goal achievers configuration offered better coverage table
although seen increasing number integer variables makes planner
slower somewhat surprising amount planner made slower
greater theory would expect making variables integer would
dramatically decrease performance planner however appears
investigate consider long spent building solving lp
state configuration table gives indication seeing
surprising domains solving time lp less building
time ints configuration showing key bottleneck lp
solver fact building lp building time course likely vary
configurations variation due different states expanded compared
solving time small two three remaining domains pathways
sugar see increase cost solving lp first layer actions made
integral much larger increase actions made integral pattern
expected final domain market trader main increase occurs
first layer action variables integral structure domain means integral
first layer actions often causes variables layers become integral solving
times however remain within order magnitude building time overhead
particularly large domain compared previous two


ficoles coles fox long

including numeric goal conjunct
section discussed possibility including entire numeric goal conjunct
lp well theoretically increasing ability detect dead ends
insisting goals attainable time rather individually
allows arbitrary lnf goals used found domains pathways
section investigate impact extension particular explore whether
use numeric goal checking lp including numeric goal conjunct improves
worsens performance ensure goal checking lp case
numeric goal conjunction used tests configurations
disable inclusion propositional goals landmarks lp gain insights
impact numeric goal checking lp affected choice action variable
layer weighting schemes consider two k k
domain

market trader
hydro power
pathways metric
sugar
settlers
settlers num carts
mprime
rovers numeric
total excl pathways
total


num goal
k











without
num goal
k












num goal
k











without
num goal
k











table coverage varying whether numeric goal conjunct included lp
without

coverage running lp rpg without numeric goal conjunct
shown table looking excluding pathways domain
solved numeric goal conjunct included since goals expressed
arbitrary lnf one make two immediate observations use numeric
goal conjunct improves performance actions weighted k solving additional
use worsens performance actions weighted k solving
fewer difference impact interesting consequence relationship
rpg structure lp
goal conjunct case goal appears fact layer l lp used meet
goal lp l lp containing actions action layer l
line favours earlier actions rpg precluding actions
layer l used
numeric goal conjunct case lp extended layer l
first goals appear second lp constrained meet goals
actions layer l satisfied individual goals point may later


fia hybrid lp rpg heuristic

vs without numeric goal conjunct nodes expanded

vs without numeric goal conjunct time
sugar
rovers numeric
prime
settlers num carts
settlers
hydro power
market trader



numeric goal conjunct nodes

numeric goal conjunct time




















without numeric goal conjunct time

sugar
rovers numeric
prime
settlers num carts
settlers
hydro power
market trader













sugar
rovers numeric
prime
settlers num carts
settlers
hydro power
market trader


















without numeric goal conjunct time

sugar
rovers numeric
prime
settlers num carts
settlers
hydro power
market trader


numeric goal conjunct nodes

numeric goal conjunct time





vs without numeric goal conjunct weight nodes expanded

vs without numeric goal conjunct weight time




without numeric goal conjunct nodes













without numeric goal conjunct nodes



figure including numeric goals lp
layer l first appeared case actions l
l chosen meet goals whereas previous case could
difference actions available support given goal makes
action variable weighting scheme important use k rather k
means actions added layer l layer l inclusive available meet
goal first appeared layer l objective function leads preference use
earlier actions
coverage experiments give unequivocal picture
impact feature performance figure shows scatterplots time taken
solve number nodes evaluated numeric goal conjunct
used k k appears general trend
inclusion numeric goal conjunct reduce number nodes evaluated case
weighting k two tailed wilcoxon signed rank test confirms use
numeric goal conjunct reduces number nodes evaluated p k
suggests similar trend significant
weighting schemes use numeric goal conjunct introduces small
statistically significant time overhead due additional time taken
evaluate state rpg must extended point goals
satisfied together rather individually whether pays e whether reduction
nodes evaluated sufficient offset depends domain appears


ficoles coles fox long

correlated extent numeric goals interact one extreme
rovers domain goals propositional difference performance
hand sugar domain settlers domain numeric carts
used beneficial domains concern production reprocessing raw
materials one form another leading interaction goals instance unit
resource may sufficient satisfy goals individually additional production may
required support cases use numeric goal conjunct improves
time performance inclusion numeric goal conjunct significant impact
length plans produced according two tailed wilcoxon signed rank test
summarise section main benefit use numeric
goal conjunct able extend expressivity planner domains
goals written arbitrary lnf success domains
varies terms coverage whether better use numeric goal conjunct
evaluation domains depends weighting scheme layer weighting
scheme k inclusion numeric goal conjunct slightly beneficial lp rpg
therefore set use configuration default
including propositions lp
previous section observed inclusion numeric goal conjunct
goal checking lp variable impact performance depending weighting scheme
used perhaps interesting use goal checking lp lp meet
propositional goals landmarks described section evaluate technique
consider four configurations
propositions goal checking lp containing numeric goal conjunct
propositional goals previous case including propositional goals
goal checking lp
landmarks previous case including landmarks
propositions previous case constrained ensure action
variable non zero actions added meet propositional preconditions
described section
form spectrum case information propositions
included lp last goal checking lp must meet
propositional goals preconditions actions chosen consider
two layer weighting schemes k k action variables actions
first action layer integral
coverage k shown table k table
seen cases general pattern emerges coverage improves
including configuration landmarks included lp declines
final propositions configuration including propositions appears however
remain better including propositions
scatterplots illustrating time taken number nodes evaluated solving
shown figures weights k k respectively


fia hybrid lp rpg heuristic

props vs propositional goals time



props vs propositional goals nodes expanded


sugar
rovers num
prime
settlers num carts
settlers
pathways metric
hydro power
market trader





sugar
rovers numeric
prime
settlers numeric carts
settlers
pathways metric
hydro power
market trader



propositional goals nodes

propositional goals time

















props time









props vs landmarks time

landmarks time







props vs landmarks nodes expanded


sugar
rovers num
prime
settlers num carts
settlers
pathways metric
hydro power
market trader

sugar
rovers numeric
prime
settlers numeric carts
settlers
pathways metric
hydro power
market trader


landmarks nodes




props nodes


















props time









props vs props time

props time







props vs props nodes expanded


sugar
rovers num
prime
settlers num carts
settlers
pathways metric
hydro power
market trader

sugar
rovers numeric
prime
settlers numeric carts
settlers
pathways metric
hydro power
market trader


props nodes




props nodes


















props time










props nodes



figure varying propositions included lp k





ficoles coles fox long

props vs propositional goals time

prop goals time



props vs propositional goals nodes expanded

sugar
rovers numeric
prime
settlers num carts
settlers
pathways metric
hydro power
market trader

sugar
rovers numeric
prime
settlers num carts
settlers
pathways metric
hydro power
market trader



propositional goals nodes





















props time









props vs landmarks time

landmarks time





props vs landmarks nodes expanded

sugar
rovers numeric
prime
settlers num carts
settlers
pathways metric
hydro power
market trader

sugar
rovers numeric
prime
settlers num carts
settlers
pathways metric
hydro power
market trader





landmarks




props nodes















props time









props vs props time

props time





props vs props nodes expanded

sugar
rovers numeric
prime
settlers num carts
settlers
pathways metric
hydro power
market trader

sugar
rovers numeric
prime
settlers num carts
settlers
pathways metric
hydro power
market trader



props nodes




props


















props time










props nodes

figure varying propositions included lp k





fia hybrid lp rpg heuristic

domain
market trader
hydro power
pathways metric
sugar
settlers
settlers numeric
mprime
rovers numeric
total

props










prop goals










landmarks










props










table coverage varying propositions included lp k

domain
market trader
hydro power
pathways metric
sugar
settlers
settlers numeric
mprime
rovers numeric
total

props










prop goals










landmarks










props










table coverage varying propositions included lp k

scatterplot compares one configurations enumerated list
configuration propositions comparing propositional goals landmarks
configurations suggests inclusion landmarks leads
solved quickly compared propositions configuration particularly
evident settlers settlers numeric carts mprime rovers numeric domains
whether landmarks offer gains propositional goals alone depends structure two settlers variants including propositional goals
connected rail p p ironworks p necessitates use specific actions build rail p p build ironworks p respectively since actions
consume numeric resources including propositional goals sufficient cause lp
introduce production actions necessary support resource consumption rovers
goals communicated data generated rock samples soil analyses
images actions adding facts consume number units energy
benefit including propositional goals lp however actions
propositional preconditions instance rover communicate rock data
must taken sample rock propositional preconditions included
landmarks lp thereby forcing production energy needed


ficoles coles fox long

communicate requisite data energy acquired leads
inclusion additional recharge actions suitable actions available better deadend detection similar situation arises mprime actions achieve goal facts
consume resources actions achieve landmark preconditions
actions including landmarks improves informedness heuristic
two tailed wilcoxon signed rank tests shown tables confirm
p k k use propositional goals improves
propositions use landmarks improves propositional goals indeed
p total ordering time performance k
propositions propositional goals landmarks
similar behaviour numbers nodes evaluated right hand
columns figures although differences statistically significant
wilcoxon tests neither k k difference
propositional goals landmarks statistically significant note however
landmarks allows solved comparisons propositions
propositional goals landmarks weight k significant latter two
improving upon former weight k tests inconclusive although
landmarks allows additional solved recall comparisons
restricted solved variants comparison

props
prop goals
landmarks

time taken
prop landall
goals marks props
x
x

x
x
x

nodes expanded
prop landall
goals marks props
x
x
x

x
x

plan length
prop landall
goals marks props


x

x
x

table two tailed wilcoxon signed rank tests comparing inclusion different propositions lp layer weighting k x indicates significance
p colour indicates better performer faster fewer nodes expanded shorter
plans

props
prop goals
landmarks

time taken
prop landall
goals marks props
x
x

x
x
x

nodes expanded
prop landall
goals marks props
x

x

x
x

plan length
prop landall
goals marks props


x

x
x

table two tailed wilcoxon signed rank tests comparing inclusion different propositions lp layer weighting k x indicates significance p
colour indicates better performer faster fewer nodes expanded shorter plans



fia hybrid lp rpg heuristic

domain

props
landmarks
props
build ms solve ms build ms solve ms build ms solve ms
market trader






hydro power






pathways metric






sugar






settlers






settlers num carts





mprime






rovers numeric






average






table time spent building solving lp varying propositions included
numbers shown domains indicate many instances solved used
computing reported average

shown bottom figures indicate propositions
configuration less consistent performance
however p k k propositions
configuration takes longer solve propositional goals configuration
landmarks configuration perhaps surprising feasible consider
including propositions lp manner given reported van den briel
et al key difference disregarding delete effects fact
needed precondition need added work reported van
den briel et al however cases fact required precondition deleted
delete effect must balanced equivalent number add effects less one
fact true initially
looking number nodes evaluated propositions configuration
important shown bottom right figures whichever
weight used propositions tends expand fewer nodes furthermore propositions expands fewer nodes three configurations overall
best configuration terms nodes expanded significant p unfortunately
overhead associated node higher poorer coverage
time performance indicates numericpropositional separation used
lp rpg heuristic sensible trade use rpg meet propositional
preconditions sacrificing performance terms nodes expanded exchange
reduction time taken solve
table shows increase costs associated solving lps including propositions
taken solved three configurations although
remains case configurations expand exactly states solving
three domains hydro power mprime rovers numeric
cost building lps dominates cost solving significant
decreases performance domains course cost building lps increases
propositions included since variables required settlers domain


ficoles coles fox long

order magnitude increase time spent solving lps indicating
including propositions lps makes difficult solve sometimes
informed search guidance gleaned information allows planner
solutions expanding far fewer nodes
adding landmarks lp appears make solving lp slightly faster
partly side effect landmarks configuration needing solve fewer lps per state
since uses one lp meet goals instead one lp per goal propositions
configuration often needs solve one lp solution extraction phase however
size difficulty lp means benefits solving fewer lps terms
time taken negated
tables statistical tests comparing lengths plans
found configurations significant regardless
weight used propositions finds shorter plans configurations
propositions included lp typically single lp call made
solution extraction simultaneously achieving goals action preconditions
configurations first lp call made goals action
added support propositional precondition action implied solution
lp numeric preconditions met another lp call thus several
lp calls rather one fragmenting production relaxed plan
way efficacy relaxed plan eroded example plan lengths improved
two variants settlers production resources requires building
infrastructure sawmill required refine timber wood two units
wood made lp knowledge propositional preconditions
difference lp building two units wood location one unit
location b one location c need build one two sawmills depending
option chosen discovered actions chosen meet
propositional preconditions actions required solution lp lp
includes propositions cases difference building
one sawmill two lp prefer single sawmill solution ultimately leading
better search guidance thus propositions produces plans significantly shorter
domains fact propositions outside lp disguises true costs
action choices solution lp
propositional resource analysis
end section identified conditions possible turn propositions model resources equivalent numeric representation purposes
lp rpg would allow resource within heuristic managed lp
rather rpg end use three domains containing propositional stacks
represent resources evaluate encoding affects performance lp rpg
numeric planners five planners evaluated metricff lpgtd lp rpg
analysis translates propositional resource stacks equivalent numeric representation described long fox lp rpg analysis disabled
lp rpg three domains use


fia hybrid lp rpg heuristic

domain

metricff

lpgtd

lp rpg

settlers prop timber
settlers prop carts
mprime prop
total
















lp rpg
anal
anal









table coverage without propositional resource analysis

variant ipc settlers domain amount timber given location
given vehicle represented stack propositions range n
n
variant settlers numeric carts encoding number carts
given location represented stack propositions
mprime domain ipc encoding represents fuel level stack
propositions
first two propositional encoding enforces limit amount
timber respectively number carts given location necessary limitation forced action grounding numeric representation decreasing one resource
increasing another done single ground action appropriate numeric
effects conditions ground action need stipulate precise levels
resource operation long limits resource levels
respected propositional case however one ground action needed pair
discrete levels two resources parameters action stipulating pre
post values resource level chosen avoid placing overly restrictive
bounds resource levels creating manageable number ground actions
issue grounding accounts limited choice domains propositional stack
used represent resources take modest range discrete values
rovers domain example set reachable energy levels rover
range market trader domain amount money could held
given time real value one decimal place consequence choice
files greater equal zero
domains shown table comparing first lp rpg without
analysis lp rpg analysis see encoding resources lp
numbers grants consistent improvement performance figure shows time
taken solutions similarly improved perhaps strikingly second settlers
variant propositional cart levels
metricff lpgtd perform well mprime domain two settlers
encodings lp rpg resource analysis performs markedly better
planners solving handful contrasts earlier shown
table lpgtd particular performed well settlers domain
interesting contrast see propositional timber variant derived
ipc model lpgtd performs well leads considerably worse performance


ficoles coles fox long

settlers propositional stack timber




settlers propositional stack carts


lprpg analysis
lprpg

lpg
lprpg analysis



time



time



lprpg analysis
lprpg

lpg
lprpg analysis

















number










number





prime propositional resource stack




lprpg analysis
lprpg

lpg
lprpg analysis

time















number







figure propositional resource analysis

supports role resource analysis allowing lp rpg robust
number almost equivalent domain encodings used mixed propositional
numeric encodings resource levels observed significant change length
plans produced lp rpg without propositional resource analysis

conclusions future work
modern systems ineffective reasoning numbers however managing complex numeric interactions important part driving ai towards
future real world application shown linear program
model numeric resource flows ability planners reason domains involving
complex numeric interactions greatly improved
key contribution separation heuristic search control relaxed
graph delete relaxation linear program allows exact reasoning
numeric constraints relaxes action ordering
explored different configurations heuristic put
less information lp impact performance planner whole
exploration different lp solvers reveals less efficient handling
combinations constraints found lpsolve clp conjunction
limited version lp rpg published coles et al solve simple


fia hybrid lp rpg heuristic

quickly cplex coupled full power extended lprpg needed
handle complex test instances
work far focussed developing search control methods perform
well numeric particular character producer consumer
behaviour define sectionsect prodcondefinition although believe
common behaviour practice numeric domains exhibit range behaviours
several possible ways exploit lp rpg domains one use
actions conform constraints producer consumer behaviour
pushing numeric behaviour metric rpg way currently
handle propositional goals preconditions separate rpg would yield
benefits potentially better estimates reachable ranges action use costs
parts domain express producer consumer behaviour challenging
consider behaviours relaxed producer consumer behaviour
obtain useful heuristic information example actions production effects vary
could encoded family producers increasing capability discretising range
production options introducing reachability analysis increased
production capabilities become available general relaxations must make reachability
least permissive actual reachability action must applicable
relaxed reachability analysis least early action actually reachable
relaxed plan extraction minimise estimated cost goal effectively
difficult relaxed plan optimal within constraints believe
use lp approximations provide tool tackling wider range behaviours
explore
exciting challenge future work integrate lp rpg method
optimising plans according given objective function recent
competitions highlighted importance optimising emphasis solution quality development however non trivial challenges lie
integration cost optimisation lp rpg well deciding
use heuristic trades goal distance quality search first step
direction accomplished radzi phd thesis radzi advances
numeric described open many possibilities extending
initial work

references
bell k r w coles j coles fox long role ai
decision support tool power substation management artificial intelligence
communications
benton j b kambhampati subscription numeric goals proceedings th international joint conference artificial
intelligence ijcai pp
benton j van den briel kambhampati hybrid linear programming
relaxed plan heuristic partial satisfaction proceedings
th international conference scheduling icaps


ficoles coles fox long

blackmore l ono williams b chance constrained optimal path
obstacles robotics ieee transactions
blum furst fast graph analysis proceedings
th international joint conference artificial intelligence ijcai pp

bonet b geffner h heuristic search planner artificial intelligence magazine
coles coles fox long colin continuous linear
numeric change journal artificial intelligence
coles fox long smith j hybrid relaxed graph lp
heuristic numeric domains proceedings eighteenth international
conference automated scheduling icaps
coles j coles lprpg p relaxed plan heuristics
preferences proceedings st international conference automated scheduling icaps
coles j coles fox long extending use inference
temporal forwards search proceedings th international
conference automated scheduling icaps
b kambhampati sapa domain independent heuristic metric temporal planner proceedings european conference ecp
b kambhampati sapa multi objective metric temporal planner
journal artificial intelligence
domshlak c katz lefler abstractions met landmarks proceedings th international conference scheduling icaps
edelkamp taming numbers durations model checking integrated
system journal artificial intelligence
fox long pddl extension pddl expressing temporal
domains journal artificial intelligence
gerevini saetti serina temporal scheduling domains predictable exogenous events journal artificial intelligence

gerevini saetti serina efficient numerical
fluents multi criteria plan quality artificial intelligence
gregory p rendl constraint model settlers domain
aylett r ed proceedings uk special interest group plansig
herriot watt university
gregory p cresswell long porteous j extraction disjunctive landmarks via symmetry reduction proceedings
conference symmetry search symcon pp


fia hybrid lp rpg heuristic

helmert domshlak c landmarks critical paths abstractions whats
difference anyway proceedings th international conference scheduling icaps pp
hoffmann j metric system translating ignoring delete lists
numeric state variables journal artificial intelligence
hoffmann j edelkamp deterministic part ipc overview journal
artificial intelligence
hoffmann j porteous j sebastia l ordered landmarks journal
artificial intelligence
hoffmann j nebel b system fast plan generation
heuristic search journal artificial intelligence
karpas e domshlak c cost optimal landmarks proceedings
st international joint conference artificial intelligence ijcai pp

kautz h walser j integer optimization ai
knowledge engineering review
koehler j resource constraints proceedings european
conference artificial intelligence ecai pp
laborie p propagating resource constraints ai
scheduling existing approaches artificial intelligence

li h x williams b c generative hybrid systems flow
tubes proceedings th international conference automated
scheduling icaps pp
long fox automatic synthesis use generic types
proceedings artificial intelligence scheduling aips pp
long fox exploiting graphplan framework temporal
proceedings international conference artificial intelligence
scheduling icaps
long fox b rd international competition
analysis journal artificial intelligence
ono williams b c efficient motion stochastic
dynamic systems constraints probability failure proceedings rd
aaai conference artificial intelligence aaai pp
porteous j sebastia l hoffmann j extraction ordering usage
landmarks proceedings th european conference
ecp
radzi n h multi objective linear programming ph thesis
university strathclyde


ficoles coles fox long

richter helmert westphahl landmarks revisited proceedings
rd aaai conference artificial intelligence aaai pp
richter westphal lama planner guiding cost anytime
landmarks journal artificial intelligence
shin j davis e processes continuous change sat planner
journal artificial intelligence
van den briel benton j kambhampati vossen lp heuristic
optimal principles practice constraint programming cp
pp
van den briel h l vossen kambhampati loosely coupled formulations automated integer programming perspective journal
artificial intelligence
vossen ball lotem nau use integer programming
ai proceedings th international joint conference
artificial intelligence ijcai pp
wolfman weld combining linear programming satisfiability solving
resource knowledge engineering review
zhu l givan r landmark extraction via graph propagation proceedings doctoral consortium th international conference
scheduling icaps dc pp




