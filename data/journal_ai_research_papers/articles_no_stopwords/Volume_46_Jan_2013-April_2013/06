Journal Artificial Intelligence Research 46 (2013) 607-650

Submitted 9/12; published 4/13

Efficient Computation Shapley Value
Game-Theoretic Network Centrality
Tomasz P. Michalak

Tomasz.Michalak@cs.ox.ac.uk

Department Computer Science, University Oxford
OX1 3QD, UK
Institute Informatics, University Warsaw
02-097 Warsaw, Poland

Karthik .V. Aadithya

Aadithya@eecs.berkeley.edu

Department Electrical Engineering Computer Sciences
University California
Berkeley, CA 94720-4505, United States, USA

Piotr L. Szczepaski

P.Szczepanski@stud.elka.pw.edu.pl

Institute Informatics
Warsaw University Technology
00-661 Warsaw, Poland

Balaraman Ravindran

Ravi@cse.iitm.ac.in

Computer Science Engineering
Indian Institute Technology Madras
Chennai, 600 036, India

Nicholas R. Jennings

NRJ@ecs.soton.ac.uk

School Electronics Computer Science
University Southampton
SO17 1BJ Southampton, UK

Abstract
Shapley valueprobably important normative payoff division scheme coalitional gameshas recently advocated useful measure centrality networks.
However, although approach variety real-world applications (including social
organisational networks, biological networks communication networks), computational properties widely studied. date, practicable approach
compute Shapley value-based centrality via Monte Carlo simulations
computationally expensive guaranteed give exact answer.
background, paper presents first study computational aspects Shapley
value network centralities. Specifically, develop exact analytical formulae Shapley value-based centrality weighted unweighted networks develop efficient
(polynomial time) exact algorithms based them. empirically evaluate algorithms two real-life examples (an infrastructure network representing topology
Western States Power Grid collaboration network field astrophysics)
demonstrate deliver significant speedups Monte Carlo approach.
instance, case unweighted networks algorithms able return exact
solution 1600 times faster Monte Carlo approximation, even allow
generous 10% error margin latter method.
c
2013
AI Access Foundation. rights reserved.

fiMichalak, Aadithya, Szczepaski, Ravindran, & Jennings

1. Introduction
many network applications, important determine nodes edges
critical others. Classic examples include identifying important hubs road
network (Schultes & Sanders, 2007), critical functional entities protein network
(Jeong, Mason, Barabasi, & Oltvai, 2001), influential people social network
(Kempe, Kleinberg, & Tardos, 2003). Consequently, concept centrality, aims
quantify importance individual nodes/edges, extensively studied
literature (Koschtzki, Lehmann, Peeters, Richter, Tenfelde-Podehl, & Zlotowski, 2005;
Brandes & Erlebach, 2005).
v6

v4
v1
v5

v9

v7

v2
v10

v8
v12

v3

v11

v13

Figure 1: Sample network 13 nodes
Generally speaking, centrality analysis aims create consistent ranking nodes within
network. end, centrality measures assign score node way corresponds importance node given particular application. Since importance
depends context problem hand, many different centrality measures
developed. Three well-known widely applied are: degree centrality,
closeness centrality betweenness centrality.1 paper, refer measures
conventional/standard centrality. Degree centrality, brief, quantifies power
node degree, i.e., number adjacent edges. instance, sample
network Figure 1, nodes v1 v2 degree 5 and, judged degree centrality,
important nodes within entire network. Conversely, closeness centrality
focuses distances among nodes gives high value nodes close
nodes. measure, node v8 Figure 1 ranked top. last measure
betweenness centralityconsiders shortest paths (i.e., paths use minimal number
links) two nodes network. shortest paths node belongs to,
important is. measure, v2 Figure 1 important
nodes (including v1 v8 , chosen measures important
node). Clearly, measures expose different characteristics node. Consider,
instance, epidemiology application, aim identify people (i.e., nodes)
social network biggest influence spread disease
become focal point prevention emergency measures. Here, degree centrality
1. Koschtzki et al. (2005) Brandes Erlebach (2005) give good overview
centrality measures.

608

fiComputation Shapley Value Game-Theoretic Network Centrality

ranks top nodes biggest immediate sphere influencetheir infection would lead
highest number adjacent nodes exposed disease. hand,
closeness centrality identifies nodes whose infection would lead fastest spread
disease throughout society. Finally, betweenness centrality reveals nodes
play crucial role passing disease one person network another.2
common feature aforementioned standard measures assess
importance node focusing role node plays itself. However,
many applications approach inadequate synergies may occur
functioning nodes considered groups. Referring Figure 1
epidemiology example, vaccination individual node v6 (or v7 v8 ) would prevent
spread disease left right part network (or vice versa).
However, simultaneous vaccination v6 , v7 v8 would achieve goal. Thus,
particular context, nodes v6 , v7 v8 play significant role individually,
together do. quantify importance groups nodes, notion
group centrality introduced Everett Borgatti (1999). Intuitively, group centrality
works broadly way standard centrality, focus functioning
given group nodes, rather individual nodes. instance, Figure 1, group
degree centrality {v1 , v2 } 7 7 distinct adjacent nodes.
Although concept group centrality addresses issue synergy functions
played various nodes, suffers fundamental deficiency. focuses particular,
priori determined, groups nodes clear construct consistent ranking
individual nodes using group results. Specifically, nodes
valuable group ranked top? important nodes belong
group highest average value per node? focus nodes
contribute every coalition join? fact, many possibilities
choose from.
framework address issue game theoretic network centrality measure.
detail, allows consistent ranking individual nodes computed way
accounts various possible synergies occurring within possible groups nodes (Grofman
& Owen, 1982; Gmez, Gonzlez-Arangena, Manuel, Owen, Del Pozo, & Tejada, 2003;
Suri & Narahari, 2008). Specifically, concept builds upon cooperative game theorya
part game theory agents (or players) allowed form coalitions order
increase payoffs game. Now, one fundamental questions cooperative
game theory distribute surplus achieved cooperation among agents.
end, Shapley (1953) proposed remunerate agents payoffs correspond
individual marginal contributions game. detail, given agent,
individual marginal contribution measured weighted average marginal increase
payoff coalition agent could potentially join. Shapley famously proved
conceptknown since Shapley valueis division scheme
meets certain desirable normative properties.3 Given this, key idea game theoretic
network centrality define cooperative game network agents
nodes, coalitions groups nodes, payoffs coalitions defined meet
2. differences interpretation standard centralities see work Borgatti Everett (2006).
3. See Section 3 details.

609

fiMichalak, Aadithya, Szczepaski, Ravindran, & Jennings

requirements given application. means Shapley value agent
game interpreted centrality measure represents average
marginal contribution made node every coalition nodes.4
words, Shapley value answers question construct consistent ranking
individual nodes groups nodes evaluated.
detail, Shapley value-based approach centrality is, one hand, much
sophisticated conventional measures, accounts group nodes
Shapley value derives consistent ranking individual nodes.
hand, confers high degree flexibility cooperative game network
defined variety ways. means many different versions Shapley value-based
centrality developed depending particular application consideration,
well features network analyzed. prominent example,
specific Shapley value-based centrality measure developed crafted particular
application, consider work Suri Narahari (2008) study problem selecting
top-k nodes social network. problem relevant applications
key issue choose group nodes together biggest influence
entire network. include, example, analysis co-authorship networks,
diffusion information, viral marketing. new approach problem, Suri
Narahari define cooperative game value group nodes equal
number nodes within, adjacent to, group. words, assumed
agents sphere influence reaches immediate neighbors group. Whereas
definition game natural extension (group) degree centrality discussed
above, Shapley value nodes game constitutes new centrality metric is,
arguably, qualitatively better standard degree centrality far nodes influence
concerned. intuition behind visible even small network Figure 1. terms
influence, node v1 important v2 , node connected
v4 v5 . Without v1 impossible influence v4 v5 , neighbor v2
accessible node. Thus, unlike standard degree centrality, evaluates
v1 v2 equally, centrality based Shapley value game defined Suri
Narahari recognizes difference influence assigns higher value v1 v2 .
Unfortunately, despite advantages Shapley value-based centrality conventional
approaches, efficient algorithms compute yet developed. Indeed, given
network G(V, E), V set nodes E set edges, using original
Shapley value formula involves computing marginal contribution every node every
coalition O(2|V | ). exponential computation clearly prohibitive bigger
networks (of, e.g, 100 1000 nodes). networks, feasible approach currently
outlined literature Monte-Carlo sampling (e.g., Suri & Narahari, 2008; Castro,
Gomez, & Tejada, 2009). However, method inexact,
time-consuming. instance, shown simulations, weighted network
16,000 nodes 120,000 edges, Monte Carlo approach iterate 300, 000
4. note division schemes power indices cooperative game theory, Banzhaf
power index (Banzhaf, 1965), could used centrality measures (see, instance, discussion
work Grofman & Owen, 1982). However, literature, focus Shapley
value due desirable properties.

610

fiComputation Shapley Value Game-Theoretic Network Centrality

b)

a)
v3

v5

v4

1
10

v1
v4

v2
v6

v1
v5

1

3

v6

2

v7

1
v2

v3

Figure 2: Sample unweighted weighted networks 6 7 nodes, respectively.
times entire network produce approximation Shapley value
40% error margin.5 Moreover, exponentially iterations needed reduce
error margin.
background, develop polynomial-time algorithms compute Shapley valuebased centrality. Specifically, focus five underlying games defined network;
games extend, various directions, standard notions degree closeness centrality.
starting point, consider game defined Suri Narahari propose
exact, linear-time algorithm compute corresponding Shapley value-based centrality.
denote game g1 . analyse computational properties four
games defined networks. denote g2 , g3 , g4 , g5 , respectively.
games captures different flavor centrality, all, similarly game
Suri Narahari, embrace one fundamental centrality idea: given group nodes C,
function defines value C game must somehow quantify sphere
influence C nodes network. particular:
g2 game value coalition C function size number
nodes immediately reachable least k different ways C.
game inspired Bikhchandani, Hirshleifer, Welch (1992) instance
general threshold model introduced Kempe, Kleinberg, Tardos (2005).
natural interpretation: agent becomes influenced (with ideas, information,
marketing message, etc.) least k neighbors already become
influenced. instance, given k = 2, value coalition {v1 , v2 } Figure 2a
4 coalition size 2 two neighbors less 2 edges
adjacent coalition.
g3 game concerns weighted graphs (unlike g1 g2 ). Here, value coalition C
depends size set nodes within cutoff distance C, measured
shortest path lengths weighted graph. example, Figure 2b,
cutoff set 8 coalition {v2 } value 4 able influence 3 nodes v3 ,
v6 , v7 8 away {v2 }. cutoff distance
interpreted radius sphere influence coalition.
5. See Section 5 exact definition error margin.

611

fiMichalak, Aadithya, Szczepaski, Ravindran, & Jennings

Game Graph
Value coalition C, i.e., (C)
Complexity
Accuracy
g1
U W (C) number nodes C
O(|V | + |E|)
exact
immediately reachable C
g2
U W (C) number nodes C
O(|V | + |E|)
exact
immediately reachable C,
via least k different edges
g3
W (C) number nodes C O(|V ||E| + |V |2 log|V |) exact
dcutoff away
g4
W (C) sum f (.)s nonO(|V ||E| + |V |2 log|V |) exact
-increasing functions distance
C nodes
g5
W (C) number nodes C
O(|V ||E|)
approx.
directly connected C via edges
5-10%
sum weights exceeds Wcutoff
Table 1: Games considered paper results (U W denotes unweighted graphs
W weighted).
g4 game generalizes g3 allowing value C specified size
arbitrary non-increasing function f (.) distance C nodes
network. instance, value {v1 , v3 } Figure 2b function
1
1
f (d) = 1+d
2 1 + 3 21 + 1 31 + 1 14 = 4 12
. intuition
coalition influence closer nodes awaya property
cannot expressed standard closeness centrality. Thus, g4 seen
extension closeness centrality.
g5 last game extension g2 case weighted networks. Here, value
C depends adjacent nodes connected coalition weighted
edges whose sum exceeds given threshold wcutof f (recall g2 threshold
defined simply integer k). Whereas g3 g4 weights edges interpreted
distance, g5 interpreted power influence. example,
Figure 2b, threshold vertex 5, value coalition {v1 , v3 } 3
coalition size two enough power influence one additional
node v2 .
computation Shapley value five games (see Table 1
overview) main focus paper. Shapley values extensions either
degree closeness centrality metrics applications settings
influence nodes nodes network evaluated. results
summarized follows:

demonstrate possible exactly efficiently compute number
Shapley value-based network centrality measures. methods take advantage
612

fiComputation Shapley Value Game-Theoretic Network Centrality

network structure, well specifics underlying game defined
network.
first four games, derive closed-form expressions Shapley values.
Based these, provide exact linear polynomial-time algorithms efficiently
compute Shapley values, i.e., without need enumerate possible coalitions.
Specifically, algorithms run O(|V | + |E|) g1 g2 O(|V ||E| +
|V |2 log|V |) g3 g4 . Furthermore, fifth measure centrality, develop
closed-form polynomial time computable Shapley value approximation. algorithm
running time O(|V ||E|) experiments show approximation error
5% large networks. summary algorithms performance
found Table 1.
evaluate algorithms two real-life examples: infrastructure network representing topology Western States Power Grid collaboration network
field astrophysics. results show algorithms deliver significant
speedups Monte Carlo simulations. instance, given unweighted network
Western States Power Grid, algorithms return exact Shapley value g1
g2 1600 times faster Monte Carlo method returns approximation
10% error margin.
remainder paper organized follows. Section 2 discuss related work.
Notation preliminary definitions presented Section 3. Section 4 analyse
five types centrality-related coalitional games propose polynomial time Shapley value
algorithms them. results numerical simulations presented Section 5
(with details simulation setup presented Appendix A). Conclusions future
work follow. Finally, Appendix B provides summary key notational conventions.

2. Related Literature
issue centrality one fundamental research directions network analysis
literature. particular, Freeman (1979) first formalise notion centrality
presenting conventional centrality measures: degree, closeness betweenness. Many
authors subsequently worked developing new centrality measures, refining existing
ones (e.g., Bonacich, 1972; Noh & Rieger, 2004; Stephenson & Zelen, 1989), developing
algorithms efficient centrality computation (e.g., Brandes, 2001; Eppstein & Wang, 2001).
context, Grofman Owen (1982) first apply game theory topic
centrality, focused Banzhaf power index (Banzhaf, 1965). followup work, Gmez et al. (2003) combined Myersons (1977) idea graph-restricted games
(in feasible coalition induced subgraph graph) concept
centrality proposed new Shapley value-based network centrality measures. contrast
Gmez et al., Suri Narahari (2008, 2010) assumed coalitions feasible,
approach adopt paper.
fundamental problem conventional models coalitional games, i.e., exponential complexity number agents, tackle paper,
613

fiMichalak, Aadithya, Szczepaski, Ravindran, & Jennings

1

2
v1

1
v2

4
3
1
v3
Figure 3: Induced-subgraph representation sample coalitional game 3 players.
game, values coalitions {v1 }, {v2 }, {v3 }, {v1 , v2 }, {v1 , v3 }, {v2 , v3 }, {v1 , v2 , v3}
1, 1, 1, 1+1+2, 1+1+3, 1+1+4, 1+1+1+2+3+4, respectively.
studied literature algorithmic aspects coalitional games. Indeed, since seminal work Deng Papadimitriou (1994), issue received considerable attention
computer scientists. Specifically, alternative straightforward (but exponential) listing possible coalitions, number authors proposed efficient
representations coalitional games. representations fall two main categories
(Wooldridge & Dunne, 2006):
give characteristic function specific interpretation terms combinatorial structures graphs. approach adopted by, instance,
Deng Papadimitriou (1994), Greco, Malizia, Palopoli, Scarcello (2009),
Wooldridge Dunne (2006) advantage ensuing representation
always guaranteed succinct. However, disadvantage always
fully expressive, i.e., cannot represent coalitional games.
try find succinct, still fully expressive, representation. is,
instance, approach adopted Conitzer Sandholm (2004), Ieong Shoham
(2005), Elkind, Goldberg, Goldberg, Wooldridge (2009). representations general completely capture coalitional games interest,
although always guaranteed succinct.
Unfortunately, even succinctly representable games, computing Shapley value
shown NP-Hard (or even worse, #P-Complete) many domains, including weighted voting games (Deng & Papadimitriou, 1994), threshold network flow games
(Bachrach & Rosenschein, 2009) minimum spanning tree games (Nagamochi, Zeng,
Kabutoya, & Ibaraki, 1997). Similarly, Aziz, Lachish, Paterson, Savani (2009a) obtained negative results related problem computing Shapley-Shubik power index
spanning connectivity games based undirected, unweighted multigraphs.
Also, Bachrach, Rosenschein, Porat (2008b) showed computation Banzhaf
index connectivity games, agents vertices control adjacent edges
aim become connected certain set primary edges, #P-Complete.
Fortunately, positive results discovered. Probably known
among due Deng Papadimitriou (1994) Ieong Shoham (2005).
614

fiComputation Shapley Value Game-Theoretic Network Centrality

detail, Deng Papadimitriou proposed representation based weighted graphs,
node interpreted agent, weight edge interpreted value
cooperation two agents connected edge.6 value
coalition defined sum weights internal edges, or, words,
weights edges belonging subgraph induced members coalition. threeplayer example formalism, called induced-subgraph representation, found
Figure 3. downside representation fully expressive. However,
upside that, games formalised weighted graphs, representation
always concise. Furthermore, allows Shapley value computed time linear
number players. Specifically, case, Shapley value given
following formula:

Shapley Value(vi ) = vi self-loop weight +
vj

weight edge vi vj
.
2
neighbours v
X

(1)



Ieong Shoham (2005) developed representation consisting finite set logical rules
following form: Boolean Expression Real Number, agents atomic
boolean variables. representation, value coalition equal sum
right sides rules whose left sides satisfied coalition. representation, called marginal contribution networks (or MC-Nets short) (i) fully expressive
(i.e., used model game), (ii) exponentially concise games,
importantly, (iii) allows Shapley value computed time linear
size representation, provided boolean expressions rules conjunctions
(either positive negative) atomic literals. MC-Nets, rules interesting
game-theoretic interpretation, rule directly specifies incremental marginal contribution made agents featured rule. Now, using additivity axiom met
Shapley value, possible consider every rule separate simple game,
using axioms straightforwardly compute Shapley value simple game,
and, finally, sum results simple games obtained Shapley value. Building this, Elkind et al. (2009) developed extensions MC-Nets sophisticated
(read-once) boolean expressions, Michalak, Marciniak, Samotulski, Rahwan, McBurney, Wooldridge, Jennings (2010a), Michalak, Rahwan, Marciniak, Szamotulski,
Jennings (2010b) developed generalizations coalitional games externalities. Another
recently proposed representation formalism coalitional games allows polynomial
calculations Shapley value decision diagrams (Bolus, 2011; Aadithya, Michalak, &
Jennings, 2011; Sakurai, Ueda, Iwasaki, Minato, & Yokoo, 2011). Now, MC-Nets offer
fully-expressive representation works arbitrary coalitional games, possible
speed Shapley value computation focusing specific (not necessarily fully expressive) classes games. One particular class games investigated detail
weighted voting, approximate (but strictly polynomial) (Fatima, Wooldridge,
& Jennings, 2007) exact (but pseudo-polynomial) algorithms (Mann & Shapley, 1962;
Matsui & Matsui, 2000) proposed. Chalkiadakis, Elkind, Wooldridge (2011)
provided comprehensive discussion literature.
6. self-loops allowed.

615

fiMichalak, Aadithya, Szczepaski, Ravindran, & Jennings

Whereas choice representation foremost consideration efficient Shapley value computation context conventional coalitional games, paper,
face rather different set challenges:
Unlike conventional coalitional games, conciseness usually issue networks context. games aim capture network centrality
notions completely specified (a) underlying network compactly represented
graph, (b) concise closed-form characteristic function expression evaluating coalition values (see next section example). Rather, issue
exact specification characteristic function dictated computational considerations, real-world application game theoretic network
centrality. words, choice representation Shapley value computation
already fixed centrality consideration.
games paper designed reflect network centrality, characteristic function definition often depends highly non-trivial way underlying
graph structure. Specifically, value assigned characteristic function
subset nodes depends subgraph induced nodes,
relationship subgraph rest network. example,
value assigned coalition nodes may based shortest path lengths
nodes outside coalition, may depend relationship coalition
neighbors.
Therefore, specific challenge tackle efficiently compute Shapley value, given
network game defined it, coalition values game given
closed-form expression depends non-trivially network. key question
take advantage (a) network structure, (b) functional form
coalition values, compute Shapley values efficiently, i.e., without need
enumerate possible coalitions.
Finally, conclude section mentioning Shapley value solution concepts game theory applied network-related problems. instance,
application Shapley value (and Nucleolus) problem cost allocation
electric market transmission system considered Zolezzi Rudnick (2002),
though computational aspects discussed. problem maximizing probability hitting strategically chosen hidden virtual network placing wiretap
single link communication network analysed Aziz, Lachish, Paterson, Savani
(2009b). problem viewed two-player win-lose (zero-sum) game, wiretap
game. authors provide polynomial-time computational results game,
show one (key) strategies nucleolus simple cooperative
spanning connectivity game (Aziz et al., 2009a) mentioned above.

3. Preliminaries Notation
section formally introduce basic concepts graph theory cooperative
game theory used throughout paper. look closely sample coalitional
616

fiComputation Shapley Value Game-Theoretic Network Centrality

game defined network Shapley value game used
centrality measure.
graph (or network ) G consists vertices (or nodes) edges, sets
denoted V (G) E(G), respectively. Every edge set E(G) connects two vertices
set V (G).7 (u, v) denote edge connecting vertices u, v V (G). number
edges incident vertex called vertex degree. neighboring vertices v V
vertices connected v graph. weighted network weight (label)
associated every edge E(G). path is, informally, sequence connected edges.
shortest path problem find path two given vertices sum
edge weights minimized.
formalize notions coalitional games Shapley value. Specifically, let
us denote = {a1 , . . . , a|A| } set players participate coalitional game.
characteristic function : R assigns every coalition C real number representing
quality performance, assumed () = 0. characteristic function
game tuple (A, ). Assuming grand coalition, i.e., coalition
agents game, highest value formed, one key questions
coalitional game theory distribute gain cooperation among agents
meet certain normative/positive criteria. end, Shapley (1953) proposed
evaluate role agent game computing weighted average marginal
contributions agent possible coalitions belong to. importance
Shapley value stems fact unique division scheme meets four
desirable criteria:
(i) efficiency wealth available agents grand coalition distributed
among them;
(ii) symmetry payoffs agents depend identity;
(iii) null player agents zero marginal contributions coalitions receive zero
payoff;
(iv) additivity values two games sum value computed sum
games.
order formalize concept, let (A) denote permutation agents A,
let C (i) denote coalition made predecessors agent ai . formally,
denote (j) location aj , then: C (i) = {aj : (j) < (i)}. Shapley
value ai , denoted SVi (), defined average marginal contribution ai
coalition C (i) (Shapley, 1953):
SVi () =

1 X
[(C (i) {ai }) (C (i))].
|A|!

(2)



7. Whereas main focus paper undirected graphs, show results
readily extended case directed graphs.

617

fiMichalak, Aadithya, Szczepaski, Ravindran, & Jennings

Shapley provides following intuition behind formula: imagine players
arrive meeting point random order, every player ai arrives receives
marginal contribution arrival would bring already meeting point.
average contributions possible orders arrival, obtain SVi (),
ai payoff game.
formula (2) stated equivalent, computationally less involved,
form:
X |C|!(|A| |C| 1)!
SVi () =
[(C {ai }) (C)].
(3)
|A|!
CA\{ai }

network context, use G define coalitional game (V (G), ) set
agents = V (G) characteristic function . agents coalitional game
vertices graph G. Thus, coalition agents C simply subset V (G).
Furthermore, characteristic function : 2V (G) R function depends
graph G long satisfies condition () = 0. use phrase value
coalition C informally refer (C).
first consider sample characteristic function game defined network, well
Shapley value becomes centrality measure. discuss advantages
game theoretic network centrality conventional measures.
detail, consider notion closeness centrality node graph G(V, E),
traditionally defined reciprocal average distance node
(reachable) nodes graph (Koschtzki et al., 2005). definition captures
intuitive idea node close proximity many nodes valuable
virtue central location, hence assigned higher centrality score.
measure, however, fails recognize importance combinations nodes.
example, consider typical application closeness centrality: disseminating piece
information nodes network. time point dissemination process,
define random variable Ct subset nodes actively involved propagating
information. situation, new node added Ct would make maximum contribution
diffusion information close proximity nodes currently
close proximity node Ct . Thus, conventional closeness centrality
takes account average proximity nodes, actual importance node
actual applications based different measure: proximity nodes
close proximity random variable Ct .
show coalitional game theory used construct centrality measure
faithfully models situation. Let C arbitrary subset nodes
given network G(V, E). Then, every C, assign value (C) given
(C) =

X
vV (G)

1
,
1 + min{d(u, v)|u C}

d(u, v) distance nodes u v (measured shortest path length
u v graph G).
618

fiComputation Shapley Value Game-Theoretic Network Centrality

map defined captures fundamental centrality notion: intrinsic value
subset nodes C context application information dissemination
proportional overall proximity nodes C nodes network.
effect, map carries original definition closeness centrality global level,
measure importance assigned every possible combination nodes.
map therefore characteristic function coalitional game,
vertex network viewed agent playing game. follows node v
high Shapley value game, likely v would contribute arbitrary
randomly chosen coalition nodes C terms increasing proximity C
nodes network. Thus, computing Shapley values game yields centrality
score vertex much-improved characterization closeness centrality.
difficulty adopting game-theoretically inspired centrality measure
previously mentioned problem exponential complexity number agents.
next section, show overcome difficulty compute Shapley value
many centrality applications (including formulation) time polynomial
size network.

4. Algorithms Shapley Value-Based Network Centrality
section, present five characteristic function formulations (C), designed
convey specific centrality notion. already mentioned introduction, common
element formulations aim quantify, albeit different way,
sphere influence coalition C nodes network. Specifically,
first game formulation, start simplest possible idea sphere influence
coalition nodes C set nodes immediately reachable (within one hop)
C. Subsequent games generalize notion. particular, second formulation
specifies sophisticated sphere influence: one includes nodes
immediately reachable least k different ways C. three formulations
extend notion sphere influence weighted graphs. third game defines sphere
influence set nodes within cutoff distance C (as measured shortest
path lengths weighted graph). fourth formulation extreme generalization:
allows sphere influence C specified arbitrary function f (.)
distance C nodes. final formulation straightforward extension
second game, case weighted networks.
relationships among five games graphically presented Figure 4.
4.1 Game 1: 1 (C) = #agents 1 degree away
Let G(V, E) unweighted, undirected network. first define fringe subset
C V (G) set {v V (G) : v C (or) u C (u, v) E(G)}, i.e.,
fringe coalition includes nodes reachable coalition one hop.
Based fringe, define coalitional game g1 (V (G), 1 ) respect network
G(V, E) characteristic function 1 : 2V (G) R given
619

fiMichalak, Aadithya, Szczepaski, Ravindran, & Jennings

Figure 4: Euler diagram showing relationships among five games considered
paper. Specifically, game g2 generalizes g1 ; g3 generalizes g1 generalized
g4 ; g5 generalizes g2 . Finally, note certain instances games
represented g3 , g4 g5 .

(
0
1 (C) =
size(fringe(C))

C =
otherwise.

.
game applied Suri Narahari (2008) find influential nodes
social networks shown deliver promising results concerning target
set selection problem (see Kempe, Kleinberg, & Tardos, 2003). therefore desired
compute Shapley values nodes game. shall present exact
formula computation rather obtaining Monte Carlo simulation
done Suri Narahari.
detail, evaluate Shapley value node vi , consider possible permutations
nodes vi would make positive marginal contribution coalition
nodes occurring itself. Let set nodes occurring node vi random
permutation nodes denoted Ci . Let neighbours node vi graph G(V, E)
denoted NG (vi ) degree node vi denoted degG (vi ).
key question ask is: necessary sufficient condition node vi
marginally contribute node vj NG (vi ) {vi } fringe(Ci )? Clearly, happens
neither vj neighbours present Ci . Formally, (NG (vj ){vj })Ci =
.
going show condition holds probability

1
1+degG (vj ) .

Proposition 1. probability random permutation none vertices
NG (vj ) {vj } occurs vi , vi vj neighbours, 1+deg1G (vj ) .
620

fiComputation Shapley Value Game-Theoretic Network Centrality

Algorithm 1: Computing Shapley value Game 1
Input: Unweighted graph G(V, E)
Output: Shapley values nodes V (G) game g1
foreach v V (G)
SV[v] = 1+deg1 G (v) ;
foreach u NG (v)
SV[v] += 1+deg1 G (u) ;
end
end
return SV;

Proof. need count number permutations satisfy:
v(NG (vj ){vj }) (vi ) < (v).

(4)

end:
Let us choose |(NG (vj ) {vj }| positions sequence elements V .

|V |
1+deg
ways.
G (vj )
Then, last degG (vj ) chosen positions, place elements (NG (vj ) {vj }) \
{vi }. Directly these, place element vi . number line-ups
(degG (vj ))!.
remaining elements arrange (|V | (1 + degG (vj ))! different ways.
all, number permutations satisfying condition (4) is:

|V |
(degG (vj ))!(|V
1+degG (vj )

| (1 + degG (vj ))! =

|V |!
1+degG (vj ) ;

thus, probability one permutations randomly chosen

1
1+degG (vj ) .

Now, denote Bvi ,vj Bernoulli random variable vi marginally contributes vj
fringe(Ci ). above, have:
E[Bvi ,vj ] = Pr[(NG (vj ) {vj }) Ci = ] =

1
.
1 + degG (vj )

Therefore, SVg1 (vi ), expected marginal contribution vi , given by:
SVg1 (vi ) =

X

E[Bvi ,vj ] =

X
vj {vi }NG (vi )

vj {vi }NG (vi )

621

1
,
1 + degG (vj )

(5)

fiMichalak, Aadithya, Szczepaski, Ravindran, & Jennings

exact closed-form expression computing Shapley value node
network.
possible derive intuition formula. node high degree,
number terms Shapley value summation high. terms
inversely related degree neighboring nodes. gives
intuition node high centrality degree high,
whenever degree tends higher comparison degree neighboring nodes.
words, power comes connected powerless, fact
well-recognized centrality literature (e.g., Bonacich, 1987). Following
reasoning, easily predict dynamic changes network, adding
removing edge, would influence Shapley value.8 Adding edge powerful
powerless node add even power former decrease power
latter. Naturally, removing edge would reverse effect.
Interestingly, although game g1 quite different induced-subgraph representation
Deng Papadimitriou (1994), formula SVg1 (vi ) is, extent, similar
formula (1). particular, cases, Shapley value node depends solely set
immediate neighbours. Moreover, cases, linear combination fractions
involving numerator weight edges node neighbours.9
difference denominators, case depends degree involved
nodes. see next two games considered paper yield comparable g1
closed-form expressions Shapley value.
Algorithm 1 directly implements expression (5) compute exact Shapley values
nodes network. cycles nodes neighbours, running time
O(|V | + |E|).
Finally, note Algorithm 1 adopted directed graphs couple simple
modifications. Specifically, order capture many nodes access given
node from, degree node replaced indegree. Furthermore, set
neighbours given node v consist nodes edge directed
v.
4.2 Game 2: 2 (C) = #agents least k neighbors C
consider general game formulation unweighted graph G(V, E),
value coalition includes number agents either coalition
adjacent least k agents coalition. Formally, consider game g2
characterised 2 : 2V (G) R,
(
0
2 (C) =
|{v : v C (or) |NG (v) C| k}|

C =
otherwise.

8. Many real-life networks fact dynamic challenge developing fast streaming algorithms
recently attracted considerable attention literature (Lee, Lee, Park, Choi, & Chung, 2012).
9. Note case g1 weight edge 1.

622

fiComputation Shapley Value Game-Theoretic Network Centrality

second game instance General Threshold Model widely studied
literature (e.g., Kempe et al., 2005; Granovetter, 1978). Intuitively, model
node become active monotone activation function reaches threshold.
instance problem proposed Goyal, Bonchi, Lakshmanan (2010),
authors introduced method learning influence probabilities social networks (from
users action logs). However, many realistic situations much less information available
network possible assess specific probabilities individual
nodes become active. Consequently, much simpler models studied. Bikhchandani et al.
(1992), instance, consider teenager deciding whether try drugs. strong
motivation trying drugs fact friends so. Conversely, seeing friends
reject drugs could help persuade teenager stay clean. situation modelled
second game; threshold node k activation function f (S) =
|S|. Another example viral marketing innovation diffusion analysis. Again,
application, often assumed agent influenced least k
neighbors already convinced (Valente, 1996). Note game reduces
game g1 k = 1.
Adopting notation previous subsection, ask: necessary
sufficient condition node vi marginally contribute node vj NG (vi ) {vi } value
coalition Ci ?
Clearly, degG (vj ) < k, E[Bvi ,vj ] = 1 vi = vj 0 otherwise. degG (nj ) k,
split argument two cases. vj 6= vi , condition marginal contribution
exactly (k 1) neighbors vj already belong Ci vj
/ Ci .
hand, vj = vi , marginal contribution occurs Ci originally consisted
(k 1) neighbors vj . degG (vj ) k vj 6= vi , need determine
appropriate probability.
Proposition 2. probability random permutation exactly k 1 neighbours vj
1+degG (vj )k
occur vi , vj occurs vi , is: degG (vj )(1+deg
, vj vi neighbors
G (vj ))
degG (vj ) k.
Proof. need count number permutations satisfy:

n


!KNG (vj ) |K| = k 1 vK (v) < (vi )



vNG (vj )\K (vi ) (v) (vi ) < (vj ) .

(6)

end:
Let us choose |(NG (vj ) {vj }| positions sequence elements V .

|V |
1+deg
ways.
(v
)
G j
Then, choose k 1 elements set (NG (vj ) \ {vi }. number choices
(vj )1
degGk1
.
623

fiMichalak, Aadithya, Szczepaski, Ravindran, & Jennings

Algorithm 2: Computing Shapley value Game 2
Input: Unweighted graph G(V, E), positive integer k
Output: Shapley value nodes V (G) game g2
foreach v V (G)
SV[v] = min(1, 1+degk G (v) );
foreach u NG (v)
G (u)k+1
SV[v] += max(0, degGdeg
(u)(1+degG (u)) );
end
end
return SV;

Then, first k 1 chosen positions, place elements chosen previous step.
Directly those, place element vi , remaining vertices chosen
first step. number line-ups (k 1)!(1 + degG (vj ) k)!.
remaining elements arrange (|V | degG (vj ) 1)! different ways.
Taking together, number permutations satisfying condition (6) is:
degG 1
|V |
k1 (k
1+degG (vj )

1)!(1 + degG (vj ) k)!(|V | degG (vj ) 1)! =

|V |!(1+degG (vj )k)
degG (vj )(1+degG (vj )) ;

thus, probability one permutations randomly chosen

1+degG (vj )k
degG (vj )(1+degG (vj )) .

Using Proposition 2 obtain:
E[Bvi ,vj ] =

1 + degG (vj ) k
.
degG (vj )(1 + degG (vj ))

degG (vi ) k vj = vi , have:

E[Bvi ,vi ] =

k1
X
n=0

1
k
=
.
1 + degG (vi )
1 + degG (vi )

before, Shapley values given substituting formulae into:
SVg2 (vi ) =

X

E[Bvi ,vj ].

vj NG (vi ){vi }

Although game generalization game g1 , still solved obtain Shapley
values nodes O(|V | + |E|) time, formalised Algorithm 2.
624

fiComputation Shapley Value Game-Theoretic Network Centrality

even general formulation game possible allowing k function
agent, i.e., node vi V (G) assigned unique attribute k(vi ).
translates application form: agent convinced least ki
neighbors convinced, frequently used model literature (Valente, 1996).
argument use fact k constant across nodes.
generalized formulation solved simple modification original Shapley value
expression:
SV (vi ) =

k(vi )
+
1 + degG (vi )

X
vj NG (vi )

1 + degG (vj ) k(vj )
.
degG (vj )(1 + degG (vj ))

equation (which implementable O(|V |+|E|) time) assumes k(vi )
1+degG (vi ) nodes vi . condition assumed without loss generality
cases still modelled (we set k(vi ) = 1 + degG (vi ) extreme case node
vi never convinced matter many neighbors already convinced).
Finally, note Algorithm 2 adapted case directed graphs along
lines Algorithm 1.
4.3 Game 3: 3 (C) = #agents dcutoff away
Hitherto, games confined unweighted networks. many applications,
necessary model real-world networks weighted graphs. example, coauthorship network mentioned introduction, edge often assigned weight
proportional number joint publications corresponding authors produced
(Newman, 2001).
subsection extends game g1 case weighted networks. Whereas game g1 equates
(C) number nodes located within one hop node C, formulation
subsection equates (C) number nodes located within distance dcutoff
node C. Here, distance two nodes measured length shortest
path nodes given weighted graph G(V, E, W ), W : E R+
weight function.
Formally, define game g3 , coalition C V (G),
(
0
3 (C) =
size({vi : vj C | distance(vi , vj ) dcutoff })

C =
otherwise.

Clearly, g3 used settings g1 applicable; instance, diffusion
information social networks analyse research collaboration networks (e.g., Suri &
Narahari, 2010, 2008). Moreover, general game, g3 provides additional modelling
opportunities. instance, Suri Narahari (2010) suggest intelligent way
sieving nodes neighbourhood would improve algorithm solving target
selection problem (top-k problem). Now, g3 allows us define different cutoff distance
625

fiMichalak, Aadithya, Szczepaski, Ravindran, & Jennings

Algorithm 3: Computing Shapley value Game 3
Input: Weighted graph G(V, E, W ), dcutoff > 0
Output: Shapley value nodes G game g3
foreach v V (G)
DistanceVector = Dijkstra(v,G);
extNeighbors(v) = ; extDegree(v) = 0;
foreach u V (G) u 6= v
D(u) dcutoff
extNeighbors(v).push(u);
extDegree(v)++;
end
end
end
foreach v V (G)
1
SV[v] = 1+extDegree(v)
;
foreach u extN eighbors(v)
1
SV[v] += 1+extDegree(u)
;
end
end
return SV;

node Suri Naraharis setting. Furthermore, g3 specific case
general model g4 discussed next subsection.
shall show even highly general centrality game g3 amenable analysis
yields exact formula Shapley value. However, case algorithm
implementing formula linear size network, O(|V ||E| +
|V |2 log|V |) complexity.
deriving exact Shapley value formula, introduce extra notation. Define
extended neighborhood NG (vj , dcutoff ) = {vk 6= vj : distance(vk , vj ) dcutoff }, i.e.,
set nodes whose distance vj dcutoff . Denote size NG (vj , dcutoff )
degG (vj , dcutoff ). notation, necessary sufficient condition node vi
marginally contribute node vj value coalition Ci is: distance(vi , vj ) dcutoff
distance(vj , vk ) > dcutoff vk Ci . is, neither vj node extended
neighborhood present Ci . discussion previous subsections
Proposition 1, know probability event exactly 1+degG (v1j ,dcutoff ) . Therefore, exact formula Shapley value node vi game g3 is:
SVg3 (vi ) =

X
vj {vi }NG (vi ,dcutoff )

1
.
1 + degG (vj , dcutoff )

Algorithm 3 works follows: node v network G(V, E), extended neighborhood NG (v, dcutoff ) size degG (v, dcutoff ) first computed using Dijkstras algorithm
626

fiComputation Shapley Value Game-Theoretic Network Centrality

O(|E| + |V |log|V |) time (Cormen, 2001). results used directly implement
equation, takes maximum time O(|V |2 ). practice step runs much
faster worst case situation occurs every node reachable every
node within dcutoff . Overall complexity O(|V ||E| + |V |2 log|V |).
Furthermore, deal directed graphs need redefine notion extDegree
extN eighbors given node u Algorithm 3. former number vertices
distance u smaller than, equal to, dcutoff . latter set
nodes whose distance u dcutoff .
Finally, make observation proof depend dcutoff
constant across nodes. Indeed, node vi V (G) may assigned unique
value dcutoff (vi ), (C) would number agents vi within distance
dcutoff (vi ) C. case, proof gives:
SV (vi ) =

X

vj :distance(vi ,vj )
dcutoff (vj )

4.4 Game 4: 4 (C) =

1
.
1 + degG (vj , dcutoff (vj ))

P

vi V (G) f (distance(vi , C))

subsection generalizes game g3 , taking motivation real-life network
problems. game g3 , agents distances dagent dcutoff contributed equally
value coalition. However, assumption may always hold true
applications intuitively expect agents closer coalition contribute value.
instance, expect Facebook user exert influence immediate circle
friends friends friends, even though may satisfy dcutoff criterion.
Similarly, expect virus-affected computer infect neighboring computer quickly
computer two hops away.
general, expect agent distance coalition would contribute f (d)
value, f (.) positive valued decreasing function argument. formally,
define game g4 , value coalition C given by:
(
0
4 (C) = P

vi V (G) f (d(vi , C))

C =
otherwise,

d(vi , C) minimum distance: min{distance(vi , vj )|vj C}.
note possible solve Shapley value formulation
constructing MC-Nets representation (see Section 2 details formalism).
Indeed, combinatorial structure networks certain extent similar structure
MC-Nets. Consequently, existence polynomial algorithm compute Shapley
value MC-Nets strongly suggests polynomial algorithms could developed
games defined networks. results paper demonstrate indeed
case. However, underlined approach compute Shapley
627

fiMichalak, Aadithya, Szczepaski, Ravindran, & Jennings

value different applied MC-Nets. solutions focus
computing expected contribution every node random permutation nodes
disaggregating game collection simple, easily solvable, games
done MC-Nets. difference approaches clearly visible case
g3 . Here, MC-Nets would O(|V |3 ) rules, whereas discussion below,
propose efficient algorithm g3 runs O(|V ||E| + |V |2 log|V |).
considerable improvement real-world networks sparse, i.e., E O(|V |)
(Reka & Barabsi, 2002).
case g3 , key question ask is: expected value marginal
contribution vi node vj 6= vi value coalition Ci ? Let marginal
contribution denoted C(vi , vj ). Clearly:
(
0
C(vi , vj ) =
f (distance(vi , vj )) f (d(vj , Ci ))

distance(vi , vj ) d(vj , Ci )
otherwise.

Let Dvj = {d1 , d2 ...d|V |1 } distances node vj nodes network,
sorted increasing order. Let nodes corresponding distances {w1 , w2 ...w|V |1 },
respectively. Let kij + 1 number nodes (out |V | 1) whose distances
vj distance(vi , vj ). Let wkij +1 = vi (i.e., among nodes distance
vj vi , vi placed last increasing order).
use literal wi mean wi Ci literal wi mean wi
/ Ci . Define sequence
boolean variables pk = vj w1 w2 ... wk 0 k |V | 1. Finally denote
expressions form C(vi , vj |F ) mean marginal contribution vi Ci
vj given coalition Ci satisfies boolean expression F .

C(vi , vj |pkij +1 wkij +2 ) = f (dkij +1 ) f (dkij +2 ),
C(vi , vj |pkij +2 wkij +3 ) = f (dkij +1 ) f (dkij +3 ),
..
..
..
.
.
.
C(vi , vj |p|V |2 w|V |1 ) = f (dkij +1 ) f (d|V |1 ),
C(vi , vj |p|V |1 ) = f (dkij +1 ).
notation, obtain expressions C(vi , vj ) splitting mutually
exclusive exhaustive (i.e., covering possible non-zero marginal contributions) cases.
Now, need determine probability Pr(pk wk+1 ).
Proposition 3. probability random permutation none nodes
1
.
{vj , w1 , . . . , wk } occur vi node wk+1 occurs vi (k+1)(k+2)
Proof. Let us count number permutations satisfy:
v{vj ,w1 ,...,wk } (vi ) < (v) (vi < (wk+1 ).
end:
628

(7)

fiComputation Shapley Value Game-Theoretic Network Centrality

Let us choose |{vj , w1 , . . . , wk }{vj }{wk+1 }| positions sequence elements
|V |
V . k+3
ways.
Then, last k + 1 chosen positions, place elements {vj , w1 , . . . , wk }.
Directly these, place element vi , vertex wk+1 . number
line-ups (k + 1)!.
remaining elements arrange (|V | (k + 3)! different ways.
Thus, number permutations satisfying (7) is:
|V |
k+3 (k

+ 1)!(|V | (k + 3))! =

|V |!
(k+1)(k+2) ,

probability one permutations randomly chosen

1
(k+1)(k+2) .

proposition find that:
Pr(pk wk+1 )

1
1 + kij k |V | 2.
(k + 1)(k + 2)

Using C(vi , vj ) equations probabilities Pr(pk wk+1 ):




X f (distance(vi , vj )) f (dk+1 )
+ f (distance(vi , vj ))
E[M C(vi , vj )] =
(k + 1)(k + 2)
|V |
|V |2

k=1+kij

f (distance(vi , vj ))

=
kij + 2

|V |2

X
k=kij +1

f (dk+1 )
.
(k + 1)(k + 2)

vi = vj , similar analysis produces:
|V |2

E[M C(vi , vi )] = f (0)

X
k=0

f (dk+1 )
.
(k + 1)(k + 2)

Finally exact Shapley value given by:
SVg4 (vi ) =

X

E[M C(vi , vj )].

vj V (G)

Algorithm 4 implements formulae. vertex v, vector distances
every vertex first computed using Dijkstras algorithm (Cormen, 2001). yields
vector Dv already sorted increasing order. vector traversed
629

fiMichalak, Aadithya, Szczepaski, Ravindran, & Jennings

Algorithm 4: Computing Shapley value Game 4
Input: Weighted graph G(V, E, W ), function f : R+ R+
Output: Shapley value nodes G game g4
Initialise: v V (G) set SV[v] = 0;
foreach v V (G)
[Distances D, Nodes w] = Dijkstra(v,G);
sum = 0; index = |V|-1; prevDistance = -1, prevSV = -1;
index > 0
D(index) == prevDistance
currSV = prevSV;
else
currSV = f (D(index))
1+index sum;
end
SV[w(index)] += currSV;
sum +=

f (D(index))
index(1+index) ;

prevDistance = D(index), prevSV = currSV;
index--;
end
SV[v] += f(0) sum;
end
return SV;

P f (dk+1 )
reverse, compute backwards cumulative sum
(k+1)(k+2) . step backward traversal, Shapley value appropriate node w updated according
E[M C(w, v)] equation. traversal, Shapley value v updated according
E[M C(v, v)] equation. process repeated nodes v end
algorithm, Shapley value computed exactly O(|V ||E| + |V |2 log|V |) time.
final observation Algorithm 4 works directed graphs long use
appropriate version Dijkstras algorithm (see, e.g., Cormen, 2001).
4.5 Game 5: 5 (C) = #agents

P
(weights inside C) Wcutoff (agent)

subsection, generalize game g2 case weighted networks. Given positive
weighted network G(V,
P E, W ) value Wcutoff (vi ) every node vi V (G), first
define W (vj , C) = vi C W (vj , vi ) every coalition C, W (vi , vj ) weight
edge nodes vi vj (or 0 edge). notation,
define game g5 characteristic function:
(
0
5 (C) =
size({vi : vi C (or) W (vi , C) Wcutoff (vi )})
630

C =
otherwise.

fiComputation Shapley Value Game-Theoretic Network Centrality

Algorithm 5: Computing Shapley value Game 5
Input: Weighted network G(V, E, W ), cutoffs Wcutoff (vi ) vi V (G)
Output: Shapley value nodes G game g5
foreach vi V (G)
compute store ;
end
foreach vi V (G)
SV[vi ] = 0;
foreach 0 degG (vi )
ii ), = (X ii ), p = Pr{N (, 2 ) < W
compute = (Xm
cutoff (vi )};

p
SV[vi ] += 1+degG (vi ) ;
end
foreach vj NG (vi )
p = 0;
foreach 0 degG (vj ) 1
ij
ij
ij
compute = (Xm
), = (Xm
) z = Zm
;
deg (v )m

G j
p += z degG (vj )(deg
;
G (vj )+1)

end
SV[vi ] += p;
end
end
return SV;

formulation applications in, instance, analysis information diffusion, adoption innovations, viral marketing. Indeed, many cascade models
phenomena weighted graphs proposed (e.g., Granovetter, 1978; Kempe et al.,
2003; Young, 2006) work assuming agent change state inactive
active sum weights active neighbors least equal
agent-specific cutoff.
Although able come exact formula Shapley value
game10 , analysis yields approximate formula found accurate
practice.
detail, observe node vi marginally contributes node vj NG (vi ) value
coalition Ci vj
/ Ci Wcutoff (vj ) W (vi , vj ) W (vj , Ci ) < Wcutoff (vj ).
Let us denote Bvi ,vj Bernoulli random variable corresponding event.
need following additional notation:
let NG (vj ) = {vi , w1 , w2 ...wdegG (vj )1 };
10. Computing Shapley value game involves determining whether sum weights specific
edges, adjacent random coalition, exceeds threshold. problem seems least hard
computing Shapley value weighted voting games, #P-Complete (Elkind et al., 2009).

631

fiMichalak, Aadithya, Szczepaski, Ravindran, & Jennings

let weights edges vj nodes NG (vj ) Wj =
{W (vi , vj ), W1 , W2 ...WdegG (vj )1 } order;
let j sum weights Wj j sum squares
weights Wj ;
let kij number nodes NG (vj ) occur vi Ci ;
let Xtij sum t-subset Wj \ {W (vi , vj )} drawn uniformly random
set possible t-subsets; finally
let Ymij event {kij = vj
/ Ci }.
Then:
degG (vj )1

E[Bvi ,vj ] =

X

ij
Pr(Ymij ) Pr{Xm
[Wcutoff (vj ) W (vi , vj ), Wcutoff (vj ))},

m=0

Pr(Ymij ) obtained Proposition 2:
Pr(Ymij )



degG (vj )
degG (vj ) 1 m! (degG (vj ) m)!
=
.
=
(degG (vj ) + 1)!
degG (vj )(degG (vj ) + 1)


ij
Evaluating Pr{Xm
[Wcutoff (vj ) W (vi , vj ), Wcutoff (vj ))} much difficult
ij
complicated function degG (vj ) 1 numbers Wj \
distribution Xm
ij
{W (vi , vj )}. However, obtain analytical expressions mean (Xm
) variance
ij
2 (Xm
). given by:


(j W (vi , vj ))
degG (vj ) 1
(j W (vi , vj ))2
m(degG (vj ) 1 m)
ij
)=
(j W (vi , vj )2
).
2 (Xm
(degG (vj ) 1)(degG (vj ) 2)
degG (vj ) 1
ij
(Xm
)=

ij
Knowing mean variance (not exact distribution) Xm
, propose
approximation:

ij
ij
ij
Xm
N ((Xm
), 2 (Xm
)),

N (, 2 ) denotes Gaussian random variable mean variance 2 .
approximation similar randomised approach proposed tested
Fatima et al. (2007).
approximation, have:
632

fiComputation Shapley Value Game-Theoretic Network Centrality

ij
ij
Zm
= Pr{Xm
[Wcutoff (vj ) W (vi , vj ), Wcutoff (vj ))}

given

ij
Zm

"
1
erf

2

ij
Wcutoff (vj ) (Xm
)

ij
2(Xm )

!
erf

ij
Wcutoff (vj ) W (vi , vj ) (Xm
)

ij
2(Xm )

!#
.

allows us write:
degG (vj )1

E[Bvi ,vj ] =

X
m=0

degG (vj )
Z ij .
degG (vj )(degG (vj ) + 1)

equations true vj 6= vi . vj = vi have:

1
E[Bvi ,vi ]
1 + degG (vi )

degG (vi )

X

ii
ii
Pr{N ((Xm
), 2 (Xm
)) < Wcutoff (vi )},

m=0


ii
(Xm
)=



degG (vi )



ii
2 (Xm
)=

i2
(degG (vi ) m)
(i
).
degG (vi ) (degG (vi ) 1)
degG (vi )

P
Finally Shapley value node vi given vj {vi }NG (vi ) E[Bvi ,vj ].
P
inPeach graph
P holds vi V (G) degG (vi ) 2|E|, Algorithm 5 implements
O(|V | + vi V (G) vj NG (vi ) degG (vj )) O(|V | + |V ||E|) = O(|V ||E|) solution compute
Shapley value agents game g5 using approximation.
Furthermore, make following observation: approximation discrete random
ij
variable Xm
continuous Gaussian random variable good degG (vj ) large.
small degG (vj ), one might well use brute force computation determine E[Bvi ,vj ]
O(2degG (vj )1 ) time.
far directed graphs concerned, calculations Algorithm 5 consider
indegree node instead degree. Furthermore, set neighbours node u
defined set nodes vi connected directed edge (u, vi ).
633

fiMichalak, Aadithya, Szczepaski, Ravindran, & Jennings

5. Simulations
section evaluate time performance exact algorithms games g1
g4 approximation algorithm game g5 . detail, compare exact
algorithms method approximating Shapley value via Monte Carlo sampling
feasible approach compute game-theoretic network centrality
available date literature. First, provide detailed description simulation
setup; then, present data sets simulation results.
5.1 Simulation Setup
approximation methods Shapley value recently
proposed literature. divided three groupseach referring specific
subclass coalitional games consideration:
1. First, let us consider method proposed Fatima et al. (2007) elaborated
Fatima, Wooldridge, Jennings (2008). approach concerns weighted
voting games. games, player certain number votes (or
words, weight). coalition winning number votes coalition
exceeds specific threshold, losing otherwise. Fatima et al. propose
following method approximate Shapley value weighted voting games. Instead
finding marginal contributions players 2n coalitions, authors consider
n randomly-selected coalitions, one size (i.e., 1 n).
n coalitions players expected marginal contributions calculated
average contributions yields approximation Shapley value. Whereas
Fatima et al. method certainly attractive, applicable games
value coalition depends sum associated weights bounds.
case games g1 g4 .11
2. Another method proposed Bachrach, Markakis, Procaccia, Rosenschein,
Saberi (2008a) context simple coalitional games 12 characteristic function binaryi.e., coalition value either zero one.
games, Bachrach et al. extend approach suggested Mann Shapley
(1960) provide rigorous statistical analysis. particular, Mann Shapley
described Monte Carlo simulations estimate Shapley value random
sample coalitions. Bachrach al. use technique compute Banzhaf power
index suggested using random sample permutations players
order compute Shapley-Shubik index simple coalitional games.13
computation confidence interval, crucial approach, hinges
upon binary form characteristic function simple coalitional games.
11. Recall approximation algorithm g5 builds upon Fatima et al. method.
game marginal contribution node depends weights assigned incident edges.
12. Note weighted voting games simple coalitional games.
13. Shapley-Shubik index well-known application Shapley value evaluates power
individuals voting (Shapley & Shubik, 1954).

634

fiComputation Shapley Value Game-Theoretic Network Centrality

Algorithm 6: Monte Carlo method approximate Shapley value
Input:
Characteristic function v, maximum iteration maxIter
Output: Aproximation Shapley value game v
vi V (G)
SV[vi ] = 0 ;
end
= 1 maxIter
shuffle(V (G));
Marginal Contribution block
P=;
vi V (G)
SV[vi ] += v(P {vi }) - v(P) ;
P = P {vi } ;
end
end
vi V (G)
SV[vi ]
SV[vi ] = maxIter
;
end
return SV ;

method general one proposed Fatima et al. (2007)as weighted
voting games subset simple coalitional gamesbut still cannot effectively
used games g1 g4 , characteristic functions binary.
3. Unlike first two methods, last method described Castro et al. (2009)
efficiently applied coalitional games characteristic function game form,
assuming worth every coalition computed polynomial time. Here,
approximating Shapley value involves generating permutations players
computing marginal contribution player set players occurring
it. solution precision increases (statistically) every new permutation
analysed. Furthermore, authors show estimate appropriate size
permutation sample order guarantee low error. Given broad applicability,
method used simulations comparison benchmark.
detail, preliminary step, test maximum number Monte
Carlo iterations performed reasonable time given game.
maximum number iterations, denoted maxIter, becomes input Algorithm 6
Monte Carlo sampling. algorithm, one maxIter iterations, random
permutation nodes generated. Then, using characteristic function set
{1 , 2 , 3 , 4 , 5 }, calculates marginal contribution node set P
635

fiMichalak, Aadithya, Szczepaski, Ravindran, & Jennings

nodes occurring given node random permutation.14 Finally, algorithm
divides aggregated sum contributions node number iterations
performed. time complexity algorithm O(maxIter con), con denotes
number operations necessary computing Marginal Contribution block.
block specifically tailored particular form characteristic function
games g1 g5 . particular, game g1 (see Algorithm 6), constructed follows.
Recall that, game, node vi makes positive contribution coalition P
adjacent node u two conditions. Firstly, neither vi u P .
Secondly, edge P vi u. check conditions Algorithm 6
store nodes already contributed value coalition P array
called: Counted. node vi , algorithm iterates set neighbours
adjacent node checks whether adjacent node counted array
Counted. not, marginal contribution node vi increased one. Appendix
describe Marginal Contribution block games g2 , . . . , g5 , respectively.15
details Algorithm 6 applied generate Shapley value approximations
games g1 g4 , propose exact polynomial solutions, differ g5 ,
developed approximate solution. Specifically, games g1 g4 :
1. use exact algorithm proposed paper compute Shapley value.
2. Then, run Monte Carlo simulations 30 times.16 every run:
perform maxIter Monte Carlo iterations.
every five iterations, compare approximation Shapley value
obtained via Monte Carlo simulation exact Shapley value obtained
algorithm.
record algorithms runtime error, error defined
maximum discrepancy actual Shapley value Monte Carlobased approximation Shapley value.
3. Finally, compute confidence interval using iterations (0.95% confidence
level).17
case game g5 cannot determine exact Shapley value larger networks.
Therefore, performed two levels simulation: one level small networks one level
large networks. Specifically:
1. small networks, generate 30 random instances weighted complete graphs
6 nodes (denoted K6 ) number graphs 12 nodes (denoted
14. Recall characteristic functions v1 , v2 , . . . , v5 correspond games g1 , g2 , . . . , g5 , respectively.
15. software package C++ containing exact/approximation algorithms, well Monte
Carlo approximation algorithms available www.tomaszmichalak.net.
16. purpose comparison method, suffices use 30 iterations, standard errors
converge significantly indicate magnitude cost using Monte Carlo method.
17. Since g4 Monte Carlo iteration relatively time consuming, run once; thus,
confidence interval generated, i.e., third step omitted.

636

fiComputation Shapley Value Game-Theoretic Network Centrality

K12 ) weights drawn uniform distribution U (0, 1). Then, graph
two parameters Wcutoff (vi ) = 41 (vi ) Wcutoff (vi ) = 34 (vi ):18
compute exact Shapley value using formula (3).
Then, run approximation algorithm determine error approximation.
Finally, run 2000 6000 Monte Carlo iterations K6 K12 , respectively.
2. large networks, generate 30 random instances weighted complete
graphs, 1000 nodes (we denote K1000 ). Then, graph
three parameters Wcutoff (vi ) = 14 (vi ), Wcutoff (vi ) = 42 (vi ),
Wcutoff (vi ) = 43 (vi )):
run approximation algorithm Shapley value.
Then, run fixed number (200000) Monte Carlo iterations.
Finally, compute Monte Carlo solution converges results
approximation algorithm.
described simulation setup, discuss data sets and, finally,
simulation results.
5.2 Data Used Simulations
consider two networks already well-studied literature. Specifically,
games g1 g3 present simulations undirected, unweighted network representing
topology Western States Power Grid (WSPG).19 network (which 4940
nodes 6594 edges) studied many contexts (see, instance, Watts &
Strogatz, 1998) freely available online (see, e.g., http://networkdata.ics.uci.edu/
data.php?id=107). games g3 g5 (played weighted networks), used network
astrophysics collaborations (abbreviated henceforth APhC) Jan 1, 1995
December 31, 1999. network (which 16705 nodes 121251 edges) freely
available online (see, e.g., http://networkdata.ics.uci.edu/ data.php?id=13)
used previous studies Newman (2001).
5.3 Simulation Results
results presented section show exact algorithms are, general, much
faster Monte Carlo sampling, case even allow generous
error tolerance. Furthermore, requiring smaller Monte Carlo errors makes Monte Carlo
runtime exponentially slower exact solution.
18. Recall j sum weights Wj defined Section 4.5.
19. Note distance threshold dcutoff replaced hop threshold kcutoff , game g3 played
unweighted network.

637

fiMichalak, Aadithya, Szczepaski, Ravindran, & Jennings

2000

1600

1600

1400

1400

1200

1200

1000
800

1000
800

600

600

400

400

200

200
0.43 ms

0
100

90

80 70 60 50 40 30 20
Maximal allowable MC error (%)

10

2000

100

90

80 70 60 50 40 30 20
Maximal allowable MC error (%)

10

0

Figure 6: g2 , k = 2, WSPG (UW)
2000

Monte Carlo solution
exact solution

1800

0.55 ms

0

0

Figure 5: g1 , WSPG (UW)

Monte Carlo solution
exact solution

1800

1600

1600

1400

1400

1200

1200

Time (ms)

Time (ms)

Monte Carlo solution
exact solution

1800

Time (ms)

Time (ms)

2000

Monte Carlo solution
exact solution

1800

1000
800

1000
800

600

600

400

400

200

200
0.52 ms

0
100

90

80 70 60 50 40 30 20
Maximal allowable MC error (%)

Figure 7: g2 , ki =

degi
2 ,

10

0

0.53 ms

0
100

90

80 70 60 50 40 30 20
Maximal allowable MC error (%)

Figure 8: g2 , ki =

WSPG (UW)

3
4

10

0

degi , WSPG (UW)

detail, simulation results game g1 shown Figure 5. dotted line
shows performance exact algorithm needs 0.43ms compute Shapley
value. contrast, generating reasonable Monte Carlo result takes substantially longer
time (the solid line shows average shaded area depicts confidence interval
Monte Carlo simulations). particular, takes average 200ms achieve
20% error 2000ms required guarantee 5% error (which
4600 times slower exact algorithm).
3

Figures 6 - 8 concern game g2 different values k (k = 2, ki = deg
2 , ki = 4 degi ,
20
respectively, degi degree node vi ). advantage exact algorithm
Monte Carlo simulation exponential.

Replacing distance threshold dcutoff hop threshold kcutoff enables game g3
played unweighted network. Thus, similarly games g1 g2 , test
Western States Power Grid. results shown Figures 9 10 kcutoff
equal 2 3, respectively. third game clearly computationally challenging
g1 g2 (note vertical axis seconds instead milliseconds). Now,
20. Recall g2 meaning parameter k follows: value coalition C depends
number nodes network least k neighbours C.

638

fi28
27
26
25
24
23
22
21
20
19
18
17
16
15
14
13

Monte Carlo solution
exact solution

Time (s)

Time (s)

Computation Shapley Value Game-Theoretic Network Centrality

12.88
100

90

80 70 60 50 40 30 20
Maximal allowable MC error (%)

10

0

31
30
29
28
27
26
25
24
23
22
21
20
19
18
17
16
15
14
13

Monte Carlo solution
exact solution

13.03
100

Figure 9: g3 , kcutoff = 2, WSPG (UW)

90

80 70 60 50 40 30 20
Maximal allowable MC error (%)

10

0

Figure 10: g3 , kcutoff = 3, WSPG (UW)

exact algorithm takes 13s complete. much lower speedups exact
methods respect Monte Carlo approach stem fact algorithms
start Dijkstras algorithm. Although algorithm run
cases takes 12.5s considered network. means exact
solution slower orders magnitude (compared games g1 g2 ). Monte Carlo
approach slower, slowdown much less significant relative terms.
Figures 11 12 show performance algorithms game g3 astrophysics
collaboration network that, unlike Western States Power Grid, weighted network.

davg
observe increasing value dcutoff (here dcutoff = avg
8 dcutoff = 4 )
significantly worsens performance Monte Carlo-based algorithm.
increasing number nodes taken account computing marginal
contributions (see inner loop Algorithm 8) time consuming,
increases Monte Carlo error.
1
game g4 performance algorithms shown Figures 13 - 15 (for f (d) = 1+d
,
1

f (d) = 1+d2 f (d) = e , respectively). Whereas Monte Carlo methods
first three games able achieve reasonable error bound seconds minutes,
fourth game takes 40 hours approach 50% error.
inner loop Marginal Contribution block (see Algorithm 9) iterates nodes
network. Due time consuming performance run simulations once.
Interestingly, observe error Monte Carlo method sometimes increases
slightly iterations performed. confirms error Monte
Carlo method approximate Shapley value proposed Castro et al. (2009)
statistically decreasing time. Certain new randomly chosen permutations actually
increase error.

Figures 16, 17, 18 19 present comparisons approximation algorithm game g5
Monte Carlo sampling small networks (for exact Shapley value
computed definition formula (3)). figures, horizontal dotted
line shows running time solution, vertical dotted line shows average
approximation error shaded area confidence interval. previously,
639

fi48
46
44
42
40
38
36
34
32
30
28
26
24
22
20
18
16
14
12
10
8
6
4

Monte Carlo solution
exact solution

160
140
120
100
80
60
40
20
3.47 min
100

90

80 70 60 50 40 30 20
Maximal allowable MC error (%)

Figure 11: g3 , dcutoff =

40

davg
8 ,

10

4.41 min

0

100

35

35

30

30

25

25

20

15

10

10

5

5
8.78 min
90

80 70 60 50 40 30 20
Maximal allowable MC error (%)

Figure 13: g4 , f (d) =

1
1+d ,

10

40

APhC (W)

8.88 min

0
90

80 70 60 50 40 30 20
Maximal allowable MC error (%)

Figure 14: g4 , f (d) =

APhC (W)

0

Monte Carlo solution
exact solution

100

0

davg
4 ,

10

20

15

100

80 70 60 50 40 30 20
Maximal allowable MC error (%)

40

Monte Carlo solution
exact solution

0

90

Figure 12: g3 , dcutoff =

APhC (W)

Time (h)

Time (h)

Monte Carlo solution
exact solution

180

Time (min)

Time (min)

Michalak, Aadithya, Szczepaski, Ravindran, & Jennings

1
,
1+d2

10

0

APhC (W)

Monte Carlo solution
exact solution

35
30

Time (h)

25
20
15
10
5
9.18 min

0
100

90

80 70 60 50 40 30 20
Maximal allowable MC error (%)

10

0

Figure 15: g4 , f (d) = ed , APhC (W)
solid line shows average, shaded area depicts confidence interval
Monte Carlo simulations. see Figures 16, 17 18 approximation error
proposed algorithm well-contained small networks. Specifically, K6
10%; whereas bigger network K12 5%. However, notice that,
higher values Wcutoff , Monte Carlo method may slightly outperform solution. See
640

fi7
6.5
6
5.5
5
4.5
4
3.5
3
2.5
2
1.5
1
0.5
0

14
10.57
6. .74 %
91 %
%

Monte Carlo solution
approximation solution

Time (ms)

Time (ms)

14
10.43
6. .29 %
15 %
%

Computation Shapley Value Game-Theoretic Network Centrality

0.38 ms
100 90

80 70 60 50 40 30 20 10
Maximal allowable MC error (%)

7
6.5
6
5.5
5
4.5
4
3.5
3
2.5
2
1.5
1
0.5
0

0

Monte Carlo solution
approximation solution

0.38 ms
100 90

4.
7
4. 1 %
9
5. 1 %
12
%

Monte Carlo solution
approximation solution

Time (ms)

Time (ms)

26
24
22
20
18
16
14
12
10
8
6
4
2
0

2.82 ms
100 90

80 70 60 50 40 30 20 10
Maximal allowable MC error (%)

0

Figure 17: g5 , Wcutoff = 34 , K6 (W),

5.
2
5. 6 %
5
5. 4 %
81
%

Figure 16: g5 , Wcutoff = 14 , K6 (W)

80 70 60 50 40 30 20 10
Maximal allowable MC error (%)

0

26
24
22
20
18
16
14
12
10
8
6
4
2
0

Monte Carlo solution
approximation solution

2.74 ms
100 90

Figure 18: g5 , Wcutoff = 14 , K12 (W)

80 70 60 50 40 30 20 10
Maximal allowable MC error (%)

0

Figure 19: g5 , Wcutoff = 43 , K12 (W)

Figure 17 average approximation error Monte Carlo sampling achieved
0.38ms lower average error achieved method. Already K12 effect
occur (see Figure 19).
large networks, exact Shapley value cannot obtained, naturally
unable compute exact approximation error. believe error may higher
values obtained K6 K12 . However, mixed strategy, discussed
Section 4 uses approximation large degree vertices, work
towards containing error within practical tolerance bounds. far believe
Monte Carlo gives good results, Figure 20, infer approximation solution
large networks gives good results (within 5%) least two times faster
Monte Carlo algorithm.
summarise, exact solutions outperform Monte Carlo simulations even relatively
wide error margins allowed. However, always case approximation
algorithm game g5 . Furthermore, underlined centrality metrics
consideration cannot described games g1 g4 exact
algorithms available, Monte Carlo simulations still viable option.
641

fiMichalak, Aadithya, Szczepaski, Ravindran, & Jennings

approximation solution
Monte Carlo solution Wcutoff=0.25
Monte Carlo solution Wcutoff=0.50
Monte Carlo solution Wcutoff=0.75

22
20
18

Time (min)

16
14
12
10.09 min

10
8
6

0.75

4

0.50

2

0.25

0
100

90

80 70 60 50 40 30 20
Maximal allowable MC error (%)

10

0

Figure 20: g5 , Wcutoff = 14 , Wcutoff = 24 , Wcutoff = 43 , K1000 (W)

6. Conclusions Future Work
key finding paper Shapley value many centrality-related cooperative
games interest played networks solved analytically. resulting algorithms
error-free, run polynomial time and, practice, much faster
Monte Carlo methods. Approximate closed-form expressions algorithms
constructed classes games played weighted networks. Simulation results
show approximations acceptable range situations.
number directions future work. one hand, Shapley value-based
extensions centrality notions, suit particular applications, developed.
step direction, first study Shapley value-based betweenness centrality
recently presented Szczepaski, Michalak, Rahwan (2012). hand,
would interesting analyze coalitional games defined network would
better reflect centrality nodes certain real-life applications. spirit, recent works
del Pozo, Manuel, Gonzlez-Arangena, Owen (2011) Amer, Gimnez, Magana
(2012) focus generalized coalitional games order agents forming coalitions
matter. Nevertheless, still classes coalitional games, games
either positive negative externalities (Yi, 1997), extensively studied
game theory may yield interesting results applied network centrality.
Another interesting application new class coalitional games defined
network could developed problem influence maximization, already mentioned
introduction.
interesting analyse properties game-theoretic network centralities constructed solution concepts cooperative game theory Shapley value.
particular, game defined network belongs class simple coalitional
games (i.e., binary characteristic function) Banzhaf power index (Banzhaf,
1965) could used centrality metric. Otherwise, general solution concepts
core (Osborne & Rubinstein, 1994) nucleolus (Schmeidler, 1969) could
applied.
642

fiComputation Shapley Value Game-Theoretic Network Centrality

Ultimately, would interesting develop formal general approach
would allow us construct coalitional games defined networks correspond
known centrality metrics even entire families them.21 approach would
involve developing group centrality first building characteristic function
coalitional game upon it. course, developing new centrality metrics based
coalitional games, one keep mind computational properties proposed
solutions. Although able obtain satisfactory computational results games
considered paper, computation game-theoretic network centrality may
become much challenging complex definitions characteristic function.

Acknowledgments
would thank three anonymous reviewers comments earlier version
paper helped improve considerably. Also, would thank dr Talal
Rahwan dr Suri Rama Narayanam proofreading, helpful comments suggestions.
Tomasz Michalak partially supported European Research Council Advanced Grant 291528 (RACE). Nicholas R. Jennings (and partially Tomasz Michalak)
supported ORCHID Project, funded EPSRC (Engineering Physical Research
Council) grant EP/I011587/1.

Appendix A. Marginal Contribution Blocks Algorithm 6 g2 -g5
Algorithm 7: Marginal Contribution block Algorithm 6 g2
Counted false ;
Edges 0 ;
foreach vi V (G)
foreach u NG (vi ) {vi }
Edges[u]++ ;
!Counted[u] ( Edges[u] k[u] u = vi )
SV[vi ]++ ;
Counted[u] = true ;
end
end
end
games considered paper Marginal Contribution block Algorithm 6 takes slightly different form. main text explained functioning
block g1 . appendix, discuss block remaining four games.
particular:
g2 : Here, node vi makes positive contribution coalition P
adjacent node u two conditions. Firstly, neither vi u
21. thank anonymous reviewer suggestion.

643

fiMichalak, Aadithya, Szczepaski, Ravindran, & Jennings

Algorithm 8: Marginal Contribution block Algorithm 6 g3
Counted false ;
foreach vi V (G)
foreach u extN eighbors(vi ) {vi }
!Counted[u]
SV[vi ]++ ;
Counted[u] = true ;
end
end
end
Algorithm 9: Marginal Contribution block Algorithm 6 g4
dist infinity ;
foreach vi V (G)
foreach u V (G)
D[u] < dist[u]
SV[vi ] += f(D[u]) - f(dist[u]) ;
dist[u] = D[u] ;
end
end
SV[vi ] += f(dist[u]) - f(0) ;
dist[vi ] = 0 ;
end

P . Secondly, less k edges P vi exactly k 1 edges
P u. order check first condition Algorithm 7 use array
Counted, check second one, use array Edges. node vi ,
algorithm iterates set neighbours adjacent node
checks whether adjacent node meets two conditions. so, marginal
contribution node vi increased one.
g3/4 : Marginal Contribution blocks games g3 g4 (Algorithms 8 9),
values dependent distance (extN eighbours D) calculated
using Dijkstras algorithm stored memory. pre-computations allow us
significantly speed Monte Carlo methods. Now, g3 node vi makes positive
contribution coalition P adjacent node u
two conditions. Firstly, neither vi u P . Secondly, edge length
dcutoff P vi u. check conditions Algorithm 8 use
array Counted. node vi , algorithm iterates set extended
neighbours checks whether neighbour meets conditions.
so, marginal contribution node vi increased one. game g4 , node
vi makes positive contribution coalition P node (including itself)
closer vi P . Algorithm 9 use array Dist store distances
644

fiComputation Shapley Value Game-Theoretic Network Centrality

Algorithm 10: Marginal Contribution block Algorithm 6 g5
Counted false ;
Weights 0 ;
foreach vi V (G)
foreach u NG (vi ) {vi }
weights[u]+= W (vi , u);
!Counted[u] ( weights[u] Wcutoff (u) u = vi )
SV[vi ]++ ;
Counted[u] = true ;
end
end
end

coalition P nodes graph array store distances vi
nodes. node vi , algorithm iterates nodes
graph, node u, distance vi u smaller P u,
algorithm computes marginal contribution f (D[u]) f (Dist[u]). value
Dist[u] updated D[u]this new distance P u.
g5 : game g5 , extension g2 weighted graphs, node vi makes positive
contribution coalition P (both adjacent node u)
two conditions. Firstly, neither vi u P . Secondly, sum weights
edges P vi less Wcutoff (vi ) sum weights edges P u
greater than, equal to, Wcutoff (u)W (vi , u) smaller Wcutoff (vi )+W (vi , u).
order check first condition Algorithm 10 use array Counted,
check second one, use array W eights. node vi , algorithm
iterates set neighbours adjacent node checks whether
adjacent node meets two conditions. so, marginal contribution
node vi increased one.

Appendix B: Main Notation Used Paper


set players.

ai

player A.

C

coalition.
value coalition, characteristic function.

(C)
(A, )/gi
SVgj (vi )
G = (V, E)
G = (V, E, W )
W (v, u)

coalitional game.
Shapley value od vertex vi game gj .
Unweighted graph/network consisting set vertices V edges E.
Weighted graph/network.
Weight edge v u.
645

fiMichalak, Aadithya, Szczepaski, Ravindran, & Jennings

V (G)/V, E(G)/E
vi V

set vertices edges graph G.

deg(vi )

vertex set V .
Degree vertex vi .

NG (vi )

Set neighbours vertex vi G.

distance(v, u)/d(v, u) distance vertices v u.
Extended neighbourhood: NG (vj , dcutoff ) = {vk 6= vj : distance(vk , vj )
NG (vi , dcutof f )
dcutoff }.
Marginal contribution vertex u makes vertex v.
C(u, v)
(A)
(A)
(i)
C (i)

set orders players A.
single ordering agents A.
position th element ordering .
{aj : (j) < (i)}.

E[]

{v V (G) : v C (or) u C (u, v) E(G)}.
number assigned vertex v used Game 2. minimum number
adjacent nodes necessary influence node vi .
number assigned vertex v used Game 5. Minimum sum weights
adjacent edges necessary influence node vi .
expectation operator.

P[]

probability operator.

O()

big complexity notation.

f ringe(C)
k(vi )/ki
Wcutoff (vi )

B, X,
N (, 2 )
erf ()

Random variables.
Normal distribution mean variance 2 .

j

error function.
sum weights incident edges vertex vj .

j

sum squares weights incident edges vertex vj .

f (.)

positive valued decreasing function.

Ki

complete graph (clique) nodes.

References
Aadithya, K., Michalak, T., & Jennings, N. (2011). Representation coalitional games
algebraic decision diagrams. AAMAS 11: Proceedings 10th International
Joint Conference Autonomous Agents Multi-Agent Systems, pp. 11211122.
Amer, R., Gimnez, J., & Magana, A. (2012). Accessibility measures nodes directed
graphs using solutions generalized cooperative games. Mathematical Methods
Operations Research, 75, 105134.
Aziz, H., Lachish, O., Paterson, M., & Savani, R. (2009a). Power indices spanning connectivity games. AAIM 09: Proceedings 5th International Conference
Algorithmic Aspects Information Management, pp. 5567.
646

fiComputation Shapley Value Game-Theoretic Network Centrality

Aziz, H., Lachish, O., Paterson, M., & Savani, R. (2009b). Wiretapping hidden network.
WINE 09: Proceedings 5th Workshop Internet & Network Economics,
pp. 438446.
Bachrach, Y., Markakis, E., Procaccia, A. D., Rosenschein, J. S., & Saberi, A. (2008a).
Approximating power indices. AAMAS 08: Proceedings 7th International
Joint Conference Autonomous Agents Multi-Agent Systems, pp. 943950.
Bachrach, Y., Rosenschein, J. S., & Porat, E. (2008b). Power stability connectivity
games. AAMAS 08: Proceedings 7th International Joint Conference
Autonomous Agents Multi-Agent Systems, pp. 9991006.
Bachrach, Y., & Rosenschein, J. (2009). Power threshold network flow games. Autonomous
Agents Multi-Agent Systems, 18 (1), 106132.
Banzhaf, J. F. (1965). Weighted Voting Doesnt Work: Mathematical Analysis. Rutgers
Law Rev., 19, 317343.
Bikhchandani, S., Hirshleifer, D., & Welch, I. (1992). theory fads, fashion, custom,
cultural change informational cascades. Journal Political Economy, 100 (5),
9921026.
Bolus, S. (2011). Power indices simple games vector-weighted majority games
means binary decision diagrams. European Journal Operational Research, 210 (2),
258272.
Bonacich, P. (1972). Factoring weighting approaches status scores clique identification. Journal Mathematical Sociology, 2 (1), 113120.
Bonacich, P. (1987). Power centrality: family measures. American Journal
Sociology, 92 (5), 11701182.
Borgatti, S. P., & Everett, M. (2006). graph-theoretic framework classifying centrality
measures. social networks. Social Networks, 28(4), 466484.
Brandes, U. (2001). faster algorithm betweenness centrality. Journal Mathematical
Sociology, 25 (2), 163177.
Brandes, U., & Erlebach, T. (2005). Network Analysis: Methodological Foundations. Lecture
notes computer science: Tutorial. Springer.
Castro, J., Gomez, D., & Tejada, J. (2009). Polynomial calculation shapley value
based sampling. Computers & Operations Research, 36 (5), 17261730.
Chalkiadakis, G., Elkind, E., & Wooldridge, M. (2011). Computational Aspects Cooperative Game Theory. Synthesis Lectures Artificial Intelligence Machine Learning.
Morgan & Claypool Publishers.
Conitzer, V., & Sandholm, T. (2004). Computing Shapley Values, manipulating value division schemes checking core membership multi-issue domains. AAAI 04:
Proceedings Nineteenth National Conference Artificial Intelligence, pp. 219
225.
Cormen, T. (2001). Introduction algorithms. MIT Press.
647

fiMichalak, Aadithya, Szczepaski, Ravindran, & Jennings

del Pozo, M., Manuel, C., Gonzlez-Arangena, E., & Owen, G. (2011). Centrality directed
social networks. game theoretic approach. Social Networks, 33 (3), 191200.
Deng, X., & Papadimitriou, C. (1994). complexity cooperative solution concepts.
Mathematics Operations Research, 19 (2), 257266.
Elkind, E., Goldberg, L., Goldberg, P., & Wooldridge, M. (2009). tractable expressive
class marginal contribution nets applications. Mathematical Logic Quarterly,
55 (4), 362376.
Eppstein, D., & Wang, J. (2001). Fast approximation centrality. SODA 01: Proceedings
Twelfth Annual ACM-SIAM Symposium Discrete Algorithms, pp. 228229.
Everett, M. G., & Borgatti, S. P. (1999). centrality groups classes.. Journal
Mathematical Sociology, 23 (3), 181201.
Fatima, S. S., Wooldridge, M., & Jennings, N. (2007). randomized method shapley
value voting game. AAMAS 07: Proceedings 11th International Joint
Conference Autonomous Agents Multi-Agent Systems, pp. 955962.
Fatima, S. S., Wooldridge, M., & Jennings, N. (2008). linear approximation method
shapley value. Artificial Intellilgence, 172 (14), 16731699.
Freeman, L. (1979). Centrality social networks: Conceptual clarification. Social Networks,
1 (3), 215239.
Gmez, D., Gonzlez-Arangena, E., Manuel, C., Owen, G., Del Pozo, M., & Tejada, J.
(2003). Centrality power social networks: game theoretic approach. Mathematical Social Sciences, 46 (1), 2754.
Goyal, A., Bonchi, F., & Lakshmanan, L. V. (2010). Learning influence probabilities
social networks. WSDM 10: Proceedings 3rd ACM international conference
Web search data mining, pp. 241250.
Granovetter, M. (1978). Threshold models collective behavior. American Journal
Sociology, 83 (6), 14201443.
Greco, G., Malizia, E., Palopoli, L., & Scarcello, F. (2009). complexity compact
coalitional games. IJCAI 09: Proceedings Twenty First International Joint
Conference Artifical Intelligence, pp. 147152.
Grofman, B., & Owen, G. (1982). game-theoretic approach measuring centrality
social networks. Social Networks, 4, 213224.
Ieong, S., & Shoham, Y. (2005). Marginal contribution nets: compact representation
scheme coalitional games. EC 05: Proceedings Sixth ACM Conference
Electronic Commerce, pp. 193202.
Irwin, M., & Shapley, L. S. (1960). Values Large Games, IV : Evaluating Electoral
College Montecarlo Techniques. CA : RAND Corporation, Santa Monica.
Jeong, H., Mason, S. P., Barabasi, A. L., & Oltvai, Z. N. (2001). Lethality centrality
protein networks. Nature, 411 (6833), 4142.
Kempe, D., Kleinberg, J., & Tardos, . (2003). Maximizing spread influence
social network. KDD 03: Proceedings Ninth ACM SIGKDD International
Conference Knowledge Discovery Data Mining, pp. 137146.
648

fiComputation Shapley Value Game-Theoretic Network Centrality

Kempe, D., Kleinberg, J., & Tardos, . (2005). Influential nodes diffusion model
social networks. Automata, Languages Programming, 3580, 99.
Koschtzki, D., Lehmann, K., Peeters, L., Richter, S., Tenfelde-Podehl, D., & Zlotowski, O.
(2005). Centrality indices. Network analysis, Vol. 3418 Lecture Notes Computer
Science, pp. 1661. Springer.
Lee, M.-J., Lee, J., Park, J. Y., Choi, R. H., & Chung, C.-W. (2012). Qube: quick
algorithm updating betweenness centrality. Mille, A., Gandon, F. L., Misselis,
J., Rabinovich, M., & Staab, S. (Eds.), WWW, pp. 351360. ACM.
Mann, I., & Shapley, L. (1962). Values large games, VI: Evaluating electoral college
exactly.. RAND Research Memorandum.
Matsui, T., & Matsui, Y. (2000). survey algorithms calculating power indices
weighted majority games. Journal Operations Research Society Japan, 43,
7186.
Michalak, T., Marciniak, D., Samotulski, M., Rahwan, T., McBurney, P., Wooldridge, M.,
& Jennings, N. (2010a). logic-based representation coalitional games externalities. AAMAS 10: Proceedings 9th International Joint Conference
Autonomous Agents Multi-Agent Systems, pp. 125132.
Michalak, T., Rahwan, T., Marciniak, D., Szamotulski, M., & Jennings, N. (2010b). Computational aspects extending Shapley Value coalitional games externalities.
ECAI 10: Proceedings Nineteenth European Conference Artificial Intelligence.
Myerson, R. (1977). Graphs cooperation games. Mathematics Operations Research,
2 (3), 225229.
Nagamochi, H., Zeng, D., Kabutoya, N., & Ibaraki, T. (1997). Complexity minimum
base game matroids. Mathematics Operations Research, 22 (1), 146164.
Newman, M. (2001). Scientific collaboration networks. II. Shortest paths, weighted networks,
centrality. Physical Review E, 64 (1), 016132(17).
Noh, J., & Rieger, H. (2004). Random walks complex networks. Physical Review Letters,
92 (11), 118701(14).
Osborne, M. J., & Rubinstein, A. (1994). Course Game Theory, Vol. 1 MIT Press
Books. MIT Press.
Reka, A., & Barabsi, A. (2002). Statistical mechanics complex networks. Reviews
Modern Physics, 74, 4797.
Sakurai, Y., Ueda, S., Iwasaki, A., Minato, S., & Yokoo, M. (2011). compact representation
scheme coalitional games based multi-terminal zero-suppressed binary decision
diagrams. PRIMA 11: Public Risk Management Association, pp. 418.
Schmeidler, D. (1969). nucleolus characteristic function game. SIAM Journal
Applied Mathematics, 11631170.
Schultes, D., & Sanders, P. (2007). Dynamic highway-node routing. SEA 07: Proceedings
6th Workshop Experimental Efficient Algorithms. LNCS, pp. 6679. Springer.
649

fiMichalak, Aadithya, Szczepaski, Ravindran, & Jennings

Shapley, L. S. (1953). value n-person games. Kuhn, H., & Tucker, A. (Eds.),
Contributions Theory Games, volume II, pp. 307317. Princeton University
Press.
Shapley, L. S., & Shubik, M. (1954). Method Evaluating Distribution Power
Committee System. American Political Science Review, 48 (3), 787792.
Stephenson, K., & Zelen, M. (1989). Rethinking centrality: Methods examples. Social
Networks, 11 (1), 137.
Suri, N., & Narahari, Y. (2008). Determining top-k nodes social networks using
shapley value. AAMAS 08: Proceedings 7th International Joint Conference
Autonomous Agents Multi-Agent Systems, pp. 15091512.
Suri, N., & Narahari, Y. (2010). Shapley Value based approach discover influential
nodes social networks. IEEE Transaction Automation Science Engineering,
99, 118.
Szczepaski, P. L., Michalak, T., & Rahwan, T. (2012). new approach betweenness
centrality based shapley value. AAMAS 12: Proceedings 11th International Joint Conference Autonomous Agents Multi-Agent Systems, pp.
239246.
Valente, T. (1996). Social network thresholds diffusion innovations. Social Networks,
18 (1), 6989.
Watts, D., & Strogatz, S. (1998). Collective dynamics small-world networks. Nature,
393 (6684), 440442.
Wooldridge, M., & Dunne, P. (2006). computational complexity coalitional resource games. Artificial Intelligence, 170 (10), 835871.
Yi, S.-S. (1997). Stable coalition structures externalities. Games Economic Behavior, 20 (2), 201237.
Young, H. P. (2006). Diffusion Innovations Social Networks. Blume, B. L., &
Durlauf, S. N. (Eds.), Economy evolving complex system, Vol. 3 Proceedings
volume Santa Fe Institute studies sciences complexity Santa Fe Institute
Studies Sciences Complexity, pp. 267282. Oxford University Press US.
Zolezzi, J. M., & Rudnick, H. (2002). Transmission cost allocation cooperative games
coalition formation. IEEE Transactions Power Systems, 17, 10081015.

650


