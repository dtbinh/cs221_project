journal artificial intelligence

submitted published

algebraic graphical model decision
uncertainties feasibilities utilities
cedric pralet

cedric pralet onera fr

onera toulouse france
av edouard belin toulouse

gerard verfaillie

gerard verfaillie onera fr

onera toulouse france
av edouard belin toulouse

thomas schiex

thomas schiex toulouse inra fr

inra toulouse france
chemin de borde rouge castanet tolosan

abstract
numerous formalisms dedicated designed last decades
model solve decision making formalisms constraint networks express simple decision others designed take account uncertainties unfeasible decisions utilities even single formalism several
variants often proposed model different types uncertainty probability possibility utility additive article introduce algebraic graphical model
encompasses large number formalisms first adapt previous structures
friedman chu halpern representing uncertainty utility expected utility
order deal generic forms sequential decision making structures
introduce composite graphical express information via variables linked
local functions thanks conditional independence graphical
finally define simple class queries represent scenarios terms
observabilities controllabilities natural decision tree semantics queries
completed equivalent operational semantics induces generic
proposed framework called plausibility feasibility utility pfu framework
provides better understanding links existing formalisms
covers yet unpublished frameworks possibilistic influence diagrams unifies
formalisms quantified boolean formulas influence diagrams backtrack
variable elimination generic first step towards unified

introduction
last decades numerous formalisms developed express solve decision
making agent must make decisions consisting
choosing actions ways fulfill action task scheduling resource
allocation choosing explanations observed phenomena diagnosis situation
assessment choices may depend parameters
uncertainty measures call plausibilities may describe beliefs state
environment
preconditions may satisfied decision feasible
c

ai access foundation rights reserved

fipralet verfaillie schiex

possible states environment decisions generally
value decision makers point view utilities expressed model costs
gains risks satisfaction degrees hard requirements generally preferences
time involved decision processes may sequential environment may
partially observable means may several decision steps
values variables may observed two steps chess
player plays turn observe move opponent playing

may adversarial collaborative decision makers controlling
set decisions hence multi agent aspect yield partial controllabilities
given plausibilities defined states environment feasibility constraints decisions utilities defined decisions states environment given possible multiple decision steps objective provide decision
maker optimal decision rules decision variables controls depending
environment agents concise class denoted
class sequential decision plausibilities feasibilities utilities
formalisms designed cope class sometimes
degenerated form covering subset features general
formalisms developed boolean satisfiability framework satisfiability sat quantified boolean formulas stochastic sat littman majercik pitassi
extended stochastic sat littman et al
formalisms developed close constraint satisfaction framework constraint
satisfaction csps mackworth valued semiring csps bistarelli
montanari rossi schiex verfaillie fargier covering classical fuzzy additive lexicographic probabilistic csps mixed csps probabilistic mixed csps
fargier lang schiex quantified csps bordeaux monfroy
stochastic csps walsh
formalisms developed represent uncertainty extended represent decision
uncertainty bayesian networks pearl markov random fields
chellappa jain known gibbs networks chain graphs frydenberg hybrid mixed networks dechter larkin dechter mateescu
influence diagrams howard matheson unconstrained jensen vomlelova asymmetric smith holtzman matheson nielsen jensen
sequential jensen nielsen shenoy influence diagrams valuation
networks shenoy asymmetric shenoy sequential demirer
shenoy valuation networks
formalisms developed classical framework strips fikes nilsson ghallab nau traverso conformant goldman boddy probabilistic kushmerick hanks
weld



fithe pfu framework

formalisms markov decision processes mdps probabilistic possibilistic
spohns epistemic beliefs spohn wilson giang shenoy
factored possibly partially observable puterman monahan
sabbadin boutilier dean hanks boutilier dearden goldszmidt

many formalisms present interesting similarities
include variables modeling state environment environment variables
decisions decision variables
use sets functions depending formalism considered model
plausibilities feasibilities utilities
use operators combine local information aggregate probabilities independence hypothesis aggregate gains costs project
global information compute marginal probability min max
compute optimal decision
even meaning variables functions combination projection operators
may specific formalism seen graphical sense
exploit implicitly explicitly hypergraph local functions variables
article shows possible build generic algebraic framework subsuming many
formalisms reducing decision making sequence called variable
eliminations aggregation local functions
generic framework able provide
better understanding existing formalisms generic framework obvious
theoretical pedagogical interest since bring light similarities differences formalisms covered help people different communities
communicate common basis
increased expressive power generic framework may able capture
cannot directly modeled existing formalism increased expressiveness reachable capturing essential algebraic properties existing
frameworks
generic ultimately besides generic framework possible
define generic capable solving defined framework
objective fits growing effort identify common algorithmic approaches
developed solving different ai may facilitate crossfertilization allowing subsumed framework reuse algorithmic ideas defined
another one
article outline
introduction notations notions article starts showing
catalog existing formalisms decision making generic algebraic framework


fipralet verfaillie schiex

informally identified generic framework called plausibility feasibility utility
pfu framework formally introduced three steps algebraic structures capturing plausibilities feasibilities utilities introduced section algebraic structures exploited build generic form graphical model section
graphical captured notion queries section
framework analyzed section generic defined section
table recapitulating main notations used available appendix proofs
propositions theorems appear appendix b short version framework
described article already published pralet verfaillie schiex c

background notations definitions
essential objects used article variables domains local functions called
scoped functions
definition domain values variable x denoted dom x every
dom x x denotes assignment value x extension set
variables denote
q dom cartesian product domains variables
e dom xs dom x element dom called assignment
assignments disjoint subsets called concatenation
assignment variables assigned
variables assigned assignment set variables
projection onto assignment variables assigned
value
definition scoped function scoped function pair set
variables function mapping elements dom given set e following
often consider implicit denote scoped function alone
set variables called scope denoted sc assignment
superset sc projection onto sc define
example scoped function mapping assignments sc elements
boolean lattice b f analogous constraint describing subset dom sc
authorized tuples constraint networks
general notion graphical model defined
definition graphical model graphical model pair v v x xn
finite set variables finite set scoped functions whose
scopes included v
terminology graphical used simply set scoped functions
represented hypergraph contains one hyperedge per function scope
see hypergraph captures form independence see section induces
parameters time space complexity see section
definition graphical generalizes usual one used statistics defining graphical
assignment x xk actually set variable value pairs x xk ak
assume variables implicit tuple values ak dom



fithe pfu framework

model directed graph nodes represent random variables
structure captures probabilistic independence relations
local scoped functions graphical model give space tractable definition
global function defined aggregation example bayesian network pearl
global probability distribution px z x z may defined product
operator set scoped functions px py x pz local scoped functions
facilitate projection information expressed graphical model onto
smaller scope example order compute
p marginal
p probability distribution py z
previous network computep x px z x px py x pz avoid
taking pz account operator
used project information onto smaller
scope eliminating variable x operators used combine scoped functions called
combination operators operators used project information onto smaller scopes
called elimination operators
definition combination let scoped functions e e respectively let
e e e binary operator combination denoted
scoped function e scope sc sc defined
assignments sc sc called combination operator

rest article combination operators denoted
definition elimination let scoped function e let op e
associative commutative identity element elimination variable
x op scoped function whose scope sc x whose value
assignment scope opx opadom x x context op called
elimination operator x elimination set variables x xk
function scope sc defined ops opa dom
p
hence computing x px py x pz x scoped functions aggregated
combination operator information projected eliminating x
elimination operator article denotes elimination operators
cases elimination set variables operator op scoped
function performed subset dom containing assignments
satisfy property denoted boolean scoped function f must compute
every dom sc value opa dom f simplicity
homogeneity order use elimination dom equivalently
truncate elements dom satisfy f mapped special
value denoted defined identity op
definition truncation operator unfeasible value special element
supposed outside domain e every elimination operator op e e e
explicitly extend every elimination operator op e e e e taking
convention op e op e e e e
let f boolean lattice boolean b e e define b e
equal e b otherwise called truncation operator



fipralet verfaillie schiex

given boolean scoped function f make possible write quantities
opa dom f elimination ops f
order solve decision one usually wants compute functions mapping
available information decision notion decision rules used formalize

definition decision rule policy decision rule variable x given set variables
function dom dom x mapping assignment value dom x
extension decision rule set variables given set variables function
dom dom set decision rules called policy
definition optimal decision rule consider totally ordered set e scoped function
dom sc e set variables sc decision rule dom sc
dom said optimal iff dom sc dom
resp decision rule exists
dom sc finite
words optimal decision rules examples decision rules given argmin
argmax article consider optimality decision rules given
min max totally ordered set
definition directed acyclic graph dag directed graph g dag contains
directed cycle variables used vertices pag x denotes set parents
variable x g
last n denote set integers n

examples graphical generic framework
present different ai formalisms expressing solving decision
simple case single decision maximizes utility sought introduction
plausibilities uncertainties unfeasible actions feasibilities sequential decision
several decision steps observations decision steps appears
sophisticated frameworks goal section formalisms
viewed graphical specific elimination combination operators
used
examples graphical
examples used cover ai formalisms briefly described wider
accurate review existing graphical could provided pralet
constraint networks
constraint networks cns mackworth often called constraint satisfaction
csps graphical v scoped functions constraints mapping
assignments onto f usual query cn determine existence



fithe pfu framework

assignment v satisfies constraints setting f decision
answered computing


max

v



quantity equals true optimal decision rule v defines solution
query answered performing eliminations max combination scoped
functions replacing hard constraints soft constraints boolean scoped
functions replaced cost functions replacing abstract operator equal
min leads queries valued totally ordered semiring cn bistarelli
et al
bayesian networks
bayesian networks bns pearl model plausibilities expressed
probabilities bn graphical model v set local conditional
probability distributions px pag x x v g dag vertices v
bn represents joint probability distribution p
qv variables combination
local conditional probability distributions pv xv px pag x combination
local constraints cn defines global constraint variables one possible query
bn compute marginal probability distribution variable v

x
x

py
pv
px pag x

v

v

xv

equation corresponds variable eliminations product scoped functions
queries bns map maximum posteriori hypothesis eliminations
max performed
quantified boolean formulas quantified cns
quantified boolean formulas qbfs quantified cns bordeaux monfroy
model sequential decision let x x x boolean variables qbf
called prenex conjunctive normal form looks f
x x x x x x x max min max x x x x
x

x

x



thus query value x values x exists value
x clauses x x x x satisfied answered
equation sequence eliminations max x min x max x
conjunction clauses quantified cn clauses replaced constraints
stochastic cns
stochastic cn walsh model sequential decision probabilities
plausibilities hard requirements utilities provided decisions influence
environment called contingency assumption stochastic cn two types


fipralet verfaillie schiex

variables defined decision variables di environment stochastic variables sj
global probability distribution environment variables expressed combination
local probability distributions environment variables mutually independent
local probability distributions simply unary probability distributions psj finally
stochastic cn defines set constraints c cm mapping tuples values onto
instead f allows constraints multiplied probabilities
consider situation first two decisions made environment
variable observed decisions made environment variable
remains unobserved possible query stochastic cn compute decision rules
maximize expected constraint satisfaction equation
q

x
x
c

ps ps
max
max









answer query defined equation determined sequence eliminations
max decision variables environment ones combination scoped
functions probabilities combined constraints combined since
expressed onto instead f probabilities combined constraints

influence diagrams
influence diagrams howard matheson model sequential decision
probabilities plausibilities together gains costs utilities
seen extension bns including notions decision utility precisely
influence diagram composite graphical model defined three sets variables
organized dag g set chance variables conditional
probability distribution ps pag given parents g specified set
decision variables pag set variables observed decision
made set u um utility variables associated
utility function ui upag ui scope pag ui utility variables p
must leaves
dag utility functions define global additive utility ug ui
usual associated influence diagram compute decision rules
maximizing global expected utility modify example used stochastic cns
replacing ps ps ps ps constraints c cm additive
utility functions u um optimal policy obtained computing optimal
decision rules equation

x
x
p
max
max
ps ps
u












answer query defined equation computed sequence
eliminations alternating max sum eliminations combination scoped functions plausibilities combined utilities combined plausibilities utilities
combined



fithe pfu framework

valuation networks
valuation networks shenoy model sequential decision plausibilities feasibilities utilities plausibilities combined utilities
additive valuation network composed several sets nodes valuations
set decision nodes set chance nodes set f indicator valuations
specify unfeasible assignments decision chance variables set p probability valuations multiplicative factors joint probability distribution
chance variables set
p u utility valuations representing additive factors
joint utility function ug
ui u ui arcs nodes used define
order decisions made chance variables observed order
shown optimal decision rules
defined equation





x
x

x

max
max
pi
ui







f



pi p

ui u

local feasibility constraints combined combined scoped functions truncation operator cf definition
finite horizon markov decision processes
finite horizon markov decision processes mdps puterman monahan sabbadin boutilier et al model sequential decision plausibilities utilities horizon time steps every time step variable st
represents state environment variable dt represents decision made
observing st factored mdps several state variables may used time step
probabilistic finite horizon mdp plausibilities environment described
local probability distributions pst st dt state st given st dt utilities
states decisions local additive rewards rst dt boolean functions fdt st
express whether decision dt feasible state st optimal policy initial state
computed following equation bit unusual defining optimal
policies mdp equivalent usual form




max u max u max






st

dt




fdt st



p pst st dt


pu

u rst dt






plausibilities combined p utilities combined u plausibilities
utilities combined pu decision variables eliminated max
environment variables eliminated u truncation operator enables
elimination operators ignore unfeasible decisions
pessimistic possibilistic finite horizon mdp sabbadin probability distributions pst st dt replaced possibility distributions st st dt rewards rst dt
replaced preferences st dt operators used u p u min
pu p u max p u



fipralet verfaillie schiex

towards generic framework
previous section shows usual queries existing formalisms reduced
sequence variable eliminations combination scoped functions
observation led definition algebraic mdps perny spanjaard weng
definition valuation algebras shenoy kolhas generic
algebraic framework eliminations performed combination scoped
functions however valuation algebras use one combination operator whereas several
combination operators may needed manipulate different types scoped functions
previously shown moreover valuation algebras deal one type elimination
whereas several elimination operators may required handling different types
variables valuation networks shenoy plausibilities necessarily represented
probabilities eliminations min cannot performed essentially powerful
framework needed
order simple yet general enough cover queries defined equations
generic form consider





sov



f



p
pi p

pi

pu

u
ui u

ui





used combine local feasibilities p used combine plausibilities u
used combine utilities pu used combine plausibilities utilities
truncation operator used ignore unfeasible decisions without deal
elimination operations restricted domains f p u possibly empty sets
local feasibility plausibility utility functions respectively sov operatorvariable sequence indicating eliminate variables sov involves min max
eliminate decision variables operator u eliminate environment variables
equation still informal define formally provide clear
semantics need define three key elements
must capture essential properties combination operators p u pu
used respectively combine plausibilities utilities plausibilities utilities
must characterize elimination operators u p used project information coming utilities plausibilities operators define
algebraic structure pfu plausibility feasibility utility framework
algebraic structure must define generic form graphical model involving set variables sets scoped functions expressing plausibilities feasibilities
utilities sets p f u together define pfu network factored
form offered graphical must analyzed order understand
applied concisely represent global functions
notion conditional independence
equation plausibilities combined operator p utilities combined
operator u denote composite graphical include
different types scoped functions plausibilities feasibilities utilities beyond equation
allows heterogeneous information among type scoped functions example order
manipulate probabilities possibilities use p defined probability possibility pairs
p p p p p min



fithe pfu framework

finally must define queries pfu networks capturing interesting decision equation shows queries defined sequence sov operatorvariable pairs applied combination scoped functions network
fact answer queries represents meaningful values decision theory point view proved relating
summary
informally shown several queries formalisms dealing plausibilities feasibilities utilities reduce sequences variable eliminations
applied combinations scoped functions operators intuitively
covered equation
three key elements algebraic structure pfu network sequence variable eliminations needed formally define give sense equation introduced
sections

pfu algebraic structures
first element pfu framework algebraic structure specifying information provided plausibilities feasibilities utilities combined synthesized
algebraic structure obtained adapting previous structures defined friedman
chu halpern friedman halpern halpern chu halpern
representing uncertainties expected utilities
definitions
definition e commutative monoid iff e set binary operator
e associative x z x z commutative x x
identity e e x e e x x
definition e commutative semiring iff
e commutative monoid identity denoted e
e commutative monoid identity denoted e
e annihilator x e e
distributes x z x x z
definition let ea commutative semiring eb b ab semimodule ea iff
eb b commutative monoid identity denoted eb
ab ea eb eb satisfies
ab distributes b ab b b b ab b b ab b
ab distributes ab b ab b b ab b


fipralet verfaillie schiex

linearity property ab ab b ab b
b eb ea ab b eb ea ab b b
definition let e set partial order operator e monotonic
iff x x z z x z e
plausibility structure
forms plausibilities exist halpern usual one probabilities
shown previously example equation probabilities aggregated p
combination operator projected p elimination operator
plausibilities expressed possibility degrees possibilities
eliminated p max usually combined p min interesting case
appears possibility degrees booleans describing states environment
completely possible impossible plausibilities combined p
eliminated p
another example spohns epistemic beliefs known rankings kappa rankings spohn wilson giang shenoy case plausibilities
elements n called surprise degrees associated non surprising situations
associated completely surprising impossible situations generally
surprise degree k viewed probability k infinitesimal surprise degrees
combined p eliminated p min
capture plausibility modeling frameworks start friedmanhalperns work plausibility measures friedman halpern halpern weydert darwiche ginsberg developed similar approaches
friedman halperns structure assume want express plausibilities assignments set variables subset dom called event friedman
halpern define plausibilities elements set ep called plausibility domain
ep equipped partial order p two special elements p p satisfying
p p p p p p ep function p l dom ep plausibility measure
iff satisfies p l p p l dom p w w p l w p p l w
means p associated impossibility p associated highest plausibility
degree plausibility degree set least high plausibility degree
subsets
among plausibility measures focus called algebraic conditional plausibility
measures use abstract functions p p analogous
probabilities measures satisfy properties decomposability disjoint
events w w p l w w p l w p p l w associative commutative
follows p associative commutative representations disjoint events e
p b p c p b p c p b b p exist pairwise disjoint sets
w w w p l w p l w b p l w c details available
friedman halperns references friedman halpern halpern
restriction friedman halperns structure important aspect friedmanhalperns work algebraic properties p p hold domains



fithe pfu framework

definition p p although sufficient express manipulate plausibilities algorithmically restrictive indeed consider bayesian network involving two
px constant
boolean variables x x define px x px px x assume
p
px x x must
factor order evaluate px x quantity x p
computed simpler factor compute x px x x
px x x x px x x x f answer
performing requires applying addition outside range usual probabilities p b defined b since two probabilities whose sum exceeds
cannot associated disjoint events
take issues account adapt friedman halperns ep p p p
p become closed ep friedman halperns axioms hold closed
structure closure performed obtain plausibility structure
definition plausibility structure tuple ep p p
ep p p commutative semiring identities p p denoted p
p respectively
ep equipped partial order p p min ep p
p monotonic respect p
elements ep called plausibility degrees
note p necessarily maximal element ep probabilities friedmanhalperns structure would b b b
undefined otherwise order get closed operators take ep p p r
therefore p maximal element ep cases friedman halperns
structure already closed case rankings ep p p n
min possibilities ep p p typically max min
although choices max possible
given two plausibility structures ep p p ep p p define e ep ep
p p p p p p p p p p p p p p p p p p p p
e plausibility structure allows us deal different kinds plausibilities probabilities possibilities families probability distributions
plausibility measures plausibility distributions
let us consider plausibility measure friedman halpern halpern p l
dom ep set variables assume p l w w p l w p p l w
disjoint sets w w dom case friedman halperns algebraic
plausibility measures assumption entails p l w p aw p l w
dom holds even w since p identity p hence defining
p l complete assignments suffices describe p l moreover
case three conditions defining plausibility measures p l dom p p l p
w w p l w p p l w equivalent p adom p l p
monotonicity p third condition means deal
plausibility distributions instead plausibility measures



fipralet verfaillie schiex

definition plausibility distribution function ps dom ep
p adom ps p
normalization condition imposed plausibility distributions simply generalization convention probabilities sum captures fact
disjunction assignments p plausibility degree
proposition plausibility distribution ps extended give plausibility distribution ps every defined ps p ss ps
feasibility structure
feasibilities define whether decision possible therefore expressed
booleans f set equipped total order bool satisfying f bool
boolean scoped functions expressing feasibilities combined operator
since assignment decision variables feasible iff feasibility functions agree
assignment feasible
given scoped function expressing feasibilities compute whether assignment set variables feasible according computing sc since
feasible according iff one extensions sc feasible means
projection feasibility functions onto smaller scope uses elimination operator
feasibilities expressed feasibility structure sf f
sf commutative semiring plausibility structure therefore
plausibility notions properties apply feasibility may therefore speak feasibility distributions normalization condition fs imposed feasibility
distribution fs means least one decision must feasible
utility structure
utilities express preferences take forms typically utilities combined
utilities model priorities combined min utilities
represent hard requirements goals achieved properties satisfied
modeled booleans combined generally utility degrees defined
elements set eu equipped partial order u smaller utility degrees associated
less preferred events utility degrees combined operator u
assumed associative commutative guarantees combined utilities
depend way combination performed assume u admits
identity u eu representing indifference ensures existence default utility
degree utility scoped functions properties captured
following notion utility structure
definition eu u utility structure iff commutative monoid eu
equipped partial order u elements eu called utility degrees
eu may minimum element u representing unacceptable events
annihilator u combination event unacceptable one must
unacceptable u usually monotonic properties necessary
establish forthcoming


fithe pfu framework

distinction plausibilities feasibilities utilities important
justified algebraic arguments since p u may different operators
example p u usual probabilities additive utilities must
distinguish plausibilities utilities necessary distinguish feasibilities
utilities plausibilities indeed imagine simple card game involving two players p
p three cards jack j queen q king k p must first play one
card x j q k p must play card j q k last p must play card
z j q k rule forbids play card consecutively feasibility functions fxy
x fyz z goal p two cards x z value strictly
better p card setting j q k requirement corresponds two utility
functions uxy x uyz z order compute optimal decisions presence
unfeasibilities must restrict optimizations eliminations decision variables max
min feasible values instead maxx miny maxz uxy uyz must compute



max
min
max
uxy b uyz b c

adom x

bdom fxy b

cdom z fyz b c

setting f logically equivalent


max min fxy max fyz uxy uyz
x



z

latter quantity feasibility functions concerning p play taken account
logical connective p unfeasible decisions ignored set
scenarios considered feasibility functions concerning p last move z taken account p consider scenarios achieves forbidden move
therefore feasibility functions cannot handled simply combination
operator utility functions need dissociate unfeasible decision
makers unfeasibility absolute unacceptable required one decision
maker utility relative e decision maker wants decision maker

general level example uxy uyz soft requirements
know exactly advance controls variable logical connectives
cannot used anymore order ignore unfeasible values decision variables elimination use truncation operator introduced definition order eliminate
variable x scoped function ignoring unfeasibilities indicated feasibility
function simply perform elimination x instead maps
unfeasibilities value ignored elimination operators see definition
example uxy uyz additive gains costs would compute


max min fxy max fyz uxy uyz
x



z

combining plausibilities utilities via expected utility
define expected utilities plausibilities utilities must combined consider
situation utility ui obtained plausibility pi n



fipralet verfaillie schiex

p p p pn p l p u pn un classically called lottery von neumann morgenstern speak expected utility implicitly speak
expected utility eu l lottery l
standard way combine plausibilities utilities use
p probabilistic expected utility von neumann morgenstern defining eu l n pi ui
aggregates plausibilities utilities combination operator pu projects
aggregated information elimination operator u however alternative
definitions exist
plausibilities possibilities eu l mini n max pi ui
possibilistic pessimistic expected utility dubois prade e u min
pu p u max p u eu l maxi n min pi ui possibilistic
optimistic expected utility dubois prade e u max pu min
plausibilities rankings utilities positive integers giang shenoy
eu l mini n pi ui e u min pu
generalize definitions eu l start chu halperns work generalized expected utility chu halpern b
chu halperns structure generalized expected utility defined expectation domain tuple ep eu eu u pu ep set plausibility degrees
eu set utility degrees pu ep eu eu combines plausibilities
utilities satisfies p pu u u u eu eu eu commutative associative
operator aggregate information combined pu
decision additive e plausibility degrees p p associated disjoint events p p p pu u p pu u u p pu u generic definition
expected utility lottery
eu l u pi pu ui
n

classical expectation domains satisfy additional properties u monotonic p pu u u u identity u
restriction chu halperns structure sequential decision making
use pu ep eu eu u eu eu eu compute expected utilities
first decision step need introduce operators pu ep eu eu
u eu eu eu compute expected utilities second decision step end
decision steps must define operators pu operators u order
avoid definition algebraic structure would depend number decision
steps take eu eu work one operator pu ep eu eu one
operator u eu eu eu
plausibilities sake future restrict chu halperns
expectation domains ep eu eu u pu u pu become closed generalize
properties initial u pu however closure sufficient deal
sequential decision making chu halperns expected utility designed one step
decision processes introduce three additional axioms u pu


fithe pfu framework

first axiom similar standard axiom lotteries von neumann morgenstern defining compound lotteries states lottery l involves
utility u plausibility p one utilities lottery l expected
utility l plausibility p utility u obtained
plausibility p p p gives axiom p pu p pu u p p p pu u
require pu distributes u justify point assume
lottery l p u p u obtained plausibility p two different versions
contribution l global utility degree derived first p pu
p pu u u p pu u second uses compound lotteries p p
p pu u u p p p pu u want two quantities equal
p p p u u shown equivalent simpler property p pu u u
u p pu u u p pu u e pu distributes u
finally assume pu right monotonic e u u u p pu u u
p pu u means agent prefers strictly event ev
another event ev events plausibility degree p
contribution ev global expected utility degree must lesser
contribution ev
axioms define notion expected utility structure
definition let ep p p plausibility structure let eu u utility
structure ep eu u pu expected utility structure iff
eu u pu semimodule ep p p cf definition
u monotonic u pu right monotonic u u u u ppu u u
p pu u
many structures considered literature instances expected utility structures
shown proposition presented remaining article hold
usual expected utility structures generally structures satisfying
axioms specified definitions
proposition structures table expected utility structures
possible define complex expected utility structures existing ones
example two expected utility structures ep eu u pu ep eu u pu
possible build compound expected utility structure ep ep eu eu u pu
used deal simultaneously probabilistic possibilistic expected utility
generally deal tuples expected utilities
business dinner example flesh definitions consider following
toy example referred sequel correspond concrete
real life used simplicity peter invites john mary divorced
couple business dinner order convince invest company peter
knows john present end dinner invest k holds
mary k peter knows john mary come together one


fipralet verfaillie schiex











ep
r
r


n
f
f
f
f

p





bool
bool
bool
bool

p


max
max
min





p


min
min






p p





f
f
f
f

eu
r
r


n
f
f
f
f

u





bool
bool
bool
bool

u


min
min






u


max
min
min





pu
u u




min

max p u



f



f f

f

table expected utility structures probabilistic expected utility additive
utilities allows probabilistic expected utility cost gain computed probabilistic expected utility multiplicative utilities called
probabilistic expected satisfaction allows probability satisfaction
constraints computed possibilistic optimistic expected utility possibilistic pessimistic expected utility qualitative utility rankings
positive utilities boolean optimistic expected utility conjunctive utilities allows one know whether exists possible world
goals set goals g satisfied bool denotes order booleans
f bool boolean pessimistic expected utility conjunctive utilities
allows one know whether possible worlds goals set goals g
satisfied boolean optimistic expected utility disjunctive utilities allows
one know whether exists possible world least one goal
set goals g satisfied boolean pessimistic expected utility disjunctive
utilities allows one know whether possible worlds least one goal
set goals g satisfied

baby sit child least one come case john
comes mary occurs probability menu peter order
fish meat main course white red wine however restaurant
serve fish red wine together john white wine mary
meat menu suit leave dinner john comes peter
want leave dinner best friend
example dinner uses expected utility structure representing probabilistic
expected additive utility row table plausibility structure r u
pu utilities additive gains eu u r convention
u
relation existing structures
compare algebraic structures defined existing ones friedman halpern
halpern chu halpern observe



fithe pfu framework

structures defined less general friedman chu halperns since additional axioms introduced example plausibility structures able
model belief functions shafer decomposable whereas
possible friedman halperns plausibility measures however authors
aware existing schemes decision theory belief functions moreover one step decision processes chu halperns generalized expected utility
general since assumes pu ep eu eu whereas consider
pu ep eu eu
conversely structures defined deal multi step decision processes
whereas chu halperns generalized expected utility designed one shot decision
processes beyond axioms use closed operators essentially motivated operational reasons use less expressive structure
sake future cf section
set ep plausibility degrees set eu utility degrees defined plausibilities utilities must cardinal purely ordinal approaches cp nets boutilier
brafman domshlak hoos poole bayesian networks exploit notion conditional independence express network purely ordinal preference relations
covered
pu takes values eu implicitly assumed plausibilities utilities
commensurable works fargier perny describing purely ordinal
qualitative preferences plausibilities necessarily commensurable
captured works giang shenoy satisfy required
associativity commutativity identity annihilator distributivity properties
covered implicitly use pu ep eu eu eu eu even
expected utility eu l p pu u u p pu u lottery l p u p u stays
eu
furthermore axioms entail distributional plausibilities covered
plausibility set variable assignments determined plausibilities covered
complete assignment dempster shafer belief functions shafer choquet expected
utility schmeidler encompassed finally one partial order u eu
defined assumed decision makers share preferences utilities
summary
section introduced expected utility structures first element
pfu framework specify plausibilities combined projected
p p respectively utilities combined u plausibilities
utilities aggregated define generalized expected utility u pu
structure chosen inspired friedman chu halperns plausibility measures generalized expected utility main differences lie addition axioms deal
multi step decision processes use extended domains closed operators
motivated operational reasons



fipralet verfaillie schiex

plausibility feasibility utility networks
second element pfu framework network scoped functions pi
ui cf equation set variables v network defines compact structured representation state environment decisions global
plausibilities feasibilities utilities hold
rest article plausibility function denotes scoped function ep
set plausibility degrees feasibility function scoped function f set
feasibility degrees utility function scoped function eu set utility
degrees
variables
structured representations decisions represented decision variables
directly controlled agent state environment represented environment variables directly controlled agent notion agent used
restricted cooperative adversarial decision makers uncertainty
way decision maker behaves decisions controls modeled
environment variables use vd denote set decision variables denote
set environment variables vd form partition v
example dinner modeled six variables bpj bpm value
f representing johns marys presence beginning epj epm value
f representing presence end mc value f ish meat representing main
course choice w value white red representing wine choice thus
vd mc w bpj bpm epj epm
decomposing plausibilities feasibilities local functions
combined local functions represent global one raises considerations
local functions obtained global one conversely
local functions directly used implicit assumptions global function
made questions boil notion conditional
independence following definitions propositions ep p p corresponds
plausibility structure
preliminaries generalization bayesian networks
assume want express global plausibility distribution ps cf definition
combination local plausibility functions pi work bayesian networks pearl
shown factorization joint distribution essentially related notion conditional independence introduce conditional independence first define
conditional plausibility distributions
definition plausibility distribution ps said conditionable iff
exists set functions denoted ps one function pair disjoint subsets
disjoint subsets



fithe pfu framework

assignments ps p ps plausibility distribution
b ps ps
c p ps ps
ps ps p ps
e ps ps p ps p ps ps ps p ps
ps called conditional plausibility distribution given
condition means conditional plausibility distributions must normalized
condition b means information given empty set variables
change plausibilities states environment condition c means
conditional plausibility distributions consistent marginalization point view
condition analog called chain rule probabilities condition e
kind weak division axiom
proposition gives simple conditions plausibility structure satisfied usual
frameworks suffice plausibility distributions conditionable
definition plausibility structure ep p p called conditionable plausibility
structure iff satisfies axioms
p p p p p max p ep p p p p exists p p
p p p exists unique p ep p p p p
p p p exists unique p ep p p p p
proposition ep p p conditionable plausibility structure plausibility distributions conditionable suffices define ps ps max p
ep ps p p ps dom satisfying ps p
systematic definition conditional plausibility distributions given proposition
fits usual definitions conditional distributions probabilities
ps ps ps rankings ps ps ps
possibility degrees combined min ps ps ps
ps otherwise following every conditioning statement ps conditionable plausibility structures refer canonical notion conditioning given
proposition conditional independence defined
avoid specifying properties ps hold assignments satisfying ps
p use expressions ps denote dom ps p
ps
compared friedman halperns conditional plausibility measures friedman halpern
halpern c analog axiom alg analog axiom alg e analog
axiom alg axiom alg corresponds distributivity p p



fipralet verfaillie schiex

definition let ep p p conditionable plausibility structure let ps
plausibility distribution disjoint subsets said
conditionally independent given denoted iff ps ps p
ps
means conditionally independent given iff
split one part depending another part depending
definition satisfies usual properties conditional independence proposition
shows
proposition satisfies semigraphoid axioms
symmetry
decomposition
weak union
contraction
proposition makes possible use bayesian network techniques express information compact way bayesian networks dag variables used represent
conditional independences variables pearl cases image
processing statistical physics natural express conditional independences
sets variables probabilities used situations modeled chain graphs frydenberg chain graph dag defined dag
variables dag sets variables called components conditional probability distributions px pag x variables replaced conditional probability distributions pc pag c
components pc pag c expressed factored form c c ckc markov
random fields chellappa jain correspond case q
unique
component equal v factored form pv looks z jj ehj
gibbs distribution
formally introduce dags sets variables called dags components
use factor plausibility distributions
definition dag g said dag components set variables iff
vertices g form partition c g denotes set components g
c c g pag c denotes set variables included parents c g ndg c
denotes set variables included non descendant components c g
definition let ep p p conditionable plausibility structure let ps
plausibility distribution let g dag components g said
compatible ps iff c ndg c pag c pag c c c g c conditionally
independent non descendants given parents
definition differs halperns conditionally independent ci given iff
ps ps ps ps halpern called definition adopt noninteractivity ni showed ni weaker ci implies ni satisfied often
may lead factorizations halpern gave simple axiom axiom alg ci
ni equivalent though axiom holds many usual frameworks hold possibility
degrees combined min case covered pfu algebraic structure



fithe pfu framework

theorem conditional independence factorization let ep p p conditionable plausibility structure let g dag components
g compatible plausibility distribution ps ps p cc g pc pag c
b c c g function c pag c c pag c plausibility
distribution c assignments pag c p cc g c pag c
plausibility distribution g compatible
theorem links conditional independence factorization theorem generalization usual bayesian networks pearl says dag
variables
compatible probability distribution ps ps factored
q
ps xs px pag x theorem b generalization standard bayesian
networks pearl says given dag g variables
q conditional
probabilities px pag x defined variable x xs px pag x defines
probability distribution g compatible generalizations
since hold arbitrary plausibility distributions probability distributions
similar spirit provided halpern gives conditions
plausibility measure represented bayesian network
theorem entails order factor global plausibility distribution ps
suffices define dag components compatible e express conditional
independences define dag following systematic procedure used
initial dag components empty dag g c g c ck
partition
let sk c ck choose subset ck set sk variables already
considered
add ck component g minimal subset pak sk ck sk
pak pak add edges directed components containing least one variable
pak ck pag ck c c ck cpak c
resulting dag components guaranteed compatible ps implies theorem local functions pi representing ps simply defined
functions set pc pag c c c g practice reasonable notion
causes effects networks smaller somehow easier build
obtained following two heuristics order choose ck step
procedure
r consider causes effects dinner suggests putting epj
ck causes bpj w sk
r gather component variables correlated even variables sk
assigned bpj bpm correlated r apply indeed cannot
say bpj causal influence bpm bpm causal influence bpj
since mary john chooses first baby sits specified
even assume bpj bpm correlated via unmodeled common cause



fipralet verfaillie schiex

coin toss determines baby sitter hence bpj bpm put
component c bpj bpm
say r r build dag respecting causality must seen
possible mechanisms help identifying conditional independences notions
causes effects
previous extending bayesian networks plausibility distributions
apply feasibilities indeed feasibility structure sf f particular
case conditionable plausibility structure since satisfies axioms definition
may therefore speak conditional feasibility distribution set decision
variables construction dag compatible feasibility distribution fs leads
factorization fs cc g fc pag c
taking differenty types variables account
material defined previous subsection enables us factor one plausibility distribution pve defined set environment variables one feasibility distribution
fvd defined set vd decision variables however dealing one plausibility
distribution one feasibility distribution vd sufficient
indeed plausibilities decision variables influence environment example
health state patient depends treatment chosen doctor rather
expressing one plausibility distribution want express family plausibility distributions one assignment vd make clear define
controlled plausibility distributions
definition plausibility distribution controlled vd controlled
plausibility distribution denoted pve vd function dom vd ep
assignments ad vd pve vd ad plausibility distribution
feasibilities goes way around values environment variables
constrain possible decisions example unmanned aerial vehicle flying
cannot take thus want express family feasibility distributions vd
one assignment words want express controlled feasibility
distribution fvd
order directly reuse theorem controlled distributions introduce notion
completion controlled distribution allows us extend distribution
full set variables v assigning plausibility resp feasibility degree
every assignment vd resp work one plausibility resp feasibility
distribution
components bpj bpm could broken assuming example bpm causally influences
bpj e mary chooses baby sits first prefer keep component
bpj bpm general breaking components increase scopes functions involved
example assume want model plausibilities variables representing colors pixels
n n image color pixel probabilistically depends colors neighbors
component markov random fields chellappa jain
local functions obtained scopes size whereas component breaking mechanism
size largest scope linear n



fithe pfu framework

proposition let ep p p conditionable plausibility structure
n n exists unique p p n p p
definition let ep p p conditionable plausibility structure let pve vd
controlled plausibility distribution completion pve vd function denoted
pve vd defined pve vd pve vd p p p unique element ep
p dom vd p p cardinality set denoted
words pve vd defined pve vd assigning plausibility degree
p assignments vd case probability theory corresponds saying
assignments vd equiprobable definition completion controlled
plausibility distribution could made flexible instead defining uniform plausibility distribution vd could define plausibility distribution assignment
vd p plausibility degree arbitrarily choose uniform distribution
goal introduce prior plausibilities decision variables sake
factorization
proposition let pve vd completion controlled plausibility distribution pve vd
pve vd plausibility distribution vd pve vd pve vd
use pve vd denote pve vd equivalent similarly
possible complete controlled feasibility distribution fvd
first factorization
proposition entailed theorem shows obtain first factorization
pve vd fvd
definition dag g typed dag components vd iff vertices
g form partition vd element partition subset
vd vertex g called component set components contained
environment components denoted ce g set components contained vd
decision components denoted cd g
proposition let g typed dag components vd let gp partial
graph g induced arcs g incident environment components let gf
partial graph g induced arcs g incident decision components gp
compatible completion pve vd cf definition gf compatible
completion fvd
pve vd

p pc pag c
cce g

fvd


ccd g

fc pag c

allows us specify local pi functions suffices express pc pag c
fc pag c express pve vd fvd compact way fact could
defined two dags one factorization pve vd factorization
fvd two dags actually merged soon make
undemanding assumption impossible given x vd x
influences constrains possible decision values x assumption ensures
union two dags create cycles use one dag simplicity


fipralet verfaillie schiex

example consider dinner illustrate first factorization step one way
obtain g use causality reasoning described theorem start
empty dag epj epm effects bpj bpm w mc
considered first component c bpj chosen variable add c
cannot say bpj necessarily effect another variable previously explained
bpj cause bpm effect bpm bpj may correlated bpm via
unmodeled cause get c bpj bpm first component obviously c
parents dag first added component
epj epm effects w mc consider epj epm
second component c since w necessarily effect mc add w c
dinner specifies ordering fish red wine simultaneously feasible
know whether wine chosen main course e w
cause effect mc take c mc w menu choice
independent present beginning c parent temporary dag
epj direct effect bpj w john leaves dinner white wine
chosen add epj c moreover epj correlated epm c c
bpj bpm mc w assigned therefore take c epj given epj depends
bpj w c gets bpj bpm mc w parents finally c epm epm
depends bpm mc mary leaves meat chosen independent epj given bpm
mc epm epj bpj w bpm mc entails epm added
dag bpj bpm mc w parents therefore get cd g mc w
set decision components ce g bpj bpm epj epm set
environment components dag components shown figure
proposition know joint probability distribution factors pve vd
pbpj bpm pepj bpj bpm mc w pepm bpj bpm mc w joint feasibility distribution
factored fvd fmc w
factorization steps
proposition provides us decomposition pve vd fvd conditional independence relation definition may possible perform
factorization steps factoring pc pag c set local plausibility functions pi
factoring fc pag c set local feasibility functions
cases expressing factors pc pag c fc pag c quite natural example p variables environment component c xi j j n
without parents represent pixel colors want model pc two
adjacent pixels different colors natural define set binary differ
ence constraints xi j xk l

factor
p

p





c
c
x
x
n
j n
j
j

n j n xi j xi j decomposition cannot obtained
conditional independence relation definition
settings markov random fields chellappa jain systematic
techniques exist obtain factorizations bayesian network community
offers systematic techniques hybrid networks dechter larkin
extract deterministic information contained conditional probability
distributions precisely conditional probability distribution px pag x


fithe pfu framework

expressed px pag x px pag x function defined

px pag x

factorization px pag x px pag x
otherwise
computationally relevant constraint propagation techniques functions
used solve hybrid networks
may use another weaker definition conditional independence valuation
systems shenoy said conditionally independent given
regard function function factors two scoped functions
scopes definition used first factorization
step destroys normalization conditions may useful
computational point view
additional factorization steps interest decreasing size
scopes functions involved adding redundant information
computationally useful
every environment component c pi f act c stands pi factor
pc pag c second factorization gives us
pc pag c

p
pi
pi f act c

p c pc pag c p pi functions f act c satisfy normalization condition
p c p pi f act c pi p scopes sc pi contained sc pc pag c c pag c
every decision component c f act c stands factor fc pag c
second factorization gives us
fc pag c



f act c



given c fc pag c functions f act c satisfy normalization condition
c f act c moreover sc c pag c
factorizations decrease scopes functions involved could
exploited indeed scoped function pi internal local
structure instance pi noisy gate pearl bayesian network
presence context specific independence boutilier friedman goldszmidt koller
internal local structures made explicit representing functions
tools algebraic decision diagrams bahar frohm gaona hachtel macii pardo
somenzi rest article make assumption way
scoped function represented
example pbpj bpm expressed terms first plausibility function p specifying probability john mary present beginning p defined
p bpj bpm f p bpj f bpm p bpj bpm
p bpj f bpm f add redundant deterministic information second plausibility function p defined constraint bpj bpm p constraint
satisfied otherwise get pbpj bpm p p p f act bpj bpm p p



fipralet verfaillie schiex

pepj bpj bpm mc w specified combination two plausibility functions p
p p expresses john absent beginning absent end p
hard constraint bpj f epj f p constraint satisfied otherwise
p bpj epj w white hard constraint specifying
john leaves iff white wine chosen hence pepj bpj bpm mc w p p p
f act epj p p similarly pepm bpj bpm mc w p p p p p defined
constraints f act epm p p
feasibilities fmc w specified feasibility function f expressing ordering fish red wine allowed f mc f ish w red f act mc w
f association local functions components appears figure
local utilities
local utilities defined states environment utility
health state patient decisions utility decision buying
car states environment decisions utility
horse race bet race
order specify local utilities one standard used csps influence
diagrams directly define set u local utility functions modeling preferences
hard requirements decision environment variables set implicitly defines
global utility uv uui u ui variables factored form obtained
global joint utility one may rely u work fishburn
bacchus grove introduced notion conditional independence utilities
normalization condition imposed local utilities
example dinner three local utility functions defined binary
utility function u expresses peter want john leave dinner u
hard constraint bpj epj u constraint satisfied
otherwise two unary utility functions u u epj epm respectively express
gains expected presences end u epj u epj f john
invests k present end u epm u epm f
mary invests k present end u u viewed soft constraints
local functions represented graphical model figure b
formal definition pfu networks
formally define plausibility feasibility utility networks definition justified previous construction process holds even plausibility structure
conditionable
influence diagrams special nodes called value nodes introduced represent outcome
decisions one utility function associated value nodes utility outcome
pfu framework directly represent utility functions scoped functions hold
parents value nodes explicitly express utility functions scoped functions
plausibility feasibility functions words utility functions directly utilities outcome
decision environment variables assignments



fithe pfu framework

p
mc w

bpj bpm
p p

f

w
f

epj

epm

p p

p p



mc

bpj

p

environment

p u

p

bpm

p

decision

epj
u

plausibility
function

epm

p

feasibility
function

u

utility
function

b

figure dag components b network scoped functions
definition plausibility feasibility utility network expected utility structure
tuple n v g p f u following conditions hold
v x x finite set finite domain variables v partitioned vd
decision variables environment variables
g typed dag components vd cf definition
p p p finite set plausibility functions pi p associated unique component c ce g sc pi c pag c set
pi p associated component c ce g denoted f act c must satisfy
p p pi f act c pi p
c

f f f finite set feasibility functions function associated
unique component c cd g sc c pag c set
f associated
component c cd g denoted f act c must satisfy
f act c
c

u u u finite set utility functions
pfu networks global functions
seen obtain pfu network expressing global controlled plausibility
distribution pve vd global controlled feasibility distribution fvd global utility
uv conversely let n v g p f u pfu network e set variables typed
dag components sets scoped functions
global function p pi p pi controlled plausibility distribution given
vd moreover theorem b plausibility structure conditionable
gp partial dag g induced arcs incident environment components
gp compatible completion
global function f controlled feasibility distribution vd given
moreover theorem b gf partial dag g induced arcs
g incident decision components gf compatible completion


fipralet verfaillie schiex

uui u ui necessarily global utility
therefore denote pve vd fvd uv
back existing frameworks
let us consider formalisms described section
csp hard soft easily represented pfu network n v g u
variables v decision variables g reduced single decision component
containing variables constraints represented utility functions
feasibility functions represent constraints would impossible represent inconsistent networks normalization conditions feasibilities sat
modeled similarly difference constraints replaced clauses
pfu network used represent local functions quantified
boolean formula quantified csp differences csps sat appear
consider queries network see section
bayesian network modeled n v g p variables v
environment variables g dag bn p px pag x x v
feasibility utility function chain graph modeled n v g p
g dag components chain graph p set factors
pc pag c
stochastic csp represented pfu network n v g p u v
partitioned vd set decision variables set stochastic
variables g dag depends relations stochastic variables
p set probability distributions stochastic variables u set
constraints
influence diagram modeled n v g p u vd contains
decision variables contains chance variables g dag influence
diagram without utility nodes arcs random variables e
keep called influence arcs p px pag x x
feasibilities one utility function ui defined per utility variable u scope
ui pag u represent valuation networks set f feasibility functions
added note business dinner example could modeled standard influence diagram since influence diagrams cannot model feasibilities
suitable extensions exist however shenoy
finite horizon probabilistic mdp modeled n v g p f u
time steps vd dt st g dag
components component contains one variable b unique parent
decision component dt st c parents environment component
st st dt p pst st dt f fdt st
u rst dt modeling finite horizon possibilistic mdp similar
plausibility distribution initial state viewed environment
variable corresponds special case decision variables model parameters



fithe pfu framework

summary
section introduced second element pfu framework network
variables linked local plausibility feasibility utility functions dag capturing
normalization conditions factorization global plausibilities feasibilities utilities
scoped functions linked conditional independence

queries pfu network
query correspond reasoning task information expressed pfu network
decision variables involved pfu network considered answering query may
provide decision rules examples informal queries dinner
best menu choice peter know present beginning
best menu choice peter knows present beginning
maximize expected investment restaurant chooses main
course first peter pessimistic choice present
beginning observed last peter chooses wine
dissociating pfu networks queries consistent trend influence diagram community relax called information links unconstrained influence
diagrams jensen vomlelova limited memory influence diagrams lauritzen
nilsson explains intuition queries change local relations
variables
section define simple class queries pfu networks assume
sequence decisions must performed order decisions
observations made known make forgetting assumption
making decision agent aware previous decisions observations
set utility degrees eu assumed totally ordered total order
assumption holds standard frameworks implies
exists optimal decision rule see subsection discussion extend
partial order
two definitions answer query given first decision trees
second operational equivalence two definitions
established
query definition
order formulate reasoning tasks pfu network use sequence sov operatorvariable pairs sequence captures different aspects query
partial observabilities sov specifies order decisions made environment variables observed x appears left vd example
sov u x max means value x known observed value chosen conversely sov max u x
x observed choosing


fipralet verfaillie schiex

optimistic pessimistic attitude concerning decision makers max inserted
elimination sequence decision maker optimistic behavior
agent controlling decision variable e agent cooperative
min one pessimistic e agent controlling adversary
operator used environment variables u model expected
utilities sought
parameters decision making set variables involved
sov kind parameters absence indicates want obtain optimal
expected utilities optimal policies assignment useful
order evaluate several scenarios simultaneously
example sequence corresponding informal query maximize
expected investment restaurant chooses main course first peter pessimistic
choice present beginning dinner observed last
peter chooses wine knowing present end
sov min mc u bpj bpm max w u epj epm
fact peter pessimistic main course min mc
chosen without observing variable variable left mc sov peter
makes best choice wine max w main course chosen
knowing present beginning w appears right mc bpj bpm
sov knowing present end w appears left epj epm
specifically bpj bpm partially observable whereas epj epm unobservable
query becomes peter observes present beginning
dinner chooses wine knowing present end
sequence use sov u bpj bpm max w u epj epm case
variable mc appear sequence anymore means mc parameter
answer value parameter sought
definition query pfu network pair q n sov n pfu
network sov op op opk sk sequence operator set variables
pairs
si disjoint
si vd opi min max si opi u
variables involved si called free variables decision variables
variables x different types one decision variable
environment variable directed path component contains
x component contains dag pfu network n x
appear right sov e x appears left x free
variable
decision made nature plausibility distribution decision
decision viewed environment variable



fithe pfu framework

condition ensures variable eliminated condition means
optimal decisions sought decision variables maximized decision
maker controls decision variable cooperative minimized adversarial
whereas expected utilities sought environment variables condition means
variables eliminated sov act parameters viewed
decision variables condition means x different types x
ancestor x assigned ensures causality respected variables different types example n u bpj bpm epj epm max mc w
violates condition violates causality since menu cannot chosen knowing
present end
variables appearing sov called quantified variables analogy quantified
boolean formulas set free variables denoted vf r notice definition
queries prevent environment variable quantified min max
may u min u max note straightforward
every pfu network n exists least one query n without free variables
k define
set l si variables appearing vf r left si sov l si
vf r j sj
set r si variables appearing right si sov r si j k sj
semantic answer query
subsection assume plausibility structure conditionable cf definition controlled plausibility distribution pve vd p pi p pi completed cf definition give plausibility distribution pve vd vd similarly
controlled feasibility distribution fvd f completed give feasibility distribution fve vd vd use global utility uv uui u ui
defined pfu network
imagine want answer query q n sov n network
dinner sov min mc u bpj bpm max w u epj epm
answer query use decision tree first restaurant chooses
worst possible main course taking account feasibility distribution mc
fmc mc meat fmc w mc meat w white fmc w mc meat w red
similarly fmc mc f ish choices feasible denotes
assignment mc uncertainty present beginning given main
course choice described probability distribution pbpj bpm mc possible
assignment bpj bpm e pbpj bpm mc p peter
chooses best wine taking account feasibility fw mc bpj bpm
restaurant chooses meat peter chooses optimal value red white
restaurant chooses fish peter choose white wine feasible
assignment w uncertainty regarding presence john mary end
dinner given pepj epm bpj bpm mc w
note conditional probabilities used decision tree directly
defined network must computed global distributions
computation challenge large


fipralet verfaillie schiex

utility uv associated possible complete assignment
variables possible assignment bpj bpm mc w
last stage e one epj epm assigned
p seen lottery von
neumann morgenstern whose expected utility dom epj epm p u
p pepj epm bpj bpm mc w u uv
expected utility becomes reward scenario bpm bpj mc w described
provides us criterion choosing optimal value w step
bpj bpm assigned seen lottery provides us
criterion choosing worst value mc computation associated previously
described process
min
dom mc fmc
x
pbpj bpm mc

dom bpj bpm pbpj bpm



max
x

mc

dom w fw mc bpj bpm



pepj epm bpj bpm mc w

dom epj epm
pepj epm bpj bpm mc w

uv

decision rules decision variables argmin argmax recorded
computation formulation represents decision process decision tree
internal level corresponds variable assignments arcs associated
assignment set decision variables weighted feasibility decision given
previous assignments arcs associated assignment environment variables
weighted plausibility degree assignment given previous assignments leaf
nodes correspond utilities complete assignments node collects values
children compute value
formalization decision tree procedure
order formalize decision tree procedure technical first introduced
proposition definitions preceding skipped first
reading
definition let ps conditional plausibility distribution given let
dom function ps said well defined iff ps p similarly
fs conditional feasibility distribution given dom
fs said well defined iff fs
next conditioning defined directly controlled plausibility distributions
dom vd pve vd plausibility distribution
definition assume plausibility structure used conditionable let pve vd
controlled plausibility distribution two disjoint subsets define
conditional controlled plausibility distributions dom vd
ps vd p ps vd max p ep ps vd p p ps vd
canonical definition conditioning given proposition given controlled feasi

fithe pfu framework

bility distribution fvd definition conditional controlled feasibility distributions
fs disjoint subsets vd similar
proposition assume plausibility structure used conditionable let q
n sov query sov op op opk sk let vf r denote set
free variables q
si psi l si well defined exists least one dom si
satisfying psi l si p
si vd fsi l si well defined exists least one dom si
satisfying fsi l si
si leftmost set environment variables appearing sov
dom l si psi l si well defined
j k j si sj r si l sj vd sj first set environment variables appearing right si sov dom l si dom si
psi l si well defined psi l si p extending
l sj psj l sj well defined
j k j si vd sj vd r si l sj sj first set
decision variables appearing right si sov dom l si dom si
fsi l si well defined fsi l si extending
l sj fsj l sj well defined
k si psi l si psi l si vd
k si vd fsi l si fsi l si vd
technical proposition ensure following semantic answer
query see definition
quantities ps l fs l used defined thanks items
proposition
eliminations restricted domains defined restricted domains
used never empty items proposition
conditional distributions used coincide conditioning defined directly
controlled plausibility feasibility distributions pve vd fvd items
proposition useful guarantees ps l
fs l priori require notion completion written
actually independent notion completion arbitrarily added
basic information expressed pfu network use ps l fs l instead
conditional controlled distributions ps l vd fs l vd notation
convenience explicitly represent ps l vd fs l vd
depend assignment vd l l respectively



fipralet verfaillie schiex

definition semantic answer sem ans q query q n sov function
set vf r free variables q defined

fvf r f
sem ans q
qs n sov otherwise
qs inductively defined


qs n uv



qs n op sov


min
qs n sov



dom



fs l




qs n sov
max











dom
fs l

u

dom
ps l p

vd op min
vd op max


ps l pu qs n sov



words step involving decision variables first two cases corresponds
optimization step among feasible choices step involving environment variables
third case corresponds lottery von neumann morgenstern
rewards qs n sov plausibility attributed reward
ps l formula looking ui pi pu ui expected utility lottery
set decision variables eliminated decision rule recorded
argmax resp argmin max resp min performed
example maximum investment peter expect associated decision make chooses menu without knowing attend answer
question use query bpj bpm epj epm eliminated
mc w represent fact values known menu chosen
query
n max mc w u bpj bpm epj epm
answer k mc meat w red decision peter knows comes
query becomes
n u bpj bpm max mc w u epj epm
optimal values mc w depend bpj bpm answer k
k gain observability present decision rule mc w
mc meat w red john present mary mc f ish w white otherwise
consider query introduced beginning section
n min mc u bpj bpm max w u epj epm
answer worst main course case even peter chooses wine situation unacceptable order compute expected utility menu choice
use query mc w free variables
unfeasible value cf definition



fithe pfu framework

n u bpj bpm epj epm
answer function mc w examples queries capture
situations terms partial observabilities optimistic pessimistic attitude parameters
decision process
operational answer query
quantities ps l fs l involved definition semantic answer query directly available local functions expensive
compute instance
probabilities ps l equals ps l pl
p

computing ps l
dom v sl pve vd typically requires time
exponential v l moreover quantities must computed node
decision tree fortunately exists alternative definition answer
query directly expressed pfu instance e expressed local
plausibility feasibility utility functions
definition operational answer op ans q query q n sov function
free variables q assignment free variables op ans q
defined inductively follows
op ans q qo n sov
qo n op sov opa dom qo n sov





qo n
p pi pu u ui

f

pi p




ui u

equation variables assigned answer query
combination plausibility degree feasibility degree utility degree
corresponding complete assignment equation variables assigned
op leftmost operator variable pair sov answer query obtained
eliminating op elimination operator optimal decision rules
decision variables recorded needed argmin argmax equivalently
considering sequence operator variable pairs sequence variable eliminations
op ans q written





op ans q sov
p pi pu u ui

f

pi p

ui u

shows op ans q actually corresponds generic form equation
equivalence theorem
theorem proves semantic definition sem ans q gives semantic foundations
computed operational definition op ans q
theorem plausibility structure conditionable queries q pfu
network sem ans q op ans q optimal policies decisions
sem ans q op ans q


fipralet verfaillie schiex

words theorem shows possible perform computations
completely generic algebraic framework providing computations
decision theoretic foundations due equivalence theorem op ans q denoted
simply ans q following note operational definition applies even
non conditionable plausibility structure giving decision theoretic semantics
op ans plausibility structure conditionable open issue
bounded queries
may interesting relax computing exact answer query
assume leftmost operator variable pair sequence sov max x
x decision variable decision maker point view computing decision rules
providing expected utility greater given threshold may sufficient
case e majsat defined given boolean formula set
variables v vd exist assignment vd formula
satisfied least half assignments extending generic pfu framework
answer queries done definitions introduce bounded queries
definition bounded query b q triple n sov n sov query
eu threshold
definition answer ans b q bounded query b q n sov boolean
function free variables unbounded query q n sov every assignment
free variables

ans q u
ans b q
f otherwise
threshold may used prune search space resolution computing answer bounded query easier computing answer unbounded
one
back existing frameworks
let us consider frameworks section solving csp equation totally
ordered soft csp corresponds query q n max v n pfu network
corresponding csp v set variables csp computing probability
distribution variable bayesian network equation modeled n corresponds
q n v examples mono operator queries involving one
type elimination operator
consider multi operator queries search optimal policy stochastic
csp associated equation captured query q n max
max query influence diagrams equation
query valuation networks equation captured way
finite horizon mdp time steps equation query looks q
n max u max u st max dt u probabilistic mdps u min pessimistic possibilistic mdps initial state



fithe pfu framework

free variable quantified csp quantified boolean formula elimination operators
min max used represent
formally
theorem queries bounded queries used express solve following
list
sat framework sat majsat e majsat quantified boolean formula stochastic
sat ssat extended ssat littman et al
csp cn framework
check consistency csp mackworth solution csp count
number solutions csp
solution valued csp bistarelli et al
solve quantified csp bordeaux monfroy
conditional decision unconditional decision mixed csp
probabilistic mixed csp fargier et al
optimal policy stochastic csp policy value greater
threshold solve stochastic cop constraint optimization walsh

integer linear programming schrijver finite domain variables
search solution plan length k classical strips
fikes nilsson ghallab et al
answer classical queries bayesian networks pearl markov random fields
chellappa jain chain graphs frydenberg plausibilities
expressed probabilities possibilities rankings
compute plausibility distributions
map maximum posteriori hypothesis mpe probable explanation
compute plausibility evidence
cpe task hybrid networks dechter larkin cpe means cnf probability evaluation cnf formula conjunctive normal form
solve influence diagram howard matheson
finite horizon solve probabilistic mdp possibilistic mdp mdp
rankings completely partially observable pomdp factored puterman
monahan sabbadin boutilier et al



fipralet verfaillie schiex

towards complex queries
queries made complex relaxing assumptions
definition queries order u eu assumed total extending
partial order possible eu u defines lattice partially ordered
set closed least upper greatest lower bounds pu distributes
least upper bound lub greatest lower bound glb e p pu lub u u
lub p pu u p pu u p pu glb u u glb p pu u p pu u allows
semiring csps bistarelli et al captured framework believe
extensions partial orders utilities allow algebraic mdps perny
et al captured
try relax forgetting assumption limited memory influence
diagrams limids lauritzen nilsson relevant
decision processes involving multiple decision makers memory constraints
policy recording cases optimal decisions become nondeterministic
decisions choose x probability p x probability p
order decisions made environment variables observed
total completely determined query one may wish compute
optimal policy decisions optimal order perform
decisions without exactly knowing steps agents make decisions
steps observations made work influence diagrams unordered
decisions jensen vomlelova good starting point try extend
work direction
possible relax assumption variables finite domain
nontrivial since transforming u integrals straightforward
performing min max eliminations continuous domains requires guarantee
existence supremum
summary
section last element pfu framework class queries pfu networks
introduced decision tree definition answer query provided
first main section theorem gives theoretical foundations
another equivalent operational definition reducing answer query sequence
eliminations combination scoped functions latter best adapted future
directly handles local functions defined pfu network
second important theorem shows many standard queries pfu
queries overall pfu framework captured definitions algebraic
structures definition pfu networks definitions queries

gains costs
better understanding theorem shows many existing frameworks instances
pfu framework unification similarities differences ex

fithe pfu framework

isting formalisms analyzed instance comparing vcsps optimistic
version finite horizon possibilistic mdps operational definition answer
query appears finite horizon optimistic possibilistic mdp partially observable
fuzzy csp indeed represented query q whose operational
answer looks maxv min v set variables set scoped
functions techniques available solving fuzzy csps used solve finite
horizon optimistic possibilistic mdps
complexity theory point view studying time space complexity
answering queries form equation lead upper bounds complexity
several frameworks simultaneously one may try characterize properties
lead given theoretical complexity
increased expressive power expressive power pfu networks
number features flexibility plausibility utility model flexibility
possible networks flexibility queries terms situation modeling enables
queries pfu networks cover generic finite horizon sequential decision
plausibilities feasibilities utilities cooperative adversarial decision makers partial observabilities possible parameters decision process modeled free
variables
none frameworks indicated theorem presents flexibility every
subsumed formalism x indicated theorem possible
represented pfus directly x specifically compared influence
diagrams howard matheson jensen vomlelova smith et al nielsen
jensen jensen et al valuation networks vns shenoy
demirer shenoy pfus deal probabilistic expected additive
utility allow us perform eliminations min model presence adversarial
agents thus quantified boolean formulas cannot represented influence diagrams
vns covered pfu networks see theorem moreover pfu networks use
dag captures normalization conditions plausibilities feasibilities whereas
vns information lost compared sequential influence diagrams jensen
et al sequential vns demirer shenoy pfus express called
asymmetric decision variables may even need
considered decision process adding dummy values variables
actually simple expressed pfus cannot apparently
directly expressed frameworks simple instance feasibilities normalization
conditions hard requirements captured subsumed frameworks
example csp model would loss information provided
normalization conditions feasibilities occurs influence diagrams sequential decision processes possibilistic expected utility could
called possibilistic influence diagrams similarly stochastic csps without contingency
assumption
cost greater flexibility increased expressive power pfu framework
cannot described simply straightforwardly example constraint networks
generic section shows generic built answer
queries pfu networks previously said building generic facilitate


fipralet verfaillie schiex

cross fertilization sense subsumed formalisms directly benefit
techniques developed another subsumed formalism fits growing
effort generalize resolution methods used different ai example soft
constraint propagation drastically improves resolution valued csps integrating
tool generic pfus could improve resolution influence diagrams
abstract operators may enable us identify algorithmically interesting properties
infer necessary sufficient conditions particular usable
however one could argue techniques highly specific one formalism
one type case dedicated approaches certainly outperform
generic solution characterize actual properties used
dedicated order generalize much possible moreover even
specialized schemes usually improve generic ones exist cases general
tools efficient specialized shown use sat solvers
solving strips sang beame kautz


ability design generic one motivations building pfu
framework choices justified algorithmic considerations present generic
answer arbitrary pfu queries
generic tree search
operational definition answer query q actually defines naive exponential
time compute ans q tree exploration procedure variable
ordering given sov collects elementary plausibilities feasibilities utilities
precisely assignment free variables q tree explored
node tree corresponds partial assignment variables value leaf
provided combination scoped functions pfu network applied
complete assignment defined path root leaf depending
operator used value internal node computed performing min max
u operation values children root node returns ans q
corresponding pseudo code given figure query n sov first call
treesearchanswerq n sov returns function free variables
assume every operator returns constant time time
complexity n ln dn stands maximum domain
size n stands number variables pfu network stands number
scoped functions
space complexity polynomial shown linear entry data
size hence computing answer bounded query pspace moreover given
satisfiability qbf pspace complete expressed
bounded query cf theorem follows computing answer bounded query
pspace hard pspace pspace hard decision consists
factor n ln corresponds upper bound time needed get scoped function
represented table size dn



fithe pfu framework

treesearchanswerq v g p f u sov
begin
foreach dom vf r answerq v g p f u sov
return
end
answerq v g p f u sov
begin
sov return f p pi p pi pu uui u ui
else
op sov sov
choose x
x sov sov else sov op x sov
dom dom x
res
dom
choose dom
dom dom
res op res answerq v g p f u sov x
return res
end

figure
generic tree search answering query q
v g p f u sov



answering bounded query pspace complete surprising gives
idea level expressiveness reached pfu framework
work needed identify subclasses queries lower complexity although many
already known
generic variable elimination
quite naturally generic variable elimination bertele brioschi shenoy
dechter kolhas defined answer queries pfu network
first naive scheme
first naive variable elimination given figure eliminates variables
right left sequence sov query whereas tree search
procedure variables assigned left right right left processing
entails naturally returns function free variables query
first call varelimanswerq v g p f u sov
version presented figure actually naive variable elimination scheme
time space complexities n ln dn dn respectively begins
combining scoped functions eliminating variables whereas interest
variable elimination primarily use factorization local functions



fipralet verfaillie schiex

varelimanswerq v g p f u sov
begin
f p pi p pi pu uui u ui
sov
sov op sov
choose x
x sov sov else sov sov op x
opx
return
end

figure first generic variable elimination answering query q
v g p f u sov
improving basic scheme
figure works unique global function defined combination
plausibility feasibility utility functions first line whereas factorization
available improve scheme properties algebraic structure used
sequel denote x resp x scoped function resp
x scope moreover extend every combination operator e
setting e e combining anything something unfeasible unfeasible

first order use factorization plausibilities feasibilities use
properties come right monotonicity pu distributivity pu
u definition
truncation operator
x
min
p
pu u p x pu minx u
x




maxx p x pu u p x pu maxx u



ux p x pu u p x pu ux u
minx f x u f x minx u





maxx f x u f x maxx u


ux f x u f x ux u
express variable x eliminated necessary consider plausibility
functions feasibility functions x scope
however necessary add axioms expected utility structure since
general case expression ux p x pu u x u u x cannot decomposed give two axioms ax ax sufficient additional condition
exploit factorization utility functions
ax ep p eu u p u p u pu
ax u u eu eu
operator op used combination operator scoped functions elimination operator variables case extension op used combination operator creates
operator op op e whereas extension op used elimination operator
creates operator op op e e op op coincide e differ e



fithe pfu framework

among cases table rows satisfy ax whereas rows satisfy
ax ax andax enable us write
minx f x u x u u x u x u minx f x u x
maxx f x u x u u x u x u maxx f x u x

x

u u ux p x pu u x ax
x
x
x
u p pu u u u
p x p x pu u x u ux p x pu u x ax
x
hence eliminating variable x necessary consider utility functions
x scope
present ax satisfied ax holds working plausibility utility pairs p u allows ax recovered used example solve
influence diagrams ndilikilikesha ax satisfied actually one
set e ep eu one order p u one combination operator p u pu
one elimination operator p u rather express feasibilities f
express e mapping onto e f onto preserves value
answer query since f u u u e u
improved variable elimination shown figure answer query
q v g p f u sov first call ax varelimanswerq p f u sov
returns set scoped functions whose combination equals ans q time
factorization available pfu network exploited since eliminating variable x
scoped functions involving x considered
ax varelimanswerq sov
begin
sov return
else
sov op sov
choose x
x sov sov else sov sov op x
x x sc
opx x
x
return ax varelimanswerq sov
end

figure variable elimination ax holds set scoped functions
ax holds actually standard variable elimination
commutative semiring classical variable elimination time complexity
n ln dw w tree width bodlaender
dechter fattah network scoped functions constrained elimination
order imposed sov yet space complexity exponential tree width
approaches
starting generic tree search section bound computations local
consistencies mackworth cooper schiex larrosa schiex



fipralet verfaillie schiex

integrated order prune search space local consistencies improve quality
bounds thanks use smaller local functions techniques coming quantified
boolean formulas game considered
efficiently manage bounds min max operators alternate caching strategies
exploiting structure darwiche jegou terrioux obvious
candidates improve basic tree search scheme additional axioms ax ax
useful direction heuristics choice variable assign pair
op encountered well heuristics value choices may speed
search
another direction approximate sampling local search could
considered sampling eliminations u performed local
search eliminations min max performed

conclusion
last decades ai witnessed design study numerous formalisms
reasoning decision article built generic framework
model sequential decision making plausibilities feasibilities utilities
framework covers many existing approaches including hard valued quantified mixed
stochastic csps bayesian networks finite horizon probabilistic possibilistic mdps
influence diagrams algebraic framework built upon decision theoretic
foundations pfu framework two facets pfu framework explicit
theorem states operational definition answer query equivalent
decision tree semantics design accounts
expressiveness computational aspects
compared related works shenoy dechter kolhas pfu framework framework directly deals different types variables decision
environment variables different types local functions plausibilities feasibilities
utilities different types combination elimination operators
algorithmic point view generic tree search variable
elimination described prove pfu framework abstraction next step explore ways improving generalize
techniques used formalisms subsumed pfu framework along line
generic query optimization lead definition original architectures
answering queries called multi operator cluster trees multi operator cluster dags
applied qbfs structures compatible ax pralet schiex
verfaillie well influence diagrams structures satisfying ax pralet
schiex verfaillie b

acknowledgments
would thank jean loup farges jerome lang regis sabbadin three
anonymous reviewers useful comments previous versions article work



fithe pfu framework

described article initiated first author laas cnrs inra
toulouse partially conducted within eu integrated project cogniron
cognitive companion funded european commission division fp ist future
emerging technologies contract fp

appendix notations
see table
symbol

p
u

p
u
pu
p
u




vd
dom x
dom
g
pag x
ndg x
ce g
cd g
pi

ui
f act c
sc
ps
ps
fs
fs

eaning
elimination operator
elimination operator plausibilities
elimination operator utilities
combination operator
combination operator plausibilities
combination operator utilities
combination operator plausibilities utilities
partial order plausibilities
partial order utilities
truncation operator
unfeasible value

environment variables
decision variables
domain
values variable x
q
dom x
xs
directed acyclic graph dag
parents x dag g
non descendant x dag g
set environment components g
set decision components g
plausibility function
feasibility function
utility function
pi factors associated component c
scope local function
plausibility distribution
conditional plausibility distribution given
feasibility distribution
conditional feasibility distribution given

sov
sequence operator variable pairs
sem ans q semantic answer query q decision trees
op ans q operational answer query q
ans q
answer query q

table notation


fipralet verfaillie schiex

appendix b proofs
proposition plausibility distribution ps extended give plausibility distribution ps every defined ps p ss ps
proof given p associative commutative p ps p p ss ps p ps p
thus ps dom ep plausibility distribution

proposition structures presented table expected utility structures
proof sufficient verify required axioms successively

proposition ep p p conditionable plausibility structure plausibility distributions conditionable suffices define ps ps max p
ep ps p p ps dom satisfying ps p
proof let ps plausibility distribution disjoint subsets
dom satisfying ps p let us define ps max p ep ps
p p ps must ps functions satisfy axioms b c e definition
definition ps distributivity p p write
ps p ps p ps p ps p ps p ps
ps p ps infer p ps p p let assignment satisfying
ps p assume hypothesis h p ps p p holds
dom ps p ps since ps ps
ps p implies p ps p p monotonicity
p moreover h implies exists unique p ep satisfying p ps p
p p combining equation ps gives ps p ps p p ps e
ps p p p p ps implies p p p p p given p p p p p
monotonicity p obtain p p p p analyze two cases
p p p exists unique p satisfying p p p p p ps p p
p p p p p entails p ps p contradicts h
p p p p p p entails p idempotent let dom subset
dom p dom ps ps let dom
write

ps p p dom ps ps


ps p p dom ps ps p idempotent
ps p ps exists unique p ep ps p
p ps therefore p dom ps p dom ps

gives p dom ps ps


assumption p dom ps ps holds dom dom recursively applying previous mechanism removing one assignment dom
iteration leads p dom ps ps dom e leads
ps ps dom obtain contradiction
cases contradiction h obtained p ps p
b ps ps p p ps p p ps ps p p ps


fithe pfu framework

let dom satisfying ps p ps ps p
ps holds
ps p ps exists unique p ep ps
pp ps ps ps p ps definition ps
ps ps p ps p ps definition ps
ps implies ps ps p ps
otherwise ps ps implies p p ps
ps p p ps p similarly entails ps p
ps p monotonicity p implies ps ps
ps p p p p get ps ps p ps
c

p ps

p ps p ps
p ps p ps p distributes p
ps

e assume ps ps p ps p ps let dom
ps p ps ps p ps holds
ps p ps exists unique p ep ps
p p ps therefore ps ps p ps
otherwise write ps ps ps p reasoning similar therefore ps ps p ps

proposition satisfies semigraphoid axioms
symmetry
decomposition
weak union
contraction
proof
symmetry axiom directly satisfied commutativity p
decomposition axiom assume holds
ps p ps
p ps p ps since
ps p p ps distributivity p p
ps p ps
thus holds
weak union axiom assume holds decomposition axiom entails
satisfied
ps ps p ps chain rule
ps p ps p ps since
ps p ps p ps p ps chain rule
ps p ps p ps since
ps p ps p ps chain rule
axiom e definition infer ps ps p ps e
holds


fipralet verfaillie schiex

contraction axiom assume hold
ps ps p ps chain rule
ps p ps p ps since
ps p ps chain rule
ps p ps p ps since
ps p ps chain rule
thus holds

theorem conditional independence factorization let ep p p conditionable plausibility structure let g dag components
g compatible plausibility distribution ps ps p cc g pc pag c
b c c g function c pag c c pag c plausibility
distribution c assignments pag c p cc g c pag c
plausibility distribution g compatible
proof
first c g g contains unique component c p cc g pc pag c pc
pc proposition holds c g
assume proposition holds dags n components let g dag
components compatible plausibility distribution ps c g n
let c component labeling leaf g g compatible ps write
c ndg c pag c pag c c leaf ndg c c consequently
c c pag c pag c means pspag c pag c pc pag c p
p sc pag c pag c combining side equation ppag c gives
ps pc pag c p psc

let g dag obtained g deleting node labeled c every
component c c g pag c pag c since deleted component c leaf moreover
ndg c equals ndg c ndg c c since deleted component c leaf
first case ndg c ndg c property c ndg c pag c pag c directly implies
c ndg c pag c pag c second case ndg c ndg c c decomposition
axiom allows us write c ndg c pag c pag c c ndg c pag c pag c
consequently g dag compatible psc c g n induction hypothesis
gives psc p cc g pc pag c implies ps p cc g pc pag c desired
b assume every component c c pag c plausibility distribution c
assignments pag c c g c g c c plausibility
distribution c moreover p write c c p e
c therefore g compatible c proposition holds c g
assume proposition holds dags n components consider dag g
n components first plausibility distribution e
p p cc g c pag c p let c leaf component g c leaf unique
scoped function whose scope contains variable c c pag c distributivity
p p implies
p c p cc g c pag c p c c pag c p p cc g c c pag c
given c pag c plausibility distribution c assignments pag c


fithe pfu framework

p c c pag c p consequently
p c p cc g c pag c p cc g c c pag c
applying induction hypothesis dag n components obtained g deleting c infer p sc p cc g c c pag c p allows us write
p sc p c p cc g c pag c p e p p plausibility distribution
remains prove g dag components compatible let c c g
must c ndg c pag c pag c holds two cases
c c must prove
c ndg c pag c pag c c pag c p ndg c pag c pag c
first note
c pag c p c pag c p cc g c pag c
p c pag c p cc g c c pag c p c pag c
p distributes p sc c pag c c pag c
p spag c p cc g c pag c p c pag c
p distributes p c c pag c p
pag c p c pag c
possible write
ndg c pag c pag c p c pag c p pag c
ndg c pag c pag c p c pag c
ndg c pag c pag c p pag c p c pag c
ndg c p c pag c
c p c pag c c leaf g


p cc g c c pag c p c pag c

p cc g c pag c

axiom e definition entails ndg c pag c pag c p c pag c
spag c pag c e c ndg c c ndg c pag c pag c
otherwise c c let g dag obtained g deleting c g contains
n components induction hypothesis c ndg c pag c pag c c
leaf g c
pag c implies pag c pag c thus
c ndg c pag c pag c
ndg c ndg c immediate c ndg c pag c pag c
ii otherwise ndg c ndg c c leaf g equivalent say
ndg c ndg c c means c ancestor c fortiori c
pag c following four semigraphoid axioms used
prove required decomposition axiom c ndg c
pag c pag c c ndg c ndg c ndg c
c follows c c ndg c pag c pag c words
c pag c c c ndg c pag c pag c weak
union axiom leads c c ndg c pag c pag c symmetry axiom c c ndg c pag c pag c shown previously
c ndg c pag c pag c together c c ndg c pag c pag c
contraction axiom implies c ndg c pag c c pag c c

pag c ndg c ndg c c means c ndg c pag c pag c


fipralet verfaillie schiex

proved g compatible consequently proposition holds
n components g ends proof induction

proposition let ep p p conditionable plausibility structure
n n exists unique p p n p p
proof let n n p n p p p p satisfies required property moreover
case distributivity p p implies p ep p n p p therefore
p n p p p p shows p unique
otherwise p n p p case p p p n p monotonicity p
write p p p n p second item definition implies exists unique
p ep p p p p n p e p p n p

proposition
let pve vd completion controlled plausibility distribution
pve vd pve vd plausibility distribution vd pve vd pve vd
proof pve vd pve vd p p p element ep p dom vd p p
p vd pve vd p vd pve vd p p p vd p pve vd p p p vd p
p dom vd p p proves pve vd plausibility distribution vd
pve vd pve vd p p pve vd pve vd p pvd write pve vd p p
pve vd p pvd moreover pvd p pve vd p pve vd p p p thus pve vd p
p pve vd p p summing equation dom vd times p gives pve vd pve vd

proposition let g typed dag components vd let gp partial
graph g induced arcs g incident environment components let gf
partial graph g induced arcs g incident decision components gp
compatible completion pve vd cf definition gf compatible
completion fvd
pve vd

p pc pag c
cce g

fvd


ccd g

fc pag c

proof proved pve vd proof fvd similar completion
pve vd looks pve vd pve vd p p gp compatible completion theorem
entails pve vd p cc gp pc pagp c decision components roots gp infer
successively eliminating environment components pvd p pve vd p ccd gp pc

hand pvd p pve vd p p p proves p ccd gp pc
p therefore pve vd pve vd p p p cce gp pc pagp c p p summing equation
dom vd times p gives pve vd p cce gp pc pagp c ce gp ce g pagp c
pag c every c ce g entails pve vd p cce g pc pag c

proposition assume plausibility structure used conditionable let q
n sov query sov op op opk sk let vf r denote set
free variables q


fithe pfu framework

si psi l si well defined exists least one dom si
satisfying psi l si p
si vd fsi l si well defined exists least one dom si
satisfying fsi l si
si leftmost set environment variables appearing sov
dom l si psi l si well defined
j k j si sj r si l sj vd sj first set environment variables appearing right si sov dom l si dom si
psi l si well defined psi l si p extending
l sj psj l sj well defined
j k j si vd sj vd r si l sj sj first set
decision variables appearing right si sov dom l si dom si
fsi l si well defined fsi l si extending
l sj fsj l sj well defined
k si psi l si psi l si vd
k si vd fsi l si fsi l si vd
proof denote p element ep completion pve vd equals pve vd p
note p p since must satisfy p dom vd p p
lemma let ep p p conditionable plausibility structure p p p p
p p p p
proof first p p p p p p p p conversely assume p p p p
p p p conditionability plausibility structure together p p p p entails
p p similarly p p p p p therefore p p p p p p p p
lemma assume plausibility structure conditionable let disjoint subsets
ps vd ps vd
proof note ps vd ps vd p ps vd moreover write ps vd
ps vd ps vd p ps vd ps vd p ps vd let assignment v
ps vd p ps vd conditionability plausibility structure entails
ps vd ps vd otherwise ps vd ps vd entails
ps vd ps vd case ps vd ps vd p therefore
ps vd ps vd
assume si psi l si well defined psi l si plausibility
distribution si hence p dom si psi l si p implies exists
least one dom si psi l si p
proof similar point
assume let si leftmost set environment variables appearing sov
let dom l si since l si write pl si p v l si pve vd
p vd l si p pve vd p vd l si p p therefore psi l si well defined



fipralet verfaillie schiex

let le si l si ld si l si vd set variables denote dg
set variables v descendant dag g least one variable
first psi le si vd p si le si pve vd p si le si p pj p pj definition query variables dg vd ld si belong si le si environment
variables descendants yet unassigned decision variables assigned yet
thus psi le si vd p si le si dg vd ld si p pj f act c c dg vd ld si pj
last equality obtained successively eliminating environment components included
dg vd ld si normalization conditions scope plausibility function
pj f act c included cpag c equality entails psi le si vd depend
assignment vd ld si morever ple si vd si psi le si vd depend
assignment vd ld si psi le si vd max p ep psi le si vd
p p ple si vd entails psi le si vd depend assignment
vd ld si denoted psi le si ld si
psi l si psi le si ld si first note
psi l si p vd ld si psi le si vd p vd ld si psi le si vd p ple si vd
p vd ld si psi le si vd p ple si vd lemma
psi le si vd p p vd ld si ple si vd
since psi le si vd depend assignment vd ld si
psi le si vd p pl si
let assignment v
psi l si p pl si conditionability plausibility structure directly
entails psi l si psi le si vd
otherwise psi l si pl si case psi l si p next v
l si vd ld si le si observe pl si p v l si pve vd p p
p vd ld si ple si vd p p similarly psi l si p v si l si pve vd p
p p vd ld si psi le si vd p p psi l si pl si infer
p vd ld si ple si vd p p p vd ld si psi le si vd p p neither
ple si vd psi le si vd depends assignment vd ld si entails
ple si vd p p vd ld si p psi le si vd p p vd ld si p summing
equation dom ld si times gives psi le si vd ple si vd thus
psi le si vd p psi l si
proof similar point
let j k j si sj r si l sj vd sj first set
environment variables appearing right si sov let dom l si dom si
psi l si well defined e pl si p psi l si p let
extension l sj must psj l sj well defined e
pl sj p psi l si p pl si p lemma implies
psi l si p similarly proof point possible pl sj
depend assignment l sj si l si therefore every extending
l sj p l sj si l si pl sj p implies pl sj p
proof similar point except plausibilities replaced feasibilities decision
variables replaced environment variables



fithe pfu framework

theorem plausibility structure conditionable queries q pfu
network sem ans q op ans q optimal policies decisions
sem ans q op ans q
proof let af r assignment set free variables vf r fvf r af r f
semantic definition gives sem ans q af r given fvf r af r v vf r fve vd af r
v vf r fvd af r v vf r f af r since completion fvd gives fvd
fvd infer every complete assignment extending af r f f
f p pi p pi pu uui u ui min max u
entails op ans q af r
analyze case fvf r af r use denote complete assignment
must considered semantic definition properties
p pu min u u min p pu u p pu u right monotonicity pu
p pu max u u max p pu u p pu u right monotonicity pu
p pu u u u p pu u u p pu u distributivity pu u
p pu p pu u p p p pu u
move psi l si get starting semantic definition
p k si psi l si pu uv
right elimination operators
prove quantity equals pve vd pu uv let rightmost set
quantified environment variables chain rule enables us write pve vd ps le vd p
ple vd le l moreover lemma proposition
write ps le vd ps le vd ps l therefore pve vd ps l p ple vd recursively applying mechanism leads pve vd p k si psi l si therefore obtain
pve vd pu uv right elimination operators
semantic definition query meaning simplified bit thanks lemma
lemma implies conditions ps l p used pl p
equivalent ps l p since ps l ps l p pl
operators ua dom ps l p replaced ua dom ps l p similarly
eliminations mina dom fs l conditions fs l replaced
fs l holds eliminations maxadom xi fs l
start operational definition reformulated
operational definition applies sequence variable eliminations global function f
p pi p pi pu ui u ui equals fvd pve vd pu uv let leftmost
set quantified decision variables let assignment l assume quantified min let dom fs l f inferred
complete assignment extending fve vd f consequently fvd
f implies fvd pve vd pu uv given min
max u obtain qo n sov min entails
mina dom qo n sov mina dom qo n sov thus mina dom
replaced mina dom fs l fvf r exists least one assignment
dom fs l holds quantified max applying mechanism set quantified decision variables left right sov
obtain mina dom maxa dom replaced mina dom fs l
maxa dom fs l respectively moreover shown every complete assignment considered corresponding transformed operational definition fvd
thus possible replace fvd pve vd pu uv pve vd pu uv



fipralet verfaillie schiex

transform ua dom qo n sov looks expression
semantic definition let leftmost set quantified environment variables let assignment l let dom ps l p complete assignments
extending pve vd p thus pve vd pu uv u min u u
max u u u u u u obtain qo n sov u u u computing ua dom qo n sov equivalent computing ua dom qo n sov
thus ua dom replaced ua dom ps l p pl p exists
least one assignment dom satisfying ps l p applying mechanism
considering set quantified environment variables left right sov get
ua dom ps l p instead ua dom
consequently found function sem ans q op ans q
moreover optimal policies decisions sem ans q optimal policies decisions
indeed transformation rules used preserve set optimal policies holds
op ans q entails sem ans q op ans q optimal policies
sem ans q op ans q

theorem queries bounded queries used express solve following
nonexhaustive list
sat framework sat majsat e majsat quantified boolean formula stochastic
sat ssat extended ssat littman et al
csp cn framework
check consistency csp mackworth solution csp count
number solutions csp
solution valued csp bistarelli et al
solve quantified csp bordeaux monfroy
conditional decision unconditional decision mixed csp
probabilistic mixed csp fargier et al
optimal policy stochastic csp policy value greater
threshold solve stochastic cop constraint optimization walsh

integer linear programming schrijver finite domain variables
search solution plan length k classical strips
fikes nilsson ghallab et al
answer classical queries bayesian networks pearl markov random fields
chellappa jain chain graphs frydenberg plausibilities
expressed probabilities possibilities rankings
compute plausibility distributions
map maximum posteriori hypothesis mpe probable explanation


fithe pfu framework

compute plausibility evidence
cpe task hybrid networks dechter larkin cpe means cnf probability evaluation cnf formula conjunctive normal form
solve influence diagram howard matheson
finite horizon solve probabilistic mdp possibilistic mdp mdp
rankings completely partially observable pomdp factored puterman
monahan sabbadin boutilier et al
proof
lemma let ep eu u pu expected utility structure eu totally ordered
u let local function eu whose scope
max
u

dom dom adom

u max




moreover dom dom satisfies maxs
dom iff max dom dom uadom uadom
words two sides equality set optimal policies
proof let dom dom function
max dom dom uadom uadom
given dom u maxa dom monotonicity
u entails uadom u uadom maxa dom thus
max dom dom uadom u us maxs
hand let dom dom function dom
maxs
us maxs
u
u
max
u

dom dom adom

adom

antisymmetry u implies required equality equality set optimal policies
directly implied equality
give proof theorem uses cases previous lemma
csp mackworth
let us consider csp set variables v set constraints c cm
consistency solution finding consistency checked query q
n max v n v g u variables v decision variables g
reduced unique decision component containing variables u c cm
expected utility structure boolean optimistic expected conjunctive
utility row table computing ans q maxv c cm equivalent
checking consistency ans q iff exists assignment v satisfying
c cm e iff csp consistent order get solution ans q
suffices record optimal decision rule v integer linear programming schrijver
finite domain variables formulated csp
b counting number solutions expected utility structure considered
task probabilistic expected satisfaction row table pfu network
n v g p u variables v environment variables g dag
unique component c v p constant factor equal dom v



fipralet verfaillie schiex

f act c u c cm implicitly specifies
complete assignments equiprobable enables normalization
condition
p
c ce g p c p pi f act c pi p satisfied since v dom v
query consider q n v p
hard check satisfies
conditions imposed queries ans q v c cm gives
percentage solutions csp ans q gives number solutions
solving valued csp vcsp bistarelli et al
order model difficulty lies definition expected utility
structure vcsp triple e called valuation structure introduced satisfies
properties e commutative semigroup total order e e
minimum element denoted expected utility structure consider following
one ep p p f eu u e expected utility structure
ep eu u pu u min pu defined f alse pu u true pu u
u hard check structure expected utility structure next
pfu network n v g u v set variables vcsp g
dag one decision component containing variables u contains soft
constraints query q min v enables us minimum violation degree
soft constraints solution vcsp optimal argmin decision rule v
sat framework littman et al
sat framework queries conjunctive normal form boolean formula set
variables v x xn asked let us first prove extended ssat formula evaluated pfu query extended ssat formula defined
triple q boolean formula conjunctive normal form threshold
q q x qn xn sequence quantifier variable pairs quantifiers
r meaning r appears take f value quantification sequence q val q defined recursively val
otherwise ii val
x q maxx val q iii val x q minx val q
p
iv val rx q

val q intuitively last case means r quantifies
x
boolean variables taking equiprobable values extended ssat formula q iff
val q denotes set variables quantified r equivalent definition
val q val otherwise ii val
x q maxx val q
p



iii val x q minx val q iv val rx q x val q second definition proves val q computed pfu query defined expected
utility structure probabilistic expected satisfaction row table b pfu network
n v g p u v set variables formula decision variables
variables quantified g dag without arcs one decision component per
decision variable unique environment component containing variables quantified
r p constant factor equal u set clauses c
query q n sov sov obtained q replacing r max min
respectively ans q val q implies value extended ssat
formula q value bounded query n sov
ssat particular case extended ssat therefore covered sat majsat emajsat qbf particular cases extended ssat instances
pfu bounded queries precisely sat corresponds bounded query form
q n max v majsat given boolean formula set variables v
satisfied least half assignments v corresponds bounded query
form n v e majsat given boolean formula v vd
exist assignment vd formula satisfied least half assignments
corresponds bounded query form n max vd qbf



fithe pfu framework

corresponds bounded query max existentially quantified variables min
universally quantified variables alternate
solving quantified csp qcsp bordeaux monfroy
qcsp represents formula form q x qn xn c cm qi
quantifier ci constraint value qcsp defined recursively
follows value qcsp without variables e containing f connectives
given definition connectives qcsp x qcsp iff qcsp x
qcsp x f assuming f gives x qcsp iff maxx qcsp qcsp x qcsp
iff qcsp x qcsp x f equivalently x qcsp iff minx qcsp
implies value qcsp actually given formula op q x op qn xn c
cm op max op min corresponds answer query
n op q x op qn xn n v g u v set variables
qcsp g dag one decision component containing variables u
set constraints expected utility structure boolean optimistic expected
conjunctive utility row table
solving mixed csp probabilistic mixed csp fargier et al
probabilistic mixed csp defined set variables partitioned set w
contingent variables set x decision variables assignment aw w called
world assignment ax x called decision ii set c c cm
constraints involving least one decision variable iii probability distribution pw
worlds possible world aw e pw aw covered decision ax iff
assignment aw ax satisfies constraints c
one hand decision must made without knowing world task
optimal non conditional decision e assignment ax decision variables

covered ax probability equal
p maximizes probability world
p
p



p
w
w c cm optimal
aw c cm ax aw w
w
non conditionalpdecision found recording optimal decision rule x
formula maxx w pw c cm previous formula actually specifies
solve pfus algebraic structure probabilistic expected additive
utility row table pfu network n v g p u vd x w
g dag without arc one decision component x set environment components
depends pw specified p set multiplicative factors define pw
finally u c cm query q n max x w
hand world known decision made task look
optimal conditional decision e look decision rule dom w dom x
maximizes probability
p world covered words goal compute
max dom w dom x aw dom w c cm aw aw pw aw
p
max dom w dom x aw dom w pw c cm aw aw due lemma
p
equals w maxx pw c cm found recording optimal
decision rule x proves query q n w max x enables us compute
optimal conditional decision
mixed csps pw replaced set k constraints defining possible worlds
goal look decision conditional non conditional maximizes
number covered worlds task equivalent ignoring normalizing constant
decision maximizes percentage covered worlds solved set
plausibility functions p k n n normalizing constant ensuring
normalization condition plausibilities holds n number possible worlds
actually need computed since constant factor interested
optimal decisions


fipralet verfaillie schiex

stochastic csp scsp stochastic cop scop walsh
formally scsp tuple v p c v list variables variable x
finite domain dom x set stochastic variables v p ps
set probability distributions advanced version scsps probabilities
may defined bayesian network subsumption still valid case
c c cm set constraints threshold
scsp policy tree internal nodes labeled variables root labeled
first variable v parents leaves labeled last variable
v nodes labeled decision variable one child whereas nodes labeled
stochastic variable dom children leaf nodes labeled complete
assignment define satisfies theqconstraints c otherwise leaf
node associated probability ss ps stands assignment
implicitly defined path root leaf satisfaction scsp policy
sum values leaves weighted probabilities scsp satisfiable
iff exists scsp policy satisfaction least optimal satisfaction
scsp maximum satisfaction scsp policies
subsumption proof first consider looking optimal satisfaction scsp scsp policy decision variable x take one value per
assignment set preds x stochastic variables precede x list variables v instead described tree scsp policy viewed set
x
functions

x dom x x v value val
p
q dom pred
q

p

c
x goal maximize previas dom
ss
ci c
xv

ous quantity among sets let last decision variable v let set
local functions dom preds
defining
rule
x dom x
ya decision

val max
ps
ci x
max








dom preds spreds ss

ci c

xv


equals

p lemma
pprevious quantity
q
q
max
p

preds
spreds
ss
ci c ci recursive application mechanism shows answer ans q query q described equal optimal
satisfaction scsp
expected utility structure row table probabilistic expected satisfaction
pfu network n v g p u v set variables scsp
vd v g dag without arcs one component per variable p
ps f act ps u set constraints scsp
query q n sov sov v v thelist variables scsp v
x v x

recursively defined x v
max x v otherwise
optimal scsp policy recorded evaluation ans q satisfiability
scsp answered bounded query n sov corresponding
scsp policy obtained recording optimal decision rules
stochastic constraint optimization scop constraints c additive
soft constraints subsumption proof similar
classical strips fikes nilsson ghallab et al
order search plan length lesser k simply model classical csp transformation already available literature ghallab
et al however model classical directly
pfu framework precisely state one step described set boolean



fithe pfu framework

environment variables step unique decision variable whose set values corresponds actions available plausibility functions deterministic link
variables step variables step functions simply specify positive
negative effects actions initial state represented plausibility function
links variables first step feasibility functions define preconditions action
feasible link variables step decision variable step utility
functions boolean functions describe goal states hold variables
step k order search plan length lesser k sequence elimination
max elimination variables expected utility structure used boolean optimistic
expected disjunctive utility
influence diagrams howard matheson
start definition influence diagrams section decision variable
associate decision rule dom pag dom influence diagram policy
id policy set decision rules one decision variable
value val id policy x
given
yby probabilistic
x expectation utility

ps pag
ui
val
dom

ui u

ss

dd

solve influence diagram must compute maximum value previous quantity associated optimal id policy lemma dag structure
possible ideas scsp subsumption proof optimal
expected utility given answer query q associated optimal decision rules
recorded evaluation ans q
expected utility structure row table probabilistic expected additive utility
pfu network n v g p u v set variables influence diagram
g dag obtained dag influence diagram removing utility
nodes arcs decision nodes g one component per variable p
ps pag f act ps pag u set utility functions
associated utility nodes
pfu query q n sov sov obtained dag influence diagram
follows initially sov dag influence diagram decisions totally
ordered let first decision variable dag g influence diagram e
decision variable parent decision variable repeatedly update sov
sov sov pag max delete variables pag g
decision variable remains perform sov sov set
chance variables deleted g
finite horizon mdps puterman monahan sabbadin boutilier et al
order prove encoding pfu framework given sections
actually enables us solve time steps probabilistic mdp start reminding
used compute optimal mdp policy usually decision rule dt
chosen computing vst maxdt rst dt vst optimal reward obtained
state st atp
time step decision rule di chosen computing vsi
maxdi rsi di si psi si di vsi last optimal expected value reward
depends initial state vs
let us prove induction
forp

p
q
p
vs maxd maxdi si k psk sk dk k rsk dk vsi
proposition holds since p

vs maxd r
p ps vs
p
maxd ps rs vs since ps


fipralet verfaillie schiex

moreover proposition
holds p
stepqi p
p
vs maxd maxdi si k psk sk dk k rsk dk vsi
given
p
p
p
k rsk dk vsi k rsk dk maxdi rsi di si psi si di vsi
p
p
maxdi k rsk dk si psi si di vsi
p
p
maxdi si psi si di k rsk dk vsi
p
last equality holds since si psi si di inferred
q
p
k psk sk dk k rsk dk vsi
p
q
p
maxdi si k psk sk dk k rsk dk vsi
proves proposition holds step proves holds step
therefore vs ans q furthermore step proof preserves set optimal
decision rules optimal mdp policy recorded evaluation ans q
study case partially observable finite horizon mdps finite horizon pomdps
pomdp add time step conditional probability distribution pot st
making observation ot time step given state st value st remains unobserved assume probability distribution ps initial state available
subsumption proof case difficult consider pomdps
consists finding optimal policy tree equivalent compute
decision variable dt decision rule dt depending observations made
far e function dt dom ot dom dt set functions denoted
dt set dt called pomdp policy value pomdp policy
recursively defined follows first value reward last decision step
depends assignment ast st observations made
beginning v st ot ast rst dt ast dt time step
obtained reward depends actual state asi observations made far
expression
v si
p
pi asi
rsi di si psi si di oi poi si v si oi
asi di equation recursive formula used define
value policy tree pomdp kaelbling littman cassandra p
equivalent finally expected reward pomdp policy v ps v
solving finite horizon pomdp consists computing optimal expected reward among
pomdp policies e computing v maxd dt v dt well
associated optimal decision rules
proof induction observable mdp case first possible prove
steps p
p
v maxd dt ot st v
q
q
p
v ps psi si di poi si rsi di
recursive use lemma
enables
p
p us infer
pthat
p
v maxd maxd maxd ot maxdt st v
proves query defined enables us compute v well optimal policy
algebraic structure probabilistic expected additive utility row table
pfu network n v g p u v equals si oi di
vd di g dag one variable per component
decision component parents environment component oi
si parent component si si di parents p ps
psi si di poi si f act ps f act si
psi si di f act oi poi si last u rsi di


fithe pfu framework

pfu query dag necessary condition query defined
decision di must appear left variables sk k ok k
query considered q n sov
sov max max ot max dt st
proofs finite horizon po mdps possibilities rankings similar
subsumption factored mdps first argue every factored mdp
represented usual mdp therefore pfu query pfu network even
sufficient argument define better representation factored mdps
pfu framework corresponds representation variables describing states
directly used together local plausibility functions rewards modeled
scoped functions defined decision trees binary decision diagrams
queries bayesian networks pearl markov random fields chellappa jain
chain graphs frydenberg
suffices consider chain graphs since bayesian networks markov random fields
particular cases chain graphs subsumption proofs provided general case
plausibility distributions defined totally ordered conditionable plausibility structure
map mpe probability evidence mpe probable explanation
computation probability evidence particular cases map maximum
posteriori hypothesis suffices prove map subsumed probabilistic
map consists finding given probability distribution pv maximum
posteriori explanation assignment subset v observed
called evidence formally let denote set variables explanation
sought let e denote observed assignment map consists
finding assignment maxadom pd e pd e
pd pd po write
maxadom pd e maxadom p
pd e po e
maxadom dom v pv e po e
p
thus computing maxd v pv e sufficient difference lies normalizing constant generalized totally ordered conditionable
plausibility structures
indeed p monotonic maxadom pd e maxadom pd e p
po e maxadom pd e p po e exists unique p ep
maxadom pd e p p po e gives us p maxadom pd e
otherwise maxadom pd e po e infer exists
dom pd e po e therefore pd e p thus
maxadom pd e p shows determining maxadom pd e
gives maxadom pd e
moreover argmax pd e dom max p ep pd e
p p po e p max p ep pd e p p po e dom therefore optimal assignment maxd pd e optimal assignment
maxd pd e map reduced computation
maxd pd e maxd p v pv e maxd p v pv p
scoped function scope e p e e p otherwise define pfu query whose answer ans q maxd p v pv p
plausibility structure ep p p utility structure eu u ep p
expected utility structure ep eu u pu ep ep p p
pfu network difficulty definition pfu network lies fact
normalization conditions components must satisfied idea


fipralet verfaillie schiex

components variable involved modified pfu
network n v g p u v set variables chain graph vd
v g dag components obtained dag g chain
graph splitting every component c variable involved
component c transformed c components containing one variable
c components become parents child components c component
x included one c components x x decision
component otherwise x environment component create plausibility function pi equal constant p x p dom x p x p
f act x p x p contains first constants defined
second factors expressing pc pag c chain graph components
c satisfying c last u contains factors expressing pc pag c
chain graph components c c constant factor
p x satisfying p x p p x p component x created
splitting process described hard constraints representing
pfu network local normalization conditions satisfied combination
local functions equals pv p
pfu query query simply q n max u v
optimal decision rule recorded computation ans q
b plausibility distribution computation task given plausibility distribution pv expressed combination plausibility functions chain graphs goal
compute plausibility distribution ps set v basic formula ps
p v pv proves query defined actually computes ps query shows
usefulness free variables
plausibility structure ep p p utility structure eu u ep p
expected utility structure ep eu u pu ep ep p p
pfu network n v g p u v vd dag
g sets p u obtained similarly map case
pfu query q n u v
hybrid networks dechter larkin
hybrid network triple g p f g dag set variables v partitioned
r p set probability distributions expressing pr pag r r r
f set functions fpag variables deterministic
sense value completely determined assignment parents
general task hybrid networks task belief assessment conditioned formula conjunctive normal form consists computing probability distribution
variable x given complex evidence complex may involve several variables
p ignoring normalizing constant requires compute assignments x
x adom v x x pv x c c cm denotes set clauses
p
q
q
q
equals v x rr pr pag r dd fpag ci c ci x
query corresponding computation uses probabilistic expected satisfaction structure row table pfu network n v g p u v vd x
p pr pag r r r x fpag x u c px pag x
x r u c fpag x x query q n v x



fithe pfu framework

references
bacchus f grove graphical preference utility proc
th international conference uncertainty artificial intelligence uai
pp montreal canada
bahar r frohm e gaona c hachtel g macii e pardo somenzi f
algebraic decision diagrams applications ieee acm international
conference cad pp santa clara california usa ieee computer
society press
bertele u brioschi f nonserial dynamic programming academic press
bistarelli montanari u rossi f schiex verfaillie g fargier h
semiring csps valued csps frameworks properties comparison
constraints
bodlaender h treewidth algorithmic techniques proc
nd international symposium mathematical foundations computer science
mfcs
bordeaux l monfroy e beyond np arc consistency quantified constraints proc th international conference principles practice
constraint programming cp ithaca york usa
boutilier c brafman r domshlak c hoos h poole cp nets tool
representing reasoning conditional ceteris paribus preference statements
journal artificial intelligence
boutilier c dean hanks decision theoretic structural assumptions computational leverage journal artificial intelligence

boutilier c dearden r goldszmidt stochastic dynamic programming
factored representations artificial intelligence
boutilier c friedman n goldszmidt koller context specific independence bayesian networks proc th international conference
uncertainty artificial intelligence uai pp portland oregon usa
chellappa r jain markov random fields theory applications academic press
chu f halpern j great expectations part customizability
generalized expected utility proc th international joint conference
artificial intelligence ijcai acapulco mexico
chu f halpern j b great expectations part ii generalized expected utility
universal decision rule proc th international joint conference
artificial intelligence ijcai pp acapulco mexico
cooper schiex arc consistency soft constraints artificial intelligence
darwiche recursive conditioning artificial intelligence


fipralet verfaillie schiex

darwiche ginsberg symbolic generalization probability theory
proc th national conference artificial intelligence aaai pp
san jose ca usa
dechter r bucket elimination unifying framework reasoning artificial
intelligence
dechter r fattah e topological parameters time space tradeoff
artificial intelligence
dechter r larkin hybrid processing beliefs constraints proc
th international conference uncertainty artificial intelligence uai
pp seattle wa usa
dechter r mateescu r mixtures deterministic probabilistic networks
search space proc th international conference
uncertainty artificial intelligence uai banff canada
demirer r shenoy p sequential valuation networks graphical technique asymmetric decision proc th european conference
symbolic quantitavive approaches reasoning uncertainty ecsqaru pp london uk
dubois prade h possibility theory basis qualitative decision
theory proc th international joint conference artificial intelligence
ijcai pp montreal canada
fargier h lang j schiex mixed constraint satisfaction framework
decision incomplete knowledge proc th national
conference artificial intelligence aaai pp portland usa
fargier h perny p qualitative decision uncertainty without
commensurability assumption proc th international conference
uncertainty artificial intelligence uai pp stockholm sweden
fikes r nilsson n strips application theorem
proving artificial intelligence
fishburn p foundations expected utility reidel publishing company
dordrecht
friedman n halpern j plausibility measures users guide proc
th international conference uncertainty artificial intelligence uai pp
montreal canada
frydenberg chain graph markov property scandinavian journal
statistics
ghallab nau traverso p automated theory practice
morgan kaufmann
giang p shenoy p qualitative linear utility theory spohns theory
epistemic beliefs proc th international conference uncertainty
artificial intelligence uai pp stanford california usa



fithe pfu framework

giang p shenoy p two axiomatic approaches decision making
possibility theory european journal operational
goldman r boddy expressive explicit knowledge proc
rd international conference artificial intelligence systems aips pp edinburgh scotland
halpern j conditional plausibility measures bayesian networks journal
artificial intelligence
halpern j reasoning uncertainty mit press
howard r matheson j influence diagrams readings principles
applications decision analysis pp strategic decisions group menlo
park ca usa
jegou p terrioux c hybrid backtracking bounded tree decomposition
constraint networks artificial intelligence
jensen f nielsen shenoy p sequential influence diagrams unified
asymmetry framework proceedings second european workshop probabilistic graphical pgm pp leiden netherlands
jensen f vomlelova unconstrained influence diagrams proc
th international conference uncertainty artificial intelligence uai pp
seattle wa usa
kaelbling l littman cassandra acting partially
observable stochastic domains artificial intelligence
kolhas j information algebras generic structures inference springer
kushmerick n hanks weld probabilistic
artificial intelligence
larrosa j schiex quest best form local consistency
weighted csp proc th international joint conference artificial intelligence ijcai acapulco mexico
lauritzen nilsson representing solving decision
limited information management science
littman majercik pitassi stochastic boolean satisfiability journal
automated reasoning
mackworth consistency networks relations artificial intelligence

monahan g survey partially observable markov decision processes theory
management science
ndilikilikesha p potential influence diagrams international journal approximated reasoning
nielsen jensen f representing solving asymmetric decision
international journal information technology decision making



fipralet verfaillie schiex

pearl j probabilistic reasoning intelligent systems networks plausible inference morgan kaufmann
perny p spanjaard weng p algebraic markov decision processes
proc th international joint conference artificial intelligence ijcai edinburgh scotland
pralet c generic algebraic framework representing solving sequential decision making uncertainties feasibilities utilities ph
thesis ecole nationale superieure de laeronautique et de lespace toulouse france
pralet c schiex verfaillie g decomposition multi operator queries
semiring graphical proc th international conference
principles practice constraint programming cp pp nantes
france
pralet c schiex verfaillie g b influence diagrams multioperator
cluster dags proc nd international conference uncertainty
artificial intelligence uai cambridge usa
pralet c verfaillie g schiex c decision uncertainties feasibilities
utilities towards unified algebraic framework proc th european
conference artificial intelligence ecai pp riva del garda italy
puterman markov decision processes discrete stochastic dynamic programming john wiley sons
sabbadin r possibilistic model qualitative sequential decision
uncertainty partially observable environments proc th international conference uncertainty artificial intelligence uai pp
stockholm sweden
sang beame p kautz h solving bayesian networks weighted model
counting proc th national conference artificial intelligence aaai pp pittsburgh pa usa
schmeidler subjective probability expected utility without additivity
econometrica
schrijver theory linear integer programming john wiley sons
shafer g mathematical theory evidence princeton university press
shenoy p valuation systems discrete optimization uncertainty
artificial intelligence
shenoy p valuation systems bayesian decision analysis operations

shenoy p conditional independence valuation systems international
journal approximated reasoning
shenoy p valuation network representation solution asymmetric decision
european journal operational



fithe pfu framework

smith j holtzman matheson j structuring conditional relationships
influence diagrams operations
spohn w general non probabilistic theory inductive reasoning proc
th international conference uncertainty artificial intelligence uai
pp cambridge usa
von neumann j morgenstern theory games economic behaviour
princeton university press
walsh stochastic constraint programming proc th european
conference artificial intelligence ecai pp lyon france
weydert e general belief measures proc th international conference
uncertainty artificial intelligence uai pp
wilson n order magnitude calculus proc th international
conference uncertainty artificial intelligence uai pp montreal
canada




