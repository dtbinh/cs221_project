Journal Artificial Intelligence Research 29 (2007) 269-307

Submitted 8/06; published 7/07

Semantic Matchmaking Non-Monotonic Reasoning:
Description Logic Approach
Tommaso Di Noia
Eugenio Di Sciascio

t.dinoia@poliba.it
disciascio@poliba.it

SisInfLab - Politecnico di Bari, Bari, Italy

Francesco M. Donini

donini@unitus.it

Universita della Tuscia, Viterbo, Italy

Abstract
Matchmaking arises supply demand meet electronic marketplace,
agents search web service perform task, even recruiting agencies
match curricula job proles. open environments, objective matchmaking process discover best available oers given request.
address problem matchmaking knowledge representation perspective,
formalization based Description Logics. devise Concept Abduction Concept Contraction non-monotonic inferences Description Logics suitable modeling
matchmaking logical framework, prove related complexity results.
present reasonable algorithms semantic matchmaking based devised inferences,
prove obey commonsense properties.
Finally, report implementation proposed matchmaking framework,
used mediator e-marketplaces semantic web services
discovery.

1. Introduction
promise Semantic Web initiative revolutionize way information coded,
stored, searched Internet (Berners-Lee, Hendler, & Lassila, 2001). basic
idea structure information aid markup languages, based XML
language, RDF RDFS1 , OWL2 . languages conceived
representation machine-understandable, unambiguous, description web
content creation domain ontologies, aim increasing openness
interoperability web environment.
Widespread availability resources services enablesamong advantages
interaction number potential counterparts. bottleneck dicult
nding matches, possibly best ones, parties.
need matchmaking process arises supply demand meet
marketplace, web services able perform task discovered,
recruiting agencies match curricula job proles dating agency propose
partners customer agency. Requests oers may hence generic demands
supplies, web services, information, tangible intangible goods, matchmaking
process nd request appropriate response. paper concentrate
1. http://www.w3.org/RDF/
2. http://www.w3.org/TR/owl-features/
c
2007
AI Access Foundation. rights reserved.

fiDi Noia, Di Sciascio & Donini

automated matchmaking, basically oriented electronic marketplaces service discovery, although principles algorithms denitely general enough cover
scenarios. assume, reasonable, requests oers endowed
kind description. Based descriptions target matching process
nding, given request, best matches available oers set, also, given
oer, determine best matching requests peer-to-peer fashion. may hence think
electronic mediator actor actively tries carry matchmaking process.
Obviously descriptions might provided using unstructured text, case
automated mediator revert adopting either basic string matching techniques
sophisticated Information Retrieval techniques.
Semantic Web paradigm calls descriptions provided structured form based ontologies, assume follows requests oers
given reference common ontology. noticed even requests
oers described heterogeneous languages, using dierent ontologies modelling
domain, schema/data integration techniques may employed make
comparable, proposed e.g., Madhavan, Bernstein, Rahm (2001), Shvaiko
Euzenat (2005); reformulated comparable way, one still left
basic matchmaking problems: given request, compatible oers?
several compatible oers, which, why, promising ones?
Matchmaking widely studied several proposals made past;
report Section 2. Recently, growing eort aimed
formalization Description Logics (DLs) (Baader, Calvanese, Mc Guinness, Nardi, &
Patel-Schneider, 2003) matchmaking process (e.g., Di Sciascio, Donini, Mongiello, &
Piscitelli, 2001; Trastour, Bartolini, & Priest, 2002; Sycara, Wido, Klusch, & Lu, 2002; Di
Noia, Di Sciascio, Donini, & Mongiello, 2003b; Li & Horrocks, 2003; Di Noia, Di Sciascio,
Donini, & Mongiello, 2003c, 2003a, among others). DLs, fact, allow model structured
descriptions requests oers concepts, usually sharing common ontology. Furthermore DLs allow open-world assumption. Incomplete information admitted,
absence information distinguished negative information. provide
little insight DLs Section 3.
Usually, DL-based approaches exploit standard reasoning services DL system
subsumption (un)satisabilityto match potential partners electronic transaction. brief, supply described concept Sup demand concept Dem,
unsatisability conjunction Sup Dem (noted Sup Dem) identies incompatible proposals, satisability identies potential partnersthat still agree
underspecied constraintsand subsumption Sup Dem (noted Sup Dem)
means requirements Dem completely fullled Sup.
Classication compatible incompatible matches useless presence
several compatible supplies; way rank promising ones identied;
explanation motivation rank could appreciated. hand,
lack compatible matches one may accept turn incompatible matches
could still interesting, revising original requirements presented
request, far one could easily identify them.
words method needed provide logic-based score compatible
incompatible matches eventually provide partial/full ordering, allowing user
270

fiSemantic Matchmaking Non-Monotonic Reasoning: Description Logic Approach

automated agent choose promising counteroers. Furthermore
possible, given score, provide logical explanations resulting score, thus allowing
understand rank result ease interaction rene/revise request.
Although process quite simple human logic-based fully
automated framework. believe need dene non-monotonic reasoning services
DLs setting, deal approximation ranking, paper propose
use Concept Abduction (Di Noia et al., 2003a) Concept Contraction (Colucci,
Di Noia, Di Sciascio, Donini, & Mongiello, 2003), services amenable answer
highlighted issues satisfactory way. Contributions paper include:
logical framework express requests oers terms concept descriptions,
properties hold matchmaking facilitator;
Concept Abduction logical basis ranking compatible counteroers given
oer provide logical explanations ranking result;
Concept Contraction logical basis ranking incompatible matches, aimed
discovering promising near misses, provide logical explanations
ranking result;
algorithms implementing formalized inferences matchmaking purposes
complexity results class matchmaking problems;
description system implementing semantic matchmaking services, experimental evaluation.
remaining paper structured follows: next Section reports background
work subject. (Section 3) briey revise Description Logics basics. make
paper self-contained recall (Section 4) logic-based framework matchmaking,
pointing properties matchmaking algorithms systems guarantee.
Sections 5 6 present Concept Abduction Concept Contraction, two inference
services devised compute semantic matchmaking, present suitable denitions
problem along complexity results. Section 7 describe
matchmaker, present (Section 7.1) evaluation results computed system
compared human users behavior, standard full text retrieval approach.
Conclusions close paper.

2. Related Work Matchmaking
Matchmaking investigated recent years number perspectives
dierent purposes, renovated interest information overload kept growing
Web widespreading use. try summarize relevant related work.
Vague query answering, proposed Motro (1988), initial eort overcome limitations relational databases, using weights attributed several search variables.
recent approaches along lines aim extending SQL preference clauses,
order softly matchmake data structured databases (Kieling, 2002). Finin, Fritzson,
McKay, McEntire (1994) proposed KQML agent communication language oriented matchmaking purposes. Kuokka Harada (1996) investigated matchmaking
271

fiDi Noia, Di Sciascio & Donini

process allowed potential producers/consumers provide descriptions
products/needs, either directly agents mediation, later unied engine identifying promising matches. Two engines developed, SHADE system,
used KQML, description language KIF, matchmaking anyway
relying logical reasoning, COINS, adopted classical unstructured-text information retrieval techniques, namely SMART IR system. Similar methods later
re-considered GRAPPA system (Veit, Muller, Schneider, & Fiehn, 2001). Classiedads matchmaking, syntactic level, proposed Raman, Livny, Solomon (1998)
matchmake semi-structured descriptions advertising computational resources fashion
anticipating Grid resources brokering. Matchmaking used SIMS (Arens, Knoblock,
& Shen, 1996) dynamically integrate queries; approach used KQML, LOOM
description language. LOOM used subsumption matching addressed
Gil Ramachandran (2001). InfoSleuth (Jacobs & Shea, 1995), system discovery
integration information, included agent matchmaker, adopted KIF
deductive database language LDL++. Constraint-based approaches matchmaking
proposed implemented several systems, e.g., PersonaLogic3 , Kasbah4
systems Maes, Guttman, Moukas (1999), Karacapilidis Moraitis (2001), Wang,
Liao, Liao (2002), Strobel Stolze (2002).
Matchmaking satisability concept conjunction DLs rst proposed
venue Gonzales-Castillo, Trastour, Bartolini (2001) Di Sciascio et al.
(2001), precisely dened Trastour et al. (2002). Sycara, Paolucci, Van Velsen,
Giampapa (2003) introduced specic language agent advertisement framework
Retsina Multiagent infrastructure. matchmaking engine developed (Sycara
et al., 2002; Paolucci, Kawamura, Payne, & Sycara, 2002), carries process
possible levels. levels exploit classical text-retrieval techniques semantic
match using -subsumption. Nevertheless, standard features semantic-based system,
satisability check unavailable. noteworthy approach, notion
plug-in match introduced, overcome way limitations matching approach based exact matches. approach Paolucci et al. (2002) later extended
Li Horrocks (2003), two new levels matching classication introduced.
similar classication proposedin venueby Di Noia et al. (2003c), along
properties matchmaker DL-based framework, algorithms
classify semantically rank matches within classes. Benatallah, Hacid, Rey, Toumani
(2003) proposed Dierence Operator DLs semantic matchmaking. approach
uses Concept Dierence, followed covering operation optimized using hypergraph techniques, framework web services discovery. briey comment relationship
Concept Dierence Concept Abduction end Section 5. initial DLbased approach, adopting penalty functions ranking, proposed Cal, Calvanese,
Colucci, Di Noia, Donini (2004), framework dating systems. extended
matchmaking approach, negotiable strict constraints DL framework
proposed Colucci, Di Noia, Di Sciascio, Donini, Mongiello (2005), using Concept Contraction Concept Abduction. Matchmaking DLs locally-closed world
3. http://www.PersonaLogic.com
4. http://www.kasbah.com

272

fiSemantic Matchmaking Non-Monotonic Reasoning: Description Logic Approach

assumption applying autoepistemic DLs proposed Grimm, Motik, Preist
(2006).
need work someway approximation ranking DL-based approaches
matchmaking recently led adopting fuzzy-DLs, Smart (Agarwal &
Lamparter, 2005) hybrid approaches, OWLS-MX matchmaker (Klusch, Fries,
Khalid, & Sycara, 2005). approaches, anyway, relaxing logical constraints,
allow explanation automated revision service.
Finally, pointed matching DLs, widely treated Baader,
Kusters, Borgida, Mc Guinness (1999) relation matchmaking. fact,
work expressions denoting concepts considered, variables expressions.
match substitution variables expressions makes concept expression
equivalent another. general setting concept rewriting DLs
direct relation matchmakingsee discussion Remark 1.

3. Description Logics Basics
Section summarize basic notions denitions Description Logics
(DLs), Classic, knowledge representation system application inspired
by. provide hereafter brief guided-tour DLs main characteristics, interested
reader refer comprehensive handbook Baader et al. (2003).
3.1 Description Logics
Description Logicsa.k.a. Terminological Logicsare family logic formalisms Knowledge Representation. DLs endowed syntax, semantics, usually
model-theoretic. basic syntax elements DLs are:
concept names, e.g., Computer, CPU, Device, Software,
role names, hasSoftware, hasDevice
individuals, used special named elements belonging concepts.
Intuitively, concepts stand sets objects, roles link objects dierent concepts,
role hasSoftware links computers software. using individuals
formalization, hence skip parts regarding individuals.
Formally, semantic interpretation pair = (, ), consists domain
interpretation function , maps every concept subset , every
role subset .
Basic elements combined using constructors form concept role expressions,
DL distinguished set constructors. Every DL allows one form
conjunction concepts, usually denoted ; DL include disjunction
complement close concept expressions boolean operations.
Roles combined concepts using
existential role quantication:
e.g., Computer hasSoftware.WordProcessor
describes set computers whose software include word processor,
273

fiDi Noia, Di Sciascio & Donini

universal role quantication
e.g., Server hasCPU.Intel
describes servers Intel processors board.
constructs may involve counting,
number restrictions:
e.g., Computer ( 1 hasCPU)
expresses computers one CPU,
e.g., Computer ( 4 hasCPU)
describes computers equipped least four CPUs.
Many constructs dened, increasing expressive power DL,
n-ary relations (Calvanese, De Giacomo, & Lenzerini, 1998).
follows, call atomic concepts union concept names, negated concept
names, unqualied number restrictions. dene length concept C number
atomic concepts appearing C. denote length C |C|. Observe
consider zero length. dene Quantication Nesting (QN)
concept following positive integer: QN atomic concept 0, QN
universal role quantication R.F 1 plus QN F , QN conjunction
C1 C2 maximum QNs conjoined concepts C1 C2 .
Expressions given semantics dening interpretation function
construct. example, concept conjunction interpreted set intersection: (C D)I =
C DI , boolean connectives , present, given usual
set-theoretic interpretation union complement. interpretation constructs
involving quantication roles needs make domain elements explicit: example,
(R.C)I = {d1 | d2 : (d1 , d2 ) RI d2 C }
3.2 TBoxes
Concept expressions used axiomsthat either inclusions (symbol: ),
denitions (symbol: )which impose restrictions possible interpretations according
knowledge elicited given domain. example, could impose monitors
divided CRT LCD using two inclusions: Monitor LCDMonitor
CRTMonitor CRTMonitor LCDMonitor. Or, computers domestic use
one operating system HomePC ( 1 hasOS). Denitions useful give
meaningful name particular combinations, Server Computer ( 2 hasCPU).
Historically, sets axioms called TBox (Terminological Box).
several possible types TBoxes. General TBoxes made General Concept Inclusions
(GCI) form C D, C Dem concept DL.
general TBoxes, distinction inclusions denitions disappears, since
denition C expressed two GCIs C D, C. contrary,
simple TBoxesalso called schemas Calvanese (1996), Buchheit, Donini, Nutt,
Schaerf (1998)only concept name appear left-hand side (l.h.s.)
axiom, concept name appear l.h.s. one axiom. Schemas
274

fiSemantic Matchmaking Non-Monotonic Reasoning: Description Logic Approach

cyclic acyclic, cyclicity refers dependency graph GT concept names,
dened follows: every concept name node GT , arc concept
name concept name B appears l.h.s. axiom, B appears (at
level) concept right-hand side. acyclic GT is, cyclic otherwise.
call acyclic schema simple TBox (Baader et al., 2003, Ch.2). depth simple
TBox length longest path GT . simple TBoxes, unfolding
dened following process (see Appendix denition): every denition
C, replace C every concept; every inclusion C, replace C
every concept. Clearly, process trasforms every concept equivalent one,
TBox forgotten. However, TBoxes, unfolding yield concepts
exponential size w.r.t. initial concepts. exponential blow-up
happen, call TBox bushy deep (Nebel, 1990).
semantics axioms based set containment equality: interpretation
satises inclusion C C DI , satises denition C C = DI .
model TBox interpretation satisfying axioms .
Observe make distinction equivalence (used axioms) equality
= symbols. use equality instantiate generic concept symbols concepts
stand for, e.g., write ... C = R.B... mean concept
symbol C stands concept expression R.B text.
3.3 Reasoning Services
DL-based systems usually provide two basic reasoning services:
1. Concept Satisability: given TBox concept C, exist least one
model assigning non-empty extension C? abbreviate satisability
concept C w.r.t. TBox C .
2. Subsumption: given TBox two concepts C D, C always contained
every model Iof ? abbreviate subsumption C w.r.t.
C D.
Since C satisable C subsumed , complexity lower bounds satisability
carry (for complement class) subsumption, upper bounds subsumption
carry satisability. hand, since C subsumed C
unsatisable, subsumption reducible satisability DLs admitting general concept
negation, DLs outside languageas DLs
next Section.
3.4 System Classic
system Classic (Borgida, Brachman, McGuinness, & A. Resnick, 1989; Borgida &
Patel-Schneider, 1994) originally developed general Knowledge Representation
system, successfully applied conguration (Wright, Weixelbaum, Vesonder,
Brown, Palmer, Berman, & Moore, 1993) program repositories management (Devambu,
Brachman, Selfridge, & Ballard, 1991).
language designed expressive possible still admitting
polynomial-time inferences bushy deep TBoxes. provides intersection
275

fiDi Noia, Di Sciascio & Donini

name
top
bottom
intersection
universal
quantication
number
restrictions

concrete syntax
TOP
(and C D)

syntax


C

semantics



C DI

(all R C)

R.C

{d1 | d2 : (d1 , d2 ) RI d2 C }

(at-least n R)
(at-most n R)

( n R)
( n R)

{d1 | {d2 | (d1 , d2 ) RI } n}
{d1 | {d2 | (d1 , d2 ) RI } n}

Table 1: Syntax semantics constructs Classic
name
denition
inclusion
disjoint
group

system notation
(createConcept C false)
(createConcept C true)
(createConcept A1 C symbol)
...
(createConcept Ak C symbol)

syntax
AC
AC
disj(A1 , . . . ,Ak )

semantics
AI = C
AI C
= 1, . . . , k AIi C
j = + 1, . . . , k
AIi AIj =

Table 2: Syntax semantics TBox Classic assertions (symbol name denoting
group disjoint concepts)

concepts union, universal existential quantication roles, number
restrictions roles intersection roles, since combinations known
make reasoning np-hard (Donini, Lenzerini, Nardi, & Nutt, 1991; Donini, 2003).
simplicity, consider subset constructs, namely, conjunction, number
restrictions, universal role quantications, summarized Table 1. abbreviate
conjunction ( n R) ( n R) (= n R). omit constructs ONE-OF(), FILLS(,)
refer individuals, construct SAME-AS(,) equating llers functional roles.
subset Classic refer known ALN (Attributive Language unqualied
Number restrictions) (Donini, Lenzerini, Nardi, & Nutt, 1997b). number restrictions
present, resulting DL known AL (Schmidt-Schau & Smolka, 1991). ALN
provides minimal set constructs allow one represent concept taxonomy, disjoint
groups, role restrictions (AL), number restrictions (N ) represent restriction son
number llers role.
Regarding axioms TBox, Classic allows one state simple TBox assertions
form summarized Table 2, A, A1 , . . . ,Ak concept names. Axioms
TBox subject constraints every concept name appear
l.h.s. TBox, every concept name cannot appear l.h.s.
denition disjointness assertion.
Every Classic concept given normal form. consider normal form
constructs ALN used ontologies applications. Intuitively,
normal form pre-computes implications concept, includingpossiblyits unsatisability. normal form reached, commutativity operator ,
using well-known normalization rules, report Appendix make paper
276

fiSemantic Matchmaking Non-Monotonic Reasoning: Description Logic Approach

self-contained. normal form unsatisable concept simply . Every satisable
concept C divided three components: Cnames C Call . component Cnames
conjunction concept names A1 , . . . ,Ah . component C conjunction
number restrictions, two every role (the maximum at-least
minimum at-most role), including every conjunct C form R.,
number restriction ( 0 R) C . component Call conjoins concepts form
R.D, one role R, normal form. call form Conjunctive Normal FormCNF, analogy Propositional Logicand observe CNF
unique (also said canonical), commutativity conjunction.
Moreover, TBox Classic embedded concepts, expanding
denitions, adding right-hand-side concepts inclusions, adding negation
disjoint concept namessee Appendix details. instance, suppose
TBox contains:
1. denition Server Computer ( 2 hasCPU),
2. inclusion Computer ( 1 hasStorageDevice),
3. disjointness assertion disj(AMD, Intel).
Then, concept ServerhasCPU.Intel rewritten Computer( 2 hasCPU)
( 1 hasStorageDevice)hasCPU.(IntelAMD), equivalent former w.r.t.
models TBox. Observe concept name Computer kept rewriting,
since inclusion gives necessary condition ( 1 hasStorageDevice). latter
concept safely conjoined Computermaking inclusion unnecessarybut cannot replace since ( 1 hasStorageDevice) sucient condition Computer.
Instead, Computer ( 2 hasCPU) replaces Server since necessary sucient
condition it. disjoint assertion generates Intel AMD range hasCPU..
rewriting carried concepts, TBox safely ignored
computing subsumption (and satisability). general, unfolding may lead exponential blow-up TBox, making entire computation (unfolding+subsumption) take
exponential time (and space) size initial concepts TBox. Yet exponentialtime computation subsumption likely unavoidable, since even without rewriting,
taking TBox account makes subsumption np-hard (Nebel, 1990).
normal form concepts take TBox embedding account (see Appendix A.2). case, component Cnames Classic concept C contains concept
names Cnames+ negations concept names Cnames . following, denote
CNF concept C w.r.t. simple TBox CNF (C, ). Again, general, size
CNF (C, ) may exponential w.r.t. size C . However, xed,
CNF (C, ) polynomial-size w.r.t. size C i.e., exponential increase comes
TBox unfolding. fact, k maximum size unfolded concept name
(a constant xed), size CNF (C, ) k times size C.
use argument later paper, decouple complexity analysis reasoning
methods matchmaking complexity raised TBox.
ease presentation follows next Sections, adopt simple reference
ontology, pictured Figure 1, used throughout paper. keep representation within ALN , modeled memory quantities number restriction, e.g., 20GB
277

fiDi Noia, Di Sciascio & Donini



CRTmonitor
LCDmonitor




Monitor








=




DVDRecorder





FloppyDisk
StorageDevice





HardDisk

Linux
Solaris
Windows2000
WindowsXp




















OperatingSystem





Browser




Device

Software

WordProcessor


PDA
PC

Computer
=

Computer ( 1 hasStorageDevice) hasStorageDevice.StorageDevice
hasSoftware.Software ( 1 ram)
HomePC PC ( 1 hasSoftware)
(= 1 hasOS) ( 1 hasMonitor) hasMonitor.Monitor
Server Computer ( 2 hasCPU)
ram.( 512 mb) hasStorageDevice.( 20000 mb)
Figure 1: Reference Ontology used examples
( 20000 mb). reasoners specialized ALN , problem, since number n
never expanded n llers (Borgida & Patel-Schneider, 1994; Donini et al., 1997b).
expressive DLs, Concrete Domains (Lutz, 1999) employed represent
quantities.

4. Semantic Matchmaking Using Description Logics
Matchmaking widely used term variety frameworks, comprising severalquite
dierentapproaches. begin Section trying provide generic sound denition matchmaking.
Matchmaking information retrieval task whereby queries (a.k.a. demands) resources (a.k.a. supplies) expressed using semi-structured data
form advertisements, task results ordered (ranked) lists
resources best fullling query.
simple denition implies thatdierently classical unstructured-text Information
Retrieval systemssome structure advertisements expected matchmaking
278

fiSemantic Matchmaking Non-Monotonic Reasoning: Description Logic Approach

system, matchmaking consider xed database-oriented relational structure.
Furthermore, usually database systems provide answers queries include
relevance ranking, instead considered matchmaking process.
Semantic matchmaking matchmaking task whereby queries resources
advertisements expressed reference shared specication conceptualization knowledge domain hand, i.e., ontology.
on, concentrate semantic matchmaking marketplaces, adopting specic
terminology, ease presentation approach. Nevertheless approach applies
generic matchmaking semantically annotated resources.
note denitions Section apply every DL used
describe marketplace (supplies, demands, background knowledge). denote L
generic DL. suppose common ontology supplies demands established,
TBox L. match supply demand could evaluated
according .
First all, remark logic-based representation supplies demands calls
generally Open-world descriptions, is, absence characteristic description supply demand interpreted constraint absence. Instead,
considered characteristic could either rened later, left open
irrelevant user. Note generally open mean specic
characteristic might declared closed. However, closure made
piecewise, using known declarative tool devised Knowledge Representation nonmonotonic reasoning, Defaults DLs (Baader & Hollunder, 1992), Autoepistemic
DLs (Donini, Nardi, & Rosati, 1997a), Circumscription DLs (Bonatti, Lutz, & Wolter,
2006) etc.
analysis recent literature allows categorize semantic matchmaking process
supply Sup demand Dem w.r.t. TBox distinct classes:
exact match: Sup Dem, i.e., Sup Dem Dem Sup, amounts
perfect match, regardlessin semantic based environmentof syntactic dierences, i.e., Sup Dem equivalent concepts (Di Sciascio et al., 2001; GonzalesCastillo et al., 2001).
full match: Sup Dem, amounts demand completely fullled
available supply, i.e., Sup least features required Dem,
necessarily vice versa, matchmaking process symmetric (Di Noia et al.,
2003c); kind match named subsume match Li Horrocks (2003).
plug-in match: Dem Sup; corresponds demand Dem sub-concept
supply Sup,i.e., Dem specic Sup (Sycara et al., 2002; Li & Horrocks,
2003).
potential match: DemSup , corresponds supply demand
something common conicting characteristics (Di Noia et al., 2003c).
relation named intersection-satisable Li Horrocks (2003).
279

fiDi Noia, Di Sciascio & Donini

partial match: Dem Sup , amounts presence conict
demand available supply (Di Noia et al., 2003c). relation
named disjoint Li Horrocks (2003)5 .
stress demands could classied way w.r.t. given supply,
suppliers turn look marketplace nd potential buyers. Hence,
rest paper use term oer denoted symbol Dto mean either supply
Sup demand Dem, term counteroer denoted Cto mean, respectively,
demand Dem supply Sup could match D.
classication still coarse one, relying directly known logical relations
formulae. fact, result matchmaking rank counteroers,
according criteriapossibly explicitso user trusting system would
know contact rst, case failure, next, on. ranking
process satisfy criteria Knowledge Representation approach suggests.
formulate ranking requirements referring properties penalty functions.
Definition 1 Given DL L, two concepts C, L, TBox L, penalty
function three-arguments function p(C, D, ), returns null positive integer.
use penalty functions rank counteroers C given demand (or supply) w.r.t.
TBox . Intuitively, two given counteroers C1 , C2 marketplace, p(C1 , D, ) <
p(C2 , D, ) issuer oer rank C1 better C2 deciding
contact rst. Clearly, 0-penalty ranked best, counteroers
penalties ranked breaking ties. rst property recall Non-symmetric
evaluation proposals.
Definition 2 penalty function p(, , ) non-symmetric exist concepts C,
TBox p(C, D, ) = p(D, C, ).
property evident constraints fullled C vice versa.
Hence, C among top-ranked counteroers list potential partners
D, necessarily appear top list potential partners C.
So, penalty function p(, , ) expected metric distance function.
Secondly, logic used give meaning descriptions supplies demands,
proposals meaning equally penalized, independently
syntactic descriptions.
Definition 3 penalty function p(, , ) syntax independent every triple concepts C1 , C2 , D, TBox , |= C1 C2 p(C1 , D, ) = p(C2 , D, ),
holds second argument , i.e., p(D, C1 , ) = p(D, C2 , )
5. note preferring term partial match instead disjoint, stress match may
still recoverable, disjoint usually meant hopeless situation. Moreover, disjoint
intersection satisable refer set-theoretic semantics concepts Description Logics,
quite hidden far original problems matchmaking. word, technologyoriented problem-oriented. instance, one used Propositional Logic, Three-valued Logic
modeling matchmaking, terms would make sense.

280

fiSemantic Matchmaking Non-Monotonic Reasoning: Description Logic Approach

Clearly, logic admits normal form expressionsas CNF DNF propositional logic, normal form concepts DLs dened previous Sectionusing
normal form computation p(, , ) ensures syntax independence.
Penalties enjoy desirable properties w.r.t. subsumption. reasons explained below, divide penalty functions ranking potential matches
ranking partial (conicting) matches.
Definition 4 penalty function potential matches monotonic subsumption
whenever every issued oer D, every pair counteroers C1 C2 , TBox ,
C1 C2 potential matches w.r.t. , (C1 C2 ), p(C1 , D, )
p(C2 , D, )
Intuitively, denition could read as: C1 C2 C1 penalized
(and ranked) either same, better C2 . phrase, ranking potential
matches monotonic subsumption specic means better. dual property
could stated second argument: D1 D2 counteroer C less likely
fulll characteristics required D1 D2 . However, since scenario is: given
issuer proposal looking match marketplace, rank possible counteroers
C1 , C2 , . . . , best one worst, deal duality
rst second argument p(, , ).
turning partial matches, properties already conict supply demand, picture reverses. Now, adding another characteristic
unsatisfactory proposal may worsen ranking (when another characteristic violated) keep (when new characteristic conict). Note
ranking kept dierent ranking potential matches. all, accepting
discard one characteristics required much worse deciding
proposal try rst among potential ones.
Definition 5 penalty function partial matches antimonotonic subsumption
whenever every issued oer D, every pair counteroers C1 C2 , TBox ,
C1 C2 partial matches w.r.t. , (C1 C2 ), p(C1 , D, )
p(C2 , D, )
Intuitively, C1 C2 C1 penalized (and ranked) either same,
worse C2 . words, ranking partial matches antimonotonic
subsumption specic means worse. property hold
second argument, since concept conjunction commutative.
need distinguish penalty function potential matches one
partial matches, put subscript former (as p ) subscript
latter (as q ).
Clearly, requirements general, leave ample room denition
penalty functions. subtle requirement would penalties change
irrelevant details added, e.g., second-hand computer requested demand
Dem, specication brand CPU, supply Sup penalized
another oer Sup hasCPU.Intel. However, instead delving irrelevance
logic-related issues directly penalties, borrow well-known logical
281

fiDi Noia, Di Sciascio & Donini

reasoning frameworks propositional knowledge representation. detour give us
sound declarative way dening penalties, dealing irrelevance byproduct,
generally bring well-studied non-standard reasoning techniques matchmaking.

5. Concept Abduction
Abduction (Peirce, 1955) well known form commonsense reasoning, usually aimed
nding explanation given symptoms manifestations. introduce Concept Abduction DLs, showing model potential matchmaking DL setting.
Following notation proposed Eiter Gottlob (1995), recall Propositional
Abduction Problem triple H, M, H (Hypotheses) (Manifestations)
sets literals, (Theory) set formulae. solution H, M, Explanation E H E consistent, E |= . adapt framework
DLs follows.
Definition 6 Let L DL, C, D, two concepts L, set axioms
L, C satisable . Concept Abduction Problem (CAP)
given L, C, D, , nding, possible, concept H L C H ,
C H D.
use P symbol generic CAP, denote SOL(P) set
solutions CAP P. Observe denition, limit inputs CAP
satisable concepts C D, since C unsatisable implies CAP solution
all, unsatisable leads counterintuitive results (e.g., C would solution
case). Propositional Abduction extends implication, Concept Abduction extends concept subsumption. dierently propositional abduction, make
distinction manifestations hypotheses, usual abduction
used diagnosis. fact, making hypotheses e.g., properties goods
e-marketplaces, point making distinction. uniformity implies
always trivial solution non-trivial CAP L, C, D, , stated
formally follows.
Proposition 1 Let L DL, let C, concepts L, L-TBox. CD
SOL(L, C, D, ).
Proof. C satisable , fullls requirements Def. 6, rst
one hypothesis second one C tautology.
hand, SOL(L, C, D, ) C denition.
simple interpretation property application domain, i.e., matchmaking,
hypothesize counteroer C exactly specications D,
counteroer trivially meets given specicationsif compatible anyway. However,
solutions CAP equivalent using Concept Abduction matchmaking.
make simple example, suppose already C D. Then, H1 = H2 =
(among others) solutions L, C, D, . Yet, solution H2 = tells issuer
C already meets Ds specications, solution H1 = least
282

fiSemantic Matchmaking Non-Monotonic Reasoning: Description Logic Approach

informative solution point view. Hence, want use abduction highlight
promising counteroers, minimal hypotheses must dened.
Definition 7 Let P =L, C, D, CAP. set SOL (P) subset SOL(P)
whose concepts maximal . set SOL (P) subset SOL(P) whose
concepts minimum length.
Clearly, maximal w.r.t. still minimality criterion, since means
unnecessary hypothesis assumed. proved two measures incomparable.
Proposition 2 exists CAP P two sets SOL (P) SOL (P)
incomparable.
Proof. sucient consider = A1 A2 A3 , C = A1 , = {B A2 A3 }.
logic even propositional. A2 A3 SOL (L, C, D, ), B SOL (L, C, D, ),
neither solution set.
proof highlights that, although -minimality could preferable conciseness,
heavily dependent . fact, every concept H SOL(P), sucient add
axiom H get -minimal solution A. hand, -maximality
drawbacks: concept disjunction present L, single -maximal
solution P, equivalent disjunction solutions SOL(P)not
useful solution. Making analogy Abduction-based Diagnosis (Console, Dupre, &
Torasso, 1991), could say disjunction possible explanations
informative explanation itselfalthough maximal w.r.t. implication. note
nding -minimal solution np-hard TBox depth 1, simple reduction
Set Covering (Colucci, Di Noia, Di Sciascio, Donini, & Mongiello, 2004).
Remark 1 interesting analyze whether concept minimal-rewriting techniquesas
dened Baader, Kusters, Molitor (2000)could employed computing
minimal concept abduction, trying rewrite C D. answer denitely negative
minimal length abduction: length-minimal solution B proof Proposition 2
could obtained rewriting C = A1 A1 A2 A3 . fact, A1 B
equivalent rewriting former concept. Regarding -maximality answer
indirect. fact, present rewriting techniques keep subconcept xed
rewriting process. consider CAP = A1 , C = A2 , = {B A1 A2 }.
equivalent minimal rewriting C B, solution cannot
identied since B cannot separated concept Cthe original oneand concept
H solution CAP. open whether future extensions rewriting might
keep concept xed, cope problem.
third minimality criterion possible DLs admit CNF, L = ALN .
Definition 8 Let P =L, C, D, CAP L admits CNF, assume
concepts SOL(P) CNF. set SOL (P) subset SOL(P) whose concepts
minimal conjunctions, i.e., C SOL (P) sub-conjunction C (at level
nesting) SOL(P). call solutions irreducible.
283

fiDi Noia, Di Sciascio & Donini

turns -minimality includes -maximality -minimality.
Proposition 3 every CAP P L admits CNF, SOL (P) SOL (P)
included SOL (P).
Proof. contraposition, concept H -minimal another concept
H sub-conjunction Hwhich -minimal solution. |H | < |H|, hence H
length-minimal. -maximality: since every sub-conjunction concept
H CNF subsumes H, H -minimal -maximal either.
proof Proposition 2 modied show minimum-length abduced
concepts unique: sucient add another axiom B A2 A3 obtain
another minimum-length solution B . less obvious result subsumptionmaximal solutions unique, least non-simple TBoxes: Let P = L, C, D,
= {A2 A3 A1 }, C = A3 , = A1 . A1 A2 -maximal
solutions.
5.1 Irreducible Solutions ALN -simple TBoxes
assume TBox CAP P = L, C, D, always simple one. Finding
irreducible solution easier nding -minimal -maximal solution, since
greedy approach used minimize set conjuncts solution. example,
starting C D, could delete one redundant conjunct time (at level
role quantication nesting) D, using |D| calls subsumption-check procedure.
However, algorithm would interesting theoretical purposes. Instead,
adapt structural subsumption algorithm (Borgida & Patel-Schneider, 1994) collects
concepts H conjoined C order C H subsumed D.
algorithm operates concepts CNF. following algorithm, abbreviate
fact concept appears conjunct concept C C (thus extending
meaning conjunctions concepts).
Algorithm ndIrred (P);
input: CAP P = L, C, D, , L =ALN , simple , C CNF w.r.t.
output: concept H SOL (P) (where H = means C D)
variables: concept H
begin
H := ;
0. C
return ;
1. every concept name
1.1
C
H := H A;
2. every concept ( n R)
2.1
concept ( R) C n
H := H ( n R);
3. every concept ( n R)
284

fiSemantic Matchmaking Non-Monotonic Reasoning: Description Logic Approach

concept ( R) C n
H := H ( n R);
4. every concept R.E
4.1
exists R.F C
4.1.1
H := H R.ndIrred (ALN , F, E, );
4.1.2
else H := H R.E;
/* H SOL(P), might reducible */
5. every concept Hi H
H without Hi SOL(P)
delete Hi H;
6. return H;
end.
3.1

Theorem 1 Given CAP P, ndIrred (P) returns concept H, H , H
irreducible solution P.
Proof. rst prove Step 5, computed concept H SOL(P), is,
C H C H hold. fact, observe CNF (D, ) H, since
conjuncts H come conjunct CNF (D, ). Hence, H since CNF (D, )
equivalent models . Adding C sides subsumption yields
C C H, since assume C , C H . proves
rst condition H SOL(P). Regarding condition C H D, suppose
hold: then, least one conjunct CNF (D, ) appear CNF (C H, ).
possible construction, since H contains every conjunct CNF (D, )
CNF (C, ). Therefore, conclude H SOL(P). proved
H computed Step 5 solution P, note Step 5 deletes enough
conjuncts make H irreducible solution.
rst part algorithm (before Step 5) easily follows well-known structural subsumption algorithms (Borgida & Patel-Schneider, 1994). Step 5 applies greedy approach, hence
computed solution, although irreducible, might minimal.
explain need reducibility check Step 5 help following
example.
Example 1 Let = {A1 A2 , A3 A4 }, let C = A3 , = A1 A4 . L
propositional part AL. normal form C C = A3 A4 , = A1 A2 A4 .
Step 5 algorithm computes H = A1 A2 , must still reduced
A1 . worth noticing H already subsumption-maximal since H A1 . However,
-minimality syntactic property, requires removal redundant conjuncts.
complexity, aim proving nding irreducible solution
complex subsumption ALN . polynomial algorithm (w.r.t. sizes C,
) cannot expected anyway, since subsumption AL (the sublanguage ALN
without Number Restrictions) simple conp-hard (Nebel, 1990; Calvanese, 1996).
However, Nebel (1990) argues unfolding TBox exponential depth
285

fiDi Noia, Di Sciascio & Donini

hierarchy ; depth grows O(log |T |) size increasesa bushy
deep TBoxthen unfolding polynomial, algorithm.
generally, suppose xed: unrealistic hypothesis
marketplace application, since represents ontology domain,
expect vary supplies demands enter exit marketplace. case,
analyze complexity ndIrred considering C size input
problem.
Theorem 2 Let P = L, C, D, CAP, L =ALN , simple TBox.
nding irreducible solution P problem solvable time polynomial size
C D.
note problem exponential-size unfolding might mitigated Lazy
Unfolding (Horrocks & Tobies, 2000). Using technique, concept names TBox
unfolded needed.
5.2 Abduction-Based Ranking Potential Matches
dene penalty function p potential matches based following intuition:
ranking potential matches depend many hypotheses made
counteroers order transform full matches.
Definition 9 Given simple TBox ALN , dene penalty function potential match counteroer C given oer D, C concepts
ALN , follows:
.
p (C, D, ) = |ndIrred (ALN , CNF (C, ), CNF (D, ), )|

(1)

Note that, computing p , concept H actually computed ndIrred
intermediate step. makes easy devise explanation facility, actual
obtained ranking immediately enriched logical explanation; thus improving
users trust interaction matchmaking system.
prove p accordance properties higlighted previous Section.
Since computation Formula (1) starts putting concepts C, normal form,
recall normal form C summarized Cnames C Call , similarly
D. Without ambiguity, use three components sets conjoined concepts.
Theorem 3 penalty function p (i) non-symmetric, (ii) syntax independent,
(iii) monotonic subsumption.
Proof.
(i) Non-symmetricity easily proved providing example: p (A, , ) =
p ( , A, ). fact, ndIrred (ALN , A, , ) nds H1 = solution (A without
hypothesis) ndIrred (ALN , , A, ) nds H2 = A. Recalling | | = 0,
|A| = 1, get rst claim.
(ii) Syntax independence follows fact normal forms used Formula (1),
already said normal forms unique commutativity conjunction.
286

fiSemantic Matchmaking Non-Monotonic Reasoning: Description Logic Approach

(iii) Monotonicity subsumption proved analyzing conditions subsumption ALN . concept C subsumed concept C whenever conditions
hold. condition, analyze changes behavior ndIrred , proving
provided solution H adds conjuncts. Recall monotonicity subsumption applied potential matches, hence assume C C
consistent D. Since ndIrred recursive, proof induction quantication nesting (QN) C . C QN equal 0, C conjunction
atomic conceptsnames, negated names, number restrictions. conditions
subsumption following:
rst condition Cnames+ C names+ . Hence, Step 1.1 ndIrred ,
number concept names added H respect names added H
decrease, |H | |H| considering names. Regarding negated names,
observe contribute solution ndIrred , since come
disjointness axiom positive name (that contributes).
second condition every number restriction C , either
number restriction appears C , strengthened (an at-least increases, atmost decreases) C . Hence, number restrictions added Steps 2.1 3.1 H
either many added H, less. Again, considering number
restrictions |H | |H|.
two cases prove basis induction (C QN equal 0). Suppose
claim holds concepts C QN n less, let C QN n + 1. Clearly,
case C least one universal role quanticationcall R.F . condition
subsumption C C following:
Either every universal role quantication R.F C role R, must
hold F F , universal role quantication R C. former
case, observe ndIrred recursively called6 Step 4.1.1 arguments F , E,
F , E; call , respectively, solutions returned ndIrred . Observe
QN F n less, hence inductive hypothesis |I | |I|. Since Step 4.1.1
adds R.I R.I H H, |H | |H|. instead universal
role quantication R C, Step 4.1.2 adds R.E H. C contain
role quantication R, Step 4.1.2 adds R.E H , H cannot
longer H case. role quantication R.F C , Step 4.1.1
makes recursive call arguments F , E. case, solution returned
length less equal |E|, hence length H cannot longer
length H case.
summary, C C case length H increases respect
length H. proves monotonicity subsumption p .
Intuitively, could say monotonicity subsumption potential matches means
specic C is, lower penalty, better ranking w.r.t. D.
6. findIrred called once, concepts CNF one universal role quantication
role R.

287

fiDi Noia, Di Sciascio & Donini

preciselybut less intuitivelywe say rank C w.r.t. cannot worsen
C made specic. Hence, given oer D, TBox , sequence increasingly specic counteroers C1 C2 C3 assigned sequence
non-increasing penalties p (C1 , D, ) p (C2 , D, ) p (C3 , D, ) . . . prove
sequences well-founded, bottom element zero, reached case subsumption.
Proposition 4 p (C, D, ) = 0 C D.
Proof.
Recall Section 3.1 concepts length zero,
ndIrred returns C potential match (Step 0 ndIrred ).
Hence, p (C, D, ) = 0 concept whose length computed Formula (1)
. construction ndIrred , returned call
ndIrred (ALN , CNF (C, ), CNF (D, ), ) CNF (C, ) CNF (D, ),
holds (see Borgida & Patel-Schneider, 1994) C D.
Moreover, could prove adding C details irrelevant leaves
penalty unaected, adding C details relevant lowers Cs penalty.
Note Formula (1) take account normal form C, D,
forget itwe use empty TBoxwhen calling ndIrred . explain choice
aid example.
Example 2 Given = {A A1 A2 }, let = Demand two following
supplies: C1 = A2 , C2 = . Observe CNF (D, ) = A1 A2 , CNF (C1 , ) =
A2 , CNF (C2 , ) = . used following formula compute penalty
.
p (C, D, ) = |ndIrred (ALN , C, D, )|

(2)

ran algorithm ndIrred (ALN , C1 , D, ) ndIrred (ALN , C2 , D, ),
Step 5 would get, respectively,
H1 = A1
H2 = A1 A2
Step 5 ndIrred would return H1 = H2 = A, hence C1 C2 would receive
penalty. However, argue C1 closer C2 is, contains characteristic (A2 ) implicitly required D, C2 not. instead call
ndIrred (ALN , CNF (C1 , ), CNF (D, ), )
ndIrred (ALN , CNF (C2 , ), CNF (D, ), ), get solutions H1 H2 aboveand
Step 5 delete conjunct, since = . Therefore, C1 gets penalty 2, C2
gets penalty 3, highlighting specied C1 w.r.t. C2 .
generally, say reducibility step (Step 5 ndIrred ) attens solution
specic conjuncts, leaving TBox implicit representation
characteristics, ones already present supply present. Therefore,
making empirical decision, consider TBox normal form C D,
exclude reductions Step 5 ndIrred .
288

fiSemantic Matchmaking Non-Monotonic Reasoning: Description Logic Approach

Remark 2 Although denition Concept Abduction could appear similar Concept
Dierence, so. note generically speaking, name Concept Abduction
appeals logic, Concept Dierence appeals algebra (although Dierence
multiple solutions L includes universal role quantication). precisely, recall
(Teege, 1994) dierence dened as: C = max {E L : (E D) C} provided
C D. specialized denition dierence (Brandt, Kusters, & Turhan, 2002)
refers DLs ALC ALE. dened as: C = min {E L : (E D)
(C D)}where C, E ALC, ALE, minimality w.r.t. preorder specic
normal form extends CNF ALC. TBox taken account.
Instead, solution CAP L, C, D, require C D,
C . general, C let H = C CAP P = L, C, D,
get solutions C H Dwhich obviously solutions P.
Hence C SOL(P), vice versa (see proof Proposition 2 example).
C comparison even possible, since C undened. However,
generic setting, e.g., e-commerce scenario, subsumption demand supply
quite uncommon; oers neither subsumes other.
greater generality, specic application matchmaking, Concept Abduction seems
suited Concept Dierence make basis penalty function.

6. Concept Contraction
C unsatisable , demander accepts retract Ds constraints,
partially matching supplies may reconsidered. However, logic-based approaches
matchmaking Trastour et al. (2002), Sycara et al. (2002), Li Horrocks (2003)
usually exclude case concept expressing demand inconsistent
concept expressing supply, assuming requirements strict ones. contrast,
believe inconsistent matches still useful, especially e-marketplaces.
fact, partial (a.k.a. disjoint) matches basis negotiation process, allowing
user specify negotiable requirementssome could bargained favor
other. negotiation process carried various ways adopting approaches
matchmaking based logic (e.g., Strobel & Stolze, 2002), also, shown
practice Colucci et al. (2005), using Belief Revision. fact, logical formalization
conicting matches, aimed nding still interesting inconsistent matches without
revert text-based hybrid approaches, obtained exploiting denitions
typical Belief Revision. accordance Gardenfors (1988) formalization, revision
knowledge base K new piece knowledge contraction operation,


KA
|= A, followed addition
results new knowledge base KA

KA usually modeled conjunction. call Concept Contraction adaptation
Belief Revision DLs.
Starting C unsatisable TBox , model Concept Contraction
how, retracting requirements C, may still obtain concept K (for Keep)
K satisable . Clearly, user interested he/she must negotiate
start transactiona concept G (for Give up) C G K.
289

fiDi Noia, Di Sciascio & Donini

instance, reference ontology Figure 1, user demands Dem
supplier oers Sup, Dem Sup described follows:
Dem = HomePC hasMonitor.LCDmonitor
Sup = HomePC hasMonitor.CRTmonitor
possible check Sup Dem unsatisable. partial match. Yet,
case, demander gives concept G = hasMonitor.LCDmonitor keeps
concept K = HomePC, K Sup satisable, hence K potentially matches Sup.
formally model Concept Contraction problem follows.
Definition 10 (Concept Contraction) Let L DL, C, D, two concepts L,
set axioms L, C satisable . Concept Contraction
Problem (CCP), denoted L, C, D, , nding pair concepts G, K L L
|= C GK, K satisable . call K contraction C according
.
use Q symbol CCP, denote SOLCCP (Q) set
solutions CCP Q. Observe concept abduction, rule cases
either C unsatisable, correspond counterintuitive situations. note
always trivial solution G, K = C, CCP. solution corresponds
drastic contraction, gives everything C. hand,
C satisable , best possible solution , C, is, give nothing.
Concept Abduction extends Subsumption, Concept Contraction extends satisability
particular, satisability conjunction C D. Hence, results complexity
deciding Satisability given concept carry Contraction.
Proposition 5 Let L DL containing AL, let Concept Satisability w.r.t. TBox
L problem C-hard complexity class C. deciding whether given pair
concepts G, K solution CCP Q =L, C, D, C-hard.
Proof. concept E L satisable w.r.t. TBox CCP L, C, D,
solution , C, C = R.E = R. . Then, L contain least
universal role quantication (to express R.E), unqualied existential role quantication
(to express R. ), conjunction (to express C G K) least unsatisable
concept (otherwise every concept satisable, problem trivializes). minimal, known DL containing constructs DL AL.
gives lower bound complexity Concept Contraction, DLs
include AL. DLs including AL, note proof showing C-hardness
satisability involves concept topmost symbol, proof could adapted
Concept Contraction.
Obviously, user marketplace likely willing give things
possible, minimality contraction G must dened. skip conciseness
denitions minimal-length contraction subsumption-maximal contraction,
dene straightforwardly conjunction-minimal contraction DLs admit normal form
made conjunctions.
290

fiSemantic Matchmaking Non-Monotonic Reasoning: Description Logic Approach

Definition 11 Let Q =L, C, D, CCP L admits CNF. set SOLCCP (Q)
subset SOLCCP (Q) following property: G, K SOLCCP (Q)
sub-conjunction G G holds G , K SOLCCP (Q). call solutions
irreducible.
6.1 Number-Restriction Minimal Contractions
follows focus specic class irreducible solutions CCP ALN , C, D,
exposing interesting characteristics user-oriented point view matchmaking
scenario. dening class explain rationale behind investigation using
following example.
Example 3 Suppose following situation:
demand Dem = HomePC hasMonitor.LCDmonitor
supply Sup = Server hasMonitor.CRTmonitor
|= Dem Sup demander contract Dem order regain satisability
Sup. Two solutions CCP Q = ALN , Dem, Sup, are:


G

= HomePC
K = PC ( 1 hasSoftware) (= 1 hasOS)


hasMonitor.LCDmonitor



G = hasMonitor.LCDmonitor
K = HomePC

G , K demander give specication HomePC; G , K
demander give specications monitor type keeping
rest.
Observe solutions previously dened class SOLCCP (Q),
user-oriented point view, G , K seems reasonable solution Q. Giving
HomePC concept Demand ( 1 hasMonitor) axiom
HomePCthe demander keeps specications requested components,
vacuously true, since K Sup implies hasMonitor. i.e., component admitted.
order make intuition precise, introduce number-restriction-minimal
solutions Q, whose set denote SOLCCPN (Q). Intuitively, solution G, K Q
SOLCCPN (Q) at-least restriction ( n R) G directly conicts
at-most restriction ( R) (with < n) D. Solutions atleast restriction given conicting universal role quanticationse.g., R.A
R.Aare SOLCCPN (Q). Since characteristic number-restrictionminimal solutions enforced level nesting, rst introduce role
path concept ALN . need distinguish concept
(dierent) occurrences another concept, e.g., B = R.A. theory, mark
occurrence number, e.g., A1 R.A2 ; however, since need focus one
occurrence time, mark A.
291

fiDi Noia, Di Sciascio & Donini

Definition 12 Given concept B ALN , occurrence atomic (sub)concept
B, role path B, (B) string that:
(A) = , denotes empty string
(B1 B2 ) = (Bi ), Bi , {1, 2}, concept occurrence
appears
(R.B) = R (B), denotes string concatenation
role path (B) represents role nesting concept occurrence concept
B. Note (B) commutation conjunctions B,
rearrangement universal role quanticationsif atomic, would
true7 . Using previous denition dene SOLCCPN (Q).
Definition 13 Let Q = ALN , C, D, CCP. set SOLCCPN (Q) subset
solutions G, K SOLCCP (Q) ( n R) occurs G exists
( R), < n, occurring CNF (D, ) ( n R) (G) = ( R) (CNF (D, )).
illustrate algorithm ndContract returns solution G, K SOLCCPN (Q)
Q = ALN , CNF (C, ), CNF (D, ), , is, compares two ALN -concepts C,
D, already CNF w.r.t. TBox , computes number-restriction minimal contraction G, K C w.r.t. without considering TBox.
Algorithm ndContract (C, D);
input ALN concepts C, D, already CNF
output number-restriction minimal contraction G, K,
G, K = , C means C satisable
variables concepts G, K, G , K
begin
1. C =
return , ; /* see comment 1 */
2. G := ; K := C; /* see comment 2 */
3. concept name Knames+
exists concept Dnames
G := G A; delete K;
4. concept ( x R) K
concept ( R) < x
G := G ( x R); delete ( x R) K;
5. concept ( x R) K
concept ( R) > x
G := G ( x R); delete ( x R) K;
6. concept R.F Kall
exist R.E Dall (
either ( x R) K x 1
7. readers familiar concept-centered normal form concepts (Baader et al., 2003),
note (B) word UA concept-centered normal form B.

292

fiSemantic Matchmaking Non-Monotonic Reasoning: Description Logic Approach

( x R) x 1 )
let G , K result ndContract (F, E)
G := G R.G ;
replace R.F K R.K ;
7. return G, K;
end.
Let us comment algorithm:
1. case Step 1 cannot occur top level, since assumed C satisable denition CCP. However, may occur inside universal quantication
e.g., C = R.hence, case Step 1 may apply recursive call ndContract ,
issued Step 6 outer call.
2. Step 2, conjunction C assigned K order leave K every
concept removed subsequent steps.
denote G , K solutions CCP Q = ALN , CNF (C, ), CNF (D, ), .
simplied CCP Q , completely unfold C forget it.
Theorem 4 pair G, K computed ndContract (C, D) number-restrictionminimal contraction Q = ALN , CNF (C, ), CNF (D, ), .
Proof.
rst prove G, K solution Q , namely, (i) G K C,
(ii) K satisable. prove (i) induction. base cases, observe
claim true Step 2 construction, Steps 35 conjunct
deleted K, added G. Hence claim holds recursive call
made. inductive case, assume claim holds recursive call Step 6,
is, G K F every concept R.F Kall . Let Gn , Kn values variables G, K
execution Step 6, let Kn concept Kn without R.F . Then,
Step 6 is:
G K = (by assigment)


Gn R.G Kn R.K (by denition )
Gn Kn R.(G K ) (by inductive hypothesis)
Gn Kn R.F (by denition Kn )
Gn Kn (since base case holds Step 6)
C
Regarding (ii), proof induction, inductive hypothesis
K E satisable. Basically, construct interpretation (, ) element x
x (K D)I , show keep constructing without contradictions,
since contradicting concepts deleted K. inductive case, assume
existence interpretation ( , J ) K E (K E)J ,



build joint interpretation ( , ) letting = , = J {x, RI }.
prove G, K number-restriction-minimal solution Q . proof
induction Quantication Nesting (QN) C, dened Section 3.1. Observe
at-least restriction deleted K Step 4 ndContract . base
caseQN (C) = 0, recursive callobserve role path retracted concept
293

fiDi Noia, Di Sciascio & Donini

( n R) G , role path concept ( R) causing Step 4
executed. Hence, claim holds base case. inductive case, assume
claim holds concepts QNs smaller QN (C). Observe concept
F Step 6 concept, since QN smaller least 1. Hence, (occurrence
an) at-least restriction ( x R), role path ( x R) (F ) deleted F , exists
conicting at-most restriction E role path. Since F E occur
inside scope concept R.F , R.E respectively, claim still holds role path
( x R) (C) = R ( x R) (F ).

6.2 Contraction-Based Ranking Partial Matches
dene penalty function p partial matches based following intuition:
partial matches ranked based many characteristics retracted
C make potential matches.
Algorithm penaltyPartial (C, D);
input ALN concepts C, D, already CNF
output penalty partial match C
zero means C satisable
variables integer n
begin
1. C =
return |D|; /* see Comment 1 */
2. n = 0;
3. concept name Cnames+
exists concept Dnames
n := n + 1;
4. concept ( x R) C
concept ( R) < x
n := n + 1;
5. concept ( x R) C
concept ( R) > x
n := n + 1;
6. concept R.F Call
exist R.E Dall (
either (( x R) C ( R) x y) /* see Comment 2 */
( x R) x 1 )
n := n + penaltyPartial (F, E);
7. return n;
end.
algorithm structure similar ndContract : whenever ndContract
removes concepts K, penaltyPartial adds penalties n. two dierences
explained following comments:
294

fiSemantic Matchmaking Non-Monotonic Reasoning: Description Logic Approach

1. Step 1 adds whole length C = . addition ensures antimonotonicity presence , explained Example 4 below.
2. Step 6 penaltyPartial additional condition ( R) x y.
condition necessary penaltyPartial actually remove concepts,
counts them. at-least restriction C contrast at-most
restriction , ndContract removes K, penaltyPartial adds
1 n. Yet, condition Step 6 evaluated, ndContract nds false
at-least restriction removed, penaltyPartial would nd
true, additional condition.
use outcome penaltyPartial dene penalty function partial matches.
Definition 14 Given simple TBox ALN , let penalty function p partial
match counteroer C given oer D, C concepts ALN ,
follows.
.
(3)
p (C, D, ) = penaltyPartial (CNF (C, ), CNF (D, ))
Note since penaltyPartial closely follows ndContract ndIrred , fact Formula (3)
similar Formula (1) Denition 9 might appear. Implicitly, solve
Q = ALN , CNF (C, ), CNF (D, ), , use result computation
penalty function, main dierence Step 1, though. explain dierence
help example.
Example 4 Let Dem 1 Dem 2 two demands, Dem 2 Dem 1 , let Sup
supply, modeled using ontology Figure 1 following:
Dem 1 = PC hasMonitor.CRTmonitor
Dem 2 = PC hasMonitor.
Sup = HomePC hasMonitor.LCDmonitor
Computing ndContract penaltyPartial CNF (Dem 1 , ) CNF (Dem 2 , )
w.r.t. CNF (Sup, ) obtain:
ndContract (CNF (Dem 1 , ), CNF (Sup, )) = hasMonitor.CRTmonitor,
PC hasMonitor.Monitor
penaltyPartial (CNF (Dem 1 , ), CNF (Sup, )) = 1
ndContract (CNF (Dem 2 , ), CNF (Sup, )) = hasMonitor., PC
penaltyPartial (CNF (Dem 2 , ), CNF (Sup, )) = 3
summary, concept conicts every concept, yet concept
R. given up, length zero (or constant), hence length G cannot
directly used antimonotonic penalty function. explains importance
Step 1 algorithm.
show following formal correspondence p Concept Contraction
dened previous Section.
295

fiDi Noia, Di Sciascio & Donini

Theorem 5 Let Q = ALN , C, D, CCP, let G , K solution Q returned ndContract (CNF (C, ), CNF (D, )). G contain occurrence
concept ,
p (C, D, ) = |G |
Proof. function p based penaltyPartial , inspection, whenever penaltyPartial
increments n, ndContract adds atomic concept G . exception Step 1
penaltyPartial , adds |D| ndContract adds G . However, case
explicitly outside claim.
prove p accordance properties highlighted previous Section.
Theorem 6 penalty function p (i) non-symmetric, (ii) syntax independent,
(iii) antimonotonic subsumption.
Proof.
(i) Non-symmetry proven example: let C = ( 1 R) R.A, =
( 2 R) R.A. simplicity, = , observe C already
CNF. show p (C, D, ) = p (D, C, ). fact, former case, observe
C must give everything: at-most restriction contrast at-least
restriction, inside universal quantication contrast R.A
D. Hence, penaltyPartial returns 2 = (1 Step 5) + (1 Step 1 recursive
call). Hence, p (C, D, ) = 2. latter case, instead, at-least restriction
given (and penaltyPartial adds 1 n Step 4), since role llers imposed,
universal quantication compatible (the condition Step 6 false).
Hence p (D, C, ) = 1.
(ii) syntax independency immediate consequence fact Formula (3)
uses normal forms concepts. Since normal forms unique commutativity
conjunctionthat xed imposing order conjunctions, e.g., lexicographic
claim holds.
(iii) antimonotonicity proved induction QN generic concept C
subsumed C; go conditions subsumption, analyzing changes
behavior algorithm C C . Recall goal prove
p (C , D, ) p (C, D, ). order make clear distinction two computations, let n (instance the) variable used call penaltyPartial (C , D),
n used call penaltyPartial (C, D). ease notation, assume C, C
already CNF.
First all, could case C = . case, n = |D| Step 1
penaltyPartial . hand, observe penaltyPartial (C, D) |D|
either C = too, every increase n corresponds atomic concept Dby
inspection Steps 35, recursively Step 6. Therefore, claim holds
base case.
Cnames C names . case, obvious Step 3 penaltyPartial
make increments n w.r.t. n, since C number iterations
increases.
296

fiSemantic Matchmaking Non-Monotonic Reasoning: Description Logic Approach

every number restriction C , either number restriction appears C ,
strengthened (an at-least increases, at-most decreases) C . Note
strengthening number restriction C turn false true condition
increment n Steps 45. instance, passing ( x R) C
( x R) C x x, ( R) < x implies < x .
similar argument holds at-most. Moreover, number restrictions appear
C increase number iterations Steps 45, hence n
increase w.r.t. n claim holds.
three cases prove basis induction (C QN equal 0).
prove case universal role quantication, assuming claim holds QNs less
QN (C ).
every R.F C , either R universally quantied Call ,
R.F Call F subsumed F (with F = F special case subsumption). Roles universally quantied Call quantied C ,
increase number iterations Step 6, hence n increase due
presence. roles specic restriction F , inductive hypothesis assumed hold, since QN (F ) < QN (C ). Hence p (F , E, ) p (F, E, ).
equivalent penaltyPartial (F , E) penaltyPartial (F, E). Moreover,
condition Step 6 true call penaltyPartial (C, D), true
, ( x R) C , hence recursive
penaltyPartial (C , D), since R.F Call

call penaltyPartial (F, E) issued, penaltyPartial (F , E) issued, increasing
n least much n increased, inductive hypothesis. Hence claim holds
inductive case.

7. Matchmaking System
DLs-based approach semantic matchmaking illustrated previous Sections
implemented ALN reasoning engine MaMaS (MatchMaking Service). features
classical inference services DL reasoner, implements algorithms nonstandard services matchmaking presented previous Sections.
MaMaS multi-user, multi-ontology Java servlet based system; available
HTTP service at: http://dee227.poliba.it:8080/MAMAS-tng/DIG, exposes DIG
1.18 compliant interface. basic DIG 1.1 extended cope non standard
services, briey describe additions.
New elements:
Match type detection: <matchType>E1 E2</matchType>- computes match type
according following classication: Exact (equivalence), Full, Plug-in, Potential,
Partial.
8. DIG 1.1 new standardized DL systems interface developed Description Logic Implementation
Group (DIG) (Haarslev & Moller, 2003).

297

fiDi Noia, Di Sciascio & Donini

Concept Abduction: <abduce>E1 E2</abduce> - implements ndIrred .
Concept Contraction: <contract>E1 E2</contract>- implements ndContract .
Ranking Score: <rank type="potential">E1 E2</rank>
<rank type="partial">E1 E2</rank>- computes p (C, D, ) p (C, D, )
presented previous Sections.
New attributes <newKB/>
shared: values used true false. MaMaS, new
knowledge base created, KB uri associated IP address client
host (owner) instantiating KB. shared attribute set false,
owner authorized submit tells statements change KB well submit
asks. case, requests IP addresses dierent owners one
asks. shared attribute set true, restriction set
tells asks statements. True default value.
permanent: values used true false. MaMaS, KB
used 300 seconds, KB automatically released. user wants
maintain KB indenitely, permanent attribute must set true; false
default value.
pointed MaMaS supports simple-TBox, is, concept
axioms concept name left side9 .
using MaMaS matching engine various applications, including emarketplaces, (see e.g., Colucci, Di Noia, Di Sciascio, Donini, Ragone, & Rizzi, 2006;
Colucci et al., 2005) semantic web services discovery (Ragone, Di Noia, Di Sciascio,
Donini, Colucci, & Colasuonno, 2007). delve details applications here,
refer interested reader cited references.
7.1 Experimental Evaluation
hypothesis seek conrm Section approach performs eectively
wide range matchmaking scenarios, i.e., able model commonsense human
behavior analyzing ranking, given request, available oers. Hence experimental
framework relies comparison system behavior versus judgement human users.
Furthermore, although system may allow use weights increase relevance
concepts, following results refer basic unweighted version system,
avoid biasing results due weights introduction.
scenarios tested approach three: apartments rental, date/partner
nding, skill management recruiting agencies. Several ontology design methodologies
proposed (Jones, Bench-Capon, & Visser, 1998); adopted one proposed
N.F. Noy D.L. McGuinness (2001).
9. Notice since MaMaS supports ALN , atomic negation expressed <disjoint/>
groups must contain concepts specialized <impliesc> axiom (sub-concept axiom). Dened
concepts <equalc/> (same-class) admitted disjoint group.

298

fiSemantic Matchmaking Non-Monotonic Reasoning: Description Logic Approach

three scenarios carried thorough domain analysis, starting large
set advertisements taken newspapers descriptions on-line agencies,
designed ontologies describing domain. particular:
Apartments rental ontology made 146 concepts (primitive + dened) 33
roles.
Date/partner matching ontology made 131 concepts (primitive + dened)
29 roles.
Skill matching ontology made 308 concepts (primitive + dened) 38 roles.
scenario selected several announcements. total number used experiments human users 180 (120 oers, 60 requests) apartments rental, 215
(140 oers, 75 requests) skill matching. 100 advertisements Date matching
scenario selected, yet actually distinguish among requests
oers announcements form proles, although included preferences
dating partner. announcements natural language manually
translated DL syntax. created, domain, 50 sets questionnaires.
Questionnaires form one request (a demand supply) 10 oering advertisements. Three groups ten randomly selected volunteers, asked order,
according judgement advertisements, respect given requests.
obtained average users rankings, run sets advertisements system,
gave us set system provided rankings. System rankings included partial
matching advertisements simply ordered worst potential matching advertisement. adopted, reference, standard Vector Space Model (VSM) (Salton & Gill,
1983) system. used terms ontologies attening ontology descriptions, dimensions three separate vector spaces, determined weights using classical F IDF
measure. Similarity results computed using well-known Cosine similarity measure
(Salton & Gill, 1983).
summarize results adopted Rnorm (Bollmann, Jochum, Reiner, Weissmann,
& Zuse, 1985) quality measure system eectiveness. Rnorm dened follows.
Given Sup, nite set descriptions user-dened preference relation
complete transitive, let usr rank ordering Sup induced users preference
relation, let sys system-provided ranking. Rnorm dened as:
Rnorm (sys ) =

S+
1
(1 +
)
+
2
Smax

+ number descriptions pairs better description ranked
system ahead worse one; number pairs worse description ranked
+
maximum possible number + . noticed
ahead better one Smax
+

calculation , , Smax based ranking descriptions pairs
sys relative ranking corresponding descriptions pairs usr . Rnorm values
range [0,1]; value 1 corresponds system-provided ordering available
descriptions either identical one provided human users higher
degree resolution, lower values correspond proportional disagreement
two. three scenarios considered, results presented table 3.
299

fiDi Noia, Di Sciascio & Donini

Domain
Apartments rental
Date/partner matching
Skill matching

MaMaS
0.87
0.79
0.91

VSM
0.48
0.41
0.46

Table 3: Rnorm values: MaMaS: Semantic matchmaking results, VSM: Vector Space Model
results

Although present variability, believe partly due ability
capture domain ontologies design, show approach provides rankings
close human commonsense behavior far better obtained
unstructured text retrieval tools.

8. Conclusion
addressed matchmaking problem descriptions DL perspective.
analyzed semantic-based matchmaking process devised general commonsense
properties matchmaker have. pointed classical inference
services DLs, satisability subsumption, needed useful, may
sucient cope challenges posed matchmaking open environment.
Motivated studied Concept Abduction Contraction novel nonmonotonic inferences DLs suitable modeling semantic-based matchmaking scenarios.
analyzed minimality criteria, proved simple complexity results. presented
reasonable algorithms classifying ranking matches based devised inferences
terms penalty functions, proved obey properties individuated.
Although several measures may determined compute score
promising matches proposal logical foundations empyrically shown
able well simulate commonsense human reasoning. Obviously, semanticbased approach, rely well-designed ontologies able model
application domain considered.
Based theoretical work implemented fully functional matchmaking
facilitator, oriented generic e-marketplace advertisements semantic-based
web-service discovery, exploits state art technologies protocols, is,
best knowledge, running system able cope Concept Abduction
Concept Contraction problems.
specic reference earlier work authors subject, Di Sciascio et al.
(2001) dened matchmaking satisability concept conjunction. Denitions potential
match near-miss i.e., partial match, terms abduction belief-revision outlined, need ranking matches motivated, work Di Sciascio, Donini,
Mongiello (2002). Di Noia et al. (2003b, 2003c) proposed semantic-based categorization
matches, logic-based ranking matches within categories, properties ranking functions
have, framework E-marketplaces. extended revised version
works (Di Noia, Di Sciascio, Donini, & Mongiello, 2004). Di Noia et al. (2003a) intro300

fiSemantic Matchmaking Non-Monotonic Reasoning: Description Logic Approach

duced Concept Abduction DLs presented algorithms solve Concept Abduction
Problem ALN . Colucci et al. (2003) proposed Concept Abduction Concept
Contraction inferences suitable semantic-matchmaking explanation services. Cal
et al. (2004) proposed basic approach adopting penalty functions ranking, framework dating systems. Colucci et al. (2004) proposed initial results algorithms based
truth-prexed tableau solve Concept Abduction Contraction problems ALN .
Colucci et al. (2005) showed services usefully adopted semanticmatchmaking nding negotiation spaces E-Commerce setting. use
proposed inference services renement purposes semantic-matchmaking process
outlined work Colucci et al. (2006).
current research oriented investigation algorithms expressive
DLs development tableaux-based system proposed inference services.

Acknowledgments
grateful anonymous reviewers comments suggestions improved
quality paper. thank Andrea Cal Diego Calvanese useful discussions,
particular suggesting term penalty function. Simona Colucci, Azzurra Ragone,
Marina Mongiello people SisInfLab gave us invaluable help suggestions.
research supported EU FP-6 IST STREP TOWL co. 026896.

Appendix A. Rules Normal Form
normal form concept obtained repeatedly applying rules two
following Sections, rule applicable level nesting concepts inside R.C.
A.1 Rules Involving Subconcepts
following rules, symbol l.h.s. considered associative
commutative operator; hence, instance, writing ( n R) ( R) second
rule, read concepts ( n R) ( R) appear order inside
conjunction two concepts.

C
( n R) ( R) n >

( n R) ( R) ( n R) n >
( n R) ( R) ( n R) n <
R.D1 R.D2 R.(D1 D2 )
R. R. ( 0 R)
301

fiDi Noia, Di Sciascio & Donini

A.2 Rules Involving Concept TBox

C C
C C
B1 Bk disj (A, B1 , . . . , Bk )
Usually concept resulting application rules referred
expansion, unfolding TBox.
A.3 Properties Normal Form
Let C concept Classic, let C concept obtained C repeatedly
appying rules. Let |C|, |C | denote size C, C respectively. proved
(Borgida & Patel-Schneider, 1994) that:
1. |C | polynomially bounded |C|, C computed time O(|C|2 );
2. every concept resulting application rules equivalent C, w.r.t.
models TBox.
consequence latter property, C unsatisable normal form . Then,
consequence former property, unsatisability decided polynomial time
(Borgida & Patel-Schneider, 1994). fact |C | polynomially bounded |C|
intuitively related Nebel (1990) form TBoxes, bushy
deep. precise denition given Colucci et al. (2004).

References
Agarwal, S., & Lamparter, S. (2005). smart - semantic matchmaking portal electronic
markets. Proceedings 7th International IEEE Conference E-Commerce
Technology 2005.
Arens, Y., Knoblock, C. A., & Shen, W. (1996). Query Reformulation Dynamic Information Integration. Journal Intelligent Information Systems, 6, 99130.
Baader, F., Calvanese, D., Mc Guinness, D., Nardi, D., & Patel-Schneider, P. (Eds.). (2003).
Description Logic Handbook. Cambridge University Press.
Baader, F., & Hollunder, B. (1992). Computing extensions terminological default theories.
Proceedings ECAI Workshop Knowledge Representation Reasoning, pp.
3052.
Baader, F., Kusters, R., Borgida, A., & Mc Guinness, D. (1999). Matching Description
Logics. Journal Logic Computation, 9 (3), 411447.
Baader, F., Kusters, R., & Molitor, R. (2000). Rewriting concepts using terminologies.
Proceedings Seventh International Conference Principles Knowledge
Representation Reasoning (KR2000), pp. 297308.
302

fiSemantic Matchmaking Non-Monotonic Reasoning: Description Logic Approach

Benatallah, B., Hacid, M.-S., Rey, C., & Toumani, F. (2003). Request Rewriting-Based Web
Service Discovery. International Semantic Web Conference, Vol. 2870 Lecture
Notes Computer Science, pp. 242257. Springer.
Berners-Lee, T., Hendler, J., & Lassila, O. (2001). semantic web. Scientic American,
248 (4), 3443.
Bollmann, P., Jochum, F., Reiner, U., Weissmann, V., & Zuse, H. (1985). LIVEProject-Retrieval experiments based evaluation viewpoints. Proceedings
8th Annual International ACM/SIGIR Conference Research Development
Information Retrieval, pp. 213214. ACM, New York.
Bonatti, P., Lutz, C., & Wolter, F. (2006). Description logics circumscription.
Proceedings Tenth International Conference Principles Knowledge Representation Reasoning (KR2006), pp. 400410.
Borgida, A., Brachman, R. J., McGuinness, D. L., & A. Resnick, L. (1989). CLASSIC:
Structural Data Model Objects. Proceedings ACM SIGMOD International
Conference Management Data, pp. 5967.
Borgida, A., & Patel-Schneider, P. F. (1994). Semantics Complete Algorithm
Subsumption CLASSIC Description Logic. Journal Articial Intelligence
Research, 1, 277308.
Brandt, S., Kusters, R., & Turhan, A. (2002). Approximation dierence description logics. Proceedings Eight International Conference Principles
Knowledge Representation Reasoning (KR2002), pp. 203214. MK.
Buchheit, M., Donini, F., Nutt, W., & Schaerf, A. (1998). rened architecture terminological systems: Terminology = schema + views. Articial Intelligence, 99 (2),
209260.
Cal, A., Calvanese, D., Colucci, S., Di Noia, T., & Donini, F. M. (2004). description logic
based approach matching user proles. Proceedings 17th International
Workshop Description Logics (DL04), Vol. 104 CEUR Workshop Proceedings.
Calvanese, D. (1996). Reasoning Inclusion Axioms Description Logics. Proceedings
Twelfth European Conference Articial Intelligence (ECAI96), pp. 303307.
John Wiley & Sons.
Calvanese, D., De Giacomo, G., & Lenzerini, M. (1998). Decidability Query
Containment Constraints. Proceedings Seventeenth ACM SIGACT
SIGMOD SIGART Symposium Principles Database Systems (PODS98), pp.
149158.
Colucci, S., Di Noia, T., Di Sciascio, E., Donini, F., & Mongiello, M. (2003). Concept Abduction Contraction Description Logics. Proceedings 16th International
Workshop Description Logics (DL03), Vol. 81 CEUR Workshop Proceedings.
Colucci, S., Di Noia, T., Di Sciascio, E., Donini, F., & Mongiello, M. (2004). Uniform
Tableaux-Based Approach Concept Abduction Contraction ALN. Proceedings 17th International Workshop Description Logics (DL04), Vol. 104
CEUR Workshop Proceedings.
303

fiDi Noia, Di Sciascio & Donini

Colucci, S., Di Noia, T., Di Sciascio, E., Donini, F., & Mongiello, M. (2005). Concept
Abduction Contraction Semantic-based Discovery Matches Negotiation
Spaces E-Marketplace. Electronic Commerce Research Applications, 4 (4),
345361.
Colucci, S., Di Noia, T., Di Sciascio, E., Donini, F., Ragone, A., & Rizzi, R. (2006).
semantic-based fully visual application matchmaking query renement B2C
e-marketplaces. 8th International conference Electronic Commerce, ICEC 06,
pp. 174184. ACM Press.
Console, L., Dupre, D., & Torasso, P. (1991). Relationship Abduction
Deduction. Journal Logic Computation, 1 (5), 661690.
Devambu, P., Brachman, R. J., Selfridge, P. J., & Ballard, B. W. (1991). LASSIE:
Knowledge-Based Software Information System. Communications ACM, 34 (5),
3649.
Di Noia, T., Di Sciascio, E., Donini, F., & Mongiello, M. (2003a). Abductive matchmaking
using description logics. Proceedings Eighteenth International Joint Conference Articial Intelligence (IJCAI 2003), pp. 337342.
Di Noia, T., Di Sciascio, E., Donini, F., & Mongiello, M. (2003b). Semantic matchmaking
P-2-P electronic marketplace. Proc. Symposium Applied Computing (SAC
03), pp. 582586. ACM.
Di Noia, T., Di Sciascio, E., Donini, F., & Mongiello, M. (2003c). system principled
Matchmaking electronic marketplace. Proc. International World Wide Web
Conference (WWW 03), pp. 321330. ACM, New York.
Di Noia, T., Di Sciascio, E., Donini, F., & Mongiello, M. (2004). system principled Matchmaking electronic marketplace. International Journal Electronic
Commerce, 8 (4), 937.
Di Sciascio, E., Donini, F., & Mongiello, M. (2002). Knowledge representation matchmaking P2P e-commerce. Atti dellVIII Convegno dellAssociazione Italiana di
Intelligenza Articiale, Siena.
Di Sciascio, E., Donini, F., Mongiello, M., & Piscitelli, G. (2001). Knowledge-Based System Person-to-Person E-Commerce. Proceedings KI-2001 Workshop
Applications Description Logics (ADL-2001), Vol. 44 CEUR Workshop Proceedings.
Donini, F. M. (2003). Complexity reasoning. Description Logics Handbook, chap. 3.
Cambridge University Press.
Donini, F. M., Lenzerini, M., Nardi, D., & Nutt, W. (1991). Complexity Concept Languages. Allen, J., Fikes, R., & Sandewall, E. (Eds.), Proceedings
Second International Conference Principles Knowledge Representation
Reasoning (KR91), pp. 151162. Morgan Kaufmann, Los Altos.
Donini, F. M., Nardi, D., & Rosati, R. (1997a). Autoepistemic description logics. Proc.
IJCAI 97, pp. 136141.
304

fiSemantic Matchmaking Non-Monotonic Reasoning: Description Logic Approach

Donini, F. M., Lenzerini, M., Nardi, D., & Nutt, W. (1997b). complexity concept
languages. Information Computation, 134, 158.
Eiter, T., & Gottlob, G. (1995). Complexity Logic-Based Abduction. Journal
ACM, 42 (1), 342.
Finin, T., Fritzson, R., McKay, D., & McEntire, R. (1994). KQML Agent Communication Language. Proceedings Third International Conference Information
Knowledge Management (CIKM94), pp. 456463. ACM.
Gardenfors, P. (1988). Knowledge Flux: Modeling Dynamics Epistemic States.
Bradford Books, MIT Press, Cambridge, MA.
Gil, Y., & Ramachandran, S. (2001). PHOSPHORUS: Task based Agent Matchmaker.
Proc. International Conference Autonomous Agents 01, pp. 110111. ACM.
Gonzales-Castillo, J., Trastour, D., & Bartolini, C. (2001). Description Logics Matchmaking Services. Proceedings KI-2001 Workshop Applications Description Logics (ADL-2001), Vol. 44. CEUR Workshop Proceedings.
Grimm, S., Motik, B., & Preist, C. (2006). Matching Semantic Service Descriptions
Local Closed-World Reasoning. European Semantic Web Conference, pp. 575589.
Haarslev, V., & Moller, R. (2003). dig description logic interface. Proceedings
International Workshop Description Logics (DL-2003), Vol. 81 CEUR Workshop
Proceedings.
Horrocks, I., & Tobies, S. (2000). Reasoning axioms: Theory practice.. Proceedings Seventh International Conference Principles Knowledge Representation Reasoning (KR2000), pp. 285296.
Jacobs, N., & Shea, R. (1995). Carnot Infosleuth Database Technology Web.
Proceedings ACM SIGMOD International Conference Management
Data, pp. 443444. ACM.
Jones, D., Bench-Capon, T., & Visser, P. (1998). Methodologies ontology development.
J. Cuena, editor, Proc. 15th IFIP World Computer Congress, pp. 6275, London,
UK. Chapman Hall.
Karacapilidis, N., & Moraitis, P. (2001). Building Agent-Mediated Electronic Commerce
System Decision Analysis Features. Decision Support Systems, 32, 5369.
Kieling, W. (2002). Foundations preferences database systems. Proceedings
Twentyeight International Conference Large Data Bases (VLDB 2002).
Klusch, M., Fries, B., Khalid, M., & Sycara, K. (2005). Owls-mx: Hybrid owl-s service
matchmaking. Proceedings 1st Intl. AAAI Fall Symposium Agents
Semantic Web.
Kuokka, D., & Harada, L. (1996). Integrating Information Via Matchmaking. Journal
Intelligent Information Systems, 6, 261279.
Li, L., & Horrocks, I. (2003). Software Framework Matchmaking Based Semantic
Web Technology. Proc. International World Wide Web Conference (WWW 03),
pp. 331339. ACM, New York.
305

fiDi Noia, Di Sciascio & Donini

Lutz, C. (1999). Reasoning concrete domains. Dean, T. (Ed.), Proceedings
Sixteenth International Joint Conference Articial Intelligence (IJCAI99), pp.
9095, Stockholm, Sweden. Morgan Kaufmann, Los Altos.
Madhavan, J., Bernstein, P., & Rahm, E. (2001). Generic schema matching cupid.
Proceedings Twentyseventh International Conference Large Data Bases
(VLDB 2001), pp. 4958.
Maes, P., Guttman, R., & Moukas, A. (1999). Agents Buy Sell. Communications
ACM, 42 (3), 8191.
Motro, A. (1988). VAGUE: User Interface Relational Databases Permits Vague
Queries. ACM Transactions Oce Information Systems, 6 (3), 187214.
Nebel, B. (1990). Terminological Reasoning Inherently Intractable. Articial Intelligence,
43, 235249.
N.F. Noy D.L. McGuinness (2001). Ontology Development 101: Guide Creating
First Ontology. Stanford Knowledge Systems Laboratory Technical Report KSL01-05.
Paolucci, M., Kawamura, T., Payne, T., & Sycara, K. (2002). Semantic Matching Web
Services Capabilities. Semantic Web - ISWC 2002, No. 2342 Lecture Notes
Computer Science, pp. 333347. Springer-Verlag.
Peirce, C. . (1955). Abduction induction. Philosophical Writings Peirce, chap. 11.
J. Buchler.
Ragone, A., Di Noia, T., Di Sciascio, E., Donini, F., Colucci, S., & Colasuonno, F. (2007).
Fully Automated Web Services Discovery Composition Concept Covering
Concept Abduction. International Journal Web Services Research (JWSR),
4 (3).
Raman, R., Livny, M., & Solomon, M. (1998). Matchmaking: distributed resource management high throughput computing. Proceedings IEEE High Performance
Distributed Computing Conf., pp. 140146.
Salton, G., & Gill, M. M. (1983). Introduction Modern Information Retrieval. McGrawHill, New York.
Schmidt-Schau, M., & Smolka, G. (1991). Attributive Concept Descriptions Complements. Articial Intelligence, 48 (1), 126.
Shvaiko, P., & Euzenat, J. (2005). survey schema-based matching approaches. Journal
Data Semantics, 4, 146171.
Strobel, M., & Stolze, M. (2002). Matchmaking Component Discovery Agreement Negotiation Spaces Electronic Markets. Group Decision Negotiation,
11, 165181.
Sycara, K., Paolucci, M., Van Velsen, M., & Giampapa, J. (2003). RETSINA MAS
infrastructure. Autonomous agents multi-agent systems, 7, 2948.
Sycara, K., Wido, S., Klusch, M., & Lu, J. (2002). LARKS: Dynamic Matchmaking Among
Heterogeneus Software Agents Cyberspace. Autonomous agents multi-agent
systems, 5, 173203.
306

fiSemantic Matchmaking Non-Monotonic Reasoning: Description Logic Approach

Teege, G. (1994). Making dierence: subtraction operation description logics.
Proceedings Fourth International Conference Principles Knowledge
Representation Reasoning (KR94), pp. 540550. MK.
Trastour, D., Bartolini, C., & Priest, C. (2002). Semantic Web Support Business-toBusiness E-Commerce Lifecycle. Proc. International World Wide Web Conference
(WWW) 02, pp. 8998. ACM.
Veit, D., Muller, J., Schneider, M., & Fiehn, B. (2001). Matchmaking Autonomous
Agents Electronic Marketplaces. Proc. International Conference Autonomous
Agents 01, pp. 6566. ACM.
Wang, H., Liao, S., & Liao, L. (2002). Modeling Constraint-Based Negotiating Agents.
Decision Support Systems, 33, 201217.
Wright, J. R., Weixelbaum, E. S., Vesonder, G. T., Brown, K. E., Palmer, S. R., Berman,
J. I., & Moore, H. H. (1993). Knowledge-Based Congurator Supports Sales,
Engineering, Manufacturing AT&T Network Systems. AI Magazine, 14 (3),
6980.

307


