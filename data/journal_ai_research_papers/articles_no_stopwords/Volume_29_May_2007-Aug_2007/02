journal artificial intelligence

submitted published

solution guided multi point constructive search job
shop scheduling
j christopher beck

jcb mie utoronto ca

department mechanical industrial engineering
university toronto canada

abstract
solution guided multi point constructive search sgmpcs novel constructive
search technique performs series resource limited tree searches search
begins empty solution randomized restart solution
encountered search small number elite solutions maintained
search introduce technique perform three sets experiments
job shop scheduling first systematic fully crossed study sgmpcs
carried evaluate performance impact parameter settings second
inquire diversity elite solution set showing contrary expectations
less diverse set leads stronger performance finally compare best parameter
setting sgmpcs first two experiments chronological backtracking limited
discrepancy search randomized restart sophisticated tabu search set
well known benchmark demonstrate sgmpcs significantly
better constructive techniques tested though lags behind tabu search

introduction
number metaheuristic evolutionary approaches optimization described
solution guided multi point searches example genetic mimetic population solutions maintained used basis search
generation created combining aspects current generation search therefore
guided existing solutions population contains number individual solutions
search makes use multiple points search space traditional single point metaheuristics tabu search augmented similar way tsab tabu
search nowicki smutnicki maintains elite pool consisting small number
best solutions found far search whenever basic search reaches
threshold number moves without finding best solution search restarted one
elite solutions higher level search guided multiple existing solutions
though guidance somewhat different genetic
solution guided multi point constructive search sgmpcs framework designed
allow constructive search guided multiple existing suboptimal solutions
instance randomized restart techniques gomes selman kautz
framework consists series tree searches restricted resource limit
previous conference workshop publications sgmpcs referred simply multi point constructive search beck heckman beck beck b empirical evidence
importance solution guidance motivated change name reflective important
differences work existing tree search techniques
c

ai access foundation rights reserved

fibeck

typically maximum number fails resource limit reached search restarts
difference randomized restart sgmpcs keeps track small set elite
solutions best solutions found search restarted starts
empty solution randomized restart one elite solutions
undertake first fully crossed systematic empirical study sgmpcs particular section investigate different parameter settings impact search performance makespan minimization variant job shop scheduling indicate guidance elite solutions contributes significantly
performance somewhat unexpectedly smaller elite set size
better performance indeed elite set size one showed best performance
motivates subsequent experimentation diversity elite set section
contrary expectation consistent elite set size one
less diverse elite set stronger performance discussed depth section
two sets experiments call question extent exploitation
multiple points search space important performance sgmpcs
final experiment section compares best parameter settings found first two
experiments chronological backtracking limited discrepancy search harvey
randomized restart state art tabu search watson howe whitley
set well known benchmarks sgmpcs significantly outperforms constructive search methods perform well tabu
search
contributions follows
introduction systematic experimental evaluation solution guided multipoint constructive search sgmpcs
investigation importance diversity elite set performance
sgmpcs
demonstration sgmpcs significantly performs chronological backtracking limited discrepancy search randomized restart benchmark set job
shop scheduling

solution guided multi point constructive search
pseudocode basic solution guided multi point constructive search
shown initializes set e elite solutions enters
loop iteration probability p search started empty solution
line randomly selected elite solution line former case
best solution found search better worst elite solution replaces
worst elite solution latter case replaces starting elite solution r
better r individual search limited maximum number fails
incurred optimal solution found proved overall bound
computational resources e g cpu time number fails reached best elite
solution returned
elite solutions initialized search technique use
independent runs randomized texture heuristic employed


fisolution guided multi point constructive search

sgmpcs


















initialize elite solution set e
termination criteria unmet
rand p
set upper bound cost function
set fail limit l
search l
better worst e
replace worst e
end
else
r randomly chosen element e
set upper bound cost function
set fail limit l
search r l
better r
replace r
end
end
end
return best e
sgmpcs solution guided multi point constructive search

main search see section backtracking done upper bound placed
cost function without upper bound run solution though probably one
quite low quality initial set solutions e best solutions inserted
elite set primary goal initialization quickly populate elite set
previous work beck shown spending effort run
good starting solutions e g via backtracking search significantly improve overall
performance number runs impact variance quality among
initial solutions high best starting solution large elite set much better
small elite set difference alone sufficient skew experiments
measured impact different elite set sizes overall performance mitigate
effect generate fixed number elite solution candidates e choose
e best interesting direction future work adaptively determine best time
transition elite pool generation main search
search
lines search r l function standard tree search randomization
limited number fails l r guided solution r search function
returns best solution found indication whether search space
exhausted given large enough fail limit individual search completely search
space therefore completeness depends policy setting
increasing fail limit see experiment section sgmpcs able


fibeck

optimal solutions prove optimality place restrictions
search allowing tree traversal technique used particular experiment
chronological backtracking limited discrepancy search harvey
r search guided reference solution r guiding solution
simply used value ordering heuristic search randomized variable
ordering heuristic specifying value assigned variable one
reference solution provided still domain variable
search tree created asserting series choice points form hv xihvi
xi vi variable x value assigned v given importance variable
ordering heuristics constructive search expect order choice points
impact search performance sgmpcs therefore use variable ordering
heuristic choose next variable assign choice point formed value
assigned reference solution value reference solution inconsistent
heuristically chosen value formally let reference solution r set variable
assignments hv x hv x hvm xm n n number
variables variable ordering heuristic complete freedom choose variable v
assigned xi dom vi hvi xi r choice point made x x
otherwise xi
dom vi value ordering heuristic used choose x dom v
need account possibility x
dom vi reference solution
necessarily valid solution later sgmpcs search process take simple
example reference solution cost constrain search
better solution reach reference solution rather via constraint propagation
reach dead end different solution
technique starting constructive search reference solution quite general
existing high performance variable ordering heuristics exploited addressing
case xi
dom vi make assumptions changes constraint model
may made reference solution originally found particular
means elite solution could solution relaxation full
setting bounds cost function
individual search lines place upper bound cost function
bound impact set solutions therefore solutions may
enter elite set intuitions constructive search metaheuristics differ
appropriate choice upper bound standard tree search optimization
discrete cost function usual use c upper bound c
best solution found far higher bound would expand search space
without providing heuristic benefit contrast standard metaheuristic
search usually restricted enforcing upper bound cost acceptable states
search allowed travel worse states order hopefully better ones
consequence common replace elite solution better necessarily
best known solution found since elite solutions used heuristically guide search
even solutions best known provide heuristic guidance
two perspectives two policies
global bound set upper bound search cost c


fisolution guided multi point constructive search

local bound starting empty solution set upper bound
equal one less cost worst elite solution starting elite
solution set upper bound one less cost starting solution

constraint programming back propagation extent placing bound
cost function domain reductions decision variables previous experiments
sgmpcs optimization strong back propagation job shop
scheduling objective minimizing makespan global bound policy
superior beck weaker back propagation satisfaction
back propagation local bound performs better
beck heckman beck use global bound
policy
related work
sgmpcs directly inspired tsab tabu search nowicki smutnicki noted tsab elite pool consisting small number best
solutions found maintained search whenever basic tabu search stagnates
reaches threshold number moves without finding best solution
search restarted one elite solutions tabu list modified
search restarted follow different search path basic mechanism
adapted constructive search used sgmpcs number years tsab
state art job shop scheduling recently
taken tsab tsab makes sophisticated use
elite pool nowicki smutnicki depth analysis tsab see
work watson howe whitley
sgmpcs performs series resource limited tree searches clear behaviour related extensive work randomized restart gomes et al horvitz
ruan gomes kautz selman chickering kautz horvitz ruan gomes selman gomes fernandez selman bessiere hulubei osullivan
indeed setting p probability searching empty solution
randomized restart technique observed search effort chronological
backtracking given variable ordering forms heavy tailed distribution intuitively
means randomly chosen variable ordering non trivial chance resulting
small large cost solution instance solution
found threshold amount effort beneficial restart search different
variable ordering ordering non trivial probability quickly leading
solution
number techniques make use randomized heuristic backtracking prestwich jussien lhomme dilkina duan havens
form hybrid local search tree search allow exploration search space
constrained standard tree search approaches differ sgmpcs
fundamental level use multiple existing solutions guide search


fibeck

experiment parameter settings
primary purpose experiment understand impact different parameter settings performance sgmpcs present fully crossed
experiment evaluate impact varying parameters sgmpcs
sgmpcs parameters
elite set size number elite solutions maintained search
key parameter controlling extent multiple points search space
exploited sgmpcs seem significant experimentation
elite set size metaheuristic community anecdotally hybrid tabu search
elite set smaller six performs much worse larger elite sets job shop
scheduling experiment elite set sizes
proportion searches empty solution p parameter controls
probability searching empty solution versus searching one elite
solutions high p value behaviour similar randomized restart
indeed p randomized restart one reason p parameter
included sgmpcs intuition impact diversity
elite pool higher p value diverse elite pool solutions
unrelated current elite solutions likely enter pool see
experiment intuition contradicted empirical study
p
fail limit sequence resource limit sets number fails allowed
tree search rather constant limit faced tuning
limit gomes et al following work kautz horvitz ruan gomes selman
adopt dynamic restart policy limit number fails changes
solving look two simple fail limit sequences seq
luby fail limit sequence optimal sequence satisfaction condition knowledge solution distribution luby sinclair
zuckerman sequence follows
fail limit first second searches fail third search
fails sequence independent outcome searches
whether search empty solution guided elite solution
polynomial poly fail limit initialized reset whenever
best solution found whenever search fails best solution bound
grows polynomially adding fail limit value chosen give
reasonable increase fail limit iteration tuning done determine
value luby limit poly fail limit independent choice
search empty solution elite solution
jean paul watson personal communication



fisolution guided multi point constructive search

backtrack method finally noted style individual tree search
limited chronological backtracking whether search begins empty solution
elite solution choice search performed particular
backtracking bt factor standard chronological backtracking limited discrepancy
search lds harvey case search limited fail limit
described
experimental details
experimental job shop scheduling jsp instances n job
shop scheduling consists set n jobs consisting complete ordering
activities activity duration specified resource must
execute ordering activities job represents chain precedence constraints
activity cannot start preceding activity job completed activity
begins execution must execute complete duration e pre emption allowed
unary capacity resources meaning resource used one
activity time optimal solution jsp sequence activities
resource union job sequences resource sequences acyclic
makespan time start earliest job end latest job
minimized jsp np hard garey johnson received extensive study
operations artificial intelligence literature jain meeran

experimental instances twenty instances generated
existing generator watson barbulescu whitley howe durations
activities independently drawn uniform probability machine
routings generated create work flow job visits first machines second machines within two machine sets routings
generated randomly uniform probability work flow jsps used
shown difficult jsps random machine routings watson
run cpu minute time instance solved
times independently given parameter configuration implemented
ilog scheduler run ghz dual core amd opteron gb ram
running red hat enterprise linux
experiment dependent variable mean relative error mre relative
best solution known instance mre arithmetic mean
relative error run instance
mre k r

x x c k r c k
r k
c k



rr kk

k set instances r set independent runs different random
seeds c k r lowest cost found instance k run r c k
lowest cost known k instances generated experiment
best known solution found tested variations used
preliminary experiments
instances best known solutions available author



fibeck

variable ordering heuristic chooses pair activities resource
sequence texture heuristics beck fox used identify resource
time point maximum contention among activities choose pair
unordered activities branching two possible orders heuristic randomized
specifying hresource time pointi pair chosen uniform probability
top critical pairs starting search elite solution heuristic
used choose pair activities sequenced ordering found solution
asserted standard constraint propagation techniques scheduling nuijten
laborie le pape used

fully crossed experimental design implemented consisting four factors e p seq
bt total cells cell runs
instances time limit run minutes
generated cpu days
analysis variance anova mre seconds shows factors
interactions significant p anova shown table
factor
e
p
bt
seq
e p
e bt
p bt
e seq
p seq
bt seq
e p bt
e p seq
e bt seq
p bt seq
e p bt seq
residuals

df

















sum sq

















mean sq

















f value
















pr f
e
e
e
e
e
e
e
e
e
e
e
e

e
e

table summary analysis variance found r statistical package r
development core team factors interactions significant
p

attain detailed view tukey hsd test r development core
team performed factors tukey hsd allows comparison multiple means controlling multiple testing table shows
significance level p
smaller e significantly better larger e


fisolution guided multi point constructive search

p p significantly different however
significantly lower mre p p smaller value p better
luby fail limit sequence significantly better poly sequence
chronological backtracking significantly better lds
e
p
seq
bt



luby poly
chron lds

table independent tukey hsd tests factor significance level
test parameter p b means incurs lower mre
b difference mre values statistically significant parenthesis
e indicate statistically significant difference mre
finally table presents five best five worst parameter settings determined
mre cpu seconds interesting note five worst settings
p corresponds pure randomized restart
e

p
bt
seq
mre
five best parameter settings
chron luby
chron luby
chron poly
chron luby
chron poly
five worst parameter setting
chron poly
chron poly
chron poly
chron poly
chron poly

table best worst parameter combinations experiment mre
graphical representation experiment impractical however
statistical analysis performance set parameter values
seconds evolution performance time reflected
given arbitrariness second time limit valid question wonder
would change given different limit address concern provide
graphical sense present graphs experimental one
parameter varied others held best values parameters
two values e seq bt display two different values e well
elite set size e figure shows varying elite set size
parameter settings follows p seq luby bt chron differences


fibeck

levels e conclusion lower e better performance
seen hold time limits less seconds fact superiority
small e visible early search seconds
gaps among begin narrow


sgmpcs e p seq luby bt chron
sgmpcs e p seq luby bt chron
sgmpcs e p seq luby bt chron
sgmpcs e p seq luby bt chron
sgmpcs e p seq luby bt chron
sgmpcs e p seq luby bt chron

mean relative error
















time secs







figure mean relative error sgmpcs set makespan jsps size
elite set varied
given importance diversity elite solution sets within metaheuristic literature performance elite size somewhat surprising
seems contradict original intuitions motivations sgmpcs
return point experiment
probability search empty solution p figure displays
varying p holding parameter values constant e seq luby
bt chron dramatic performance p pure
randomized restart technique settings p performance
order magnitude better p
unlike experiments e values observe change relative
strengths different parameter settings different time limits p
best performance time limits low limits p appears perform
p p later latter two parameter values better performance
p note apparent contradiction statistical significance findings
mre value achieved p seconds achieved p values less
seconds



fisolution guided multi point constructive search



sgmpcs p e seq luby bt chron
sgmpcs p e seq luby bt chron
sgmpcs p e seq luby bt chron
sgmpcs p e seq luby bt chron
sgmpcs p e seq luby bt chron

mean relative error
















time secs







figure mean relative error varying p values sgmpcs makespan jsps
table explained fact interaction among parameters
p performs better values rest parameters
fail sequence seq plots comparing two different fail sequences shown figure
p bt chron two different e values e e
run times less cpu seconds poly fail sequence performs better
luby sequence conditions threshold luby performs better
backtracking method bt finally figure displays varying backtracking method parameters p seq luby e e
chronological backtracking clearly superior performance
time limits compared lds
summary
experiment demonstrates job shop scheduling makespan minimization
best performing parameter settings sgmpcs small elite set relatively low
probability starting search empty solution luby fail limit sequence
chronological backtracking general robust changes time limit
placed runs
one careful interpreting number reasons
shown anova parameters statistically significant interactions
directly seen performance p e figure


fibeck



sgmpcs poly e p bt chron
sgmpcs luby e p bt chron
sgmpcs poly e p bt chron
sgmpcs luby e p bt chron

mean relative error
















time secs







figure mean relative error makespan jsps two different fail sequences
e e

statistically significant effect factors exception
poor performance p performance different parameter settings
displayed graphs wildly varying differences among
levels different factors may statistically significant may practically
significant advantage sgmpcs suggests fine tuning
parameters really necessary sgmpcs somewhat robust sense
small changes parameters small changes performance
exception p
presented single job shop scheduling
makespan minimization comment applicability
section

experiment impact elite set diversity
sgmpcs designed number intuitions impact diversity performance likely effect different parameter settings performance particular
test following intuitions
higher e tend higher diversity strict relationship
possible solutions e identical


fisolution guided multi point constructive search



sgmpcs lds e p seq luby
sgmpcs lds e p seq luby
sgmpcs chron e p seq luby
sgmpcs chron e p seq luby

mean relative error
















time secs







figure mean relative error luby fail limit chronological backtracking lds makespan jsps

higher p value tend increase diversity since higher p increases proportion searches empty solution lead wider exploration
search space therefore diverse elite set
extent exploitation multiple points search space important
sgmpcs reflected performance sets different levels
diversity important simultaneously share search effort among
number regions search space would expect higher levels diversity
would perform lower levels threshold diminishing returns
measuring diversity
disjunctive graph pinedo standard representation job shop scheduling
activity node precedence constraints relating activities
job directed conjunctive arcs pair activities different jobs
resource disjunctive arc arc directed
way solution disjunctive arc must oriented one direction graph
contains conjunctive arcs acyclic
following work watson beck howe whitley measure diversity
elite pool mean pair wise disjunctive graph distance binary variable
introduced disjunctive constraint one value represents one orientation
arc value opposite orientation solution therefore


fibeck

represented assignment disjunctive graph variables distance
pair solutions simply hamming distance disjunctive graph
variable assignments given elite set take mean pair wise distance measure
diversity
clearly measure well formed e assume diversity
elite set size
initial evaluation diversity
initial evaluation diversity simply measure diversity instances subset parameter values used experiment sgmpcs solver
instrumented calculated pair wise hamming distance whenever solution
inserted elite set
figure displays diversity elite set time different elite set sizes
expected higher elite set size higher diversity however interesting
note stability diversity first seconds diversity set changes
little quality solutions see figure continues improve


mean pair wise hamming distance





sgmpcs e p seq luby bt chron
sgmpcs e p seq luby bt chron
sgmpcs e p seq luby bt chron
sgmpcs e p seq luby bt chron
sgmpcs e p seq luby bt chron
















time secs







figure diversity measured mean pair wise hamming distance among solutions
elite set different elite set sizes
figure shows diversity changing p values contrary expectations
higher p values exhibit lower diversity analysis shows primary cause
pattern way elite solutions replaced search starts
elite solution improved solution replaces starting solution fail
limit relatively low starting solution high probability closest


fisolution guided multi point constructive search

elite solution improved solution therefore replacing starting elite solution
relatively small impact overall diversity contrast search starts
empty solution worst elite solution replaced improved solution
demonstrate difference replacement policy significantly lower elite
pool diversity searches start empty solution diversity decreases
increasing p


mean pair wise hamming distance






sgmpcs p e seq luby bt chron
sgmpcs p e seq luby bt chron
sgmpcs p e seq luby bt chron
sgmpcs p e seq luby bt chron
sgmpcs p e seq luby bt chron














time secs







figure diversity measured mean pair wise hamming distance among solutions
elite set values p

manipulating diversity
motivated interpretation figure section experiment
manipulation diversity changing elite solution replacement rule three
levels diversity defined follows
low diversity regardless whether search starts elite solution empty
solution improved solution replaces worst elite one distance criteria
used initialization phase follow used
elite solutions independently generated without constraining makespan
e best solutions inserted elite set
medium diversity standard elite set replacement rules used experiment
defined section used


fibeck

high diversity search starts empty solution closest elite solution
replaced improving solution found search starts elite solution starting solution replaced noted latter rule
replacement closest solution high probability therefore two rules
almost equivalent replacing closest solution initialization
phase e solutions generated inserted elite pool additional
e solutions generated one solutions better worst
elite solution solution inserted elite set replacing closest elite
solution
verify manipulations indeed affect diversity elite set expected
conduct initial experiment subset parameter space
instances experiment hardware software configurations solved
instance times diversity condition varying e p
rather fully crossed experiment set e varied p
set p varied e
figures demonstrate manipulations affect diversity
elite set expected different diversity levels two e values
two p values displaying data impractical interesting note
high low diversity conditions effect diversity parameters disappears
little variation diversity e p varied two diversity
conditions


mean pair wise hamming distance





high e p seq luby bt chron
high e p seq luby bt chron
medium e p seq luby bt chron
medium e p seq luby bt chron
low e p seq luby bt chron
low e p seq luby bt chron
















time secs







figure diversity measured mean pair wise hamming distance among solutions
elite set different diversity levels e e



fisolution guided multi point constructive search



mean pair wise hamming distance




high p e seq luby bt chron
high p e seq luby bt chron
medium p e seq luby bt chron
medium p e seq luby bt chron
low p e seq luby bt chron
low p e seq luby bt chron
















time secs







figure diversity measured mean pair wise hamming distance among solutions
elite set different diversity levels p p

experimental details
verified indeed three different diversity settings test
impact different diversity levels performance sgmpcs perform fully
crossed experiment three independent variables e takes values
p takes values diversity
div taking values low medium high corresponding manipulations described
conditions use chronological backtracking luby fail limit sequence
experimental details including instances hardware software
cpu second time limit heuristics propagators evaluation criteria
mre experiment see section

fully crossed experimental design cells cell
runs instances minute time limit
generated cpu days
summary analysis variance shown table demonstrate
factors interactions significant p tukey hsd test r
development core team significance level p done
factors summarized table tukey hsd indicate


fibeck

experiment lower e better though case significant
difference e e
p significantly worse p turn significantly worse
p recall experiment p significantly different
p
lower diversity better medium turn better high diversity
factor
e
p
div
e p
e div
p div
e p div
residuals

df









sum sq









mean sq









f value








pr f
e
e
e
e
e
e
e

table summary analysis variance found r statistical package r
development core team factors interactions significant
p

e
p
div



low medium high

table independent tukey tests factor diversity experiment
significance level test parameter p
finally table presents parameter values five lowest five
highest mre note previous best set parameter values e p
div med incurs slightly worse mre e p div low
summary
experiment diversity addressed number intuitions
expected larger elite set higher elite set diversity
contrary expectations higher probability searching empty solution
decreases diversity able impact directly due
p value rather different elite set replacement rules
finally importantly appears diversity elite set negatively
correlated performance lower diversity higher performance


fisolution guided multi point constructive search

e
p
div
mre
five best parameter settings
low

med
low

low

low

five worst parameter setting
med
low

low

med
low


table best worst parameters diversity experiments
calls question extent sgmpcs performance
exploiting multiple points search space exploitation important
performance would expect higher diversity perform lower diversity
return question section

experiment benchmark comparison techniques
first two experiments concentrated providing basic data performance
different parameter settings sgmpcs initial inquiry reasons underlying
sgmpcs performance experiment turn comparisons sgmpcs
existing heuristic search techniques
experimental details
use three sets well known jsp benchmark instances taillard
set contains instances different sets different size
numbered though instances
used development sgmpcs
five tested
standard chronological backtracking chron non randomized version
texture heuristic employed used together global constraint propagators heuristic randomized one run done
instance
limited discrepancy search lds identical chron except
backtracking lds
see http ina eivd ch collaborateurs etd problemes dir ordonnancement dir ordonnancement html
benchmark instances best known upper lower bounds latest summary
file website dated



fibeck

randomized restart restart randomized restart
randomized texture heuristic global constraint propagators used
experiment backtracking restarts chronological fail
limit used luby limit instance solved times
solution guided multi point constructive search sgmpcs take best parameters experiments e p seq luby bt chron
div low parameter settings sole difference sgmpcs
restart use elite set fact searches guided elite
solution particular use heuristics propagators fail limit sequence
type backtracking instance solved times
iterated simple tabu search sts sts sophisticated multiphase tabu search built model state art tsab nowicki smutnicki
goal simplifying order study components
contribute overall performance watson et al taillard benchmarks sts slightly performs tsab terms solution quality given
equal number iterations use parameters recommended taillard
instances e xa xb pi pd full definition
parameters see work watson et al
time limit run cpu seconds experimental details
including hardware software first four evaluation criteria
experiment see section sts watson et al
c implementation run hardware meaning
direct run time comparison meaningful
constructive search approaches e tested except
sts global bound policy followed see section whenever best solution
found global upper bound cost function modified one less
best cost particular means restart benefits back propagation
cost constraint exactly way sgmpcs

mean best makespan found set shown tables
table shows performance terms finding proving optimal makespan
optimal solution known
comparing constructive search
table sgmpcs dominates constructive
finding lowest makespan judged mean makespan one instance
instance particular instances mean sgmpcs solution better
best solution found restart terms mean relative error sgmpcs outperforms constructive factor
previous experiments use cpu time limit estimated sts
times slower tsab
jean paul watson personal communication



fisolution guided multi point constructive search

prob










mre

lb ub










vs ub

chron












lds












restart
mean
best






















sgmpcs
mean
best





















sts
mean
best






















table taillards instances bold entries indicate best performance
across five instance restart sgmpcs sts
use mean makespan performance measure include best
makespan found solve instance multiple times
indicates optimal makespan found proved
instance final row shows mean relative error relative best known
upper bound

interesting note similar performance lds restart observe
dynamic variable ordering lds performs partial restarts jumping
top tree introduce discrepancy suggests performance
lds dynamic variable orderings may due exploitation heavy tails
phenomenon similar jsp instances section support
idea knowledge relationship commented

prob










mre

lb ub










vs ub

chron












lds












restart
mean
best






















sgmpcs
mean
best






















sts
mean
best






















table taillards instances see caption table
table displays sgmpcs dominates
constructive finding mean makespan better best
makespan found constructive techniques sgmpcs unable


fibeck

solutions good best known upper bound instances terms
mre sgmpcs performs factor

prob










mre

lb ub










vs ub

chron












lds












restart
mean
best





















sgmpcs
mean
best



















sts
mean
best






















table taillards instances see caption table
table displays largest instances instances
one mean solution found sgmpcs better best solution
constructive instance sgmpcs equals performance
lds restart finding cases proving optimal solution overall
sgmpcs factor better terms mre
prob









opt









chron









lds









restart









sgmpcs









sts









table taillard instances optimal solution known
first two columns index optimal makespan respectively
rest columns number runs found
optimal solution parenthesis number times proved optimality recall chron lds run per instance
stochastic however provide fair basis comparison present
assuming produced identical ten runs per instance
sts complete structural characteristics solution imply optimality nowicki smutnicki
solution characteristic found sts able prove optimality
shown two instances tai tai



fisolution guided multi point constructive search

finally table presents number runs able
prove optimal solutions instances known optimal sgmpcs
finds optimal solution least five instances proves optimality least
four instances chron unable prove optimality instances
restart one instance lds able optimal solution
two instances prove one
sgmpcs vs sts
almost instances tables sts performs substantially better sgmpcs many cases mean solution found sts better best found
sgmpcs however seven ten smallest instances table best solution
found sgmpcs good better found sts sgmpcs strictly
better five instances larger however mean makespan found
sts better found sgmpcs instances
recall run cpu seconds include
graphs run time distributions observed performance gap terms
mre sgmpcs sts seconds present time points
seconds words sts substantially performs sgmpcs first seconds
thereafter better solutions rate
table shows one area sgmpcs clearly superior sts
proving optimality solutions sts complete identify
solutions particular structure optimal nowicki smutnicki sgmpcs
able prove optimality within time limit four instances least one run
sts two instances
summary
instances used experiment mean solution found sgmpcs
better best solution found constructive techniques
instances remaining instances sgmpcs performs well lds restart
instance slightly worse lds instance overall terms mean
relative error sgmpcs times better constructive search
different sets
sgmpcs perform well sts terms mean makespan however
smaller best solution able better sts five
instances

discussion future work
demonstrates solution guided multi point constructive search significantly perform existing constructive search techniques solving hard combinatorial
search trails behind state art metaheuristic search section present preliminary ideas regarding reasons observed performance
discussion generality sgmpcs directions extensions sgmpcs


fibeck

sgmpcs work
extent sgmpcs performs existing constructive search approaches solving hard combinatorial search interesting question arising
experiments understanding reasons strong performance speculate
three non mutually exclusive candidates exploitation heavy tails
impact revisiting previous high quality solutions use multiple elite solutions
exploiting heavy tails
sgmpcs restart even p search periodically restarts albeit
value ordering elite solution believe likely therefore
sgmpcs exploits heavy tailed distributions much way randomized restart
gomes et al gomes shmoys
one way test idea reproduce gomes et al original experiment sgmpcs
follows random variable ordering solve instance optimality starting
given sub optimal solution record search effort involved repeat k different random variable orderings large k finally observe frequency distribution
search effort whole experiment repeated different starting solutions
resulting distributions exhibit heavy tailed behaviour reasons randomized
restart able take advantage heavy tailed distributions may shared sgmpcs
currently pursuing experiment
revisiting solutions
believe likely experiment suggested section demonstrate
sgmpcs takes advantage heavy tailed distributions significant performance
advantage sgmpcs restart experiment well poor performance
p parameter setting experiments lead us expect
additional factors needed account performance sgmpcs
believe leading candidate one additional factors impact
revisiting high quality solutions different variable ordering time elite
solution revisited different variable ordering different search tree created
resource limited chronological search visit nodes deep tree resource
limit reached however different variable ordering different set nodes
deep tree therefore within reach search strong
sgmpcs e may indication mechanism responsible strong
performance sampling solutions close elite solution different search trees
primary direction future formalize meaning close within
search tree provide firm empirical foundation investigate impact
revisiting solutions hope adapt significant work fitness distance correlation
hoos stuzle local search literature constructive search

similar reasoning applies use lds



fisolution guided multi point constructive search

exploiting multiple points search space
use multiple solutions specifically balance intensification
diversification viewed important metaheuristic literature rochat
taillard intensification suggests searching region good solutions
diversification suggests searching areas searched furthermore
one important aspects metaheuristics elite solutions
diversity elite set maintained watson
however experiments presented suggest increased diversity
important factor performance sgmpcs best performance achieved
small elite set sizes even experiment elite set size
original motivations sgmpcs say least suspect
may due idiosyncrasies makespan jsp experiments see directly manipulated diversity
indicated better relative performance larger elite set sizes observed
may indication see positive contribution
maintaining multiple viewpoints
speculative note closer look figure may diversity play
role search performance figure shows greatest differences performance
different elite set sizes comes early search relatively easy
improving solution later search performance difference narrows though
close completely within time limit one interpretation pattern early
search relatively easy improve upon existing elite solutions large elite
pool distracts search guiding elite solution significantly worse
best elite solution narrowing performance gap may simply due
fact better solutions harder improve upon regardless
size elite set rate improvement decrease since
lower e better solutions rate slows earlier alternative explanation
maintaining multiple elite solutions positive influence initial
easy phase search better solutions harder diverse elite set
may help search probability least one elite solutions better
solution vicinity rises elite set size experimentation required
investigate intuitions
generality
sgmpcs general technique conducting constructive search nothing sgmpcs
framework specific scheduling constraint programming however
one type used evaluate sgmpcs therefore question practical
utility generality addressed
existing work shows sgmpcs effectively applied optimization
satisfaction quasigroup holes completion beck b heckman
beck job shop scheduling objective minimize weighted tardiness beck
multi dimensional knapsack optimization heckman beck addi explanation accurate adaptive strategy e growing search might worth
investigating



fibeck

tion recent work sellmann ansotegui demonstrates good performance
closely related technique diagonally ordered magic squares sat instances
however sgmpcs performs worse randomized restart though better chronological backtracking magic square instances randomized restart sgmpcs
perform much worse chronological backtracking satisfaction version multidimensional knapsack heckman beck
application sgmpcs variety demonstrates indeed
general technique whose impact applied beyond job shop scheduling
time negative point lack understanding
mechanisms behind sgmpcs performance motivates future work
extending sgmpcs
immediate focus future work understanding reasons performance number ways framework extended
first implied speculations regarding impact diversity section
dynamic parameter learning horvitz et al would appear useful sgmpcs
framework example one could imagine adapting p search depending
relative success searching empty solution versus searching elite solution
second given metaheuristics community working elite solutions
number years number techniques may fruitfully extend sgmpcs example path relinking glover laguna marti pair elite solutions
taken end points local search trajectory path relinking elegant counterpart
sgmpcs two elite solutions chosen variable assignments common
fixed defining sub space variable assignments two solutions differ
unlike path relinking local search constructive search one perform complete search sub space post good removing sub space future
consideration preliminary experiments appear promising
third clause learning techniques originated conflict learning constraint
programming prosser widely used restart state art satisfiability
solvers huang seems natural investigate combining conflict learning
solution guidance techniques may interesting relationship former tries
learn mistakes led dead end latter attempts heuristically
identify correct decisions made
finally work loosely coupled hybrid search techniques share single solutions
carchrae beck easily generalizable share set solutions date rather
able exploit full solution shared technique constructive search
able use bound cost function therefore revisiting solutions
provides way exploit much richer information e full solutions available
hybrid search technique

conclusion
presents first fully crossed study solution guided multi point constructive search set job shop scheduling varied sgmpcs parameter
settings control size elite set probability searching empty

fisolution guided multi point constructive search

lution fail sequence form backtracking diversity level elite set
experiments indicated low elite set sizes low probability searching empty
solution luby fail sequence chronological backtracking low diversity lead
best performance compared best sgmpcs parameters found existing constructive search techniques state art tabu search well known
set benchmark demonstrated sgmpcs significantly outperforms chronological backtracking limited discrepancy search randomized restart
performed tabu search
primary contribution introduction search framework
demonstration significantly perform existing constructive search
techniques secondary contributions include demonstration impact elite set
diversity performance opposite expected e low diversity leads
higher performance identification directions reasons underlying
performance sgmpcs focusing quantification effects heavy tails
impact revisiting solutions different variable orderings exploitation
multiple points search space

acknowledgments
supported part natural sciences engineering
council ilog thanks jean paul watson daria terekhov tom carchrae
ivan heckman lei duan comments early versions preliminary
version parts work previously published beck

references
beck j c multi point constructive search proceedings eleventh international conference principles practice constraint programming cp
pp
beck j c b multi point constructive search extended remix proceedings
cp workshop local search techniques constraint satisfaction pp
beck j c empirical study multi point constructive search constraintbased scheduling proceedings sixteenth international automated
scheduling icaps pp
beck j c fox dynamic structure analysis basis
constraint directed scheduling heuristics artificial intelligence
carchrae beck j c applying machine learning low knowledge control
optimization computational intelligence
dilkina b duan l havens w extending systematic local search job
shop scheduling proceedings eleventh international conference
principles practice constraint programming cp pp
garey r johnson computers intractability guide theory
np completeness w h freeman company york


fibeck

glover f laguna marti r scatter search path relinking advances
applications onwubolu g babu b eds optimization techniques
engineering springer
gomes c p selman b kautz h boosting combinatorial search
randomization proceedings fifteenth national conference artificial intelligence aaai pp
gomes c p fernandez c selman b bessiere c statistical regimes across
constrainedness regions constraints
gomes c shmoys completing quasigroups latin squares structured
graph coloring proceedings computational symposium graph
coloring generalizations
harvey w nonsystematic backtracking search ph thesis department
computer science stanford university
heckman beck j c empirical study multi point constructive search
constraint satisfaction proceedings third international workshop
local search techniques constraint satisfaction
heckman beck j c empirical study multi point constructive search
constraint satisfaction submitted constraints
hoos h stuzle stochastic local search foundations applications
morgan kaufmann
horvitz e ruan gomes c kautz h selman b chickering
bayesian tacking hard computational proceedings
seventeenth conference uncertainty artificial intelligence uai pp

huang j effect restarts efficiency clause learning proceedings
twentieth international joint conference artificial intelligence ijcai
pp
hulubei osullivan b impact search heuristics heavy tailed
behaviour constraints
jain meeran deterministic job shop scheduling past present
future european journal operational
jussien n lhomme local search constraint propagation conflictbased heuristics artificial intelligence
kautz h horvitz e ruan gomes c selman b dynamic restart policies
proceedings eighteenth national conference artifiical intelligence aaai pp
laborie p propagating resource constraints ai
scheduling existing approaches artificial intelligence
le pape c implementation resource constraints ilog schedule library
development constraint scheduling systems intelligent systems engineering


fisolution guided multi point constructive search

luby sinclair zuckerman optimal speedup las vegas
information processing letters
nowicki e smutnicki c fast taboo search job shop
management science
nowicki e smutnicki c advanced tabu job shop
journal scheduling
nuijten w p time resource constrained scheduling constraint satisfaction ph thesis department mathematics computing science
eindhoven university technology
pinedo scheduling manufacturing services springer
prestwich combining scalability local search pruning techniques
systematic search annals operations
prosser p hybrid constraint satisfaction computational
intelligence
r development core team r language environment statistical computing r foundation statistical computing vienna austria isbn
rochat taillard e probabilistic diversification intensification local
search vehicle routing journal heuristics
sellmann ansotegui c disco novo gogo integrating local search complete saerch restarts proceedings twenty first national conference
artificial intelligence aaai pp
taillard e benchmarks basic scheduling european journal
operational
watson j p empirical modeling analysis local search
job shop scheduling ph thesis dept computer science colorado
state university
watson j p metaheuristics failure modes case study tabu search jobshop scheduling proceedings fifth metaheuristics international conference
watson j p barbulescu l whitley l howe e contrasting structured
random permutation flow shop scheduling search space topology
performance informs journal computing
watson j p beck j c howe e whitley l difficulty
tabu search job shop scheduling artificial intelligence
watson j p howe e whitley l deconstructing nowicki smutnickis tsab tabu search job shop scheduling computers
operations




