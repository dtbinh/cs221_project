journal artificial intelligence

submitted published

constraint satisfaction framework executing
perceptions actions diagrammatic reasoning
bonny banerjee
b chandrasekaran

banerjee osu edu
chandra cse ohio state edu

laboratory artificial intelligence
department computer science engineering
ohio state university columbus oh usa

abstract
diagrammatic reasoning dr pervasive human solving powerful adjunct symbolic reasoning language representations reported
contribution building general purpose dr system extension
soar solving architecture work framework dr
modeled process subtasks solved appropriate inference
symbolic representations interaction diagram e perceiving specied information diagram modifying creating objects diagram specied ways
according solving needs perceptions actions dr systems built
far hand coded specic application even rest system built
general architecture absence general framework executing perceptions actions poses major hindrance opportunistically essence
open ended search solving
goal develop framework executing wide variety specied perceptions actions across tasks domains without human intervention observe
domain task specic visual perceptions actions transformed domain taskindependent spatial specify spatial quantied constraint
satisfaction real domain open ended vocabulary properties relations actions involving three kinds diagrammatic objects points curves regions
solving spatial specication requires computing equivalent simplied quantier free expression complexity inherently doubly exponential
represent objects conguration simple elements facilitate decomposition
complex simpler similar subproblems symbolic
solution subproblem expressed concisely quantiers eliminated
spatial low order polynomial time similar previously solved subproblems requires determining similarity two existence mapping
computable polynomial time designing memory storing previously solved facilitate search ecacy idea shown time
complexity analysis demonstrate proposed executing perceptions
actions involved dr tasks two army applications

introduction
reported contribution building solving agents
articial intelligence ai use diagrams much people ai
given almost exclusive emphasis ai language predicate symbolic representations diagrammatic reasoning dr emerging area number
c

ai access foundation rights reserved

fibanerjee chandrasekaran

elds including ai glasgow narayanan chandrasekaran chandrasekaran
kurup banerjee logic barwise etchemendy allwein barwise
psychology tversky tricket trafton dr
one way dealing diagrams dierent issues addressed dierent
researchers reported considers dr solving activity
agent human articial makes use two forms representation spatial
representation form diagrams symbolic representation contains information predicate symbolic form similar logic natural language schematic
dr architecture proposed chandrasekaran et al illustrated
figure

spatial
specification language

spatial

solver


solver
solution
spatial

diagram

solution

inference
rules
symbolic
information
traditional ai
solver

figure diagrammatic reasoning architecture

diagrammatic reasoning solving activity
dr architecture shares idea solving search state space
laird rosenbloom newell newell starting
initial state agent applies operators bring state transitions reach goal
state goal reached decomposed subgoals use general
domain knowledge reaching goal subgoal requires information generated
traditional solving architectures e g soar laird newell rosenbloom
act r anderson inference predicate symbolic representation
dr architecture agent extract information diagrams applying perceptionlike operations addition inference predicate symbolic representation reach
goal subgoal agent create modify objects diagram propose
states goal might reached subsequent perceptions inferences
illustrate conceptualization dr let us consider real world
army commander strategic operations uses terrain map chalk path
troops safely travel one base camp location l another l within given
time information regarding nature terrain e g slow go go
regions altitude dierent parts terrain speed troops travel
dierent kinds terrain estimate maximum repower range enemy
commander veteran eld well aware possibility troops
might ambushed along path enemy might hiding neighboring
regions solving might proceed follows diagram consisting part


fiexecuting perceptions actions diagrammatic reasoning

terrain map interest particular given along peripheries
go regions two points l l see figure commander
draws one shorter paths l l maintaining maximum distance
neighboring go regions see figure b knows kinds spatial relations
points route points enemy could hiding correspond
ambush potential uses knowledge perceive mark portions
path prone ambush due enemies hiding behind neighboring go regions
see figure c portion found path inferred safe length
safe path traversed given time considered suitable path
operation path drawn safe satisfy time constraint another path
drawn see figure analyzed procedure continues paths
exhausted suitable path still found least risky path might considered
operation worst case commander might infer operation
possible similar vein described considered forbus
usher chapman
example noteworthy solver commander opportunistically brings together symbolic knowledge repower range enemies
perception action diagram solve real world phenomenon
characteristic dr whenever used solve dierent domains
economics geometry engineering computer aided design military observe
executing perceptions actions require solving purely spatial
involvement domain knowledge spatial described terms
diagrammatic objects points curves regions spatial properties e g
length curve relations e g point curve involving example perceiving portions path prone ambush due enemies hiding behind mountain
range requires computing set points q curve path c q within
specied distance repower range point p curve mountain
range c see figure b formally written
riskyp ortionsof p ath q c c q c p p c distancelesst han p q
distancelesst han p q distance p q
p point propose general ecient framework spatial
solving autonomously execute perceptions actions dr
mean diagram
definition diagram diagram set labeled objects
located clearly inside e intersection touching common region bounding box
b objects three types points curves regions
definition diagrammatic object diagrammatic object tuple l e
l label type point curve region e spatial extent
spatial extent diagrammatic object set points constituent object


fibanerjee chandrasekaran

given diagram consisting two points l
l three region obstacles

b one shorter paths l l
avoiding obstacles drawn

c portions path prone ambush perceived marked

another path drawn analyzed
risk

figure diagrammatic reasoning army commander nding safe path transporting troops l l within given time

definition diagrammatic image diagrammatic image diagram
set points constituent objects diagram thus
diagram oi l oi oi e oi diagrammatic image given
n


e oi


denition diagram due chandrasekaran et al supports
functional representation diagram articial agent diagram external
medium e g piece computer screen one level image consisting pixels
dierent intensities another level interpreted representation consisting
spatial objects domain interest abstract diagram ideal e points
dimensionless curves thickness etc external diagram points curves
consist least one pixel nite dimensions need interchange
two forms diagrams reasoning interaction purposes rest


fiexecuting perceptions actions diagrammatic reasoning

term diagram refer abstract diagram unless otherwise stated
interested diagrams line drawings color intensity variation
diagrams form substantial class diagrams everyday use
perceptions actions diagrammatic reasoning
definition perception perception act extracting piece information diagram piece information satisfies constraints specified terms
properties relations among existing objects diagram boolean real
number diagrammatic object thus perception p mapping diagram
set booleans rue f alse real numbers set diagrammatic objects
satisfying constraints c
c

p rue f alse



definition action action act introducing object modifying
deleting existing object diagram satisfying constraints specified terms
properties relations among existing objects thus action mapping
diagram set diagrammatic objects satisfying constraints c
c

dd



last couple decades numerous dr systems built dierent applications dierent domains following review well known dr systems
solving agent reasons diagrams review help realize
role perception action dr spatial implicit perceptions
actions
sketchy pisan computer implementation model graph understanding recognizes diagrammatic objects points lines regions vocabulary
properties relations includes coordinate point right inside steeper
bigger vertical change slope touches intersects line border forms border etc
representing conceptual relationships domains thermodynamics economics
domain translator responsible converting domain specic conceptual questions
domain independent graphical relations examples perception supply demand
graph economics include price eects supply demand market price
product requires solving visual point supply equal
demand corresponding spatial compute intersection two curves
price supply line quantity corresponding spatial
compute point curve whose one coordinate given quantity price
directly proportional corresponding spatial check whether slope curve
two points positive constant quantity price inversely
proportional corresponding spatial check whether slope curve
two points negative constant etc actions model required due
nature task examples graphs understood sketchy shown figure



fibanerjee chandrasekaran

graph economics

b graph thermodynamics

figure examples graphs understood sketchy reproduced permission
pisan

figure example deected frame analysis civil engineering redraw
reproduced permission tessler et al



fiexecuting perceptions actions diagrammatic reasoning

redraw system tessler et al combines diagrammatic symbolic reasoning qualitatively determine deected shape frame structure load
structural analysis civil engineering uses vocabulary properties relations including get angular displacement get displacement symmetrical p connected
near left rotate bend translate smooth etc three kinds diagrammatic objects lines splines circles though properties relations domain independent
bend reect assumptions implicit domain task
dened accordingly perceptions actions called inspection manipulation operators system underlying representation combination grid
cartesian coordinates shapes represented grid element
grid corresponds point diagram lines represented set coordinate
points examples perception action include deecting beam direction
load checking whether beam column perpendicular particular rigid
joint etc require solving visual bend beam negative
direction axis corresponding spatial compute curve given slope
given point make angle beam column joint degrees without modifying beam corresponding spatial compute curve makes
particular angle given point given curve get angle beam
column ends connected joint corresponding spatial compute
angle two curves given point etc example deected frame analysis
redraw shown figure
archimedes system lindsay assists human demonstrating theorems
euclidean geometry modifying creating diagrams according instructions
thereafter perceiving inferencing diagram operates two diagrammatic objects points line segments recognizes shapes square triangle path
etc underlying representation array grid perceptions called retrieval
processes dierent classes verify relationship test condition etc
actions called construction processes dierent classes create object
certain properties transform object etc executing perceptions actions require solving spatial create segment parallel given segment
given point rotate object check whether coincides another object etc
example geometry theorem demonstrated archimedes shown figure
diamond jamnik system proving mathematical theorems uses
sequence actions diagrams assisted human prove specic ground instances
generalizes induction uses mixture cartesian topological representations
represent dot equivalent point cartesian representation diagrammatic
object discrete space line area region diagrammatic objects
continuous space elementary shapes row column ell frame constructed
dots derived shapes square triangle rectangle etc constructed
elementary derived shapes vocabulary consists atomic onestep operations e g rotate translate cut join project remove insert
segment etc spatial system composite operations composed
atomic ones draw right angled triangle translate rotate triangle etc
system need execute perceptions information diagram perceived


fibanerjee chandrasekaran

figure example geometry theorem demonstrated archimedes

figure example mathematical theorem proven diamond theorem
nelson



fiexecuting perceptions actions diagrammatic reasoning

human decides actions applied proof search example
mathematical theorem proven diamond shown figure
georep ferguson forbus takes input line drawing vector graphics
representation creates predicate calculus representation drawings spatial relations five primitive shape types recognized namely line segments circular arcs circles
ellipses splines open closed positioned text properties relations
proximity detection orientation detection e g horizontal vertical beside parallelism connectivity e g detecting corner intersection mid connection touch etc
deployed accomplish task underlying representation vector graphics line
drawings systems magi ferguson juxta ferguson forbus
coadd built georep symmetry detection critiquing diagrams
captions producing description units areas tasks course
action diagram respectively georep due limitation task need
execute action examples visual georep include guring cup
contains liquid corresponding spatial compare areas polygons representing cups determine whether gure symmetric corresponding spatial
check whether one polygon congruent reection polygon
etc example ambush analysis georep shown figure

figure example ambush analysis georep reproduced permission
forbus et al

preceding discussion leads observation dr systems require perceiving acting diagrams every perception action requires solving
domain independent spatial thus general purpose dr system solving
applications across multiple domains would require solving large variety
non trivial domain independent spatial spatial described


fibanerjee chandrasekaran

terms three diagrammatic objects points curves regions spatial properties
relations involving

perceptions actions solved dr system typically human developing dr system identies priori solving steps including set perceptions
actions hand codes ecient solving
solving steps need altered future perception arises
developer write another obtaining solution thus need
hand coded perception action clearly inconvenient time consuming developing dr system allow fast easy experimentation
dierent solving strategies drawbacks
magnied goal build general purpose dr system large variety perceptions actions possible feasible ascertain priori
develop store hence goal investigate spatial solver
sps eciently solving spatial implicit perceptions actions without human
intervention
contributions
make following contributions
observe wide variety visual perceptions actions dr applications
transformed domain task independent spatial developed language
specifying spatial e spatial relations actions quantied constraint
satisfaction qcsps rst order logic xed set mathematical logical
operators real domain open ended vocabulary properties relations
actions spatial relation action involving points expressed
operators real variables rst order logic included vocabulary
spatial relation action involving curves regions expressed
relations p c inside p r p point c curve r region
relation action involving points rst order logic included
vocabulary vocabulary grows richer spatial relations actions specied
spatial relation action included vocabulary solvable
sps real qcsps known computationally intractable substantial part
spatial solving literature concentrates constraint satisfaction csps
developed general framework solving spatial specied qcsps
framework bypasses process quantier elimination qe computational bottleneck doubly exponential taking help previously solved similar
spatial symbolic solution expressed
reader keep dr architecture mind shown figure two
solvers main solver referred solver might
human spatial solver referred sps strictly
human intervention solver responsible entire solving strategy including
converting domain specific perceptions actions domain independent spatial sps
responsible solving domain independent spatial receives
solver important get confused roles played two



fiexecuting perceptions actions diagrammatic reasoning

concisely quantiers eliminated spatial low order polynomial time
similar previously solved framework leaves room ecient
convenient incorporating future least two possible directions learning
constraints examples automatic constraint acquisition carefully exploiting rich
portfolio qe
rest organized follows next section discuss language
specifying spatial sps section describes sps section analyzes
computational complexity sps section shows proposed sps
augmented traditional ai solver soar reasoning diagrams two
real world applications finally end discussion conclusion

specification language
section discuss high level language nite extensible human usable
expressive enough describe wide variety spatial relevant dr
specied language accepted input sps solved
without human intervention specication language independent sps e
specication remains unchanged even underlying representation
reasoning strategy sps change
diagrammatic objects
specication language recognizes three kinds diagrammatic objects points curves
regions
point point basic diagrammatic object objects dened terms
set points
curve curve set points approximate curve piecewise linearly
thus curve c approximated sequence n points p p pn c set
points lies constituent line segments e
c p p p p p p p p pn pn
p x x pi pi line segment pi pi call
points p p pn vertex points sake simplicity specication
solver write sequence vertex points p p pn specify curve c
region region set points inside boundary boundary region
closed curve approximated piecewise linearly thus region simple convex
concave polygon simple polygon triangulated point inside
region inside one triangles thus boundary region r approximated
sequence n points p p pn
r p inside p r inside p r inside p r
number triangles region r triangulation r ith triangle
r p x x sake simplicity specication solver
write sequence vertex points p p pn boundary curve specify


fibanerjee chandrasekaran

region r whether sequence vertex points corresponds curve region
determined automatically system context property relation predicate
dene inside section
sps asked recognize kind diagrammatic object obtained
solution spatial achieved function recognize dext
dext external diagram e constituted pixels unlike abstract diagram
example set points behind curve c respect given point p
region object curve object depending nature c location respect
p order recognize output sps colors corresponding set pixels
external diagram pixel predetermined resolution corresponds point
set colored pixels grouped two adjacent pixels belong
group group pixels constitutes diagrammatic object boundary pixels
group determined group consists less three pixels consider
point object group consists two pixels width horizontal
vertical less three pixels consider curve object otherwise
group constitutes region object
vocabulary
unlike certain well known qualitative spatial reasoning calculi e g intersection calculus
egenhofer cardinal direction calculus frank region connection calculus
randell cui cohn interested nding minimal set spatial
relations vocabulary closed set predicates rather vocabulary
closed set operators discussed shortly section spatial
relations actions included vocabulary follows
spatial relation action involving points expressed
xed set operators real variables rst order logic
spatial relation action involving points curves regions expressed
rst order logic xed set operators real variables relation action
relations p c inside p r p point c curve r
region
spatial relation action involving points curves regions expressed
rst order logic xed set operators real variables relation action

thus vocabulary open ended addition properties relations
encouraged cannot easily expressed existing ones observation human often encounters perceptions actions
specied already known ones however large vocabulary helps specify
ones conveniently dr literature pisan tessler et al lindsay jamnik ferguson forbus chandrasekaran et al banerjee
chandrasekaran identied vocabulary properties relations actions
wide usage expressing variety real world spatial dierent
domains vocabulary used starting point specifying
spatial follows examples properties relations actions
vocabulary


fiexecuting perceptions actions diagrammatic reasoning

properties associated kind object properties location
point location closedness length curve location area periphery
region periphery region refers boundary curve user
dene particular shapes e g circle triangle annulus etc curves regions
appropriate reasoning domain dierent shapes might specic
properties radius circle height triangle etc easily associated
objects vocabulary user dr requires solving spatial
concerning discrete set points properties centroid
v ariance set points included vocabulary
relations vocabulary contains widely used relations relational
predicates involving points lef tof p p opof p p collinear p p p
p p p p p p points relation involving points
included vocabulary needed p c p point c curve
fundamental relation involving curve inside p r p point r region fundamental relation involving region vocabulary relation
involving curves regions uses inside relational predicates involving curves regions vocabulary intersect c c intersectionp oints q c c
ouches c c subcurveof c c c c curves subregionof r r
r r regions
actions set predicates identifying emergent objects modications existing objects example ranslate q tx ty returns translation object
tx units along x axis ty units along axis rotate q c returns rotation
object respect point c center degrees anti clockwise direction
ref lect q b returns reection object respect line segment b
e point point b scale q c sx sy returns scaling object
respect point c sx units along x axis sy units along axis curve
region predicates dened corresponding action involving point
predicates inside

language
language solver human articial species spatial
sps internal representations objects properties relations
solving strategies hidden solver specication language
remains unchanged even underlying representation solving strategy
changed use rst order predicate logic specication language previously reported
banerjee chandrasekaran
operators language recognizes set boolean operators set arithmetic operators set relational operators quantiers
brackets used express precedence brackets used
express set often use certain combination operators
etc sake brevity


fibanerjee chandrasekaran

domain language allows solver specify domain set
variables assume values unless otherwise stated domain real plane
point variable real line non diagrammatic variable
functions language recognizes two functions aximize f x c
inimize f x c maximizes minimizes function f respect
variables x satisfying boolean combination constraints c might
involve quantiers returns maximum minimum value f respectively along
conditions variables
quantified constraint satisfaction instance constraint satisfaction csp consists tuple v c v nite set variables
domain c c c k set constraints constraint c consists pair
ri list mi variables ri mi ary relation domain
question decide whether assignment mapping variable
domain element constraints satised variables csp
thought implicitly existentially quantied
useful generalization csp quantied constraint satisfaction
variables may existentially universally quantied instance
qcsp consists quantied formula rst order logic consists ordered list
variables associated quantiers along set constraints qcsp
expressed follows
v vm q xn x v vm x xn
q xn x qn xn q x
qi x xn set quantied variables v vm set free
variables v v vm x xn quantier free expression called matrix
representation quantied expression written sequence quantiers followed matrix referred prenex form example qcsp follows
subcurveof c c p p c p c
c c curves example two constraints
p c
p c
v p variables c c given question
decide whether assignment mapping p element logical
combination constraints satised assignment exists c
subcurve c otherwise
decision function optimization proposed specication
language spatial expressed qcsp v consists variables type
point curve region solving spatial involves
free variables v e variables v quantied deciding
whether exists mapping v satisfying c


fiexecuting perceptions actions diagrammatic reasoning

free variables v computing conditions free variables
mapping v satisfying c exists
thus spatial classied decision function optimization
real domain rst case constitutes decision yields true
false solution second case constitutes function involves computing
diagrammatic object described conditions free variables spatial
requires computing best mapping v satisfying c called
optimization
let us consider example given curve c two points p q spatial
behindcurve q c p dened deciding whether q behind c respect
p might specied deciding whether curve c line segment p q
intersect thus
behindcurve q c p intersect c p q
particular instances q p c solution rue f alse hence
decision see figure particular instances p c generalized
coordinates q e q x solution logical combination
conditions involving x plotted constitutes region object see figure
hence function decision merely requires checking
whether given instance object satises constraints function
requires computing conditions general object satisfy constraints

figure behindcurve decision one points q behind c
respect p one

given curve c two points p q spatial f urthestbehindcurve q
c p dened deciding whether q furthest point behind c respect
p might specied deciding whether q lies behind c respect p


fibanerjee chandrasekaran

figure behindcurve function shaded region r behind c
respect p

distance p q maximum thus
f urthestbehindcurve q c p behindcurve q c p b behindcurve b c p
comparedistance b p q p
comparedistance b c distance b distance c
particular instances q p c solution rue f alse hence
decision particular instances p c generalized coordinates q e
q x solution logical combination conditions involving
x plotted constitutes single point object assuming one
furthest point behind c respect p dependent nature c
distance function dened see figure
alternative way specifying f urthestbehindcurve q c p
explicitly asking maximize distance p q q satises constraint
behindcurve q c p written
f urthestbehindcurve q c p aximize distance q p q behindcurve q c p
outputs conditions involving x constitutes single point object
aximize inimize function assumes pool candidates choose
best satisfy set constraints fact stated explicitly
aximize inimize function makes specication dicult
come cumbersome ip side specication
aximize inimize function cannot used decision
whether particular instance object best candidate satises


fiexecuting perceptions actions diagrammatic reasoning

q

figure f urthestbehindcurve optimization point q
furthest point behind c respect p

constraints cannot computed specication unlike former specication
type computes best candidate pool candidates
called optimization
definition spatial spatial qcsp
variable quantified free type point domain
thus spatial mapping diagram satisfying logical combination constraints c set booleans rue f alse real numbers diagrammatic
objects e
c

rue f alse
solving spatial requires eliminating quantiers solving algebraic equations inequalities arrive simplied expression computational bottleneck
solving spatial quantier elimination qe inherently doubly exponential davenport heintz recently brown davenport
shown real qe doubly exponential even one free variable
polynomials quantied input linear concentrate primarily qe part spatial solving hence solution equivalent
quantifier free expression necessarily simplified one theoretically
best complexity qe achieved far l ki l ki number
polynomials maximum degree coecients real l number
free
variables ki number variables ith quantier block k
ki
number quantied variables basu pollack roy however
complicated yet practical implementation general elaborately
implemented method real qe cylindrical algebraic decomposition cad collins


fibanerjee chandrasekaran

k

hong complexity sd another implemented method qe
virtual substitution weispfenning restricted formulas quantied
variables occur quadratically complexity method doubly exponential
number blocks variables delimited alternations existential universal quantiers thus exist general qe large real world
soon becomes time consuming

spatial solver
concentrate developing ecient sps without sacricing generality
goal design sps bypass general qe much possible
taking help previously solved similar memory obtain
solution set practical developed
limited class describe overall control mechanism sps see
figure
many domains military spatial involve diagrammatic objects
arbitrary shaped e g mountainous regions often cannot approximated enough
well dened shapes solution reliably depend specics shape
example solution nding places behind mountain one
hide enemy depends critically particular shape mountain due
nature domains choose represent curves piecewise linearly regions
polygons piecewise linear curves polygonal regions unions line segments
triangular regions respectively facilitate decomposition complex
simpler similar subproblems observe similar subproblems involving
existential universal quantiers occur regularly spatial solving
process solved one qe e g cad thereby incurring doubly
exponential time minimize enormous computational cost reusing solutions
subproblems previously solved
given spatial specication language sps replaces numerical values symbolic variables transforms symbolic
specication modeling language described shortly progressively replacing
objects predicates base objects predicates internal denitions denition
cannot found ags error halts till provided rst step sps decomposes disjunctions conjunctions subproblems prenex form
see later subproblems similar one
solved solution others computed next searches memory
similar memory contains symbolic corresponding quantier free symbolic solutions mapped one
solution readily obtained reverse mapping corresponding symbolic solution
memory obtaining solution way completely bypasses qe process
computational bottleneck sps thereby reducing computational costs considerably sps cannot map memory sends
classier classies sends appropriate qe classier combination qe borrowed mathematica wolfram
sps solves subproblem subproblem solution stored


fiexecuting perceptions actions diagrammatic reasoning


specification language

convert modeling language search
vocabulary replace terms specification
definitions exists otherwise request definition


modeling language
decompose conjunctions
disjunctions subproblems prenex form

first subproblem
search memory
similar subproblem

match found

memory

match found

compute solution
subproblem
help solution
matched

classifier
combination constraint
solvers quantifier
elimination

subproblem

solution

compute solutions subproblems
solution combine

solution

figure flow diagram spatial solver
memory solution used similar encountered future
thus sps grows ecient solves finally sps computes
solution given combining solutions subproblems
unfortunately quantiers cannot eliminated symbolically reasonable time sps tries prescribed time resorts practical


fibanerjee chandrasekaran

methods techniques especially suited low degree polynomials e g dolzmann
sturm weispfenning approximate methods obtaining subset solution sucient immediate purposes e g ratschan lasaruk sturm
shown integer linear programming e g leyton brown nudelman shoham
satisability testing e g xu hutter hoos leyton brown
best average solver performed carefully exploiting portfolio possibly
poorer average solvers accordingly researchers experimented dierent
ways selecting portfolio solvers see example xu et al pulina tacchella
sayag fine mansour streeter golovin smith gebruers hnich
bridge freuder omahony hebrard holland nugent osullivan
none work involve solving qcsps real domain directly usable
purposes discussed however expect
extend qcsp solvers real domain building smartly
selecting portfolio qcsp solvers promising line future
subproblem deemed symbolically unsolvable prescribed time
specication stored memory future similar directly
subjected practical methods thereby saving prescribed time
modeling language
language described terms underlying representations objects properties relations form readily subjected algebraic
manipulation location point p represented pair x x
coordinates
notation x coordinates point p denoted p x p respectively
distance two points p q given
distance p q



p x q x p q

location curve c represented sequence vertex points p p pn
notation number vertex points curve c denoted c ith vertex
point denoted c ith line segment denoted c c
line segment ls specied pair vertex terminal points x
coordinates ls represented parametrically
fx ls ls x ls x ls x
fy ls ls ls ls
parameter relation p ls p point given
p ls fx ls p x fy ls p
length line segment ls given



fiexecuting perceptions actions diagrammatic reasoning

length ls distance ls ls
length curve c given


c

length c

length c c



location region r represented location periphery
piecewise linear closed curve discussed section internally region triangulated
computable linear time shown chazelle seidel aim
reducing simplifying computations section
notation triangulation number triangles region r denoted r
ith triangle r denoted r
area triangle given
area







x x



note area triangle positive sequence vertex points periphery
given counter clockwise direction otherwise negative area region r given
r

area r



area r



relation inside p p point triangle given
inside p lef tof p
lef tof p ls area ls ls p
ls line segment
action ranslate q c tx ty q x c curve tx ty real numbers given
ranslate q p tx ty q x p x tx q p ty
ranslate q c tx ty c ranslate q tx ty
definition base object base object simplest form diagrammatic object
point simplest form line segment simplest form curve
triangular region simplest form region thus internally three base
objects point line segment triangle
definition base predicate base predicate predicate accepts base
objects arguments
vik discusses implementation mathematica



fibanerjee chandrasekaran

examples base predicates include lef tof p p p p p p ls
inside p p p p p points ls line segment triangular region
c

lemma p c

p c c

proof proof follows representation curve described section
r


lemma inside p r
inside p r

proof proof follows representation region described section
relations included vocabulary internally dened terms base predicates example predicate intersect c c c c curves dened
terms base predicates
intersect c c
c c
c



c

c c j

c j c j

decomposing
definition decomposition decomposition process replacing relational
predicates involving free variables types curve region spatial quantified expression conjunctions disjunctions base predicates taking conjunctions disjunctions front expression expression following conjunctions disjunctions subproblem
example decomposition intersect c c c c
occurs follows
intersect c c c c
c



c

c c j

c j c j bef ore decomposition

c c
j c c c j c j



c



c

j

af ter decomposition

intersect c c c j c j

intersect c c c j c j subproblem however question
c c
arises intersect c c j intersect c c c j c j
replace
theorem equivalent decomposition
contain following forms


fiexecuting perceptions actions diagrammatic reasoning

f

p p c inside p r

f

p p c inside p r

f

p inside p r inside p r

f

p inside p r inside p r

complement f

complement f

c curve r r regions c r r free variables
proof discussed section framework p c inside p r two
fundamental relations relation involving curve region specied
framework point quantiable variable quantiers boolean operators sucient express boolean expression
thus spatial involving curves points regions logical
combination smaller following form
qp rel p c q rel
spatial involving regions points curves logical combination smaller following form
qp rel p c q rel inside inside
spatial involving curves regions points logical combination
smaller following form
qp rel p c rel p r
q rel rel inside inside
spatial involving two curves c c points logical combination
smaller following form
qp rel p c rel p c
q rel rel
spatial involving two regions r r points logical combination smaller following form
qp rel p r rel p r
q rel inside inside rel inside inside
symbolically solved total two ways directly
decomposing p x c p p pn n pi xpi ypi c au


fibanerjee chandrasekaran

u ai xai yai r q q qm qi xqi yqi r b b bv
v bi xbi ybi turned solutions two ways equivalent
except four cases stated theorem statement note f
specication computing whether curve c entirely inside region r let
lsi ith line segment c n j j th triangular region r
j found
p p c inside p r

p n
p lsi j inside p j

p n
j p lsi inside p j

n
j p p lsi inside p j

c entirely inside r necessary line segments c
inside triangle r line segment c span across multiple triangles r c
still inside r figure shows example c inside r line segment
c spans across two triangles r case solution
rue computed directly f alse computed via decomposition
rst case f theorem statement explained similarly forms f f
rewritten follows
f

p p c inside p r
p p c inside p r r b r

f

p p c inside p r
p p c inside p r r b r

b rectangular region boundary containing diagram discussed section
note rewritten forms equivalent decomposition
f specication computing whether region r entirely inside region
r let ith triangle r v j j th triangular
region r j found
p inside p r inside p r
v
p
j inside p j inside p
v
p
j inside p j inside p
v

j p inside p j inside p



fiexecuting perceptions actions diagrammatic reasoning

r

r
c

curve c inside region r line
segment c inside one triangle r

r

b region r inside region r triangle r inside one triangle r

figure examples decomposition curves regions containing forms f f f f

r entirely inside r necessary triangles r
inside triangle r triangle r span across multiple triangles r r
still inside r figure b shows example r inside r triangle r
spans across two triangles r case solution rue
computed directly f alse computed via decomposition third case
f theorem statement explained similarly forms f f
rewritten follows
f

p inside p r inside p r
p inside p r inside p r r b r

f

p inside p r inside p r
p inside p r inside p r r b r

rewritten forms equivalent decomposition

theorem subproblem resulting decomposing contains base predicates

proof decomposable due presence relational predicates involving
free variables types curve region specication stated section
involving curve region specied framework relation
involving points relation inside thus relation rel q c involving
point q curve c rewritten
rel q c c rel q



fibanerjee chandrasekaran

rel q c c rel q
rel base predicate involving points q cases expression
right hand side contains base predicates let involving
points curves regions let us replace occurrence non base predicates
involving curve rel q c equivalent expression consisting
base predicates involving points line segments resulting expression
consists base predicates involving points lemma non base
rewritten disjunctions base therefore resulting expression consists
base predicates involving points
similarly relation rel q r involving point q region r rewritten
rel q r inside r rel q

rel q r inside r rel q
rel base predicate involving points q involving
points regions curves replacing occurrence non base predicates involving
region rel q r equivalent expression consisting inside base
predicates involving points lemma expression
consisting base predicates involving points triangular regions
processes employed involves curves regions thus subproblem
resulting decomposing contain base predicates
mapping similar
definition similarity define two spatial quantified expressions
similar exists one one correspondence variables free quantified
given two similar solution goal construct
one one mapping variables solution
obtained replacing variables corresponding variables thereby
completely bypassing qe process computational bottleneck sps one toone mapping exists logically equivalent however equivalence checking
logical expressions np hard dershowitz jouannaud goldberg novikov
thus equivalence checking cannot used determine similarity eciently
features let quantier free expression expressed
prenex form e
v vm q xn x v vm x xn
variable xi appears q q contains redundant variables
quantier block qb q maximal contiguous subsequence q every variable
qb quantier type quantier blocks ordered sequence
appearance q qb qb qb equal appears qb q quantied


fiexecuting perceptions actions diagrammatic reasoning




p

v

p

p

v

p



p

p
figure parse tree matrix conjunctive normal form

variable xi appears quantier block qb xi ordering quantier blocks imposes partial order quantied variables variables
quantier block unordered
let q q parse trees respectively example matrix conjunctive normal form might look
p p p p p p
pi predicate subproblem pi base predicate parse
tree sentence shown figure
two trees isomorphic exists bijection preserves adjacency root vertex e u adjacent w u adjacent w
root root follows two isomorphic trees maximum height
number vertices height let l maximum height
number vertices height function dened










integer denotes sequence ith smallest prime number
maps sequence integers unique integer tuple
constructed follows



fibanerjee chandrasekaran



l
vertices dierent heights parse tree
quantier blocks
order quantier blocks
variables dierent quantier blocks

definition structural equivalence two spatial quantified expressions
structurally equivalent satisfy following conditions

isomorphic parse trees matrices
respectively
contents predicate boolean operator pair corresponding nodes
identical
exists one one correspondence variables arguments
predicates contained pair corresponding nodes moreover two
mappings obtained two pairs corresponding nodes contradict

see section structural equivalence two computed
time linear size parse trees note two structurally
equivalent logically equivalent vice versa example expressions p p q q p q base predicates logically equivalent
structurally equivalent since parse trees isomorphic general logical
equivalence imply structural equivalence redundancies redundant
variables predicates one sake computational eciency use structural equivalence determine similarity two
theorem subproblems obtained decomposing similar
proof let us assume contradiction exists decomposes
subproblems two j k dissimilar without loss generality
assume subproblems except k similar j

n

ni ni ipp qi ip ip qk k
j ip n n ip np
qj qi ip n n ip np
n

ni ni ipp qi ip qk ip k
ni ni ipp qi ip ip
n

thus subproblems similar contradicts assumption hence proof
follows
intuitively proposed framework curve represented arbitrary number vertices line segment represented two end points similarly


fiexecuting perceptions actions diagrammatic reasoning

periphery region represented arbitrary number vertices periphery
triangular region represented three vertices hence two line segments
triangular regions represented similarly dier coordinates
constituent vertices unlike two curves regions base predicates dened terms
base objects points line segments triangular regions thus predicate
dened conjunctions disjunctions base predicates base predicates
similar decomposition subproblems merely replaces one
predicates similar base predicates hence subproblems similar
memory organization
memory sps hierarchically organized stores disjoint classes
progressively features see figure decomposing
subproblems computing subproblems value
sps checks whether parse trees isomorphic mapping exists
variables since memory hierarchy constant height insertion
searching potential class similar executed constant time
features classify discriminative enough create large number
classes leaf nodes class containing thereby reducing search
belonging class

computational complexity
analyze time complexity used framework
implementation data structure consisting two elds p arset ree
solution p arset ree stores lexicographically sorted parse tree matrix
solution stores symbolic solution concise form parse tree
constructed time number base predicates boolean
operators boolean operators occupy non leaf nodes parse tree
base predicates occupy leaf nodes lexicographically sorting tree requires
lexicographically sorting contents children non leaf node tree let
number boolean operators ti number children ith boolean


operator thus
ti note since base predicate followed


boolean operator constant lexicographically sorting list
contents children node requires ti logti time thus total time required


repeating process non leaf nodes
ti logti since average number




children per node





tree













ti


total time required lexicographically sort




log





fibanerjee chandrasekaran

l
l



lk

vertices different

vertices different

levels parse tree

levels parse tree







dm

qb

q



qb

qr



order qbs







order qbs

os



variables

variables

different qb

different qb

e





et







figure hierarchical classication memory height hierarchy
branches correspond dierent values features captured
example l lk correspond k dierent maximum heights
parse trees matrices spatial

given two similar computes whether
similar see figure since computing requires time
line requires time since checking whether two trees isomorphic requires
time shown aho hopcroft ullman line requires time lines
requires time thus runs time
given unsolved similar solved similar
computesolutionf romsimilarp roblem similar computes solution variable mapping similar see figure v ariablem ap list entry
pair v vsimilar v free variable vsimilar corresponding free
variable similar let size v ariablem ap k lines requires
tk time since number nodes similar number arguments
predicate small lines requires k time size
solution similar thus runs tk k time
finally given unsolved memory emory stores hierarchically described section eliminatequantif iers emory
computes solution variable mapping similar emory
exists otherwise solves classier combination constraint


fiexecuting perceptions actions diagrammatic reasoning

similar


return f alse
else

p arset ree

p arset ree

isomorphic f alse

return f alse

else

node

predicate boolean operator corresponding node
match

return f alse
return rue

figure deciding whether two similar
computing structural equivalence quantied expression

computesolutionf romsimilarp roblem similar
p arset ree
similar similar p arset ree
similar similar solution
similar
node similar

node contains predicate say p

j arguments p

v variable occupying j th argument p

vsimilar variable occupying j th argument p similar

v ariablem ap contains v f alse

v ariablem ap add v vsimilar
v ariablem ap

replace occurrences v ariablem ap v ariablem ap
return

figure computing solution mapping variables
similar similar quantied expression
solution equivalent quantier free expression

solvers qe described section shown figure



fibanerjee chandrasekaran

let n subproblems predicates already base predicates rest written conjunctions disjunctions
base predicates thereby leading decomposition subproblems
example section riskyp ortionsof p ath q c c dened terms
base predicate distancelesst han p q e distance p q nonbase predicates q c p c non base predicates written
disjunctions base predicates q c c q c j c j
respectively thereby leading decomposition riskyp ortionsof p ath subproblems subproblems inherits base predicates e g
distancelesst han p q includes base predicates e g q c c
q c j c j obtained non base predicates let number
polynomials base predicates number polynomials due
newly obtained base predicates subproblem since subproblems similar
polynomials total number polynomials
n
let maximum degree polynomial subproblem since subproblems
similar maximum degree maximum degree polynomials
objects represented piecewise linearly case
objects represented piecewise linearly degree much larger
two might lead situation might solvable reasonable
time
let k number quantied variables subproblem
k quantied variables let computational complexity general qe
solving n solving subproblem
k
doubly exponential function cad n sd note
n nt e ecient solve subproblem general qe
solve whole
eliminatequantif iers emory lines require n time
lines require time since line requires time lines
require mt time line requires time lines require
n tk k time thus entire runs mt n tk k
time note size symbolic solution symbolic solution
expressed concisely small since number boolean operators
order number base predicates base predicate dened terms
least one polynomial n thus complexity
n k n k seen
nt n k n k




k


n
k n k

true provided large ecient solve variable
mapping solve subproblem general qe provided size
stored symbolic solution large every decomposable complexity
qe reduced


fiexecuting perceptions actions diagrammatic reasoning

eliminatequantif iers emory
solution
decompose subproblems qi n
p

np
n
n

nk
ip qi n
k
























k p
j nk
ith operator decomposed right left
ii
construct parse tree matrix
compute
f lag
j
emory j j th emory
similar emory j rue
similar emory j
f lag
break loop
f lag
solution computesolutionf romqealgorithms
similar
f lag n
solution computesolutionf romsimilarp roblem similar
solution solution solution
return solution

figure computing solution spatial taking help
previously solved similar emory thereby bypassing quantier
elimination whenever possible quantied expression
solution equivalent quantier free expression

encountered sps rst time solved decomposing subproblems solving rst subproblem general qe
obtaining solution rest subproblems mapping variables
rst subproblem since subproblem solution stored memory similar
subproblem encountered future sps bypasses qe completely
solves variable mapping case line never executed
time complexity solving
nk nk



fibanerjee chandrasekaran

considerable savings compared complexity solving entire
k
general qe e g complexity cad sd provided
large sps solves probability encounter similar
memory increases thereby leading scenario incurs complexity low
order polynomial compared doubly exponential
example illustrate solving process let us consider spatial behindcurve q c p described section point p px py curve
c p p pn pi xi yi point decomposition occurs
follows

behindcurve q c p
intersect c p q
c p q
n
pi pi p q
n
pi pi p q

n
qi

n

thus n subproblems
pi pi p q
qi
pi pi p q
figure n theorem
similar since subproblems sps
noted approximating continuous curve sequence line segments drawbacks example point p continuous curve c might piecewise linear
approximation c sps accept parameter specifies maximum length line
segment used approximation current implementation leave onus determining maximum length solver context deserves mention loss
information inevitable almost kind approximation example space
diagram approximated finite number pixels shown banerjee chandrasekaran
diagrammatic objects lose certain spatial information might detrimental spatial
solving avoided knowing minimum allowable resolution maximum length one
side square pixel



fiexecuting perceptions actions diagrammatic reasoning



p p

p q

figure parse tree matrix rst subproblem behindcurve

nd memory similar rst subproblem sent
classier sends appropriate qe denition tuple
parse tree solution stored memory follows
q p p p p p p q
x x x px py
px x px x x x py x py x px x px xy x px
x px x x py x py x px x px xy
arguments free variables subproblems solved
replacing variables mapped variables similar found
memory solved replacing mapped variables
subproblems
note example behindcurve absence appropriate
vocabulary properties relations would specied see redlog weispfenning
behindcurve x p x p p x p pn x pn px py
ax ay px x px ax py py ay n
ti ti
pi x ti pi x pi x ax py ti pi pi ay
total number quantiers n dependent number line segments
forming curve huge complicated curves many real world applications sps due appropriate decomposition subproblems
number quantiers subproblem xed case irrespective
spatial complexity object curve case symbolic solutions
simple subproblems stored future use possible systems redlog needless say though solving systems produce
solution much faster


fibanerjee chandrasekaran

applications
section illustrate sps deployed conjunction
solver human articial soar solving spatial without human intervention needed dr two applications considered entity identication
ambush analysis deemed important military domain subproblems sps autonomously decomposes spatial shown
military domain involve wide variety objects arbitrary properties
relations hence help illustrate expressiveness specication language
eciency generality sps
implementation used bisoar due kurup chandrasekaran
bimodal version soar laird et al solver uses two kinds operators predicate symbolic operators applied information predicate symbolic
form perception operators applied diagram bring state
transitions reach goal state initial state human responsible providing
broad solving strategy class given specic
class bisoar uses predicate symbolic perception operators accordingly
since used bisoar number dierent domains e g military euclidean geometry physics civil engineering banerjee chandrasekaran provide examples
still continue knows several dierent solving strategies operators predicate symbolic perception emphasis section
eciently bisoar solves eciently perception operators
executed without incorporating knowledge jeopardizes generality
general purpose solver spatial compare performance
proposed sps cad terms actual computation time
determined taking average least runs see sps excels
signicant margin cases
entity identification
entity identication core task us armys source analysis
system asas asas receives report sighting entity type e g
tanks task decide sighting entities
database earlier sightings entirely entity reasoning dynamically
integrate information dierent sources database sightings mobility vehicles
sensor reports terrain map information make decision follow novel
capability failure expectation h true observed
since h likely case h hypotheses observations
respectively josephson josephson chandrasekaran et al following
consider simple version illustrate task solved dr
spatial involved therein
figure shows terrain interest mountainous closed regions marking
impassable areas entities type e g tanks let entity newly sighted
time located point p two entities located points p
p last sighted times respectively retrieved database
potential partial identity information


fiexecuting perceptions actions diagrammatic reasoning







terrain impassable regions sighted tanks

c short path

b short path

path plausible homotopy
class

figure reasoning steps entity identication
area interest three enemy regions obstacles r r r shown figure
given repower sight range enemy reasoning proceeds follows
reach p within time might similarly since
mountainous region obstacle hiding place enemies repower range
existence entity shows probably traverse territory
within repower range might sensor elds report database
sense entities entity sensed sensor eld times
could followed path passed sensor eld
constraints taken account reasoning information might
available database follows simple scenario discussion
spatial occur
solver e g commander wants know whether exists contiguous
safe region containing points p p species saf eregion follows
saf eregion q r r rn



fibanerjee chandrasekaran

ni inside ri distance q
ri


ni j

ri


ni j

inside ri j distance q

inside ri j distance q

ri

inside ri j distance q

ri

inside ri j distance q

ri

saf eregion q ri j


ni j

ni j

ni j

q x decomposition sps shown subproblem symbolically solved solution stored memory along subproblem
specication order compare actual times required solve constructed simple diagram consisting four polygonal regions depicting obstacles see
figure four regions
r
r
r
r
triangulation regions produced seven triangles subproblem
symbolically solved stored solving required seconds solving
cad required seconds
diagram shaded safe region input recognize function computes vertices boundaries shaded region shown figure b next
solver wants know whether exists path points p p safely
avoiding obstacles enemy repower range whether path traversed
time let v velocity sighted entity piece symbolic knowledge
available database maximum length path traversable given
time l v let l l rational number path
existence two points path lies inside region r less
given length l specied
p athexists r l
q inside q r distance q distance q l
r


q
inside q r distance q distance q l



fiexecuting perceptions actions diagrammatic reasoning

r

r

r

r

r

r

r

r



unshaded polygons obstacles
shaded region safe region computed
sps

b points shown vertices boundaries safe region computed
recognize function





r

r

r

r

r

r

r

r







c paths lying safe region less
given length two points computed
sps

paths lying safe region less
given length two points computed
cad

figure simplied scenario illustrate performance proposed sps compared cad entity identication

r



q inside q r distance q distance q l

r



p athexists r l



fibanerjee chandrasekaran

decomposition sps shown subproblem symbolically
solved stored resort simple diagram figure compare actual
computation times p athexists r l
r recognize saf eregion x r r rn dierent sets regions ri
dierent values l triangulation r produced triangles r r
r r r r r r respectively subproblem symbolically solved
stored computation times required solving proposed sps
signicantly less cad see table

table comparison computation times seconds cad
proposed sps p athexists r l
r recognize saf eregion x r r rn ghz pc
gb ram mb virtual memory bit operating system used
implementation done athematica res refers
refers rue f refers f alse oom refers memory

l










r
cad sps res
f
f
f







r
cad sps res
f
f








r
cad sps res
f
f








r
cad sps res
oom f
oom f
oom
oom
oom
oom
oom
oom
oom

r r r r
cad sps res
oom f
oom f
oom f
oom f
oom
oom
oom
oom
oom

general p athexists r l specied
p athexists r l
q q qn q q qn inside r length q q qn l
q q qn c inside r length c l
q q qn c inside r length c l
r


q q qn c k
inside r k length c l

r


q q qn c k
inside r k length c l



fiexecuting perceptions actions diagrammatic reasoning

r


k
q q qn c inside r k length c l

r


k
p athexists r k l

c q q qn r br note even though c curve c
cannot decomposed since c free variable see denition decomposition
section note contains form f discussed heorem
r used
exists path points p p safely avoiding obstacles enemy
repower range traversed time solver wants
compute path specied
f indp ath q r l
inside q r distance q distance q l
r



inside q r distance q distance q l

r



inside q r distance q distance q l

r



f indp ath q r l

q x since quantiers solving decomposition
variable mapping achieve reduction computation time anysignicant amount
region consisting paths satisfy constraints l shown
figure c quality solution depends recognize function example
solution shown figure accurate figure c recognize
function failed determine vertices safe region accurately alternate denition
semi linear motion found weispfenning
semi linear path consists n translations along straight lines parallel
one given k vectors
solver infers might next repeats
entities nds exists path points p p
safely avoiding obstacles enemy repower range traversed
time might well sensor database informs two
sensor elds sensor sensor area interest report
passing vehicle solver wants verify whether paths passes
sensor elds species intersect r r compute
intersection two regions r r
intersectregions r r
q inside q r inside q r
r


q

r


inside q r

inside q r j



fibanerjee chandrasekaran

r




r


j

intersectregions r r j


computes


intersectregions paths paths recognize f indp ath q p p r l
region covered sensor scenario figure c solution rue
next solver wants know whether exists path points p
p safely avoiding obstacles enemy repower range traversed
time computes p athexists p p r l r recognize paths
returns rue inference follows might reasoning
repeated intersect paths returns rue p athexists p p r l
returns f alse see figure b inference follows cannot hence
solver identies
entity reidentication could solved computing shortest paths pairs p p p p avoiding sensors checking whether
lengths satisfy time constraints requires computing shortest path two points p p safely avoiding obstacles enemy repower range e
lying entirely within safe region r since path loop
share intermediate vertices vertices r path
r intermediate vertices let r p p c q q qm
shortest path q p qm p qi r
computing shortest path specied
f indshortestp ath r c
inimize length c c c c curveinsideregion c r
curveinsideregion c r constraint specied decomposed
follows
curveinsideregion c r
c inside r
c inside r
c inside r
c



r

c c inside r j

r

curveinsideregion c c r j

c


j

c


j




r


c c j
inside r j



fiexecuting perceptions actions diagrammatic reasoning

r br since form f r used subproblem symbolically solved stored solving curveinsideregion c r

c
r recognize saf eregion x r r r r
sps required seconds solving cad required seconds see figure shortest path obtained solving
f indshortestp ath r c shown figure b

path c two points lying inside
shaded region r

b shortest path two points computed
f indshortestp ath r c

figure paths two points lying inside safe shaded region

ambush analysis
two main factors range repower sight determine area covered
military unit presence terrain features mountains limit factors
allow units hide opponents hidden units enjoy advantage
concealing resources intentions opponents attack
opponents catching unawares traveling along path within
sight repower range hidden units thereby ambushing thus
utmost importance military unit priori determine areas portions
path prone ambush traversing already described section
solver e g army commander reasons diagrams gure safest
path transport troops one base camp another given time section
given curve region hiding place repower sight ranges


fibanerjee chandrasekaran

regions portions path prone ambush eciently computed proposed
sps
given curve c repower sight range spatial
riskyregion q c dened set points covered range c thus
specication
riskyregion q c
c distance q
c



c c distance q

c

c c distance q

c

riskyregion q c c




q x order compare actual computation times required solve
constructed simple diagram consisting two curves path mntn

path

mntn
solution riskyregion q mntn shaded region shown figure
mntn obstacle hiding e g mountain range
riskyregion q r region r specied replacing predicate p c
inside p r
given curve c path curve c hiding repower range
riskyp ortionsof p ath q c c dened parts c covered range
c thus
riskyp ortionsof p ath q c c
q c p p c distance p q
c

p

c

j

c

j




c

q c c j

c

c

p c j c j distance p q

p q c c p c j c j distance p q
riskyp ortionsof p ath q c c c j c j



fiexecuting perceptions actions diagrammatic reasoning

shaded region computed
riskyregion q mntn risky
region prone ambush due enemies hiding
mntn portions path inside risky region risky portions path

b bold parts path computed
riskyp ortionsof p ath q path
mntn risky portions path
shaded region computed behindcurvewrtriskyp ath q mntn path
enemies could hiding troops traveling path

c troops traveling rskyprtn risky portion bold path careful
ambushed enemies hiding shaded region rskyprtn within firepower range
region computed
behindcurvewrtriskyp athdistance q mntn
rskyprtn

troops traveling rskyprtn risky portion bold path careful
ambushed enemies hiding shaded region rskyprtn within firepower range
region computed
behindcurvewrtriskyp athdistance q mntn
rskyprtn

figure simplied scenario illustrate performance proposed sps ambush analysis



fibanerjee chandrasekaran

q x alternatively specied
riskyp ortionsof p ath q c r
q c inside q r
c



r


q c c j

r

q c c inside q r j

r

riskyp ortionsof p ath q c c r j

c


j

c


j





inside q r j

r recognize riskyregion x c q x
solution
riskyp ortionsof p ath q path mntn parts
path inside shaded region shown figure figure b shows
risky portions path rskyprtn rskyprtn bold obtained
recognize riskyp ortionsof p ath q c c
rskyprtn
rskyprtn
note latter specication free quantiers former however
solution computed latter specication might less accuracy
former due use recognize function hiding place region r
instead curve c riskyp ortionsof p ath q c r specied
replacing predicate p c inside p r portions path marked figure
c computed specication
region behind c enemies might hiding set points
behind c respect point risky portions curve c thus c risky
portion path
behindcurvewrtriskyp ath q c c
c behindcurve q c
c intersect c q
c b b c b q
c

b
c



c

j

c

c c j

b c j c j b q

b c c b c j c j b q



fiexecuting perceptions actions diagrammatic reasoning

c



c

j

behindcurvewrtriskyp ath q c j c j c c


q x solution behindcurvewrtriskyp ath q mntn rskyprtn
behindcurvewrtriskyp ath q mntn rskyprtn shaded region shown figure b hiding place region r instead curve c
behindcurvewrtriskyp ath q r c specied replacing predicate p c
inside p r
however enemies might hiding anywhere behind mountain within
distance ambush friendly units hence reasonable commander friendly side compute would
behindcurvewrtriskyp athdistance q c c distance
enemies ambush specied
behindcurvewrtriskyp athdistance q c c
c behindcurve q c distance q
c intersect c q distance q
c b b c b q distance q
c

c

b c c j
distance q
c

b c j c j b q

c

j
b c c b c j c j b q
distance q
c




c

j

behindcurvewrtriskyp athdistance q c j c j c c


q

x
solutions behindcurvewrtriskyp athdistance q mntn rskyprtn
behindcurvewrtriskyp athdistance q mntn rskyprtn
shaded regions shown figure c respectively hiding place region r
instead curve c behindcurvewrtriskyp athdistance q r c
specied replacing predicate p c inside p r comparison
cad proposed sps actual times required compute
relevant ambush analysis discussed shown table



fibanerjee chandrasekaran

table comparison computation times seconds cad
sps dierent relevant ambush analysis ghz pc
gb ram mb virtual memory bit operating system used
implementation done athematica following function
q x
p roblem
riskyregion q mntn
riskyp ortionsof p ath q path mntn
behindcurve q mntn
behindcurvewrtriskyp ath q mntn path
behindcurvewrtriskyp ath q mntn rskyprtn
behindcurvewrtriskyp ath q mntn rskyprtn
behindcurvewrtriskyp athdistance q mntn rskyprtn
behindcurvewrtriskyp athdistance q mntn rskyprtn

sps









cad









discussion
spatial solving area active since sutherlands sketchpad
need access communicate manipulate spatial information precisely
much engineers scientists high level language much common people
use one frontiers ai well known capabilities
oered rst order predicate logic rst order logic generally intractable
except limited domains umbrella qualitative spatial reasoning qsr
researchers investigated plethora spatial calculi prominent
mereotopological calculi clarke bennett cardinal direction calculus frank
skiadopoulos koubarakis double cross calculus freksa intersection calculi egenhofer egenhofer franzosa ip op calculus
ligozat dipole calculus moratz renz wolter schlieder dylla
moratz region connection calculi randell et al bennett isli
cohn gerevini nebel cohn bennett gooday gotts duntsch
wang mccloskey gerevini renz two main points distinction
qsr spatial solving reported
dierent qsr calculi emphasize dierent aspects space ontological issues topology distance orientation shape etc depending spatial aspect interest calculus minimal set spatial relations
example intersection calculus egenhofer franzosa
nine spatial relations r r r r r r r r r two spatial regions double cross calculus freksa fteen spatial relations
lf lp lc lb sf sp sc sl sb rf rp rc rl rb among three points etc framework
minimal set spatial relations xed set mathematical logical operators see section spatial relation among points
expressed real variables xed set operators rst order logic included
vocabulary spatial relation involving curves regions expressed


fiexecuting perceptions actions diagrammatic reasoning

rst order logic spatial relations among points relations inside
included vocabulary
spatial interest qsr community csps involving
points e g double cross calculus regions e g intersection calculi region
connection calculi closed set properties relations often limited binary
domain general purpose sps helping human perceive act diagrams
dierent real world applications need solve qcsps involving points curves
regions open ended vocabulary properties relations actions entire
real domain framework oers since qe computational bottleneck
sps concentrate eorts real qe discussed towards
end section
naturally question arises convenient human specify spatial
qcsp acknowledge process specifying spatial
qcsp eortless explaining another human natural language
taken rst step making process less strenuous oering vocabulary
predicates open ended qcsp solving systems redlog dolzmann
sturm qepcad brown oer vocabulary spatial
solving makes dicult user specify dig deep
ocean equations inequalities cannot communicate naturally terms high level
predicates still far building systems understand communication
natural language however automatic constraint acquisition examples
already underway vu osullivan discuss recent advances direction
use ideas work dicult see
ideas conjunction work reported able build
convenient ecient spatial solving framework

conclusion
dr requires perceiving specied information diagram modifying creating objects
diagram specied ways according solving needs number dr systems
built last couple decades developers ascertained
priori hand coded required perceptions actions building
dr systems defeats purpose open ended exploration essence human
solving goal develop general ecient framework
executing perceptions actions relevant reasoning diagrams across
wide variety domains tasks make two important contributions
observe wide variety visual perceptions actions dr applications
transformed domain task independent spatial observation makes
possible use well established constraint satisfaction framework spatial
solving developed language specify spatial qcsps
real domain open ended vocabulary properties relations actions involving
three kinds diagrammatic objects points curves regions solution spatial
equivalent simplied quantier free expression reduces goal developing
general ecient sps solving spatial without human intervention
fair redlog qepcad developed solving spatial qcsp



fibanerjee chandrasekaran

spatial specied qcsps rst order logic qe inherently
doubly exponential computational bottleneck sps represented
objects points curves regions conguration simple elements facilitate decomposition complex simpler similar subproblems showed
symbolic solution subproblem expressed concisely qe achieved
low order polynomial time storing solutions memory
similar encountered future solved mapping solution
similar previously solved sps grows ecient solves
even though used cad qe compared complexity
cads means limited particular complexity qe signicantly improved spatial solving
idea decomposition variable mapping discussed
framework leaves room ecient convenient incorporating future
least two possible directions learning constraints examples automatic
constraint acquisition carefully exploiting rich portfolio qe solving


acknowledgments
partially supported participation advanced decision architectures collaborative technology alliance sponsored u army laboratory
cooperative agreement daad thank anonymous reviewers
constructive comments

references
aho v hopcroft j e ullman j design analysis computer
addison wesley
allwein g barwise j logical reasoning diagrams journal logic
language information
anderson j r rules mind lawrence erlbaum associates hillsdale nj
banerjee b chandrasekaran b perceptual action routines diagrammatic
reasoning entity identication proc th army science conf orlando fl
banerjee b chandrasekaran b constraint satisfaction framework visual
solving benhamou f jussien n osullivan b eds trends
constraint programming chap pp iste london
banerjee b chandrasekaran b spatial search framework executing
perceptions actions diagrammatic reasoning goel k jamnik
narayanan n h eds diagrammatic representation inference lecture notes
ai vol pp springer heidelberg
barwise j etchemendy j computational architecture heterogeneous
reasoning gilboa ed proc th conf theoretical aspects rationality
knowledge pp morgan kaufmann


fiexecuting perceptions actions diagrammatic reasoning

basu pollack r roy f real algebraic geometry springerverlag
bennett b logical representations automated reasoning spatial relationships ph thesis school computer studies university leeds
bennett b isli cohn g composition table provide
complete tractable proof procedure relational constraint language proc
ijcai workshop spatial temporal reasoning nagoya japan
brown c w qepcad b program computing semi algebraic sets
cylindrical algebraic decomposition acm sigsam bulletin
brown c w davenport j h complexity quantier elimination
cylindrical algebraic decomposition proc intl symp symbolic algebraic computation pp acm ny
chandrasekaran b josephson j r banerjee b kurup u winkler r
diagrammatic reasoning support situation understanding proc
rd army science conf orlando fl
chandrasekaran b kurup u banerjee b diagrammatic reasoning architecture design implementation experiments proc aaai spring symp
reasoning mental external diagrams computational modeling spatial
assistance pp stanford university ca
chandrasekaran b kurup u banerjee b josephson j r winkler r
architecture solving diagrams blackwell marriott k
shimojima eds lecture notes ai vol pp springer verlag
chazelle b triangulating simple polygon linear time discrete computational geometry
clarke b l calculus individuals connection notre dame journal
formal logic
cohn g bennett b gooday j gotts n rcc calculus region
qualitative spatial reasoning geoinformatica
collins g e hong h partial cylindrical algebraic decomposition quantier
elimination journal symbolic computation
davenport j h heintz j real quantier elimination doubly exponential
journal symbolic computation
dershowitz n jouannaud j p rewrite systems handbook theoretical
computer science vol b chap pp elsevier north holland amsterdam
dolzmann sturm redlog user manual edition version
tech rep mip fmi universitt passau passau germany
dolzmann sturm weispfenning v real quantier elimination practice
matzat b h greuel g hiss g eds algorithmic algebra number
theory pp springer berlin


fibanerjee chandrasekaran

duntsch wang h mccloskey relation algebras qualitative spatial
reasoning fundamenta informaticae
dylla f moratz r exploiting qualitative spatial neighborhoods situation
calculus freksa c knau krieg brckner b nebel b barkowsky
eds spatial cognition iv reasoning action interaction vol lecture
notes computer science pp springer
egenhofer j reasoning binary topological relations gunther
schek h j eds proc nd symp large spatial databases vol lecture
notes computer science pp springer
egenhofer j franzosa r point set topological relations intl journal
geographical information systems
ferguson r w magi analogy encoding symmetry regularity
proc th annual conf cognitive science society pp atlanta ga
ferguson r w forbus k telling juxtapositions repetition
alignable dierence diagram understanding holyoak k gentner kokinov b eds advances analogy pp soa bulgarian
university
ferguson r w forbus k georep exible tool spatial representation
line drawings proc th natl conf ai pp austin tx
forbus k usher j chapman v qualitative spatial reasoning sketch
maps riedl j hill r eds proc th annual conf innovative applications
ai pp acapulco mexico aaai press menlo park ca isbn
frank u qualitative spatial reasoning cardinal directions kaindl h
ed proc th austrian conf ai vol informatik fachberichte pp
springer
frank u qualitative spatial reasoning distances directions geographic space journal visual languages computing
freksa c orientation information qualitative spatial reasoning frank
u campari formentini u eds spatio temporal reasoning vol
lecture notes computer science pp springer
gebruers c hnich b bridge freuder e cbr select solution
strategies constraint programming proc th intl conf case reasoning
pp springer
gerevini nebel b qualitative spatio temporal reasoning rcc
allens interval calculus computational complexity proc th european conf ai
pp ios press
gerevini renz j combining topological qualitative size constraints
spatial reasoning proc th intl conf principles practice constraint
programming pp springer


fiexecuting perceptions actions diagrammatic reasoning

glasgow j narayanan n h chandrasekaran b diagrammatic reasoning
cognitive computational perspectives aaai press
goldberg e novikov complexity equivalence checking tech rep
cdnl tr cadence berkeley labs ca
jamnik mathematical reasoning diagrams intuition automation
csli press stanford university ca
josephson j r josephson g abductive inference computation philosophy
technology cambridge university press cambridge
kurup u chandrasekaran b bimodal cognitive architecture explorations
architectural explanation spatial reasoning aaai spring symp control mechanisms spatial knowledge processing cognitive intelligent systems stanford
university ca
laird j e newell rosenbloom p soar architecture general
intelligence artificial intelligence
laird j e rosenbloom p newell universal subgoaling chunking
kluwer academic publishers
lasaruk sturm weak quantier elimination full linear theory
integers uniform generalization presburger arithmetic technical report
mip fmi universitt passau germany
leyton brown k nudelman e shoham learning empirical hardness
optimization case combinatorial auctions proc th intl conf
principles practice constraint programming pp
ligozat g qualitative triangulation spatial reasoning frank u
campari eds spatial information theory theoretical basis gis vol
lecture notes computer science pp springer
lindsay r k diagrams understand geometry computational intelligence

moratz r renz j wolter qualitative spatial reasoning line segments
proc th european conf ai pp ios press
nelson r b proofs without words exercises visual thinking mathematical association america washington dc
newell unified theories cognition harvard university press cambridge

omahony e hebrard e holland nugent c osullivan b casebased reasoning portfolio constraint solving van dongen
r c lecoutre c roussel eds proc rd intl csp solver competition
pp
pisan visual reasoning graphs th intl workshop qualitative reasoning
physical systems nara japan


fibanerjee chandrasekaran

pisan visual routines model graph understanding proc th
annual conf cognitive science society pp pittsburgh lawrence erlbaum
associates isbn
pulina l tacchella multi engine solver quantied boolean formulas
proc th intl conf principles practice constraint programming pp

randell cui z cohn g spatial logic regions connection nebel b swartout w rich c eds proc rd intl conf principles
knowledge representation reasoning pp morgan kaufmann
ratschan ecient solving quantied inequality constraints real
numbers acm trans computational logic
sayag fine mansour combining multiple heuristics proc rd
intl symp theoretical aspects computer science vol lecture notes
computer science pp springer
schlieder c reasoning ordering frank u kuhn w eds
spatial information theory theoretical basis gis vol lecture notes
computer science pp springer
seidel r simple fast incremental randomized computing
trapezoidal decompositions triangulating polygons computational geometry
theory applications
skiadopoulos koubarakis composing cardinal direction relations artificial intelligence
streeter j golovin smith f combining multiple heuristics online
proc nd conf ai pp aaai press
sutherland e sketchpad man machine graphical communication system
proc spring joint computer conf pp
tessler iwasaki law k qualitative structural analysis diagrammatic reasoning glasgow j narayanan n h chandrasekaran b eds
diagrammatic reasoning cognitive computational perspectives chap pp
aaai press menlo park ca isbn
tricket b trafton j g toward comprehensive model graph comprehension making case spatial cognition barker plummer cox r
swoboda n eds lecture notes ai vol pp berlin springerverlag
tversky b ways maps diagrams communicate freksa c
brauer w habel c wender k f eds spatial cognition ii integrating
abstract theories empirical studies formal methods practical applications
vol lecture notes computer science pp berlin springer verlag
vik implementation near linear polygon triangulation
general polygons senior thesis macalester college st paul minnesota available
online http sigbjorn vik name projects triangulation pdf


fiexecuting perceptions actions diagrammatic reasoning

vu x h osullivan b unifying framework generalized constraint acquisition intl journal ai tools
weispfenning v complexity linear elds journal symbolic
computation
weispfenning v semilinear motion redlog applicable algebra
engineering communication computing
wolfram
mathematica book th edition
http documents wolfram com

available online

xu l hutter f hoos h h leyton brown k satzilla portfolio
selection sat journal artificial intelligence




