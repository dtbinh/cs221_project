journal artificial intelligence

submitted published

approximate strong equilibrium job scheduling games
michal feldman

mfeldman huji ac il

school business administration
center study rationality
hebrew university jerusalem israel

tami tamir

tami idc ac il

school computer science
interdisciplinary center herzliya israel

abstract
nash equilibrium ne strategy profile resilient unilateral deviations
predominantly used analysis multiagent systems downside ne
necessarily stable deviations coalitions yet
cases ne exhibit stability coalitional deviations benefits
joint deviation bounded sense ne approximates strong equilibrium
coalition formation key issue multiagent systems provide framework
quantifying stability performance assignment policies solution
concepts face coalitional deviations within framework evaluate given
configuration according three measures ir min maximal number
exists coalition minimal improvement ratio among coalition members ii ir max maximal number exists coalition
maximal improvement ratio among coalition members iii dr max
maximal possible damage ratio agent outside coalition
analyze measures job scheduling games identical machines particular
provide upper lower bounds three measures ne assignment rule longest processing time lpt
indicate lpt performs better general ne however lpt
best possible approximation particular present polynomial time approximation
scheme ptas makespan minimization provides schedule
ir min given respect computational complexity
given ne identical machines unrelated machines np hard
determine whether given coalition deviate every member decreases cost

introduction
consider job scheduling systems n jobs assigned identical machines
incur cost equal total load machine assigned
widely studied recent years game theoretic perspective koutsoupias papadimitriou andelman feldman mansour christodoulou
koutsoupias nanavati czumaj vocking fiat olonetsky
contrast traditional setting central designer determines allocation
jobs machines participating entities assumed obey protocol mul cost function characterizes systems jobs processed parallel jobs
particular machine single pick time need share resource simultaneously

c

ai access foundation rights reserved

fifeldman tamir

tiagent systems populated heterogeneous autonomous agents often display
selfish behavior different machines jobs may owned different strategic entities
typically attempt optimize objective rather global objective
game theoretic analysis provides us mathematical tools study situations
indeed extensively used recently analyze multiagent systems trend
motivated part emergence internet composed distributed
computer networks managed multiple administrative authorities shared users
competing interests papadimitriou
game theoretic applied job scheduling well network games e g fabrikant luthra maneva papadimitriou shenker albers
elits even dar mansour roditty roughgarden tardos anshelevich
dasgupta kleinberg tardos wexler roughgarden use solution concept
nash equilibrium ne strategy agent best response
strategies agents ne powerful tool analyzing outcomes competitive environments notion stability applies unilateral deviations

numerous multiagent settings selfish agents stand benefit cooperating forming
coalitions procaccia rosenschein therefore even single agent profit
unilateral deviation ne might still stable group agents coordinating joint deviation profitable members group stronger
notion stability exemplified strong equilibrium se solution concept coined
aumann strong equilibrium coalition deviate improve utility
every member coalition


















































b

figure example configuration nash equilibrium resilient
coordinated deviations since jobs load profit deviation demonstrated b

example consider configuration depicted figure figures
job represented rectangle whose width corresponds jobs length jobs
scheduled specific machine form vertical concatenation rectangles example
figure three machines processes two jobs length note
internal order jobs effect since cost job defined load
machine assigned configuration ne since job reduce cost
unilateral deviation one might think ne identical machines must
sustainable joint deviations yet already observed andelman



fiapproximate strong equilibrium

et al may true example configuration resilient
coordinated deviation coalition consisting four jobs load
deviating configuration b jobs load decrease costs
jobs load improve note cost two jobs load
members coalition increases
example every member coalition improves cost multiplicative factor much coalition improve bound
improvement ratio turn example fact extreme one
sense clarified thus ne completely stable coordinated deviations settings provide us notion approximate
stability coalitional deviations approximate strong equilibrium
consider subclass ne schedules produced longest processing time
lpt rule graham lpt rule sorts jobs non increasing order
loads greedily assigns job least loaded machine easy verify
every configuration produced lpt rule ne fotakis kontogiannis
spiraklis se note instance depicted figure lpt
would produced se however case
provide framework studying notion approximate stability
coalitional deviations analysis consider three different measures first
two measure stability configuration uses notion improvement ratio
job defined ratio jobs costs deviation
third measures worst possible effect non deviating jobs explained

minimum improvement ratio definition members coalition must
reduce cost improvement ratio every member coalition larger
clearly coalition members might share improvement ratio
minimum improvement ratio particular deviation minimal improvement ratio
coalition member minimum improvement ratio schedule denoted ir min
maximum possible deviations originated minimal improvement
ratio deviation words coalitional deviation originating
every member coalition reduces cost factor greater ir min
closely related notion suggested albers defined strategy
profile se coalition agent improve factor
notation schedule se ir min albers
studied notion context se existence cost sharing games showed
sufficiently large se exists justification behind concept
agents may willing deviate improve sufficiently high factor due
example overhead associated deviation
statement holds identical machines every ne se andelman et al

throughout define approximation multiplicative factor since improvement
damage ratios three measures presented constants greater one shown
additive ratios unbounded formally value possible construct instances
scaling instances provide multiplicative ratio cost jobs reduced
cost jobs increased least additive factor



fifeldman tamir

three machines every ne se coalition
deviate every member improves factor larger
case provide matching lower bound recall figure holds

arbitrary every ne
se proof technique
draws connection makespan approximation approximate stability
makespan configuration defined maximum load machine
configuration
next consider schedules obtained
lpt rule

every lpt configuration se provide matching lower

bound holds arbitrary upper bound

indicate lpt stable ne respect coalitional
deviations yet lpt best possible approximation se similar notion
approximation define se ptas assignment
gets input additional parameter specifying close se schedule
produces se time polynomial n devise
se ptas fixed number machines approximates makespan within
factor
maximum improvement ratio maximum improvement ratio particular
deviation maximal improvement ratio experienced coalition member
maximum improvement ratio schedule denoted ir max maximum
possible deviations originated maximal improvement ratio deviation
words coalition deviation originating exists
member coalition reduces cost factor greater ir max
notion establishes bounds much agent would gain deviating
coalition agents gain something deviation notion similar
spirit stability large total improvement suits environments
individuals willing obey specific player long hurt interestingly
given ne configuration improvement ratio single agent may
arbitrarily large contrast lpt configurations three machines
agent improve factor bound tight thus respect
ir max relative stability lpt compared ne significant respect

believe tight
ir min arbitrary provide lower bound
maximum damage ratio case jobs load figure jobs
might get hurt coalitional deviation third measure consider
worst possible effect deviation jobs members deviating
coalition formally maximum damage ratio maximal ratio costs
non coalition member deviation variants measure
considered distributed systems e g byzantine generals lamport shostak
pease rational secret sharing halpern teague section
prove maximum damage ratio less ne configuration less
rational secret sharing protocol set players holding share secret aims jointly
reconstruct viewing protocol game players utilities typically assumed satisfy
following two basic constraints player prefers learning secret learning ii
conditioned learned secret player prefers possible players learn



fiapproximate strong equilibrium

lpt configuration bounds hold cases
provide matching lower bounds
summary sections see table indicate ne configurations
approximately stable respect ir min measure moreover performance
jobs outside coalition would hurt much coalitional deviation
ir max provide additional strength lpt rule already
known possess attractive properties respect e g makespan approximation
stability unilateral deviations

ne
lpt

ir min
upper bound























lower
bound











ir max
upper
lower
bound bound
unbounded








dr max
upper lower
bound bound








table three measures unless specified otherwise hold
arbitrary number machines
section study computational complexity aspects coalitional deviations
np hard determine whether ne configuration identical
machines se moreover given particular configuration set jobs nphard determine whether set jobs engage coalitional deviation
unrelated machines e job incurs different load machine
hardness hold already machines might implications
coalitional deviations computationally restricted agents
related work ne shown provide approximate stability coalitional deviations related body work studies well ne approximates optimal
outcome competitive games price anarchy defined ratio
worst case ne optimum solution papadimitriou koutsoupias papadimitriou extensively studied settings including job scheduling
koutsoupias papadimitriou christodoulou et al czumaj vocking
network design albers et al anshelevich et al anshelevich dasgupta tardos wexler roughgarden fabrikant et al network routing roughgarden
tardos awerbuch azar richter tsur christodoulou koutsoupias

notion strong equilibrium se aumann expresses stability coordinated deviations downside se games admit se even
amongst admitting nash equilibrium recent works studied existence se particular families games example shown every job
scheduling game almost every network creation game se exists andelman et al
addition several papers epstein feldman mansour holzman lawyone rozenfeld tennenholtz provided topological characterization
existence se different congestion games including routing cost sharing


fifeldman tamir

connection games vast literature se e g holzman law yone
milchtaich bernheim peleg whinston concentrate pure strategies
pure deviations case job scheduling settings shown
andelman et al mixed deviations allowed often case se
exists se exists clearly price anarchy respect se denoted
strong price anarchy andelman et al significantly better price
anarchy respect ne andelman et al fiat olonetsky leonardi
sankowski
following work ir min bounds case machines provided
chen extended bound ne schedules provided bound







lpt schedules

model preliminaries
section give formal description model provide several useful observations properties deviations coalitions
resilience deviations coalitions
first present general game theoretic setting describe specific job scheduling
setting focus
game denoted tuple g hn sj cj n n set
players sj finite action space player j n cj cost function player j
joint action space players ni si joint action sn
denote sj actions players j j e sj sj sj sn
similarly set players called coalition denote actions
players respectively cost function player j maps joint action
real number e cj r
joint action pure nash equilibrium ne player j n benefit
unilaterally deviating action another action e j n sj cj sj
cj pure joint action coalition n specifies action player
coalition e j sj joint action resilient pure deviation
coalition pure joint action cj cj every
j e players coalition deviate way player strictly
reduces cost case say deviation profitable
deviation coalition
pure joint action resilient pure deviations coalitions
coalition n profitable deviation
definition pure strong equilibrium se pure joint action resilient
pure deviations coalitions
clearly strong equilibrium refinement notion nash equilibrium particular strong equilibrium resilient deviations coalitions size
coincides definition ne



fiapproximate strong equilibrium

job scheduling identical machines
job scheduling setting identical machines characterized set machines
mm set n jobs job j processing time pj assignment
method produces assignment jobs machines sj denotes machine
job j assigned assignment referred schedule configuration use
two terms interchangeably load machine mi inp
schedule sum
processing times jobs assigned mi li j sj mi pj set jobs

let j sj denote set machines members assigned
schedule
makespan schedule load loaded machines social optimum
minimizes makespan e op mins makespan
job scheduling setting define job scheduling game jobs players
action space sj player j n individual machines e sj
joint action space nj sj joint action constitutes schedule schedule
player j n selects machine sj action incurs cost cj
load machine sj e cj li sj mi job scheduling game
makespan highest cost among players formally makespan maxj cj

let two configurations let pis
binary indicator whose value

job j sj mi j mi e job chooses mi
mi otherwise clear context abuse notation

denote pis
pi addition denote li li li l respectively

let profitable deviation coalition improvement
ratio job j sj mi j mi e job migrating machine

mi machine mi denoted irs j li li clearly job j

irs j damage ratio job j sj j mi denoted

drs j li li
sj j say job j migrates deviation note terminology
job member profitable deviation even migrate deviation
yet every job migrates deviation member deviating coalition
definition
definition given schedules minimal improvement ratio

respect ir min minj irs j addition minimal improvement
ratio schedule ir min maxs n ir min
given schedules maximal improvement ratio respect

ir max maxj irs j addition maximal improvement ratio
schedule ir max maxs n ir max
given schedules maximal damage ratio respect

dr max maxjn drs j addition maximal damage ratio schedule
dr max maxs n dr max
particular define notion se albers terms minimum
improvement ratio follows
definition schedule strong equilibrium se ir min


fifeldman tamir

next provide several useful observations claims shall use sequel
refer profitable deviation ne schedule ne originated profitable deviation
similarly profitable deviations schedule produced lpt rule referred
lpt originated profitable deviation
first observation shows ne originated profitable deviation job
migrates machine job must migrate machine formally
observation let ne let profitable deviation j mi
j j sj mi j mi
obvious since job j strictly decreases cost migrating machine
job leaves profitably migrates unilaterally contradicting ne
next define special deviation structure called flower structure
deviations loaded machine
definition let loaded machine given schedule say


deviation obeys flower structure p
pi
j



pi j
see figure










figure graph representation coalition machines obeying flower structure



edge mi mj pi j





particular deviation obeys flower structure p
















p
p
p
p
p
recall simplicity presentation



write sequel pi j denote pi j
write li l denote li
li respectively

claim ne originated profitable deviation three machines obeys flower structure
proof let ne loaded machine let profitable
deviation first p p assume first p
p p p
thus l l l l clearly since total load change li l
therefore must hold l l however profitable deviation increase
load loaded machine contradiction therefore one p p
assume w l g p observation job leaves
cannot thus must p similarly job

pleaves p
p get l l l l l l contradicting li l


fiapproximate strong equilibrium




p
p getpthat l l l l job added l l
contradicting li li thus p proof p analogous
remains p p p p know three machines
assigned jobs assigned p p
observation job leaves therefore p p
job leaves thus least one p p equals assume w l g p
p particular l l since p must
p assume opposite l l already know
p
p p p
thus l l l l assumption l l l li
contradiction

known ne schedule two identical machines se andelman
et al claim least four jobs change machines profitable
deviation three machines clearly least four jobs change machines coalition
machines therefore

corollary every ne schedule stable deviations coalitions size three
less
next two propositions characterize coalition deviation three machines
loaded machine deviation becomes
least loaded deviation
proposition ne originated deviation three machines loads two
less loaded machines increasing l l l l
proof assume contrary l l claim p p
p p
thus

l l l l assumption l l
l

li

contradiction proof l l analogous

proposition ne originated deviation three machines loaded machine becomes least loaded machine l min l l
proof claim p thus l l proposition l l
thus l l proof l l symmetric


strong equilibrium
section stability configurations measured minimal improvement ratio
measure first provide complete analysis e matching upper lower bounds
three identical machines ne lpt arbitrary provide upper
bound ne lpt lower bounds hold
theorem ne schedule three machines se
note unrelated machines improvement ratio cannot bounded within finite factor
even two machines seen simple example two jobs two machines
load vector job load vector job job assigned machine
resulting configuration ne load machine however jobs
reduce load swapping



fifeldman tamir

proof let ne configuration three machines let r ir min claim
deviation obeys flower p
structure therefore l l r l l r l
l r l l r let p j pj l l l summing
inequalities get r l p l p
proposition load loaded machine half total load
l p
proof let g max l l l l flower structure least two jobs
thus g l since otherwise job would benefit leaving contradicting
ne definition g know l l l g since g l get
l p

distinguish two cases
l p case r l p l p p p
l p means l l p rest load
least one l l p w l g let flower structure
job migrates jobs improvement ratio l l
proposition less p p thus r

analysis tight shown figure moreover lower bound
extended adding machines heavy jobs assigned
machines thus
theorem exists ne schedule ir min
lpt configurations bound minimum improvement ratio lower
proof following theorems appear appendix
theorem lpt schedule three machines





se

theorem exists lpt schedule ir min





next provide upper bounds arbitrary analysis drawing
connection makespan approximation se approximation assume
given schedule r approximation minimum makespan
conditions original schedule subset jobs form coalition
ir min r considering subset machines possible get schedule
apparently better optimal one first define set assignment rules
connection exists
definition let schedule instance hn given let
hn instance induced n j sj assignment method
said subset preserving holds sj sj

j n assignments produced instances
respectively


fiapproximate strong equilibrium

claim lpt subset preserving method
proof proof induction number jobs n
k n first k jobs n assigned machine lpt executed
note since n sublist n jobs n
input input
order n first job scheduled first empty machine among
job j n induction hypothesis j scheduled load
machines identical load corresponding machines time j
scheduled member n load generated jobs n come j
n therefore lpt j scheduled least loaded machine among machines
sj sj assume lpt uses deterministic tie breaking rule
several least loaded machines n therefore sj sj case

lemma let assignment method subset preserving ii yields nash
equilibrium iii approximates minimum makespan within factor r r
non decreasing produces r se
proof assume contradiction exists instance schedule
produced exists coalition improvement ratio every member
greater r let coalition minimum size job j
migrate set jobs j smaller coalition contradicting minimality
therefore every j holds sj j next
first every machine job j migrates
must exist job migrating otherwise j smaller coalition contradicting
minimality second every machine job j
migrates must exist job migrating otherwise job j improve unilaterally
contradiction ne given denote set machines
let finally let n n set jobs assigned machines
consider instance hn since subset preserving jobs n
scheduled exactly schedule scheduled part
particular scheduled deviation exists every job
improves factor greater r machines take part
words pair machines j pi j li l j r r
r approximation ratio machines hand since
op

produces r approximation machine li r op

minimum possible makespan machines therefore pi j r
li l j


r op

l j

implies machine j receives least one job


l j op
however since least one job migrated participating machines
deviation machines assigned jobs n load
contradiction
less op

let ne machines clearly induced schedule

set machines ne known ne provides
approximation makespan finn horowitz schuurman vredeveld

implies lemma applied r
assignment yields
ne therefore


fifeldman tamir

corollary ne schedule identical machines




se

next direct corollary lemma claim fact lpt

approximation makespan graham
provides

corollary schedule produced lpt identical machines
se

bounds tight gap lower upper bounds
small constant

maximum improvement ratio
section analyze maximum improvement ratio measure provide complete analysis ne configurations lpt configurations three
machines lower bound lpt three machines extended arbitrary
contrast measures consider ne lpt differ
small constant turns respect maximum improvement ratio ne
lpt significantly different improvement ratio ne originated deviations arbitrarily high deviations lpt configurations highest possible
improvement ratio participating job less
theorem fix r machines exists instance
machines ne ir max r
proof given r consider ne configuration three machines given figure
coalition consists r r improved schedule given figure b
improvement ratio jobs load r r dummy machines jobs
added



r



r



r

r

r



r



r



r

r

r



r

r



r



b

figure ne originated deviation jobs load improvement ratio
r

contrast ne originated deviations lpt originated deviations able
bound maximum improvement ratio small constant proof following
claim given appendix
theorem let lpt schedule three machines holds irmax



fiapproximate strong equilibrium





mm






























mm















b

figure lpt originated deviation machines job load assigned
improvement ratio arbitrarily close




bound tight demonstrated figure im
provement ratio
moreover figure shows lower bound
generalized note coalitional deviation example obeys
flower structure believe example tight flower structure seems
enable largest possible decrease load single machine job load
remains improves cost job j

ir j
formally
theorem exists lpt configuration ir max


arbitrarily small

maximum damage ratio
section provide maximum damage profitable deviation
impose jobs take part coalition formally quality configuration measured maxj dr j provide complete analysis ne lpt
configurations lpt provides strictly better
performance guarantee compared general ne cost job lpt schedule
cannot increase factor larger increase factor arbitrarily close
ne schedules
theorem dr max every ne configuration
proof let profitable deviation let loaded machine
among machines job migrated job migrated observation must job migrated implies must
least two jobs since single job could benefit
deviation therefore exists job j sj pj l fact
ne get machine li l otherwise job j
improve unilaterally migrating mi
addition every machine job migrates must hold l l
job migrated mi left machine j load lj l combining



fifeldman tamir

bounds get every job j stays machine job

migrates holds drs j l li l li li li

analysis tight shown figure damage ratio jobs load
r r r arbitrarily close formally
theorem exists ne configuration dr max
arbitrarily small
lpt configurations obtain smaller bound
theorem dr max




every lpt configuration

proof let profitable deviation let loaded machine
among machines job migrated job migrated since every
lpt configuration ne must least two jobs following arguments
proof theorem assume w l g lightest last job assigned
load denote job job assumption valid
minimum improvement ratio invariant linear transformations let l since
lpt configuration every machine must hold li otherwise job
would assigned different machine addition since every machine j
job migrates lj l must hold every machine job
migrates l distinguish two cases

case every machine mi job migrates l li

case b profitable deviation exists case
exactly jobs loads since lpt assigns jobs non increasing order
lpt every machine must one job load least possibly
small jobs ii two jobs load least possible small jobs let k k
number machines type ii respectively excluding thus
total k jobs load k jobs load deviation machine
jobs load together three jobs load k machines
assigned k jobs load deviation cannot assigned job
load x end k jobs load assigned k machines
thus must machine least three jobs load contradiction





















































b

figure lpt originated deviation damage ratio job load
arbitrarily close

analysis tight shown figure moreover adding dummy machines
jobs extended formally


fiapproximate strong equilibrium

theorem exists lpt configuration dr max

arbitrarily small

approximation scheme
section present polynomial time approximation scheme provides se ptas applied fixed number machines
definition vector l l lm smaller l l lm lexicographically
li li b lb lb configuration lexicographically smaller
vector machine loads l l lm sorted non increasing order
smaller lexicographically l sorted non increasing order
ptas combines lexicographically minimal assignment longest k jobs
lpt rule applied remaining jobs value k depends desired approximation ratio defined later
formally ak defined follows
lexicographically minimal assignment longest k jobs
add remaining jobs greedily lpt rule
particular since lexicographically minimal assignment minimizes makespan
given load loaded machine ptas
minimum makespan restriction known ptas graham
grahams step first k jobs scheduled way minimizes
makespan scheme requirement schedule long jobs strict
particular shown andelman et al schedule longest k jobs
se sub instance

given let denote k
first
subset machines provides approximation makespan
subset jobs scheduled formally
lemma let hn instance job scheduling machines jobs
n let output given let n n set jobs
scheduled consider instance hn let assignment

induced approximation makespan

proof let la
max denote largest completion time machine set
schedule produced let op denote minimum makespan let
denote largest completion time long job n scheduled minimal
lexicographic schedule found step since minimal lexicographic assignment

minimum makespan long jobs n particular lower bound op


thus makespan increased second step lmax
otherwise makespan larger let j job
optimal
determining makespan job completes last n definition lpt
implies machines busy job j started execution otherwise



fifeldman tamir

job j could start earlier since optimal schedule step intended idles

holds machines busy time interval la
max pj
pn
let p
j pj total processing time n jobs n


p lmax pj since jobs sorted non increasing order processing

times pj pk therefore p la
max pk lower bound

optimal solution schedule load machines balanced


p implies la
thus op
max op pk



order bound lmax terms op need bound pk terms
first bound gap op op
following assumption
op
used
claim let z job determining makespan w l g z one
k long jobs
proof assume makespan determined one long jobs let
machine z scheduled particular processes long jobs fix
schedule repeat ptas remaining jobs machines
value k repeat necessary makespan determined job assigned
lpt rule
note still polynomial ptas might repeated
times constant approximation ratio improving subinstance number jobs considered long among set fewer jobs
larger portion jobs scheduled optimally therefore approximation ratio proof
valid sub instance finally merging last ptas schedule
machines holding long jobs get ptas whole instance since long
jobs scheduled optimally step moreover load machine
lower bound makespan sub instance considered machine
gets jobs

pk
claim op op
proof let z job determining makespan claim z assumed

assigned step lpt rule z n la
max else load
machine least pz since otherwise job z assigned
one machines therefore even total load n balanced among
pz since pz pk op get
op
pk
op op


claim pk op


k

proof consider k longest jobs optimal schedule machine assigned
least k bk mc jobs since jobs processing
time least pk conclude op bk mc pk implies



fiapproximate strong equilibrium


pk op bk mc claim pk
mop
bk mc op

pk bk mc follows pk op

k







back
lmax conclude lmax op pk
mbound



op k op

prove main section showing schedule produced
se stability proved following theorem running
time fixed k minimal lexicographic schedule first k jobs found
mk steps applying lpt rule takes additional nlogn get
running time scheme mm exponential assumed
constant

theorem produces se
proof proof similar proof lemma assume contradiction
exists instance machines schedule produced
exists coalition improvement ratio every member larger
let coalition minimum size every machine job
j migrates must exists job migrating otherwise j coalition
ir min contradiction minimality let denote set
machines part coalition let n n set jobs assigned
let consider instance hn schedule lemma
coalition exists
approximation makespan
machines take part moreover jobs improves factor
words pair machines j pi j
li l j hand since approximation machine


therefore pi j l op
words
li op

lj

lj


machine j receives least one job
op
however since least one job migrated participating machines
deviation machines assigned jobs n load
contradiction
less op

note schedule produced ne similar
stability proof lpt fotakis et al easy verify job
benefit leaving machine mi shortest job machine
benefit migration however independent whether short job length
pj assigned step part minimal lexicographical schedule
long job step lpt gap li load machine
pj
l j

computational complexity
easy see one determine polynomial time whether given configuration
ne yet se task involved section provide hardness
coalitional deviations
theorem given ne schedule identical machines np hard determine se


fifeldman tamir



b

b

b



b

jobs

b



b

b

b



b

jobs

b

b



b

b



jobs

b
b



figure partition induces coalition schedule identical machines

proof give reduction partition given set n integers
total size b question whether subset total size b construct
schedule figure schedule three machines n jobs loads
b b b b assume w l g mini ai else whole
instance scaled thus schedule ne add machines
single job load b
claim ne schedule figure se partition
proof partition k k total size b schedule
figure b better jobs originated partition instance two
b jobs partition jobs improved cost b cost b b jobs improved b b
next partition initial schedule se theorem action coalition three machines jobs must migrate
order decrease load b set jobs migrating
must set two jobs load b must partition jobs move
away otherwise total load least b b
improvement b jobs implies jobs split
however since partition one two subsets total load
least b jobs join job load b get total load least b
improvement b load initial schedule

establishes proof theorem

direct corollary proof following
corollary given ne schedule coalition np hard determine whether
coalition deviate
theorem holds identical machines configuration
ne se andelman et al therefore possible determine
whether given configuration se polynomial time yet following theorem shows
case unrelated machines np hard already
unrelated machines environment processing time job depends machine
assigned every job j machine pi j denotes processing time job
j processed machine
theorem given ne schedule unrelated machines np hard
determine se


fiapproximate strong equilibrium

proof give reduction partition given n integers total size
b question whether subset total size b construct following
instance scheduling machines n jobs following loads
n
pi ai pi ai n pn b pn b n
consider schedule jobs n job n
completion times machines b n ne



jn

b n





j jn

b n





b

jobs
jobs

jn

b

b

figure partition induces coalition schedule related machines

claim ne schedule figure se partition
proof partition total size b schedule given
figure b better everyone completion time b b n
completion time b b n
next partition initial schedule se since
partition partition one two subsets w l g total
size least b increase load migrating even alone bearing
load least b instead b n therefore leave
however stays job n better staying since migrates
bears load least b smaller b n
n

establishes proof theorem

direct corollary proof following
corollary given ne schedule unrelated machines coalition np hard
determine whether coalition deviate

conclusions open
study well ne schedules special subset obtained
outcome lpt assignment rule approximate se job scheduling games
two measures ir min ir max addition use dr max measure
study hurtful coalitional deviations agents outside coalition present
upper lower bounds ne lpt schedules demonstrate lptbased schedules perform better general ne schedules gap significant
ir max measure ne lpt ir min bounded small constant


fifeldman tamir

implying notion stability coalitional deviations assuming existence
transition cost ir max bounded constant lpt schedules
universal bound ne schedules yet lpt best possible approximation
se demonstrated se ptas design computes schedule ir min
arbitrarily close
remain open
ir min measure gap upper lower bounds

ir max lpt originated deviations presented lower bound

matching upper bound closing gap general left
open
focuses case identical machines would interesting study
topic approximate strong equilibrium additional job scheduling settings particular
setting uniformly related machines part ongoing already
case two machines seems rather involved note mentioned section
unrelated machines ir min unbounded already two machines
measures defined respect strong equilibrium solution concept
profitable deviation defined one every member coalition strictly
benefits would interesting consider measures introduce respect
additional solution concepts coalition proof nash equilibrium bernheim et al
stable profitable deviations stable
deviations sub coalitions respect profitable deviations none
coalition members worse least one member strictly better
summary introduced three general measures stability performance
schedules coalitional deviations believe measures used
measure stability performance coalitional deviations
performance additional settings games hope see work
makes use measures within framework algorithmic game theory would
interesting study families games nash equilibria approximate strong equilibria
defined measures introduced
acknowledgments thank leah epstein alon rosen helpful discussions
thank anonymous reviewers insightful remarks suggestions work
partially supported israel science foundation grant number

appendix bounding ir min ir max lpt originated deviations
first provide several observation valid lpt originated deviation
observations used later analysis moreover observations characterize
coalitions might exist schedules produced lpt rule combined
flower structure characterizes ne originated deviations three machines
get set lpt originated deviation limited must follow strict
structure
let loaded machine assume w l g lightest last job
assigned load denote job job assumption valid
provides tight bounds case considered chen



fiapproximate strong equilibrium

minimum improvement ratio invariant linear transformations denote
ki set total load jobs remain mi denote hi j set
total load jobs migrating mi mj let k h h
excluding job
next propositions total size jobs migrating
remaining least large last job
proposition h h least
proof h proof h analogous assume contradiction
h since lpt schedule jobs non increasing order jobs composing
h assigned job therefore job assigned load
k least h h k else lpt would assign job thus
k h h k flower structure job migrating
migration beneficial l l distinguish two cases
job migrates case l k h therefore k
h h h k k h k however
k h h k h k contradiction
job migrate case l k h therefore k
h h h k k h k however
k h h k h k contradiction last inequality follows
fact h empty consists least one job least big
smallest job

proposition k k least
proof first k assume k means job assigned
load composed jobs subset h therefore
lpt rule h k h h however proposition l l therefore
h h thus k h however h contradiction
k note k similar argument h h h
proposition l l therefore h h implying k h contradiction



theorem lpt configuration three machines se
proof let loaded machine schedule recall lightest
last job assigned job load let l give lpt schedule
deviation let r ir min
claim obeys flower structure therefore
r l l ii r
p



l l iii r l l iv r l l let p j pj clearly p l l l
l l l summing ii get
l

l l
p


r
r




fifeldman tamir

lpt l l thus p summing iii iv equation
get
r

l







l
p l
p r


l

implying
r


r





r



r










r







case case equation implies r
case case requires closer analysis let instance lpt
creates schedule deviation achieving maximal ir min
denote hi total load jobs migrating mi ki
total load jobs remain mi flower structure l h h therefore
h k h k else would beneficial jobs composing h h
join coalition propositions h h k k least
claim load incurred exactly two jobs
proof clearly since consider case lightest job load
load incurred two jobs assume contradiction consists single
job exactly two jobs loads flower structure
job must join coalition w l g assume migrates migration profitable
k contradicting proposition

therefore assume w l g instance achieving maximal ir min
assigned three jobs loads
bound equation implies
r










consider first case one two big jobs migrate away
coalition deviation beneficial case w l g assume
job length remains job length migrates
migration profitable k hand migration
jobs migrating profitable k h
contradiction
consider next case job migrate away w l g
assume job length migrates job length migrates
order bound r according equation lower bound
equation
r

l l
k h k h
k k






l
h h






fiapproximate strong equilibrium

third inequality due fact ratio decreasing h h
known least proposition last inequality since migrations
beneficial jobs leaving k k
equation implies r r next apply bound
equation obtain
r

r

r





implies r

case analyze yet one three jobs assigned migrate
away deviation assume w l g jobs size migrating
job size migrating clearly jobs size
migrate machine currently assigned additional load
k k least proposition figure shows schedule
migration figure migration figure b



k

h



k

h







l



k h



k h



k







h

h

k



k


k
h h

b



figure lpt coalition achieving maximal ir min
next lower bound considering migration
know r k therefore r r k r
r rk considering migration know
r k h h h therefore k h r h r lpt assigns job
load load time k h
therefore k h implying h k proposition
h use bounds h h get improved bound k specifically
k k r r implies k r r r back
bound r r r thus
r r note r positive since theorem r
finally apply bound equation obtain
r

r
r r


r r
r



implies r

bound tight specifically

theorem exists lpt schedule ir min





consider figure
r
h k k
r






proof let r

substitute

k

h instance





fifeldman tamir

rounded values appears figure easy verify three jobs leaving
improvement ratio exactly r holds two jobs migrating


thus instance ir min moreover lower bound easily
extended adding dummy jobs machines thus



















































b



figure lpt originated
deviation three machines migrating jobs im


prove


theorem let lpt schedule three machines holds ir max
proof let loaded machine recall lightest last job assigned
job load ki set total load jobs
remain mi hi j set total load jobs migrating mi
mj let k h h excluding job
job assigned lpt meaning load least
k h h time since load could increase time
job assigned get
k h h k h



k h h k h



therefore sum two
k h h k k h h



distinguish two cases
job remains case l k h h l
k h l k h coalition active l k h h l
k h l k h
since jobs h h part coalition l l l deducing
h h sides get k k h h k combining
equation get
h h h h

proposition h h k k least proposition
improvement ratio job equals l l largest among coalition
ratio bounded follows
k h h
k h h
l





l
k h h
k h h



fiapproximate strong equilibrium

left inequality follows equation right one follow proposition
fact k might empty
ii job leaves assume w l g job moves
case l k h h l k h l k h coalition
active l k h h l k h l k h
since jobs h h part coalition l l l deducing
h h sides get k k h h k combining
equation get
h h h h

propositions h h k k least k empty
jobs k improvement ratio l l proposition largest
ratio among coalition ratio bounded follows
k h h
k h h
l





l
k h h
k h h

left inequality follows equation right one follows proposition
fact k empty includes least one job load least
k empty maximal improvement ratio less
bound separately improvement ratio h h hi denote
ri j ir jobs moving mi mj addition equations
propositions use proposition specifically h h
h h finally bear mind k
r

h h
k h
k h

l





l
k h
k h
k h


r

h h
k h
k h

l





l
k h
k h
k h


ri

ki hi
h h
h h
li






l
h h
h h
h h



appendix b list scheduling
list scheduling ls greedy scheduling jobs assigned
machines arbitrary order similar lpt job assigned least loaded

machine time assignment ls known provide
approximation
minimum makespan graham ls depart qualitatively
lpt respect makespan approximation e provide constant approximation
optimal makespan qualitatively different respect game theoretic
properties first ls necessarily produce ne moreover next ls
performs poorly respect measures introduced
improvement ratio job bounded even coalition consists single
job consider example instance machines jobs lengths x


fifeldman tamir

order x ls produce schedule loads x job length
scheduled long job migrate join short job improvement
ratio x arbitrarily large
damage ratio deviation ls schedule bounded consider
instance three machines jobs lengths x easy
verify resulting ls configuration exists coalition job
length x migrates since x arbitrarily large damage ratio job
machine x migrates arbitrarily large note damage ratio caused
deviation single job see consider ls configuration
assume job j length pj migrates denote bj aj total
load jobs assigned j respectively aj j last
beneficial j migrate bj l else j assigned
else first job j assigned bj pj less load
time therefore l bj pj particular pj l damage
ratio l pj l analysis tight exemplified instance
x

references
fiat h kaplan l olonetsky strong price anarchy machine
load balancing international colloquium automata languages programming icalp
albers value coordination network design siam j comput

albers elits even dar e mansour roditty l nash equilibria
network creation game annual acm siam symposium discrete
soda
andelman n feldman mansour strong price anarchy soda
anshelevich e dasgupta kleinberg j tardos e wexler roughgarden
price stability network design fair cost allocation focs
pp
anshelevich e dasgupta tardos e wexler roughgarden nearoptimal network design selfish agents acm symposium theory computing stoc
aumann r acceptable points general cooperative n person games contributions theory games vol
awerbuch b azar richter tsur tradeoffs worst case equilibria
st international workshop approximation online
bernheim b peleg b whinston coalition proof nash equilibria
concepts journal economic theory
chen b equilibria load balancing games acta mathematica applicata sinica
appear


fiapproximate strong equilibrium

christodoulou g koutsoupias e nanavati coordination mechanisms j
daz j karhumaki lepisto sannella eds automata languages
pro gramming lecture notes computer science berlin springer
pp
christodoulou g koutsoupias e price anarchy stability
correlated equilibria linear congestion games annual european symposium
esa
czumaj vocking b tight bounds worst case equilibria acm siam
symposium discrete soda pp
epstein feldman mansour strong equilibrium cost sharing
connection games acm conference electronic commerce acmec
fabrikant luthra maneva e papadimitriou c shenker
network creation game acm symposium principles distriubted computing
podc
finn g horowitz e linear time approximation multiprocessor
scheduling bit numerical mathematics
fotakis kontogiannis spiraklis p structure complexity nash equilibria selfish routing game international colloquium
automata languages programming icalp pp
graham r bounds certain multiprocessing anomalies bell systems technical
journal
graham r bounds multiprocessing timing anomalies siam j appl math

halpern j teague v rational secret sharing multiparty computation
acm symposium theory computing stoc pp
holzman r law yone n strong equilibrium congestion games games
economic behavior
holzman r law yone n network structure strong equilibrium route
selection games mathematical social sciences
koutsoupias e papadimitriou c h worst case equilibria symposium
theoretical aspects computer science stacs pp
lamport l shostak r pease byzantine generals acm
trans prog lang sys
leonardi sankowski p network formation games local coalitions
acm symposium principles distriubted computing podc
milchtaich crowding games sequentially solvable international journal
game theory
papadimitriou c h games internet acm symposium
theory computing stoc pp



fifeldman tamir

procaccia rosenschein j communication complexity coalition
formation among autonomous agents int conference autonomous agents
multiagent systems aamas pp
roughgarden tardos e bad selfish routing journal acm

rozenfeld tennenholtz strong correlated strong equilibria monotone congestion games workshop internet network economics wine
schuurman p vredeveld performance guarantees local search
multiproces sor scheduling informs journal computing




