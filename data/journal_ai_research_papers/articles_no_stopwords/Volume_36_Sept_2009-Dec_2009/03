journal artificial intelligence

submitted published

note
soft goals compiled away
emil keyder

emil keyder upf edu

universitat pompeu fabra
roc boronat
barcelona spain

hector geffner

hector geffner upf edu

icrea universitat pompeu fabra
roc boronat
barcelona spain

abstract
soft goals extend classical model simple model preferences
best plans ones least cost ones maximum utility
utility plan sum utilities soft goals achieved minus
plan cost finding plans high utility appears involve two linked
choosing subset soft goals achieve finding low cost plan achieve
search heuristics developed soft goals
track introduced international competition ipc test
performance note however extensions needed
soft goals increase expressive power basic model action
costs easily compiled away apply compilation
net benefit track recent ipc optimal satisficing
cost planners better compiled optimal satisficing netbenefit planners original explicit soft goals furthermore
penalties negative preferences expressing conditions avoid compiled
away similar idea


strips tuple p hf gi f set fluents f
g f initial state goal situation set actions operators
precondition add delete lists p add del respectively
subsets f action sequence ha applicable p actions ai
n exists sequence states hs sn
p ai si si si add ai del ai n applicable
action sequence achieves fluent g g sn plan p achieves goal
g g write g classical setting cost plan c given
number actions cost structure generalized addition
cost function operators
c

ai access foundation rights reserved

fikeyder geffner

definition strips action costs tuple pc hf g ci

p hf gi strips c function c
r
r stands
non negative reals
cost plan pc given

x

c

c ai





ai denotes th action cost function c obtained special
case c adding utilities soft goals formulation
model
definition strips action costs soft goals tuple pu hf
g c ui p hf g ci strips action costs u partial
function u f r maps subset fluents soft goals positive reals
strips soft goals pu utility plan given difference
total utility obtained plan cost
u

x

u p c



p p

plan soft goals pu optimal plan utility
u higher u utility optimal plan hard goals
never negative empty plan non negative utility zero cost
recent international competition ipc featured sequential optimal net benefit optimal tracks objective optimal plans
respect captured equation equation respectively helmert
refanidis

equivalence
given p soft goals equivalent p action costs soft
goals defined whose plans encode corresponding plans p transformation
first introduced keyder geffner simple direct yet seems escaped attention researchers area smith sanchez kambhampati
bonet geffner baier bacchus mcilraith unlike compilation
soft goals numeric variables arbitrary plan metrics edelkamp proposed
transformation makes use neither requires planners ability handle
pddl soft goals represented expressions form u violated hprefi appearing
metric pref preference soft goal associated formula
single fluent expression corresponds u u terminology used
competition benchmarks contain preferences form general case arises
compound formula fluents considered section



fisoft goals compiled away

action costs basic functionality required satisficing track recent ipc
helmert et al
write actions tuples form hpre eff effects
positive adds negative deletes assume soft goal fluent p p
contains fluent p representing negation introduced standard way
adding p initial state p initially true including p add delete
lists actions deleting adding p respectively gazen knoblock nebel
p action costs soft goals equivalent p
soft goals obtained following transformation
definition strips action costs soft goals p hf g c ui
compiled strips action costs p hf g c
f f p p normal mode end mode
p normal mode
g g p
collect p f orgo p p sg p end

c

u p forgo p
c


collect p end

sg p p p f u p
p p p sg p
p p p p
end h normal mode end mode normal mode
collect p h end mode p p p p
forgo p h end mode p p p p
hpre normal mode eff
edelkamps transformation associates soft goals p pm numeric
variables n nm
p
domain utility plan expressed u n
ni u pi cost
u pi represents utility associated soft goal pi ni represents value numeric variable
final state achieved plan transformation eliminates soft goals requires
place plan metric whose terms namely whether variables u pi state dependent
current heuristics deal metrics see sections



fikeyder geffner

soft goal p p transformation adds dummy hard goal p p
achieved two ways action collect p cost requires p
true action forgo p cost equal utility p yet performed
p false equivalently p true two actions used
end action makes fluent end mode true actions original
p used fluent normal mode true prior execution
end action moreover exactly one collect p forgo p appear soft goal
p plan delete shared precondition p action makes true
way make normal mode true deleted end action
plans p form h end plan p sequence
p collect p forgo p actions order former appearing p
latter otherwise
two p p equivalent sense correspondence
plans p p corresponding plans ranked way
specifically plan p plan p extends end action
set collect forgo actions plan cost c u
constant independent finding optimal maximum utility
plan p therefore equivalent finding optimal minimum cost plan p
proposition correspondence plans applicable action sequence
p let extension denote sequence obtained appending end action
followed permutation actions collect p forgo p p sg p
p p respectively
plan p plan p
proof actions p delete p f hard goal achieved
remain true final state reached g p f
u p p p first case p achieved collect p
second forgo p therefore p since g g p g
plan p hard goals g p must made true
end action action collect forgo actions applied
make p f true plan obtained removing end action collect
forgo actions must therefore achieve g thus valid plan p

proposition correspondence utilities costs let two
plans p let extensions respectively
u u c c



proof let
p plan p extension demonstrate c
u psg p u p since summation expression constant given
p assertion follows directly



fisoft goals compiled away

x

c c c end

c forgo p

forgo p

x

c

x

c collect p

collect p

c forgo p

forgo p

c

x

u p

p p

x

c

u p

x

u p

p p

psg p

u

x

u p

psg p


proposition equivalence let plan p plan p extends

optimal plan p optimal plan p

proof direct two propositions



following section empirically compare performance net benefit planners
p explicit soft goals sequential planners p
soft goals compiled away order improve latter make
transformation definition effective simple trick recall single
plan p many extensions p containing actions
cost differing way collect forgo actions ordered
efficiency purposes implementation enforces fixed arbitrary ordering p pm
soft goals p adding dummy hard goal p precondition actions
collect pi forgo pi single possible
extension every plan p space plans search therefore reduced
optimization used experiments reported

experimental
formal imply best plans p action costs
soft goals computed looking best plans compiled p
action costs soft goals standard classical techniques
applied test practical value transformation evaluate performance
optimal satisficing techniques soft goals test
suite contain preferences conjunctions rather single fluents preferences
handled variant described detailed section
shown three columns table labelled net benefit optimal planners
reported organizers international competition
ipc helmert et al obtained machines


fikeyder geffner

domain
crewplanning
elevators
openstacks
pegsol
transport
woodworking
total

net benefit optimal planners
gamer hsp p mips xxl






















sequential optimal planners
gamer hsp f hsp mips xxl

























table coverage optimal planners leftmost three columns give number
solved planners net benefit optimal track ipc reported
competition organizers rightmost four columns give number compiled
solved sequential optimal versions planners dashes indicate
version planner could run domain

settings used competition xeon woodcrest computers clock speeds
ghz time limit minutes memory limit gb
first set experiments consider used net benefit optimal
nbo track ipc soft goals defined terms goal state preferences
gerevini long compare obtained three optimal netbenefit planners obtained sequential optimal variants
compilations three planners entered nbo track ipc gamer
mips xxl hsp p planners test compiled versions nbo
versions gamer edelkamp kissmann mips xxl
edelkamp jabbar two planners hsp f hsp haslum
ranked first fifth second third respectively track helmert
et al three six domains nbo track ipc involve numeric
variables appear preconditions actions version gamer
handle numeric variables therefore unable run gamer
numeric variables never appear soft goals left untouched compilation
data table two hsp planners track run
compiled well better best planner nbo track run
original soft goals maximum number solved
domain higher nbo track planners single domain openstacks vs
domains planners able solve larger number
compiled currently available http ipc informatik uni freiburg de domains
versions hsp bug may cause suboptimal invalid solutions computed
domains non monotonic numeric variables numeric variables whose values may increase
decrease occur preconditions actions goals see http ipc informatik uni freiburg
de planners variables present transport domain tested yet plans
computed hsp versions domain turn valid verified val plan
validator howey long optimal instances checked
costs plans computed planners



fisoft goals compiled away

domain
elevators
openstacks
pegsol
rovers
total

net benefit satisficing planners
sgplan yochanps mips xxl
















cost satisficing planners
lama






table coverage quality satisficing planners entries indicate number
planner generated best quality plan

maximum number solved nbo planner considering performance nbo
variants planner compilation benefits two versions
heuristic search planner hsp leaving bdd planners gamer mips xxl relatively
unaffected interestingly hsp compilation ends solving
gamer winner nbo track vs drastically better performance
versions hsp compared net benefit version simple scheme
handling soft goals latter optimal plans computed possible
subset soft goals roughly change search
ida
second set experiments consider three domains nbo track
ipc contain numeric variables preconditions actions
domain rovers net benefit track ipc domains containing numeric variables
preconditions actions considered due lack state art cost
planners able handle domains rovers nb track ipc
considered contain disjunctive existentially qualified universally qualified
soft goals current implementation support satisficing net benefit
planners test sgplan hsu wah winner net
benefit track ipc yochanps benton kambhampati received
distinguished performance award competition satisficing variant
mips xxl received distinguished performance award competition
competed optimal track ipc solve compiled versions
lama winner sequential satisficing track ipc yochanps mips xxl
lama anytime planners discussed refer cost
best plan found end evaluation period minutes
entries table number domain plan
generated planner best plan produced report data rather
showing graphs plan utilities absolute difference quality plans
meaningful except shortest plans ignore costs soft goals
significantly costly running state art
cost planner compiled yields best plan total
instances almost three times number instances best performing
native soft goals planner mips xxl gives best plan furthermore


fikeyder geffner

mips xxl finds best plan pegsol domain lama finds plan
quality satisficing net benefit planners outperform
lama run compiled therefore
appear contradict reported benton et al
native net benefit planner yochanps yields better cost planner
yochancost run compiled according earlier version transformation
keyder geffner discrepancy appears non informative
cost heuristic used yochancost leads plans forgo soft goals
fact make use optimization discussed end section
unnecessary blowup state space analysis differences
recent cost planners see keyder geffner

extensions
shown possible compile away positive utilities u p associated
single fluents p compilation extended deal positive
utilities defined formulas fluents negative utilities defined single
fluents formulas negative utilities stand conditions avoided rather
sought example utility u p q penalizes plan state
p q true extra cost compilation soft goals defined
formulas standard compilation goal precondition formulas classical
gazen knoblock nebel
positive utility logical formula compiled away introducing
fluent pa achieved zero cost end state holds
assigning utility associated pa dnf formula dn
suffices add n actions ai hdi pa n
cnf formula c cn fluent pi introduced n along
actions aij hcij pi j ci cij stands jth fluent ci
introduce action h p pn pa allows addition fluent pa states
holds newly introduced actions zero cost must applicable
p actions original p collect forgo actions
best extensions plan achieves p achieve pa use collect
action achieve hard goal fluent p associated pa zero cost
negative utility u formula dnf cnf compiled away
two steps first substituting positive utility u negation
compiling positive utility formula utility single fluent described
makes use fact negation formula cnf formula
dnf vice versa

summary
shown soft goals add expressive power easily compiled
away implies search heuristics strictly required
handling practical standpoint experiments indicate state art
sequential planners outperform state art net benefit planners compiled versions


fisoft goals compiled away

benchmarks used recent competitions furthermore similar transformations
used compile away positive negative utilities logical formulas dnf
cnf

acknowledgments
thank malte helmert help compiling running many ipc planners
patrik haslum help aspects versions hsp j benton
help compiling running yochanps h geffner partially supported grant
tin c mec spain

references
baier j bacchus f mcilraith heuristic search
temporally extended preferences proc ijcai pp
benton j kambhampati anytime heuristic search partial satisfaction artificial intelligence
bonet b geffner h heuristics penalties rewards formulated logic computed circuits artificial intelligence

edelkamp compilation plan constraints preferences proc
icaps pp
edelkamp jabbar mips xxl featuring external shortest path search
sequential optimal plans external branch bound optimal net benefit
th int competition booklet icaps
edelkamp kissmann p gamer bridging general game playing
symbolic search th int competition booklet icaps
gazen b knoblock c combining expressiveness ucpop
efficiency graphplan steel alami r eds proc th european conf
pp springer
gerevini long preferences soft constraints pddl proc
icaps workshop preferences soft constraints pp
haslum p additive reversed relaxed reachability heuristics revisited th
int competition booklet icaps
helmert refanidis ipc deterministic competition th
int competition booklet icaps
howey r long vals progress automatic validation tool pddl
used international competition proc icaps workshop
competition impact organization evaluation benchmarks
hsu c w wah b w sgplan system ipc th int
competition booklet icaps


fikeyder geffner

keyder e geffner h set additive tsp heuristics action costs soft goals proc icaps workshop heuristics domainindependent
keyder e geffner h heuristics action costs revisited
proc th european conference artificial intelligence pp
nebel b compilation schemes theoretical tool assessing expressive
power formalisms proc ki advances artificial intelligence pp
springer verlag
nebel b compilability expressive power propositional
journal artificial intelligence
sanchez r kambhampati graph heuristics selecting objectives
subscription proc icaps pp
smith e choosing objectives subscription proc icaps
pp




