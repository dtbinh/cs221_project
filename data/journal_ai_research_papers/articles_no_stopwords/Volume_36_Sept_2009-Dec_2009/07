journal artificial intelligence

submitted published

roxybot stochastic prediction optimization
tac travel
amy greenwald

amy cs brown edu

department computer science brown university
providence ri usa

seong jae lee

seongjae u washington edu

computer science engineering university washington
seattle wa usa

victor naroditskiy

vnarodit cs brown edu

department computer science brown university
providence ri usa

abstract
describe autonomous bidding agent roxybot emerged victorious travel division trading agent competition photo finish
high level design many successful trading agents summarized follows
price prediction build model market prices ii optimization solve
approximately optimal set bids given model predict roxybot builds stochastic model market prices simulating simultaneous ascending auctions optimize
roxybot relies sample average approximation method stochastic optimization
technique

introduction
annual trading agent competition tac challenges entrants design build
autonomous agents capable effective trading online travel shopping game first
tac held boston attracted entrants six countries north america
europe asia excitement generated event led refinement game
rules continuation regular tournaments increasing levels competition
next six years year year entrants improved designs developing ideas
building previously successful techniques since tacs inception lead author
entered successive modifications autonomous trading agent roxybot
reports roxybot latest incarnation top scorer tac tournament
key feature captured tac travel game goods highly interdependent
e g flights hotels must coordinated yet markets goods operate
independently second important feature tac agents trade via three different
kinds market mechanisms presents distinct challenges flights traded
posted price environment designated party sets price parties
four divisions tac travel supply chain management scm cat tac backwards
ad auctions aa concerned first description others see
papers arunachalam sadeh cai et al jordan wellman respectively
say tac mean tac travel

c

ai access foundation rights reserved

figreenwald lee naroditskiy

must take leave hotels traded simultaneous ascending auctions fcc
spectrum auctions entertainment tickets traded continuous double auctions
york stock exchange grappling three mechanisms constructing
agent strategies participants confronted number interesting
success autonomous trading agent tac agent often hinges upon
solutions two key price prediction agent builds model
market prices ii optimization agent solves approximately
optimal set bids given model example core roxybots architecture greenwald boyan deterministic optimization namely
bid given price predictions form point estimates spite effectiveness
tac tournament weakness design roxybot could explicitly
reason variance within prices years since recast key challenges
faced tac agents several different stochastic bidding see example
greenwald boyan whose solutions exploit price predictions form
distributions spite perseverance roxybot fared unimpressively tournament
conditions year year half decade laboratory spent searching
bidding heuristics exploit stochastic information reasonable computational expense finally bore fruit roxybot emerged victorious tac nutshell secret
roxybot success hotel price prediction simulating simultaneous ascending
auctions optimization sample average approximation method details
subject present article
overview organized follows starting section summarize
tac market game next section present high level view roxybots
architecture section describe roxybots price prediction techniques flights hotels entertainment turn perhaps greatest interest hotel price prediction
method following wellman et al predict hotel prices computing approximate competitive equilibrium prices instead computing prices running
tatonnement process simulate simultaneous ascending auctions procedure
simpler implement tatonnement yet achieves comparable performance runs
sufficiently fast section describe roxybots optimization technique sample average
approximation argue optimal pseudo auctions abstract
model auctions section describe simulation experiments controlled testing environment combined approachsimultaneous ascending auctions
hotel price prediction sample average approximation bid optimizationperforms
well practice comparison reasonable bidding heuristics section
detail tac tournament validating success roxybot
strategy reporting statistics shed light bidding strategies participating agents finally section evaluate collective behavior autonomous
agents tac finals since accuracy competitive equilibrium
calculations varied year year highly dependent particular agent
pool still generally speaking collective appears moving toward competitive
equilibrium behavior



firoxybot

tac market game brief summary
section summarize tac game details see http www sics se
tac
eight agents play tac game simulated travel agent whose task
organize itineraries clients travel tactown five day four
night period time allotted nine minutes agents objective procure
travel goods inexpensively possible trading fact goods
ultimately compiled feasible trips satisfy client preferences greatest
extent possible agents know preferences eight clients

travel goods sold simultaneous auctions follows
flight tickets sold tacair dynamic posted pricing environments
flights tactown applicable day resale flight
tickets agents permitted
flight price quotes broadcast tac server every ten seconds
hotel reservations sold tac seller multi unit ascending call markets
specifically hotel reservations sold hotel auction highest
bidders th highest price tac seller runs eight hotel auctions one per
night hotel combination recall travel takes place four night period
moreover two hotels good one bad one resale hotel
reservations agents permitted bid withdrawal allowed
specifically eight hotel auctions clear minute exactly one auction
closing minutes one eight precise auction close chosen
random open auctions equally likely selected auction
closes tac server broadcasts final closing price informs agent
winnings others tac server reports current ask price informs
agent hypothetical quantity hqw
agents allocated initial endowment entertainment tickets trade
among continuous double auctions cdas three entertainment events scheduled day
although event auctions clear continuously price quotes broadcast every
seconds
one primary challenges posed tac design build autonomous agents
bid effectively interdependent e complementary substitutable goods
sold separate markets flight tickets hotel reservations complementary
flights useful client without corresponding hotel reservations vice
versa tickets entertainment events e g boston red sox boston symphony
orchestra substitutable client cannot attend multiple events simultaneously



figreenwald lee naroditskiy

repeat
start bid interval
download current prices winnings server
predict build stochastic
flights bayesian updating learning
b hotels simultaneous ascending auctions
c entertainment sample historical data
optimize sample average approximation
upload current bids server
three separate threads
end bid interval
game

table high level view roxybot architecture

roxybot architecture high level view
bidding interdependent goods separate tac
markets adopt simplifying assumptions rather tackle game theoretic
characterizing strategic equilibria focus single agents decision theoretic
optimizing bidding behavior assuming agents strategies
fixed addition assume environment modeled terms agents
predictions market clearing prices prices serve summarize relevant information hidden agents bidding strategies two assumptionsfixed otheragent behaviors market information encapsulated pricessupport modular design roxybot many successful tac agents consists two key stages
price prediction ii optimization
optimization faced tac agents dynamic one incorporates
aspects sequentiality well simultaneity auctions markets operate simultaneously addition prices discovered incrementally time principle
clairvoyant agentone knowledge future clearing pricescould justifiably employ
open loop strategy could solve tac optimization start
game place bids accordingly never reconsidering decisions practical alternative usual taken tac incorporate agents
architecture closed loop bidding cycle enabling agent condition behavior
evolution prices price information revealed agent improves price
predictions reoptimizes bidding decisions repeatedly
one distinguishing feature roxybot builds stochastic market
clearing prices rather predicting clearing prices point estimates given stochastic
price predictions stochastic optimization lies heart roxybot assuming time
exception livingagents fritschi dorer winner tac



firoxybot

discretized stages bid intervals iteration bidding cycle roxybot
faces n stage stochastic optimization n number stages remaining
game key input optimization sequence n stochastic
future prices one joint probability distribution goods conditioned
past prices past hotel closings solution optimization
output iteration bidding cycle vector bids one per good auction
table presents high level view roxybot architecture emphasizing bidding
cycle start bid interval current prices winnings downloaded
tac server next key prediction optimization routines run prediction module stochastic flight hotel entertainment prices built
optimization module bids constructed approximate solution n stage
stochastic optimization prior end bid interval agents bids
uploaded tac server three separate threads flight thread bids
flight price near predicted minimum ii hotel thread bids open
hotels moments end minute iii entertainment thread
places bids immediately
discuss details roxybot price prediction module first optimization
module second

price prediction
section describe roxybot builds stochastic flight hotel
event prices model discrete probability distribution represented set scenarios scenario vector future pricesprices goods bought
sold current stage flights price prediction model stochastic
future buy price simply roxybot prediction expected minimum price
current stage hotels future buy prices predicted monte carlo simulations
simultaneous ascending auctions approximate competitive equilibrium prices
current buy prices hotels entertainment roxybot predicts future buy
sell prices historical data details price prediction methods focus
section
flights
efforts deliberate flight purchasing start understanding tac model
flight price evolution
tac flight prices stochastic process
flight prices follow biased random walk initialized uniformly range
constrained remain range start tac
game instance bound z final perturbation value selected flight
bounds revealed agents revealed agents sequence
random flight prices every ten seconds tacair perturbs price flight
random value depends hidden parameter z current time follows
given constants c r intermediate bound perturbation value



figreenwald lee naroditskiy

linear function


z c


perturbation value time drawn uniformly one following ranges see

x z c

u c x z x z
u c c x z
u x z c x z
observe expected perturbation value case simply average
corresponding upper lower bounds particular
x z c expected perturbation positive
x z c expected perturbation negative
x z c expected perturbation positive
otherwise x z c c expected perturbation zero
moreover equation compute expected perturbation value conditioned
z
z c x z c prices expected increase
z c c x z c c prices expected decrease
z c x z c c prices expected increase
ct

expected decrease cz

ct
cz

tac parameters set follows c z uniformly
distributed range c discussion note following
given information z tac flight prices expected increase e
expected perturbation positive however conditioned z tac flight prices may
increase decrease e expected perturbation positive negative
roxybot flight prices prediction method
although value hidden parameter z never revealed agents recall
agents observe sample flight prices say yt depend value
information used model probability distribution pt z p z yt
probability distribution estimated bayesian updating roxybot agents walverine cheng et al mertacor toulis et al took
walverine uses bayesian updating compute next expected price perturbation
compares value threshold postponing flight purchases prices expected
increase threshold mertacor uses bayesian updating estimate
time flight prices reach minimum value roxybot uses bayesian updating
compute expected minimum price describe


firoxybot

getrange c z
compute x z equation
x z
c b x z
else x z
x z b c
else
c b c
end
return b range
roxybot implementation bayesian updating presented letting

q z


c

p z estimates pt z p z yt usual
p yt z p z



z p yt z p z dz



p z yt p
p yt z











p yi yi z



p yi z





equation follows fact future observations independent past observations observations depend hidden parameter z
thing left explain set values p yi z
described pseudocode done follows yt within appropriate range
time probability set uniformly within bounds range otherwise
set presumably walverines mertacors implementations bayesian updating
different one however alluded agents make
use ensuing estimated probability distributions differ
roxybot predicts flights price expected minimum price value
computed follows see possible value hidden parameter z
roxybot simulates expected random walk selects minimum price along walk
outputs prediction expectation minima averaging according
pt z call random walk expected since perturbation value expectation
e ba
instead sample e u b carrying computation
roxybot generates flight price predictions point estimates implicit decision
make roxybot hotel event price predictions stochastic made
intuitive sense time vs accuracy tradeoffs roxybots optimization module
hence warrants study
provide details corresponding details agents seem publicly
available



figreenwald lee naroditskiy

flight prediction c yt qt
z c c
b getrange c z
yt b

p yt z ba
else
p yt z
end
qt z p yt z qt z
end update probabilities
z c c
z
pt z p q


z qt z dz
end normalize probabilities
return pt probabilities
expected minimum price c pt pt
z r
min z

b getrange c z
ba
expected perturbation
p p perturb price
p max min p
p min z
min z p
end
end
end forp
return z pt z min z dz
hotels
competitive market individuals effect prices negligible equilibrium prices prices supply equals demand assuming producers profitmaximizing consumers utility maximizing roxybot predicts hotel prices
simulating simultaneous ascending auctions simaa cramton attempt
approximate competitive equilibrium ce prices inspired walverines cheng et al tatonnement method walras used
purpose
simultaneous ascending auctions
let p denote vector prices
p denotes cumulative supply producers
x
p denotes cumulative demand consumers z
p x
p
p denotes



firoxybot

excess demand market tatonnement process adjusts price vector iteration
n given price vector iteration n adjustment rate n follows p n
p n n z
pn simaa adjusts price vector follows p n p n max z
pn
fixed value processes continue excess demand non positive
e supply exceeds demand
although competitive equilibrium prices guaranteed exist tac markets cheng et al simaa adjustment process still guaranteed converge
prices increase demand decreases supply increases hence supply eventually exceeds demand parameter simaa method magnitude price
adjustment smaller value accurate approximation assuming ce
prices exist value chosen lowest value time permits
tatonnement process hand difficult apply
guaranteed converge walverine team dealt convergence issue decaying
initial value however careful optimization required ensure convergence
reasonable solution reasonable amount time fact walverine found helpful
set initial prices certain non zero values complexity present
simultaneous ascending auctions approximate competitive equilibrium prices
prediction quality
tac cumulative supply fixed hence key computing excess demand
compute cumulative demand tac agent knows preferences clients
must estimate demand others walverine computes single hotel price prediction
point estimate considering clients demands together expected
clients briefly utility expected client average across travel dates hotel
types augmented fixed entertainment bonuses favor longer trips see
cheng et al details contrast roxybot builds stochastic model
hotel prices consisting scenarios considering clients demands together
random samples clients random expected clients demand simply
quantity good optimal package given current prices cumulative demand
sum total clients individual demands
figure present two scatter plots depict quality hotel price
predictions beginning tac final games price predictions evaluated two metrics euclidean distance expected value perfect prediction
evpp euclidean distance measure difference two vectors case
actual predicted prices value perfect prediction vpp client
difference surplus value preferred package less price actual
predicted prices evpp vpp averaged distribution client preferences
left plot predictions generated competitive equilibrium ap
proximation methods tatonnement simaa fixed
making expected
random exact predictions exact predictions computed actual
clients games client distribution hence serve lower bound
performance techniques data set metrics
expected random simaas predictions outperform tatonnements
see wellman et al details



figreenwald lee naroditskiy




livingagents
packatac
southampton
roxybot umbctac
whitebear
sics baseline
attac

expected value perfect prediction

expected value perfect prediction


tatonnement random



simaa random


tatonnement expected




simaa expected

simaa exact
tatonnement exact




harami

cuhk


kavayah

simaa random


walverine


















euclidean distance

attac
















euclidean distance

figure evpp euclidean distance ce price prediction methods tatonnement

expected random exact tac agents
simaa
predictions finals games plot left shows simaas
predictions better tatonnements expecteds better
randoms roxybot method hotel price prediction simaa random
plotted right note differences scales two plots

since fixed tatonnement guaranteed converge condition
outcome entirely surprising interesting though simaa expected
performs comparably walverine see right plot interesting simaa
fewer parameter settings tatonnementonly single value compared
initial value together decay scheduleand moreover optimize
parameter setting walverines parameter settings hand highly
optimized
interpret prediction generated randomly sampled clients sample
scenario set scenarios represents draws probability distribution
ce prices corresponding vector predicted prices evaluated actually
average multiple predictions evaluate estimate mean
probability distribution predictions generated sets random clients
good predictions expected clients see figure left although
sets random clients might improve still predictions random
clients comprise roxybot stochastic model hotel prices key bidding
strategy moreover random clients helps roxybot make better interim predictions
later game explain next
prediction quality time interim price prediction
graphs depicted figure pertain hotel price predictions made beginning
game hotel auctions open ce computations prices initialized
hotel auctions close roxybot updates predicted prices hotel auctions
exception roxybot data point e simaa random plot produced
walverine team wellman et al







tatonnement expected clients
simaa expected clients
tatonnement random clients
simaa random clients
tatonnement random clients distribution
simaa random clients distribution





tatonnement expected clients
simaa expected clients
tatonnement random clients
simaa random clients
tatonnement random clients distribution
simaa random clients distribution


euclidean distance per hotel

expected value perfect prediction per hotel

roxybot




































minute















minute

figure evpp euclidean distance tac finals games ce price
prediction methods without distribution game progresses distribution improves prediction quality

remain open experimented two ways constructing interim price predictions
first initialize lower bound prices hotel markets closing
closed auctions current ask open auctions prices computing competitive
equilibrium prices second differs treatment closed auctions simulate
process distributing goods closed auctions clients want
exclude closed markets e fix prices computations
competitive equilibrium prices
regarding second methodthe distribution methodwe determine distribute goods computing competitive equilibrium prices explained hotels open closed auctions distributed random clients
determining willing pay competitive equilibrium prices
immediately obvious distribute goods expected clients hence enhanced
prediction methods random clients distribution
figure depicts prediction quality time shows prediction methods
enhanced distribution better predictions obtained merely initializing
prices closed hotel auctions closing prices hotels close early tend
sell less hotels close late hence prediction quality method
makes decent initial predictions bound deteriorate predictions remain relatively
constant throughout game
run time
table shows run times ce prediction methods tac games
tac games finals data set minute well run times
first blush may seem sensible fix prices closed hotels closing prices rather
merely lower bound e allow increase hotel closed artificially low
price however price permitted increase predicted prices hotels
complementing hotel question would artificially high



figreenwald lee naroditskiy

distribute
hotel auctions h

initialize price

initialize supply
end
compute competitive equilibrium prices tatonnement simaa
closed hotel auctions h

distribute units h demand computed competitive equilibrium prices

distribute leftover units h uniformly random
end
minutes tac finals data set numbers table convey
simaas run time even distribution reasonable example minute
simaa sample takes order seconds minutes method without
distribution runs even faster speed increase occurs ce prices bounded
current ask prices maximum price client willing pay
hotel current ask prices increase time correspondingly reducing size
search space simaa sample distribution minutes takes twice long simaa
sample without distribution minute time takes distribute goods
run time still roughly seconds implementation tatonnement runs
slowly fixed instead optimizing tradeoff convergence rate
accuracy process converge instead ran maximum number
iterations summary simaa simpler tatonnement implement yet
performs comparably optimized version tatonnement e walverine runs
sufficiently fast

minute
minute
average

exp tat




exp simaa




sam tat




sam simaa




dist tat




dist simaa




table run times ce price prediction methods milliseconds experiments
run amd athlon tm bit dual core processors ram

summary
simulation methods discussed sectionthe tatonnement process simultaneous ascending auctionswere employed predict hotel prices simulations
flight prices fixed expected minima entertainment prices fixed
principle competitive equilibrium ce prices could serve predictions tac markets however ce prices unlikely good predictors flight prices since flight
prices determined exogenously regard entertainment tickets ce prices might


firoxybot

predictive power however incorporating entertainment tickets tatonnement
simaa calculations would expensive simulations following wellman et al client utilities simply augmented fixed entertainment bonuses
favor longer trips nonetheless future work could interest evaluate
success related methods predicting cda clearing prices
finally note refer methods computing excess demand clientbased compute demands client individual basis contrast
one could employ agent method whereby demands agents clients
would calculated determining agents demands involves solving called completion deterministic prices known optimization heart roxybot
architecture greenwald boyan tac completion np hard agent
method predicting hotel prices expensive included roxybot inner
loop designing roxybot reasoned architecture stochastic pricing model generated client method randomly sampled clients would
outperform one point estimate pricing model generated agent
method form expected clients verify reasoning empirically
entertainment
bid interval roxybot predicts current future buy sell prices tickets
entertainment events price predictions optimistic agent assumes
buy sell goods least expensive prices expects see
end game specifically current price prediction best predicted
price current bid interval
roxybot estimates entertainment ticket prices historical data
past games generate scenario sample game drawn random
collection sequences entertainment bid ask transaction prices extracted
given history auction let trade ai denote price last trade
time transacted value initialized buying selling
addition let bid ai denote bid price time let ask ai denote ask price time

roxybot predicts future buy price auction time follows
future buy

min



min trade ai ask ai



words future buy price time minimum ask price
time recent trade price future buy price time minimum
across future buy prices later times future sell price time predicted
analogously

future sell max max trade ai bid ai


arguably roxybot entertainment predictions made simplest possible way
past data future predictions likely one could improve upon naive
generalization technique capable learning distribution data
sampling learned distribution



figreenwald lee naroditskiy

summary
section described roxybot price prediction methods key ideas
may transferable beyond tac least tac agents follows
roxybot makes stochastic price predictions generating set called
scenarios scenario vector future prices
flight roxybot uses bayesian updating predict expected minimum price
hotels roxybot uses method inspired walverines approximates competitive
equilibrium prices simulating simultaneous ascending auctions rather
usual tatonnement process

optimization
next characterize roxybot optimization routine stochastic ii global
iii dynamic takes input stochastic price predictions considers flight hotel
entertainment bidding decisions unison simultaneously reasons bids
placed current future stages game
abstract auction model
recall treatment bidding decision theoretic rather game theoretic
particular focus single agents optimizing bidding behavior assuming agents strategies fixed keeping basic agent architecture
assume environment modeled terms agents predictions
market clearing prices introduce term pseudo auction refer market
mechanism defined two assumptionsfixed agent behaviors market information encapsulated prices optimization roxybot solves one
bidding pseudo auctions true auctions section formally develop
abstract auction model relate tac auctions next define propose
heuristics solve pseudo auction bidding
basic formalism
section formalize basic concepts needed precisely formulate bidding uncertainty optimization including packagessets goods possibly
multiple units function describes much agent values package pricelinesdata structures store prices unit good
bidspairs vectors corresponding buy sell offers
packages let g denote ordered set n distinct goods let n nn represent
multiset goods marketplace ng denoting number units
good g g package collection goods submultiset n write
n whenever mg ng g g
instructive interpret notation tac domain flights hotel rooms
entertainment events auction tac comprise ordered set distinct



firoxybot

goods principle multiset goods tac marketplace
n tac h n
z z z
flights

hotels

events

practice however since agent works satisfy preferences eight clients
suffices consider multiset goods
n tac h n tac
z z z
flights

hotels

events

trip corresponds package specifically n tac satisfies tac
feasibility constraints
given b n rely two basic operations defined follows
g g
b g ag bg
b g ag bg
example g n h h n b h
n moreover b b b b
b b
value let n denote set submultisets n e packages comprised goods
n denote v n r function describes value bidding agent attributes
viable package
tac agents objective compile packages individual clients
agents value function takes special form client c characterized
value function vc n r agents value collection packages sum
x xm
clients respective values packages given vector packages x

v x


x

vc xc



c

n

pricelines buyer priceline good g vector p g r g kth component
pgk stores marginal cost agent acquiring kth unit good g example
agent currently holds four units good g four additional units g
available costs corresponding buyer priceline
vector length given p g h leading zeros indicate
four goods agent holds may acquired cost
assume buyer pricelines nondecreasing note assumption wlog
since optimizing agent buys cheaper goods expensive ones
given set buyer pricelines p
pg g g define costs additively
cost goods multiset n given
g

costg p

yg
x

pgk

x

costg p

k

cost p

gg





figreenwald lee naroditskiy

n

seller priceline good g vector g r g much buyer priceline kth
component seller priceline g stores marginal revenue agent could earn
kth unit sells example market demands four units good g
sold prices corresponding seller priceline given
g h analogously buyer pricelines tail zero revenues
indicates market demands four units
assume seller pricelines nonincreasing note assumption wlog
since optimizing agent sells expensive goods cheaper ones
given set seller pricelines g g g define revenue additively
revenue associated multiset z n given
g

revenueg z

zg
x

gk

x

revenueg z



k

revenue z



gg

priceline constant say prices linear refer constant value
unit price linear prices cost acquiring k units good g k times
unit price good g
bids agent submits bid expressing offers buy sell units goods
marketplace divide two components h b ai good g bid
consists buy offer bg hbg bgng sell offer ag hag agng bid
price bgk r resp agk r represents offer buy sell kth unit good g
price
definition agent cannot buy sell kth unit unless buys sells units
k accommodate fact impose following constraint buy offers must
nonincreasing k sell offers nondecreasing addition agent may offer
sell good less price willing buy good e bg ag
otherwise would simultaneously buy sell good g refer restrictions
bid monotonicity constraints
pseudo auction rules
equipped formalism specify rules govern pseudo auctions
true auction outcome pseudo auction dictates quantity good
exchange prices conditional agents bid quantity issue resolved
winner determination rule whereas price issue resolved payment rule
definition pseudo auction winner determination rule given buyer seller pricelines p bid h b ai agent buys multiset goods buy p sells
multiset goods sell
buyg p max k bgk pgk
k

sellg max k agk gk
k



firoxybot

note monotonicity restrictions bids ensure agents offer better
equal price every unit exchanges agent simultaneously
buy sell good
least two alternative payment rules agent may face first price
pseudo auction agent pays bid price buy offers paid bid price sell
offers good wins second price pseudo auction agent pays paid
prevailing prices specified realized buyer seller pricelines terminology
derives analogy standard first second price sealed bid auctions krishna
vickrey mechanisms high bidder single item pays bid
first price highest losing bid second price respectively salient property
first price pseudo auctions price set bid winner whereas
second price pseudo auctions agents bid price determines whether wins
price pays
focus second price model basic definitions
presume second price auctions however bidding heuristics tailored
case true auctions adopting second price model pseudo auctions simplifies
bidder provides reasonable approximation situation faced
tac agents argue
tac entertainment auctions agents submit bids e buy sell offers
form specified interpret agents buyer seller pricelines
current order book including agents bid agents immediate winnings determined winner determination rule payments
according second price rule e order book prices prevail
tac hotel auctions buy bids allowed assuming order
book reflects outstanding bids agents accurate buyer
priceline would indicate agent win k units good paysfor
k unitsa price k th existing agent offer actual
price pays th highest unit offer including offer since
agents bid may affect price situation lies first
second price characterizations pseudo auctions described
tac flight auctions agents may buy number units posted price
situation given time modeled exactly second price pseudo auction
abstraction
bidding
ready discuss optimization module repeatedly employed roxybot
within bidding cycle construct bids key bidding decisions goods
bid price
two ways first agent may submit th highest unit offer case sets
price second bids multiple units number wins determines price setting unit
thus affecting price winning units note second effect would present even
auction cleared th highest price



figreenwald lee naroditskiy

although roxybot technically faces n stage stochastic optimization solves
collapsing n stages two relevant stages current
future necessitating one stochastic model future prices current prices known
simplification achieved ignoring potentially useful information hotel
auctions close one one random unspecified order instead operating
tac agents assumption hotel auctions close end current
stage hence one model hotel prices stochastic model future prices
moreover pressing decisions regarding hotels goods bid
price need reason timing hotel bid placement
contrast since flight entertainment auctions clear continuously trading agent
reason relevant tradeoffs timing placement bids goods
still assumption hotel auctions close end current stage
future stages hotel prices hence hotel winnings known remaining
decisions flight entertainment tickets buy rational agent time
bids markets capitalize best prices best prices minima
buying maxima selling hence suffices agents model future prices
markets predict best prices conditioned current prices
suffices consider one stochastic pricing model information necessary
established suffices roxybot pose solve two stage rather
n stage stochastic optimization proceed define abstract series
designed capture essence bidding uncertainty
tac hybrid markets incorporate aspects simultaneous sequential one shot
continuously clearing auctions specifically formulate twostage stochastic programs integer recourse see book birge louveaux
introduction stochastic programming
two stage stochastic program two decision making stages hence two
sets variables first second stage variables objective maximize sum
first stage objectives depend first stage variables expected
value ensuing second stage objectives depend first secondstage variables objective value second stage called recourse value
second stage variables integer valued stochastic program said
integer recourse
high level bidding formulated two stage stochastic program
follows first stage current prices known future prices uncertain
bids selected second stage uncertainty resolved goods exchanged
objective maximize expected value second stage objective namely
sum inherent value final holdings profits earned less first stage costs
since second stage involves integer valued decisions bidder decides goods
buy sell known prices bidding one integer recourse
section formulate series bidding two stage stochastic programs integer recourse one tailored different type auction mechanism
illustrating different type bidding decision mechanisms study inspired
tac one shot continuously clearing variants second price pseudo auctions
former bids placed first stage latter opportunity



firoxybot

recourse ultimately combine decision one unified
captures mean bidding uncertainty
formal statements rely following notation
variables
q multiset goods buy
q multiset goods buy later
r multiset goods sell
r multiset goods sell later
constants
p set current buyer pricelines
p set future buyer pricelines
set current seller pricelines
set future seller pricelines
note p known whereas p uncertain first stage
uncertainty resolved second stage
flight bidding agents task bidding flight auctions decide
many flights buy current prices later lowest future prices given known
current prices stochastic model future prices although tac units
flight sell price one time state flight bidding
generally allow different prices different units flight
definition continuously clearing buying given set current buyer pricelines p
probability distribution f future buyer pricelines p
flt f max
ep f

n
q z




max
v q q cost q p cost q q p cost q p

n

q z





note two cost terms referring future pricelines cost p first
terms adds total cost goods bought first second stages
second term subtracts cost goods bought first stage construction
ensures agent buys k units good later purchases good incur
charges units k k goods future priceline
entertainment bidding abstractly entertainment buying
flight bidding agent must decide many entertainment tickets
buy current prices later lowest future prices entertainment selling
opposite buying agent must decide many tickets
sell current prices later highest future prices



figreenwald lee naroditskiy

definition continuously clearing buying selling given set current buyer
seller pricelines p probability distribution f future buyer seller
pricelines p

ent f max e p f
max v q q r r
q r zn
q r zn

cost q p cost q q p cost q p

revenue r revenue r r revenue r


subject q r q q r r p

constraints ensure agent sell units good buys
hotel bidding hotel auctions close fixed times unknown order
hence iteration agents bidding cycle one shot auctions approximate
auctions well unlike continuous setup decisions made
first second stages one shot setup bids placed first stage
second stage winnings determined evaluated
definition one shot buying given probability distribution f future buyer
pricelines p



hot f max ep f v buy p cost buy p p
h b

hotel bidding selling although possible agents sell
tac hotel auctions one could imagine analogous auction setup possible
sell goods well buy
definition one shot buying selling given probability distribution f
future buyer seller pricelines p


max e p f v buy p sell cost buy p p revenue sell

h b
ai













subject buy p sell p

bidding finally present slight generalization tac bidding combining four previous stochastic optimization one abstract
bidding buy sell goods via continuously clearing one shot
second price pseudo auctions follows
definition bidding uncertainty given set current buyer seller pricelines p probability distribution f future buyer seller pricelines p
bid f
max

q r zn h b
ai

e p f



max

q r zn

v q q r r buy p sell p


cost q p cost q q p cost q p cost buy p p


revenue r revenue r r revenue r revenue sell



firoxybot

subject q r q q r r buy p sell p

bidding stochastic takes input stochastic model
future prices ii global seamlessly integrates flight hotel entertainment bidding
decisions iii dynamic facilitates simultaneous reasoning current future
stages game
next describe heuristic approaches solving bidding
uncertainty
bidding heuristics
section discuss two heuristic solutions bidding specifically
expected value method evm collapses stochastic information
sample average approximation saa exploits stochastic information
characterizes roxybot
expected value method
expected value method birge louveaux standard way approximating
solution stochastic optimization first given distribution collapsed
point estimate e g mean solution corresponding deterministic optimization output approximate solution original stochastic
optimization applying idea bidding uncertainty
yields
definition expected value method given probability distribution f buyer
seller pricelines expected values p respectively
bid evm p
max

q r zn h b
ai q r zn

v q q r r buy p sell p


cost q p cost q q p cost q p cost buy p p


revenue r revenue r r revenue r revenue sell

subject q r q q r r

practice without full knowledge distribution f cannot implement
expected value method particular cannot compute p cannot solve
bid evm p exactly however solve approximation
expected buyer seller pricelines p replaced average scenario
p e average buyer seller pricelines defined follows
p


x
pi







x






figreenwald lee naroditskiy

evm g n f
sample scenarios p p f
p

ps



bid evm

p


return
sample average approximation
expected value method sample average approximation intuitive way approximating solution stochastic optimization idea simple generate
set sample scenarios ii solve approximation incorporates
sample scenarios applying saa heuristic see involves solving
following approximation bidding
definition sample average approximation given set scenarios
p p f
bid saa p p
max


x

max

v q q r r buy pi sell pi



n
q r zn h b
ai q r z





cost q p cost q q pi cost q pi cost buy pi pi


revenue r revenue r r revenue r revenue sell

subject q r q q r r

saa g n f
sample scenarios p p f
bid saa p p
return
theory large deviations ahmed shapiro establish following
probability optimal solution sample average approximation stochastic program integer recourse optimal solution original
stochastic optimization approaches exponentially fast given hard time space
constraints however possible sample sufficiently many scenarios infer
reasonable guarantees quality solution sample average approximation hence propose modified saa heuristic saa fed tailor made
important scenarios apply idea bidding
modified sample average approximation
bids saa places sample prices appear scenarios saa never bids
higher good highest sampled price far knows bidding
price enough win good scenarios however chance


firoxybot

highest sampled price falls clearing price let us compute probability
case single unit auction uniform price multi unit auction e one
units good auctioned clear price
let f denote cumulative distribution function predicted prices let f denote
corresponding density function let g denote cumulative distribution function
clearing prices notation term g x probability
clearing price greater x let x random variable represents
highest value among sample price predictions p x x f x
probability samples hence highest among less x
p x x f x f x f x probability highest value among
samples equals x putting two terms togethernamely probability
highest sample price prediction exactly x probability clearing price greater
xwe express probability highest saas sample price predictions less
clearing price follows
z

f x f x g x dx




assuming perfect prediction g f complex expression simplies follows
z
f x f x f x dx

z
z

f x f x dx
f x
f x dx







f x
f x









hence probability saas sample price predictions less clearing
price particular assuming perfect prediction clearing prices
tac hotel auctions independent probability saa agent scenarios
bidding tac travel chance winning eight hotels e probability
sample price least one scenarios greater clearing price





remedy situation designed implemented simple variant saa
roxybot saa heuristic see close cousin saa difference
arising respective scenario sets
p whereas saa samples scenarios saa samples
n scenarios n g ng saa creates additional n scenarios
follows unit k good g g sets price kth unit good g
upper limit range possible prices conditioning price setting sets
prices goods mean values next describe experiments
test suite bidding heuristics including saa saa controlled testing environment



figreenwald lee naroditskiy

saa g n f
require n
hard code n scenarios p p n
sample n scenarios p n p f
bid saa p p
return
agent
smu
amu

predictions
average scenario
scenarios

tmu

tmu

average scenario
scenarios
average scenario



scenarios

bids
marginal utilities
calculates marginal utilities scenario
bids average marginal utilities across scenarios
marginal utilities
best tmu solutions
marginal utilities assuming goods
target set available
best tmu solutions


goods
goods
goods target set
goods target set
goods target set
goods target set

table marginal utility agents marginal utility good defined
incremental utility achieved winning good relative
utility set goods already held

summary
section developed series bidding heuristics solutions
captures essence bidding one shot continuously clearing
auctions characterize tac bulk presentation deliberately abstract
suggest solutions applicable well beyond realm
tac e g bidding interdependent goods separate ebay auctions still remains
validate application domains

experiments
close two sets experimental first controlled testing
environment second final round tac travel competition combined strategy hotel price prediction via simaa bid optimization
via saa emerged victorious settings
controlled experiments
extent least bidding validated success
roxybot tac nonetheless ran simulations controlled testing environment
validate reported lee greenwald et
al summarize well



firoxybot

built test suite agents predict roxybot simaa random
mechanism distribution agents differ bidding strategies possibilities
include saa saa six marginal utility heuristics studied wellman et
al summarized table
experiments conducted tac travel setting modified remove
aspects game would obscure controlled study bidding specifically
eliminated flight entertainment trading endowed agents eight flights
eight flights day assumed hotels closed one round
bidding e hotel auctions one shot ensuing bid optimization
adheres definition
designed two sets experiments one decision theoretic one game theoretic
former hotel clearing prices outcome simulation simultaneous ascending
auctions depend actual clients game random sampling
simulator informed individual agents latter hotel clearing prices
determined bids agents submit mechanism tac travel
clearing price th highest bid zero fewer bids submitted
first ran experiments agents per game found hotel prices
often zero e insufficient competition changed setup include
random number agents drawn binomial distribution n p
requisite number agents sampled uniformly replacement set possible
agents agents first sample number competitors binomial distribution
generate scenarios assuming sampled number competitors
game theoretic nature tac individual agents performance
depend heavily agents included agent pool experiments
attempted mitigate artificial effects specific agents chose include
pool sampling agents pool play game replacement thus
agents average score games measure agents performance
combinations opponents
figures b plot mean scores obtained agent type
setting along confidence intervals averages computed
independent observations obtained playing games scores averaged across
agent types game account game dependencies saab saat
best performing agents game theoretic experiments among best
decision theoretic setting
tac competition
table lists agents entered tac table summarizes outcome
tac finals comprised games three days games last day
weighted times much first two days first day finals
roxybot finished third behind mertacor walverinethe top scorers happens
roxybots optimization routine designed stochastic hotel entertainment
particular implementation details explaining roxybot applied saa tac domain
relegated appendix
saab saa saat slight variant saa see greenwald et al
details



figreenwald lee naroditskiy






score thousands

score thousands

















saat saab

tmu

tmu

agent



amu

smu

decision theoretic setting

saat saab

tmu

tmu

agent



amu

smu

b game theoretic setting

figure mean scores confidence intervals

price predictions accidentally fed deterministic predictions e point price estimates
entertainment moreover predictions fixed rather adapted
recent game history
days roxybot ran properly basing bidding auctions stochastic
information moreover agent upgraded day bid flights
twice minute enabled agent delay bidding somewhat
end game flights whose prices decreasing doubt minor modification
enabled roxybot emerge victorious edging walverine whisker
integer precision reported table actual margin mere parts
adjusting control variates ross spreads top two finishers bit

agent

kin agent
l agent
mertacor
roxybot
utta
walverine
whitedolphin

affiliation
swedish inst comp sci
u macau
carnegie mellon u
aristotle u thessaloniki
brown u
u tehran
u michigan
u southampton

reference
aurell et al
sardinha et al
toulis et al kehagias et al
greenwald et al lee et al
cheng et al wellman et al
jennings vetsikas selman

table tac participants

kevin lochner computed adjustment factors method described wellman et al
ch



firoxybot

agent
roxybot
walverine
whitedolphin

mertacor
l agent
kin agent
utta

finals









adjustment factor









table tac final scores adjustment factors control variates

mean scores utilities costs confidence intervals last day
tac finals games plotted figure detailed statistics tabulated
table single metric low hotel flight costs responsible
roxybots success rather success derives right balance contradictory goals
particular roxybot incurs high hotel mid range flight costs achieving mid range
trip penalty high event profit
let us compare roxybot two closest rivals walverine whitedolphin comparing
walverine first walverine bids lower prices fewer hotels less yet wins
wastes less would appear walverines hotel bidding strategy outperforms
roxybots except roxybot earns higher hotel bonus roxybot gains
advantage spending less flights earning total entertainment profit
different competition takes place roxybot whitedolphin whitedolphin
bids lower prices less hotels roxybot roxybot spends much
hotels whitedolphin makes earning higher hotel bonus
lower trip penalty seems whitedolphins strategy minimize
costs even means sacrificing utility
summary
already noted tac travel bidding viewed optimization n stage
decision solve n stage decision sequence stage decision
controlled experiments reported section establish bidding
strategy saa best test suite setting designed
stages tac competition establish strategy effective
n stage setting

collective behavior
hotel price prediction techniques described section designed compute
least approximate competitive equilibrium prices without full knowledge client pop agent suffers trip penalties extent assigns clients packages differ
preferred



figreenwald lee naroditskiy

hotel bids
average hotel bids
hotels
hotel costs
unused hotels
hotel bonus
trip penalty
flight costs
event profits
event bonus
total event profits
average utility
average cost
average score

rox















wal















whi















sic















mer















l















kin















utt















table finals last day tabulated statistics omit first two days
agents vary across days cannot vary within presumably entries
last day teams preferred versions agents
finals last day

finals last day

finals last day
























rox wal whi sic mer la kin utt
agent

cost thousands

utility thousands

score thousands









rox wal whi sic mer la kin utt
agent



rox wal whi sic mer la kin utt
agent

figure finals last day mean scores utilities costs confidence
intervals

ulation section assume knowledge view output tatonnement
simaa calculations predictions ground truth compare actual
prices final games ground truth respective years since determine
whether tac market prices resemble ce prices depicted figure
nature methods calculations pertain hotel prices
highly correlated metrics euclidean distance evpp
observe accuracy ce price calculations varied year year
year tac supply chain management scm introduced many
participants diverted attention away travel towards scm year perhaps
leading degraded performance travel things seem improve



firoxybot

cannot explain setback except noting performance highly dependent
particular agent pool fewer agents pool




tatonnement exact
simaa exact
expected value perfect prediction



euclidean distance













year





tatonnement exact
simaa expact















year





figure comparison actual hotel prices output competitive equilibrium
price calculations final games since label exact means full
knowledge client population

conclusion
foremost aim trading agent develop body techniques effective
design analysis trading agents contributions trading agent design include
invention trading strategies together realizing
computation methods measure evaluate performance agents characterized
strategies researchers seek specific solutions particular trading
general principles guide development trading agents across market scenarios
purports contribute agenda described design
implementation roxybot able trading agent demonstrated performance
tac
although automated trading electronic markets yet fully taken hold
trend well underway tac trading agent community demonstrating
potential autonomous bidders make pivotal trading decisions effective way
agents offer potential accelerate automation trading broadly
thus shape future commerce

acknowledgments
extends work lee et al material section
book wellman et al grateful several anonymous reviewers whose
constructive criticisms enhanced quality work supported
nsf career grant iis



figreenwald lee naroditskiy

appendix tac bidding saa
bidding simultaneous auctions characterize tac formulated two stage stochastic program appendix present implementation
details integer linear program ilp encoded roxybot approximates
optimal solution stochastic program
formulate ilp assuming current prices known future prices uncertain first stage revealed second stage note whenever prices
known suffices agent make decisions quantity good buy
rather bid amounts since choosing bid amount greater
equal price good equivalent decision buy good
unlike main body ilp formulation bidding tac assumes
linear prices table lists price constants decision variables auction type
hotels decisions pertain buy offers flights agent decides many
tickets buy many buy later entertainment events agent chooses
sell quantities well buy quantities
hotels
bid

price
yas

flights events
buy
buy later
events
sell
sell later

variable bid
apq
price

yas

price
na
zas

variable qty



variable qty



table auction types associated price constants decision variables

index sets
indexes set goods auctions
af af indexes set flight auctions
ah ah indexes set hotel auctions
ae ae indexes set event auctions
c c indexes set clients
p p indexes set prices
precise formulation roxybot bidding ilp appears lee et al
formulation slightly simplified expect would perform comparably tac key
differences flight entertainment bidding



firoxybot

q q indexes set quantities
e units good auction
indexes set scenarios
indexes set trips
constants
gat indicates quantity good required complete trip
indicates current buy price af ae
na indicates current sell price ae
yas indicates future buy price af ah ae scenario
zas indicates future sell price ae scenario
ha indicates hypothetical quantity hotel ah
oa indicates quantity good agent owns
uct indicates client cs value trip
decision variables
cst set boolean variables indicating whether client c allocated
trip scenario
apq set boolean variables indicating whether bid price p qth
unit ah
set integer variables indicating many units af ae buy
n set integer variables indicating many units ae sell
set integer variables indicating many units af ae buy later
scenario
z set integer variables indicating many units ae sell later
scenario
objective function


flight cost

current future
hotel cost
z
z x

x z z
x
x


yas
uct cts
yas apq
max


n z
af
ah q pyas
c
trip value

z





figreenwald lee naroditskiy


event revenue
event cost

z
z


current
future
future
current

z


z
z





z
x


na zas yas


ae

constraints
x

cst c c





allocation

buy

z z
z
x
cst gat oa

af



ah



c

buy

allocation


z z
z x

x
cst gat oa
apq
c

q pyas

allocation


sell

buy
z z
z
x
z
cst gat oa
c

ae

x

apq ha



ah



apq ah q q



p q

x
p

equation limits client one trip scenario equation prevents
agent allocating flights buy equation prevents agent
allocating hotels buy equation prevents agent
allocating event tickets buy sell equation ensures
agent bids least hqw units hotel auction equation prevents agent
placing one buy offer per unit hotel auction
agent might constrained place sell offers units good
owns place buy sell offers units good
market supplies demands
note need explicitly enforce bid monotonicity constraints
ilp formulation
buy offers must nonincreasing k sell offers nondecreasing
ilp need constraint prices assumed linear
effect decisions ilp makes many units good bid
hence bids equivalent
agent may offer sell less price willing buy


firoxybot

ilp would choose place buy offer sell offer good
buy price good exceeds sell price would unprofitable

references
ahmed shapiro sample average approximation method
stochastic programs integer recourse optimization online http www
optimization online org
arunachalam r sadeh n supply chain trading agent competition
electronic commerce applications
aurell e boman carlsson eriksson j finne n janson kreuger p
rasmusson l trading agent built constraint programming eighth
international conference society computational economics computing
economics finance aix en provence
birge j louveaux f introduction stochastic programming springer
york
cai k gerding e mcburney p niu j parsons phelps overview
cat market design competition tech rep ulcs university liverpool
cheng leung e lochner k k omalley reeves schvartzman l wellman
walverine walrasian trading agent proceedings second
international joint conference autonomous agents multi agent systems pp

cheng leung e lochner k k omalley reeves schvartzman l wellman
walverine walrasian trading agent decision support systems

cramton p simultaneous ascending auctions cramton p shoham
steinberg r eds combinatorial auctions mit press
fritschi c dorer k agent oriented software engineering successful tac participation proceedings first international joint conference autonomous
agents multiagent systems pp
greenwald bidding marginal utility simultaneous auctions workshop
trading agent design analysis
greenwald boyan j bidding uncertainty theory experiments
proceedings th conference uncertainty artificial intelligence pp

greenwald naroditskiy v lee bidding heuristics simultaneous
auctions lessons tac travel workshop trading agent design analysis
greenwald boyan j bidding simultaneous auctions case
study journal autonomous agents multiagent systems
jennings n southamptontac designing successful trading agent
proceedings fifteenth european conference artificial intelligence pp


figreenwald lee naroditskiy

jordan p r wellman p designing ad auctions game trading
agent competition workshop trading agent design analysis
kehagias toulis p mitkas p long term profit seeking strategy continuous double auctions trading agent competition fourth hellenic conference
artificial intelligence heraklion
krishna v auction theory academic press
lee j comparison bidding simultaneous auctions b honors thesis brown university http list cs brown edu publications theses
ugrad
lee greenwald naroditskiy v roxybot saa tac travel agent
proceedings th international joint conference artificial intelligence
pp
ross simulation third edition academic press
sardinha j r p milidiu r l paranhos p cunha p de lucena c
j p agent architecture highly competitive electronic markets
proceedings eighteenth international florida artificial intelligence
society conference clearwater beach florida usa pp
toulis p kehagias mitkas p mertacor successful autonomous trading
agent fifth international joint conference autonomous agents multiagent
systems pp hakodate
vetsikas selman b whitebear empirical study design tradeoffs autonomous trading agents workshop game theoretic decision theoretic agents
vickrey w counterspeculation auctions competitive sealed tenders journal
finance
walras l elements deconomie politique pure l corbaz lausanne
wellman p greenwald stone p autonomous bidding agents strategies
lessons trading agent competition mit press
wellman p reeves lochner k suri r searching walverine
workshop trading agent design analysis lecture notes
artificial intelligence pp springer
wellman reeves lochner k vorobeychik price prediction
trading agent competition artificial intelligence




