journal artificial intelligence

submitted published

prime implicates prime implicants
propositional modal logic
meghyn bienvenu

meghyn informatik uni bremen de

department mathematics computer science
university bremen germany

abstract
prime implicates prime implicants proven relevant number areas
artificial intelligence notably abductive reasoning knowledge compilation
purpose examine notions might appropriately extended
propositional logic modal logic k begin considering number
potential definitions clauses terms k different definitions evaluated
respect set syntactic semantic complexity theoretic properties characteristic
propositional definition compare definitions respect properties
notions prime implicates prime implicants induce
definition perfectly generalizes propositional notions
exist one definition satisfies many desirable properties propositional
case second half consider computational properties
selected definition end provide sound complete generating
recognizing prime implicates prime implicate recognition task
pspace complete prove upper lower bounds size number prime
implicates focuses logic k hold equally well
multi modal k concept expressions description logic alc

introduction
prime implicates prime implicants important notions artificial intelligence
given rise significant body work automated reasoning applied
number different sub areas ai traditionally concepts studied
context propositional logic considered many valued
ramesh murray first order logic marquis b much
known however prime implicates prime implicants logics particular
definition prime implicate prime implicant ever proposed modal
description logic shown reasonable definition provided
given increasing interest modal description logics knowledge representation
languages one naturally wonders whether notions suitably generalized
expressive logics
recall propositional logic prime implicates formula defined
logically strongest clausal consequences restriction clauses made order
reduce redundant elements formulas set consequences use keeping
around consequence b one already consequences b decision
consider logically strongest clausal consequences motivated desire
eliminate irrelevant weaker consequences already consequence
c

ai access foundation rights reserved

fibienvenu

point retaining consequences b b prime implicates thus provide
complete yet compact representation set logical consequences formula
particularly nice representation makes many computational tasks
simpler satisfiability tautology entailment equivalence queries conditioning
forgetting transformations tractable formulae represented prime
implicates darwiche marquis prime implicates considered
interesting target language knowledge compilation cadoli donini darwiche
marquis prime implicates proved relevant sub areas ai
distributed reasoning adjiman chatalic goasdoue rousset simon belief
revision bittencourt pagnucco non monotonic reasoning cf przymusinski
characterizations relevance lakemeyer lang liberatore marquis

dual notion prime implicates prime implicants defined
logically weakest terms conjunctions literals imply given formula main
application domain prime implicants abduction diagnosis recall
abduction one given background theory observation objective
explanation observation logical terms explanation formula
logically entails observation taken together background theory
set explanations abduction large important question
select representative subset explanations one common
use prime implicants relevant explanations observation respect
background theory taken prime implicants de kleer mackworth
reiter eiter makino
many applications ai expressive power propositional logic proves insufficient first order logic provides much greater level expressivity price
undecidability modal description logics offer interesting trade expressivity complexity generally expressive propositional logic yet
better behaved computationally first order logic explains growing trend
towards languages knowledge representation
prototypical description logic alc extends propositional logic restricted
forms universal existential quantification example expression alc
f emale haschild f emale haschild doctor p rof essor hasp et dog
describes set individuals female least one daughter one
pet dog children doctors professors
concept expression represented equally well modal logic k formula
f emale f emale doctor p rof essor dog
schild proved general showed description logic alc n
binary relations fact notational variant multi modal logic kn means
concerning kn transferred alc vice versa
investigate notions prime implicates prime implicants
modal logic k k actually hold formulae kn hence
concept expressions alc decision present terms k


fiprime implicates prime implicants modal logic

rather terms kn alc motivated solely desire simplify notation
increase readability proofs
question notions prime implicates prime implicants suitably
defined logic k clearly interest theoretical point view argue
however question practically relevant support claim briefly
discuss two application areas study prime implicates prime implicants
k might prove useful
first domain application consider abductive reasoning k noted
one key foundational issues abductive reasoning selection
interesting subset explanations issue especially crucial logics k
allow infinite number non equivalent formulae since means number
non equivalent explanations abduction large fact infinite
making simply impossible enumerate entire set explanations prime implicants
widely accepted means characterizing relevant explanations propositional logic
reasonable starting point abductive reasoning logic k study
different possible definitions prime implicant k properties
investigation prime implicates k relevant development knowledge compilation procedures k recall knowledge compilation cf darwiche
marquis general technique coping intractability reasoning
consists line phase knowledge base rewritten equivalent
knowledge base allows tractable reasoning followed online phase
reasoning performed compiled knowledge base idea initial cost
compiling knowledge base offset computational savings later queries
currently work knowledge compilation restricted propositional logic even
though technique could prove highly relevant modal description logics
generally suffer even higher computational complexity propositional logic
prime implicates one better known mechanisms compiling formulae propositional logic certainly makes sense investigate whether knowledge
compilation fruitfully extended logics k
organized follows preliminaries consider appropriately generalize notions clauses terms k obvious definition
enumerate list syntactic semantic complexity theoretic properties propositional definitions use compare different candidate definitions
next consider different definitions light notions prime implicate prime
implicant induce list basic properties propositional
case would satisfy see different definitions measure
second half investigate computational properties
satisfactory definition prime implicates consider prime implicate
generation recognition provide sound complete tasks
study complexity prime implicate recognition showing
pspace complete thus complexity satisfiability deduction k
conclude discussion relevance two application
areas cited directions future order enhance readability proofs omitted body text full proofs
found appendix


fibienvenu

preliminary definitions notation
briefly recall basics modal logic k refer blackburn de rijke venema
blackburn van benthem wolter good introductions modal logic
formulae k built set propositional variables v standard logical
connectives modal operators call formula
form resp formula resp formula convenient use
abbreviation adopt shorthand k resp k refer
formula consisting preceded k copies resp convention
use var refer set propositional variables appearing
formula modal depth formula written defined maximal
number nested modal operators appearing e g define
length formula written number occurrences propositional variables
logical connectives modal operators example would b
b
negation normal form nnf defined propositional logic formula said
nnf negation appears directly propositional variables every formula
k transformed equivalent formula nnf recursive procedure
nnf defined follows
nnf l l propositional literals l
nnf nnf nnf
nnf nnf nnf
nnf nnf nnf
nnf nnf nnf

nnf nnf
nnf nnf
nnf nnf
nnf nnf
nnf nnf

example applying nnf formula b c formula
b c nnf transformation nnf takes linear time yields formula
double size original formula modal depth
propositional variables original
model k tuple hw r vi w non empty set possible worlds
r w w binary relation worlds v w v true f alse valuation
propositional variables world understood labelled directed
graphs vertices correspond elements w directed edges represent
binary relation r vertices labeled propositional valuations specify
propositional variables true corresponding possible world
satisfaction formula model world w written w defined
inductively follows
w v w true
w w
w w w
w w w
w w w wrw


fiprime implicates prime implicants modal logic

w w w wrw
think labeled directed graphs determining satisfaction
formula vertex w consists evaluating vertices reached
w via edge satisfied w case holds
successor vertices similarly order decide whether formula holds vertex w
consider successors w graph check whether least one
vertices satisfies
formula said tautology written w every model
world w formula satisfiable model world w
w w w called unsatisfiable
write
ladner showed satisfiability unsatisfiability k pspace complete
pspace membership ladner exhibited polynomial space tableaux style
deciding satisfiability k formulae pspace hardness proven means reduction
qbf validity canonical pspace complete
modal logic notion logical consequence entailment defined one
two ways
formula global consequence whenever w every world w
model w every world w
formula local consequence w implies w every model
world w
consider notion local consequence take
mean local consequence say entails
two formulae called equivalent written
formula said logically stronger
highlight basic properties logical consequence equivalence k
play important role proofs
theorem let n formulae k let propositional
formula


n n
n
n
n
n


fibienvenu

statement theorem shows three reasoning tasks entailment unsatisfiability tautology testing rephrased terms one another statement tells us
entailment two formulae reduced entailment
formulae first modality removed statements define conditions
conjunction resp disjunction propositional literals formulae
unsatisfiable resp tautology statement gives us conditions
formula implies disjunction formulae statement demonstrates interaction
formulae disjunction
theorem let disjunction propositional literals formulae
following statements holds
non tautological propositional clause every disjunct
propositional literal unsatisfiable formula
n every disjunct formula
n n every disjunct
formula unsatisfiable formula
theorem let n p
q formulae k propositional


p


every j p j
theorems concern entailment relations formulae disjunctions
propositional literals formulae theorem tells us kinds formulae
type entail propositional clause disjunction formulae disjunction
formulae theorem outlines conditions two formulae
type related entailment relation illustrate theorem
small example
example consider formula b c c
according theorem
b c since b b c
c c
c since b
b c since c c
b c since c c


fiprime implicates prime implicants modal logic

literals clauses terms k
seen introduction notions prime implicates implicants
straightforwardly defined notions clauses terms thus aim provide
suitable definitions prime implicates implicants logic k first need decide
upon suitable definition clauses terms k unfortunately whereas clauses
terms standard notions propositional first order logic generally
accepted definition clauses terms k indeed several quite different notions
clauses terms proposed literature different purposes
instead blindly picking definition hoping appropriate prefer
list number characteristics literals clauses terms propositional logic giving
us principled means comparing different candidate definitions properties
describes something literal clause term propositional logic
although list cannot considered exhaustive believe covers principal
syntactic semantic complexity theoretic properties propositional definition
p literals clauses terms negation normal form
p clauses contain terms contain literals contain neither
p clauses resp terms disjunctions resp conjunctions literals
p negation literal equivalent another literal negations clauses resp
terms equivalent terms resp clauses
p every formula equivalent finite conjunction clauses likewise every formula
equivalent finite disjunction terms
p task deciding whether given formula literal term clause accomplished polynomial time
p task deciding whether clause resp term entails another clause resp term
accomplished polynomial time
one may wonder whether exist definitions literals clauses terms k
satisfying properties unfortunately impossible
theorem definition literals clause terms k satisfies properties p
p cannot satisfy p
proof theorem makes use fact distribute
distribute means impossibility holds equally
well standard modal description logics
consider variety possible definitions evaluate respect
criteria first definition consider proposed cialdea
one might wonder simply translate formulae k first order formulae
put clausal form reason simple looking define clauses terms within
language k clauses obtain passing first order logic generally expressible k
moreover define clauses k first order clauses representable k
would obtain set clauses containing modalities thereby losing much expressivity k



fibienvenu

mayer pirri abductive reasoning modal logic define terms
formulae constructed propositional literals
modal clauses literals used defined analogously
yielding following definition


l l l
c c c c c


easy see inspection definition satisfies properties p p p p
property p satisfied however since clauses disjunctions
literals take instance b theorem fact p p
satisfied conclude property p cannot hold first glance may seem
entailment clauses terms could accomplished polynomial time
case fact np complete proof relies
strong resemblance terms concept expressions description
logic ale unsatisfiability deduction known np complete
slightly different definition gain p


l l l
c l c c
l

easily verified definition satisfies properties p p p definition
satisfy p definition even less expressive follows
satisfy p reduced expressiveness however improve computational
complexity property p still satisfied entailment
clauses terms np complete reduction used definition
fact even extremely inexpressive definition allow polynomial
entailment clauses terms suggests property p cannot satisfied
reasonable definition clauses terms k
let us consider expressive options begin following definition
clauses proposed enjalbert farinas del cerro purpose
modal resolution

c c conjc c c
conjc c conjc conjc
definition clauses extended definition terms literals satisfies
p p extension satisfies properties let us first consider
one possible extensions satisfies p maximal subset p p


l l l
c c conjc c c
conjc c conjc conjc
disjt
disjt disjt disjt

note follows let range propositional variables l c range
sets literals clauses terms respectively



fiprime implicates prime implicants modal logic

definition satisfies p p p satisfaction p shown enjalbert farinas
del cerro satisfy p clauses disjunctions
literals take example b given definition strictly expressive
definitions follows entailment clauses terms must
np hard means satisfy p fact entailment
clauses terms definition pspace complete modify
polynomial translation qbf k used prove pspace hardness k
translated formula conjunction clauses respect notice
formula unsatisfiable entails thus reduce qbf
validity entailment clauses making task pspace hard hence
subproblem entailment k pspace complete idea used pspacecompleteness definitions b
instead extend enforce property p obtain following definition
l c conjc
c c conjc c c
conjc c conjc conjc
l
definition satisfies properties except p p p property p fails
hold negation literal b equivalent literal proof
p holds constructive use standard logical equivalences rewrite formulae
equivalent conjunctions clauses disjunctions terms
definitions
consider two rather simple definitions satisfy properties p p p
first definition inspired notion modal atom proposed giunchiglia
sebastiani defines literals set formulae nnf cannot decomposed propositionally
b

l f f
c l c c
l
f f f f f f f
satisfies properties except p p p note arbitrary formula nnf unsatisfiable pspace complete
definition liberal imposing structure formulae behind modal operators define literals formulae nnf cannot decomposed modally
instead propositionally obtain much stricter definition satisfies exactly
properties




l c
c l c c
l

summary analysis different definitions respect properties p p
provided following table
theorem figure hold


fibienvenu

p
p
p
p
p
p
p



yes
yes
yes
yes

yes
yes
yes


yes
yes
unless p np

b
yes
yes
yes yes





yes
yes yes
yes

yes yes
yes
yes
yes yes
yes
yes
yes yes
unless p pspace

figure properties different definitions literals clauses terms

clearly deciding different candidate definitions complicated counting number properties definitions satisfy simple reason
properties important others take instance property p
requires clauses terms expressive enough represent formulae k
use standard propositional definition clauses terms thereby disregarding
modal operators satisfies every property except p hence
properties definitions considered section yet would
hard pressed someone considers propositional definition appropriate definition k demonstrates expressiveness particularly important property
important fact willing sacrifice properties p p keep
among definitions satisfy p prefer definitions definitions
b latter definitions less common propositional definition
present advantages
course comes choice definition must depend
particular application mind may well circumstances less
expressive less elegant definition may prove suitable
clauses terms define prime implicates prime implicants us
important criteria choosing definition quality notions prime
implicates prime implicants definition induces

prime implicates implicants k
definition clauses terms fixed define prime implicates
prime implicants exactly manner propositional logic
definition clause implicate formula prime
implicate
implicate
implicate
definition term implicant formula prime
implicant
implicant


fiprime implicates prime implicants modal logic

implicant
course notion prime implicate resp implicant get determined definition clause resp term chosen compare different definitions following well known properties prime implicates implicants
propositional logic
finiteness number prime implicates resp prime implicants formula finite
modulo logical equivalence
covering every implicate formula entailed prime implicate formula
conversely every implicant formula entails prime implicant formula
equivalence model model model prime
implicates model prime implicant
implicant implicate duality every prime implicant formula equivalent
negation prime implicate negated formula conversely every prime
implicate formula equivalent negation prime implicant negated
formula
distribution prime implicate n exist prime implicates
n n n likewise prime implicant
n exist prime implicants n n
n
finiteness ensures prime implicates implicants formula finitely
represented covering means prime implicates provide complete representation
formulas implicates equivalence guarantees information lost replacing formula prime implicates implicants whereas implicant implicate duality
allows us transfer prime implicates prime implicants
vice versa finally distribution relates prime implicates implicants formula
prime implicates implicants sub formulae property play key role
prime implicate generation presented next section
definition satisfies five properties finiteness covering first demonstrate every implicate formula entailed implicate
var var depth similarly implicants finitely many non equivalent formulae finite language
bounded depth follows finitely many prime implicates implicants
given formula infinite chains increasingly stronger implicates increasingly weaker implicants equivalence follows directly covering
property p previous section use p rewrite conjunction
clauses implied prime implicate covering
property implicant implicate duality immediate consequence duality
property equivalence commonly taken mean formula equivalent conjunction prime implicates disjunction prime implicants chosen model theoretic
formulation order allow possibility set prime implicates implicants infinite



fibienvenu

clauses terms p distribution shown covering plus
fact disjunction clauses clause conjunction terms term p
theorem notions prime implicates prime implicants induced definition
satisfy finiteness covering equivalence implicant implicate duality
distribution
remark way contrast first order logic notion prime implicate induced standard definition clauses shown falsify finiteness covering
equivalence marquis b
definition one definitions satisfy five
properties definitions equivalence hold
fairly straightforward consequence fact definitions satisfy
property p
theorem notions prime implicates prime implicants induced definitions
satisfy equivalence
notions prime implicates induced definitions b
appendix clause k b k prime implicate b
every k thereby demonstrate definitions admit formulae
infinitely many distinct prime implicates allow seemingly irrelevant
clauses counted prime implicates gives us strong grounds dismissing
definitions much utility prime implicates applications comes ability
eliminate irrelevant consequences
theorem notions prime implicates prime implicants induced b
falsify finiteness
comparison last section suggested least suitable
definition clauses terms section rule suitable
definition prime implicates prime implicants remainder
concentrate attention notions prime implicates prime implicants induced
definition shown satisfactory generalizations
propositional case

prime implicate generation recognition
section investigate computational aspects modal prime implicates
primarily focusing notion prime implicate induced definition
remainder use words clause term prime implicate
mean clause term prime implicate respect definition except
explicitly stated otherwise
remark without loss generality restrict attention prime implicates since implicant implicate duality theorem generating
recognizing prime implicates easily adapted generating
recognizing prime implicants
prime implicate b



fiprime implicates prime implicants modal logic

function dnf
input formula
output set terms
return set terms output iter dnf nnf
function iter dnf
input set formulae nnf
output set terms output one one
iter dnf
else iter dnf iter dnf
v
else output consistent nothing otherwise
figure helper functions dnf iter dnf

generating prime implicates
start considering generating set prime implicates given
formula task important want produce abductive explanations want
compile formula set prime implicates
generation require means transforming input formula
equivalent disjunction simpler formulae end introduce figure
helper function dnf returns set satisfiable terms respect
whose disjunction equivalent function dnf defined terms another
function iter dnf takes input set formulae nnf returns
iterative fashion set satisfiable terms whose disjunction equivalent following
lemmas highlight important properties functions
lemma iter dnf terminates requires polynomial space size
input
lemma output dnf input set satisfiable terms respect
whose disjunction equivalent
lemma terms dnf terms length
depth contains propositional variables appearing
var
present figure genpi computes set prime implicates
given formula works follows step check whether
unsatisfiable outputting contradictory clause case satisfiable
set equal set satisfiable terms whose disjunction equivalent
distribution know every prime implicate equivalent disjunction
prime implicates terms step set equal propositional


fibienvenu

function genpi
input formula
output set clauses
unsatisfiable return otherwise set dnf
let lt set propositional literals let dt
set formulae literals
form set lt dt otherwise set
lt dt
conjunction
formulae
w
set candidates
j candidates remove j candidates k j
k candidates k j j k j k k j
return candidates
figure prime implicate generation

literals lt plus strongest literal implied plus strongest literals implied dt hard see every prime
implicate must equivalent one elements means
step guaranteed every prime implicate input formula equivalent
candidate prime implicate candidates comparison phase step
non prime candidates eliminated exactly one prime implicate equivalence
class retained
illustrate behavior genpi example
example run genpi input b c b b c e f
step satisfiable call function dnf returns two terms
b c b b c e f
step lt dt b c b literals
get b c b lt dt b c
e f giving us e f b e f c e f
step set candidates contain different possible disjunctions elements
elements aa ef bef
c e f b c b c e f b c b e f
bc cd ef ba b ef b bef b cd ef
step remove candidates clauses e f b e f
c e f b c b since strictly weaker
eliminate clauses b e f b b e f


fiprime implicates prime implicants modal logic

b c e f since weaker clauses b c e f
b c b e f b c c e f
step genpi return four remaining clauses candidates
b c e f b c b e f b c c e f
shown sound complete procedure generating prime
implicates
theorem genpi terminates outputs exactly set
prime implicates input formula
examining prime implicates produced place upper
bound length formulas prime implicates
theorem length smallest clausal representation prime implicate
formula single exponential length formula
upper bound optimal formulae exponentially large prime
implicates situation contrasts propositional logic length prime
implicates linearly bounded number propositional variables formula
theorem length smallest clausal representation prime implicate
formula exponential length formula
interesting note formula used proof theorem depth
means cannot avoid worst case spatial complexity restricting
attention formulae shallow depth escape exponential worst case
spatial complexity dropping one less expressive notions prime implicates
examined previous section following theorem attests
theorem prime implicates defined length
smallest clausal representation prime implicate formula exponential
length formula
examination set candidate prime implicates constructed
allows us place bound maximal number non equivalent prime implicates
formula possess
theorem number non equivalent prime implicates formula
double exponential length formula
bound shown optimal situation contrasts propositional
logic single exponentially many non equivalent prime implicates
given formula
theorem number non equivalent prime implicates formula may double
exponential length formula
worst case robust improved neither restricting depth formulae less expressive notions prime implicate
following theorem demonstrates


fibienvenu

theorem prime implicates defined number
non equivalent prime implicates formula may double exponential length
formula
theorems together suggest definitions yield especially interesting approximate notions prime implicate induce significant loss
expressivity without improvement size number prime implicates
worst case
generation genpi corresponds simplest possible implementation
distribution property quite clear represent practicable
way producing prime implicates one major source inefficiency large number
clauses generated want design efficient need
ways generate fewer candidate clauses couple different techniques
could used one simple method could yield smaller number clauses
eliminate elements prime implicates thereby
decreasing cardinalities hence candidates simply
test whether tautology remove compare literals
discarding weaker elements apply technique example would
remove b thereby reducing cardinality candidates
substantial savings could achieved technique developed framework propositional logic cf marquis consists calculating prime implicates prime implicates
get prime implicates full disjunction terms interleaving comparison
construction eliminate early partial clause cannot give rise prime
implicates instead producing extensions partial clause deleting
one one comparison phase example two terms
imagine third term applying technique would
first produce prime implicates would compare
candidate clauses compare current generates
compares candidate clauses
given number elements candidates double exponential
length input cutting size input genpi could yield significant
savings one obvious idea would break conjunctions formulae conjuncts
calculate prime implicates conjuncts unfortunately however
cannot apply method every formula prime implicates conjuncts
necessarily prime implicates full conjunction one solution proposed
context approximation description logic concepts cf brandt turhan
identify simple syntactic conditions guarantee get
break formula conjuncts instance one possible condition
conjuncts share propositional variables formula example satisfies
condition since variables b c b b c e f
disjoint generating prime implicates conjuncts separately directly
identify prime implicate candidate clauses b c b
b c e f compare remove weaker elements ti


fiprime implicates prime implicants modal logic

suggested get candidate clauses bc b b cd e f
prime implicates
another important source inefficiency comparison phase
compare candidate clauses one one order identify strongest ones
course worst case double exponential
number candidate clauses simply may double exponentially many
distinct prime implicates prime implicate must equivalent candidate
clause keeping double exponentially many clauses memory generally
feasible fortunately however necessary keep candidate clauses
memory since generate demand sets indeed
demonstrate appendix implementing clever fashion
obtain outputs prime implicates iteratively requiring
single exponential space output could course double exponentially
large theorem
theorem exists runs single exponential space size
input incrementally outputs without duplicates set prime implicates
input formula
although modified much better spatial complexity original
still yield practicable means generating prime implicates reason
still need compare candidate clauses candidate clauses
order decide whether candidate prime implicate given set
candidate clauses may double exponential number means may
need perform double exponentially many entailment tests producing even single
prime implicate much promising would test directly whether
candidate clause prime implicate without considering candidate clauses
order implement must course come procedure
determining whether given clause prime implicate objective
following section
recognizing prime implicates
focus section recognizing prime implicates
deciding whether clause prime implicate formula discussed
previous subsection central importance
generating prime implicates must contain implicitly explicitly mechanism
ensuring generated clauses indeed prime implicates
propositional logic prime implicate recognition bh complete marquis
hard satisfiability deduction k satisfiability unsatisfiability
pspace complete cannot hope prime implicate recognition
complexity less pspace
theorem prime implicate recognition pspace hard
order obtain first upper bound exploit theorem tells us
exists polynomial function f every prime implicate formula


fibienvenu

equivalent clauses length f leads simple procedure
determining clause prime implicate formula simply check every
clause length f whether implicate implies
implied case prime implicate found logically
stronger implicate otherwise exists stronger implicate prime
implicate hard see carried exponential
space gives us expspace upper bound
course naive take
account structure end comparing huge amount irrelevant clauses
exactly hoping avoid propose later
section avoids exploiting information input formula clause
order cut number clauses test key
following theorem shows general prime implicate recognition
reduced specialized tasks prime implicate recognition propositional
formulae formulae formulae simplify presentation theorem
let refer set prime implicates use notation l ln
refer clause obtained removing literals li example
b c c refers clause b
theorem let formula k let k n
j propositional literals non tautologous clause n
b literal l l
following conditions hold
k k
n every
n n
remark restriction clauses
l l required drop first requirement
non prime implicates satisfy three conditions drop second
prime implicates fail satisfy one conditions restrictions
without loss generality however since every clause transformed equivalent
clause satisfying first condition replace
thereby transforming clause k n equivalent
k n make
clause satisfy second condition simply remove literals
l literal remains
theorem shows prime implicate recognition split three specialized sub tasks tell us carry tasks thus order turn
first restriction consider formula abc clause ab ab
easily shown implicate prime implicate since exist
stronger implicates e g nonetheless verified b b
b b b second restriction consider
formula clause ab ab even though ab
prime implicate



fiprime implicates prime implicants modal logic

theorem prime implicate recognition need figure
test whether propositional clause formula formula prime implicate
formula
determining whether propositional clause prime implicate formula k
conceptually difficult determining whether propositional clause prime
implicate propositional formula first ensure clause implicate
formula make sure literals appearing clause necessary
theorem let formula k let non tautologous propositional clause
literal l l
l l
move deciding whether clause form prime
implicate formula remark implied must implied
terms ti dnf ti theorem must
case conjunction literals ti implies means formula
n conjunction formulae ti
implicate implies moreover strongest implicate follows
prime implicate case n
true theorem thus comparing formula
formulae associated terms decide whether
prime implicate
theorem let formula k let non tautologous clause
exists term dnf
conjunction formulae
finally let us turn deciding whether clause prime implicate
formula know covering implicate must
prime implicate implies follows theorem must

w disjunction literals theorem equivalent disjunction
dnf dt dt element every refer back figure
definition tw
according definition awprime implicate
case dnf dt equivalently dnf dt thus
prime implicate w
case iswa choice dt
dnf dt
dnf dnf dt w
testing directly whether entails formula dnf dt could take exponential
space worst case since may exponentially many terms dnf luckily
w however get around exploiting structure formula
dnf dt remark way defined formula dt must
conjunction formulae appears nnf outside scope
modal operators use x w
denote set formulae satisfying condition
appendix
dnf dt implies existence subset x
w
b every dt least w
one conjunct set conversely
existence subset x implies dnf dt observation
basis test pi given figure basic idea behind
try different subsets x order see whether subset satisfies


fibienvenu

function test pi
input clause formula
output yes
return yes otherwise
set x equal set formulae appears nnf outside
scope modal operators
w
x test whether following two conditions hold

b ti dnf exists conjuncts k ti

k
ii k
return satisfies conditions yes otherwise
figure identifying prime implicates form

aforementioned conditions suitable subset proves prime
implicate subset exists sure stronger implicate
shown run polynomial space since
elements x consider terms dnf one time
theorem let formula let implicate
test pi returns yes input prime implicate
theorem test pi runs polynomial space
illustrate test pi two examples
example use test pi test whether clause ab prime implicate
b c e f b
step satisfiable pass directly step
step set x equal set formulae appears nnf
outside scope modal operators case set x b c e f b
since nnf b c e f b formulae satisfying
requirements
step examine different subsets x determine whether satisfy
conditions b particular consider subset b c e f
remark subset satisfies condition since b b c e f order
check condition b first call function dnf returns two
terms b c b e f b notice
conjuncts b b c satisfy conditions ii since b c
b b c notice conjuncts b e f
satisfy conditions ii since e f b e f


fiprime implicates prime implicants modal logic

function testpi
input clause formula
output yes
return
return yes
return yes otherwise
li l ln test li remove li
let set literals non empty replace
disjunct literal
let p set propositional literals disjuncts
l p check whether l return
let b set formulae appearing disjuncts check
b whether dnf formula
k implies conjunction literals return

w
empty return yes otherwise return test pi

figure identifying prime implicates

means found subset x satisfies conditions b
returns correct output since b b c e f
implicate strictly stronger
example use test pi test whether clause b c prime
implicate b c e f b e f b c
step proceed directly step since satisfiable
step set x b c e f b e f b c since nnf b
c e f b e f b c
step check whether subset x satisfying conditions b
claim subset see notice b c b
e f b c term dnf moreover one
set conjuncts term implies b c namely b b c
means must contain b b c order satisfy condition
b b c implies b b c guaranteed b c
imply disjunction elements thereby falsifying condition follows
subset x satisfying necessary conditions test pi returns
yes desired
figure present testing whether clause prime implicate
formula first two steps treat limit cases
implicate one tautology contradiction step


fibienvenu

apply equivalence preserving transformations make satisfy requirements
theorem steps use procedures theorems
test whether three conditions theorem verified three tests
succeed theorem clause prime implicate return yes
test fails return clause shown prime implicate
theorem testpi terminates returns yes input
prime implicate
demonstrate use testpi example
example use testpi test clauses b b e f c
b b c b c f e f prime implicates
b c e f b
output step since
skip steps since neither step
make changes since contains redundant literals literals
skip step since propositional disjuncts step return since
dnf b b c b e f b b c
proceed directly step since modifications
made step contain redundant literals literals
step test whether c proceed step
directly step since contains literals step call
test pi c c outputs since c
c
steps inapplicable skip directly step step call
test pi input clause b formula b
already seen example test pi returns input
means testpi returns
proceed directly step delete redundant literal b c f
modify literal ef end step abc
ef abc step applicable since propositional disjuncts
step continue since dnf e f b c
ef ab abc ef abc abc
e f b c step return yes since call test pi input
b c b c previously shown example
test pi returns yes input
appendix testpi runs polynomial space
already shown testpi decides prime implicate recognition follows
pspace
theorem prime implicate recognition pspace


fiprime implicates prime implicants modal logic

putting together theorems obtain tight complexity bound
prime implicate recognition task
corollary prime implicate recognition pspace complete

conclusion future work
first contribution work detailed comparison several different possible
definitions clauses terms prime implicates prime implicants modal logic k
investigation largely positive although shown
perfect definition exists exhibit simple definition satisfies
desirable properties propositional case second contribution work
thorough investigation computational aspects selected definition
end presented sound complete generating prime implicates well
number optimizations improve efficiency examination
structure prime implicates generated allowed us place upper
bounds length prime implicates number prime implicates formula
possess showed bounds optimal exhibiting matching lower bounds
proved lower bounds hold even much less expressive notions prime implicates finally constructed polynomial space deciding
prime implicate recognition thereby showing pspace complete
lowest complexity could reasonably expected although focus
logic k easily lifted multi modal k concept
expressions well known description logic alc
mentioned introduction one main applications prime implicants
propositional logic area abductive reasoning prime implicants play
role abductive explanations directly applied
abduction k notion prime implicants used definition
abductive explanations k prime implicate generation provides means
producing abductive explanations given abduction moreover
notion term underlying definition abductive explanations
expressive used cialdea mayer pirri able explanations
overlooked method instance look explanation
observation c given background information b c obtain b whereas
framework yields b argument favor since
generally abduction one looking weakest conditions guaranteeing truth
observation given background information
interest size number prime implicates
yield corresponding lower bounds size number abductive explanations
particular imply abductive explanations cialdea mayer pirri
exponential size double exponentially many number worst
case thus behave better respects notion abductive explanation
induced preferred definition moreover fact lower bounds hold
even case extremely inexpressive notion abductive explanations induced
definition suggests high worst case complexity really cannot


fibienvenu

avoided light intractability interesting question future
would study generating single prime implicate since applications may prove sufficient produce single minimal explanation observation
another interesting subject future work relevant point view abduction investigation notion prime implicate fixed vocabulary
development generation refined notion prime implicate would
allow one generate abductive explanations built given set
propositional variables
second domain application mentioned introduction
area knowledge compilation propositional logic one well known target language
knowledge compilation prime implicate normal form formula represented
conjunction prime implicates natural idea would use selected
definition prime implicate define analogous manner notion prime implicate
normal form k formulae unfortunately normal form obtain satisfies
nice properties propositional case instance entailment two
formulae prime implicate normal form easier arbitrary k formulae
see consider pair formulae negation normal form formulae
prime implicates hence prime implicate normal form
according naive definition case reduce
entailment arbitrary k formulae nnf entailment formulae prime
implicate normal form former known pspace complete follows
latter pspace complete well
first sight appears quite disappointing one would hope
computational difficulty representing formula prime implicates would offset
good computational properties resulting formula turns however
lies definition prime implicates rather naive way
defining prime implicate normal form indeed continuation present work bienvenu proposed sophisticated definition prime implicate normal form
specify many different clausal representations prime implicate
used normal form shown enjoy number desirable properties
make interesting viewpoint knowledge compilation notably
proven entailment formulae k prime implicate normal form
carried polynomial time simple structural comparison
reminiscent structural subsumption used subpropositional description
logics noted proof bienvenu make
ample use material presented current
work studied prime implicates respect local consequence relation
natural direction future work would investigation prime implicates respect global consequence relation question particularly interesting given
global consequence type consequence used description logic ontologies unfortunately preliminary investigations suggest defining generating prime implicates
respect global consequence relation likely prove difficult
local consequence relation one thing use definition clause reasonably


fiprime implicates prime implicants modal logic

expressive notion prime implicate obtain satisfy covering since
construct infinite sequences stronger stronger implicates take instance
formula b b b implies global consequence relation
increasingly stronger clauses infinite sequence b b b
b b b familiar situation description logic practitioners since
infinite sequences responsible non existence specific concepts
many common dls cf kusters molitor lack uniform interpolation
alc tboxes ghilardi lutz wolter standard solution
simply place bound depth formulae considered effectively blocking
problematic infinite sequences allow us regain covering give
us weaker version property sufficient applications
development generation global consequence relation may prove
challenging since unclear point whether able draw inspiration
pre existing methods despite potential difficulties feel subject worth
exploring since could contribute development flexible ways accessing
structuring information description logic ontologies
finally another natural direction future would extend investigation prime implicates prime implicants popular modal description logics
particularly interest modal logics knowledge belief expressive description
logics used semantic web confident experience gained
investigation prime implicates prime implicants k prove valuable asset
exploration modal description logics

acknowledgments
corrects significantly extends earlier conference publication bienvenu
written author phd student working irit
universite paul sabatier france author would thank thesis supervisors
andreas herzig jerome lang jerome mengin well anonymous reviewers
helpful feedback

appendix proofs
theorem let n formulae k let propositional
formula


n n
n
n


fibienvenu

n
n
proof first statement well known property local consequence prove
completeness







w implies w w
w w w
w w w

w w


second statement w w
create model adding world w placing single arc
w w w means satisfiable hence
since direction suppose
exists w w means
w hence complete proof use following chain
equivalences
suppose n exist w
w n w cannot
n since w
w n direction suppose
n satisfiable propositional model w
mi wi mi wi n construct
kripke structure contains mi world w arcs
going w wi hard see model mnew
mnew w n n
statement follows easily third statement simply notice
n tautology case negation
n unsatisfiable
use statements get following chain equivalences
n
n


first implication equivalence immediate since
direction remark
statements get following equivalences






fiprime implicates prime implicants modal logic

clearly unsatisfiable follows
every hence
n n
completing proof
theorem let disjunction propositional literals formulae
following statements holds
non tautological propositional clause every disjunct
propositional literal unsatisfiable formula
n every disjunct formula
n n every disjunct
formula unsatisfiable formula
proof let non tautologous propositional clause suppose
contradiction contains disjunct disjunct
first case hence follows theorem
contradicting assumption tautology second case
thus theorem cases
reach contradiction since assumed follows
cannot formulae satisfiable formulae disjuncts
proofs proceed similarly
theorem let n p
q formulae k propositional



p


every j p j
proof since know p
information together theorem get following equivalences











p



p q
p
p
p q
j p j
j p j

complete proof use fact
every


fibienvenu

theorem definition literals clause terms k satisfies properties p
p cannot satisfy p
proof remark set clauses resp terms respect definition
precisely set formulae nnf contain resp e
expressive definition satisfying p p thus suffices
satisfy p
suppose contradiction satisfy p must exist clauses n
b n clauses disjunction li li pi
distributing obtain following
n




b

li ji

j jn p pn

infer j jn p pn
n


li ji b



vn

consider j jn li ji consistent must least one
tuple otherwise would b formulae li ji eithervpropositional
literals formulae form clause follows ni li ji must
following form
k n
k propositional
literals
v n clauses respect
v
know ni li ji b ni li ji theorem must
q
q n b
q b hence n suppose
contradiction case must q q b
theorem every disjunct q recall clause must unsatisfiable
equal b latter
v impossible follows q
contradiction since assumed ni li ji satisfiable follows order
get q n b must r tautology
let us consider formula


j jn
j jn

vn

li ji

v
j jn non tautological formula appearing ni li ji shown
formula must exist clearly must case
n




j jn p pn



li ji

fiprime implicates prime implicants modal logic

get
b
according theorem satisfiable formula cannot imply disjunction formulae unless disjunction tautology must however
impossible since would imply theorem j jn tautology
contradicting earlier assumption contrary thus conclude
set clauses n respect b n hence
definition satisfies p p cannot satisfy p
order prove theorem make use following lemmas
lemma definition satisfies p
proof demonstrate formula k nnf equivalent conjunction
clauses respect definition restriction formulae nnf without loss
generality every formula equivalent formula nnf proof proceeds
induction structural complexity formulae base case propositional literals
already conjunctions clauses since every propositional literal clause
respect suppose statement holds formulae
holds complex formulae
first consider assumption clauses j
n thus equivalent formula
n conjunction clauses respect
next consider induction hypothesis n
clauses j thus n
written equivalently j n j since union
two clauses produces another clause j clauses completing proof
consider case assumption n
clause n know n n
follows equivalent n conjunction clauses since
clauses
finally consider induction hypothesis
n clauses since clauses disjunction literals
li li pi distributing equivalent
formula

l j l j ln jn
j jn p pn

clause respect
proof every formula equivalent disjunction terms respect
proceeds analogously
lemma every clause resp term respect clause resp term
respect definitions b
proof induction structural complexity formulae


fibienvenu

every clause c respect clause respect definitions b
disjunction terms respect
every term respect term respect definitions b
conjunction clauses respect b
require stronger formulation statement prove sub cases
base case induction propositional literals clauses
terms respect easy see verified since propositional
literals clauses terms respect definitions b
hence disjunctions terms respect conjunctions clauses
respect b
induction step statements hold arbitrary clauses
terms respect assumption statments hold
proper sub clauses sub terms
begin clauses let c clause proper sub clauses subterms c satisfy since c clause respect
propositional literal formula form c c clauses c c c
clause c term case c propositional literal
already treated base case let us thus consider case c c c
first part holds since induction hypothesis c c clauses
respect definitions b three definitions disjunction
two clauses clause second half verified since c c
disjunctions terms respect thus disjunction c c
next consider case c c clause c respect first
part follows easily know c must clause respect
b definitions putting clause yields another
clause second part holds well since c disjunction terms respect
thus c term respect definition suppose
c term respect definitions b know
induction hypothesis conjunction clauses respect
b hence clause respect definitions
obviously holds since allowed put formula nnf behind second part
holds since induction hypothesis term respect hence
term respect definition
next consider terms let term proper sub clauses subterms satisfy must propositional literal formula
form terms c clause c term
first half holds since know terms respect
b conjunctions terms terms three definitions
second half verified since assumed conjunctions clauses
respect b means conjunction clauses
respect definitions next suppose c definitions b
easy see literal hence term induction hypothesis tells us
c disjunction terms deduce c term moreover
since c known clause respect b c must


fiprime implicates prime implicants modal logic

clause respect definitions conjunction clauses respect
b finally treat case use fact
term respect means must term b
use supposition conjunction clauses respect b
get literal hence term first part clearly holds
since formula behind yields literal thus term second half follows
fact induction hypothesis conjunction clauses respect
b clause hence conjunction clauses respect
definitions

u
j defined inductively follows

j n ui sj n uin sj
j
j n ui sj n uin sj
n n j
z
n

figure formula u codes instance u u un sm
exact cover

lemma entailment terms clauses np complete definitions

proof proofs np membership np hardness exploit relationship terms respect definitions concept expressions
description logic ale cf baader mcguiness nardi patel schneider
recall concept expressions logic constructed follows use modal logic
syntax assume single modal operator order facilitate comparison
formalisms

semantics symbols one would expect w w
every model world w semantics atomic literals conjunctions universal
existential modalities exactly k
hard see every term respect concept expression
ale entailment ale expressions decidable nondeterministic polynomial
time cf donini lenzerini nardi hollunder nutt marchetti spaccamela
follows deciding entailment terms respect
accomplished nondeterministic polynomial time e belong np
remains shown np hard prove
polynomial time reduction donini adapted original np hardness
proof donini et al np complete exact cover xc garey


fibienvenu

johnson unsatisfiability ale modified give polynomial time
reduction xc entailment terms respect
exact cover following given set u u un set
sm subsets u determine whether exists
sqan exact cover subset
si siq sih sik h k k sik u donini proven
u exact cover formula u pictured figure
unsatisfiable notice u term respect uses
symbols would similar formula term respect
definitions satisfiable u consider formula
u
j defined exactly j except replace
easy verify u indeed term respect
moreover hard see n
n hence u u equisatisfiable u
exact cover u unsatisfiable u unsatisfiable case
u follows u exact cover u unsatisfiable moreover
u produced linear time u polynomial time reduction
xc unsatisfiability terms formula unsatisfiable
case entails term xc polynomially reduced entailment
terms respect making np hard hence
np complete
order np completeness clausal entailment remark
definitions function nnf transforms negations clauses terms
negations terms clauses means test whether clause entails
clause testing whether term nnf entails term nnf likewise
test whether term entails another term testing whether clause nnf
entails clause nnf nnf transformation polynomial follows
entailment clauses exactly difficult entailment terms clausal
entailment np complete
lemma definition entailment clauses terms pspace complete
proof membership pspace immediate since entailment arbitrary formulae
k decided polynomial space prove pspace hardness adapt existing
proof pspace hardness k
figure presents encoding qbf q p qm pm k formula f
used section blackburn et al demonstrate pspace hardness
k formula f property satisfiable case
qbf validity formula f generated polynomial time
qbf validity known pspace hard follows satisfiability formulae
k pspace hard well
figure modified encoding claim following
f f logically equivalent


fiprime implicates prime implicants modal logic

q
vm
ii qi j qj qi j qj qi j qj
vm
iiia qi qi qi qi qi qi
v
iiib qi qi qi pi qi pi
v
vm j
iv
j pi pi pi pi

v qm

figure formula f conjunction formulae
q
vm v
ii j qi qj qi qj qi qj
vm
iiia qi qi qi qi qi qi
v
iiib qi qi qi pi qi qi pi
vm vm
iv j j pi pi j pi pi

v qm qm l

figure formula f conjunction formulae formulae
v propositional clauses l

cnf f conjunction clauses respect
cnf f generated polynomial time f
suffices ii ii iiia iiia iiib iiib iv iv
v v first equivalence immediate since identical ii ii
follows fact k qi j qj j k qi qj iiia iiia holds
since iiia iiia qi qi replaced qi qi iiib iiib
since qi qi pi qi pi qi qi pi qi
qi pi equivalence iv iv holds j pi pi pi pi
j pi pi j pi pi finally v v since l thus f
f logically equivalent
prove component formulae f conjunction
clauses respect provided cnf clearly case
propositional literal formula ii conjunction clauses
respect since conjunction formulae form k qi qj similarly
iiia iiib iv conjunctions clauses since formulae k qi qi
qi qi pi qi qi pi k pi pi k pi pi
clauses respect formula v must conjunction clauses since
assumed propositional clauses making qm clause
respect v conjunction clauses respect


fibienvenu

clear transform iiia iiib iv iiia iiib
iv polynomial time transformations involve simple syntactic operations
resulting formulae twice large transformation ii ii
slightly involved hard see resulting formula
times large original greater length f
step could potentially exponential blow transformation
v v put cnf assumption already cnf
transformation executed polynomial time space
separate conjuncts rewrite qm qm
let q p qm pm qbf l propositional
clauses let f formula defined figure know
f p clauses respect consider following
formula
p
f satisfiable satisfiable follows
unsatisfiable
p unsatisfiable
p unsatisfiable
p unsatisfiable
f unsatisfiable
know f f blackburn et al
f satisfiable case qbf validity easy see
satisfiable entail contradiction putting
altogether valid case entail
clauses terms respect shown
qbf validity qbf propositional formulae cnf reduced
entailment clauses terms respect moreover
polynomial time reduction since follows transformation
accomplished polynomial time suffices pspace hardness since
well known qbf validity remains pspace hard even restrict propositional
part formula cnf cf papadimitriou
theorem figure hold
proof satisfaction dissatisfaction properties p p immediately
determined inspection definitions satisfaction p definitions
b counterexamples p definitions provided
body formula b clause disjunction literals
respect definitions
order definition b satisfy p remark negation
literal b equivalent b cannot expressed literal
b definitions shown straightforward inductive
proof nnf l literal whenever l literal nnf c term whenever


fiprime implicates prime implicants modal logic

c clause nnf clause whenever term enough prove
definitions satisfy p since nnf equivalent
since know definitions satisfy properties p p follows
theorem definitions satisfy p seen lemma
definition satisfy p e every formula equivalent conjunction
clauses respect disjunction terms respect every
clause resp term clause resp term respect definitions b
lemma follows every formula equivalent conjunction
clauses disjunction terms respect definitions means
satisfy p
easy see property p satisfied definitions since
definitions context free grammars well known deciding membership
context free grammars accomplished polynomial time cf younger
lemma know deciding entailment clauses terms
respect np complete hence p unless p np entailment
clauses terms pspace complete lemma every clause resp
term clause resp term respect definitions b
lemma follows entailment clauses terms pspace hard
definitions membership pspace immediate since entailment arbitary
k formulae pspace
prove theorem several steps
lemma notions prime implicates prime implicants induced satisfy
implicant implicate duality
proof suppose contradiction prime implicant formula
equivalent negation prime implicate let clause
equivalent must exist clause property p cf theorem
clause implicate since assumed
prime implicate must implicate
let term equivalent use p must
implicant since moreover strictly weaker since
means cannot prime implicant
contradicting earlier assumption hence conclude every prime implicant
formula equivalent negation prime implicate proof
every prime implicate formula equivalent negation prime implicant
proceeds analogously
lemma clauses terms defined according definition every implicate formula entailed implicate var var
depth every implicant entails implicant
var var depth
proof intend following statement holds formula
implicate exists clause var var


fibienvenu

let arbitrary formula let implicate
tautology set var set
var clause verifies necessary conditions
consider case neither tautology falsehood
construct clause first thing use dnf rewrite
disjunction satisfiable terms ti respect ti contain
variables appearing depth
tz
must case ti every ti aim clause
terms ti ti var var ti ti
consider ti since ti term form k
n k propositional literals clause must form
p q r p propositional literals
ti must case formula
k n
p q r
unsatisfiable theorem one following must hold
exists u v u v
b exists u u n q
c exists u u n q
holds set u since ti u u ti var u
var ti b holds must case
u n q
hence
u n q
set u n since ti u n u
n ti var u n var ti finally c holds
must case
n q u
hence
n q u
set n ti n n ti
var n var ti thus shown every ti
ti var var ti ti z
clause implied every ti hence var var ti var
maxi ti
let implicant let formula nnf know
nnf transformation equivalence preserving hence straightforward


fiprime implicates prime implicants modal logic

must clause respect implicate
must clause var var var depth
let nnf easily verified
term moreover properties nnf transformation
var var var term
var var
lemma notions prime implicates prime implicants induced satisfy
finiteness
proof consider arbitrary formula lemma know prime
implicate must implicate containing propositional
atoms appearing since prime
implicate must hence thus every prime implicate
equivalent clause built finite set propositional symbols
depth finitely many non equivalent formulae
finite alphabet fixed depth follows finitely many
distinct prime implicates lemma every prime implicant equivalent
negation prime implicate follows every formula
finitely many distinct prime implicants
lemma notions prime implicates prime implicants induced satisfy
covering
proof let arbitrary formula lemma know every implicate
entailed implicate whose propositional variables contained var
whose depth consider following set
clause var var
define another set follows

words set logically strongest implicates depth
built propositional letters claim following
every prime implicate
every implicate
begin proving suppose hold
prime implicate since definition implicate follows
must implicate lemma
implicate var var
means element implies implied contradicting
assumption thus conclude every element must
prime implicate


fibienvenu

let implicate lemma exists clause
done otherwise must exist
done otherwise another stronger
member finitely many elements modulo equivalence finite number
steps element implies since
seen members prime implicates follows every implicate
implied prime implicate
second part covering let implicant let clause
equivalent must one satisfies p since must
according shown must prime
implicate lemma must equivalent
negation prime implicant since
follows completing proof
lemma notions prime implicates prime implicants induced satisfy
equivalence
proof let formula k suppose model every prime implicate
known satisfy property p theorem conjunction
clauses equivalent covering lemma clauses implied
prime implicate must model clauses follows
model direction simply note definition
prime implicates model must model every prime implicate
thus shown model model every prime
implicate similar argument model
model prime implicant
lemma notions prime implicates prime implicants induced satisfy
distribution
proof let prime implicate n must
covering know must exist prime implicate
means formula n clause
disjunction clauses entails since prime implicate must case
n hence n proof prime implicants entirely
similar
theorem notions prime implicates prime implicants induced definition
satisfy finiteness covering equivalence implicant implicate duality
distribution
proof follows directly lemmas
theorem notions prime implicates prime implicants induced definitions
satisfy equivalence


fiprime implicates prime implicants modal logic

proof proof definitions suppose equivalence holds
every formula set prime implicates equivalent means
set inconsistent hence compactness k cf blackburn et al
p finite subset inconsistent
know set must contain set prime implicates
cannot inconsistent conjunction elements conjunction
clauses equivalent follows every formula equivalent
conjunction clauses shown earlier proof theorem
formulae equivalent conjunction clauses respect
follows equivalence cannot hold definitions
theorem notions prime implicates prime implicants induced definitions
b satisfy finiteness
proof suppose clauses defined respect definition b
proof three definitions consider formula b follows
theorem implies k k b k every k
formulae k clauses respect b k implicates
complete proof every k prime implicate since k
mutually non equivalent p q whenever p q follows
infinitely many prime implicates modulo equivalence
consider k implicate n
implies theorem cannot propositional literals theorem
fact k get following
b
b k b k every
c b k
let b remark must satisfiable since
otherwise combine c get b b k b know
k b k hence k b ka inconsistent
follows k k b inconsistent theorem
k b satisfiable clause respect
definitions b cannot imply b must k
putting c together
b b k
follows k e k thus k
b k k b k theorem get
k b k hence k thus
shown implicate implies k must equivalent k means
k prime implicate completing proof


fibienvenu

lemmas follow easily known properties disjunctive normal
form transformation propositional logic cf bienvenu ch
proof theorem make use following lemmas
lemma genpi terminates
proof know lemma dnf terminates returns
finite set formulae means finitely many terms consider
set contains finitely many elements immediate given
definition means set candidates finite cardinality
final step compare pair elements candidates
comparison terminates finitely many pairs check follows
genpi terminates
lemma genpi outputs exactly set prime implicates input
formula
proof first prove every prime implicate satisfiable term equivalent
element let k n
satisfiable term let p q r one
prime implicates restrict attention interesting case
non tautologous must case
k n
p q r
unsatisfiable theorem one following must hold
exists u v u v
b exists u u n q
c exists u n u q
holds u must equivalent u else would found
stronger implicate contradicting assumption prime implicate
holds since u b holds formula u n
implicate implies u n done since
u r member finally consider case c holds
case n implicate implies equivalent
prime implicate desired since n one
elements thus conclude every prime implicate term
equivalent element lemma elements dnf terms
disjunction equivalent satisfies distribution follows every
prime implicate input equivalent element candidates means
element candidates prime implicate prime
implicate implies implied hence j candidates
j j thus comparison phase clause
removed candidates suppose clause prime implicate


fiprime implicates prime implicants modal logic

know must candidates moreover
choose j j j final step
compare clauses j j never j j
j j j otherwise would prime implicate follows
remains set candidates returned
thus shown set formulae output genpi input precisely set
prime implicates
theorem genpi terminates outputs exactly set prime
implicates input formula
proof follows directly lemmas
theorem length smallest clausal representation prime implicate
formula single exponential length formula
proof prime implicates generated genpi disjuncts
terms dnf lemma moreover disjunct length
lemma gives us total symbols must
add disjunction symbols connecting disjuncts thus
length smallest representation prime implicate formula

theorem length smallest clausal representation prime implicate
formula exponential length formula
proof consider formula


n


ai ai



clause




j jn

j j jn

n

ak l p whenever k l p difficult see
equivalent means must prime implicate remains
shown clause equivalent must length least yields
since clearly size exponential n whereas length linear n
let shortest clause equivalent equivalent follows
theorem disjunction literals inconsistent literals
since assumed shortest representation cannot contain inconsistent
literals redundant literals since could remove equivalent
shorter clause must form l k whenever l k
since every disjunct p must imply disjunction literals
follows theorem every disjunct p implies disjunct q
means every p must length least n since p satisfiable
formula implies conjunction n distinct propositional variables know
every disjunct q implies disjunct p since wish


fibienvenu

two disjuncts imply disjunct suppose
case distinct disjuncts disjunct p
p p since distinct disjuncts
must ai ai ai ai
know p q q every q implies ai ai
p ai p ai know q imply ai ai
one must imply p contradicts earlier
assumption p p disjunct must imply distinct
disjunct thus demonstrated contains many disjuncts
already shown disjuncts shorter disjuncts
follows hence conclude every clause equivalent
length least completing proof
theorem prove following clause


q qn c
q qn n

prime implicate respect formula




b b b b

n


bi bi





n


bi bi bi n bn bn c



moreover shorter way represent
proof theorem makes use following lemmas
lemma let l lm clause implies q qn qi
propositional variable l lm q qn
proof proof make use fact every clause satisfiable
straightforwardly shown structural induction base case propositional
literals clearly satisfiable induction step consider clause
proper sub clauses satisfiable three possibilities
form satisfiable clause disjunction
satisfiable clauses three cases must satisfiable
proof lemma induction n n l lm
according theorem every disjunct l lm must unsatisfiable
formula shown previous paragraph every clause satisfiable
l lm
suppose holds whenever n k suppose l lm
q qk every li must li q qk hence li q qk
theorem arrive following four possibilities


fiprime implicates prime implicants modal logic

q qk
b li
c q li li li q qk
q li li li q qk
eliminate case since q qk every string modalities q qk
eliminate b since li must satisfiable clauses remark
c holds according induction hypothesis li q qk similarly
holds li q qk follows li equivalent q qk
l lm q qk
v
n let q b b n
k
lemma

fix
q


q





n



k qk bk
vn k
bk bk bk n bn bn c r rn c
k
rk qk k n
proof begin showing n formula
bi bi

n


n


ki qk bk

k

ki bk bk bk ni bn bn c

k

entails formula ri rn c case qi qn ri rn
proof induction base case n
bn bn qn bn bn bn bn bn bn c rn c




bn bn qn bn bn bn bn c rn c
theorem
qn rn bn bn bn c c

qn rn bn bn bn bn c c
bn bn bn c c cannot first alternative follows
equation holds second alternative must hold case get qn rn
desired direction simply note bn bn bn bn c c
valid entailment means qn rn implies equation
next let us suppose statement holds j n let us
prove statement holds j
bj bj

n


kj



qk bk

k j

n


kj bk bk bk

k j

nj bn bn c

rj rn c




fibienvenu

one following holds
qj rj
bj

n


n


kj qk bk

k j

kj bk bk bk nj bn bn c

k j

rj rn c

b qj rj
bj bj

n


n


kj qk bk

k j

kj bk bk bk nj bn bn c

k j

rj rn c

first entailment hold consider model
hw r vi defined follows
w wj wn
r wj wj wn wn
v c w f alse w w
w wj v bk w true w wk
v bk wj true k j
notice since world excepting wn exactly one successor quantifiers behaviour except wn easily verified wj
satisfies left hand side abovev
entailment tuple qj qn wj
bj definition wj nk j kj qk bk wk bk k j
vn kj
wj k j
bk bk bk since wj bj wk bk
k j finally wj nj bn bn c since wn bn however
right hand side rj rn c satisfied wj world accessible wj n j
steps wn satisfy c
shown case cannot hold means equation holds
b apply induction hypothesis entailment b
holds case qj qn rj rn follows equation
qj qn rj rn desired completes proof statement
proceed proof lemma theorem
q b b

n


n


k qk bk

k

k bk bk bk n bn bn c

k

r rn c

holds case
q b b

n


k

k qk bk

n


k bk bk bk n bn bn c

k

r rn c


fiprime implicates prime implicants modal logic

turn holds one following statements holds
q r


n


n


k qk bk

k

k bk bk bk n bn bn c r rn c

k

ii q r
b b

n


k

n


k qk bk

k bk bk bk n bn bn c

k

r rn c

remark set j left hand side entailment
logically weaker right hand side matches
already shown entailment hold follows entailment
cannot hold thus desired entailment relation statement
lemma holds ii completes proof since already
shown induction entailment ii holds q qn r rn
e ii true case q qn r rn
lemma clause equivalent strictly smaller size
proof let clause equivalent suppose furthermore
shortest clause non tautologous contains literals disjuncts
follows every disjunct must unsatisfiable literal cf theorem
clauses satisfiable cf proof lemma must contain
literals
since every disjunct l must imply disjunct q qn c
every disjunct l must implied disjunct q qn c since otherwise
could remove l preserving equivalence
follows disjunct implied disjunct implies
disjunct since disjuncts imply lemma
follows disjunct equivalent disjunct moreover
every disjunct equivalent disjunct
completes proof since clear disjuncts q qn c cannot
compactly represented
proof works equally well since every clause clause
theorem prime implicates defined length
smallest clausal representation prime implicate formula exponential
length formula
proof begin definition let defined page begin
distributing order transform equivalent disjunction terms


tq qn
q qn n



fibienvenu

tq qn equal
q b b

n


q bi

n


bi bi bi n bn bn c





lemma tq qn q qn c hence tq qn thus
stronger clause respect implied
let clause non tautologous disjunction
literals know lemma every disjunct must form l
l clause l r rn c quantifier string r rn according
lemma l r rn c l equivalent r rn c follows equivalent
clause disjuncts forms r rn c
must case terms tq qn implies equivalently
tq qn shown disjuncts literals
follows theorem term implies disjunct moreover know
preceding paragraph disjuncts equivalent formula
form r rn c lemma formula type implied
tq qn formula q qn c means every tuple quantifiers q qn
disjunct equivalent q qn c follows every disjunct
equivalent disjunct giving us thus conclude
prime implicate
completes proof since already shown lemma
shorter clause equivalent
proof works definition since every clause clause
particular means clause prime implicate respect
prime implicate respect clause shortest
among equivalent clauses shortest among clauses
theorem number non equivalent prime implicates formula double
exponential length formula
proof know theorem every prime implicatewof equivalent
clause returned genpi every clause form dnf
terms dnf lemma clauses
disjuncts moreover choices disjunct
since cardinality bounded size know lemma

follows clauses returned

genpi hence non equivalent prime implicates
theorem number non equivalent prime implicates formula may double
exponential length formula
proof let n natural number let b b b bn
bn n distinct propositional variables consider formula defined
n


ai bi ai bi





fiprime implicates prime implicants modal logic

hard see n terms dnf corresponding n ways
deciding n whether take first second disjunct term
dnf form
n


ai f bi f



f denote set formulae f
b f bn f n n consider set clauses c defined




dt dt

dnf
n

notice n clauses c since clause corresponds choice one
n elements n terms dnf number double
exponential since length linear n order complete proof
clauses c prime implicates ii clauses c
mutually non equivalent
begin showing every pair distinct elements c
immediately gives us ii prove useful proof let
distinct clauses c distinct must term dnf
choose different elements let element
appearing disjunct let element disjunct
let aj k literal appears hence consider
formula aj k b k bn kn tuple k kn tuple
associated except inversed clearly consistent
since variables appear inconsistent every disjunct
since construction every disjunct contains literal whose negation appears
follows hence
prove let clause c let prime implicate
implies theorem know must equivalent one clauses output
genpi specifically clause output genpi disjunction
literals theorem remark set c composed exactly
candidate clauses disjunctions literals must equivalent
clause c shown element c implies
follows means prime implicate
theorem prime implicates defined number
non equivalent prime implicates formula may double exponential length
formula
proof let defined page set equal formula obtained
replacing c last conjunct c set equal set clauses
obtained replacing zero occurrences c example n
n
c c c c elements
since choose n disjuncts whether change c intend


fibienvenu

clauses pairwise non equivalent prime implicates
proof every element indeed prime implicate respect
proceeds quite similarly proof prime implicate see proof
theorem repeat instead elements
pairwise non equivalent consider two distinct elements
since distinct must string quantifiers q qn
disjunct q qn c disjunct
would q qn hence q qn r rn disjunct r rn
lemma see happen r rn q qn
e q qn disjunct contradiction must follows
elements pairwise non equivalent hence possesses double
exponential number prime implicates
theorem exists runs single exponential space size
input incrementally outputs without duplicates set prime implicates
input formula
proof let sets candidates function defined figure
assume ordered tn ti let max denote
number elements ti assume ordering elements ti
ti max notice tuples max max n
ordered standard lexicographic ordering lex lex b bn
j n aj bj ak bk k j
set maxindex ni maxi let f max max n maxindex
bijection defined follows f th
tuple lexicographic ordering max max n denote
unique clause form n f remark
given index maxindex sets tn possible
generate polynomial space size sets tn clause
make use fact modified version genpi defined follows
function itergenpi
genpi
genpi
maxindex j j j j
every j maxindex output
proofs termination correctness completeness itergenpi similar corresponding genpi theorem omit details
instead focus spatial complexity itergenpi first step itergenpi
clearly runs single exponential space since deciding satisfiability takes
polynomial space generating elements dnf takes
single exponential space refer lemma step uses singleexponential space since sets associated term ti
polynomial size ti finally step use observation generation given index done polynomial space size sets


fiprime implicates prime implicants modal logic

tn hence single exponential space sufficient since
comparisons step need keep two candidate clauses memory
one time deciding whether one candidate clause entails another accomplished
single exponential space since clauses single exponential size
theorem prime implicate recognition pspace hard
proof reduction simple formula unsatisfiable
prime implicate suffices checking unsatisfiability formulae
k known pspace complete
need following two lemmas theorem
lemma let formula k let k
n j propositional literals non tautologous clause suppose furthermore
literal l l k
k n every

proof prove contrapositive k k
n
consider case
immediately get
let us first suppose k k since must
k k k implicate k
k known prime implicate k follows
must clause k k
consider clause n know since
k k
since must equivalent propositional clause theorem propositional
part namely k imply follows

next suppose n n
must implicate since assumed
n prime implicate follows
n let
k n theorem know disjunction
literals according theorem must since n
know since since
n means
finally consider case
know hence
moreover since j j
thus must mean

assumption tautology cannot tautology


fibienvenu

tautology
follows theorem equivalent formula p let
k p n
p must case know
j j otherwise would
j hence p similarly
k k would mean
contradicting assumption superfluous disjuncts
follows theorem thus means

lemma let formula k let k n
j propositional literals non tautologous clause suppose furthermore
literal l l k
k k n

proof consider case immediately
get suppose definition must
p q since
proposition know k p
j p j
begin case k theorem
p every j j
follows theorem n
hence k k
found implicate k stronger k
k k
next suppose p follows theorem

k every j j
thereby obtain k p
n infer k
n p p
follows
k n
finally suppose j p j furthermore

p already shown holds
p implicate
prime implicate must
stronger implicate consider set q
k k note must least one element
assumed since k p

every r sw r w

get w
k j j w
ss follows

ss means ss


fiprime implicates prime implicants modal logic

w
implicate moreover ss
since construction every
w
remains shown ss
suppose
contradiction contrary holds
w

ss theorem must
thus
p since assumed p contradicts
earlier assumption w
j p j thus shown
ss

theorem let formula k let k n
j propositional literals non tautologous clause n
b literal l l
following conditions hold
k k
n every
n n
proof forward direction shown lemma direction follows
lemma together hypothesis n
ensures k n
n
theorem let formula k let non tautologous propositional clause
literal l l
l l
proof consider formula non tautologous propositional clause
literal l l suppose l
l know l follows l implicate
strictly stronger prime implicate
direction suppose must case clause
since follows theorem literal
propositional literal inconsistent literals inconsistent
must inconsistent clearly l every l otherwise
equivalent propositional clause specifically propositional clause
containing literals appearing since strictly stronger
must literal l appear means l
l completing proof
theorem let formula k let non tautologous clause
exists term dnf
conjunction formulae


fibienvenu

proof let formula let non tautologous clause
first direction suppose term dnf
conjunction formulae two cases
terms dnf unsatisfiable terms none satisfy
condition first case prime implicate since contradictory
clause
w
e g stronger second case consider clause
conjunction formulae every must
w
otherwise would hence
w moreover
since every theorem since
means prime implicate
direction suppose prime implicate

must dnf
w dnf non empty w
implies
let
w primewimplicate w
implicate implies since
non tautologous follows theorem n formulae
must n w
dnf
wbe
case n w
means n
implies every implicate w
implies must prime implicate
means since assumed prime implicate
follows theorem dnf
order theorem need following lemmas
lemma implicate prime implicate
test pi returns input
proof suppose prime implicate unsatisfiable must
satisfiable return first step satisfiable since
assumed implicate must clause
follows theorem equivalent disjunction
formulae hence clause
know lemma equivalent disjunction terms dnf
must thus case ti ti dnf since ti satisfiable
conjunction propositional literals formulae follows exists set
k conjuncts ti k otherwise
ti would fail imply moreover elements k must
appear nnf outside modal operators formulae k must
elements set x immediate



k







k







fiprime implicates prime implicants modal logic

w
latter implies formula k must consistent
means


k k




must consistent well itvmust case select
k consistent let set set
satisfies condition since
sx


w



know

v



consistent

ti dnf conjuncts k ti
k since contains k
k follows
since exists set x satisfying conditions returns
lemma test pi returns input
prime implicate
proof suppose test pi returns input happens first
step must case unsatisfiable unsatisfiable case
prime implicate possibility returns step
means w
must x satisfying

b ti dnf exist conjuncts k ti

k
ii k
w
let clause w
k
w remark ti ti
k hence




k
w
w definition
dnf ti immediately follows k
hence w
b ii k every
hence k yields b
k hence every
w

w
k w infer k w

hence know theorem
follows putting together see exists clause
hence prime implicate
theorem let formula let implicate
test pi returns yes input prime implicate


fibienvenu

proof clear test pi terminates since unsatisfiability testing nnf transformation terminate finitely many ti lemmas
us gives correct response
theorem test pi runs polynomial space
proof remark sum lengths elements x bounded
length formula nnf hence lemma sum thew lengths
elements particular x cannot exceed testing whether thus
accomplished polynomial v
space length involves testing
satisfiability formula whose length clearly polynomial
let us turn step b notice necessary keep ti
memory since generate terms ti one time polynomial
space lemma lemma length ti dnf
follows checking whether k whether
k accomplished polynomial space length
conclude test pi runs polynomial space
order theorem use following lemmas
lemma clause prime implicate testpi outputs
input
proof let us begin considering formula clause prime
implicate two possible reasons implicate
implicate exists stronger implicate first case testpi returns
step desired focus case implicate
prime implicate begin treating limit cases one
tautology contradiction given know non prime implicate
two possible scenarios cases
returns step
implicate neither tautology contradiction
continue step step redundant literals deleted
contains literals add extra disjunct literals
satisfies syntactic requirements theorem let k
n clause end step modifications made
transformations step equivalence preserving theorem modified
equivalent original still non tautologous non prime implicate
means satisfy conditions theorem follows one
following holds
k k
b n
c n n


fiprime implicates prime implicants modal logic

suppose holds k non tautologous propositional clause implied
k contains redundant literals means
k k satisfy conditions theorem according theorem
k k must j
k j j k means j
returns step
suppose next b holds let n
theorem means dnf
n entails conjunction formulae conjuncts follows
returns step
finally consider case
step
wm neither b holds c wdoes

call test pi prime
implicate shown test pi correct theorem
test pi return testpi return well covered
possible cases conclude clause prime implicate
testpi outputs
lemma testpi outputs input clause
prime implicate
proof different ways testpi return occur steps
let us consider turn first way return
step correct since cannot prime implicate
consequence step return unsatisfiable
tautology correct since cases cannot prime
implicate since exist stronger implicates contradictory clause
non tautologous implicate step may modify resulting
formula equivalent original prime implicate case
original clause let k n clause end
step step return propositional literal l
l since step removed redundant literals sure
l strictly stronger l l
means prime implicate consider step testpi step
return disjunct term dnf
entails conjunction literals according theorem
means prime implicate
means prime implicate
w theorem step return
test pi returns input ki theorem
w
know happens case ki prime implicate
follows theorem prime implicate

theorem testpi terminates returns yes input
prime implicate


fibienvenu

proof testpi clearly terminates steps involve finite number
syntactic operations finite number entailment checks moreover call
test pi step known terminate theorem correctness completeness
already shown lemmas
make use following lemma proof theorem
lemma testpi provided figure runs polynomial space
length input
proof clear steps carried polynomial space length
input since simply involve testing satisfiability formulae whose lengths
polynomial step
w carried polynomial space since theorem
deciding whether formula w
prime implicate
takes polynomial space
hence
thus conclude testpi runs polynomial space
length input
theorem prime implicate recognition pspace
proof theorem testpi terminates returns yes whenever clause prime implicate otherwise means testpi decision
procedure prime implicate recognition since shown run
polynomial space lemma conclude prime implicate recognition
pspace
corollary prime implicate recognition pspace complete
proof follows directly theorems

references
adjiman p chatalic p goasdoue f rousset c simon l distributed
reasoning peer peer setting application semantic web journal
artificial intelligence
baader f mcguiness l nardi patel schneider p eds description logic handbook cambridge university press
bienvenu prime implicates prime implicants modal logic proceedings
twenty second conference artificial intelligence aaai pp
bienvenu prime implicate normal form alc concepts proceedings
twenty third conference artificial intelligence aaai pp
bienvenu consequence finding modal logic ph thesis universite de
toulouse
bittencourt g combining syntax semantics prime form representation journal logic computation


fiprime implicates prime implicants modal logic

blackburn p de rijke venema modal logic cambridge university
press
blackburn p van benthem j wolter f eds handbook modal logic
elsevier
brandt turhan optimized approximation proceedings
ki workshop applications description logics kidlws
cadoli donini f survey knowledge compilation ai communications
cialdea mayer pirri f propositional abduction modal logic logic
journal igpl
darwiche marquis p knowledge compilation map journal artificial
intelligence
de kleer j mackworth k reiter r characterizing diagnoses systems
artificial intelligence
donini f description logic handbook chap complexity reasoning
cambridge university press
donini f lenzerini nardi hollunder b nutt w marchetti spaccamela
complexity existential qualification concept languages artificial
intelligence
eiter makino k computing abductive explanations proceedings
eighteenth national conference artificial intelligence aaai pp
enjalbert p farinas del cerro l modal resolution clausal form theoretical
computer science
garey r johnson computers intractability guide theory
np completeness w h freeman
ghilardi lutz c wolter f damage ontology case conservative extensions description logics proceedings tenth international
conference principles knowledge representation reasoning kr pp

giunchiglia f sebastiani r sat decision procedure alc
proceedings fifth international conference principles knowledge representation reasoning kr pp
kusters r molitor r approximating specific concepts logics
existential restrictions ai communications
ladner r computational complexity provability systems modal propositional logic siam journal computing
lakemeyer g logical account relevance proceedings fourteenth
international joint conference artificial intelligence ijcai pp


fibienvenu

lang j liberatore p marquis p propositional independence formulavariable independence forgetting journal artificial intelligence

marquis p contribution letude des methodes de construction dhypotheses en
intelligence artificielle french universite de nancy
marquis p b extending abduction propositional first order logic proceedings fundamentals artificial intelligence workshop pp
marquis p handbook defeasible reasoning uncertainty management systems vol chap consequence finding pp kluwer
pagnucco knowledge compilation belief change proceedings
nineteenth australian conference artificial intelligence ai pp
papadimitriou c computational complexity addison welsey
przymusinski compute circumscription artificial intelligence

ramesh murray n computing prime implicants implicates regular logics
proceedings twenty fourth ieee international symposium multiplevalued logic pp
schild k correspondence theory terminological logics preliminary report
proceedings twelth international joint conference artificial intelligence
ijcai pp
younger h recognition parsing context free languages time n
information control




