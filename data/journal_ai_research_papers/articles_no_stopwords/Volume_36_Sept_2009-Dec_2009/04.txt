Journal Artificial Intelligence Research 36 (2009) 229-266

Submitted 03/09; published 10/09

Relaxed Survey Propagation
Weighted Maximum Satisfiability Problem
Hai Leong Chieu

chaileon@dso.org.sg

DSO National Laboratories,
20 Science Park Drive, Singapore 118230

Wee Sun Lee

leews@comp.nus.edu.sg

Department Computer Science, School Computing,
National University Singapore, Singapore 117590

Abstract
survey propagation (SP) algorithm shown work well large instances
random 3-SAT problem near phase transition. shown SP estimates
marginals covers represent clusters solutions. SP-y algorithm generalizes
SP work maximum satisfiability (Max-SAT) problem, cover interpretation
SP generalize SP-y. paper, formulate relaxed survey propagation (RSP) algorithm, extends SP algorithm apply weighted Max-SAT
problem. show RSP interpretation estimating marginals covers
violating set clauses minimal weight. naturally generalizes cover interpretation SP. Empirically, show RSP outperforms SP-y state-of-the-art
Max-SAT solvers random Max-SAT instances. RSP outperforms state-of-the-art
weighted Max-SAT solvers random weighted Max-SAT instances.

1. Introduction
3-SAT problem archetypical NP-complete problem, difficulty solving
random 3-SAT instances shown related clause variable ratio,
= M/N , number clauses N number variables. phase
transition occurs critical value c 4.267: random 3-SAT instances < c
generally satisfiable, instances > c not. Instances close phase
transition generally hard solve using local search algorithms (Mezard & Zecchina,
2002; Braunstein, Mezard, & Zecchina, 2005).
survey propagation (SP) algorithm invented statistical physics community using approaches used analyzing phase transitions spin glasses (Mezard &
Zecchina, 2002). SP algorithm surprised computer scientists ability solve
efficiently extremely large difficult Boolean satisfiability (SAT) instances phase
transition region. algorithm extended SP-y algorithm handle
maximum satisfiability (Max-SAT) problem (Battaglia, Kolar, & Zecchina, 2004).
Progress made understanding SP algorithm works well. Braunstein
Zecchina (2004) first showed SP viewed belief propagation (BP)
algorithm (Pearl, 1988) related factor graph clusters solutions represented
covers non-zero probability. known whether similar interpretation
given SP-y algorithm. paper, extend SP algorithm handle weighted
c
2009
AI Access Foundation. rights reserved.

fiChieu & Lee

Max-SAT instances way preserves cover interpretation, call new
algorithm Relaxed Survey Propagation (RSP) algorithm. Empirically, show
RSP outperforms SP-y state-of-the-art solvers random Max-SAT instances.
outperforms state-of-the-art solvers benchmark Max-SAT instances.
random weighted Max-SAT instances, outperforms state-of-the-art weighted Max-SAT
solvers.
rest paper organized follows. Section 2, describe background
literature mathematical notations necessary understanding paper. includes
brief review definition joint probability distributions factor graphs,
introduction SAT, Max-SAT weighted Max-SAT problem,
formulated inference problems probability distribution factor graph.
Section 3, give review BP algorithm (Pearl, 1988), plays central role
paper. Section 4, give description SP (Braunstein et al., 2005)
SP-y (Battaglia et al., 2004) algorithm, explaining warning propagation algorithms.
Section 5, define joint distribution extended factor graph given weighted
Max-SAT instance. factor graph generalizes factor graph defined Maneva,
Mossel Wainwright (2004) Chieu Lee (2008). show that, solving
SAT instances, running BP algorithm factor graph equivalent running
SP algorithm derived Braunstein, Mezard Zecchina (2005). weighted
Max-SAT problem, gives rise new algorithm call Relaxed Survey
Propagation (RSP) algorithm. Section 7, show empirically RSP outperforms
algorithms solving hard Max-SAT weighted Max-SAT instances.

2. Background
SP first derived principles statistical physics, understood
BP algorithm, estimating marginals joint distribution defined factor graph.
section, provide background material joint distributions defined
factor graphs. define Boolean satisfiability (SAT) problem, maximum
satisfiability (Max-SAT) problem, weighted maximum satisfiability (weighted MaxSAT) problem, show problems solved solving inference problem
joint distributions defined factor graphs. review definition derivation
BP algorithm follow next section, describe SP algorithm
Section 4.
2.1 Notations
First, define notations concepts relevant inference problems
factor graphs. Factor graphs provide framework reasoning manipulating joint
distribution set variables. general, variables could continuous nature,
paper, limit discrete random variables.
paper, denote random variables using large Roman letters, e.g., X, .
random variables always discrete paper, taking values finite domain. Usually,
interested vectors random variables, write letters bold
face, e.g., X, Y. often index random variables letters i, j, k..., write,
example, X = {Xi }iV , V finite set. subset W V , denote
230

fiRelaxed Survey Propagation Weighted Max-SAT Problem


X1

'
X2

''
X3

X4

Figure 1: simple factor graph p(x) = (x1 , x2 ) 0 (x1 , x3 ) 00 (x2 , x4 ).
XW = {Xi }iW . call assignment values variables X configuration,
denote small bold letters, e.g. x. often write x represent event
X = x and, probability distribution p, write p(x) mean p(X = x). Similarly,
write x denote event X = x, write p(x) denote p(X = x).
recurring theme paper defining message passing algorithms joint
distributions factor graphs (Kschischang, Frey, & Loeliger, 2001). joint distribution
defined product local functions (functions defined small subset variables),
refer local functions factors. index factors, e.g. , Greek
letters, e.g., , (avoiding used symbol clause variable ratio SAT
instances). factor , denote V () V subset variables
defined, i.e. function defined variables XV () . message passing
algorithms, messages vectors real numbers sent factors variables
vice versa. vector message sent variable Xi factor denoted
Mi , message Xi denoted Mi .
2.2 Joint Distributions Factor Graphs
Given large set discrete, random variables X = {Xi }iV , interested joint
probability distribution p(X) variables. set V large, often
interest assume simple decomposition, draw conclusions efficiently
distribution. paper, interested joint probability distribution
decomposed follows
p(X = x) =

1
(xV() ),
Z F

(1)

set F indexes set functions { }F . function defined
subset variables XV () set X, maps configurations xV () non-negative
real numbers. Assuming function defined small subset variables
XV () , hope efficient inference distribution, despite large number
variables X. constant Z normalization constant, ensures
distribution sums one configurations x X.
factor graph (Kschischang et al., 2001) provides useful graphical representation
illustrating dependencies defined joint probability distribution Equation 1.
factor graph G = ({V, F }, E), bipartite graph two sets nodes, set variable
nodes, V , set factor nodes, F . set edges E factor graph connects
variable nodes factor nodes, hence bipartite nature graph. factor graph
representing joint distribution Equation 1, edge e = (, i) E
231

fiChieu & Lee

variable Xi parameter factor (i.e. V ()). denote V (i)
set factors depending variable Xi , i.e.
V (i) = { F | V ()}

(2)

show simple example factor graph Figure 1. small example,
example, V () = {1, 2} V (2) = {, 00 }. factor graph representation useful
illustrating inference algorithms joint distributions form Equation 1 (Kschischang et al., 2001). Section 3, describe BP algorithm using factor
graph representation.
Equation 1 defines joint distribution product local factors. often useful
represent distribution following exponential form:
p(x) = exp (

X

(xV () ) )

(3)

F

equation reparameterization Equation 1, (xV () ) = exp( (xV () ))
= ln Z. statistical physics, exponential form often written follows:
p(x) =

1
1
exp(
E(x)),
Z
kB

(4)

E(x) Hamiltonian energy function, kB Boltzmanns constant,
temperature. simplicity, set kB = 1, Equations 3 4 equivalent
P
E(x) = F (xV () ).
Bayesian (belief) networks Markov random fields two graphical representations often used describe multi-dimensional probability distributions. Factor graphs
closely related Bayesian networks Markov random fields, algorithms
operating factor graphs often directly applicable Bayesian networks Markov
random fields. refer reader work Kschischang et al. (2001) comparison
factor graphs, Bayesian networks Markov random fields.
2.3 Inference Joint Distributions
literature, inference joint distribution refer solving one two problems.
define two problems follows:
Problem 1 (MAP problem). Given joint distribution, p(x), interested configuration(s) highest probability. configurations, x , called maximuma-posteriori configurations, MAP configurations
x = arg max p(x)
x

(5)

joint distribution Equation 4, MAP configuration minimizes energy
function E(x), hence MAP problem sometimes called energy minimization
problem.

232

fiRelaxed Survey Propagation Weighted Max-SAT Problem

Problem 2 (Marginal problem). Given joint distribution, p(x), central interest
calculation estimation probabilities events involving single variable Xi = xi .
refer probabilities marginal probabilities:
X

pi (xi ) =

p(x).

(6)

x\xi

P

notation x\xi means summing configurations X variable Xi set
xi . Marginals important represent underlying distribution individual
variables.
general, problems solvable reasonable time currently known methods. Naive calculation pi (xi ) involves summing probabilities configurations
variables X Xi = xi . example, factor graph n variables
cardinality q, finding marginal one variables involve summing q n1
configurations. Furthermore, NP-complete problems 3-SAT simply coded
factor graphs (see Section 2.4.1). such, MAP problem general NP-complete,
marginal problem equivalent model counting 3-SAT, #P-complete
(Cooper, 1990). Hence, general, expect solve inference problems (exactly) reasonable time, unless problems small, special structures
exploited efficient inference.
central interest paper particular approximate inference method known
(sum-product) belief propagation (BP) algorithm. defer discussion
BP algorithm next section. rest section, describe SAT,
Max-SAT weighted Max-SAT problems, simply formulated
inference problems joint distribution factor graph.
2.4 SAT Max-SAT Problem
variable Boolean takes values {FALSE, TRUE}. paper, follow
conventions statistical physics, Boolean variables take values {1, +1}, 1
corresponding FALSE, +1 corresponding TRUE.
Boolean satisfiability (SAT) problem given Boolean propositional formula
written operators (conjunction), (disjunction), (negation),
parenthesis. objective SAT problem decide whether exists configuration propositional formula satisfied (evaluates TRUE). SAT
problem first problem shown NP-complete Stephen Cooks seminal paper
1971 (Cook, 1971; Levin, 1973).
three operators Boolean algebra defined follows: given two propositional
formulas B, OR(A, B) true either B true; AND(A, B) true
B true; NOT(A) true false. rest paper, use
standard notations Boolean algebra Boolean operators: B means OR(A, B),
B means AND(A, B), means NOT(A). parenthesis available allow
nested application operators, e.g. (A B) (B C).
conjunctive normal form (CNF) often used standard form writing Boolean
formulas. CNF consists conjunction disjunctions literals, literal
either variable negation. example, (X1 X 2 ) (X 3 X4 ) CNF,
233

fiChieu & Lee

X1 X2 (X1 X2 ) (X2 X3 ) not. Boolean formula re-written CNF
using De Morgans law distributivity law, although practice, may lead
exponential blowup size formula, Tseitin transformation often used
instead (Tseitin, 1968). CNF, Boolean formula considered conjunction
set clauses, clause disjunction literals. Hence, SAT problem
often given (X, C), X vector Boolean variables, C set
clauses. clause C satisfied configuration evaluates TRUE
configuration. Otherwise, said violated configuration. use Greek
letters (e.g. , ) indices clauses C, denote V () set variables
clause C. K-SAT problem SAT problem clause C consists
exactly K literals. K-SAT problem NP-complete, K 3 (Cook, 1971).
maximum satisfiability problem (Max-SAT) problem optimization version
SAT problem, aim minimize number violated constraints
formula. define simple working example Max-SAT problem use
throughout paper:
Example 1. Define instance Max-SAT problem CNF following clauses
1 = (x1 x2 ), 2 = (x2 x3 ), 3 = (x3 x1 ), 4 = (x1 x2 x3 ), 5 = (x1 x2 x3 ) 6 =
(x1 x2 ). Boolean expression representing problem would
(x1 x2 ) (x2 x3 ) (x3 x1 ) (x1 x2 x3 ) (x1 x2 x3 ) (x1 x2 ).

(7)

objective Max-SAT problem would find configuration minimizing
number violated clauses.
2.4.1 Factor Graph Representation SAT Instances
SAT problem CNF easily represented joint distribution factor
graph. following definition, give possible definition joint distribution
Boolean configurations given SAT instance, Boolean variables take values
{1, +1}.
Definition 1. Given instance SAT problem, (X, C) conjunctive normal form,
X vector N Boolean variables. define energy, E(x), distribution, p(x), configurations SAT instance (Battaglia et al., 2004)
C, C (xV () ) =
E(x) =

1
(1 + J,i xi ),
2
iV ()

(8)

X

C (xV () ),

(9)

1
exp(E(x)),
Z

(10)



C

p(x) =

x {1, +1}N , J,i takes values {1, +1}. J,i = +1 (resp. 1),
contains Xi negative (resp. positive) literal. clause satisfied one
variables Xi takes value J,i . clause satisfied, C (xV () ) = 0. Otherwise
C (xV () ) = 1.
234

fiRelaxed Survey Propagation Weighted Max-SAT Problem

6

1

3

X1

2

X2

5

X3

4

Figure 2: factor graph SAT instance given Example 1. Dotted (resp. solid)
lines joining variable clause means variable negative (resp. positive)
literal clause.

definition, energy function zero satisfying configurations,
equals number violated clauses non-satisfying configuration. Hence, satisfying
configurations SAT instance MAP configurations factor graph.
section, make definitions useful rest paper.
clause containing variable Xi (associated value J,i ), say
Xi satisfies Xi = J,i . case, clause satisfied regardless values
taken variables. Conversely, say Xi violates Xi satisfy .
case, still possible satisfied variables.
Definition 2. clause C, define u,i (resp. s,i ) value Xi {1, +1}
violates (resp. satisfies) clause . means s,i = J,i u,i = +J,i .
define following sets
V + (i)
V (i)
Vs (i)
Vu (i)

=
=
=
=

{ V (i); s,i = +1},
{ V (i); s,i = 1},
{ V (i) \ {}; s,i = s,i },
{ V (i) \ {}; s,i 6= s,i }.

(11)

definitions, V + (i) (resp. V (i)) set clauses contain Xi
positive literal (resp. negative literal). Vs (i) (resp. Vu (i)) set clauses containing
Xi agrees (resp. disagrees) clause concerning Xi . sets useful
define SP message passing algorithms SAT instances.
factor graph representing Max-SAT instance given Example 1 shown
Figure 2. example, V + (1) = {3 , 5 , 6 }, V (1) = {1 , 4 }, Vs3 (1) = {5 , 6 },
Vu3 (1) = {1 , 4 }. energy example follows:
1
1
1
E(x) = (1 + x1 )(1 x2 ) + (1 + x2 )(1 x3 ) + (1 + x3 )(1 x1 ) +
4
4
4
1
1
1
(1 + x1 )(1 + x2 )(1 + x3 ) + (1 x1 )(1 x2 )(1 x3 ) + (1 x1 )(1 x2 ) (12)
8
8
4

235

fiChieu & Lee

2.4.2 Related Work SAT
SAT problem well studied computer science: archetypical NP-complete
problem, common reformulate NP-complete problems graph coloring
SAT problem (Prestwich, 2003). SAT solvers either complete incomplete.
best known complete solver solving SAT problem probably Davis-PutnamLogemann-Loveland (DPLL) algorithm (Davis & Putnam, 1960; Davis, Logemann, & Loveland, 1962). DPLL algorithm basic backtracking algorithm runs choosing
literal, assigning truth value it, simplifying formula recursively checking
simplified formula satisfiable; case, original formula satisfiable; otherwise, recursive check done assuming opposite truth value. Variants
DPLL algorithm Chaff (Moskewicz & Madigan, 2001), MiniSat (Een & Sorensson,
2005), RSAT (Pipatsrisawat & Darwiche, 2007) among best performers recent SAT competitions (Berre & Simon, 2003, 2005). Solvers satz (Li & Anbulagan,
1997) cnfs (Dubois & Dequen, 2001) making progress solving hard
random 3-SAT instances.
solvers participated recent SAT competitions complete solvers.
incomplete stochastic solvers show SAT instance unsatisfiable,
often able solve larger satisfiable instances complete solvers. Incomplete solvers
usually start randomly initialized configuration, different algorithms differ
way flip selected variables move towards solution. One disadvantage
approach hard SAT instances, large number variables flipped
move current configuration local minimum, acts local trap. Incomplete
solvers differ strategies used move configuration traps. example,
simulated annealing (Kirkpatrick, Jr., & Vecchi, 1983) allows search move uphill,
controlled temperature parameter. GSAT (Selman, Levesque, & Mitchell, 1992)
WalkSAT (Selman, Kautz, & Cohen, 1994) two algorithms developed 1990s
allow randomized moves solution cannot improved locally. two algorithms
differ way choose variables flip. GSAT makes change minimizes
number unsatisfied clauses new configuration, WalkSAT selects
variable that, flipped, results previously satisfied clauses becoming unsatisfied.
Variants algorithms WalkSAT GSAT use various strategies, tabusearch (McAllester, Selman, & Kautz, 1997) adapting noise parameter used,
help search local minima (Hoos, 2002). Another class approaches based
applying discrete Lagrangian methods SAT constrained optimization problem
(Shang & Wah, 1998). Lagrange mutlipliers used force lead search
local traps.
SP algorithm (Braunstein et al., 2005) shown beat best incomplete
solvers solving hard random 3-SAT instances efficiently. SP estimates marginals
variables chooses fix truth value. size instance
reduced removing variables, SP run remaining instance.
iterative process called decimation SP literature. shown empirically SP
rarely makes mistakes decimation, SP solves large 3-SAT instances
hard local search algorithms. Recently, Braunstein Zecchina (2006)
236

fiRelaxed Survey Propagation Weighted Max-SAT Problem

shown modifying BP SP updates reinforcement term, effectiveness
algorithms solvers improved.
2.5 Weighted Max-SAT Problem
weighted Max-SAT problem generalization Max-SAT problem,
clause assigned weight. define instance weighted Max-SAT problem
follows:
Definition 3. weighted Max-SAT instance (X, C, W) CNF consists X, vector
N variables taking values {1, +1}, C, set clauses, W, set weights
clause C. define energy weighted Max-SAT problem
E(x) =

w
(1 + J,i xi ),
2
C iV ()
X



(13)

x {1, +1}N , J,i takes values {1, +1}, w weight clause
. total energy, E(x), configuration x equals total weight violated clauses.
Similarly SAT, complete incomplete solvers weighted MaxSAT problem. Complete weighted Max-SAT solvers involve branch bound techniques
calculating bounds cost function. Larrosa Heras (2005) introduced framework
integrated branch bound techniques Max-DPLL algorithm solving
Max-SAT problem. Incomplete solvers generally employ heuristics similar
used SAT problems. example incomplete method min-conflicts hillclimbing random walks algorithm (Minton, Philips, Johnston, & Laird, 1992). Many
SAT solvers WalkSAT extended solve weighted Max-SAT problems,
weights used criterion selection variables flip.
working example paper, define following instance weighted
Max-SAT problem:
Example 2. define set weighted Max-SAT clauses following table:

Id
1
2
3
4
5
6

Clause
Weight
x1 x2
1
x2 x3
2
x3 x1
3
x1 x2 x3
4
x1 x2 x3
5
x1 x2
6
Energy

--3
3
3
3
5
5
1

--+
3
3
5
3
3
5
9

-+3
5
3
3
3
3
2

-++
3
3
5
3
3
3
3

+-5
3
3
3
3
3
1

+-+
5
3
3
3
3
3
1

++3
5
3
3
3
3
2

+++
3
3
3
5
3
3
4

weighted Max-SAT example variables clauses Max-SAT
example given Example 1. table, show clauses satisfied (a tick)
violated (a cross) 8 possible configurations 3 variables. first
237

fiChieu & Lee

row, symbol corresponds value 1, + corresponds +1. example,
string + corresponds configuration (X1 , X2 , X3 ) = (1, 1, +1). last row
table shows energy configuration column.
factor graph weighted Max-SAT example one
Max-SAT example Example 1. differences two examples
clause weights, reflected joint distribution, factor graph.
energy example follows:
1
2
3
E(x) = (1 + x1 )(1 x2 ) + (1 + x2 )(1 x3 ) + (1 + x3 )(1 x1 ) +
4
4
4
4
5
6
(1 + x1 )(1 + x2 )(1 + x3 ) + (1 x1 )(1 x2 )(1 x3 ) + (1 x1 )(1 x2 )(14)
8
8
4
2.6 Phase Transitions
SP algorithm shown work well 3-SAT instances near phase transition,
instances known hard solve. term phase transition arises
physics community. understand notion hardness optimization
problems, computer scientists physicists studying relationship
computational complexity computer science phase transitions statistical physics.
statistical physics, phenomenon phase transitions refers abrupt changes
one physical properties thermodynamic magnetic systems small
change value variable temperature. computer science,
observed random ensembles instances K-SAT, sharp
threshold randomly generated problems undergo abrupt change properties.
example, K-SAT, observed empirically clause variable ratio
changes, randomly generated instances change abruptly satisfiable unsatisfiable
particular value , often denoted c . Moreover, instances generated value
close c found extremely hard solve.
Computer scientists physicists worked bounding calculating precise value c phase transition 3-SAT occurs. Using cavity approach,
physicists claim c 4.267 (Mezard & Zecchina, 2002). derivation
value c non-rigorous, based derivation formulated SP
algorithm. Using rigorous mathematical approaches, upper bounds value c
derived using first-order methods. example, work Kirousis, Kranakis,
Krizanc, Stamatiou (1998), c 3-SAT upper bounded 4.571. Achlioptas,
Naor Peres (2005) lower-bounded value c using weighted second moments
method, lower bound close upper bounds K-SAT ensembles large
values K. However, lower bound 3-SAT 2.68, rather far conjectured
value 4.267. better (algorithmic) lower bound 3.52 obtained analyzing
behavior algorithms find SAT configurations (Kaporis, Kirousis, & Lalas, 2006).
Physicists shown rigorously using second moment methods approaches c , search space fractures dramatically, many small solution clusters
appearing relatively far apart (Mezard, Mora, & Zecchina, 2005). Clusters
solutions generally defined set connected components solution space,
two adjacent solutions Hamming distance 1 (differ one variable). Daude,
238

fiRelaxed Survey Propagation Weighted Max-SAT Problem

k

'

M'j

M''j
''

Mk

Mj

j



Mi



Ml
l

Figure 3: Illustration messages BP algorithm.
Mezard, Mora, Zecchina (2008) redefined notion clusters using concept
x-satisfiability: SAT instance x-satisfiable exists two solutions differing
N x variables, N total number variables. showed near phase
transition, x goes around 12 small values, without going phase
intermediate values. clustering phenomenon explains instances generated
close c extremely hard solve local search algorithm: difficult
local search algorithm move local minimum global minimum.

3. Belief Propagation Algorithm
BP algorithm reinvented different fields different names. example,
speech recognition community, BP algorithm known forward-backward
procedure (Rabiner & Juang, 1993). tree-structured factor graphs, BP algorithm
simply dynamic programming approach applied tree structure, shown
BP calculates marginals variable factor graph (i.e. solving Problem
2). loopy factor graphs, BP algorithm found provide reasonable
approximation solving marginal problem algorithm converges. case,
BP algorithm often called loopy BP algorithm. Yedidia, Freeman Weiss (2005)
shown fixed points loopy BP algorithm correspond stationary
points Bethe free energy, hence sensible approximate method estimaing
marginals.
section, first describe BP algorithm dynamic programming
method solving marginal problem (Problem 2) tree-structured factor graphs.
briefly describe BP algorithm applied factor graphs loops,
refer reader work Yedidia et al. (2005) underlying theoretical
justification case.
Given factor graph representing distribution p(x), BP algorithm involves iteratively passing messages factor nodes F variable nodes V , vice versa.
factor node represents factor , factor joint distribution given
Equation 1. Figure 3, give illustration messages passed
factor nodes variable nodes. Greek alphabet (e.g. F ) square represents
factor (e.g. ) Roman alphabet (e.g. V ) circle represents variable
(e.g. Xi ).
factor variable messages (e.g. Mi ), variable factor messages (e.g.
Mi ) vectors real numbers, length equal cardinality variable Xi .
239

fiChieu & Lee

denote Mi (xi ) Mi (xi ) component vector corresponding
value Xi = xi .
message update equations follows:


Mj (xj ) =

0 V

(15)

(j)\

X

Mi (xi ) =

0 j (xj )
(xV () )

xV () \xi



Mj (xj ),

(16)

jV ()\i

P

xV () \xi means summing configurations XV () Xi set xi .
tree-structured factor graph, message updates scheduled
two parses tree structure, messages converge. messages converge,
beliefs variable node calculated follows:


Bj (xj ) =

Mj (xj ).

(17)

V (j)

tree-structured graph, normalized beliefs variable equal
marginals.
INPUT: joint distribution p(x) defined tree-structured factor graph ({V, F }, E),
variable Xi X.
OUTPUT: Exact marginals variable Xi .
ALGORITHM :
1. Organize tree Xi root tree.
2. Start leaves, propagate messages child nodes parent nodes
right root Xi Equations 15 16.
3. marginals Xi obtained normalized beliefs Equation 17.

Figure 4: BP algorithm calculating marginal single variable, Xi ,
tree-structured factor graph

algorithm calculating exact marginals given variable Xi , given
Figure 4. algorithm simply dynamic programming procedure calculating
marginals, pi (Xi ), organizing sums sums leaves done first.
simple example Figure 1, calculating p1 (x1 ), sum ordered follows:
p1 (x1 ) =

X

p(x)

x2 ,x3 ,x4

= (x1 , x2 )

X X

.

x2

x3

240

0 (x1 , x3 )

X
x4

00 (x2 , x4 )

fiRelaxed Survey Propagation Weighted Max-SAT Problem

BP algorithm simply carries sum using node X1 root
tree-structured factor graph Figure 1.
BP algorithm used calculating marginals variables efficiently,
message passing schedule given Figure 5. schedule involves selecting
random variable node root tree, passing messages leaves
root, back leaves, two parses, message updates
required algorithm Figure 4 one variable would performed,
beliefs variables calculated messages. normalized beliefs
variable equal marginals variable.

INPUT: joint distribution p(x) defined tree-structured factor graph (V, F ).
OUTPUT: Exact marginals variables V .
ALGORITHM :
1. Randomly select variable root.
2. Upward pass: starting leaves, propagate messages leaves right
tree.
3. Downward pass: root, propagate messages back leaves.
4. Calculate beliefs variables given Equation 17.

Figure 5: BP algorithm calculating marginals variables treestructured factor graph

factor graph tree-structured (i.e. contains loops), message updates
cannot scheduled simple way described algorithm Figure 5. case,
still apply BP iteratively updating messages Equations 15 16, often
round-robin manner factor-variable pairs. done messages
converge (i.e. messages change iterations). guarantee
messages converge general factor graphs. However, converge,
observed beliefs calculated Equation 17 often good approximation
exact beliefs joint distribution (Murphy, Weiss, & Jordan, 1999).
applied manner, BP algorithm often called loopy BP algorithm. Recently,
Yedidia, Freeman Weiss (2001, 2005) shown loopy BP underlying
variational principle. showed fixed points BP algorithm correspond
stationary points Bethe free energy. fact serves sense justify
BP algorithm even factor graph operates loops, minimizing
Bethe free energy sensible approximation procedure solving marginal problem.
refer reader work Yedidia et al. (2005) details.
241

fiChieu & Lee

4. Survey Propagation: SP SP-y Algorithms
Recently, SP algorithm (Braunstein et al., 2005) shown beat best
incomplete solvers solving hard 3-SAT instances efficiently. SP algorithm first
derived principles statistical physics, explained using cavity approach
(Mezard & Parisi, 2003). first given BP interpretation work Braunstein
Zecchina (2004). section, define SP SP-y algorithms
solving SAT Max-SAT problems, using warning propagation interpretation
algorithms.
4.1 SP Algorithm SAT Problem
Section 2.4.1, defined joint distribution SAT problem (X, C),
energy function configuration equal number violated clauses configuration. factor graph ({V, F }, E) representing joint distribution, variable
nodes V correspond Boolean variables X, factor node F represents
clause C. section, provide intuitive overview SP algorithm
formulated work Braunstein et al. (2005).
SP algorithm defined message passing algorithm factor graph
({V, F }, E). factor F passes single real number, neighboring variable
Xi factor graph. real number called survey. According warning
propagation interpretation given work Braunstein et al. (2005), survey
corresponds probability1 warning factor sending variable
Xi . Intuitively, close 1, factor warning variable Xi
taking value violate clause . close 0, factor
indifferent value taken Xi , clause satisfied
variables V ().
first define messages sent variable Xj neighboring factor ,
function inputs factors containing Xj , i.e. { 0 j } 0 V (j)\ . SP,
message vector three numbers, uj , sj , 0j , following
interpretations:
uj probability Xj warned (by clauses) take value violate
clause .
sj probability Xj warned (by clauses) take value satisfy
clause .
0
j probability Xj free take value.
defintions, update equations follows:
uj = [1
sj = [1



(1 0 j )]



(1 0 j ),

0 Vu (j)

0 Vs (j)





(1 0 j )]

0 Vs (j)

(1 0 j ),

(18)
(19)

0 Vu (j)

1. SP reasons clusters solutions, probability warning section used loosely
SP literature refer fraction clusters warning applies. next section,
define rigorous probability distribution covers RSP algorithm.

242

fiRelaxed Survey Propagation Weighted Max-SAT Problem

0j =



(1 0 j ),

(20)

0 V (j)

=



uj

jV ()i

uj + sj + 0j

(21)

equations defined using sets factors Vu (j) Vs (j),
defined Section 2.4.1. event variable Xj warned take value
violating , (a) warned least one factor 0 Vu (j) take satisfying
value 0 , (b) factors Vs (j) sending warnings. Equation
18, probability event, uj , product two terms, first corresponding
event (a) second event (b). definitions sj 0j defined
similar manner. Equation 21, final survey simply probability joint
event incoming variables Xj violating clause , forcing last variable Xi
satisfy .
SP algorithm consists iteratively running update equations
surveys converge. surveys converged, calculate local biases follows:
= [1
+
j



(1 0 j )]


V

0j

=



(1 j ),

(22)

V (j)

V + (j)

= [1
+
j



(1 0 j )]

(j)


V

(1 j ),

(1 j ),

(23)

+ (j)

(24)

V (j)

Wi+ =
Wi =

+
j

(25)


0
+
j + j + j


j

(26)


0
+
j + j + j

solve instances SAT problem, SP algorithm run converges,
variables highly constrained set preferred values. SAT
instance reduced smaller instance, SP run smaller
instance. continues SP fails set variables, case, local
search algorithm WalkSAT run remaining instance. algorithm, called
survey inspired decimation algorithm (Braunstein et al., 2005), given algorithm
Figure 6.
4.2 SP-y Algorithm
contrast SP algorithm, SP-y algorithms objective solve Max-SAT instances, hence clauses allowed violated, price. SP algorithm
understood special case SP-y algorithm, taken infinity (Battaglia
et al., 2004). SP-y, penalty value exp(2y) multiplied distribution
violated clause. Hence, although message passing algorithm allows violation
clauses, value increases, surveys prefer configurations violate
minimal number clauses.
243

fiChieu & Lee

INPUT: SAT problem, constant k.
OUTPUT: satisfying configuration, report FAILURE.
ALGORITHM :
1. Randomly initialize surveys.
2. Iteratively update surveys using Equations 18 21.
3. SP converge, go step 7.
4. SP converges, calculate Wi+ Wi using Equations 25 26.
5. Decimation: sort variables based absolute difference |Wi+ Wi |,
set top k variables preferred value. Simplify instance
variables removed.
6. surveys equal zero, (no variables removed step 5), output
simplified SAT instance. Otherwise, go back first step smaller
instance.
7. Run WalkSAT remaining simplified instance, output satisfying
configuration WalkSAT succeeds. Otherwise output FAILURE.

Figure 6: survey inspired decimation (SID) algorithm solving SAT problem
(Braunstein et al., 2005)

SP-y algorithm still understood message passing algorithm factor
graphs. SP, factor, , passes survey, , neighboring variable Xi ,
+
corresponding probability warning. simplify notations, define

(resp.
) probability warning taking value +1 (resp. 1),
+

0
define
= 1

. practice, since clause warn
J

J

,i
+

either +1 1 both, either

equals zero:
= , i,i = 0,
J,i defined Definition 1.
Since clauses violated, insufficient simply keep track whether variable
warned value not. necessary keep track many
times variable warned value, know many clauses
+

violated variable take particular value. Let Hj
(resp. Hj
)
0
number times variable Xj warned factors { } 0 V (j)\ value
+
+1 (resp. 1). SP-y, variable Xj forced take value +1 Hj


+
smaller Hj , penalty case exp(2yHj ). notations used
+

work Battaglia et al. (2004) describing SP-y, let hj = Hj
Hj
.
Battaglia et al. (2004) defined SP-y message passing equations calculate
probability distribution hj , based input surveys,

{ 0 j } 0 V (j)\ = {1 j , 2 j , ..., (|V (j)|1) j },
244

(27)

fiRelaxed Survey Propagation Weighted Max-SAT Problem

|V (j)| refers cardinality set V (j). unnormalized distributions
Pej (h) calculated follows:
(1)

Pej (h) = 01 (h) + +1 (h 1) + 1 (h + 1), (28)
[2, |V (j)| 1],

()

(1)

Pej (h) = 0 Pej (h)
(1)

++ Pej (h 1) exp [2y(h)]
(1)

+ Pej (h + 1) exp [2y(h)],
(|V (j)|1)

Pej (h) = Pej

(h),

(29)
(30)

(h) = 1 h = 0, zero otherwise, (h) = 1 h 0, zero otherwise.
equations take account neighbor j excluding , = 1
= |V (j)|1. penalties exp(2y) multiplied every time value hj decreases
absolute value, new neighbor Xj , , added. end procedure,
+

equivalent multiplying messages factor exp(2ymin(Hj
, Hj
)).
Pej (h) normalized Pj (h) computing Pej (h) possible
values h [|V (j)| + 1, |V (j)| 1]. message updates surveys follows:
|V (j)|1
+
Wj
=

X

Pj (h),

h=1
1
X


Wj
=

Pj (h),

(31)
(32)

h=|V (j)|+1
J

i,i

= 0,

J

,i

=

(33)
J



,j
Wj
,

(34)

jV (j)\i
J

,i
0

= 1
,

(35)

+

quantity Wj
(resp. Wj
) probability events warning value
+1 (resp. 1). Equation 34 reflects fact warning sent variable
Xi variables warning going violate .
SP-y converges, preference variable calculated follows:

|V (j)|

Wj+ =
Wj =

X

Pj (h),

h=1
1
X

Pj (h),

(36)
(37)

h=|V (j)|

Pj (h) calculated similar manner Pj (h), except
exclude calculations.
definitions message updates, SP-y algorithm used
solve Max-SAT instances survey inspired decimation algorithm similar one
245

fiChieu & Lee

SP given algorithm Figure 6. iteration decimation process, SP-y
decimation procedure selects variables fix preferred values based quantity
bf ix (j) = |Wj+ Wj |

(38)

work Battaglia et al. (2004), additional backtracking process introduced make decimation process robust. backtracking process allows
decimation procedure unfix variables already fixed values. variable Xj
fixed value xj , following quantities calculated:
bbacktrack (j) = xj (Wj+ Wj )

(39)

Variables ranked according quantity top variables chosen
unfixed. algorithm Figure 7, show backtracking decimation algorithm
SP-y (Battaglia et al., 2004), value either given input,
determined empirically.
INPUT: Max-SAT instance constant k. Optional input: yin backtracking
probability r.
OUTPUT: configuration.
ALGORITHM :
1. Randomly initialize surveys.
2. yin given, set = yin . Otherwise, determine value bisection
method.
3. Run SP-y convergence. SP-y converges, variable Xi , extract
random number q [0, 1].
(a) q > r, sort variables according Equation 38 fix top k
biased variables.
(b) q < r sort variables according Equation 39 unfix top k
biased variables.
4. Simplify instance based step (3). SP-y converged return nonparamagnetic solution (a paramagnetic solution refers set {bf ix (j)}jV
biased value variables), go step (1).
5. Run weighted WalkSAT remaining instance outputs best configuration found.

Figure 7: survey inspired decimation (SID) algorithm solving Max-SAT instance
(Battaglia et al., 2004)

246

fiRelaxed Survey Propagation Weighted Max-SAT Problem

5. Relaxed Survey Propagation
shown (Maneva et al., 2004; Braunstein & Zecchina, 2004) SP SAT
problem reformulated BP algorithm extended factor graph. However,
formulation cannot generalized explain SP-y algorithm applicable
Max-SAT problems. previous paper (Chieu & Lee, 2008), extended formulation
work Maneva et al. (2004) address Max-SAT problem. section,
modify formulation previous paper (Chieu & Lee, 2008) address
weighted Max-SAT problem, setting extended factor graph run BP
algorithm. Theorem 3, show formulation generalizes BP interpretation
SP given work Maneva et al. (2004), main theorem (Theorem 2),
show running loopy BP algorithm factor graph estimates marginals
covers configurations violating set clauses minimal total weight.
first define concept covers Section 5.1, defining extended
factor graph Section 5.2. rest section, given weighted Max-SAT problem
(X, C, W), assume variables X take values {1, +1, }: third value
dont care state, corresponding no-warning message SP algorithm defined
Section 4.
5.1 Covers Weighted Max-SAT
First, need define semantics value dont care state.
Definition 4. (Maneva et al., 2004) Given configuration x, say variable Xi
unique satisfying variable clause C assigned s,i whereas
variables Xj clause assigned u,j (see Definition 2 definitions s,i
u,i ). variable Xi said constrained clause unique satisfying
variable . variable unconstrained constrained clauses. Define
CONi, (x ) = Ind(xi constrained ),

(40)

Ind(P ) equals 1 predicate P true, 0 otherwise.
illustration, consider configuration X = (+1, 1, 1) Example 2.
configuration, X1 = +1 constrained clauses 5 6 , X2 = 1 constrained
2 , X3 = 1 unconstrained: flipping X3 +1 violate additional
clauses configuration.
following definition, redefine configuration taking values {1, +1, }
satisfies violates clauses.
Definition 5. configuration satisfies clause (i) contains variable Xi
set value s,i , (ii) least two variables take value . configuration
violates clause variables Xj set u,j . configuration x invalid
clause exactly one variables set ,
remaining variables set u,i . configuration valid valid clauses
C.
definition invalid configurations reflects interpretation value
dont care state: clauses containing variable Xi = already satisfied
247

fiChieu & Lee

variables, value Xi matter. Xi = cannot last remaining
possibility satisfying clause. case clause contains two variables set
, clause satisfied either one two variables, variable
take dont care value.
define partial order set valid configurations follows (Maneva et al.,
2004):
Definition 6. Let x two valid configurations. write x i, (1) xi = yi
(2) xi = yi 6= .
partial order defines lattice, Maneva et al. (2004) showed SP
peeling procedure peels satisfying configuration minimal element
lattice. cover minimal element lattice. SAT region, cover
defined follows (Kroc, Sabharwal, & Selman, 2007):
Definition 7. cover valid configuration x {1, +1, }N satisfies clauses,
unconstrained variables assigned -1 +1.
SP algorithm shown return marginals covers (Maneva et al., 2004).
principle, two kinds covers: true covers correspond satisfying
configurations, false covers not. Kroc et al. (2007) showed empirically
number false covers negligible SAT instances. RSP apply weighted
Max-SAT instances, introduce notion v-cover:
Definition 8. v-cover valid configuration x {1, +1, }N
1. total weight clauses violated configuration equals v,
2. x unconstrained variables assigned -1 +1.
Hence covers defined Definition 7 simply v-covers v = 0 (i.e. 0-covers).
5.2 Extended Factor Graph
section, define joint distribution extended factor graph
positive v-covers. First, need define functions used
define factors extended factor graph.
Definition 9. clause, C, following function assigns different values
configurations satisfy, violate invalid (see Definition 5) :

VAL (xV () ) =



1

exp(w y)

0

xV () satisfies
xV () violates
xV () invalid

(41)

definition, introduced parameter RSP algorithm, plays
similar role SP-y algorithm. term exp(w y) penalty
violating clause weight w .
248

fiRelaxed Survey Propagation Weighted Max-SAT Problem

Definition 10. (Maneva et al., 2004) Given configuration x, define parent set
Pi (x) variable Xi set clauses Xi = xi unique satisfying
variable configuration x, (i.e. set clauses constraining Xi value). Formally,
Pi (x) = { C| CONi, (xV() ) = 1}

(42)

Example 2, configuration x = (+1, 1, 1), parent sets P1 (x) =
{5 , 6 }, P2 (x) = {2 }, P3 (x) = .
Given weighted Max-SAT instance (X, C, W) factor graph, G = ({V, F }, E),
construct another distribution associated factor graph Gs = ({V, Fs }, Es )
follows. V , let P (i) set possible parent sets variable Xi . Due
restrictions imposed definition, Pi (x) must contained either V + (i)
+

V (i), both. Therefore, cardinality P (i) 2|V (i)| +2|V (i)| 1. extended
factor graph defined set variables = (1 , 2 , ..., n ) X1 X2 ... Xn ,
Xi := {1, +1, } P (i). Hence factor graph number variables
original SAT instance, variable large cardinality. Given configurations
x SAT instance, denote configurations (x) = {i (x)}iV , (x) =
(xi , Pi (x)).
definitions given far define semantics valid configurations parent sets,
rest section, define factors extended factor graph Gs
ensure definitions satisfied configurations .
single variable compatibilities (i ) defined following factor
variable (x):
(i (x) = {xi , Pi (x)}) =



0

1


1

Pi (x) = , xi 6=
Pi (x) = , xi =
.
valid (xi , Pi (x))

(43)

first case definition Pi (x) = xi 6= corresponds case
variable Xi unconstrained, yet takes value {1, +1}. Valid configurations
v-covers (with unconstrained variables set 1 +1) zero value
factor. Hence v-covers positive value factors. last
case definition, validity (xi , Pi (x)) simply means xi = +1 (resp.
xi = 1), Pi (x) V + (i) (resp. Pi (x) V (i).).
clause compatibilities ( ) are:
((x)V () ) = VAL (xV() )

Q





kV () Ind [ Pk (x)] = CON,k (xV () ) ,

(44)

Ind defined Definition 4. clause compatibilities introduce penalties
VAL (xV () ) joint distribution. second term equation enforces
parent sets Pk (x) consistent definitions parent sets Definition 10
variable Xk clause .
values x determines uniquely values P = {Pi (x)}iV , hence
distribution (x) = {xi , Pi (x)}iV simply distribution x.
Theorem 1. Using notation UNSAT(x) represent set clauses violated
x, underlying distribution p() factor graph defined section positive
249

fiChieu & Lee

'6

'1

'1

'3

1

'2

2

'5

'2

3

'3

'4

Figure 8: extended factor graph SAT instance given Example 1. factor
nodes i0 correspond clause compatibility factors , single variable
factor nodes i0 represents single variable compatibility factors . factor
graph similar original factor graph SAT instance Figure 2, except
additional factor nodes i0 .

v-covers, v-cover x, have:
p(X = x) = p( = (x))



exp(w y),

(45)

UNSAT(x)

Proof. Configurations v-covers either invalid contains unconstrained
variables set 1 +1. invalid configurations, distribution zero
definition VAL , configurations unconstrained variables set 1 +1,
distribution zero due definition factors . v-cover, total
penalty violated clauses product term Equation 45.
definition defines joint distribution factor graph. RSP algorithm
message passing algorithm defined factor graph:
Definition 11. RSP algorithm defined loopy BP algorithm applied
extended factor graph Gs associated MaxSAT instance (X, C, W).
Section 6, formulate message passing updates RSP, well
decimation algorithm using RSP solver weighted Max-SAT instances.
example, Figure 8 shows extended factor graph weighted Max-SAT instance
defined Example 1.
Definition 12. define min-cover weighted Max-SAT instance m-cover,
minimum total weight violated clauses instance.
Theorem 2. taken , RSP estimates marginals min-covers
following sense: stationary points RSP algorithm correspond stationary
points Bethe free energy distribution uniform min-covers.
250

fiRelaxed Survey Propagation Weighted Max-SAT Problem

-1,-1,-1

Energy = 11

-1,-1,+1

Energy = 9

+1,+1,+1

Energy = 4

-1,+1,+1

Energy = 3
-1,+1,-1

+1,-1,-1

+1,-1,+1

+1,+1,-1
*,+1,-1

+1,-1,*

Energy = 2

Energy = 1

Figure 9: Energy landscape weighted Max-SAT instance given Example 2.
node represents configuration variables (x1 , x2 , x3 ). example,
node (1, +1, 1) represents configuration (x1 , x2 , x3 ) = (1, +1, 1).

Proof. ratio probability v-cover (v + )-cover equals exp(y).
taken , distribution Equation 45 positive min-covers.
Hence RSP, loopy BP algorithm factor graph representing Equation 45,
estimates marginals min-covers.
application RSP weighted Max-SAT instances, taking would often
cause RSP algorithm fail converge. Taking sufficiently large value often
sufficient RSP used solve weighted Max-SAT instances.
Figure 9, show v-covers small weighted Max-SAT example Example 2.
example, unique min-cover X1 = +1, X2 = 1, X3 = .
Maneva et al. (2004) formulated SP- algorithm, equivalent SP
algorithm (Braunstein et al., 2005) = 1. SP- algorithm loopy BP algorithm
extended factor graph defined work Maneva et al. (2004). Comparing
definitions extended factor graph factors RSP SP-, (Chieu &
Lee, 2008):
Theorem 3. taking , RSP equivalent SP- = 1.
Proof. definitions joint distribution SP- = 1 (Maneva et al., 2004),
RSP paper differ Definition 9, RSP,
definitions become identical. Since SP- RSP equivalent loopy BP
distribution defined extended factor graphs, equivalence joint
distribution means algorithms equivalent.
Taking infinity corresponds disallowing violated clauses, SP- formulated
satisfiable SAT instances, clauses must satisfied. SP-, clause weights
inconsequential clauses satisfied.
paper, disallow unconstrained variables take value . Appendix
A, give alternative definition single variable potentials Equation 43.
251

fiChieu & Lee

definition, Maneva et al. (2004) defines smoothing interpretation SP-.
smoothing applied RSP. See Theorem 6 work Maneva et al. (2004)
Appendix details.
5.3 Importance Convergence
found message passing algorithms BP SP algorithms perform
well whenever converge (e.g., see Kroc, Sabharwal, & Selman, 2009). success
RSP algorithm random ensembles Max-SAT weighted Max-SAT instances
believed due clustering phenomenon problems, found
RSP could successful cases clustering phenomenon observed.
believe presence large clusters help SP algorithm converge well,
long SP algorithm converges, presence clusters necessary good
performance.
covers simply Boolean configurations (with variables taking value),
represent singleton clusters. call covers degenerate covers. many structured
non random weighted Max-SAT problems, found covers found
often degenerate. previous paper (Chieu, Lee, & Teh, 2008), defined modified
version RSP energy minimization factor graphs, show Lemma 2
paper configurations * zero probability, i.e. covers degenerate.
paper, showed value tuned favor convergence
RSP algorithm.
Section 7.3, show success RSP benchmark Max-SAT instances.
trying recover covers configurations found RSP, found
benchmark instances used degenerate covers. fact RSP converged
instances sufficient RSP outperform local search algorithms.

6. Using RSP Solving Weighted Max-SAT Problem
previous section, defined RSP algorithm Definition 11 loopy BP
algorithm extended factor graph. section, derive RSP message
passing algorithm based definition, giving decimation-based algorithm
used solving weighted Max-SAT instances.
6.1 Message Passing Algorithm
variables extended factor graphs longer Boolean. form
(x) = (xi , Pi (x)), large cardinalities. definition BP algorithm,
stated message vector passed factors variables length
equal cardinality variables. section, show messages passed
RSP grouped groups, message passed variables
factors three values.
RSP, factor variable messages grouped follows:

Mi
xi = s,i , Pi (x) = {}, Vs (i),
(all cases variable xi constrained clause ),

252

fiRelaxed Survey Propagation Weighted Max-SAT Problem

u
Mi
xi = u,i , Pi (x) Vu (i),
(all cases variable xi constrained u,i clauses),

Mi
xi = s,i , Pi (x) Vs (i),
(all cases variable xi = s,i constrained . least one
variable xj satisfies equals . Otherwise xi constrained),

Mi
xi = , Pi (x) = .

last two messages always equal:



Mi
= Mi
= Mi
.

equality due fact factor constraining variables,
matter whether variable satisfying , long least two
variables either satisfying . following, consider two equal
.
messages single message, Mi
variable factor messages grouped follows:

:=
Ri
SVs (i) Mia (s,i , {}),
Variable xi constrained s,i ,

P

u
Ri
:=
Pi (x)Vu (i) Mia (u,i , Pi (x)),
Variable xi constrained clauses u,i ,

P

:=
Ri
Pi (x)Vs (i) Mia (s,i , Pi (x)),
Variable xi constrained , constrained clauses s,i ,

P

:=
Ri
(, ),
Variable xi unconstrained equals *.

last two messages grouped one message (as done previous
paper, Chieu & Lee, 2008) follows,



Ri
= Ri
+ Ri
,

since calculating updates Mj messages Ri messages, Ri
required. update equations RSP weighted Max-SAT given Figure 10.
update equations derived based loopy BP updates Equations 15 16
Section 3. worst case densely connected factor graph, iteration updates
performed O(M N ) time, N number variables, number
clauses.

6.1.1 Factor Variable Messages
begin update equations messages factors variables, given

Equations 46, 47 48. message Mi
groups cases Xi constrained
253

fiChieu & Lee




Mi
=

u
Rj

(46)

jV ()\{i}






u
Mi
=

u

(Rj
+ Rj
)+

jV ()\{i}
w

+(e

Mi
=





(Rk
Rk
)

kV ()\{i}



u

Rj

jV ()\{i,k}



u
1)
Rj
jV ()\{i}

u

(Rj
+ Rj
)



X

jV ()\{i}

(47)


u
Rj

(48)

jV ()\{i}




Ri
=





u


Mi
(Mi
+ Mi
)



Vu (i)

(49)

Vs (i)


u
Ri
=






(Mi
+ Mi
)



Vs (i)

u
Mi


Vu (i)




Mi


Vau (i)



Ri
=


Vu (i)

+

(50)







u


Mi
(Mi
+ Mi
)

Vs (i)


Mi




Vs (i)


Mi



(51)

Vs (i)Vu (i)



Bi (1)


V




u

Mi

+ (i)

V



(Mi
+ Mi
)

(i)


V

Bi (+1)

V

Bi ()

u

Mi

(i)



(52)

(i)





Mi




V



(Mi
+ Mi
)

+ (i)


Mi


V


Mi

(53)

+ (i)

(54)

V (i)

Figure 10: update equations RSP. equations BP equations factor
graph defined text.

254

fiRelaxed Survey Propagation Weighted Max-SAT Problem

factor . means variables violating factor , hence
Equation 46



Mi
=

u
Rj
,

jV ()\{i}
u
Rj
messages neighbors stating violate .
u
next equation Mi
states variable Xi violating . case,
variables possible cases

1. Two variables satisfying , message update


u

(Rj
+ Rj
)

jV ()\{i}


Rk

X



kV ()\{i}

u
Rj


jV ()\{i,k}



u
Rj
.

jV ()\{i}

2. Exactly one variable V ()\{i} constrained , variables violating
, message update
X




Rk

u
Rj

jV ()\{i,k}

kV ()\{i}

3. variables violating , case, penalty factor
exp(w y), message update


exp(w y)

u
Rj

jV ()\{i}

sum three cases result Equation 48.

third update equation Mi
case variable Xi uncons ) (for ). means
strained , satisfying s,i (for case Mi

least one satisfying variable unconstrained , message
update


u

(Rj
+ Rj
)

jV ()\{i}



u
Rj

jV ()\{i}

6.1.2 Variable Factor Messages

consists case variable Xi constrained
first message Ri
factor , means satisfies neighboring factors Vs (i), violates factors
Vu (i), probability



Vu (i)



u
Mi





(Mi
+ Mi
) .



Vs (i)

u
second message Ri
case Xi violates . case, variables
u
V (i) satisfied, clauses Vs (i) violated. case, variable Xi must

255

fiChieu & Lee

constrained one clauses Vu (i). Hence message update


Vs (i)





u


Mi
(Mi
+ Mi
)

Vu (i)

Vu (i)


Mi






. message
third message Ri
sum two messages Ri
Ri
variable Xi satisfies constrained , must constrained
factors:

,
Ri








Vu (i)

u
Mi




(Mi
+ Mi
)

Vs (i)



Vs (i)


Mi




, case X = , :
second part message, Ri


Mi
,


Vs (i)Vu (i)

sum two equations results Equation 51.
6.1.3 Beliefs
beliefs calculated factor variable messages algorithm converges, obtain estimates marginals min-covers. calculation beliefs
similar calculation variable factor messages.
belief Bi (1) belief variable Xi taking value 1. case
variable Xi satisfies clauses V (i), violates clauses V + (i). case,
Xi must constrained one factors V (i). Hence belief follows:


V + (i)

u

Mi






(Mi
+ Mi
)

V (i)




Mi
.

V (i)

calculation belief Bi (+1) similar Bi (1). belief Bi () case
Xi = , hence calculated follows:



Mi
.

V ( i)

6.2 Comparing RSP SP-y Message Passing Algorithms
message passing algorithms RSP SP-y share many similarities. algorithms
1. include multiplicative penalty distribution violated clause.
2. contain mechanism dont care state. SP-y, occurs variable
receives warnings neighboring factors.
However, number significant differences two algorithms.
256

fiRelaxed Survey Propagation Weighted Max-SAT Problem

1. RSP, penalties imposed factor passes message variable.
SP-y, penalties imposed variable compiles incoming warnings,
decides many factors going violate.
2. Importantly, RSP, variables participating violated clauses never take *
value. SP-y, variable receiving equal number warnings set
+
factors { 0 } 0 V (i)\ taking +1 1 value (i.e. hj = Hj


Hj = 0) decide pass message warning . Hence SP-y,
possible variables violated clauses take dont care state.
3. work Battaglia et al. (2004) SP-y formulated cavity
approach, found optimal value given Max-SAT problem
=
e , complexity statistical physics, e energy density
(Mezard & Zecchina, 2002). stated finite value energy
Max-SAT problem zero. Theorem 2, show RSP,
large possible underlying distribution min-covers.
experimental results Figure 12, showed indeed true RSP, long
converges.

INPUT: (weighted) Max-SAT instance, constant k, yin
OUTPUT: configuration.
ALGORITHM :
1. Randomly initialize surveys set = yin .
2. Run RSP y. RSP converges, sort variables according quantities
bi = |P (xi = +1) P (xi = 1)|, fix top k variables preferred
values, subject condition bi > 0.5.
3. (For weighted Max-SAT) RSP fails converge, adjust value y.
4. RSP converges least one variable set, go back step (1) simplified instance. Otherwise, run (weighted) WalkSAT solver simplified
instance output configuration found.
Figure 11: decimation algorithm RSP solving (weighted) Max-SAT instance

6.3 Decimation Algorithm
decimation algorithm shown Figure 11. algorithm used
experiments described Section 7. comparing RSP SP-y random Max-SAT
instances Section 7.1, run algorithms fixed yin , vary yin
range values. Comparing Figure 11 Figure 7 SP-y, condition used SPy check paramagnetic solution replaced condition given Step (2)
Figure 11. experimental results Section 7.1, used SP-y implementation
257

fiChieu & Lee

available online (Battaglia et al., 2004), contains mechanism backtracking
decimation decisions (see Figure 7). Section 7.1, RSP still outperforms SP-y despite
backtracking decisions. running RSP weighted Max-SAT, found
necessary adjust dynamically decimation process. details
experimental settings, please refer Section 7.

7. Experimental Results
run experiments random Max-3-SAT, random weighted Max-SAT, well
benchmark Max-SAT instances used work Lardeux, Saubion, Hao (2005).
#Viols

#Viols

Figure 12: Behaviour SP-y RSP varying values x-axis,
number violated clauses (#viols) y-axis. comparison performances RSP SP-y shown Table 1. objective showing
graphs figure show behavior RSP varying
consistent Theorem 2: long RSP converges, performance improves
increases. graph, RSP reaches plateau fails converge.This
property allows systematic search good value used.
behavior SP-y varying less consistent.
.

7.1 Random Max-3-SAT
run experiments randomly generated Max-3-SAT instances 104 variables,
different clause-to-variable ratios. random instances generated SP-y code
available online (Battaglia et al., 2004). Figure 12, compare SP-y RSP random
Max-3-SAT different clause-to-variable ratio, . vary 4.2 5.2 show
performance SP-y RSP UNSAT region 3-SAT, beyond phase transition
c 4.267. value , number violated clauses (y-axis) plotted
value used.
258

fiRelaxed Survey Propagation Weighted Max-SAT Problem

perform decimation procedure Figure 11 RSP, fixed value yin ,
decimating 100 variables time (i.e. k = 100). SP-y, run SP-y code available
line, option decimating 100 variables iteration, two different
settings: without backtracking (Battaglia et al., 2004). Backtracking procedure used SP-y improve performance, unfixing previously fixed variables rate
r = 0.2, errors made decimation process corrected. RSP,
run backtracking. Note formulation equals 2y formulation
work Battaglia et al. (Battaglia et al., 2004).
SP-y RSP fail converge becomes large enough. happens,
output algorithm result returned WalkSAT original instance.
Figure 12, see happening curve reaches horizontal line, signifying
algorithm returning configuration regardless (we seed randomized
WalkSAT results identical instances identical). Figure 12,
see RSP performs consistently SP-y: increases, performance RSP
improves, point RSP fails converge. Interestingly Max-3-SAT instances,
observed RSP converges value given instance, continue
converge value throughout decimation process. Hence, best value
RSP obtainable without going decimation process: commence
decimation largest value RSP converges. Table 1, show RSP
outperforms SP-y 4.7, despite fact allow backtracking RSP.
compare RSP SP-y local search solvers implemented UBCSAT
(Tompkins & Hoos, 2004). run 1000 iterations 20 Max-SAT solvers
UBCSAT, take best result among 20 solvers. results shown Table 1.
see local solvers UBCSAT worse RSP SP-y.
tried running complete solvers toolbar (de Givry, Heras, Zytnicki, & Larrosa,
2005) maxsatz (Li, Manya, & Planes, 2006). unable deal instances
size 104 .
7.2 Random Weighted Max-3-SAT
run experiments randomly generated weighted Max-3-SAT instances.
instances generated way instances Max-3-SAT, addition,
weights clause uniformly sampled integers set [1, ],
upper bound weights. show experimental results = 5 = 10
Figure 13. compare RSP 13 weighted Max-SAT solvers implemented
UBCSAT. RSP, run experiments initial set 10, whenever
algorithm fails converge, lower value 1, halve value
less 1 (see Figure 11). see RSP outperforms UBCSAT consistently
experiments Figure 13.
7.3 Benchmark Max-SAT Instances
compare RSP UBCSAT instances used work Lardeux et al. (2005),
instances used SAT 2003 competition. Among 27 instances, use
seven largest instances 7000 variables. run RSP two settings:
decimating either 10 100 variables time. run RSP increasing values y:
259

fiChieu & Lee

Table 1: Number violated clauses attained method. SP-y, SP-y (BT) (SPy backtracking), RSP, best result selected y. ,
show best performance bold face. column Fix shows number
variables fixed RSP optimal y, Time time taken RSP
(in minutes) fix variables, AMD Opteron 2.2GHz machine.

4.2
4.3
4.4
4.5
4.6
4.7
4.8
4.9
5.0
5.1
5.2

UBCSAT
47
68
95
128
140
185
232
251
278
311
358

SP-y
0
9
42
67
98
137
204
223
260
294
362

SP-y(BT)
0
7
31
67
89
130
189
211
224
280
349

RSP
0
10
36
65
90
122
172
193
218
267
325

Fix
7900
7200
8938
9024
9055
9287
9245
9208
9307
9294
9361

Time (minutes)
24
43
82
76
45
76
52
62
66
42
48

W-viol

W-viol





Figure 13: Experimental results weighted Max-SAT instances. x-axis shows
value , y-axis (W-viol) number violated clauses returned
algorithm.

y, RSP fixes number spins, stop increasing number spins
fixed decreases previous value y. UBCSAT, run 1000 iterations
20 solvers. Results shown Table 2. seven instances, RSP fails
fix spins first one, outperforms UBCSAT rest. Lardeux et al. (2005)
show best performances paper, average results order
magnitude higher results Table 2. Figure 12 shows finding good SP-y
hard. benchmark instances, run SP-y -Y option (Battaglia et al.,
2004) uses dichotomic search y: SP-y failed fix spins 7 instances.
260

fiRelaxed Survey Propagation Weighted Max-SAT Problem

Table 2: Benchmark Max-SAT instances. Columns: instance shows instance name
paper Lardeux et al. (2005), nvar number variables, ubcsat
rsp-x (x number decimations iteration) number violated
clauses returned algorithm, fx-x number spins fixed RSP.
Best results indicated bold face.
instance
fw
nc
nw
35-4-03
35-4-04
40-4-02
40-4-03

nvar ubcsat rsp-100 fx-100 rsp-10
family: purdom-10142772393204023
9366
83
357
0
357
8372
74
33
8339
35
8589
73
24
8562
28
family: pyhala-braun-unsat
7383
58
68
7295
44
7383
62
53
7302
41
9638
86
57
9547
65
9638
76
77
9521
41

fx-10
0
8316
8552
7299
7304
9521
9568

success SP family algorithms random ensembles SAT Max-SAT
problem usually due clustering phenomenon random ensembles.
benchmark instances random instances, attempted see configurations
found RSP indeed belong cover representing cluster solutions. Rather
disappointingly, found 6 solutions RSP outperformed local search
algorithms, variables solutions constrained least one clause. Hence,
v-covers found degenerate covers, i.e. covers contain variables set
. appears success RSP benchmark instances due
clustering phenomenon, simply RSP manages converge instances,
value y. Kroc, Sabharwal, Selman (2009) made similar observation:
convergence BP SP algorithms often sufficient obtaining good solution
given problem. discussed Section 5.3, ability vary improve convergence
useful feature RSP, one distinct ability exploit clustering
phenomenon.

8. Conclusion
recent work Max-SAT weighted Max-SAT tends focus complete
solvers, solvers unable handle large instances. Max-SAT competition
2007 (Argelich, Li, Manya, & Planes, 2007), largest Max-3-SAT instances used
70 variables. large instances, complete solvers still practical, local
search procedures feasible alternative. SP-y, generalizing SP,
shown able solve large Max-3-SAT instances phase transition, lacks
theoretical explanations recent work SP generated.
3-SAT, easy-hard-easy transition clause-to-variable ratio increases.
Max-3-SAT, however, shown empirically beyond phase transition
satisfiability, instances hard solve (Zhang, 2001). paper, show
261

fiChieu & Lee

RSP outperforms SP-y well local search algorithms Max-SAT weighted
Max-SAT instances, well beyond phase transition region.
RSP SP-y well Max-SAT instances near phase transition.
mechanisms behind SP-y RSP similar: algorithms impose penalty term
violated constraint, reduce SP . SP-y uses population
dynamics algorithm, seen warning propagation algorithm.
paper, formulated RSP algorithm BP algorithm extended factor
graph, enabling us understand RSP estimating marginals min-covers.

Acknowledgments
work supported part NUS ARF grant R-252-000-240-112.

Appendix A. Smoothing Interpretation RSP
definition SP- (Maneva et al., 2004), parameter introduced define
whole family algorithms. = 1, SP- algorithm corresponds SP algorithm,
= 0, SP- algorithm corresponds BP algorithm. section,
develop general version extended factor graph defined Section 5,
incorporates SP-. call corresponding RSP algorithm new
factor graph RSP- algorithm.
difference factor graph RSP- one Section 5
definition variable compatibilities Equation 43. Following notations work
Maneva et al. (2004), introduce parameters 0 , restrict
case 0 + = 1 (The SP- RSP- equal ). redefine
variable compatibilities follows

(i (x) = {xi , Pi (x)}) =



0





1

Pi (x) = , xi 6=
Pi (x) = , xi =
,
valid (xi , Pi (x))

(55)

0 + = 1. definition Equation 43 corresponds particular case
0 = 0 = 1. Section 5, defined factor graph unconstrained
variables must take value . new definition above, unconstrained variables allowed take values 1 +1 weight 0 , value
weight .
definition, joint distribution Equation 45 redefined follows:
n (x) n (x)
exp(w y).

UNSAT(x)

P (x) = P ({xk , Pk }k ) 0 0

(56)

n0 (x) number unconstrained variables x taking +1 1, n (x)
number unconstrained variables taking x.
Case = 1: studied case main paper: underlying distribution
distribution positive v-covers.
262

fiRelaxed Survey Propagation Weighted Max-SAT Problem

Case = 0: case, configurations x n (x) = 0 non-zero probability distribution given Equation 56. Hence, value forbidden,
variables take values 1, +1. Boolean configuration violating clauses total weight
W probability proportional exp(yW ). Hence retreive weighted Max-SAT
energy defined Equation 13. case, factor graph equivalent original
weighted Max-SAT factor graph defined Definition 3, hence RSP- equivalent
loopy BP algorithm original weighted Max-SAT problem.
Case 6= 1 6= 0: case, valid configurations x violating clauses
n (x) n (x)
total weight W probability proportional 0 0 exp(yW ). Hence,
probability v-covers case = 1 spread lattice
minimal element.
formulation, RSP- seen family algorithms include
BP RSP algorithm, moving BP RSP (or ) varies 0 1.

References
Achlioptas, D., Naor, A., & Peres, Y. (2005). Rigorous location phase transitions hard
optimization problems. Nature, 435 (7043), 759764.
Argelich, J., Li, C. M., Manya, F., & Planes, J. (2007). Second evaluation max-sat
solvers. SAT07: Tenth International Conference Theory Applications
Satisfiability Testing.
Battaglia, D., Kolar, M., & Zecchina, R. (2004). Minimizing energy glass thresholds. Physical Review E, 70.
Berre, D. L., & Simon, L. (2003). essentials SAT 2003 competition. SAT03:
Sixth International Conference Theory Applications Satisfiability Testing.
Berre, D. L., & Simon, L. (2005). Special volume SAT 2005 competitions
evaluations. Journal Satisfiability, Boolean Modeling Computation, 2.
Braunstein, A., Mezard, M., & Zecchina, R. (2005). Survey propagation: algorithm
satisfiability. Random Structures Algorithms, 27 (2).
Braunstein, A., & Zecchina, R. (2004). Survey propagation local equilibrium equations.
Journal Statistical Mechanics: Theory Experiment, 2004 (06).
Braunstein, A., & Zecchina, R. (2006). Learning message-passing networks discrete
synapses. Physical Review Letters, 96, 030201.
Chieu, H. L., & Lee, W. S. (2008). Relaxed survey propagation: sum-product algorithm
Max-SAT. AAAI08: Twenty-Third AAAI Conference Artificial Intelligence.
Chieu, H. L., Lee, W. S., & Teh, Y. W. (2008). Cooled relaxed survey propagation
MRFs. NIPS07: Advances Neural Information Processing Systems 20, Cambridge, MA. MIT Press.
Cook, S. A. (1971). complexity theorem-proving procedures. STOC 71: Third
annual ACM symposium Theory computing, pp. 151158, New York, NY, USA.
ACM.
263

fiChieu & Lee

Cooper, G. F. (1990). computational complexity probabilistic inference using
bayesian belief networks (research note). Artif. Intell., 42 (2-3), 393405.
Daude, H., Mezard, M., Mora, T., & Zecchina, R. (2008). Pairs sat-assignments random
boolean formul. Theor. Comput. Sci., 393 (1-3), 260279.
Davis, M., Logemann, G., & Loveland, D. (1962). machine program theorem-proving.
Commun. ACM, 5 (7), 394397.
Davis, M., & Putnam, H. (1960). computing procedure quantification theory. Journal
ACM (JACM), 7 (3), 201215.
de Givry, S., Heras, F., Zytnicki, M., & Larrosa, J. (2005). Existential arc consistency:
Getting closer full arc consistency weighted CSPs.. IJCAI05: Nineteenth
International Joint Conference Artificial Intelligence.
Dubois, O., & Dequen, G. (2001). backbone-search heuristic efficient solving hard 3SAT formulae. IJCAI05: Seventeenth International Joint Conference Artificial
Intelligence, pp. 248253.
Een, N., & Sorensson, N. (2005). MiniSat - SAT solver conflict-clause minimization.
SAT05: Eighth International Conference Theory Applications Satisfiability Testing.
Hoos, H. H. (2002). adaptive noise mechanism walksat. AAAI02: Eighteenth
National Conference Artificial Intelligence, pp. 655660.
Kaporis, A. C., Kirousis, L. M., & Lalas, E. G. (2006). probabilistic analysis greedy
satisfiability algorithm. Random Structures Algorithms, 28 (4), 444480.
Kirkpatrick, S., Jr., C. D. G., & Vecchi, M. P. (1983). Optimization simulated annealing.
Science, 220, 671680.
Kirousis, L. M., Kranakis, E., Krizanc, D., & Stamatiou, Y. C. (1998). Approximating
unsatisfiability threshold random formulas. Random Structures Algorithms,
12 (3), 253269.
Kroc, L., Sabharwal, A., & Selman, B. (2007). Survey propagation revisited. UAI07:
Twenty-Third Conference Uncertainty Artificial Intelligence.
Kroc, L., Sabharwal, A., & Selman, B. (2009). Message-passing local heuristics
decimation strategies satisfiability. SAC-09. 24th Annual ACM Symposium
Applied Computing.
Kschischang, F. R., Frey, B., & Loeliger, H.-A. (2001). Factor graphs sum-product
algorithm. IEEE Transactions Information Theory, 47 (2).
Lardeux, F., Saubion, F., & Hao, J.-K. (2005). Three truth values SAT MAXSAT problems. IJCAI05: Nineteenth International Joint Conference Artificial
Intelligence.
Larrosa, J., & Heras, F. (2005). Resolution Max-SAT relation local consistency weighted CSPs. IJCAI05: Nineteenth International Joint Conference
Artificial Intelligence.
Levin, L. A. (1973). Universal search problems. Problemy Peredaci Informacii, 9, 115116.
264

fiRelaxed Survey Propagation Weighted Max-SAT Problem

Li, C. M., & Anbulagan (1997). Heuristics based unit propagation satisfiability problems. IJCAI97: Fifteenth International Joint Conference Artificial Intelligence,
pp. 366371.
Li, C. M., Manya, F., & Planes, J. (2006). Detecting disjoint inconsistent subformulas
computing lower bounds max-sat. AAAI06: Twenty-First AAAI Conference
Artificial Intelligence.
Maneva, E., Mossel, E., & Wainwright, M. (2004). new look survey propagation
generalizations. http://arxiv.org/abs/cs.CC/0409012.
McAllester, D., Selman, B., & Kautz, H. (1997). Evidence invariants local search.
AAAI97: Proceedings Fourteenth National Conference Artificial Intelligence,
pp. 321326, Providence, Rhode Island.
Mezard, M., Mora, T., & Zecchina, R. (2005). Clustering solutions random satisfiability problem. Physical Review Letters, 94, 197205.
Mezard, M., & Parisi, G. (2003). cavity method zero temperature. Journal
Statistical Physics, 111.
Mezard, M., & Zecchina, R. (2002). random k-satisfiability problem: analytic
solution efficient algorithm. Physical Review E, 66.
Minton, S., Philips, A., Johnston, M. D., & Laird, P. (1992). Minimizing conflicts: heuristic
repair method constraint satisfaction scheduling problems. Artificial Intelligence, 58, 161205.
Moskewicz, M. W., & Madigan, C. F. (2001). Chaff: Engineering efficient SAT solver.
DAC01: Thirty-Ninth Design Automation Conference, pp. 530535.
Murphy, K., Weiss, Y., & Jordan, M. (1999). Loopy belief propagation approximate
inference: empirical study. UAI99: Fifteenth Annual Conference Uncertainty
Artificial Intelligence, pp. 46747, San Francisco, CA. Morgan Kaufmann.
Pearl, J. (1988). Probabilistic reasoning intelligent systems: networks plausible inference. Morgan Kaufmann Publishers Inc., San Francisco, CA, USA.
Pipatsrisawat, K., & Darwiche, A. (2007). Rsat 2.0: Sat solver description. Tech. rep.,
Automated Reasoning Group, Computer Science Department, UCLA.
Prestwich, S. D. (2003). Local search sat-encoded colouring problems.. Giunchiglia,
E., & Tacchella, A. (Eds.), SAT, Vol. 2919 Lecture Notes Computer Science, pp.
105119. Springer.
Rabiner, L., & Juang, B. (1993). Fundamentals Speech Recognition. Prentice-Hall.
Selman, B., Kautz, H. A., & Cohen, B. (1994). Noise strategies improving local search.
AAAI97: Twelfth National Conference Artificial Intelligence, pp. 337343.
Selman, B., Levesque, H. J., & Mitchell, D. (1992). new method solving hard satisfiability problems. AAAI92: Tenth National Conference Artificial Intelligence,
pp. 440446. AAAI Press.
Shang, Y., & Wah, B. W. (1998). discrete lagrangian-based global-searchmethod
solving satisfiability problems. Journal Global Optimization, 12 (1), 6199.
265

fiChieu & Lee

Tompkins, D., & Hoos, H. (2004). UBCSAT: implementation experimentation environment SLS algorithms SAT MAX-SAT. SAT04: Seventh International
Conference Theory Applications Satisfiability Testing.
Tseitin, G. S. (1968). complexity derivations propositional calculus. Studies
Mathematics Mathematical Logic, Part II, 115125.
Yedidia, J., Freeman, W., & Weiss, Y. (2001). Generalized belief propagation. NIPS00:
Advances Neural Information Processing Systems 13, pp. 689695.
Yedidia, J., Freeman, W., & Weiss, Y. (2005). Constructing free-energy approximations
generalized belief propagation algorithms. IEEE Transactions Information
Theory, 51 (7).
Zhang, W. (2001). Phase transitions backbones 3-SAT maximum 3-SAT.
Proceedings Seventh International Conference Principles Practice
Constraint Programming.

266


