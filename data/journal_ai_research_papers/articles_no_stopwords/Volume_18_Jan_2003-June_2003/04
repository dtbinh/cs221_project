journal articial intelligence

submitted published

wrapper maintenance machine learning
kristina lerman

lerman isi edu

usc information sciences institute
admiralty way
marina del rey ca usa

steven n minton

minton fetch com

fetch technologies
admiralty way
marina del rey ca usa

craig knoblock

knoblock isi edu

usc information sciences institute fetch technologies
admiralty way
marina del rey ca usa

abstract
proliferation online information sources led increased use wrappers
extracting data web sources previous focused
quick ecient generation wrappers development tools wrapper maintenance received less attention important web
sources often change ways prevent wrappers extracting data correctly
present ecient learns structural information data positive
examples alone describe information used two wrapper maintenance applications wrapper verication reinduction wrapper verication system
detects wrapper extracting correct data usually web source
changed format reinduction automatically recovers changes
web source identifying data web wrapper may generated
source validate monitored wrappers period year
verication correctly discovered wrapper changes made
mistakes resulting precision recall validated reinduction ten web sources able successfully reinduce wrappers
obtaining precision recall values data extraction task

introduction
tremendous amount information available online much information
formatted easily read human users computer applications extracting
information semi structured web increasingly important capability
web software applications perform information management functions
shopping agents doorenbos etzioni weld virtual travel assistants knoblock
minton ambite muslea oh frank b ambite barish knoblock muslea oh
minton among others applications often referred agents rely
web wrappers extract information semi structured sources convert
structured format semi structured sources explicitly specied
grammar schema implicit grammar used identify relevant
c

ai access foundation morgan kaufmann publishers rights reserved

filerman minton knoblock

information page even text sources email messages structure
heading exploited extract date sender addressee title body
messages sources online catalogs regular structure
exploited extract data automatically
wrappers rely extraction rules identify data eld extracted semiautomatic creation extraction rules wrapper induction active area
recent years knoblock lerman minton muslea kushmerick weld
doorenbos advanced wrapper generation systems use machine
learning techniques learn extraction rules example instance wrapper
induction tool developed usc knoblock et al muslea minton knoblock
commercialized fetch technologies allows user mark data
extracted several example online source graphical user interface
system generates landmark extraction rules data rely
page layout usc wrapper tool able eciently create extraction rules
small number examples moreover extract data contain lists
nested structures complicated formatting layouts
comparison wrapper induction wrapper maintenance received less attention
important even slight changes web page layout break
wrapper uses landmark rules prevent extracting data correctly
discuss wrapper maintenance consists
two parts wrapper verication reinduction wrapper verication system monitors
validity data returned wrapper site changes wrapper may extract
nothing data correct verication system detect data
inconsistency notify operator automatically launch wrapper repair process
wrapper reinduction system repairs extraction rules wrapper works
changed


labeled

web


reinduction system

gui

labeled
web

wrapper
induction
system

wrapper
extracted
data
change
detected

automatic
labeling

wrapper
verification

figure life cycle wrapper
figure graphically illustrates entire life cycle wrapper shown gure
wrapper induction system takes set web labeled examples data
extracted output wrapper induction system wrapper consisting set


fiwrapper maintenance

extraction rules describe locate desired information web page
wrapper verication system uses functioning wrapper collect extracted data
learns patterns describing structure data patterns used verify
wrapper correctly extracting data later date change detected system
automatically repair wrapper structural information locate examples
data running wrapper induction system examples
core wrapper maintenance applications machine learning
learns structural information common data elds introduce
dataprog describe application wrapper maintenance tasks
detail though focus web applications learning technique web specic
used data validation general
note distinguish two types extraction rules landmark rules extract data exploiting structure web page content rules
refer content patterns simply patterns exploit structure eld
previous work focused learning landmark rules information extraction muslea
minton knoblock current work shows augmenting rules
content patterns provides foundation sophisticated wrapper maintenance applications

learning content patterns
goal extract information semi structured information sources
typically involves identifying small chunks highly informative data formatted
opposed parsing natural language text convention design
elds usually structured phone numbers prices dates street addresses names schedules etc several examples street addresses given fig clearly strings
arbitrary share similarities objective work learn
structure elds
admiralty way
pico boulevard
oak street
main street
adams boulevard

figure examples street address eld

data representation
previous work researchers described elds extracted web characterlevel grammar goan benson etzioni collection global features
number words density numeric characters kushmerick employ
intermediate word level representation balances descriptive power specicity
character level representation compactness computational eciency
global representation words accurately tokens strings generated


filerman minton knoblock

alphabet containing dierent types characters alphabetic numeric punctuation
etc use tokens character types assign one syntactic categories
alphabetic numeric etc categories form hierarchy depicted fig
arrows point general less general categories unique specic token type
created every string appears least k examples determined preprocessing
step hierarchical representation allows multi level generalization thus token
boulevard belongs general token types alphanum alphanumeric strings alpha
alphabetic strings upper capitalized words well specic type representing
string boulevard representation exible may expanded include
domain specic information example numeric type divided categories
include range information number large larger medium
medium numbers small smaller number
digits digit likewise may explicitly include knowledge type
information parsed e g digit numbers could represented zipcode

token

punct

alphanum

alpha

upper

number

lower

small medium large

allcaps

ca

html

digit

boulevard

digit

digit



figure portion token type syntactic hierarchy
found sequence specic general token types useful
describing content information character level nite state representations
used previous work carrasco oncina goan et al character level
description far ne grained compactly describe data therefore leads poor
generality coarse grained token level representation appropriate web
data types addition data representation schemes used previous work attempt
describe entire data eld use starting ending sequences
patterns tokens capture structure data elds reason
similar one starting ending patterns allows us generalize
structural information many complex elds lot variability
elds e g addresses usually regularity start end
exploit call starting ending patterns collectively data prototype
example consider set street addresses fig examples start


fiwrapper maintenance

pattern number upper end specic type boulevard generally
upper note pattern language allow loops recursion believe
recursive expressions useful representations types data trying
learn harder learn lead generalization
learning positive examples
learning data prototype set examples labeled
belonging class may stated one two related ways classication
conservation task classication task positive negative instances
class used learn rule correctly classify examples classication
foil quinlan use negative examples guide specialization
rule construct discriminating descriptions satised
positive examples negative examples conservation task hand
attempts nd characteristic description dietterich michalski conserved
patterns brazma jonassen eidhammer gilbert set positive examples
class unlike discriminating description characteristic description often include
redundant features example learning description street addresses city
names serving negative examples classication learn number
good description street addresses start none city names
capitalized word follows number addresses redundant feature
add discriminating power learned description however
application description encounters zipcode future incorrectly
classify street address could avoided number upper
learned description street addresses therefore negative examples
available learning description capture regularity
data including redundant features order correctly identify instances
class dierentiate classes ideally characteristic description
learned positive examples alone discriminating description learned
classication positive negative examples negative examples
drawn innitely many classes widely used machine learning
e g decision trees quinlan inductive logic programming muggleton
solve classication task fewer learn characteristic
descriptions
applications appropriate source negative examples problematic therefore
chose frame learning conservation task introduce
learns data prototypes positive examples data eld alone
nds statistically signicant sequences tokens sequence token types signicant
occurs frequently would expected tokens generated randomly
independently one another words sequence constitutes pattern
describes many positive examples data highly unlikely
generated chance
estimates baseline probability token types occurrence
proportion types examples data eld type suppose
learning description set street addresses fig already found


filerman minton knoblock

signicant token sequence e g pattern consisting single token number
want determine whether specic pattern number upper
signicant pattern knowing probability occurrence type upper
compute many times upper expected follow number completely chance
observe considerably greater number sequences conclude longer
pattern signicant
use hypothesis testing papoulis decide whether pattern signicant
null hypothesis observed instances pattern generated chance
via random independent generation individual token types hypothesis testing
decides given condence level whether data supports rejecting null hypothesis
suppose n identical sequences generated random source probability
token type whose overall probability occurrence p next type
k sequences binomial distribution large n binomial distribution
approaches normal distribution p x np np p cumulative
probability probability observing least n events
p k n


n

p x dx



use polynomial approximation formulas abramowitz stegun compute
value integral
signicance level test probability null hypothesis rejected
even though true given cumulative probability suppose set
means expect observe least n events time
null hypothesis number observed events greater reject null hypothesis
given signicance level e decide observation signicant note
hypothesis test derived observation data constraint reduces
number degrees freedom test therefore must subtract one number
observed events prevents anomalous case single occurrence
rare event judged signicant
dataprog
describe dataprog nds statistically signicant patterns
set token sequences preprocessing step text tokenized tokens
assigned one syntactic types see figure patterns encoded
type prex tree node corresponds token type dataprog relies
signicance judgements grow tree prune nodes every path
resulting tree starting root node corresponds signicant pattern found
section focus discussion version
learns starting patterns easily adapted learn ending patterns
present pseudocode dataprog table dataprog grows
pattern tree incrementally nding signicant specializations e longer patterns pattern pruning less signicant generalizations specializations among patterns length last step dataprog extracts
signicant patterns pattern tree including generalizations e shorter patterns found signicant given specic e longer patterns


fiwrapper maintenance

dataprog main loop
create root node tree
next node q tree
create children q
prune nodes
extract patterns tree

create children q
token type next position examples
let c newnode
let c token
let c examples q examples followed
let c count c examples
let c pattern concat q pattern
signicant c count q count probability
addchildtotree c q
end
end loop

prune nodes
child c q
sibling c pattern c pattern
let n c count count
signicant n q count c token probability
delete c
break
else
delete
end
end loop
end c loop

extract patterns tree
create empty list
every node q tree
every child c q
let n c count si count si children c
signicant n q count c token probability
add c pattern list
return list patterns

table pseudocode dataprog



filerman minton knoblock

tree empty initially children added root node children
represent tokens occur rst position training examples often
expected chance example learning addresses examples
fig root two child nodes alphanum number tree extended
incrementally node q child added q every signicant specialization
pattern ending q explained previously child node judged signicant
respect parent node number occurrences pattern ending
child node suciently large given number occurrences pattern ending
parent node baseline probability token type used extend pattern
illustrate addresses example suppose already found pattern number
upper signicant ways extend tree see fig given data
number upper alphanum number upper alpha number upper upper
number upper street number upper boulevard number upper way
last patterns judged signicant example
number upper upper signicant upper follows pattern number
upper times probability observing least many longer
sequences purely chance since probability less judge
sequence signicant

root
number
upper

alphanum

alpha

upper

boulevard

street

figure pattern tree describes structure addresses dashed lines link nodes
deleted pruning step

next step prune tree examines pair sibling nodes
one general eliminates less signicant pair
precisely iterates newly created children q
least general every pair children ci cj ci pattern
cj pattern e cj pattern strictly general ci pattern keeps
cj explains signicantly data otherwise keeps ci
small numbers used illustrative purposes typical data sets
patterns learned much larger
calculation cumulative probability depends occurrence probability upper count
occurrence token type independently others example occurrence probability
relative fraction type upper
dataprog earlier version datapro described conference lerman minton note original version specic patterns
kept regardless whether general patterns found signicant



fiwrapper maintenance

let us illustrate pruning step example pattern tree fig eliminate node alphanum examples match pattern number upper alphanum match pattern number upper alpha thus alphanum
signicant given specialization alpha eliminate node alpha similar
reason next check whether number upper upper signicant given patterns
number upper boulevard number upper street instances
address eld match pattern number upper boulevard addresses
match number upper street number upper upper matches signicantly
addresses retained specic patterns pruned
tree otherwise deleted specic ones kept every example
described one pattern given length pruning step ensures size
tree remains polynomial number tokens thereby guaranteeing reasonable
performance
entire tree expanded nal step extract signicant patterns
tree judges whether shorter general pattern e g
number upper signicant given longer specializations e g number
upper boulevard number upper street amounts testing whether
excess number examples explained shorter pattern longer
patterns signicant pattern ends terminal node tree signicant
note set signicant patterns may cover examples data set
fraction occur frequently expected chance signicance
level tables examples several data elds yellow source bigbook
stock quote source ahoo quote well starting patterns learned
eld

applications pattern learning
explained introduction wrapper induction systems use information
layout web create data extraction rules therefore vulnerable changes
layout occur frequently site redesigned cases wrapper
continues extract data longer correct output wrapper may
change format source data changed e g dropped
price eld instead book availability changes ships
immediately stock ships immediately applications web
agents ambite et al chalupsky et al rely data extracted wrappers
wrapper maintenance important divide wrapper maintenance two parts described separately wrapper verication
automatically detects wrapper extracting data correctly web source
wrapper reinduction automatically xes broken wrappers applications learn
description data patterns learned dataprog signicant part

introduced strong bias specic patterns led high proportion
false positives wrapper verication experiments eliminating specicity bias improved
performance verication task



filerman minton knoblock

business name
chado tea house
saladang
information sciences institute
chaya venice
acorda therapeutics
cajun kitchen
advanced medical billing services
vega electrical corporation
st century foundation
tis season gift shop
hide sushi japanese restaurant
aoat sushi
prebica coee cafe
l orangerie
emils hardware
natalee thai restaurant
casablanca
antica pizzeria
nobu photographic studio
lotus eaters
essex coney
national restaurant
siam corner cafe
grand casino french bakery
alejo presto trattoria
titos tacos mexican restaurant inc
killer shrimp
manhattan wonton co
starting patterns
alpha upper
alpha upper upper restaurant
alpha

address
west st street
south fair oaks avenue
admiralty way
navy street
west th street
south fairview avenue
river road
east th street
east th street
lincoln road
sawtelle boulevard
east colorado boulevard
glencoe avenue
north la cienega boulevard
south robertson boulevard
south robertson boulevard
lincoln boulevard
maxella avenue
west th street
th avenue
coney island avenue
brighton beach avenue
national boulevard
main street
lincoln boulevard
washington place
washington boulevard
melrose place
number upper upper
number upper upper avenue
number upper upper boulevard

table examples business name address elds bigbook source
patterns learned



fiwrapper maintenance

city
los angeles
pasadena
marina del rey
venice
york
goleta
marcy
brooklyn
york
bualo
los angeles
pasadena
marina del rey
west hollywood
los angeles
los angeles
venice
marina del rey
york
york
brooklyn
brooklyn
los angeles
culver city
marina del rey
culver city
marina del rey
west hollywood
starting patterns
upper upper
upper upper rey

state
ca
ca
ca
ca
ny
ca
ny
ny
ny
ny
ca
ca
ca
ca
ca
ca
ca
ca
ny
ny
ny
ny
ca
ca
ca
ca
ca
ca

phone





























allcaps

digit digit large
































table examples city state phone number elds bigbook source
patterns learned



filerman minton knoblock

price change























starting patterns
punct digit digit

ticker
intc
ibm
aol

lu
athm
coms
csco
gte
aapl
mot
hwp
dell
gm
cien
egrp
hlit
rimm
c
gps
cflo
dclk
nt
bfre
qcom




























allcaps

number digit digit

price

























medium digit number
medium

table data examples ahoo quote source patterns learned



fiwrapper maintenance

wrapper verification
data extracted wrapper changes signicantly indication
web source may changed format wrapper verication system uses examples
data extracted wrapper past known correct order
acquire description data learned description contains features two types
patterns learned dataprog global numeric features density tokens
particular type application checks description still applies
data extracted wrapper thus wrapper verication specic instance
data validation task
verication works following way set queries used retrieve
html wrapper extracts correct training examples
computes values vector features k describes eld training
examples features include patterns describe common beginnings
endings eld verication phase wrapper generates set
test examples retrieved set queries computes feature
vector r associated eld test examples two distributions k r
see fig statistically signicance level wrapper judged
extracting correctly otherwise judged failed


training set
test set

feature value























feature

figure hypothetical distribution features training test examples

eld described vector whose ith component value ith feature
number examples match pattern j addition patterns use
following numeric features describe sets training test examples average
number tuples per page mean number tokens examples mean token length
density alphabetic numeric html tag punctuation types use goodness
method papoulis decide whether two distributions use
goodness method must rst compute pearsons test statistic data
pearsons test statistic dened


filerman minton knoblock

q



ti ei


ei



ti observed value ith feature test data ei expected
value feature number features patterns ei nri n
ri number training examples explained ith patter n number
examples training set n number examples test set numeric
features ei simply value feature training set test statistic q
chi squared distribution independent degrees freedom q
conclude signicance level two distributions otherwise
conclude dierent values dierent values looked
statistics table calculated approximation formula
order use test statistic reliably helps use many independent features
possible series verication experiments reported lerman minton
used starting ending patterns average number tuples per page feature
computing value q found method tended overestimate
test statistic features starting ending patterns independent
experiments reported use starting patterns order
increase number features added numeric features description data

monitored wrappers representing distinct web sources period ten
months may march sources listed table wrapper
queries stored periodically every days used
query set source except hotel source accepted dated queries
change dates periodically get valid set
test examples compared last correct wrapper output training examples
verication used dataprog learn starting patterns numeric
features eld training examples made decision high signicance
level corresponding whether test set statistically similar
training set none starting patterns matched test examples data
found changed signicantly data eld concluded wrapper failed
extract correctly source otherwise data elds returned statistically
similar data concluded wrapper working correctly
manual check comparisons revealed wrapper changes attributable
changes source layout data format verication correctly discovered changes made mistakes mistakes false positives
means verication program decided wrapper failed reality
working correctly two errors important false negatives
meaning detect change data source numbers
seven fact internal wrapper wrapper modied extract
instead price eld actions mostly outside control
chose classify wrapper changes



fiwrapper maintenance

source
airport
altavista
amazon
arrowlist

type
tuple list
list
tuple
list

bigbook
barnes n oble
borders
cuisinenet

tuple
tuple
list
list

geocoder
hotel
mapquest
northernlight
parking
quote
smartpages
showtimes
theatre
w ashington p ost
whitepages
yahoo people
ahoo quote
yahoo weather
cia f actbook

tuple
list
tuple
list
list
tuple
tuple
list
list
tuple
list
list
tuple
tuple
tuple

data fields
airport code name
url title
book author title price availability isbn
part number manufacturer price status
description url
business name address city state phone
book author title price availability isbn
book author title price availability
restaurant name cuisine address city state
phone link
latitude longitude street city state
name price distance url
hours minutes distance url
url title
lotname dailyrate
stock ticker price pricechange
name address city state phone
movie showtimes
theater name url address
taxi price
business name address city state phone
name address city state phone
stock ticker price pricechange
temperature forecast
country area borders population etc

table list sources used experiments data elds extracted source
type refers much data source returns response query single
tuple list tuples airport source type changed single tuple
list time



filerman minton knoblock

following precision recall accuracy values
p



r


true positives

true positives f alse positives
true positives

true positives f alse negatives
true positives true negatives

positives negatives

improvement reported lerman minton
produced p r poor precision value reported
work due false positives obtained data set attribute improvements eliminating specicity bias patterns learned dataprog
changing feature set include starting patterns additional numeric
features note improvement simply adding numeric features
check ran verication experiments subset data last comparisons global numeric features obtained p r whereas
patterns numeric features values p r
data set
discussion
though succeeded signicantly reducing number false positives
managed eliminate altogether number reasons presence
point limitations
split types errors roughly three entirely independent classes
improper tokenization incomplete data coverage data format changes url eld
table accounted signicant fraction false positives large part due
design tokenizer splits text strings punctuation marks url
contains embedded punctuation part alphanumeric key associated user
session id split varying number tokens hard capture
regularity eld solution rewrite tokenizer recognize urls
well dened specications exist address ongoing work
failed sometimes e g arrowlist showtimes learned long
specic descriptions worth pointing however performed correctly
two dozen comparisons sources types errors caused incomplete
data coverage larger varied training data set would produce general patterns
would perform better verication task striking example data coverage
occurred stock quotes source day training data collected
many movements stock price opposite true
day test data collected price change elds two days
dissimilar finally dataprog learns format data false positives
inevitably changes data format indicate
case factbook source units area changed
km sq km


fiwrapper maintenance

hotel mapquest cases url eld contains alphanumeric keys embedded punctuation symbols tokenizer splits eld many tokens key
format changes
http stamp q aaiegsp itn hot da itn agencies newitn
http stamp beggeqrco itn hot da itn agencies newitn
one occasion server name inside url changed
http enterprise mapquest com mqmapgend mqmapgenrequest
http sitemap mapquest com mqmapgend mqmapgenrequest
showtimes arrowlist cases instance showtimes eld part number
description elds arrowlist long many long overly specic patterns
learned elds e g
number digit allcaps small digit small digit digit
digit digit digit digit

altavista case database search engine appears updated dierent
set returned query
quote case data changed many positive negative price movements test examples
factbook case data format changed
f rom number km
number sq km
table list sources false positive verication task



filerman minton knoblock

wrapper reinduction
wrapper stops extracting correctly next challenge rebuild automatically cohen extraction rules wrappers muslea et al well
many others cf kushmerick et al hsu dung generated machine
learning takes input several source labeled examples
data extract page assumed user labeled examples correctly label least wrapper fails correctly identifying
examples data use examples input induction
stalker generate extraction rules note need identify data every page depending regular data layout stalker
learn extraction rules small number correctly labeled solution
bootstrap wrapper induction process learns landmark rules learning
content rules want learn landmark rules types
sites use rules tend much accurate ecient content
rules
employ method takes set training examples extracted source
wrapper known working correctly set
source uses mixture supervised unsupervised learning techniques identify
examples data eld assume format data
change patterns learned dataprog play signicant role reinduction task
addition patterns features length training examples
structural information used fact page structure used
critical step discuss learning detail next
paragraph
page template
many web sources use templates page skeletons automatically generate
database query evident example fig
template consists heading followed number match
query phrase click links associated businesses information
heading listings followed anchors map driving directions add
directory bolded phrase appears category obviously data
part template rather appears slots template elements
given two example source induce template
used generate table template nding looks sequences
tokens html tags text appear exactly page
works following way pick smallest page set template
seed starting rst token page grow sequence appending tokens
matter fact matter wrapper induction system used easily replace
stalker hlrt kushmerick et al generate extraction rules
discuss wrapper reinduction information sources return single tuple
per page detail page order create data extraction rules sources return lists
tuples stalker wrapper induction requires user specify rst last elements
list well least two consecutive elements therefore need able identify
data elements high degree certainty



fiwrapper maintenance



b
figure fragments two web source displaying restaurant information



filerman minton knoblock

subject condition sequence appears every page managed
build sequence thats least three tokens long sequence appears exactly
page becomes part page template templates play important role
helping identify correct data examples
input
p set n web
output
page template
begin
p shortest p
null
null
rsttoken p lasttoken p
concat
appears every page p

continue
else

n n
page count page
n n length
add template
end
null
end
end
end
table pseudocode template nding

automatic labeling
figure schematic outline reinduction consists automatic
data labeling wrapper induction latter aspect described detail
work muslea et al focus discussion automatic data
labeling
first dataprog learns starting ending patterns describe set training examples training examples collected wrappers normal operation correctly extracting data web source patterns used
identify possible examples data eld addition patterns
calculate mean variance number tokens training examples page scanned identify text segments begin one
starting patterns end one ending patterns text segments con best value minimum length page template element determined empirically
three



fiwrapper maintenance

extract

extracted
data

wrapper

learn
labeled
web

wrapper
induction
system

patterns
apply

web


extracts
score

group

figure schematic outline reinduction
tain signicantly fewer tokens expected old number tokens
distribution eliminated set candidate extracts learned patterns
often general match many possibly hundreds text segments page
among spurious text segments correct example data eld rest
discussion concerned identifying correct examples data
exploit simple priori assumptions structure web help
us separate interesting extracts noise expect examples data eld
appear roughly position context page example
fig shows fragments two web source displaying restaurant information relevant information restaurant appears
heading listings phrase appears category thus
expect eld e g address appear place slot within page
template moreover information trying extract usually part
page template therefore candidate extracts part page template
eliminated consideration restaurant address follows restaurant name
bold precedes city zip code e appears context every page
given eld visible user every page invisible part html
tag every page order use information separate extracts describe
candidate extract feature vector includes positional information dened
page template slot number context context captured adjacent tokens
one token immediately preceding candidate extract one token immediately following use binary feature value one token visible
user zero part html tag candidate extracts assigned
feature vectors split groups within group candidate extracts
described feature vector
next step score groups similarity training examples
expect highest scoring group contain correct examples data eld one scoring
method involves assigning rank groups many extracts
common training examples technique generally works well
least data usually remains web page layout changes


filerman minton knoblock

course assumption apply data changes frequently weather
information ight arrival times stock quotes etc however found even
sources enough overlap data works scoring
assigns zero groups e exist extracts common training
examples second scoring invoked scoring method follows wrapper
verication procedure nds group similar training examples
patterns learned training examples
nal step wrapper reinduction process provide extracts top
ranking group stalker wrapper induction muslea et al along
stalker learns data extraction rules changed note
examples provided stalker required correct examples eld
set automatically labeled examples includes false positives stalker learn
correct extraction rules eld false negatives however
reinduction could nd correct example data page page
simply used wrapper induction stage

evaluate reinduction used ten sources listed table
returned single tuple per page detail page method data collection
described sec period october march
eight format changes sources since set much small evaluation
purposes created articial test set considering ten data sets collected
source period evaluated extract data
web correct output known specically took ten tuples set
collected one date used information extract data ten randomly
chosen collected later date regardless whether source actually changed
reserved remaining collected later date testing learned
stalker rules
output reinduction list tuples extracted ten
well extraction rules generated stalker though cases
able extract every eld every still learn good extraction rules
stalker long examples eld correctly labeled evaluated
reinduction two stages rst checked many data elds source
identied successfully second checked quality learned stalker rules
extract data test
extracting content rules judged data eld successfully extracted automatic labeling able identify correctly least two
ten minimum number examples stalker needs create extraction rules practice low success rate occurred one eld two
use geocoder cia f actbook wrappers experiments geocoder wrapper
accessed source another application therefore available us analysis
reason excluding f actbook plain text source methods apply web
note verication experiments two wrappers mapquest source
extracting dierent data experiments described used one contained
data time period



fiwrapper maintenance

sources quote ahoo quote sources eld successfully
extracted correctly identied least three cases almost
set false positive occurred reinduction incorrectly identied text page correct example data eld many cases false positives
consisted partial elds e g cloudy rather mostly cloudy yahoo weather
false negative occurred identify examples data eld
ran reinduction experiment attempting extract elds listed table
second column table lists fractions data sets eld successfully
extracted able correctly identify elds times across data sets making
mistakes attributed false positives false negatives
several reasons reinduction failed operate perfectly many
cases reason small training set achieve better learning yellowpages type sources bigbook smartpages training examples see fig
two cases errors attributable changes format data resulted
failure patterns capture structure data correctly e g airport source
changed airport names capitalized words allcaps quote source
patterns able identify negative price changes learned
data set stocks positive price change two sources
reinduction could distinguish correct examples eld
examples data type quote source cases extracted
opening price high price stock price eld yahoo weather source
extracted high low temperature rather current temperature
evident smartpages source city name appeared several places
page cases user intervention meta analysis elds may necessary
improve data extraction
extracting landmark rules nal validation experiment consisted
automatically generated wrappers extract data test last three
columns table list precision recall accuracy extracting data test
performance good elds notable exception state eld
bigbook source eld pattern allcaps overly general wrong
group received highest score scoring step reinduction
average precision recall values p r
within data set studied sources listed table experienced total seven
changes addition sources airport source changed format data
returned since simultaneously changed presentation data detail page
list could use data learn stalker rules table shows performance
automatically reinduced wrappers changed sources elds precision p
important performance measures close maximum value indicating
false positives however small values recall indicate
examples elds extracted traced limitation
eld appears dierent context one rule necessary
limitations data collection procedure prevented us accumulating large data sets
sources therefore order keep methodology uniform across sources decided use
smaller training sets



filerman minton knoblock

source field
airport code
airport name
amazon author
amazon title
amazon price
amazon isbn
amazon availability
barnes n oble author
barnes n oble title
barnes n oble price
barnes n oble isbn
barnes n oble availability
bigbook name
bigbook street
bigbook city
bigbook state
bigbook phone
mapquest time
mapquest distance
quote pricechange
quote ticker
quote
quote shareprice
smartpages name
smartpages street
smartpages city
smartpages state
smartpages phone
ahoo quote pricechange
ahoo quote ticker
ahoo quote
ahoo quote shareprice
w ashington p ost price
w eather temp
w eather outlook
average

ex





































p





































r





































table reinduction ten web sources rst column lists fraction
elds source correctly extracted pattern
judged eld extracted correctly identied least
two examples last two columns list precision recall data
extraction task reinduced wrappers



fiwrapper maintenance



extraction accuracy






phone
state
city
name
street
















number training examples

figure performance reinduction elds smartpages source
size training set increased

source field
amazon author
amazon title
amazon price
amazon isbn
amazon availability
barnes n oble author
barnes n oble title
barnes n oble price
barnes n oble isbn
barnes n oble availability
quote pricechange
quote ticker

p













r



























source field
smartpages name
smartpages street
smartpages city
smartpages state
smartpages phone
ahoo quote pricechange
ahoo quote ticker
ahoo quote
ahoo quote shareprice
quote
quote shareprice

p

n


n





r

























n




table precision recall accuracy learned stalker rules changed
sources

extract source cases extract subset examples
share context ignore rest examples
mentioned earlier believe achieve better performance yellow pagestype sources bigbook smartpages training examples figure shows
eect increasing size training example set performance automatically
generated wrappers smartpages source number training examples goes
accuracy extracted elds goes


filerman minton knoblock

lists
applied reinduction extract data containing lists
tuples many cases successfully extracted least several examples
eld several however order learn correct extraction rules sources
returning lists data stalker requires rst last least two consecutive
list elements correctly specied methods presented cannot guarantee
required list elements extracted unless list elements extracted
currently working approaches data extraction lists lerman knoblock
minton enable us use stalker learn correct data extraction rules

previous work
signicant amount activity area pattern learning
section discuss two approaches grammar induction relational learning
compare performance dataprog tasks web wrapper application
domain section review previous work topics related wrapper maintenance
section discuss related work information extraction wrapper induction
pattern learning
grammar induction
several researchers addressed learning structure patterns describing text data particular grammar induction used past
learn common structure set strings carrasco oncina proposed alergia carrasco oncina stochastic grammar induction learns
regular language positive examples language alergia starts nite
state automaton fsa initialized prex tree represents strings
language alergia uses state merging angluin stolcke omohundro fsa generalized merging pairs statistically similar
signicance level subtrees similarity purely relative frequencies
substrings encoded subtrees end minimum fsa consistent
grammar
goan et al goan et al found applied data domains commonly
found web addresses phone numbers etc alergia tended merge
many states resulting general grammar proposed modications
alergia resulting wil aimed reducing number faulty merges
modications motivated observation symbol string belong one
following syntactic categories number lower upper delim
viewed syntactic level data strings contain additional structural information
eectively exploited reduce number faulty merges wil merges two subtrees
similar alergia sense every level contain nodes
syntactic type wil adds wildcard generalization step
transitions corresponding symbols category approximately evenly
distributed range syntactic type e g numerals replaced
single transition corresponding type e g number goan et al demonstrated


fiwrapper maintenance

grammars learned wil eective recognizing strings several
relevant web domains
compared performance wil dataprog wrapper verication task
used wil learn grammar token level data examples extracted
wrappers character level done goan et al another dierence
goan et al whereas needed order strings arrive high
accuracy rate order examples work note
longer apply wildcard generalization step fsa would need many
examples decide whether token approximately evenly distributed
syntactic type instead compare dataprog two versions wil one without
wildcard generalization wil one every token initial fsa replaced
syntactic type wil addition syntactic types used goan et al
introduce another type alnum consistent patterns learned
dataprog neither version wil allows multi level generalization
tested data extracted wrappers web sources ten
dierent occasions period several months see sec queries
stored every time wrapper one data set used training examples
data set extracted next date used test examples used wil
wil learn grammar eld training examples used
grammar recognize test examples grammar recognized
test examples data eld concluded recognized entire data eld otherwise
concluded grammar recognize eld possibly data
changed procedure used wrapper verication experiments
described greater detail section period time covered
data occasions web site changed thereby causing data
extracted wrapper change well precision recall values wil
grammar induction specic tokens p r wil grammar
induction wildcards representing tokens syntactic categories values p
r wil learned overly specic grammar resulted high rate
false positives verication task wil learned overly general grammar
resulting slightly false negatives recall precision value dataprog
data p r
recently thollard et al thollard dupont de la higuera introduced mdi
extension alergia mdi shown generate better grammars least one
domain reducing number faulty merges states mdi replaces alergias
state merging criterion global measure attempts minimize kullbackleibler divergence learned automaton training sample
time keeping size automaton small possible clear whether mdi
combination mdi wil lead better grammars common web data types
suspect regular grammars capture multitude data types
found web example business names restaurant names shown table
may well dened structure yet many start two capitalized words
end word restaurant constitute patterns learned dataprog


filerman minton knoblock

relational learning
sequence n tokens pattern viewed non recursive n ary predicate
therefore use relation learning foil quinlan learn
given set positive negative examples class foil learns rst order predicate
logic clauses dening class specically nds discriminating description covers
many positive none negative examples
used foil negative literals option learn patterns describing several
dierent data elds cases closed world assumption used construct negative
examples known objects thus bigbook source names addresses
negative examples phone number class used following encoding
translate training examples allow foil learn logical relations data eld
foil learned clauses form
data f ield p f ollowed b p b



denition eld b tokens terms right hand side
predicates predicate f ollowed b expresses sequential relation
tokens predicate p allows us specify token specic token e g
john general type e g upper alpha thus allowing foil
multi level generalization capability dataprog
ran foil examples associated bigbook see tables
relational denitions learned foil examples shown table
many cases similarities denitions learned foil
patterns learned dataprog though clauses learned foil tended overly
general another given examples class little structure
names book titles foil tended create clauses covered single examples
failed nd clauses general description learned foil depended critically
supplied negative examples eld example trying
learn denition book titles presence prices foil would learn something
starts capitalized word title author names supplied negative
examples well learned denition would dierent therefore foil
situations complete set negative examples known available
problematic
wrapper maintenance
kushmerick kushmerick addressed wrapper verication proposing
rapture verify wrapper correctly extracts data web page
work data eld described collection global features
word count average word length density types e proportion characters
training examples html alphabetic numeric type rapture calculated
mean variance features distribution training examples given
set queries wrapper output known rapture generates
query calculates probability generating observed value every feature
individual feature probabilities combined produce overall probability
wrapper extracted data correctly probability exceeds certain threshold


fiwrapper maintenance

warning
name
name
name

following definition cover tuples relation
allcaps followed b
upper followed b number b
followed b venice b

street large followed b
street medium followed b alphanum b

warning
city
city
city
city
city

following definition cover tuples relation
los
marina

brooklyn
west followed b alpha b

state ca
state ny
phone

table denitions learned foil bigbook source
rapture decides wrapper correct otherwise failed kushmerick
found html density alone correctly identify almost changes
sources monitored fact adding features probability calculation
signicantly reduced performance compared raptures performance
verication task found rapture missed wrapper changes
false negatives relied solely html density feature
relatively little prior work wrapper reinduction cohen cohen adapted whirl soft logic incorporates notion statistical
text similarity recognize page structure narrow class containing
simple lists simple hotlists dened anchor url pairs previously extracted data
combined page structure recognition heuristics used reconstruct wrapper
page structure changed cohen conducted wrapper maintenance experiments original data corrupted data examples whirl however procedure
corrupting data neither realistic representative data web changes
although cannot present guarantee good performance wrapper reinduction sources containing lists handle realistic data changes web
sources returning detail
although use dierent statistical test cannot compare performance
rapture directly doubt would outperform data set used global
numeric features noted section patterns well global numeric features
verication task outperforms numeric features



filerman minton knoblock

information extraction
system used reinduction task related spirit many information
extraction ie systems developed group others uses learned
representation data extract information specic texts wrapper induction
systems see muslea et al kushmerick et al freitag kushmerick
domain independent works best semi structured data e g web
handle free text well systems autoslog rilo
whisk soderland free text fewer non trivial regularities
exploit unlike wrapper induction extract data features
appear near text rather content data however unlike whisk
learns content rules reinduction system represents eld independently
elds advantage instance web source changes
order data elds appear another dierence system designed run
automatically without requiring user interaction label informative examples
main part purely automatic reinduction system fails achieve accuracy
ie systems rely labeled examples train system however
see major limitation since designed complement existing extraction
tools rather supersede words consider reinduction task
successful accurately extract sucient number examples use wrapper
induction system system use resulting wrapper accurately extract
rest data source
many similarities used roadrunner system developed concurrently system reported recently crescenzi
mecca merialdo b goal system automatically extract
data web sources exploiting similarities page structure across multiple
roadrunner works inducing grammar web comparing several
containing long lists data grammar expressed html tag level
similar extraction rules generated stalker roadrunner system
shown successfully extract data several web sites two signicant dierences
work way detecting changes know
wrapper rebuilt ii reinduction works detail
roadrunner works lists believe data centric
exible allow us extract data diverse information sources
roadrunner looks page structure

conclusion
described dataprog learns structural information data eld set examples eld use patterns
two web wrapper maintenance applications verification detecting wrapper
stops extracting data correctly web source ii reinduction identifying
examples data eld order rebuild wrapper stops working verication performed accuracy much better reported
earlier work lerman minton reinduction task patterns
used identify large number data elds web turn used


fiwrapper maintenance

automatically learn stalker rules web sources extraction rules
validated successfully extract data sets test
remains work done wrapper maintenance current
sucient automatically generate stalker rules sources return lists tuples
however preliminary indicate lerman et al feasible combine
information structure data priori expectations structure
web containing lists automatically extract data lists assign rows
columns believe techniques eventually eliminate need user
mark web enable us automatically generate wrappers web sources another exciting direction future work dataprog automatically
create wrappers sources domain given existing wrappers sources
domain example learn author title price elds
amazonbooks source use extract elds barnes n oblebooks
source preliminary indeed feasible automatic wrapper generation
important cornerstone information applications including web agents

acknowledgments
would thank priyanka pushkarna carrying wrapper verication experiments
reported supported part defense advanced
projects agency darpa air force laboratory contract agreement
numbers f c f f part air force
oce scientic grant number f part integrated
media systems center national science foundation nsf engineering center
cooperative agreement number eec part nsf award number
dmi u government authorized reproduce distribute reports
governmental purposes notwithstanding copy right annotation thereon views
conclusions contained herein authors interpreted
necessarily representing ocial policies endorsements expressed implied
organizations person connected

references
abramowitz stegun handbook mathematical functions formulas graphs mathematical tables applied math series national bureau
standards washington c
ambite j l barish g knoblock c muslea oh j minton
getting interactive agent execution optimizing
travel fourteenth innovative applications articial intelligence conference
iaai edmonton alberta canada
angluin inference reversible languages journal acm


filerman minton knoblock

brazma jonassen eidhammer gilbert approaches automatic discovery patterns biosequences tech rep department informatics
university bergen
carrasco r c oncina j learning stochastic regular grammars means
state merging method lecture notes computer science
chalupsky h et al electric elves applying agent technology support human
organizations proceedings thirteenth annual conference innovative
applications articial intelligence iaai seattle wa
cohen w w recognizing structure web similarity queries proc
th national conference articial intelligence aaai pp
crescenzi v mecca g merialdo p automatic web information extraction
roadrunner system proceedings international workshop data
semantics web information systems daswis
crescenzi v mecca g merialdo p b roadrunner towards automatic data
extraction large web sites proceedings th conference large
databases vldb rome italy
dietterich michalski r inductive learning structural descriptions articial intelligence
doorenbos r b etzioni weld scalable comparison shopping
agent world wide webs proceeding first international confence
autonomous agents marina del rey
freitag kushmerick n boosted wrapper induction proceedings th
conference articial intelligence aaai pp aaai press menlo
park ca
goan benson n etzioni grammar inference world
wide web proceedings aaai spring symposium machine learning information access stanford university ca
hsu c n dung generating nite state transducers semi structured
data extraction web journal information systems
knoblock c lerman k minton muslea accurately reliably
extracting data web machine learning ieee data engineering
bulletin
knoblock c minton ambite j l muslea oh j frank b
mixed initiative multi source information assistants tenth international
world wide web conference www hong kong
kushmerick n regression testing wrapper maintenance proceedings
th national conference articial intelligence aaai


fiwrapper maintenance

kushmerick n weld doorenbos r b wrapper induction information extraction proceedings intl joint conference articial intelligence
ijcai pp
lerman k knoblock c minton automatic data extraction lists
tables web sources proceedings workshop advances text extraction
mining ijcai menlo park aaai press
lerman k minton learning common structure data proceedings
th national conference articial intelligence aaai menlo park
aaai press
muggleton inductive logic programming generation computing

muslea minton knoblock c wrapper induction semistructured webbased information sources proceedings conference automated learning
discovery conald
muslea minton knoblock c hierarchical wrapper induction
semistructured information sources autonomous agents multi agent systems

papoulis probability statistics prentice hall englewood clis nj
quinlan j r learning logical denitions relations machine learning

quinlan j r c programs machine learning morgan kaufmann san
mateo ca
rilo e automatically constructing dictionary information extraction tasks
proceedings th national conference articial intelligence pp
menlo park ca usa aaai press
soderland learning information extraction rules semi structured free
text machine learning
stolcke omohundro inference nite state probabilistic grammars
proceedings nd int colloquium grammar induction icgi pp

thollard f dupont p de la higuera c probabilistic dfa inference
kullback leibler divergence minimality proceedings th international
conf machine learning pp morgan kaufmann san francisco ca




