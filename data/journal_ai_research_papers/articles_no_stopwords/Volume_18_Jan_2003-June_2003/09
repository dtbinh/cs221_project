journal artificial intelligence

submitted published

general method generate random modal formulae
testing decision procedures
peter f patel schneider

pfps bell labs com

bell labs
mountain ave murray hill nj usa

roberto sebastiani

rseba dit unitn

dip di informatica e telecomunicazioni
universita di trento
via sommarive trento italy

abstract
recent emergence heavily optimized modal decision procedures highlighted key
role empirical testing domain unfortunately introduction extensive empirical tests
modal logics recent far none proposed test generators satisfactory
cope fact present random generation method provides benefits previous methods generating empirical tests fixes much generalizes one best known
methods random cnf test allowing generating much wider variety covering principle whole input space method produces much suitable test sets
current generation modal decision procedures analyze features method
means extensive collection empirical tests

motivation goals
heavily optimized systems determining satisfiability formulae propositional modal logics available systems including dlp patel schneider fact horrocks
sat giunchiglia giunchiglia tacchella mspass hustadt schmidt weidenbach racer haarslev moller optimizations much
faster previous generation modal decision procedures lean k beckert gore

l ogics w orkbench heuerding jager schwendimann seyfreid ke pitt
cunningham k sat giunchiglia sebastiani
theorem proving neither computational complexity asymptotic algorithmic complexity useful determining effectiveness optimizations
effectiveness determined empirical testing horrocks patel schneider sebastiani
empirical testing directly gives resource consumption terms compute time memory
use factors pieces system basic empirical testing
used compare different systems tune system parameters
used modify performance moreover used sort inputs
system handles well sort inputs system handles poorly
unfortunately introduction extensive empirical tests modal logics recent
far none proposed test methodologies satisfactory methods contain many



complete list see renate schmidts web page listing theorem provers modal logics
http www cs man ac uk schmidt tools
c ai access foundation morgan kaufmann publishers rights reserved

fipatel chneider ebastiani

formulae easy current heavily optimized procedures contain high rates
trivial insignificant tests generate artificial significant
sample input space finally methods generate formulae big parsed
handled
reasons described presented horrocks et al analytical survey
state art empirical testing modal decision procedures instead present
random generation method provides benefits previous methods generating empirical tests built preliminary work horrocks et al method fixes much
generalizes cnf methodology randomly generating clausal formulae modal logics
giunchiglia sebastiani hustadt schmidt giunchiglia giunchiglia sebastiani
tacchella used many previous empirical tests modal decision procedures eliminates drastically reduces influence major flaw previous method allows
generating much wider variety
section recall list desirable features good test sets section briefly
survey state art test methods sections present discuss basic
advanced versions test method respectively evaluate features presenting
large amount empirical section provide theoretical showing
advanced version method principle cover whole input space section
discuss features method compare wrt state art methods
section conclude indicate possible future directions
page system description random generator presented ijcar patelschneider sebastiani

desirable features good test sets
benefits empirical testing depend characteristics inputs provided testing
empirical testing provides data particular inputs inputs typical
suitable empirical testing useful means inputs
empirical testing must carefully chosen horrocks horrocks et al
previously proposed motivated following key criteria creating good test sets
representativeness ideal test set represent significant sample whole input
space good empirical test set least cover large area inputs
difficulty good empirical test set provide sufficient level difficulty system
tested hard even state art systems
good benchmark forthcoming systems
termination practical use tests terminate provide information within
reasonable amount time inputs hard system may able
provide answers within established time inability system interest
make system comparison impossible insignificant
significant amount inadvertently trivial generated unless parameter p set horrocks et al see section full discussion point



fia n ew g eneral ethod



g enerate r andom odal f ormulae

scalability difficulty scale comparing absolute performances may
less significant comparing performances scale increasing
difficulty
valid vs valid balance good test set valid valid
less equal number difficulty moreover maximum uncertainty regarding
solution desirable
reproducibility good test set allow easily reproducing
following criteria derive significant sub cases main criteria
parameterization parameterized inputs sufficient parameters degrees freedom allow
inputs range large portion input space
control particular useful parameters control monotonically key features input test set average difficulty valid vs non valid rate
modal vs propositional balance reasoning modal logics involves alternating two orthogonal search efforts pure modal reasoning pure propositional reasoning good test
set challenging viewpoints
data organization data summarizable make comparison possible
limited effort plottable enable qualitative behavior system
highlighted
finally particular care must taken avoid following
redundancy empirical test sets must carefully chosen include inadvertent redundancy chosen include small sub inputs dictate
entire input
triviality good test set flawless contain significant subsets
inadvertent trivial
artificiality good empirical test set correspond closely inputs applications
size single big w r difficulty resources
required parsing data managing seriously influence total performance
criteria described motivated detail horrocks et al
proposed five year debate empirical testing modal logics giunchiglia sebastiani
heuerding schwendimann hustadt schmidt giunchiglia et al
horrocks patel schneider notice criteria identical similar
suggested heuerding schwendimann
criteria general cases require interpretation first
implicitly interpreted unless user deliberately wants contrary
reason instance might case one wants deliberately generate easy
e g sure tested procedure take much time solve redundant


fipatel chneider ebastiani

e g test effectiveness redundancy elimination technique satisfiable
e g test incomplete procedures extent key issue
reasonable form control features one address general purpose
criteria specific desiderata
second cases may tradeoff two distinct criteria may
necessary choose one make compromise one example given
redundancy artificiality real world large parts knowledge base
irrelevant query whose determined small subpart input sense
eliminating redundancies may make artificial
particular attention must paid triviality claimed victims many
areas ai fact flaws e inadvertent trivial detected random generators
sat mitchell selman levesque csp achlioptas kirousis kranakis krizanc molloy stamatiou gent macintyre prosser smith walsh modal reasoning hustadt schmidt qbf gent walsh thus notion trivial thus
flawed deserves comment
work achlioptas et al flawed solvable linear time
standard csp procedures due undesired presence implicit unary constraints causing
variables value inadmissible similar notion holds sat mitchell et al qbf
gent walsh literature modal reasoning instead typical flawed
whose un satisfiability verified directly propositional level without
investigating modal successors kind typically solved negligible time
w r similar size depth hustadt schmidt giunchiglia et al
horrocks et al thus little abuse notation otherwise specified
call trivially un satisfiable kind

overview state art
previous empirical tests mostly generated three methods hand generated formulae
heuerding schwendimann randomly generated clausal modal formulae giunchiglia
sebastiani hustadt schmidt giunchiglia et al randomly generated
quantified boolean formulae translated modal formulae massacci
already presented detailed analysis three methods horrocks et al
present quick overview latter two methods refer following sections
cnf random tests
cnf test methodology giunchiglia sebastiani hustadt schmidt
giunchiglia et al performance system evaluated sets randomly generated cnf formulae cnf formula conjunction cnf clauses clause
course modal implicitly assume modal depth strictly greater zero
consider purely propositional formulas
notice use suitable expression propositionally un satisfiable latter
used different meaning literature modal reasoning see e g giunchiglia sebastiani
first method heuerding schwendimann obsolete formulae generated easy current
state art deciders horrocks et al



fia n ew g eneral ethod



g enerate r andom odal f ormulae

disjunction propositional modal literals literal atom negation

modal atoms formulae form cnf clause cnf formula
cnf formula clauses exactly literals
r andom g enerator
cnf formula randomly generated according five parameters maximum modal
depth number clauses top level conjunction number propositional variables

number distinct box symbols probability atom occurring clause
depth purely propositional
random cnf generator final version giunchiglia et al works follows
cnf formula depth produced randomly generating
depth forming conjunction



cnf clause depth produced randomly generating three distinct commutativity disjunction cnf atoms depth negating probability
forming disjunction











propositional atom produced picking randomly element
uniform probability

cnf clauses

fifi



cnf atom depth produced generating probability random



picked
propositional atom probability cnf atom



randomly

randomly generated cnf clause depth

recently horrocks patel schneider proposed variant cnf random

generator giunchiglia et al added four extra parameters representing

respectively probability propositional modal atom negated

representing respectively minimum maximum number modal literals clause
equal probability number range experiments set


extent cnf formulas generated generator


giunchiglia et al setting



est ethod data nalysis
cnf test method works follows typical set characterized fixed

varied way empirically cover satisfiable
unsatisfiable transition tuple parameters values data point
set certain number cnf formulae randomly generated resulting
formulae given input procedure test maximum time bound satisfiability
rates median percentile values cpu times median percentile values parameters
e g number steps memory etc plotted number clauses ratio

clauses propositional variables
random qbf tests
qbf benchmarks part tancs benchmarks massacci system performances evaluated sets random quantified boolean formulae gener

fipatel chneider ebastiani

ated according method described cadoli giovanardi schaerf gent
walsh converted modal logic variant conversion halpern
moses
r andom g enerator





random qbf formulae generated alternation depth

variables
alternation matrix random propositional cnf formula clauses length
constraints number universally existentially quantified variables within
clause avoids generating flawed random qbf formulae highlighted gent
walsh instance random qbf formula
looks











random cnf formula parameters denote
total number universally existentially quantified variables respectively clearly
moreover modal formula resulting halpern moses
conversion depth number propositional variables






















est ethod data nalysis
test method used tancs competition massacci works follows
tests performed single data points data point certain number qbf
formulae randomly generated converted modal logics resulting formulae given
input procedure tested maximum time bound number tests
solved within time limit geometrical mean time successful solutions
reported data rescaled abstract away machine run dependent characteristics
typically collection tables presenting data pair system test one data
point per row

cnf generation method basic version
previous analysis horrocks et al none current methods
completely satisfactory cope fact propose believe much satisfactory method randomly generating modal formulae method seen improved much general version random cnf generation method giunchiglia
et al
present method introducing incrementally features two main steps
section introduce basic version method wherein






provide interpretation parameter section allows varying
without causing flaws described horrocks et al
extend interpretation parameter section providing fine grained
way tuning difficulty generated formulae

section present full advanced version method wherein


fia n ew g eneral ethod



g enerate r andom odal f ormulae




extend parameters allowing shaping explicitly probability
distribution propositional modal rate clause length respectively section




allow vary nesting depth subformulae section allowing
different distributions different depths

investigate properties cnf generator present series experiments
appropriate settings mimic previous generation methodologies produce improved
kinds tests
tests adopted testing criteria cnf method test set
fixed parameters except varied span least satisfiability transition area
valid vs non valid balance feature section consider transition area


interesting portion test set almost test sets varied



resulting integral values
ranging

value generated formulae sufficient number produce reasonably reliable data
time limit seconds imposed attempt determine satisfiability status
formula common practice set number boxes throughout testing
setting produces hardest formulae giunchiglia sebastiani hustadt schmidt
giunchiglia et al performed several test sets similar parameters often

varying
tested formulae two systems dlp version patel schneider
sat version tacchella two fastest modal decision procedures available http www bell labs com usr pfps dlp http www mrg dist unige tac respectively
code used generate tests available http www bell labs com usr pfps dlp
plotted test groups test sets similar parameters six four plots
two plots devoted performance dlp one showing median one showing

th percentile time taken solve formulae value plotted
test groups ran sat plotted median th percentile sat
plotted fraction formulae determined satisfiable unsatisfiable
dlp within time limit save space satisfiability unsatisfiability fractions plotted
together single plot satisfiability fractions higher left side plot unsatisfiability fractions higher right multiple plotting obscure details
information interested general behavior fractions
obscured fact multiple plotting serves highlight crossover regions
satisfiability unsatisfiability fractions roughly equal
finally plotted fraction formulae dlp finds model determines
formula unsatisfiable without investigating modal successors call fractions
trivial satisfiability trivial unsatisfiability fractions last fractions estimate
number formulae satisfiable kripke structure successors e g
propositional valuations e g respecfi
tively reasons discussed better indicators triviality


















notice two curves symmetric respect test exceeds time limit e g
point tests determined satisfiable dlp determined unsatisfiable

solved within time limit two curves symmetric point




fipatel chneider ebastiani

formal measures used previous papers trivial satisfiability unsatisfiability fractions
plotted together single plot
reduce clutter plots used line value tested
distinguish lines plot plotted every five data points
symbol identified legend plot
running tests presented required months cpu time
ran tests variety machines machines range speed mhz sparc
ultra mhz sparc ultra mb mb main memory
machines completely dedicated tests otherwise lightly loaded test
set run machines speed memory direct comparison different
groups tests thus take account differences test machines
reinterpreting parameter
one previous methods generating cnf formulae generated formulae contain pieces make entire formula easy solve mostly
presence strictly propositional top level clauses small number propositional variables tests required produce reasonable difficulty levels current systems
strictly propositional top level clauses needed cover combinations propositional literals make entire formula unsatisfiable previous attempts eliminate trivial
unsatisfiability concentrated eliminating top level propositional literals setting
hustadt schmidt giunchiglia et al unfortunately choice forces

formulae hard state art systems atom
clause generated independently atoms clause modifies
probability propositional atoms necessary eliminate problematic clauses



first idea suggested previously horrocks et al works
follows instead forbidding strictly propositional clauses except maximum modal depth
setting instead require ratio propositional atoms clause
clause size close possible propositional probability clauses maximum
modal depth





clauses size integral clauses modal
depth propositional atoms
modal atoms values allow

propositional atoms clause modal depth probability



respectively instance clause


contains propositional modal literal third propositional probability


eliminates possibility strictly







propositional clauses main cause trivial unsatisfiability except modal depth






fiff fiff







fiff

approaches eliminating propositional unsatisfiability possible example would possible
simply remove strictly propositional clauses generation however technique would alter meaning
parameter actual probability literal propositional would become strictly smaller
control user




remember







fia n ew g eneral ethod



g enerate r andom odal f ormulae

satisfiability unsatisfiability fractions


trivial satisfiability unsatisfiability fractions


n
n
n
n
n
n
n



n
n
n
n
n
n
n























l n









dlp median times




l n







dlp th percentile times





n
n
n
n
n
n
n



n
n
n
n
n
n
n























l n









sat median times




l n







sat th percentile times





n
n
n
n
n
n
n



n
n
n
n
n
n
n























l n



figure

odal epth




























l n







old method



first experiments direct comparison previous tests generated cnf formulae
setting used past one
exhibits problematic behavior used method old cnf generation
method giunchiglia et al briefly described section old method
generated cnf formulae standard
method eliminating trivially unsatisfiable formulae method
old cnf generation method tests given figures


fipatel chneider ebastiani

satisfiability unsatisfiability fractions


trivial satisfiability unsatisfiability fractions


n
n
n
n
n
n
n



n
n
n
n
n
n
n























l n









dlp median times



l n







dlp th percentile times


n
n
n
n
n
n
n





n
n
n
n
n
n
n























l n









sat median times



l n







sat th percentile times


n
n
n
n
n
n
n





n
n
n
n
n
n
n























l n



figure


























l n







method

one aspect set tests three collections many trivially unsatisfiable formulae satisfiability transition area even collection top level propositional atoms
trivial unsatisfiability occurs collection top level propositional atoms


dlp sat detect
top level modal atoms e g
clashes complementary modal literals without investigating modal successors
presence large number trivially unsatisfiable formulae actually serious
tests trivial unsatisfiability shows formulae almost


trivial
unsatisfiable already easy solve exception
solve anyway however generation method considerably reduces number trivially
unsatisfiable formulae almost entirely removes satisfiable unsatisfiable transition





fia n ew g eneral ethod



g enerate r andom odal f ormulae

satisfiability unsatisfiability fractions


trivial satisfiability unsatisfiability fractions


n
n
n
n



n
n
n
n























l n









dlp median times




l n







dlp th percentile times





n
n
n
n



n
n
n
n























l n









sat median times




l n







sat th percentile times





n
n
n
n



n
n
n
n























l n



figure


























l n







method

area trivially satisfiable formulae set tests
smallest clause sizes presence affect difficulty generated formulae
two methods relatively close maximum difficulty method
generating somewhat harder formulae however method produces difficult formulae

dlpand sat much broader range
original method
changing formulae orders magnitude harder good
previous arguments contrary notwithstanding would significant number
reasonable test sets work allows consideration values

formulae totally impossible solve current systems resulting
reasonable test sets


fipatel chneider ebastiani

maximum modal depth method formulae similar
difficulty previously generated formulae still trivially unsatisfiable formulae
ones seriously affect difficulty test sets
odal epth



restricting attention maximum modal depth useful formulae maximum modal depth representative modal formulae general particularly
nested modal operators sticking maximum modal depth seriously limits
significance generated tests
would thus able perform interesting experiments larger maximum modal
depths performed set experiments maximum modal depth
started
set tests corresponds previously performed experiments
depth
old method time curves dominated half dome
shape whose steep side shows number trivially unsatisfiable formulae becomes
large formulae become otherwise easy solve shown figure fact nearly
unsatisfiable formulae trivially unsatisfiable
extremely serious flaw difficulty test set drastically affected
trivially unsatisfiable formulae changing viable solution
depth
formulae much difficult solve shown figure median
percentile exceeds timeout formulae determined unsatisfiable even
propositional variables
method shown figure formulae much difficult solve
old method abrupt drop propositional unsatisfiability
much easier solve generated trivially unsatisfiable formulae
appear interesting portion test sets
entirely suitable formulae
nevertheless choice parameters
becoming hard much early particular unsatisfiable formulae

solved

thus unsatisfiability plots cannot distinguished x axis
recall footnote however method provide advantages already providing
interesting set tests albeit one limited size









increasing



fiff

would able produce better test sets depth
greater one way
increase propositional probability something increasing
number propositional atoms thus decreasing difficulty generated formulae
would problematic previous generation methods would trivially
unsatisfiable formulae determining even smaller numbers clauses
method much
investigate increasing propositional probability ran collection tests
maximum modal depth
propositional probability old method
method tests given figures asymmetries

satisfiability unsatisfiability curves figure due fact
many tests solved dlp within time limit c f footnote

fiff







fia n ew g eneral ethod



g enerate r andom odal f ormulae

satisfiability unsatisfiability fractions


trivial satisfiability unsatisfiability fractions


n
n
n
n



n
n
n
n



























l n













dlp median times








l n











dlp th percentile times





n
n
n
n



n
n
n
n



























l n













sat median times








l n















sat th percentile times





n
n
n
n



n
n
n
n



























l n





figure



































l n







old method

expected old method produces large numbers trivially unsatisfiable formulae
trivially unsatisfiable formulae much earlier making tests considerably easier especially sat
method produces hard formulae ones quite bit easier


particular dlp solved instances within time limit
trivially unsatisfiable
formulae well formulae already unsatisfiable
significantly affect difficulty tests
method allows creation interesting tests modal depths greater
simply adjusting value level difficulty appropriate trivial unsatisfiability
whereas old method important feature test


fipatel chneider ebastiani

satisfiability unsatisfiability fractions


trivial satisfiability unsatisfiability fractions


n
n
n



















n
n
n











l n













dlp median times








l n











dlp th percentile times





n
n
n



















n
n
n











l n













sat median times








l n















sat th percentile times





n
n
n



















n
n
n











l n





figure



































l n







method

changing size clauses
increasing propositional probability formulae become propositional
source difficulty becomes propositional component modal component interested modal decision procedures
want main source difficulty propositional reasoning
decided therefore investigate different method modifying difficulty generated formulae instead allow number literals clause vary manner similar
number propositional atoms integer clause many literals otherwise allow literals clause probability









fia n ew g eneral ethod



g enerate r andom odal f ormulae

satisfiability unsatisfiability fractions


trivial satisfiability unsatisfiability fractions


n
n
n
n



n
n
n
n



























l n













dlp median times








l n











dlp th percentile times


n
n
n
n





n
n
n
n



























l n













sat median times








l n















sat th percentile times


n
n
n
n





n
n
n
n



























l n



figure



































l n







method

respectively determine number propositional atoms clause
number literals clause
generated cnf formulae


change




produces fewer disjunctive choices easier formulae
tests given figure
formulae much easier generated although still quite
hard form reasonable source testing data trivially unsatisfiable formulae appear large
numbers well formulae unsatisfiable relatively easy
illustrate reduction difficulty smaller values generated formulae

shown figure formulae even easier










fipatel chneider ebastiani

satisfiability unsatisfiability fractions


trivial satisfiability unsatisfiability fractions


n
n
n
n



n
n
n
n



























l n













dlp median times








l n











dlp th percentile times





n
n
n
n



n
n
n
n



























l n













sat median times








l n















sat th percentile times





n
n
n
n



n
n
n
n



























l n





figure
































fiff




l n







old method




trivially unsatisfiable formulae appear formulae
become unsatisfiable formulae become easy particularly sat
reasonable set formulae maximum modal depth


maximum modal depth formulae much representative formulae
maximum modal depth formulae neither easy hard current modal
decision procedures satisfiability transition investigated significant numbers
propositional variables
method provide collection test sets vary difficulty

varying previous comparative test sets varied problematic

interesting parameter sets become hard small values range











fia n ew g eneral ethod



g enerate r andom odal f ormulae

satisfiability unsatisfiability fractions


trivial satisfiability unsatisfiability fractions


n
n
n
n



n
n
n
n



























l n













dlp median times








l n











dlp th percentile times


n
n
n
n





n
n
n
n



























l n













sat median times










l n















sat th percentile times


n
n
n



















n
n
n











l n







figure


























fiff






l n







method




illustrate effects varying generated formulae


shown figure produces interesting set tests
varying
difficulty levels set appropriately trivially unsatisfiable formulae appear
formulae become unsatisfiable anyway trivially unsatisfiable formulae influence
difficulty test





fipatel chneider ebastiani

satisfiability unsatisfiability fractions


trivial satisfiability unsatisfiability fractions


n
n
n
n



n
n
n
n



























l n















dlp median times






l n











dlp th percentile times





n
n
n
n



n
n
n
n



























l n













sat median times








l n















sat th percentile times





n
n
n
n



n
n
n
n



























l n



figure

odal epth







































l n







method



method used generate interesting test sets modal depth depth
interesting previous methodseither formulae immensely difficult
behavior dominated trivial unsatisfiability
interesting levels difficulty reduce values much
larger formulae hard however
produce interesting test sets
shown figure relevant asymmetry satisfiable unsatisfiable rates curves


due high amount tests exceeding time limit hard

doable trivially un satisfiable formulas
even









fia n ew g eneral ethod



g enerate r andom odal f ormulae

satisfiability unsatisfiability fractions


trivial satisfiability unsatisfiability fractions


n
n
n
n
n



n
n
n
n
n



























l n













dlp median times








l n











dlp th percentile times





n
n
n
n
n



n
n
n
n
n



























l n













sat median times








l n















sat th percentile times





n
n
n
n
n



n
n
n
n
n



























l n



figure








































l n







method

method allows us fine control difficulty tests make test easier
reduce size clauses reducing value increase propositional probability

control missing previous method
restricted integral value
anyway set making much different resulted trivial
unsatisfiability maximum modal depths greater

cnf generation method advanced version
actually generator much general described far allow direct
specification probability distribution number propositional atoms clause


fipatel chneider ebastiani

satisfiability unsatisfiability fractions


trivial satisfiability unsatisfiability fractions


c
c
c
c



c
c
c
c

























l n









dlp median times






l n







dlp th percentile times





c
c
c
c



c
c
c
c

























l n



figure




























l n







method

allow distribution different modal depth top level allow
direct specification probability distribution number literals clause modal
depth thus probability distribution number propositional atoms depends
modal depth number literals clause
generalization shaping probability distributions
generator two parameters control shape formulae first parameter
list lists e g telling many disjuncts put disjunction
modal level internal list represents finite discrete probability distribution instance
says disjunctions disjunct disjuncts
disjunctions fixed length one element list frequency used
modal depth last possibilities e g maximum length
uniform distribution maximum length exponential distribution

second parameter list lists lists e g controls propositional modal rate top level elements modal depth
second level elements disjunctions disjunctions third
matters disjunctions three disjuncts instance says
disjunctions propositional atoms propositional atom propositional
atoms propositional atoms scheme discussed















fia n ew g eneral ethod



g enerate r andom odal f ormulae

satisfiability unsatisfiability fractions


trivial satisfiability unsatisfiability fractions


n
n
n
n



n
n
n
n



























l n















dlp median times



l n











dlp th percentile times
n
n
n
n



























l n













sat median times









l n















sat th percentile times


n
n
n
n



n
n
n
n



























l n







figure







n
n
n
n






































l n










old scheme
represented notice
first element distributions represents value whilst first element distributions represents value setting last element distribution zero
eliminates strictly propositional clauses main cause trivial unsatisfiability



section
way implement constraint







fipatel chneider ebastiani








function rnd cnf l n p c

repeat

rnd clause n p c
cl
return

generate distinct random clauses

discards




already occurs



function rnd clause n p c

rnd length c
select randomly clause length

select randomly prop modal rate
rnd propnum p k

repeat

j
generate p distinct random prop literals



rnd sign rnd atom n p c
generate k p distinct random modal literals

j p


rnd sign rnd atom n p c
fiff



discards cl contains repeated atoms

repeated atoms cl

return








function rnd atom n p c



return rnd propositional atom n select randomly prop atom

else


rand box
select randomly indexed box


rand clause n p c


return
figure schema cnf random generator
instance plots figures obtained following choices c p
fig
c
p
c advanced version
p advanced version


old












old
















generator works described figure function cl checks
rnd length c selects randomly clause length according th dis

tribution e g returns probability





fia n ew g eneral ethod







g enerate r andom odal f ormulae









probability rnd propnum p k selects randomly number propositional

th distribution e g

atoms per clause according
returns deterministically rnd sign
selects randomly positive negative sign equal probability repeated atoms cl
checks clause contains repeated atom sort cl returns clause sorted according

criterium rnd propositional atom n selects uniform probability one propo
sitional atoms rnd box selects uniform probability one indexed boxes

eliminating duplicated atoms clause take care disturb probabilities
first determining shape clause rows figure instantiating
propositional variables rows figure clause repeated atoms propositional modal instantiation rejected another instantiation shape performed
take care way would generate small atoms
fewer small atoms large atoms resulting greater chance rejecting small atoms
repetition
elimination duplicated atoms clause matter elimination redundancies elimination source flaws fact one might generate top level clauses






would make whole formula inconsistent















example try guess parameter set random generator potentially
generate following cnf formula
















































































top level unary binary
quick look set
ternary clauses depth unary binary clauses depth unary
clauses thus set
c

top level unary clauses represent fact empty list binary clauses propositional literal ternary clauses propositional literal
depth unary clauses propositional literals binary clauses propositional literal need provide information depth clauses purely
propositional thus set
p



two expressions normalized
c
p



notice setting obtained changing non zero values
non zero values turning zeros non zeros vice versa work
different probability instance turning first list allows generating
unary clauses top level anyway probability generator may still produce

formulae binary ternary clauses top level





fipatel chneider ebastiani

satisfiability unsatisfiability fractions


trivial satisfiability unsatisfiability fractions


n
n
n
n



n
n
n
n

























l n









dlp median times





l n







dlp th percentile times


n
n
n
n





n
n
n
n

























l n














l n









figure dlpwith


illustration general method present set tests


set tests
introduces small fraction single literal clauses contain modal literal except greatest
modal depth contain course single propositional literal tests
given figure trivial instances occur interesting zone generate
interesting test sets even modal depth




varying probability distributions depth
method provides ability fine tune distribution size propositional modal rate clauses every depth fine tuning large number
parameters far investigated distributions conform
scheme described ones correspond cnf generation method previously used
give example vary probability distributions nesting depth


clauses consider case






tests
given figure
parameter says probability distributions length clauses occurring
nesting depth respectively explicitly specified


fia n ew g eneral ethod



g enerate r andom odal f ormulae

satisfiability unsatisfiability fractions

trivial satisfiability unsatisfiability fractions









n
n
n
n
n
n



n
n
n
n
n
n






































l n









l n

dlp median times


dlp th percentile times


n
n
n
n
n
n



n
n
n
n
n
n






































l n













l n




figure dlpwith










considered last distribution default case depth thus top level clauses
average unary binary ternary clauses occurring depth
average unary binary



parameter says lists probability distributions propositional modal ratio
nesting depth respectively thus every depth unary clauses propositional literal binary clauses
propositional modal literal top level ternary clauses
propositional
literals equal probability



notice top level distributions identical figure whilst depth
ternary clauses higher fraction unary clauses slight modifica
tions allow reasonable test sets

moreover trivial instances nearly
disappeared

generality method



already observed horrocks et al normal modal logics
upward
loss restriction cnf formulae equivalence arbitrary


fipatel chneider ebastiani

normal modal formulae cnf formulae may wonder well generation technique covers whole space cnf formulae well approximate restricted
subclass space example represents instance general property random
generation technique present discuss
assume rnd cnf figure purely random generator e performs non deterministic choices independently pure random way course pseudorandom generators approximate feature moreover loss generality restrict
discussion cnf formulae repeated clauses top level repeated
atoms inside clause level atoms sorted within clause according generic function sort figure former allows considering formulae
already simplified latter allows considering one representative
class formulae equivalent modulo order permutations discussed giunchiglia



et al latter allows simplifying subformulae e g




























let sorted cnf formula depth top level clauses built


propositional atoms modal boxes
repeated
clause top level repeated atoms inside clause level construct







th element th sublist non zero clause length
occurring depth

b element th sub sublist th sublist non zero

clause length occurring depth contains propositional literals



one possible operative technique build works follows initialize list
sublists every depth level set th sublist follows










set size sublist maximum size clauses occurring depth


ii count number clauses length occurring depth
append sublist



initialize list sublists sub sublists every depth level
th sublist follows
look

ii





set size















sublist maximum size clauses occurring





set

depth

generate th sub sublist follows



look number clauses length occurring depth non zero set

length sub sublist else set



holds modal normal logics
upward conversion works recursively depth
formula leaves root time applying sub formulae propositional cnf conversion
transformation










preserves validity logics










fia n ew g eneral ethod



g enerate r andom odal f ormulae






occurring


count number clauses length
propositional literals append sub sublist



depth

example represents instance application technique construction

notice parameters verify points
probability distributions mimic actual number occurrences different kinds
clauses









theorem let rnd cnf purely random generator figure let sorted
cnf formula depth top level clauses built propositional atoms


modal boxes

repeated clause top level
repeated atoms inside clause level let built verify
let obtained respectively substituting
points
zero values non zero values









rnd cnf l n p c returns non zero probability
ii rnd cnf l n p c returns non zero probability









proof fully detailed proof reported appendix sketch main steps
following facts come straightforwardly induction structure



every propositional atom occurring depth returned non zero
probability rnd atom n p c rnd atom n p c

every modal atom occurring depth returned non zero probability rnd atom n p c returned non zero probability
rnd atom n p c














every clause occurring depth returned non zero probability
rnd clause n p c returned non zero probability
rnd clause n p c







thus every top level clause
returned rnd clause n p c rnd clause n p c
non zero probabilities respectively fact comes
straightforwardly returned rnd cnf l n p c rnd cnf l n p c
non zero probabilities respectively
q e
q e
theoretical viewpoint theorem shows generation technique
general every cnf formula exists choice parameters purely
random generator returns non zero probability
unique
course choice criterium suggested points
example setting obtained turning zeros non zeros would match
requirements extreme case might think general choices









c





p



guarantee every possible cnf formula within given bound clause size
non zero probability anyway theorem shows extending number non zeros
values probability generating decreases







fipatel chneider ebastiani

instance consider example turning first list would still
allow generating formula would allow generating unary clauses top level
probability
converges quickly



usually interested randomly generating one precise formula non zero
probability would rather small anyway rather randomly generate class formulae similar possible given target class formulae adding redundant non zeros
would extend range shapes formulae extending variance lowering resemblance
target class formulae

discussion
basic advanced method
testing method used two different levels depending attitude
skills experience user
basic usage clause length represented lists one non zero
element e g meaning clause length two adjacent non zero elements
e g meaning clause length probability respectively
similarly propositional modal rate represented lists one non zero element
e g meaning propositional literal per clause two nonzero adjacent elements e g meaning propositional
literals per clause probability respectively distributions vary
depth
basic way random generator used flawless extension cnf
method giunchiglia sebastiani allows setting clause length
fixed integer values non integer average values number parameters kept relatively
small allow coarse grained coverage significant subspace affordable number
tests











advanced usage possible apply finite probability distributions
moreover possible use different distributions different depths opens huge amount
possibilities requires skills experience user representation sophisticated multi level distributions may rather complicated may thus require practice
moreover usage complex distributions requires care presence non constant distributions clause length propositional modal rate may significantly enlarge variance
features generated formulae making effects tests unpredictable
instance dependent
order guide user provide general suggestions choosing parameter sets
testing session come theoretical issues practical experience
generator



avoid generating purely propositional top level clauses set p
see sections possible avoid generating unary top level clause set c
see section

sense free flaw highlighted work hustadt schmidt giunchiglia
et al



fia n ew g eneral ethod






g enerate r andom odal f ormulae

organizing testing session fix parameter sets according following order
directives
fix search mostly dominated propositional component
tends dominated modal component typically good start
ii fix substantially partitions independent increasing
samples tend likely satisfiable typically good start
iii set c increasing top level values c samples tend likely satisfiable
propositional component search increases transition area moves
right hardness peaks grow average values top level
distributions c typically good start
iv set p decreasing top level values p modal component search increases
top level distributions p average half top level atoms propositional section typically good start
v choice parameters increase n starting least maximum length c desired level hardness reached
vi make l vary within satisfiability transition area











dealing c p focus top level clause distributions first small variations
c p top level may cause big variations hardness satisfiability probability
variations lower levels typically cause much smaller effects




use convex distributions e g mean value
variance former much smaller latter




keep l ranging satisfiability transition area increasing l fraction
trivially unsatisfiable samples become relevant determine satisfiability transition
area make preliminary check samples per point say dichotomic search
unlike n parameters c p make formulas vary shape thus
suggest group together plots c p values increasing ns

whole large number parameters makes impossible cover parameter space
reasonable amount testing however cnf formula shape generated
method described section used produce random formulae reasonably
similar formula e interest
comparison old cnf method
whole method inherits features old cnf method


scalability increasing average clause length difficulty generated
scales thus possible compare performance different
systems scale increasing difficulty source difficulty e g
size depth etc
valid vs valid balance parameter allows tuning satisfiability rate formula
moreover possible choose generate testbeds satisfiable rate allows maximum uncertainty


fipatel chneider ebastiani

termination method allows generating test sets depth run
state art systems reasonable amount time
reproducibility testbed easy reproduce generators code
parameters values made publicly available
parameterization random generation cnf formulae fully parametric
data organization natural way use random generator generate tests
plot data increasing values one two parameters allows easy quantitative
qualitative evaluations performances different procedures test
moreover method improves cnf method following features
representativeness stated section cnf formulae represent formulae normal
upward equivalence preserving way converting
modal logics
modal formulae cnf theorem method allows finegrained sampling class cnf formulae









difficulty random cnf formulae

provide challenging test sets


well considered
state art procedures cnf formulae
challenges next generation systems course generate easy



control parameters allow controlling monotonically difficulty test

set e g increase reasonably sure mean median cpu time plots
increase parameter allows controlling satisfiability rate monotonicity
allows controlling one feature simply increasing decreasing one value thus
eliminating uninteresting areas input space
modal vs propositional balance size kripke spanned decision procedures increased exponentially higher modal depths reached test sets
moreover probability repeated top level atoms dramatically reduced consequently unlike tests hustadt schmidt giunchiglia et al
search longer dominated pure propositional component reasoning
empirical large number modal successors explored
finally method completely removes drastically reduces effects following

redundancy propositional modal redundancy already eliminated last versions
cnf method giunchiglia et al moreover method allows
eliminating strictly propositional clauses
triviality main cause trivial unsatisfiability removed trivially unsatisfiable
formulae relegated transition areas experiments
number possible distinct modal atoms increases hyper exponentially





horrocks et al

fia n ew g eneral ethod



g enerate r andom odal f ormulae

artificiality method allows user shape test formulae maximize resemblance expected typical inputs system course done within
limits imposed randomness irregular typical input formulas higher
variance randomly generated formulas lower average resemblance
typical input formulas
size method allows generating extremely hard reasonable size
comes analysis resulting data hard require big amounts
search branches modal successors generated search dominated
parsing data managing
generator presented horrocks patel schneider extends cnf generator giunchiglia et al however generator allows shaping probability
distributions c p different distributions every depth level principle
generator horrocks patel schneider allows setting probabilities


propositional modal atoms negated however feature used

muchin experiments horrocks patel schneider
different one experiment adds nothing generality generator
generator decided introduce
comparison qbf method
comparing cnf generation method qbf generation method
must notice far used different ways corresponding two different
test techniques briefly summarized section






tancs competition massacci tests performed single
data points presented form big tables entry consisting
number successful solutions rescaled geometrical mean cpu time
solutions two systems compared according number successful
solutions considering geometrical mean cpu time value even
due fact comparison geometrical means possible
computed number successful values accurate comparison
successful values method chosen guarantee fairness
comparison competitors key requirement competition
instead focused highlighting qualitative quantitative
behavior system thus preferred plots tables preferred
representing percentiles cpu times rather number successful solutions
geometrical mean times fact former require distinguish successful
non successful solutions thus much suitable plotting
comparison geometrical means makes sense data points
number successful solutions hard follow plot

case tests exceeding timeout geometrical means altered truncation introduced unsuccessful
solutions thus geometrical mean makes sense calculated successful
percentage successful solutions greater equal value th percentile influenced
truncation values introduced timeouts otherwise equal timeout value



fipatel chneider ebastiani

course generators used ways see heguiabehere de rijke
plots random qbf method comparing two approaches
organizing presenting data one goals restrict analysis
generation methods independently used far
qbf generation method massacci shares cnf generation
method several features particular scalability valid vs valid balance termination reproducibility parameterization data organization difficulty modal vs propositional balance redundancy triviality considerations identical analogous

method hold consider parameters instead parameters
following features instead deserve discussion





control parameters allow controlling monotonically difficulty test set
parameter allows controlling satisfiability rate however unlike cnf
case main parameters qbf generator e g direct meaning
wrt main characteristics resulting modal formulae e g modal depth
number propositional variables



representativeness general qbf formulae good representatives whole class
quantified boolean formulae way convert generic quantified boolean formula
qbf randomly generated qbf formulae used massacci restrict
fixed amount variables per alternation nevertheless class modalencoded qbf formulae restrict candidate kripke structures
regular structure imposed qbf binary search trees



artificiality unlike cnf case main parameters qbf generator e g
direct meaning wrt main characteristics resulting modal formulae
thus hard choose parameters random qbf generator resemble
expected typical inputs system
size one final random modal encoded qbf formulae size initial versions
translation method produced test sets gb range stressed much
data storage retrieval portion provers example running dlp formulae resulted timeout without significant search although encoding
significantly improved sense current versions still produce large modal
formulae mostly constrain kripke structures
similar considerations recently presented heguiabehere de rijke
whole believe qbf generation method still appealing two
methods co exist empirical test session
notice qbf denote class prenex cnf qbf formulae given alternation quantification
variables ending existential one followed cnf propositional formula conversion works lifting
quantifiers outside formula converting k cnf k dnf matrix innest quantifier
negating pushing negation recursively conversion truth preserving truth inverting




fia n ew g eneral ethod



g enerate r andom odal f ormulae

complexity issues
purely theoretical viewpoint remarked modal encoded qbf formulae capture
cnf formulae stuck np massacci statement
requires clarification
first test sets necessarily finite therefore makes sense attribute complexity
class thus speaking complexity classes test refer test sets
rather infinite sets formulae could generate could unbounded values
least one generation parameters particular statement means infinite set
qbf formulae unbounded number variables per alternation bounded alternation
depth complete garey johnson infinite set cnf formulae
bounded depth unbounded number propositional variables np halpern
secondly alternation depth variable number per alternation qbfanalogous
modal depth variable number respectively latter values
resulting modal formulae grow
fact qbf formulae bounded alternation
depth unbounded number variables per alternation give rise modal formulae
unbounded depth unbounded number variables
finally vs np issue massacci matter generators rather
matter generators used organized presented fact
far random cnf testbeds organized fixing parameters except
modal depth included making vary choice whose goal produce data plots
covering satisfiability transition area causes testbed formulae stuck np
avoid fact one may want make vary fix parameters
satisfiability unbounded depth bounded number propositional variables pspacecomplete halpern













asymptotic behavior
achlioptas et al presented study asymptotic behavior random csp
showed well known random generation reveal flaws

empirical tests probability trivially unsatisfiable tends


number variables gent et al lately explained discrepancy
theoretical empirical showing phenomenon happens significant

probability values reach current csp solvers
due possible presence implicit unary constraints causing variables value inadmissible occurs non zero probability non zero
probability variable may values inadmissible causes local inconsistency


whole easily revealed solver
fffi probability
situation tends zero analogous revealed random
sat generated constant probability generation model unary clauses gen



precisely massacci referred cnf formulae giunchiglia et al statement holds
cnf formulae
already noticed horrocks et al better qbf analogous modal depth total number
universally quantified variables
case fact modal
bounded depth
class qbf formulae bounded complete np possible guess tree witness
nodes













fipatel chneider ebastiani

erated non zero probability mitchell et al random qbf implicit
unit clauses e clauses containing one existential variable generated non zero
probability gent walsh random k sat model

occur friedgut achlioptas et al





generation model far complicated analyze first cnf
formulas much complicated structure random sat csp qbf formulas involving much wider number parameters second unlike discussed
constraints described cnf clauses picked uniform way probability


generating given cnf atom
varies strongly depth shape typically
much smaller generating propositional atom thus developing formal probabilistic analysis asymptotic behavior model reach scope
however provide heuristic considerations
simplest case allow generation unary clauses top level
c explicit unary constraints may still













implicit unary constraints e g
anyway simple heuristic consideration suggests given big numbers distinct cnf
modal atoms may potentially generated situations unlikely
standard sat model
implicit unit constraints
free asymptotic local inconsistency
critical case allow generation unary clauses top level
c x case generate unary clauses thus
local inconsistencies non zero probability thus simple way avoid
restrict values allow unary top level clauses set c
notice however hardly becomes practice respect condition described sections avoiding purely propositional top level
clauses set p fact given big numbers distinct
cnf modal atoms may potentially generated probability two contradic

tory modal unit clauses

within formula becomes quickly negligible even
small depths
notice intentionally considered modal implicit unary constraints




e g
mutually inconsistent modal literals e g





fact detecting inconsistencies requires investigating recursively
modal successors therefore trivial





























conclusions future work
shown test sets method basic form allows us generate wider
variety covering input space better tune difficulty
parameter values including first reasonable test sets maximum modal depths
produce interesting scaling dimensions varying number

propositional variables example vary propositional probability
size clauses vary difficulty interesting neither restricted
integral values extremely fine control difficulty test sets thus create





recall number possible distinct cnf
depth horrocks et al





atoms increases hyper exponentially modal

fia n ew g eneral ethod



g enerate r andom odal f ormulae

interesting test sets satisfiable unsatisfiable transition explorable current
decision procedures
drastically reduced influence trivial unsatisfiability flawed previous
cnf methodologies retain desirable features previous cnf methodologies test sets easy reproduce large
full methodology introduced possibility shaping distribution
size propositional modal rate clauses done level modal
depth allows generating much wider variety covering principle whole

input space instance produced full test set figure
moved closer application data significant direct applications
modal decision procedures thus guidance sorts inputs would close
application inputs case believe moved closer ever possibility
approximating given classes input formulae
still much work done generation methodology produce
test sets try test sets modal decision procedures may want
uncover parameter settings full generality generation method needed produce
reasonable test sets

acknowledgments
would thank thomas eiter three anonymous reviewers valuable comments helpful suggestions greatly improved quality second author
supported miur cofin project code c alculemus
ihp rtn ec project contract code hprn ct thus benefited financial contribution commission ihp programme

appendix fully detailed proof theorem



theorem let rnd cnf purely random generator figure let sorted
cnf formula depth top level clauses built propositional atoms


modal boxes

repeated clause top level
repeated atoms inside clause level let built verify
section let obtained respectively substituting
points
zero values non zero values









rnd cnf l n p c returns non zero probability
ii rnd cnf l n p c returns non zero probability









proof proof works induction structure first prove



every propositional atom occurring depth returned non zero
probability rnd atom n p c rnd atom n p c


every modal atom occurring depth returned non zero probability rnd atom n p c returned non zero probability
rnd atom n p c














fipatel chneider ebastiani



every clause occurring depth returned non zero probability
rnd clause n p c returned non zero probability
rnd clause n p c







point every top level clause returned rnd clause n p c

rnd clause n p c probabilities respectively
repeated clause recalling property probabilities











































































































notice strictly monotonic components thus
need prove points









let propositional atom occurring depth

rnd atom n p c rnd atom n p c invoke rnd propositional atom n

returns probability

let
boxed clause occurring depth


occurs depth notice instead
cannot occur
clause
depth maximum depth











inductive hypothesis follows point returned non zero
probability rnd clause n p c rnd atom n p c invokes

non zero probrand box rand clause n p c returns


ability
ii inductive hypothesis follows point returned nonzero probability
rnd clause n p c rnd atom n p c

vokes rand box rand clause n p c returns
non thus
zero probability















propositional literals occurs depth
let clause length
sorted represented
denote modal literals

denote propositional literals
inductive hypothesis follows point propositional literal
rnd sign rnd atom n p c
returned non zero probability
follows point modal literals
returned non zero

rnd sign rnd atom n p c
probability

































fia n ew g eneral ethod



g enerate r andom odal f ormulae





construction th element th sublist non zero thus
returned non zero probability rnd length c

construction element th sub sublist th sublist

non zero thus returned non zero probability rnd propnum p j
similarly repeated atoms inside clause returned
rnd clause n p c non zero probability






































































expression right strictly monotonic terms
within domain definition
ii inductive hypothesis follows point propositional literal

rnd sign
returned non zero probability

rnd atom n p c follows point modal literals



turned non zero probability
rnd sign rnd atom di n p c

construction th element th sublist non zero thus
returned non zero probability rnd length c construction


construction element th sub sublist th

sublist non zero thus returned non zero probability




rnd propnum p j construction
repeated atoms inside clause follows returned rnd clause di n p c non zero probability


































strict monotonicity



























q e

references
achlioptas kirousis l kranakis e krizanc molloy stamatiou c
random constraint satisfaction accurate picture smolka g ed principles practice constraint programming vol lecture notes computer
science pp berlin springer
beckert b gore r free variable tableaux propositional modal logics automated
reasoning analytic tableaux related methods international conference tableaux vol lecture notes artificial intelligence pp berlin springer





notice conditioned probability probability propositional literal provided
clause literals matches fact input rnd propnum p j



fipatel chneider ebastiani

cadoli giovanardi schaerf evaluate quantified boolean
formulae proceedings th national conference artificial intelligence aaai pp menlo park ca aaai press
friedgut e sharp thresholds graph properties k sat journal
american mathematical society
garey r johnson computers intractability guide theory
np completeness w h freeman york
gent p macintyre e prosser p smith b walsh random constraint satisfaction flaws structure journal constraints
gent p walsh beyond np qsat phase transition proceedings
sixteenth national conference artificial intelligence eleventh innovative applications artificial intelligence conference aaai pp menlo park ca aaai
press
giunchiglia e giunchiglia f sebastiani r tacchella sat vs translation
decision procedures modal logics comparative evaluation journal applied nonclassical logics
giunchiglia e giunchiglia f tacchella sat decision procedures classical
modal logics journal automated reasoning
giunchiglia f sebastiani r building decision procedures modal logics propositional decision procedures case study modal k proceedings thirteenth
conference automated deduction vol lecture notes artificial intelligence
pp berlin springer
giunchiglia f sebastiani r building decision procedures modal logics propositional decision procedures case study modal k information computation

haarslev v moller r racer system description proceedings international joint conference automated reasoning ijcar vol lecture notes
computer science pp siena italy springer
halpern j effect bounding number primitive propositions depth
nesting complexity modal logic artificial intelligence
halpern j moses guide completeness complexity modal logics
knowledge belief artificial intelligence
heguiabehere j de rijke random modal qbf test set ijcar workshop
issues design experimental evaluation system modal temporal
logics pp
heuerding jager g schwendimann seyfreid propositional logics
computer baumgartner p hahnle r posegga j eds automated reasoning
analytic tableaux related methods international conference tableaux vol
lecture notes artificial intelligence pp berlin springer
heuerding schwendimann benchmark method propositional modal
logics k kt tech rep iam university bern switzerland


fia n ew g eneral ethod



g enerate r andom odal f ormulae

horrocks expressive description logic fact fiction cohn g schubert l shapiro c eds principles knowledge representation reasoning
proceedings sixth international conference kr pp morgan kaufmann
publishers san francisco california



horrocks patel schneider p f evaluating optimised decision procedures propositional modal
satisfiability journal automated reasoning
horrocks patel schneider p f sebastiani r analysis empirical testing
modal decision procedures logic journal igpl
hustadt u schmidt r empirical analysis modal theorem provers journal
applied non classical logics
hustadt u schmidt r weidenbach c mspass subsumption testing spass
lambrix p borgida lenzerini moller r patel schneider p eds proceedings international workshop description logics dl pp
massacci f design tableaux non classical modal system competition
automated reasoning analytic tableaux related methods international conference tableaux vol lecture notes artificial intelligence pp berlin
springer
mitchell selman b levesque h hard easy distributions sat
proceedings tenth national conference artificial intelligence pp san
jose california american association artificial intelligence
patel schneider p f dlp system description franconi e giacomo g macgregor r nutt w welty c sebastiani f eds collected papers international description logics workshop dl pp available ceur ws vol
http sunsite informatik rwth aachen de publications ceur ws
patel schneider p f sebastiani r system methodology generating random modal formulae proceedings international joint conference automated
reasoning ijcar vol lecture notes computer science pp
siena italy springer
pitt j cunningham j distributed modal theorem proving ke minglioli p
moscato u mindici ornaghi eds automated reasoning analytic tableaux related methods international conference tableaux vol lecture
notes artificial intelligence pp berlin springer
tacchella sat system description lambrix p borgida lenzerini moller
r patel schneider p eds proceedings international workshop description logics dl pp




