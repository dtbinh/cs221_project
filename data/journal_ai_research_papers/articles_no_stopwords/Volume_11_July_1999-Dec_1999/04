journal artificial intelligence

submitted published

unifying class representation formalisms

calvanese dis uniroma
lenzerini dis uniroma
nardi dis uniroma

diego calvanese
maurizio lenzerini
daniele nardi

dipartimento di informatica e sistemistica
universita di roma la sapienza
via salaria roma italy
abstract

notion class ubiquitous computer science central many formalisms
representation structured knowledge used knowledge representation
databases study basic issues underlying representation formalisms single common characteristics distinguishing features
investigation leads us propose unifying framework able capture fundamental aspects several representation languages used different contexts
proposed formalism expressed style description logics
introduced knowledge representation means provide semantically well founded
basis structural aspects knowledge representation systems description logic
considered subset first order logic nice computational characteristics quite expressive features novel combination constructs
studied distinguishing constructs number restrictions generalize existence functional dependencies inverse roles allow one refer inverse
relationship possibly cyclic assertions necessary capturing real world
domains able precisely combination constructs makes
logic powerful enough model essential set features defining class structures
common frame systems object oriented database languages semantic data
consequence established correspondences several significant extensions
formalisms become available high expressiveness logic
propose need capturing reasoning different contexts forces us distinguish unrestricted finite model reasoning notable feature proposal
reasoning cases decidable argue virtue high expressive
power associated reasoning capabilities unrestricted finite
logic provides common core class representation formalisms
introduction

many fields computer science formalisms representation objects
classes motschnig pitrik mylopoulous generally speaking object denotes
element domain interest class denotes set objects common characteristics use term class representation formalism refer formalism
allows one express several kinds relationships constraints e g subclass constraints holding among classes meaningful set applications moreover
class formalisms aim taking advantage class structure order provide
information whether class consistent e admits least one object
whether class subclass another class generally whether given constraint
c ai access foundation morgan kaufmann publishers rights reserved

ficalvanese lenzerini nardi

holds given set classes characterization clear
formalisms referred deal structural aspects objects
classes include features specification behavioral properties
objects
three main families class formalisms identified first one
comes knowledge representation particular work semantic networks
frames see example lehmann sowa second one originates
field databases particular work semantic data see
example hull king third one arises work types programming
languages object oriented systems see example kim lochovsky
past several attempts establish relationships among
families class formalisms see section brief survey proposed solutions
fully general formalism capturing modeling constructs
reasoning techniques families still missing address
proposing class representation formalism description logics
brachman levesque schmidt schau smolka donini lenzerini nardi
schaerf comparing formalisms
description logics structured knowledge described means called concepts
roles denote unary binary predicates respectively starting set
atomic symbols one build complex concept role expressions applying suitable
constructors characterize description logic formally concepts interpreted
subsets domain roles binary relations domain constructs
equipped precise set theoretic semantics common constructs include
boolean operations concepts quantification roles example concept
person u child male denotes set individuals instances concept
person connected role child instances concept male
concept child denotes individuals connected role child
individual constructs considered important include
general forms quantification number restrictions allow one state limits
number connections individual may via certain role constructs
roles intersection concatenation inverse description logic knowledge base
expressing intensional knowledge modeled domain built stating inclusion
assertions concepts satisfied knowledge base
assertions used specify necessary necessary sucient conditions
individuals instances certain concepts reasoning knowledge bases includes
detection inconsistencies knowledge base determining whether concept
populated model knowledge base checking subsumption e whether
instances concept necessarily instances another concept
knowledge base
propose description logic called aluni quite expressive
includes novel combination constructs including number restrictions inverse roles
inclusion assertions restrictions cycles features make aluni powerful
enough provide unified framework frame systems object oriented languages
semantic data establishing precise correspondence framebased language style one proposed fikes kehler


fiunifying class representation formalisms

entity relationship model chen object oriented language style
one introduced abiteboul kanellakis specifically identify
relevant features model classes cited settings
specification class formalisms equivalently expressed
knowledge base aluni way able identify commonalities
among families specificities family therefore even though
specific features every family addressed aluni able
formalism proposed provides important features
currently missing family although relevance often stressed
sense unifying framework points possible developments languages belonging
three families
one fundamental reason regarding aluni unifying framework class
representation formalisms reasoning aluni hard nonetheless decidable
shown calvanese lenzerini nardi calvanese c consequently
language features arising different frameworks build class representations
given common semantic account combined expressive setting
one retains capability solving reasoning tasks combination constructs
included language makes necessary distinguish reasoning respect
finite e finite domain reasoning respect unrestricted
calvanese c devises suitable techniques unrestricted finite model
reasoning enable reasoning different contexts arising assuming finite
domain often case field databases assuming domain
infinite discuss reasoning aluni compare
reasoning class representation formalisms
summarizing framework provides adequate expressive power account
significant features major families class formalisms moreover
equipped suitable techniques reasoning finite unrestricted
therefore believe aluni captures essential core class representation
formalisms belonging three families mentioned
organized follows next section present formalism
sections discuss three families class formalisms namely frame
languages semantic data object oriented data showing basic
features captured knowledge bases aluni final sections contain review
related work including discussion reasoning aluni class formalism
concluding remarks
unifying class representation language

section present aluni class formalism style description logics
dls brachman levesque schmidt schau smolka donini et al
donini lenzerini nardi nutt dls domain interest modeled means
concepts roles denote classes binary relations respectively generally
speaking dl formed three basic components
description language specifies construct complex concept role
expressions called simply concepts roles starting set atomic


ficalvanese lenzerini nardi
construct

atomic concept
atomic negation
conjunction
disjunction
universal quantification
number restrictions
atomic role
inverse role

syntax


c u c
c c
r c
nr
nr
p
p

semantics
ai
n ai
c c
c c
fo j ri c g
fo j fo j ri g ng
fo j fo j ri g ng
p
f j p g

table syntax semantics aluni
symbols applying suitable constructors set allowed constructs
characterizes description language
knowledge specification mechanism specifies construct dl knowledge base properties concepts roles asserted
set basic reasoning tasks provided dl
rest section describe specific form three components assume
aluni
description language

aluni

description language aluni called aluni concepts roles formed according syntax shown table denotes atomic concept p atomic
role c arbitrary concept expression r arbitrary role expression n nonnegative integer increase readability concept expressions introduce following
abbreviations
atomic concept
u atomic concept
r r
nr nr u nr

concepts interpreted subsets domain roles binary relations
domain intuitively represents negation atomic concept interpreted
complement respect domain interpretation c u c represents
conjunction two concepts interpreted set intersection c c represents
disjunction interpreted set union consequently represents whole domain
denotes cardinality set



fiunifying class representation formalisms

empty set r c called universal quantification roles used
denote elements interpretation domain connected role r
instances concept c nr nr called number restrictions impose
instances restrictions minimum maximum number objects
connected role r p called inverse role p represents inverse
binary relation denoted p
formally interpretation consists interpretation domain
interpretation function maps every concept c subset c
every role r subset ri according semantic rules specified table
sets c ri called extensions c r respectively
example consider concept expression
enrolls student u enrolls u enrolls u
teaches professor gradstudent u teaches u
advcourse

specifying constraints object university course expression ects
fact course enrolls students restrictions minimum maximum
number enrolled students role teaches inverse constructor
state property course taught exactly one individual
professor graduate student finally negation used express disjointness
concept denoting advanced courses
knowledge bases

aluni

aluni knowledge base expresses knowledge classes relations
modeled domain formally defined triple k p finite set
atomic concepts p finite set atomic roles finite set called inclusion
assertions assertion form
c
atomic concept c arbitrary concept expression inclusion
assertion states means concept c necessary properties element domain
order instance atomic concept formally interpretation satisfies
inclusion assertion c ai c interpretation model knowledge
base k satisfies inclusion assertions k finite model model finite
domain
example cont assertion
enrolls student u enrolls u enrolls u
course
teaches professor gradstudent u teaches
makes use complex concept expression state necessary conditions object
instance concept course


ficalvanese lenzerini nardi

aluni restrictions imposed form inclusion assertions may
assume particular rule cyclic assertions e assertions
concept expression right hand side refers directly indirectly via
assertions atomic concept left hand side presence cyclic assertions
different semantics may adopted nebel one defined called descriptive
semantics accepts interpretations satisfy assertions knowledge base
hence interprets assertions constraints domain modeled inclusion
assertions descriptive semantics claimed provide intuitive
buchheit donini nutt schaerf alternative semantics proposed
fixpoint constructions nebel schild de giacomo lenzerini
b hence allow define unique way interpretation concepts
general cycles knowledge base increase complexity reasoning nebel
baader calvanese b require special treatment reasoning procedures baader buchheit donini schaerf reason many dl
systems assume knowledge base acyclic brachman mcguinness patel schneider
alperin resnick borgida bresciani franconi tessaris however assumption unrealistic practice cycles definitely necessary correct modeling
many application domains indeed use cycles allowed data used
databases shown following sections order capture semantics
aluni possibility cyclic assertions fundamental
besides inclusion assertions dl systems make use equivalence assertions buchheit et al express necessary sucient conditions
object instance concept although possibility ruled aluni
limit ability capturing frame systems database
constraints expressed correspond naturally inclusion assertions
reasoning

aluni

basic tasks consider reasoning aluni knowledge base concept
consistency concept subsumption
concept consistency deciding whether concept c consistent
knowledge base k written k j c e whether k admits model
c
concept subsumption deciding whether concept c subsumed
concept c knowledge base k written k j c c e whether c c
model k
inclusion number restrictions inverse roles aluni ability
aluni arbitrary possibly cyclic inclusion assertions allows one construct knowledge base certain concept consistent necessarily empty extension
finite knowledge base similarly subsumption relation two
concepts may hold infinite knowledge base ruled finite
considered


fiunifying class representation formalisms
keven p
fnumber eveng
p fdoublesg
set assertions consists






number
even

doubles u doubles even
number u doubles u doubles number

figure aluni knowledge base two concepts equivalent finite

let keven knowledge base shown figure intuitively assertions keven state number even number doubles
numbers double even even number number doubles
one number doubles numbers observe model keven universal quantifications together functionality doubles assertions imply
eveni numberi direct inclusion assertion even number implies
eveni numberi therefore two concepts cardinality since
one sub concept domain finite extensions coincide
necessarily hold infinite domains fact names chosen suggest
already infinite model knowledge base number even interpreted
differently model obtained taking natural numbers domain interpreting number whole domain even even numbers doubles set
f n n j n g
example shows aluni finite model property
states concept consistent knowledge base knowledge base admits
finite model concept nonempty extension therefore important
distinguish reasoning respect unrestricted reasoning
respect finite call unrestricted concept consistency written k j u c
unrestricted concept subsumption written k j u c reasoning tasks
described e carried without restricting attention finite
corresponding reasoning tasks carried considering finite called finite
concept consistency written k j f c finite concept subsumption written
k j f c
example cont summing previous considerations say number
subsumed even keven e keven j u number even finitely subsumed e
keven j f number even equivalently numberu even consistent keven e keven j u
number u even finitely consistent e keven j f number u even
distinguishing feature aluni reasoning finite unrestricted case decidable particular unrestricted concept satisfiability concept
subsumption decidable deterministic exponential time de giacomo lenzerini
example



ficalvanese lenzerini nardi

calvanese et al since reasoning strict sublanguages aluni already exptime hard calvanese c known computationally optimal finite concept consistency aluni decidable deterministic exponential time
finite concept subsumption general case decidable deterministic double
exponential time calvanese c precise discussion methods reasoning aluni provided section detailed account adopted
analysis computational complexity presented calvanese c
next sections two forms reasoning respect unrestricted
finite capture reasoning tasks typically considered different
formalisms structured representation knowledge
frame systems

frame languages idea expressing knowledge means frames
structures representing classes objects terms properties instances
must satisfy properties defined frame slots constitute items
frame definition since large number frame systems developed
different goals different features dls bear close relationship kl one family
frame systems woods schmolze however would consider frame
systems general perspective discussed example karp karp
myers gruber establish correspondence aluni knowledge bases
context
remark restricting attention aspects related
taxonomic structure moreover discussed consider assertional knowledge
bases intensional knowledge characterized terms inclusion assertions rather
definitions addition consider features cannot captured
first order framework default values slots attached procedures
specification overriding inheritance policies issues concerning modeling
aspects dls addressed donini lenzerini nardi nutt schaerf
donini nardi rosati within modal nonmonotonic extension dls
syntax frame systems

make correspondence precise need fix syntax semantics frame
systems consider unfortunately accepted standard chosen
use basically notation adopted fikes kehler used
kee system
frame knowledge base denoted f formed set frame
slot names constituted set frame definitions following form
definition

frame f kb f e
kee trademark intellicorp note kee user directly specify knowledge base
notation allowed define frames interactively via graphical system interface



fiunifying class representation formalisms
course kb university
enrolls
valueclass student
cardinality min
cardinality max
memberslot taughtby
valueclass union gradstudent
professor
cardinality min
cardinality max

frame

bascourse kb university
course
memberslot taughtby
valueclass professor

frame

memberslot

superclasses

professor

frame

student

frame

kb

university

university

gradstudent kb university
student
memberslot degree
valueclass string
cardinality min
cardinality max

frame

superclasses

advcourse kb university
course
memberslot enrolls
valueclass intersection

frame

superclasses

gradstudent
undergrad

kb

undergrad kb university
student

frame

superclasses



cardinality max

figure kee knowledge base
e frame expression e expression formed according following syntax
e superclasses f fh
memberslot
valueclass h
cardinality min
cardinality max n

memberslot sk
valueclass hk
cardinality min mk
cardinality max nk
f denote frame slot names respectively n denote positive integers
h denotes slot constraint specified follows
h

fj

intersection h h j
union h h j
h

readers familiar kee system point omit
specification sub classes frame present kee since directly derived
specification super classes
example figure shows simple example knowledge base modeling situation
university expressed frame language presented frame course


ficalvanese lenzerini nardi

represents courses enroll students taught graduate students
professors cardinality restrictions used impose minimum maximum number
students may enrolled course express course taught
exactly one individual frame advcourse represents courses enroll graduate
students e students already degree basic courses hand may
taught professors
semantics frame systems

give semantics set frame definitions resort interpretation terms
first order predicate calculus hayes according interpretation frame names
treated unary predicates slots considered binary predicates
frame expression e interpreted predicate logic formula e x one
free variable consists conjunction sentences obtained super class
specification slot specification particular super classes f fh

f x fh x
slot specification
memberslot
valueclass h
cardinality min
cardinality max n

x vh
ym j yi yj x x ym
yn x x yn wi j yi yj
assumption within one frame definition occurrences x refer
free variable finally constraints slots interpreted conjunction disjunction
negation respectively e
intersection h h interpreted h x h x
union h h
interpreted h x h x
h
interpreted h x
frame definition
frame f kb f e
considered universally quantified sentence form
x f x e x
whole frame knowledge base f considered conjunction first order sentences corresponding frame definitions f
regard frame definitions necessary conditions commonplace
frame systems known assertional frame systems opposed definitional systems
frame definitions interpreted necessary sucient conditions


fiunifying class representation formalisms

order enable comparison formalisms representing structured knowledge restrict attention reasoning tasks involve frame knowledge base
independently assertional knowledge e frames instances fikes kehler
mention several reasoning services associated frames
consistency checking amounts verifying whether frame f satisfiable
knowledge base particular involves reasoning cardinalities
checking whether filler given slot belongs certain frame
inheritance case amounts ability identifying
frames general given frame sometimes called super karp
et al properties general frames inherited
specific one reasoning therefore general ability
check mutual relationhips frame descriptions knowledge base
reasoning services formalized first order semantics follows
definition let f frame knowledge base f frame f say f
consistent f first order sentence f x f x satisfiable moreover say
frame description e general f f f j x f x e x
relationship frame systems

aluni

first order semantics given allows us establish straightforward relationship
frame languages aluni indeed present translation frame
knowledge bases aluni knowledge bases
first define function maps frame expression aluni concept
expression follows
every frame name f mapped atomic concept f
every slot name mapped atomic role
every slot constraint mapped follows
union h h
mapped h h
intersection h h mapped h u h
h
mapped h
every frame expression form
superclasses f fh
memberslot
valueclass h
cardinality min
cardinality max n

memberslot sk
valueclass hk
cardinality min mk
cardinality max nk


ficalvanese lenzerini nardi
k p
fcourse advcourse bascourse professor student gradstudent undergrad stringg
p fenrolls taughtby degreeg
set assertions consists










course
advcourse
bascourse
gradstudent
undergrad













enrolls student u enrolls u enrolls u
taughtby professor gradstudent u taughtby
course u enrolls gradstudent u undergrad u enrolls
course u taughtby professor
student u degree string u degree
student

figure aluni knowledge base corresponding kee knowledge base figure
mapped class expression
f u u fh u
h u u n u

sk hk u mk sk u nk sk




mapping allows us translate frame knowledge base aluni knowledge base
specified following definition
aluni knowledge base f p corresponding frame
knowledge base f obtained follows
consists one atomic concept f frame name f f
p consists one atomic role slot name f
consists inclusion assertion
f e
frame definition
frame f kb f e
f
definition

example cont illustrate translation frame knowledge base figure corresponding aluni knowledge base shown figure


fiunifying class representation formalisms

correctness translation follows correspondence settheoretic semantics aluni first order interpretation frames see example
hayes borgida donini et al observe inverse roles
fact necessary formalization frames indeed possibility referring
inverse slot rarely considered frame knowledge representation systems
exceptions reported karp due absence inverse roles distinction
reasoning finite unrestricted necessary consequently
mentioned forms reasoning captured unrestricted concept consistency
concept subsumption aluni knowledge bases summarized following
theorem
theorem let f frame knowledge base f frame f e frame description f f e translations aluni following
hold

f consistent f f j u f
e general f f f j u f e

claim directly follows semantics frame knowledge bases
translation dls adopted
theorem becomes possible exploit methods unrestricted reasoning
aluni knowledge bases order reason frame knowledge bases since
reasoning e g kee already exptime complete pay terms computational complexity expressiveness added constructs aluni fact
resorting correspondence aluni becomes possible add frame systems
useful features possibility specifying inverse slot karp
still retain ability reason exptime
proof

semantic data

semantic data introduced primarily formalisms database schema design
provide means model databases much richer way traditional data
supported database management systems becoming
important adopted recent database design methodologies
computer aided software engineering tools
widespread semantic data model entity relationship er model introduced chen become standard extensively used design
phase commercial applications commonly accepted er notation classes called
entities represented boxes whereas relationships entities represented
diamonds arrows entities called isa relationships represent inclusion assertions links entities relationships represent er roles number
restrictions associated dashed links used whenever restrictions refined
specific entities finally elementary properties entities modeled attributes
eliminate

aluni inverse roles resulting dl finite model property


ficalvanese lenzerini nardi

whose values belong one several predefined domains integer string
boolean
er model provide constructs expressing explicit disjointness disjunction entities extensions model allow use generalization hierarchies
represent combination two constructs order keep presentation simple consider generalization hierarchies formalization provide
although addition would straightforward similarly omit attributes relations
relevant aspects er model captured aluni
thus reasoning er schema reduced reasoning corresponding
aluni knowledge base since aluni equipped capabilities reason knowledge
bases respect finite unrestricted see section reduction
shows reasoning er model generally semantic data
decidable
case frame systems restrict attention aspects
constitute core er model reason consider features
keys weak entities introduced literature chen
appear formalizations er model methodologies
conceptual modeling model proposal treatment keys description
logics presented borgida weddell
order establish correspondence er model aluni present
formal syntax semantics er schemata
syntax entity relationship model

although er model become industrial standard several variants
extensions introduced differ minor aspects expressiveness
notation chen teorey batini ceri navathe thalheim
er schemata usually defined graphical notation particularly
useful easy visualization data dependencies well suited
purposes therefore chosen formalization er model abstracts
respect important characteristics allows us develop correspondence
aluni
following two finite sets x call function subset x
x labeled tuple labeled tuple maps xi x yi
f kg denoted x xk yk write xi denote yi
er schema tuple ls att rel card
ls finite alphabet partitioned set es entity symbols set attribute
symbols set us role symbols set rs relationship symbols set ds
domain symbols domain symbol associated predefined basic domain
dbd assume basic domains pairwise disjoint
es es binary relation es
att function maps entity symbol es labeled tuple ds

definition



fiunifying class representation formalisms

function maps relationship symbol rs us labeled tuple
es assume without loss generality
role specific exactly one relationship e two relationships
r r rs r r rel r u e uk ek rel r
u e uk ek fu uk g fu uk g disjoint
role u us relationship r entity e
rel r u e
card function es rs us f g satisfies following condition relationship r rs rel r u e uk ek
card e r u defined u ui f kg e ei
denotes exive transitive closure first component
card e r u denoted cmin e r u second component
cmax e r u stated otherwise cmin e r u assumed
cmax e r u assumed
specifying formal semantics er schemata give intuitive description
components schema relation isa relationship entities
need make special assumption form acyclicity
injectivity function att used model attributes entities example
att associates labeled tuple integer string entity e e
two attributes whose values integers strings respectively simplicity
assume attributes single valued mandatory could easily handle multivalued attributes associated cardinalities function rel associates set roles
relationship symbol r determining implicitly arity r role
u set distinguished entity called primary entity u r database
satisfying schema instances primary entity allowed participate
relationship via role u function card specifies cardinality constraints e
constraints minimum maximum number times instance entity may
participate relationship via role since constraints meaningful
entity effectively participate relationship function defined
sub entities primary entity special value used restriction
posed maximum cardinality constraints used specify existence
dependencies functionality relations cosmadakis kanellakis
often used restricted form minimum cardinality
maximum cardinality cardinality constraints form considered
introduced already abrial subsequently studied grant
minker lenzerini nobili ferg ye parent spaccapietra
thalheim
example figure shows simple er schema modeling state affairs similar
one represented kee knowledge base figure used standard graphic
notation er schemata except dashed link represents refinement
cardinality constraint participation sub entity case advcourse
relationship case enrolling


rel



ficalvanese lenzerini nardi

tof



course



ein



teaching

enrolling

tby



eof



teacher

student




advcourse

degree string

gradstudent

figure er schema
semantics entity relationship model

semantics er schema given specifying database states
consistent information structure represented schema formally database
state b corresponding er schema ls att rel card constituted
nonempty finite set b assumed disjoint basic domains function b
maps
every domain symbol ds corresponding basic domain dbd
every entity e es subset e b b
every attribute set ab b sd ds dbd
every relationship r rs set rb us labeled tuples b
elements e b ab rb called instances e r respectively
database state considered acceptable satisfies integrity constraints
part schema captured definition legal database state
definition database state b said legal er schema
ls att rel card satisfies following conditions
pair entities e e es e e holds e b e b
entity e es att e ah dh instance
e e b f hg following holds
exactly one element ai abi whose first component e
second component ai element dibd
relationship r rs rel r u e uk ek instances
r form u e uk ek ei eib f kg


fiunifying class representation formalisms
number





even

doubles



figure er schema corresponding example
relationship r rs rel r u e uk ek
f kg entity e es e ei instance e e
holds
cmin e r ui fr rb j r ui eg cmax e r ui

notice definition database state ects usual assumption databases
database states finite structures see cosmadakis kanellakis vardi
fact basic domains required finite legal database state
schema finite set values basic domains actually interest
define active domain bact database state b set elements basic
domains dbd ds effectively appear values attributes b formally
bact fd dbd j ds e b e ab g
since b finite contains finite number attributes functional
definition bact finite
reasoning er model includes verifying entity satisfiability deducing inheritance entity satisfiability amounts checking whether given entity populated
legal database state atzeni parker jr lenzerini nobili di battista
lenzerini corresponds notion concept consistency dls deducing
inheritance amounts verifying whether databases legal schema
every instance entity instance another entity implied isa relationships arise different reasons trivially transitive closure
explicit isa relationships present schema subtle ways specific
patterns cardinality restrictions along cycles schema requirement
database state finite lenzerini nobili cosmadakis et al
figure shows er schema modeling situation knowledge
base example arguing exactly example conclude two
entities number even denote set elements every finite database legal
schema although isa relation number even stated explicitly
implied however due cycle involving relationship two entities due
particular form cardinality constraints
example



ficalvanese lenzerini nardi
relationship entity relationship schemata

aluni

different forms reasoning er schemata captured finite
concept consistency finite concept subsumption aluni correspondence
two formalisms established defining translation er schemata aluni
knowledge bases proving correspondence legal database
states finite derived knowledge base
definition let ls att rel card er schema aluni knowledge base p defined follows
set atomic concepts contains following elements
domain symbol ds atomic concept
entity e es atomic concept e
relationship r rs atomic concept r
set p atomic roles contains following elements
attribute atomic role
relationship r rs rel r u e uk ek k atomic roles
u uk
set assertions contains following elements
pair entities e e es e e assertion
e e

entity e es att e ah dh assertion
e u u ah dh u u u ah
relationship r rs rel r u e uk ek assertions
r u e u u uk ek u u u u uk
ei ui r
f kg

relationship r rs rel r u e uk ek
f kg entity e es e ei
cmin e r ui assertion
e ui

n cmax e r ui assertion
e n ui

pair symbols x x es rs ds x x x rs ds
assertion
x x



fiunifying class representation formalisms
k p
fcourse advcourse teacher student gradstudent teaching enrolling stringg
p ftof tby ein eof degreeg
set assertions consists


























teaching
enrolling
course
advcourse
teacher
student
gradstudent

tof course u tof u
tby teacher u tby
ein course u ein u
eof student u eof
tof teaching u tof u
ein enrolling u ein u ein
course u ein
tby teaching
eof enrolling u eof u eof
student u degree string u degree



figure aluni knowledge base corresponding er schema figure
illustrate translation er schema figure
knowledge base captures exactly semantics shown figure
brevity disjointness assertions omitted assertions concept
left hand side collapsed
translation makes use inverse attributes number restrictions capture
semantics er schemata observe means inverse constructor
binary relationship could treated simpler way choosing traversal direction
mapping relationship directly role notice assumption acyclicity
resulting knowledge base unrealistic case order exploit correspondence reasoning er model need techniques deal inverse
attributes number restrictions cycles together shown example combination factors causes finite model property fail hold need
resort reasoning methods finite
fact reduce reasoning er model finite model reasoning aluni
knowledge bases purpose define mapping database states corresponding er schema finite interpretations knowledge base derived
due possible presence relations arity greater mapping however
one one first need characterize interpretations knowledge base
directly correspond database states
definition let ls att rel card er schema defined
interpretation relation descriptive every relationship r
rs rel r u e uk ek every r


ui ui
example cont
aluni

ik



ficalvanese lenzerini nardi

intuitively extension relationship database state set labeled tuples
set contain element twice therefore implicit
semantics er model cannot two labeled tuples connected
roles relationship exactly elements domain model
aluni knowledge base corresponding er schema hand tuple
represented individual condition implicit anymore
cannot imposed aluni suitable assertions following lemma however shows
need explicit condition interested reasoning
aluni knowledge base corresponding er schema due fact
restrict considering relation descriptive
er schema aluni knowledge base obtained
according definition c concept expression c finitely consistent
finite relation descriptive model c
lemma let

let finite model c build finite relationdescriptive model starting applying following construction
relationship rs
let model obtained previous step let r rs rel r
u e uk ek next relationship apply construction construct model ir condition satisfied relationship r
given individual r r denote ui f kg unique
individual e r e ui ei ei f kg define
x u e uk ek fr r j ui ei f kgg call con ict set
set x u e uk ek one element con ict set x u e uk ek
randomly choose one individual r say others induce con ict
u e uk ek call conf finite set objects inducing con ict
u e uk ek
define interpretation conf disjoint union conf copies one copy
denoted iz every set z conf denote dz copy iz individual
since disjoint union two aluni knowledge base
model conf model let iz iz two copies conf call
exchanging uk rz uk rz operation conf consisting replacing uk iz
pair rz uk rz rz uk rz time replacing uk iz
pair rz uk rz rz uk rz intuitively exchanging uk rz uk rz
individuals rz rz induce con icts anymore
construct conf interpretation ir follows r conf
z conf r z exchange uk rz uk rznfrg possible
con icts thus eliminated con ict created hence
ir condition r satisfied still ir model
c ir indeed straightforward check induction every concept
expression c appearing z conf c dz c ir thus
assertions still satisfied ir c ir
proof









fiunifying class representation formalisms

following correspondence legal database states
er schema relation descriptive resulting aluni knowledge base
established
proposition every er schema ls att rel card exist two
mappings ffs database states corresponding finite interpretations translation fis finite relation descriptive interpretations database states
corresponding

legal database state b ffs b finite model
symbol x es rs ds x b x ffs b

finite relation descriptive model fis legal database state
entity e es e e fis symbol x rs ds
x x fis

proof

given database state b define interpretation ffs b

follows
b bact sr rs rb
symbol x es rs ds
x x b

relationship r rs rel r u e uk ek
ui f r e j r rb r ui eg f kg




let b legal database state prove claim sucient satisfies
every assertion assertions satisfied since b satisfies set inclusion
extensions corresponding entities respect assertions let e es
entity att e ah dh consider instance e e
f hg exactly one element ei
e ei ai moreover ei di e e b definition legal
database state exactly one element ai abi ai bi whose first component e
moreover second component ei ai element di di respect
assertions let r rs relationship rel r u e uk ek
consider instance r r f kg
exactly one element ei r ei ui moreover
ei ei r rb definition legal database state r labeled tuple
form u e uk e k e eib f kg therefore r function
defined fu uk g ei unique equal e moreover
ei ei eib assertions satisfied since first component
element ui element rb r respect assertions
let r rs relationship rel r u e uk ek let e es
entity e ei f kg cmin e r ui


ficalvanese lenzerini nardi

consider instance e e least pairs
ui e second component since assertions satisfied know
first component pairs instance r definition
legal database state least labeled tuples rb whose ui component
equal e ui contains least pairs whose second component equal
e respect assertions proceed similar way finally assertions
satisfied since first definition basic domains pairwise disjoint disjoint
b set labeled tuples second element b labeled tuple
third labeled tuples corresponding different relationships cannot equal since
defined different sets roles
let finite relation descriptive interpretation basic domain
ds let fid function dbd one one onto since
finite basic domain contains countable number elements function
exists order define fis first specify mapping associates
individual element follows
e entity e es
r relationship r rs rel r u e uk ek
individuals dk di ui f kg

u uk dk

basic domain ds fid
otherwise

pair individuals set
x x ffi x j x x g
model rules define every indeed
assertions instance one atomic concept corresponding
relationship basic domain case instance atomic
concept corresponding entity moreover r relationship r rs
rel r u e uk ek assertions f kg
exactly one element di di ui model
uniquely determined choose nondeterministically
one possible value
define database state b fis corresponding
b n







r rs r ds

symbol x es rs ds x b x

dicult see model b defined way legal
database state active domain sd ds


fiunifying class representation formalisms

following theorem allows us reduce reasoning er schemata finite model
reasoning aluni knowledge bases
theorem let er schema e e two entities translation following holds

j f e
e inherits e j f e e
b part proposition
proof let b legal database state e


b


ffs b finite model e

let e finitely consistent lemma finite relationdescriptive model e part proposition fis
database state legal e b
let j f e e e u e finitely consistent
lemma finite relation descriptive model e
e part proposition fis database state legal
e b e b therefore e inherit e
assume e inherit e database state b legal
instance e e b e e b part proposition
ffs b finite model e e ffs b e e ffs b therefore
j f e e
e satisfiable

theorem allows us effectively exploit reasoning methods developed aluni order reason er schemas complexity resulting method
reasoning er schemata exponential observe however known
reasoning er schemata exponential calvanese lenzerini b
precise computational complexity still open
moreover exploiting correspondence aluni becomes possible add
er model general semantic data several features modeling
primitives currently missing considered important fully
take account reasoning schemata additional features include
example possibility specify use arbitrary boolean combinations entities
refine properties entities along isa hierarchies
object oriented data

object oriented data proposed goal devising database formalisms could integrated object oriented programming systems kim
subject active area database field
following features
rely notion object identifier extensional level opposed
traditional data value oriented notion class
intensional level


ficalvanese lenzerini nardi

structure classes specified means typing inheritance

previous section present common basis object oriented data
class formalisms introducing language specifying object oriented
schemata schemata correctly represented aluni knowledge
bases analysis concentrate attention structural aspects objectoriented data one characteristics object oriented provide
mechanisms specifying dynamic properties classes objects typically
definition methods associated classes aspects outside
scope investigations nevertheless argue general techniques schema level
reasoning particular type consistency type inference profitably exploited
restricted forms reasoning methods abiteboul kanellakis ramaswamy waller

syntax object oriented model

define simple object oriented language style popular
featuring complex objects object identity although refer specific
formalism model inspired ones presented abiteboul kanellakis
hull king
definition object oriented schema tuple cs ds
cs finite set class names denoted letter c
finite set attribute names denoted letter
ds finite set class declarations form
class c c ck type
denotes type expression built according following syntax


cj

union tk end j
set j
record ak tk end
ds contains exactly one declaration class c cs
figure shows fragment object oriented schema corresponding
kee knowledge base figure
class declaration imposes constraints instances class refers
part class declaration allows one specify inclusion sets instances
involved classes type part specifies type expression structure
assigned objects instances class
example



fiunifying class representation formalisms
class teacher type
union professor gradstudent
end
class gradstudent student type
record
degree string
end

class course type
record
enrolls set student
taughtby teacher
end

figure object oriented schema
semantics object oriented model

meaning object oriented schema given specifying characteristics
instance schema definition instance makes use notions object
identifier value
let us first characterize set values constructed set symbols
called object identifiers given finite set symbols denoting real world objects set
vo values inductively defined follows
vo
v vk vo fjv vk jg vo
v vk vo v ak vk vo
nothing else vo
database instance j schema cs ds constituted
finite set oj object identifiers
mapping j assigning class cs subset oj
mapping j assigning value voj object oj
although set voj values constructed set oj object identifiers
infinite database instance one needs consider finite subset voj
definition given object oriented schema instance j set vj
active values respect j constituted
set oj object identifiers
set values assigned j elements oj including values
explicitly associated object identifiers used form values
interpretation type expressions j defined interpretation function j assigns type expression subset voj following conditions satisfied
c j j c


ficalvanese lenzerini nardi

union tk end j j tkj
set j ffjv vk jg j k vi j f kgg
record ak tk end j f v ah vh j h k
vi tij f kg
vj voj j fk hgg
notice instances type record may components specified
type class thus open semantics records typical
object oriented data abiteboul kanellakis
order characterize object oriented data consider instances
admissible schema
definition let cs ds object oriented schema database instance
j said legal respect declaration
class c c cn type
ds holds c j cij f ng j c j j
therefore legal database instance type expressions present
schema determine finite set active values must considered construction
values limited depth type expressions
relationship object oriented schemata

aluni

establish relationship aluni object oriented language presented
done providing mapping object oriented schemata aluni
knowledge bases since interpretation domain aluni knowledge bases consists
atomic objects whereas instance object oriented schema assigned possibly
structured value see definition vo need explicitly represent
notions underlie object oriented language particular correspondence concepts classes one must explicitly account type structure
class accomplished introducing aluni concepts abstractclass
represent classes rectype settype represent corresponding types
associations classes types induced class declarations well
basic characteristics types modeled means roles functional role value
association classes types role member used specifying
type elements set moreover concepts representing types assumed
mutually disjoint disjoint concepts representing classes constraints
expressed adequate inclusion assertions part knowledge base
going define
first define function maps type expression aluni concept
expression follows
every class c mapped atomic concept c
every type expression union tk end mapped tk


fiunifying class representation formalisms

every type expression set mapped settype u member
every attribute mapped atomic role every type expression

record ak tk end mapped

u u u
ak tk u ak

rectype u

define aluni knowledge base corresponding object oriented schema
aluni knowledge base p corresponding objectoriented schema cs ds obtained follows
definition

fabstractclass rectype settypeg f c j c cs g
p fvalue memberg f j g
consists following assertions
abstractclass
rectype
settype





value
value
value u rectype

class declaration
class c c cn type
ds inclusion assertion
c abstractclass u c u u cn u value
translation observe inverse roles necessary
formalization object oriented data indeed possibility referring
inverse attribute generally ruled however strongly limits
expressive power data model pointed recent papers see example
albano ghelli orsini cattell note use number restrictions
limited value corresponds existence constraints functionality
whereas union used general form example kee system
illustrate translation fragment object oriented
schema figure corresponding aluni knowledge base shown figure
example cont



ficalvanese lenzerini nardi
k p
fabstractclass rectype settype string






p







course teacher professor student gradstudentg
fvalue member enrolls taughtby degreeg

set assertions consists
course



teacher
gradstudent




abstractclass
rectype
settype

abstractclass u
value rectype u enrolls u taughtby u
enrolls settype u member student u taughtby teacher
abstractclass u value gradstudent professor
abstractclass u student u
value rectype u degree string u degree

value
value
value u rectype

figure aluni knowledge base corresponding object oriented schema figure
discuss effectiveness translation first observe
knowledge base resulting translation object oriented schema
may admit direct counterpart among legal database instances
precisely interpretation database instance
viewed directed labeled graph case interpretation nodes domain
individuals arcs labeled roles case database instance
nodes object identifiers active values arc connects object
identifier associated value case labeled value part
sub structure representing set record value case labeled member
attribute accordance type value legal database instance
value v represented sub structure form finite tree v
root set record values intermediate nodes objects identifiers leaves clearly
substructure contain cycles conversely model may
cycles involving nodes instances settype rectype
roles different value call cycles bad model containing bad cycles
cannot put directly correspondence legal database instance due
open semantics records one cannot adopt different translation bad cycles
model ruled
aluni

example

consider object oriented schema containing single class declaration

class c type record record record c end end end


fiunifying class representation formalisms


c

value

v

rectype







c

v

rectype
value

v



rectype

v



rectype

v

rectype



figure model containing cycles
translated
c abstractclass u
value rectype u u rectype u u rectype u u c
figure shows model represented graph clarity named
instances c hence abstractclass instances rectype
v observe two different types cycles graph cycle involving individuals
v v v cause since contains arc labeled value
part structure constituting complex value fact v represents
record value hand due bad cycle involving v
v individual v represents together connected via v record infinite
depth
nevertheless establish correspondence finite possibly
containing bad cycles legal instances object oriented schema
achieved unfolding bad cycles model infinite trees obviously
unfolding cycle infinite tree generates infinite number nodes
would correspond infinite database state however restrict duplication
individuals represent set record values thus instances settype
rectype instances abstractclass instead duplicated process
unfolding therefore number remains finite moreover since set possible
active values associated object identifier bound depth schema
fact block unfolding bad cycles finite tree depth equal depth
schema
let us first formally define depth object oriented schema
definition type expression define depth inductively follows

c


max
union tk end
ik depth ti
depth




depth


set


max ik depth ti record ak tk end
depth object oriented schema defined maximum depth type
expression


ficalvanese lenzerini nardi


c

value





v

rectype





v

rectype





c

rectype



v



rectype



v



rectype





value






v



v

rectype

v

rectype



v

rectype



figure unfolded version model figure
introduce notion unfolding aluni interpretation
definition let object oriented schema translation aluni
finite interpretation call unfolded version interpretation obtained
follows individual v part bad cycle unfold bad cycle
infinite tree v root generating individuals instances
rectype settype nonnegative integer call unfolded version
denoted ijm interpretation obtained truncating depth infinite tree
generated process unfolding
example cont figure shows unfolded version model figure
notice bad cycle unfolded infinite tree arcs labeled
lead instance abstractclass duplicated

correctness sanctioned following proposition
proposition every object oriented schema depth exist mappings

ffs instances finite interpretations ffv active values
instances domain elements finite interpretations
legal instance j ffs j finite model type
expression v vj v j ffv v ffs j

fis finite interpretations instances fiv domain elements unfolded versions finite interpretations active
values instances finite model fis legal
instance concept translation type expression
ijm ijm fiv fis

proof

follows

given database instance j define interpretation ffs j


fiunifying class representation formalisms

ffv function mapping every element vj distinct element ffs j
therefore ffs j defined set elements ffv v v vj moreover

denote id rec set elements ffs j corresponding object
identifiers record set values respectively
interpretation atomic concepts defined follows
c ffs j fffv j j c g
every c corresponding class name c
abstractclassffs j id
rectypeffs j rec
settypeffs j set
interpretation atomic roles defined follows
ffs j f j rec ffv ffv g
every corresponding attribute name


j


member
f j set ffv fj ffv jgg


j

value
f j ffv ffv j g

prove type v vj v j ffv v
ffs j first part thesis follows definition ffs j
proof induction structure type expression
base case c e class name c j ffv c ffs j
vice versa c ffs j ffv c j
inductive case record ak tk end rectype u
u u u ak tk u ak assume v tij
iff ffv v ti ffs j f kg v j iff ffv v ffjs j
suppose v j e v v ah vh h k vi ti
f kg induction hypothesis ffv vi ti ffs j f kg
definition ffs ffv v rectypeffs j ffv v ffv vi ai ffs j f kg
roles corresponding attribute names functional therefore ffv v
ffs j
conversely suppose ffv v ffs j f kg
exactly one di ffs j di ai ffs j moreover di ffs j
definition ffs v v ahj vh h k vi ffv di
f kg induction hypothesis vi ti f kg therefore v
record ak tk end j
cases union tk end set treated analogously
given finite model depth define legal database instance fis
follows
fiv function mapping every element ijm distinct element vfis
following conditions satisfied
ofis vfis set elements fiv abstractclassijm


ficalvanese lenzerini nardi

rectypeijm idi ai ijm f kg

individual jm attribute ijm
fiv fiv ak fiv dk
settypeijm di memberijm f kg
individual ijm member ijm fiv
ffiv fiv dk g
every class name c fis c ffiv j c ijm g
fis f v j fiv fiv v valueijm g
first prove concept translation type expression
ijm ijm fiv fis proof
induction structure concept expression inductive part
restrict attention case record types
base case c e atomic
concept

c ijm fiv
c fis vice versa c fis fiv c ijm
inductive case rectype u u u u ak itk u
ak record ak tk end assume ti jm iff
fiv tifis f kg ijm iff fiv fis
suppose ijm rectypeijm eachi f kg
individual di di ti jm di ai jm construction
fiv v ah vh h k moreover induction hypothesis fiv di
tifis therefore fiv fis
conversely suppose fiv fis e fiv v ah vh h k
vi tifis f kg induction hypothesis di fiv vi ti ijm
f kg definition fiv rectypeijm di ai ijm
f kg since roles corresponding attribute names functional
ijm
remains declaration
class c c cn type


ds c fis cifis f ng b fis c fis fis
follows fact contains assertion c c u u cn
definition fis
b follows shown fact ijm still satisfies
assertion c abstractclass u value fact c let
unique individual valuei since model
argue jm part bad cycle
ijm coincide sub structure rooted formed individuals reached via
member roles corresponding attributes done otherwise ijm
sub structure expanded finite tree since construction depth tree
least depth connections individuals preserved ijm
follows ijm


fiunifying class representation formalisms

basic reasoning services considered object oriented databases subtyping
check whether type denotes subset another type every legal instance type
consistency check whether type consistent legal instance proposition forms reasoning fully captured finite concept
consistency finite concept subsumption aluni knowledge bases
object oriented schema two type expressions
translation following holds

theorem let





j f
subtype j f

consistent


proof analogous proof theorem makes use proposition instead proposition
correspondence aluni established theorem allows us make
use reasoning techniques developed aluni reason object oriented schemas
observe reasoning object oriented already pspace hard bergamaschi
nebel thus known exponential however resorting
aluni becomes possible take account reasoning extensions
object oriented formalism extensions useful conceptual modeling
already proposed literature cattell barry first
considerations developed er model regard use arbitrary boolean
constructs classes applied object oriented setting provides
disjunction admit form negation additional features added
object oriented inverses attributes cardinality constraints set valued
attributes general forms restrictions values attributes
proof

related work

section brie discuss recent correspondence class
formalisms techniques reasoning aluni class representation
formalisms
relationships among class formalisms

past several attempts establish relationships among class
formalisms blasius hedstuck rollinger lenzerini nardi simi
carry comparative analysis class languages attempt provide unified
view analysis makes clear several diculties arise identifying common
framework formalisms developed different areas recent papers address
example analysis relationships frame languages
types programming languages carried borgida bergamaschi
sartori piza schewe schmidt use frame languages enrich
deductive capabilities semantic object oriented data


ficalvanese lenzerini nardi

artale cesarini soda study reasoning object oriented data
presenting translation dls style one discussed section however
proposed translation applicable case shema contains recursive
class declarations limitation present work bergamaschi nebel
formalism derived dls used model complex objects
computing subsumption classes provided
recent survey application dls data management
presented borgida application task data modeling reasoning
techniques derived correspondences presented sections discussed
detail calvanese lenzerini nardi
recently proposals integrate object oriented logic
programming paradigms kifer wu kifer lausen wu proposals
however directly related present work since aim providing mechanisms
computing structured objects rather means reasoning conceptual
object oriented representation domain interest
reasoning

aluni

class representation formalisms

equipped techniques reason respect unrestricted
respect finite brie sketch main ideas underlying reasoning
contexts detailed account reasoning techniques carried calvanese
c
aluni

unrestricted model reasoning

remind reasoning knowledge base respect unrestricted amounts
check concept consistency e determine whether knowledge base admits
possibly infinite model given concept nonempty extension concept
subsumption e determine whether extension one concept contained extension another concept every model including infinite ones knowledge
base
method reason aluni respect unrestricted exploits well known
correspondence dls propositional dynamic logics pdls kozen tiuryn
class logics specifically designed reason programs
correspondence first pointed schild relies substantial
similarity interpretative structures formalisms allows one exploit
reasoning techniques developed pdls reason corresponding dls particular
since aluni description language aluni includes construct inverse roles
correspondence one resort converse pdl variant pdl includes
converse programs kozen tiuryn however presence number
restrictions aluni direct correspondence pdls cannot rely
traditional techniques reasoning pdls recently encoding techniques
developed allow one eliminate number restrictions knowledge base
preserving concept consistency concept subsumption de giacomo lenzerini
encoding applicable knowledge bases formulated expressive variants dls
particular used reduce unrestricted model reasoning aluni knowledge


fiunifying class representation formalisms

bases concept consistency concept subsumption deciding satisfiability
formula converse pdl reasoning converse pdl decidable exptime kozen
tiuryn since encoding polynomial de giacomo lenzerini
obtain exptime decision procedure unrestricted concept consistency concept
subsumption aluni knowledge bases simplified form encoding
applied decide unrestricted concept consistency aluni presented
calvanese et al
finite model reasoning

remind reasoning knowledge base respect finite amounts
check finite concept consistency finite concept subsumption
finite knowledge base must considered
finite model reasoning techniques reduction reasoning pdls
applicable indeed pdl formula corresponding aluni knowledge base
contains constructs converse programs corresponding inverse roles
functionality direct inverse programs thus formula variant pdl
finite model property vardi however encoding
functionality one obtains converse pdl formula since converse pdl finite
model property fischer ladner formula satisfiable
finitely satisfiable shows encoding number restrictions particular
encoding functionality preserving unrestricted satisfiability preserve
finite satisfiability de giacomo lenzerini
finite model reasoning aluni one adopt different technique
idea separating reasoning process two distinct phases see calvanese c
full details first phase deals constructs except number restrictions
builds expanded knowledge base constructs embedded implicitly
concepts roles second phase assertions involving number restrictions
used derive expanded knowledge base system linear inequalities
system defined way solutions certain type acceptable solutions
directly related finite original knowledge base particular
acceptable solution one directly deduce cardinalities extensions concepts
roles possible finite model proposed method allows one establish aluni
exptime decidability finite concept consistency special cases finite concept
subsumption resorting complicated encoding one obtain exptime
decision procedure finite concept subsumption aluni general calvanese
c
reasoning respect finite investigated context dependency theory databases shown casanova fagin papadimitriou
relational model functional inclusion dependencies interact dependency
implication finite case differs one unrestricted case
implication arbitrary functional inclusion dependencies undecidable
chandra vardi mitchell functional unary inclusion dependencies
solvable polynomial time finite unrestricted case cosmadakis
et al


ficalvanese lenzerini nardi

consistency respect finite schemata expressed enriched entityrelationship model cardinality constraints shown decidable polynomial
time lenzerini nobili calvanese lenzerini b extend decidability include isa relationships calvanese lenzerini
exptime decidability reasoning expressive object oriented model
computing refinement ordering types analogue concept hierarchy
framework object oriented model discussed lecluse richard
reasoning strict sublanguage aluni obtained omitting inverse roles
number restrictions already exptime hard calvanese b therefore known
deciding unrestricted concept consistency subsumption finite concept
consistency essentially optimal
conclusions

presented unified framework representing information class structures
reasoning pursued goal looking class
formalisms proposed different fields computer science namely frame systems
used knowledge representation semantic object oriented data used
databases rephrasing framework description logics resulting description logic called aluni includes combination constructs addressed
although constructs previously considered separately
major achievement demonstration class formalisms
given precise characterization means powerful fragment first order logic
thus regarded essential core class representation formalisms
belonging three families mentioned several consequences
first formalisms considered enriched constructs
originating formalisms treated general framework sense
work reported provides common powerful representation formalism
may contribute significant developments languages belonging three
families example usage inverse roles concept languages greatly enhances
expressivity roles combination isa number restrictions union enriches
reasoning capabilities available semantic data
secondly comparison class formalisms fields knowledge representation conceptual data modeling makes feasible address development
reasoning tools support conceptual modeling calvanese et al fact reasoning capabilities become especially important complex scenarios arising
heterogenous database applications data warehousing line work among
motivations developing systems expressive description logics horrocks
horrocks patel schneider lead extending language
description logics support information integration specifically conceptual
modeling data warehouses calvanese de giacomo lenzerini nardi rosati


fiunifying class representation formalisms
references

abiteboul kanellakis p ramaswamy waller e method schemas tech
rep cs brown university earlier version appeared

abiteboul kanellakis p object identity query language primitive
proceedings acm sigmod international conference management data
pp
abrial j r data semantics klimbie j w koffeman k l eds data
base management pp north holland publ co amsterdam
albano ghelli g orsini r relationship mechanism strongly typed
object oriented database programming languages proceedings seventeenth international conference large data bases vldb pp
barcelona
artale cesarini f soda g describing database objects concept
language environment ieee transactions knowledge data engineering

atzeni p parker jr formal properties net knowledge representation schemes proceedings second ieee international conference data
engineering icde pp los angeles
baader f augmenting concept languages transitive closure roles alternative terminological cycles proceedings twelfth international joint
conference artificial intelligence ijcai sydney australia
baader f automata theory characterizing semantics terminological
cycles annals mathematics artificial intelligence
batini c ceri navathe b conceptual database design entityrelationship benjamin cummings publ co menlo park california
bergamaschi nebel b acquisition validation complex object database
schemata supporting multiple inheritance applied intelligence
bergamaschi sartori c taxonomic reasoning conceptual design acm
transactions database systems
blasius k h hedstuck u rollinger c r eds sorts types artificial
intelligence vol lecture notes artificial intelligence springer verlag
borgida type systems knowledge representation natural semantics
specifications description logics journal intelligent cooperative information
systems
borgida description logics data management ieee transactions knowledge data engineering
proc th

symp principles database systems pods



ficalvanese lenzerini nardi

borgida relative expressiveness description logics predicate logics
artificial intelligence
borgida weddell g e adding functional dependencies description logics
proceedings fifth international conference deductive object oriented
databases dood
brachman r j levesque h j tractability subsumption frame
description languages proceedings fourth national conference artificial
intelligence aaai pp
brachman r j levesque h j eds readings knowledge representation
morgan kaufmann los altos
brachman r j mcguinness l patel schneider p f alperin resnick l borgida
living classic use kl one language
sowa j f ed principles semantic networks pp morgan kaufmann
los altos
bresciani p franconi e tessaris implementing testing expressive
description logics preliminary report borgida lenzerini nardi
nebel b eds working notes description logics workshop technical
report rap dipartimento di informatica e sistemistica universita di roma
la sapienza pp rome italy
buchheit donini f nutt w schaerf refined architecture
terminological systems terminology schema views artificial intelligence

buchheit donini f schaerf decidable reasoning terminological
knowledge representation systems journal artificial intelligence

calvanese finite model reasoning description logics aiello l c doyle
j shapiro c eds proceedings fifth international conference
principles knowledge representation reasoning kr pp morgan
kaufmann los altos
calvanese b reasoning inclusion axioms description logics
complexity wahlster w ed proceedings twelfth european conference artificial intelligence ecai pp john wiley sons
calvanese c unrestricted finite model reasoning classbased representation formalisms
ph thesis dipartimento di informatica e sistemistica universita di roma la sapienza available
http www dis uniroma pub calvanes thesis ps gz
calvanese de giacomo g lenzerini nardi rosati r description
logic framework information integration proceedings sixth international


fiunifying class representation formalisms
conference principles knowledge representation reasoning kr

pp

calvanese lenzerini making object oriented schemas expressive
proceedings thirteenth acm sigact sigmod sigart symposium
principles database systems pods pp minneapolis acm press
addison wesley
calvanese lenzerini b interaction isa cardinality
constraints proceedings tenth ieee international conference data
engineering icde pp houston texas ieee computer society press
calvanese lenzerini nardi unified framework class representation formalisms doyle j sandewall e torasso p eds proceedings
fourth international conference principles knowledge representation
reasoning kr pp bonn morgan kaufmann los altos
calvanese lenzerini nardi description logics conceptual data
modeling chomicki j saake g eds logics databases information
systems pp kluwer academic publisher
casanova fagin r papadimitriou c h inclusion dependencies
interaction functional dependencies journal computer system
sciences
cattell r g g ed object database standard odmg morgan kaufmann los altos release
cattell r g g barry k eds object database standard odmg
morgan kaufmann los altos
chandra k vardi implication functional inclusion
dependencies undecidable siam journal computing
chen p p entity relationship model toward unified view data acm
transactions database systems
cosmadakis kanellakis p c functional inclusion dependencies
graph theoretical kanellakis p c preparata f p eds advances
computing vol pp jai press
cosmadakis kanellakis p c vardi polynomial time implication
unary inclusion dependencies journal acm
de giacomo g lenzerini boosting correspondence description logics propositional dynamic logics proceedings twelfth national
conference artificial intelligence aaai pp aaai press mit
press


ficalvanese lenzerini nardi

de giacomo g lenzerini b concept language number restrictions
fixpoints relationship calculus proceedings eleventh european
conference artificial intelligence ecai pp
di battista g lenzerini deductive entity relationship modeling ieee
transactions knowledge data engineering
donini f lenzerini nardi nutt w complexity concept
languages information computation
donini f lenzerini nardi nutt w schaerf queries rules
definitions foundations knowledge representation reasoning springerverlag
donini f lenzerini nardi schaerf reasoning description
logics brewka g ed principles knowledge representation studies logic
language information pp csli publications
donini f nardi rosati r non first order features concept languages gori soda g eds proceedings fourth conference
italian association artificial intelligence ai ia vol lecture notes
artificial intelligence pp springer verlag
ferg cardinality concepts entity relationship modeling proceedings
tenth international conference entity relationship er pp

fikes r kehler role frame representation reasoning communications acm
fischer j ladner r e propositional dynamic logic regular programs
journal computer system sciences
grant j minker j numerical dependencies gallaire h minker j
nicolas j eds advances database theory ii plenum publ co york
hayes p j logic frames metzing ed frame conceptions text
understanding pp walter de gruyter co republished brachman
levesque
horrocks expressive description logic fact fiction proceedings
sixth international conference principles knowledge representation
reasoning kr pp
horrocks patel schneider p f optimizing description logic subsumption
journal logic computation
hull r b king r semantic database modelling survey applications
issues acm computing surveys


fiunifying class representation formalisms

karp p design space knowledge representation systems tech rep sri
ai technical note sri international menlo park ca
karp p myers k l gruber generic frame protocol proceedings
fourteenth international joint conference artificial intelligence ijcai
vol pp montreal canada
kifer lausen g wu j logical foundations object oriented framebased languages journal acm
kifer wu j logic programming complex objects journal
computer system sciences
kim w introduction object oriented databases mit press
kim w lochovsky f h eds object oriented concepts databases
applications acm press addison wesley york
kozen tiuryn j logics programs van leeuwen j ed handbook
theoretical computer science formal semantics pp elsevier
science publishers north holland amsterdam
lecluse c richard p modeling complex structures object oriented databases
proceedings eighth acm sigact sigmod sigart symposium principles database systems pods pp
lehmann f ed semantic networks artificial intelligence pergamon press
oxford
lenzerini nardi simi eds inheritance hierarchies knowledge
representation programming languages john wiley sons chichester
lenzerini nobili p satisfiability dependency constraints entityrelationship schemata information systems
mitchell j c implication functional inclusion dependencies
information control
motschnig pitrik r mylopoulous j classes instances journal intelligent cooperative information systems
nebel b terminological cycles semantics computational properties sowa
j f ed principles semantic networks pp morgan kaufmann los
altos
piza b schewe k schmidt j w term subsumption type constructors yesha ed proceedings international conference information
knowledge management cikm pp baltimore


ficalvanese lenzerini nardi

schild k correspondence theory terminological logics preliminary report
proceedings twelfth international joint conference artificial intelligence
ijcai pp sydney australia
schild k terminological cycles propositional calculus doyle j
sandewall e torasso p eds proceedings fourth international conference principles knowledge representation reasoning kr pp
bonn morgan kaufmann los altos
schmidt schau smolka g attributive concept descriptions complements artificial intelligence
sowa j f ed principles semantic networks morgan kaufmann los altos
teorey j database modeling design entity relationship
morgan kaufmann los altos
thalheim b fundamentals cardinality constraints pernoul g tjoa
eds proceedings eleventh international conference entityrelationship er pp springer verlag
thalheim b fundamentals entity relationship model springer verlag
vardi taming converse reasoning two way computations
parikh r ed proc th workshop logics programs vol
lecture notes computer science pp springer verlag
woods w schmolze j g kl one family lehmann f w ed
semantic networks artificial intelligence pp pergamon press published
special issue computers mathematics applications number

ye x parent c spaccapietra cardinality consistency derived objects
dood systems loucopoulos p ed proceedings thirteenth international
conference entity relationship er vol lecture notes
computer science pp manchester uk springer verlag




