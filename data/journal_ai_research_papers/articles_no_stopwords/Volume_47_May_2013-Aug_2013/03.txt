Journal Artificial Intelligence Research 47 (2013) 475-519

Submitted 12/12; published 07/13

Computation Fully Proportional Representation
Nadja Betzler

nadja.betzler@campus.tu-berlin.de

Institut fur Softwaretechnik und
Theoretische Informatik
TU Berlin

Arkadii Slinko

slinko@math.auckland.ac.nz

Department Mathematics
University Auckland

Johannes Uhlmann

johannes.uhlmann@campus.tu-berlin.de

Institut fur Softwaretechnik und
Theoretische Informatik
TU Berlin

Abstract
investigate two systems fully proportional representation suggested Chamberlin & Courant Monroe. systems assign representative voter
sum misrepresentations minimized. winner determination problem
systems known NP-hard, hence work aims investigating whether
variants proposed rules and/or specific electorates problems
solved efficiently. variation rules, instead minimizing sum misrepresentations, considered minimizing maximal misrepresentation introducing effectively
two new rules. general case minimax versions classical rules appeared
still NP-hard.
investigated parameterized complexity winner determination two classical two new rules respect several parameters. mixture
positive negative results: e.g., proved fixed-parameter tractability parameter number candidates fixed-parameter intractability number winners.
single-peaked electorates results overwhelmingly positive: provide polynomial-time algorithms considered problems. rule remains
NP-hard single-peaked electorates classical Monroe rule.

1. Introduction
important conceptual difference purpose single-winner multiwinner elections. Single-winner social choice rules used make final decisions, e.g.,
elect president choose certain course action. multi-winner election rules
used elect assembly whose members authorized take final decisions
behalf society. result main property multi-winner rules satisfy
elected assembly represents society adequately. This, particular, means
final decision taken opinions existing society heard taken
consideration. Black powerfully expressed it:
c
2013
AI Access Foundation. rights reserved.

fiBetzler, Slinko, & Uhlmann

scheme proportional representation attempts secure assembly whose
membership will, far possible, proportionate volume different shades political opinion held throughout country; microcosm
true reflexion macrocosm (Black, 1958, p. 75).
although single-winner social choice rule easily extended select
assemblye.g., choosing candidates best scores applying rule repeatedly
required quantity representatives electedthis wrong approach problem
(Brams & Fishburn, 2002) (see Lu & Boutilier, 2011 experimental evidence).
reason majoritarian logic dominates design single-winner social
choice rules cannot provide balanced assembly membership.
standard solution problem electing assembly division
election single-member districts approximately equal population. district
elects one member assembly using single-winner rule, normally plurality.
although one might question whether districting instead based total adult
population number registered voters, current practice well established
entrenched law many countries, including United States (Brams, 2008). However
main problem approach districting fact fails
give representation minorities; minority may comprise 49% population
represented assembly. positive side districting method provides
high level accountability: voters know representative, address
particular issues even recall them, fail represent decent
standard.
Various voting systemse.g., Cumulative Voting, Single Non-Transferable vote, multiwinner variants Single Transferable Vote, various party list systemshave designed
solve problem representation minorities (Brams & Fishburn, 2002). However
none scored high accountability. may even seem certain
trade-off cannot representation minorities accountability.
However case. important idea suggested Charles Dodgson (1884),
known Lewis Carroll, considered different form Black (1958).
idea developed Chamberlin Courant (1983) later Monroe (1995).
relative advantages methods political science point view
extensively discussed Brams (2008). Dodgson asserted representation system
find coalitions election would formed voters
necessary time information allow coalitions elect representative.
adopted, sizable minority form coalition represented.
realization idea required new concept concept misrepresentation. assumed voters form individual preferences candidates based
political ideology judgement abilities candidates participate
deliberations decision making consistent individuals would wish act
present (Chamberlin & Courant, 1983, p. 722). way revolution.
Indeed, single-winner literature voting rules widely accepted
voters political preferences complex first choices alone. However,
multi-winner voting literature fixation first preferences led researchers think
proportional representation exclusively terms first preferences. list systems
476

fiOn Computation Fully Proportional Representation

proportional representation, parties assigned number seats parliament
proportional number votes (first preferences) received. systems
Single Non-Transferable Vote, Block Voting Cumulative Voting take second preferences account (Levin & Nalebuff, 1995). Single Transferable Vote
system proportional representationin fact family voting methods according
Tideman Richardson (2000)that allows voters express order preference
candidates (Levin & Nalebuff, 1995). Voters rank candidates order preference;
first preference votes first looked at, votes transferred,
necessary, candidates either comfortably elected done
badly eliminated election.1
So, voter represented candidate first preference reasonable
say represented optimally misrepresentation case zero.
general, voter represented candidate ith preference may assume
misrepresented degree si . course, reasonable assume
0 = s1 s2 . . . sm . case rule measuring total misrepresentation
fully defined vector = (s1 , . . . , sm ), number candidates.
Using analogy positional scoring rules single-winner elections may say
misrepresentation function positional. general, problem choosing proper
misrepresentation function far trivial. work Levin Nalebuff (1995,
p. 4) difficulty vividly illustrated: electorate uniformly distributed
segment 0 1, choose three representatives, equally
spaced [0.25, 0.5, 0.75], selected minimize average distance
traveled nearest legislator [0.16, 0.5, 0.83]? broadest possible framework
misrepresentation function may even voter-dependent.
Staying classical positional misrepresentation functions time suppose every voter assigned representative way. Measuring total
misrepresentation whole society may adopt either Harsanyi (1995) approach
Rawlsian one (assuming utility represented ith best candidate si , i.e., nonpositive value). Harsanyi measure total
misrepresentation

X
ni si ,
MH =
i=1

ni number voters represented ith preferred candidate. According Rawls (1999) welfare maximized utility society members
least greatest. leads total misrepresentation function
MR =

max

ni >0

si .

Chamberlin Courant (1983), Monroe (1995) consider best set
representatives must minimize total misrepresentation calculate using
Borda vector scores, is, (0, 1, 2, . . . , 1) Harsanyis misrepresentation
1. Northern Ireland voting system used elections local councils, Assembly,
European Parliament. used elections Irish Republic, Malta, Australia (although
single-member constituencies prevalent Australia, apart state level elections Tasmania
ACT). Several countries recently debated adopting it.

477

fiBetzler, Slinko, & Uhlmann

function. methods however different difference important. Chamberlin Courant impose restriction function assigns candidates
voters. may potentially lead different number voters represented
candidate. remedy Chamberlin Courant suggested use weighted voting
assembly elected candidate weight equal number voters
represent. Monroe rejected approach insisted principle one member
assembly one vote. reason insisted difference numbers
voters assigned two representatives one.
reasons Monroe rejected Chamberlin Courant approach quite
substantial. Proportional allocation weights known result excessive voting powers
electorates larger constituencies much debate right
way allocating weights representatives. alternative Chamberlin Courants
method would give representatives weights proportional square root
number voters represent. justified fact, due square root
law Penrose (1946), priori voting power (as defined Penrose-Banzhaf index)
member voting body inversely proportional square root size.
basis theory, example, Poland insisted EU allocate Council-of-Minister
votes according square root nations population (Slomczynski & Zyczkowski,
2006).
computational problems Harsanyi approach entails known
NP-hard (Lu & Boutilier, 2011; Procaccia, Rosenschein, & Zohar, 2008) several classical misrepresentation functions. paper try achieve tractability multiwinner
elections three different ways. Firstly, ask whether problem finding optimal fully proportional representation becomes easier classical misrepresentation
functions adopt Rawlsian approach measurement total misrepresentation.
second goal find parameterized complexity aforementioned problems
natural choices parameters. third develop efficient algorithms
achieving optimal fully proportional representation single-peaked elections.
remainder section, formally introduce computational problems
considered paper, summarize results extant literature, describe
approaches results.
1.1 Computational Problems Considered
election pair E = (C, V ) C set candidates (or alternatives) V
ordered list voters. voter represented vote, strict, linear order
set candidates (also called voters preference order ). refer
list V preference profile, denote number voters V n. number
alternatives denoted m. order voters important (the election
anonymous), V considered multiset2 votes. paper
consider anonymous elections.
posv (c) denote position alternative c ranking voter v;
top-ranked alternative position 1, second best position 2, etc.
2. set since two different voters may preference order.

478

fiOn Computation Fully Proportional Representation

Q

Definition 1. Given profile V C, mapping r : V C +
0 called
misrepresentation function v V two candidates c, c C condition
posv (c) < posv (c ) implies r(v, c) r(v, c ).
say c preferred c vs ranking, misrepresentation v,
represented c least large misrepresentation,
represented c. classical framework misrepresentation candidate
voter function position candidate preference order voter
given = (s1 , . . . , sm ), i.e., misrepresentation function case
r(v, c) = sposv (c) .
important particular case Borda misrepresentation function defined vector
(0, 1, . . . , 1).
approval voting framework, voter represented candidate
approves, misrepresentation considered zero, otherwise equal one.
function called approval misrepresentation function. misrepresentation function positional since different voters may approve different number
candidates. Note misrepresentation functions, Borda, derived
preference lists voters. contrast, approval misrepresentation function cannot obtained preference list without information threshold
separates approved candidates disapproved ones. general framework
misrepresentation function may arbitrary.
w : V C denote function assigns voters representatives (or
way around), i.e., assignment voter v represented candidate w(v).
total misrepresentation election w given
X
r(v, w(v)) max r(v, w(v))
vV

vV

Harsanyis classical Rawls minimax versions, respectively. say mapping w respects -criterion (or Monroe criterion) |w(V )| = k w assigns least
n/k n/k voters every candidate w(V ), k total number
representatives elected assembly. Note case -criterion set
k winners might lead higher misrepresentation set k winners.
example, consider election voters favour candidate
set winners elected greater one.
Based previous discussion, work investigate computational complexity following four combinatorial problems. two classical ones described
named Chamberlin Courant (CC), case candidate represent arbitrary number voters (and number voters weight
elected assembly), Monroe (M), case every candidate represents roughly
number voters (and representative one vote assembly). two
previously unstudied versions adopt Rawlsian approach measuring total
misrepresentation called minimax versions classical ones.
CC-Multiwinner (CC-MW)
Given: set C candidates, multiset V voters, misrepresentation
function r, misrepresentation bound R +
0 positive integer k.

Q

479

fiBetzler, Slinko, & Uhlmann


Task: Find subset
P C C size k assignment voters w

w(V ) = C vV r(v, w(v)) R.

Minimax CC-Multiwinner (Minimax CC-MW)
Given: set C candidates, multiset V voters, misrepresentation
function r, misrepresentation bound R +
0 positive integer k.

Q

C

Task: Find subset
C size k assignment voters w
w(V ) = C maxvV r(v, w(v)) R.
M-Multiwinner (M-MW)
Given: set C candidates, multiset V voters, misrepresentation
function r, misrepresentation bound R +
0 positive integer k.

Q

C

Task: Find subset
C size k assignment
voters w,
P

respects -criterion, w(V ) = C vV r(v, w(v)) R.

Minimax M-Multiwinner (Minimax M-MW)
Given: set C candidates, multiset V voters, misrepresentation
function r, misrepresentation bound R +
0 positive integer k.

Q

C

Task: Find subset
C size k assignment voters w,
respects -criterion, w(V ) = C maxvV r(v, w(v)) R.
Note finding assignment voters fixed set k winners accomplished polynomial time four problems applying network flow algorithms (see
Section 3.2). Hence, follows assume k < k < n since otherwise
four problems decided polynomial time. note problems considered
contained NP since one guess set k winners corresponding mapping
voters check polynomial time whether satisfies corresponding conditions.
four problems stated general misrepresentation functions (since
algorithmic results hold even case) main focus work
Borda approval ones.
1.2 Previous Computational Complexity Results
study computational complexity problems context voting initiated Bartholdi III, Tovey, Trick (1989) 20 years ago became active
area research recently (Conitzer, 2010; Faliszewski & Procaccia, 2010; Faliszewski,
Hemaspaandra, & Hemaspaandra, 2010; Faliszewski, Hemaspaandra, Hemaspaandra, &
Rothe, 2009b). large number papers dealing single-winner elections
multi-winner elections whose final goal still choose single winner tiebreaking, articles (Potthof & Brams, 1998; Procaccia et al., 2008; Lu & Boutilier,
2011) deal computational complexity Multiwinner elections aimed achieving
proportional representation. particular, works contain NP-hardness proofs
CC-Multiwinner M-Multiwinner approval misrepresentation function (Procaccia et al., 2008) CC-Multiwinner Borda misrepresentation function (Lu &
Boutilier, 2011). Algorithmic approaches comprise Integer Linear Programming (Potthof &
480

fiOn Computation Fully Proportional Representation

Brams, 1998; Brams, 2008) CC-MW M-MW, approximation algorithms based
greedy strategies (Lu & Boutilier, 2011) CC-MW, polynomial-time algorithms
CC-MW M-MW instances number candidates constant (Procaccia
et al., 2008). contrast, best knowledge, computational complexity
minimax versions problems remained unstudied.
aware one work explicitly studying computational complexity
issues context multiwinner elections. Meir, Procaccia, Rosenschein, Zohar
(2008) investigate computational complexity strategic voting several multiwinner
elections winner determined polynomial time. systems considered
lead kind proportional representation.
1.3 Approach Results General Elections
first result minimax versions classical Chamberlin-Courant Monroe problems NP-complete. words, adopting Rawlsian approach
make computation problems easier general (but see situation changes completely single-peaked elections minimax version becomes
easier indeed). Based negative results, work aims extending previous
algorithmic approaches described analysis whether settings
problems become tractable. end, parameterized algorithmics
appropriate tool aims identifying tractable special cases NP-hard problems.
cornerstone approach idea complexity problem measured total size input instance additional parameter p, usually
nonnegative integer (but pair integers virtually anything). problem called fixed-parameter tractable algorithm solving every instance
f (p) poly(|I|) time, f computable function (Downey & Fellows, 1999; Flum
& Grohe, 2006; Niedermeier, 2006). small values p algorithm running
time might represent efficient algorithm NP-hard problem consideration.
Parameterized complexity provides tool parameterized reductions one
show problem presumably fixed-parameter tractable. One
important parameterized complexity classes purpose W [2] (see Section 2
details). remark passing parameterized complexity analysis employed several voting problems, (e.g., see Brandt, Brill, & Seedig, 2011; Betzler,
Guo, & Niedermeier, 2010; Betzler, Hemmann, & Niedermeier, 2009; Christian, Fellows,
Rosamond, & Slinko, 2007; Dorn & Schlotter, 2010; Elkind, Faliszewski, & Slinko, 2010b;
Faliszewski, Hemaspaandra, Hemaspaandra, & Rothe, 2009a Betzler, Bredereck,
Chen, & Niedermeier, 2012 survey).
context multiwinner elections, parameter immediately attracts attention
number k winners, many settings might much smaller number
candidates number voters. Another reasonable parameter misrepresentation bound R since ideal (or fully personalizable Lu & Boutilier, 2011) situation R
equal zero, is, every voter represented one preferred candidates.
provide parameterized complexity analysis four considered problems
Borda approval misrepresentation functions respect parameters k R.
481

fiBetzler, Slinko, & Uhlmann

Parameter

r

CC-MW

Minimax CC-MW

M-MW

Minimax M-MW

#winner k
#winner k


B

W[2]-hard ()
W[2]-hard ()

W[2]-hard ()
W[2]-hard ()

W[2]-hard ()
W[2]-hard ()

W[2]-hard ()
W[2]-hard ()

misr. R
misr. R


B

NP-h R = 0 ()
XP ()

NP-h R = 0 ()
NP-h R 1 ()
P R = 0 ()

NP-h R = 0 ()
XP ()

NP-h R = 0 ()
NP-h R 1 ()
P R = 0 ()

(R, k)
(R, k)


B

W[2]-hard ()
FPT ()

W[2]-hard ()
FPT ()

W[2]-hard ()
FPT ()

W[2]-hard ()
FPT ()

# cand.
# voters

U
U

FPT ()
FPT ()

FPT ()
FPT ()

FPT ()
FPT ()

FPT ()
FPT ()

Table 1: Parameterized complexity considered multiwinner problems instances
misrepresentation function r either approval (A), Borda (B) unrestricted (U). Results obtained follows. : Theorem 1, : Theorem 2, : Theorem 3, : Theorem 4, : Theorem 5, : Theorem 6, : Theorem 7 : Proposition 1,
Proposition 2.

addition, investigate composite parameter (R, k) consisting number
winners misrepresentation bound.
overview results provided Table 1. number winners k
parameter, considered problems turn W[2]-hard. parameterization
total misrepresentation bound R results varied. case R = 0,
approval misrepresentation function four problems NP-hard
solvable polynomial time Borda misrepresentation function. However, Minimax
CC-MW Minimax M-MW become NP-hard every R 1. contrast, summinimization variants CC-MW M-MW Borda misrepresentation function
solvable polynomial time constant R (the corresponding parameterized complexity
class called XP). Note provided algorithm shows containment XP
respect R fixed-parameter tractability, problem remains open. inspired
analysis composite parameter (R, k), covering scenarios small
set winners represent voters small total misrepresentation.
approval misrepresentation function, still leads parameterized intractability, Borda misrepresentation function, show fixed-parameter tractability
considered problems. complete picture multivariate complexity analysis,
additionally provide fixed-parameter tractability respect parameters number
voters number candidates.
1.4 Results Single-Peaked Elections
Single-peakedness one central notions social choice political science alike
(Black, 1958; Moulin, 1991; Tideman, 2006). preferences voters single-peaked
single issue dominates formation. could ideological position
Left-Right Liberal-Conservative spectra, level taxation, immigration quota, etc.
Tideman compares single-peakedness convexity preferences discusses
482

fiOn Computation Fully Proportional Representation

CC-MW
2

O(nm )

Minimax CC-MW
O(nm)

M-MW
3

3 3

O(n k ) approval
NP-h integer mis. func.

Minimax M-MW
O(n3 m3 k3 )

Table 2: Overview computational complexity singled-peaked elections. case
polynomial-time solvability, table provides running times depending
number n voters, number candidates, number k
winners. stated otherwise, result holds arbitrary misrepresentation
function. : Theorem 8, : Proposition 4, : Theorem 10, : Proposition 5,
: Theorem 11.

reasonable assume this. refers data collection containing 87 ranked-ballot real-life
elections, access to, claims single-peaked.
single dominating issue normally represented axis voter characterized single point axis (see example Figure 1. misrepresentation
function fixed voter function single variable defined axis.
single-peakedness preferences implies function exactly one local minimum.
refer Section 5 formal proof statement.
note votes form approval ballots well linear orders, singlepeakedness profile checked linear time (Booth & Lueker, 1976; Escoffier,
Lang, & Ozturk, 2008) reconstruction order candidates axis.
case single-peaked profiles computational problems turned
allow efficient solving strategies general case (Brandt, Brill, Hemaspaandra, & Hemaspaandra, 2010; Conitzer, 2009). particular, study computational complexity voting rules NP-hard winner-determination problem shows
Condorcet-consistent onesand include Dodgson, Kemeny, Young
rulesthe winner-determination problem becomes polynomial-time solvable restrict
single-peaked profiles (Brandt et al., 2010). obvious reason
single-peakedness eliminates possibility Condorcet cycles election profile.
obvious single-peakedness must simplify winner-determination
problem methods proportional representation. However, seems natural investigate possibility. results show many instances winner-determination
problem methods proportional representation indeed become easier too.
results summarized Table 2. CC-MW Minimax CC-MW problems solvable polynomial time arbitrary misrepresentation function.
specifically, CC-MW provide dynamic programming algorithm running O(nm2 )
time n voters candidates, Minimax CC-MW solved O(nm) time
greedy algorithm. Monroe system variants, results become
diverse. Minimax M-MW general misrepresentation function still solvable
polynomial time, M-MW NP-hard. However, positive side, still show
polynomial-time solvability M-MW approval misrepresentation function. Basically, results obtained follows. M-MW approval misrepresentation
483

fiBetzler, Slinko, & Uhlmann

function establish close connection one-dimensional rectangle stabbing problem capacities. allows provide dynamic programming algorithm based
decomposition property provided Even, Levi, Rawitz, Schieber, Shahar, Sviridenko
(2008). result transferred Minimax M-MW. NP-hardness M-MW
established many-one reduction restricted version Exact 3-Cover
problem. NP-hardness holds integer-valued misrepresentation function
maximum misrepresentation value still polynomial number candidates. However, need allow situations voter may equally misrepresented several
candidates. Hence, clear transfer corresponding many-one reduction
M-MW Borda misrepresentation function. problem computational
complexity left open.
1.5 Organization Paper
paper organized follows. Section 2, introduce main concepts parameterized complexity graph problems. Section 3 contains basic observations
relations four problems consideration fixed-parameter tractability results respect number voters number candidates. two main
contributions proved Section 4 Section 5. Section 4, present main parameterized complexity results well NP-hardness results minimax versions.
Section 5, special case single-peaked elections handled. Finally, Section 6
conclude discussion relevance results related problems
settings.

2. Preliminaries
briefly introduce framework parameterized complexity followed basic
graph problems employed paper. basic notions regarding classical
complexity theory refer Garey Johnson (1979).
2.1 Parameterized Complexity
concept parameterized complexity pioneered Downey Fellows (1999). See
textbooks Flum Grohe (2006) Niedermeier (2006). fundamental
goal find whether seemingly unavoidable combinatorial explosion, occurring
exact algorithms NP-hard problems, confined certain problem-specific parameters. idea parameter real-life application restricted small
values only, algorithm running time exponential exclusively
respect parameter may efficient practical. provide formal definitions.
Definition 2. parameterized problem language L , finite
alphabet. second component called parameter problem.
Basically, means input parameterized problem pair (x, p), x
considered main input p parameter problem. consider
parameters positive integers composite parameters tuples several
positive integers.
484

fiOn Computation Fully Proportional Representation

Definition 3. parameterized problem L fixed-parameter tractable algorithm decides f (p) |x|O(1) time whether (x, p) L, f arbitrary
computable function depends p. complexity class fixed-parameter
tractable problems called FPT.
Unfortunately, parameterized problems fixed-parameter tractable.
end, Downey Fellows (1999) developed theory parameterized intractability
means completeness program complexity classes. specifically, defined
so-called W -hierarchy using Boolean circuits. hierarchy consists following
classes:
FPT W[1] W[2] . . . W[Sat] W[P] XP
(we refer reader book Downey & Fellows, 1999, precise description).
particular, stress concept fixed-parameter tractability different
notion polynomial-time solvability constant p since algorithm running
O(|x|p ) time imply fixed-parameter tractability. problems solved
running time O(|x|f (p) ) computable function f form complexity class called
XP.
containment W[1] FPT would imply P = NP such. would imply,
however, failure Exponential Time Hypothesis (Impagliazzo, Paturi, & Zane,
2001). Hence, commonly believed W[1]-hard problems fixed-parameter
tractable. show W[t]-hardness problem positive integer t, following
reduction concept introduced.
Definition 4. Let L, L two parameterized problems. say L reduces
L parameterized reduction two computable functions h1 :
h2 : + function f : (x, p)

N Q

1. (x, p) L f (x, p) L f computable time |x|O(1) h2 (|p|)
2. (x , p ) = f (x, p), p = h1 (p).
Analogously case NP-hardness, positive integer t, suffices give
parameterized reduction one W[t]-hard parameterized problem X parameterized
problem show W[t]-hardness . details parameterized complexity theory refer textbooks (Downey & Fellows, 1999; Flum & Grohe, 2006;
Niedermeier, 2006).
work, provide results regarding second level (presumable) parameterized intractability captured complexity class W[2]. Several parameterized
reductions work W[2]-complete Hitting Set (HS) problem: Given
family F = {F1 , . . . , Fn } sets universe U = {u1 , . . . , um } integer k 0,
decide whether hitting set U U size k understand
set U U 6= every 1 n. HS NP-hard (Garey & Johnson, 1979)
W[2]-hard respect parameter k (Downey & Fellows, 1999).
2.2 Graph Problems
algorithmic results employ algorithms basic graph problems defined
following. undirected graph pair G = (U, E), consisting set U vertices
485

fiBetzler, Slinko, & Uhlmann

set E edges, edge unordered pair (size-two set) vertices. Two
vertices u, v U called adjacent {u, v} E. undirected graph G = (U, E)
vertex u U , neighborhood N (u) u set vertices adjacent u.
undirected graph G = (U, E) called bipartite vertex set U partitioned
two nonintersecting subsets U1 U2 E {{u, v} | u U1 v U2 }.
matching edge set E E e e = every two distinct edges e, e E .
maximum matching matching maximum cardinality. undirected graph
edge {u, v} associated
weight w({u, v}) maximum-weight matching
P
matching E {u,v}E w({u, v}) maximal.
directed graph directed network pair G = (U, A), consisting set U
vertices set U U directed edges (or arcs) directed edge
ordered pair vertices. flow network directed network G = (U, A)
two distinguished vertices U (the source) U (the sink target)
arc (u, v) associated nonnegative number c(u, v), called capacity. Roughly
speaking, flow function f assigns real value f (u, v) 0 f (u, v) c(u, v)
every arc (u, v) satisfies constraints every vertex v except
source sink total flow v equals total flow v. See textbook
Cormen, Leiserson, Rivest, Stein (2001) details. maximum flow flow
total flow sink maximal.
paper, make use fact maximum-weight matching bipartite
graph well maximum flow general graphs computed polynomial time
standard graph algorithms (e.g., see Cormen et al., 2001).

3. Basic Results Observations
section, shed light combinatorial relations problems
investigate parameterized complexity considered problems respect
parameters number voters number candidates. results
employed following sections. particular, algorithms showing fixedparameter tractability used subroutines Section 4 obtain fixed-parameter
tractability respect parameterizations.
3.1 Relations Problems
Although four problems come different properties general, special cases,
coincide. One example so-called fully personalizable setting (Lu
& Boutilier, 2011), is, case misrepresentation bound R zero hence
every voter represented one best alternatives (i.e., one
misrepresentation zero). Clearly, asking set winners assignment
sum misrepresentations zero equivalent asking set winners
assignment maximum misrepresentation value zero. leads
following observation.
Observation 1. R = 0, Minimax M-Multiwinner coincides M-Multiwinner
Minimax CC-Multiwinner coincides CC-Multiwinner.
486

fiOn Computation Fully Proportional Representation

Moreover, two minimax versions problems, matters whether
particular misrepresentation value exceeds threshold R not. Hence, instance
minimax version arbitrary misrepresentation function r reduced
equivalent instance problem approval misrepresentation function r
follows. every voter v every candidate c, set r (v, c) = 1 r(v, c) > R,
r (v, c) = 0 r(v, c) R and, finally, set R := 0.
Observation 2. Minimax M-/CC-Multiwinner instance (C, V, r, R, k) misrepresentation function r, instance (C, V, r , 0, k) approval misrepresentation function r new instance yes-instance original
instance yes-instance.
direct consequence, minimax versions every algorithm approval misrepresentation function applies instances general misrepresentation function.
Moreover, hardness results arbitrary misrepresentation function transfer approval misrepresentation function. Combining Observations 1 2, conclude
algorithm M-MW (CC-MW) instances R = 0 solves corresponding
minimax version general misrepresentation function.
Finally, observe hardness result established approval misrepresentation
function directly transferred minimax version problem
misrepresentation function voter allowed give arbitrary number
candidates misrepresentation value R. Note hold
Borda misrepresentation function every voter v must specify exactly R+1 candidates
represent v misrepresentation R.
3.2 Numbers Voters Candidates Parameters
argue four problems considered fixed-parameter tractable respect
number candidates well respect number voters. algorithms
based brute-force search combined maximum flow matching techniques.
First, consider parameterization number voters. Then, focus
parameterization number candidates.
3.2.1 Number Voters Parameter
show considered multiwinner problems fixed-parameter tractable parameterized number n voters. basic idea assignment candidates
voters induces partition set voters voters set
partition represented candidate. Given partition set voters,
best set candidates partition found computation matching
bipartite auxiliary graph. Since may try O(kn ) O(nn ) partitions set
voters k sets resulting algorithm shows fixed-parameter tractability.
Proposition 1. (Minimax) CC-Multiwinner (Minimax) M-Multiwinner
solved nn poly(n, m) time instance n voters candidates.
Proof. First, present solution strategy Minimax CC-MW. find set k
winners, try O(kn ) partitions set voters k subsets. case yesinstance Minimax CC-MW, must partition V1 , . . . , Vk multiset voters
487

fiBetzler, Slinko, & Uhlmann

V follows. every Vi , voters Vi assigned candidate c optimal
set k winners voter assigned c. Hence, every partition, remains
select k candidates, one candidate ci every subset Vi , assigning voters
Vi ci misrepresentation voter R. Minimax CC-MW
set candidates determined computing maximum-cardinality matching
following bipartite graph. One part graph represents set candidates
part set {V1 , . . . , Vk }. Moreover, edge vertex representing
candidate c vertex representing subset Vi r(v, c) R v Vi .
straightforward verify voters represented maximal misrepresentation
bound R maximum-cardinality matching size k (all vertices
representing subsets matched) constructed graph.
Regarding running time, computation maximum-weight matching
bipartite graph nv vertices ne edges accomplished O(nv (ne + nv log nv ))
time (Fredman & Tarjan, 1987). Since number edges vertices constructed
bipartite graph polynomial number candidates k n, claimed running
time follows.
Next, focus CC-MW. Again, try partitions voters k subsets.
every partition, compute maximum-weight matching following edgeweighted bipartite graph. One part consists vertices corresponding candidates
part vertices corresponding subsets partition V1 , . . . , Vk
multiset voters.
PMoreover, edge every vertex c every vertex Vi
weight vVi r(v, c), positive integer large enough ensure
weights positive. crucial observation maximum-weight matching
every vertex V1 , . . . , Vk matched since edge weights positive (here assume
k m). Hence, computation maximum-weight matching yields set k
candidates representing subsets voters good possible. specifically,
let W denote weight maximum-weight matching. Then, kT W total
misrepresentation corresponding assignment.
Finally, observe two problems assignment voters
winners must fulfill -criterion proceed way single exception
need consider partitions every subset contains least n/k
n/k voters. running time bound follows complete analogy Minimax
CC-MW discussed above.
3.2.2 Number Candidates Parameter
fixed number candidates four considered multiwinner problems solved
efficiently. (Minimax) CC-Multiwinner parameterizedby number candim
dates fixed-parameter tractability trivial: test
k 2 subsets candidates
report set candidates minimum total misrepresentation. end, one
assigns every voter v candidate considered subset represents v
best possible way directly obtains sum misrepresentations maximum
misrepresentation.
Clearly, assignment voters fulfill -criterion. However, (Minimax) M-Multiwinner, one apply network flow algorithms find
488

fiOn Computation Fully Proportional Representation

optimal assignment voters size-k subset C set candidates (see
Preliminaries Subsection 2.2 basic definitions regarding network flows).
Minimax M-Multiwinner, construct directed network vertex every
candidate C , one vertex every voter, source, sink vertex.
arc capacity n/k lower bound n/k source every candidatevertex3 . Moreover, capacity-one arc candidate-vertex votervertex corresponding candidate represent corresponding voter
misrepresentation R. Finally, arc capacity one every
voter-vertex sink vertex. straightforward verify network
flow size n assignment voters C satisfies
-criterion every voter represented misrepresentation R.
M-Multiwinner, construction given minimax version
extended. particular, follows Theorem 2 Procaccia et al. (2008), finding
-criterion fulfilling assignment V C minimum total misrepresentation
accomplished polynomial time computation transportation problem
or, equivalently, computation minimum-weight maximum flow.
Proposition 2. (Minimax) CC-Multiwinner (Minimax) M-Multiwinner
solved O(2m nm) O(2m poly(n, m)) time, respectively, instances
candidates.

4. Number Winners Misrepresentation Bound
Parameters
section, show four problems approval Borda misrepresentation functions W[2]-hard respect number winners. misrepresentation functions provide one parameterized reduction works four
problems. investigate misrepresentation bound R parameter.
approval misrepresentation function NP-hardness R = 0 follows directly
parameterized reduction respect number winners, Borda misrepresentation function, parameter needs investigated separately. show CC-MW
M-MW XP respect R, is, solvable polynomial time
R constant. However, corresponding algorithm show fixed-parameter
tractability respect R. question whether result extended
fixed-parameter tractability respect R left open. present, however,
fixed-parameter tractability results respect composite parameter (R, k)
end section. overview results found Table 1.
4.1 Approval Misrepresentation Function
provide reduction W[2]-complete Hitting Set problem establish W[2]hardness four problems. so, discuss related results. conference paper (Procaccia, Rosenschein, & Zohar, 2007) stated NP-hardness
CC-Multiwinner M-Multiwinner follows reduction Max k-Cover
3. problem variant lower bounds (demands) solved polynomial time simple reduction
normal flow problem (Ahuja, Magnanti, & Orlin, 1993, Section 6.7).

489

fiBetzler, Slinko, & Uhlmann

(omitting problem definition construction) subsequent journal paper (Procaccia et al., 2008) reduction given Exact 3-Cover. Although
sufficient show NP-hardness, reduction Exact 3-Cover imply W[2]hardness. reduction given conceptually similar requires additional
voters deal fact sets Hitting Set instance might come
different/unbounded size.
Theorem 1. approval misrepresentation function, (Minimax) CC-Multiwinner
(Minimax) M-Multiwinner W[2]-hard respect number k winners
even R = 0. Minimax CC-Multiwinner Minimax M-Multiwinner NPcomplete.
Proof. First, show W[2]-hardness M-Multiwinner. Then, argue presented reduction works three problems well.
Given instance Hitting Set (F = {F1 , . . . , Fn }, U = {u1 , . . . , um }, k), build
instance M-Multiwinner set C candidates follows. candidate ci
C every element ui U . multiset voters VF D, VF := {vF | F F}
multiset voters indexed F |D| = n(k 1) set dummy voters.
Furthermore, every F F every ui U , let r(vF , ci ) := 0 ui F r(vF , ci ) :=
1, otherwise. Finally, every every ui U , set r(d, ci ) := 0. completes
construction. correctness show following.
Claim. hitting set size k F winner set
size k M-Multiwinner represents voters total misrepresentation R = 0.
: Let U denote size-k hitting set F C := {ci | ui U }. show one
build mapping w : V C respects -criterion total misrepresentation
zero. First, every F F, set w(vF ) := ci arbitrary chosen element ui F U .
Clearly, r(vF , ci ) = 0. far, n voters VF assigned candidates C
remains assign n(k1) voters D. Since candidate C represent
dummy voter misrepresentation zero, easily extend assignment
candidate C assigned exactly n voters.
:PLet C C denote size-k winner set let w mapping V C
vV r(v, w(v)) = 0. Since voter vF VF represented cost zero
candidate ci ui F , set U := {ui | ci C } size-k hitting set F.
completes proof M-Multiwinner. straightforward verify
construction yields parameterized reduction CC-Multiwinner. Finally,
W[2]-hardness minimax versions follows directly Observation 1 since
reduction works R = 0. Moreover, NP-hardness directly follows since reduction
clearly carried polynomial time containment NP obvious.
4.2 Borda Misrepresentation Function
refine reduction previous subsection show Borda misrepresentation function considered problems W[2]-hard respect number k
490

fiOn Computation Fully Proportional Representation

winners parameter. However, contrast case approval misrepresentation function reduction hold case R = 0. Hence, investigate
parameter total misrepresentation R well composite parameter (R, k) subsequently.
4.2.1 Number Winners Parameter
Borda misrepresentation function, provide many-one reduction
Hitting Set M-Multiwinner argue presented reduction works
three problems well. CC-Multiwinner W[2]-hardness directly
follows NP-hardness reduction (also Hitting Set) provided Lu
Boutilier (2011, Thm. 8).4 reduction, however, deal M-criterion
adopted minimax versions two rules; particular, using padding
candidates voters deal M-criterion.
Theorem 2. (Minimax) CC-Multiwinner (Minimax) M-Multiwinner W[2]hard respect number k winners Borda misrepresentation function.
Minimax CC-Multiwinner Minimax M-Multiwinner NP-complete.
Proof. First, show W[2]-hardness M-Multiwinner parameterized reduction
Hitting Set. Given HS-instance (F = {F1 , . . . , Fn }, U = {u1 , . . . , um }, k) build
instance M-Multiwinner follows. Let z := nmk. set C candidates CU B,
CU := {cu | u U } B := {b1i , . . . , bzi | 1 nk}. Moreover, multiset
voters VF D, VF := {vi | F} := {d1 , . . . , dn(k1) }. voter
misrepresentation function given preference list.5
n set voters vi VF following preference list:
{cu | u } > b1i > . . . > bzi > {cu | u U \ } > {b1j , . . . , bzj | 1 j nk, j 6= i}.
Finally, {1, . . . , n(k 1)}, voter di following preference
list:
c1 > c2 > . . . > cm > b1n+i > . . . > bzn+i > {b1j , . . . , bzj | 1 j nk, j 6= n + i}.
completes construction. correctness show following.
Claim. size-k hitting set F size-k winner
set M-Multiwinner represents voters total misrepresentation
z = nmk.
: Let U denote size-k hitting set F C := {cu | u U }. build
mapping w : V C follows. First, every F, set w(vi ) := cu arbitrarily
chosen element u U . Clearly, r(vi , cu ) since elements top preference
list vi |Fi | m. far, n voters VF assigned candidates C .
4. proof provided extended version appeared Third International Workshop
Computational Social Choice (COMSOC-10) title Budgeted Social Choice: Framework
Multiple Recommendations Consensus Decision Making, see Thm. 6.
5. improve readability, use sets candidates description preference lists.
set fixed arbitrary order.

491

fiBetzler, Slinko, & Uhlmann

Since candidate C represent dummy voter misrepresentation
m, one extend mapping exactly n voters assigned cu C
misrepresentation voter. Thus, total misrepresentation
assignment nm + nm(k 1) = nmk.
:PLet C C denote size-k winner set w mapping V C
vV r(v, w(v)) mnk. First, show C contain candidate bji B.
Every candidate B represent one voter misrepresentation value better
z. specifically, 1 n, bji represent voter vi
quality representation if, n < nk, bji present voter di . Since
every candidate C must assigned exactly n voters misrepresentation
bound z, conclude C B = .
remains show U := {u U | cu C } hitting set F. voter vi
VF represented candidate cu CU misrepresentation z
u since candidates cu u U \ occur preference list vi
candidates b1i , . . . , bzi . Thus, U hitting set F size k.
completes proof M-Multiwinner. construction yields parameterized reduction CC-Multiwinner based claim. direction
left right follows complete analogy. direction, difference
solution set C CC-Multiwinner instance might contain candidate
B. However, candidate bji , represent one voter
(that is, vi ) within required misrepresentation bound hence replaced
candidate cu represents corresponding voter even better.
proof Minimax M-Multiwinner Minimax CC-Multiwinner, follows directly arguments size-k hitting set F
set winners Minimax M/CC-Multiwinner consisting k candidates
represent voters maximum misrepresentation R := 1. Hence,
W[2]-hardness well NP-hardness follow.
4.2.2 Parameter Misrepresentation Bound
Recall approval misrepresentation function, four problems NP-hard even
fully personalized setting, is, R = 0. contrast, CC-MW MMW Borda misrepresentation function, provide polynomial-time algorithms
every constant R showing minimax versions NP-hard R 1
polynomial-time solvable R = 0. First, simple exhaustive search strategy, one
obtains following.
Theorem 3. Borda misrepresentation function, CC-Multiwinner M-Multiwinner solvable polynomial time misrepresentation bound R constant.
Proof. every solution, R voters represented misrepresentation greater
0. Thus, constant values R, one try O(|V |R ) subsets R voters
find subset V V voters represented misrepresentation value
zero optimal winner set. subset V , voter v V , one
tries possible misrepresentation values 1 R, is, one tries O(RR )
possibilities V . possibility, misrepresentation value
492

fiOn Computation Fully Proportional Representation

voter determined. Since Borda exactly one candidate represent
voter specific value, implies corresponding mapping V set
candidates. Every remaining voter assigned candidate represents
misrepresentation value zero. case CC-Multiwinner, remains check
whether k candidates become representatives whether corresponding
set candidates represent voters total misrepresentation R. case
M-Multiwinner one additionally needs check whether corresponding assignment
satisfies -criterion. follows cases optimal set k winners
computed O((|V | R)R |V ||C|) time.
Note Theorem 3 imply fixed-parameter tractability respect R,
remains open work. However, provide fixed-parameter tractability results
respect composite parameter (R, k) end section. Now, contrast
results CC-MW M-MW showing minimax versions become provably
difficult. specifically, show following.
Theorem 4. Borda misrepresentation function, minimax CC-Multiwinner
minimax M-Multiwinner solvable polynomial time total misrepresentation
bound R = 0 NP-hard every R 1.
Proof. R = 0 polynomial-time solvability follows directly fact every voter v
must assigned candidate c r(v, c) = 0 Borda misrepresentation
function one candidate. Hence, one needs check less
k candidates and, minimax M-Multiwinner whether corresponding
assignment satisfies M-criterion.
Now, show NP-hardness R = 1 reduction special case Hitting
Set. specifically, Hitting Set NP-hard even every set consists two elements
every element appears three sets (Garey, Johnson, & Stockmeyer, 1974,
Thm. 2.4).6
Given restricted HS-instance (F = {F1 , . . . , Fn }, U = {u1 , . . . , um }, k), build
election follows. Identify every set F voter identify every element
U candidate. Moreover, define following misrepresentation function.
F = {u, v} F, let misrepresentation voter F zero candidate u
one candidate v, remaining misrepresentation values assigned arbitrarily
remaining candidates. Then, following claim easy see.
Claim: hitting set size k set k winners
misrepresentation voter 1.
shows theorem Minimax CC-MW R = 1. Minimax M-MW,
one use following observation showing NP-hardness even restricted
setting. follows directly Hitting Set instances constructed NP-hardness
proof (Garey et al., 1974, Thm. 2.4) yes-instance always hitting set
every element hits either two three sets F. specifically, case
yes-instance hitting set U U every u U assigned
6. problem Vertex Cover cubic graphs.

493

fiBetzler, Slinko, & Uhlmann

1
2
3
4
5
6
7
8
9
10
11
12
13

Branch (V , R , C ) :
R < 0 |C | > k
return no;
P
wV (mindC r(w, d)) R
return yes;
Consider arbitrary v V ;
V := V \ {v};
c C r(v, c) R
R := R r(v, c) ;
C := C {c};
V := V \ {w V | r(w, c) = 0};
Branch (V , R , C )
return yes ;

14
15
16

end
return no;

Algorithm 1: Branching strategy CC-Multiwinner Borda misrepresentation
functions showing fixed-parameter tractability respect composite parameter (R, k). Initially, algorithm invoked arguments (V, R, ). Moreover, C
k provided global variables.
either two three sets F every set hit exactly one element.
hitting set one-to-one-corresponds winner set fulfilling M-criterion hence
theorem follows Minimax M-MW R = 1. every R > 1, NP-hardness
proved similar arguments. Basically, extend previous construction follows.
every voter, add R 1 new candidates placed first R 1 positions
voter position higher R every voter. Since new candidates
clearly cannot part Minimax M-MW solution misrepresentation bound R,
one argue analogously case.
4.2.3 Composite Parameter Number Winners Misrepresentation
Bound
paragraph, focus scenario one small set winners
represent voters small total misrepresentation. modeled composite
parameter (R, k), k number winners R total misrepresentation.
show Borda misrepresentation function, four considered problems
fixed-parameter tractable.
Theorem 5. Borda misrepresentation function, CC-Multiwinner Minimax CC-Multiwinner fixed-parameter tractable respect composite parameter (R, k), k denotes number winners R misrepresentation bound.
Proof. First, provide branching strategy Minimax CC-MW. find size-k
solution proceed follows. arbitrary voter v V , branch according
494

fiOn Computation Fully Proportional Representation

candidates c r(v, c) R. possibility, create subinstance deleting
voter w r(w, c) R V recursively solve corresponding subinstance
k 1. Finally, report whether least one subinstance solution size k 1
found. recursion stops either k < 0 (reporting no) voters
represented (reporting yes).
correctness corresponding algorithm obvious since voter v must represented candidate c r(v, c) R. Regarding running time, one branches
R + 1 possibilities every considered voter decreases value k one
every subinstance. Hence, algorithm investigates (R + 1)k possibilities.
show extend branching strategy work CC-MW. branching
recursion displayed Algorithm 1 invoked arguments (V, R, ). Note
C k provided global variables.
correctness Algorithm 1 seen follows. algorithm first checks
whether misrepresentation bound solution size exceeded (Line 2). Second,
algorithm checks whether current candidate set already winner set, is,
whether voters represented assignment within misrepresentation bound
(Line 4). Otherwise, arbitrarily chosen voter v (Line 6), algorithm tries
possible ways representation without exceeding misrepresentation bound (Line 8).
possibility, decreases R value needed representation v
corresponding candidate (Line 9). possibility implies new candidate added
current solution, clearly assign voters optimally represented
candidate hence delete corresponding voters (Line 11). Finally,
recursively invoke Branch procedure corresponding subinstance (Line 12). Since
possibilities represent v considered least one possibility must lead solution
(if one exists).
Regarding running time, show recursive call (Line 12)
algorithm decreases R increases |C | (or both). initial call one C =
hence |C | increased one (Line 10). every call, case |C |
increased considered candidate c already current solution set C .
case, one cannot r(v, c) = 0 since v would deleted V
point c added C . Hence, r(v, c) > 0 R decreased (Line 9).
Since recursion ends R < 0 |C | > k (Line 2), follows recursion
depth R + k. Moreover, recursive call, one branches according R + 1
possible candidates (Line 8). Hence, algorithm executed (R+1)R+k poly(n, m)
time.
remark results Theorem 5 hold instance misrepresentation functions nonnegative integer values |{c C | r(v, c) R}| R + 1
every voter v V . Moreover, fixed-parameter tractability already follows |{c C |
r(v, c) R}| f (k, R) computable function f . contrast, branching strategy
CC-MW Theorem 5 cannot directly transferred M-MW since due
M-criterion one cannot assign voter selected candidate even best alternative. means analogous approach parameter could reduced
and, hence size search tree could bounded. show fixed-parameter
495

fiBetzler, Slinko, & Uhlmann

tractability M-MW apply different approach employ structural observations
based M-criterion.
Consider instance (C, V, r, R, k) M-MW. Let zero-candidate candidate c C
r(v, c) = 0 least one voter v V .
Lemma 1. yes-instance M-Multiwinner Borda misrepresentation function, R + k zero-candidates.
Proof. apply proof contradiction. Assume R + k zerocandidates size-k winner set representing voters total misrepresentation R. Borda misrepresentation function, every voter v exactly
one candidate c r(v, c) = 0. c part winner set, v contributes
least one total misrepresentation since r(v, c ) 1 every c C \ {c}. Since
R + k zero-candidates, R part size-k solution.
corresponding voter represented candidate
solution misrepresentation least one. Hence, total misrepresentation
R; contradiction.
make use bounded number zero-candidates, provide another observation
exploits M-criterion solution.
Lemma 2. Consider M-Multiwinner instance Borda misrepresentation function. number n voters greater (R + 1)k, every size-k set winners
consists zero-candidates.
Proof. Assume contrary (R + 1)k voters candidate c
solution set represent voters misrepresentation value zero.
Due M-criterion since (R + 1)k voters, c must represent
least ((R + 1)k)/k = R + 1 voters misrepresentation value least one, respectively.
Since bound total misrepresentation R, c cannot part solution.
Based two previous lemmas, show following.
Theorem 6. Borda misrepresentation function, M-Multiwinner problem
fixed-parameter tractable respect composite parameter (R, k) k denotes
number winners R misrepresentation bound.
Proof. algorithm described distinguishing two cases: n (R + 1)k
n > (R + 1)k. former, fixed-parameter tractability follows Proposition 1 (showing fixed-parameter tractability w.r.t. number voters). latter,
yes-instance, Lemma 1 R + k zero-candidates Lemma 2
solution consist zero-candidates. removing zero-candidates,
fixed-parameter tractability follows Proposition 2 (showing fixed-parameter tractability w.r.t. number candidates).
Regarding running time, first case leads running time ((R + 1)k)(R+1)k
poly(n, m) second case accomplished 2R+k poly(n, m) time. Hence,
theorem follows.
496

fiOn Computation Fully Proportional Representation

Finally, show fixed-parameter tractability respect (R, k) Minimax MMW Borda misrepresentation function. corresponding algorithm based
case distinction algorithm M-MW (Theorem 7). basic idea
bounding number zero-candidates cannot transferred M-MW Minimax
M-MW, following algorithm Minimax M-MW works M-MW leads
worse running time bound case number voters exceeds (R + 1)k.
specifically, case n > (R + 1)k, exponential running time part 4(R+1)k instead
2R+k .
Theorem 7. Borda misrepresentation function, Minimax M-Multiwinner
fixed-parameter tractable respect (R, k).
Proof. Consider Minimax M-MW instance (C, V, r, R, k) r Borda misrepresentation function. case R = 0 trivial Minimax M-MW Borda
misrepresentation function, assume R 1 following.
case n (R + 1)k, fixed-parameter tractability follows Proposition 1
(analogously proof Theorem 6). Hence, consider case n > (R + 1)k.
Let C := {c1 , . . . , cm } Ei := {v V | r(v, ci ) R} every ci C. Moreover,
let C := {ci C : |Ei | n/k}. show that, first, every solution consist
candidates C and, second, |C | 2(R + 1)k. Then, removing
candidates C , fixed-parameter tractability follows Proposition 2.
First, due M-criterion least n/k voters assigned every winning candidate solution hence candidate ci |Ei | < n/k cannot part winner
set.
Second, assume toward contradiction |C | > 2(R + 1)k. Note Borda
misrepresentation functions every voter occurs R + 1 sets E1 , . . . , Em .
Moreover, since |Ei | n/k every ci C
n > 2(R + 1)k n/k 1/(R + 1) > 2k(n/k 1) = 2n 2k.
Since considered case n > (R + 1)k 2k, contradiction.
Finally, based Proposition 2, case n > (R + 1)k, one obtains running
time bound 4(R+1)k poly(n, m).

5. Single-Peaked Elections
discussed introduction (Subsection 1.4), single-peakedness central notion
political science reflecting elections single issue dominates preferences voters.
Let us formally define property.
Definition 5. Let V profile set candidates C, let linear order
C (the societal axis). say order v V compatible c, d, e C
either c e e c holds
posv (c) < posv (d) = posv (d) < posv (e).

(1)

(We remind reader positions counted top that, higher
linear order b, position lower.) say V single-peaked
497

fiBetzler, Slinko, & Uhlmann

3

+

2
1



0


c1





3



+



2



+

c2

c3



1

+

0

c4

+
+
+



+





c1

c2

c3



c4

Figure 1: election consists three voters following preferences: c1 > c2 >
c3 > c4 , c2 > c3 > c4 > c1 , c3 > c2 > c1 > c4 . single-peakedness
witnessed societal order c1 c2 c3 c4 . diagram left-hand
side shows, every voter, Borda score alternative gets
voter marked solid line, dashed line dotted line, respectively. Note
every preference order one local maximum. voters express
Borda misrepresentations values instead, one obtains diagram
right. Here, misrepresentation function arbitrary fixed voter one
local minimum.

respect = 1, . . . , n order vi compatible . profile V called
single-peaked exists linear order C V single-peaked respect
; say witnesses single-peakedness V refer societal
order.
Proposition 3. Let V single-peaked profile set candidates C witnessed
societal order . Let r misrepresentation function V . every triple
{ci , cj , ck } C ci cj ck ck cj ci every v V
r(v, ci ) < r(v, cj ) = r(v, cj ) r(v, ck ).
Proof. definition misrepresentation function (see Definition 1) r(v, ci ) < r(v, cj )
implies posv (ci ) < posv (cj ). result follows (1) Definition 1.
section, investigate computational complexity determining proportional
representations using Chamberlin Courant Monroe methods together
variants, input profile single-peaked. discussed introduction,
input profile single-peaked voters viewed located certain axis
location bliss point. preferred candidate either one
closest right one closest left. Without loss generality may assume
voter bliss point location one candidates (who
preferred her).
498

fiOn Computation Fully Proportional Representation

clear misrepresentation function r(v, c) single-peaked profile must
satisfy following. fix voter v change c one end societal axis
value r(v, c) decrease monotonically vs preferred candidate
bliss point increase monotonically candidates beyond bliss
point. is, voter function expressing voters misrepresentation
candidates single-troughed (that is, exactly one local minimum) respect
order witnesses single-peakedness profile.
describing results, briefly outline typical shapes prominent
misrepresentation functions single-peaked settings. Borda misrepresentation function strictly ascending moving away local minimum directions.
Moreover, candidate preceding candidate local minimum misrepresentation function drops > 0 points, then, next 1 candidates
side local minimum, misrepresentation function must ascend size-one steps.
contrast, approval misrepresentation function, exactly one interval
consecutive candidates societal axis misrepresentation zero
remaining candidates outside interval misrepresentation one. minimax
variants one obtains similar structure, sense one interval
particular voter represented without exceeding given misrepresentation
bound. Note remote similarity last two cases
preferences intervals aggregating range values model introduced Farfel
Conitzer (2011).
remainder section, provide following results summarized Table 2. show CC-Multiwinner, Minimax CC-Multiwinner, Minimax MMultiwinner single-peaked elections solved polynomial time arbitrary
misrepresentation function (Theorem 8, Proposition 4, Proposition 5, respectively).
contrast three aforementioned problems, present reduction NP-hard version Exact 3-Cover problem shows M-Multiwinner NP-hard even
restricted single-peaked profiles (Theorem 11). However, approval misrepresentation function, still obtain polynomial-time solvability M-Multiwinner
single-peaked input profiles (Theorem 10). leave open computational complexity
M-Multiwinner Borda misrepresentation function single-peaked case.
5.1 (Minimax) CC-Multiwinner
show single-peaked input profiles CC-Multiwinner Minimax CC-Multiwinner polynomial-time solvable arbitrary misrepresentation function. first
provide dynamic programming algorithm case CC-Multiwinner. Second,
argue Minimax CC-Multiwinner solved optimally greedy algorithm.
5.1.1 Dynamic Programming Procedure CC-Multiwinner
CC-Multiwinner polynomial-time solvability established presenting dynamic programming algorithm leading following.
Theorem 8. single-peaked input profile arbitrary misrepresentation function
CC-Multiwinner solved O(nm2 ) time.
499

fiBetzler, Slinko, & Uhlmann

1

Function SinglePeaked-CC-MW(V , C, r, k) Input: multiset
voters V := {v1 , . . . , vn }, set candidates C := {c1 , . . . , cm },
misrepresentation function r, positive integer k. voters
single-peaked preferences according societal order ,
c1 c2 . . . cm .
Output: minimum total misrepresentation k winners.

begin
= 1, . . . ,P

4
z(i, 1) := vV r(v, ci );
5
end
6
p = 1, . . . ,
7
= p + 1,P
. . . ,
8
d(p, i) := vV max{0, r(v, cp ) r(v, ci )};
9
end
10
end
11
= 2, . . . ,
12
j = 2, . . . , min(k, i)
13
z(i, j) := minp{j1,...,i1} (z(p, j 1) d(p, i));
14
end
15
end
16
return mini{k,...,m} (z(i, k));
17 end
Algorithm 2: Dynamic programming algorithm CC-Multiwinner single-peaked
input profiles.
2

3

Proof. Throughout proof assume voters single-peaked preferences
according societal order , c1 c2 . . . cm . set C C,
minimum total misrepresentation defined
s(C ) =

X

vV

min {r(v, c )}.

c C

define dynamic programming table z, containing entry z(i, j) 1
1 j min(i, k). Informally speaking, entry z(i, j) gives minimum total
misrepresentation set j winners {c1 , . . . , ci } including ci .
dynamic programming procedure SinglePeaked-CC-MW provided Algorithm 2.
show solves CC-Multiwinner claimed running time. Regarding
correctness, show execution SinglePeaked-CC-MW following
equation satisfied

z(i, j) = min s(C ) | C {c1 , . . . , ci } |C | = j ci C .

(2)

Then, minimum total misrepresentation optimal size-k winner set clearly given
mini{k,...,m} z(i, k) (see Line 16).
500

fiOn Computation Fully Proportional Representation

proof Equation 2 follows induction j. First, argue entries z(i, 1)
satisfy Equation (2), yielding base induction. end, observe
one candidate ci winner
P set, voters must assigned ci , yielding
misrepresentation sum s({ci }) = vV r(v, ci ), see Line 4.
Next, show entry z(i, j) j > 1 (as computed Line 13) complies
Equation (2) provided z(p, j 1) 1 p < i. Consider set C {c1 , . . . , ci }
ci C |C | = j s(C ) minimum among sets. argue
z(i, j) = s(C ). Let p < cp C c 6 C p < < i.
implies p j 1. crucial observation follows. voter v
holds r(v, ci ) < r(v, cp ), single-peakedness implies r(v, cq ) r(v, cp ) >
r(v, ci ) q < p. Hence, consider set C j 1 candidates {c1 , . . . , cp }
cp C , assume value r(v, cp ) contribution voter v
total misrepresentation s(C ). Hence, adding ci C improvement
r(v, cp ) r(v, ci ) voter v r(v, cp ) > r(v, ci ). every remaining voter v,
holds r(v, ci ) r(v, cp ) hence onePcannot improve representation assigning
ci . follows s(C ) = s(C ) vV max{0, r(v, cp ) r(v, ci )} = s(C ) d(p, i)
induction assumption z(p, j 1) = s(C ). Finally, since algorithm
tries possible choices p (see Line 13) z(i, j) = s(C ).
straightforward verify running time Algorithm 2 O(nm2 ).
5.1.2 Greedy Algorithm Minimax CC-Multiwinner
single-peaked input profiles, minimax version CC-Multiwinner solved
simple greedy algorithm. basic idea iterate candidates according
societal order put solution first candidate voter
cannot represented previously selected candidates. correctness based
observation candidate representation range (or interval)
consecutive candidates voter must represented. Thus, choose
latest possible candidate represent voter representation range
ends first since candidate least good every previous candidate.
words, basic combinatorial problem cover stab given set intervals
(corresponding representation ranges voters) k points (corresponding
candidates). stabbing problem turn corresponds clique cover problem
interval graphs solved linear time (Golumbic, 1980). next section,
investigate relationships considered voting problems special (rectangle)
stabbing problems detail. Here, conclude following.
Proposition 4. single-peaked input profile arbitrary misrepresentation function Minimax-CC-Multiwinner solved O(nm) time.
5.2 (Minimax) M-Multiwinner
focus case assignment candidates winner set satisfies
M-criterion, is, required winner represents number
candidates. additional constraint makes winner determination involved. Indeed, show integer-valued misrepresentation function M-Multiwinner
501

fiBetzler, Slinko, & Uhlmann

NP-hard even input profile single-peaked. positive side, show MMultiwinner single-peaked input profiles approval misrepresentation function
Minimax M-Multiwinner arbitrary misrepresentation functions polynomialtime solvable. However, solving strategies (that based dynamic programming) intricate (Minimax) CC-Multiwinner. proving polynomialtime solvability establish close relationship so-called 1-dimensional Rectangle Stabbing (Even et al., 2008). start polynomial-time algorithms followed
NP-hardness proof. computational complexity M-Multiwinner
Borda misrepresentation function single-peaked input profiles left open.
5.2.1 M-Multiwinner Approval Minimax M-Multiwinner
use notation Even et al. (2008) whenever possible. input consists set U
horizontal intervals set vertical lines capacity c(S) {0, . . . , |U |} every
line S. Informally, task cover (or stab) intervals minimum number
vertical lines S, line covers c(S) intervals (a vertical line covers
horizontal interval iff intersect). Since line cover c(S) intervals,
one specify interval assigned line solution. Let U (S) denote
set intervals U intersecting S. assignment function : 2U ,
A(S) U (S).
set cover assignment |A(S)| c(S)

SS A(S) = U .
One-Dimensional Rectangle Stabbing Hard Constraints (Hard1-RS):
Input: set U horizontal intervals set vertical lines capacities c(S) {0, . . . , |U |} every line S.
Task: Find minimum-cardinality cover (and corresponding assignment).

Now, consider single-peaked instance M-Multiwinner R = 0 every
winner represents exactly number voters, is, n mod k = 0 n voters
k winners. case, problem reduced Hard-1-RS follows.
every candidate vertical line according position societal axis. Since
voter v must represented candidate c r(v, c) = 0 candidates
r(v, c) = 0 ordered consecutively societal axis, represent voter
horizontal interval reaching leftmost candidate c r(v, c) = 0
rightmost candidate. Finally, vertical line associated capacity n/k,
whole number. Clearly, solution M-Multiwinner instance
R = 0 size-k cover constructed instance Hard-1-RS.
Note case, n mod k 6= 0, transformation cannot applied since
one know whether candidate line capacity n/k n/k optimal
solution.
Even et al. (2008) presented dynamic programming algorithm Hard-1-RS
running time O(|U |2 |S|2 (|U | + |S|)). Since transformation described
easily accomplished linear time, one directly obtains following.

502

fiOn Computation Fully Proportional Representation

Corollary 1. instance M-Multiwinner single-peaked profile n mod
k = 0, R = 0 (and arbitrary misrepresentation function) solved O(n2 m2 (n+
m)) time.
show single-peaked input profiles, M-Multiwinner approval misrepresentation function (and arbitrary misrepresentation bound R) solved polynomial time. end, show instances reduced version
one-dimensional rectangle stabbing goal stab maximum number horizontal intervals k vertical lines. specifically, introduce following problem
best knowledge studied before.
Maximum Balanced One-Dimensional Rectangle Stabbing (Max-Bal1-RS):
Input: multi-set U = {u1 , . . . , un } horizontal intervals, set = {S1 , . . . , Sm }
vertical lines, positive integer k.
Task: Find size-k set assignment
following statements hold.

| SS A(S)| maximum,
every , |A(S)| n/k,
|{S : |A(S)| = n/k}| n mod k, n mod k remainder
division n k.
last two restrictions problem description considered saying
kc = n mod k lines capacity n/k kf = k kc lines capacity n/k,
specifying line capacity, Hard-1-RS specific capacity
every line. difference Max-Bal-1-RS Hard-1-RS
latter intervals must covered minimum number lines whereas former
goal cover maximum number intervals k lines.
show dynamic programming algorithm Even et al. (2008) Hard-1-RS
adapted work Max-Bal-1-RS. end, employ decomposition
property (stated Observation 3 below) dynamic programming table
algorithm different.
introduce following notation state dynamic programming. interval u U , let l(u) denote left endpoint u r(u) denote right endpoint u
(that is, l(u) r(u)). Let x(S) denote coordinate line S(x) denote
vertical line associated coordinate x. two integers let [s, t] denote set
integers t.
ease presentation, assume input following normalized form
easily established. First, assume endpoints intervals
coordinates lines integers. Second, assume {x(S) | S} = [1, m]. Third,
assume endpoints intervals [1, m]. follows,
distinguish line coordinate x(S), is, identify lines
elements [1, m] (and vice versa). Finally, assume intervals u1 , u2 , . . . , un
ordered l(u1 ) l(u2 ) . . . l(un ) (we fix one ordering).
algorithm makes use fact always optimal solution satisfies
leftmost interval first property defined follows (Even et al., 2008).
503

fiBetzler, Slinko, & Uhlmann

Definition 6. Let denote size-k set lines let denote assignment.
say (S , A) leftmost interval first property following holds. Let
let ui A(S). every l(ui ) < every uj uj A(S ),
either j < r(uj ) < S.
Note leftmost interval first property defined respect fixed ordering
intervals. solution transformed equivalent one satisfying
leftmost interval first property simply swapping assignments conflicting interval
pairs, (see, e.g., Even et al., 2008). Hence, always optimal solution satisfying
leftmost interval first property one apply dynamic programming procedure based
following decomposition, analogously work Even et al. (2008, Section 2).
Observation 3. Let (S , A) optimal solution Max-Bal-1-RS satisfies
leftmost interval first property. range [x1 , x2 ] [1, m], let ui U earliest
interval among intervals covered line [x1 , x2 ] (that is, uj covered
lines range j > i). ui covered line [x1 , x2 ] \ {x1 }, right
endpoint intervals covered lines range [x1 , 1] left S.
Basically, Observation 3 used algorithm following way. Consider
range [x1 , m] assume x1 leftmost line considered solution. Moreover,
assume ui earliest interval covered line [x1 , m]. Then, every
interval uj j < covered solution, every interval u >
r(u ) < covered lines [x1 , 1], every interval ur
r(ur ) covered lines [S, m]. implies decomposition
instance two subinstances. left instance contains intervals ug g >
r(ug ) < right instance contains intervals ud r(ud ) m.
Theorem 9. Maximum Balanced One-Dimensional Rectangle Stabbing
solved O(m3 n3 k3 ) time.
Proof. use following definitions state dynamic programming algorithm. Let
kc := n mod k kf := k kc . ui U two coordinates x1 x2
r(ui ) [x1 , x2 ], let
U (ui , x1 , x2 ) := {uj U | j r(uj ) [x1 , x2 ]}.
Note ui U (ui , x1 , x2 ) U = U (u1 , 1, m).
algorithm maintains dynamic programming table entry
(ui , x1 , x2 , kc , kf , b) N
defined every ui U , two coordinates x1 x2 r(ui ) [x1 , x2 ]
x1 ui , 0 kc kc 0 kf kf kf + kc k 1
|[x1 , x2 ]| kc + kf + 1, 1 b n/k. Informally, table entry contains
maximum number intervals U (ui , x1 , x2 ) covered kc + kf + 1 lines
[x1 , x2 ] assumption x1 contained solution covers b
intervals, ui covered line [x1 , x2 ], kc solution lines different
x1 assigned n/k intervals. (Formally, kc + kf + 1 solution lines must satisfy
conditions (C1) (C6).)
504

fiOn Computation Fully Proportional Representation

Next, define subsets intervals needed decomposition left right
subinstances. ui U , two coordinates 1 x1 x2 r(ui ) [x1 , x2 ],
x [x1 , x2 ] let

,
x = x1
Ul (ui , x, x1 , x2 ) :=
{uj U | j > r(uj ) [x1 , x 1]}, otherwise

Ur (ui , x, x1 , x2 ) := U (ui , x1 , x2 ) \ (Ul (ui , x, x1 , x2 ) {ui }).
Algorithm. state algorithm explained discussing correctness
below. Basically, algorithm works three phases. first phase, dynamic
programming table initialized follows. ui U , every two coordinates x1
x2 r(ui ) [x1 , x2 ], x1 ui , every integer b [1, n/k], let
(ui , x1 , x2 , 0, 0, b) := min(b, |{u U (ui , x1 , x2 ) : x1 u}|).

(3)

second phase, table updated. update table entry (ui , x1 , x2 , kc , kf , b)
provided Algorithm 3, order update invoked determined
Algorithm 4. third phase, algorithm outputs maximum value ui U
x1 [1, . . . , m] x1 ui |[x1 , m]| k
(
(ui , x1 , m, kc 1, kf , n/k)
(4)
max
(ui , x1 , m, kc , kf 1, n/k).
Correctness. show every stage dynamic programming entry contains
value best assignment partial solution subinstance interval set
U (ui , x1 , x2 ) six conditions (C1) (C6) hold. specifically, argue
every ui U , two coordinates x1 x2 r(ui ) [x1 , x2 ] x1 ui ,
0 kc kc 0 kf kf kf + kc k 1 |[x1 , x2 ]| kc + kf + 1,
1 b n/k
[
(ui , x1 , x2 , kc , kf , b) = max |
A(S )|


sets [x1 , x2 ] assignments : 2U (ui ,x1,x2 )
ui A(S),

(C1)

|S | = kc + kf + 1 ,

(C2)

x1 ,

(C3)

|A(x1 )| b,

(C4)

|A(S )| n/k,

(C5)

|{S \ {x1 } : |A(S )| = n/k}| kc .

(C6)

505

fiBetzler, Slinko, & Uhlmann

1
2
3
4
5
6
7
8
9
10
11
12
13

Function Update(ui , x1 , x2 , kc , kf , b) begin
:= 0;
b > 1
every uj U (ui , x1 , x2 ) \ {ui } x1 uj
:= max{M, (uj , x1 , x2 , kc , kf , b 1)};
end
else
every x = x1 + 1 x2 |[x , x2 ]| kc + kf
every uj U (ui , x1 , x2 ) \ {ui } x uj
kc > 0
:= max{M, (uj , x , x2 , kc 1, kf , n/k)};
kf > 0
:= max{M, (uj , x , x2 , kc , kf 1, n/k)};

14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29

end
end
every x = x1 + 1 r(ui ) x ui
kcl 0 kcr 0 kcl + kcr = kc
kfl 0 kfr 0 kfl + kfr = kf
|[x1 , x 1]| kcl + kfl + 1 |[x, x2 ]| kcr + kfr
Ml , Mr := 0;
every uj Ul (ui , x, x1 , x2 ) x1 uj
Ml := max{Ml , (uj , x1 , x 1, kcl , kfl , b)};
end
every uj Ur (ui , x, x1 , x2 ) x uj
kcr > 0
Mr := max{Mr , (uj , x, x2 , kcr 1, kfr , n/k 1)};
kfr > 0
Mr := max{Mr , (uj , x, x2 , kcr , kfr 1, n/k 1)};

30

end
32
:= max{M, Ml + Mr };
33
end
34
end
35
end
36
end
37
(ui , x1 , x2 , kc , kf , b) := + 1;
38 end
Algorithm 3: Update step employed dynamic programming algorithm MaxBal-1-RS presented proof Theorem 9.
31

506

fiOn Computation Fully Proportional Representation

1
2
3
4
5
6
7
8
9
10
11
12
13
14

Main :
[x1 , x2 ] [1, m] increasing order x2 x1
kc = 0, . . . , kc
kf = 0, . . . , kf
|[x1 , x2 ]| kc + kf + 1 1 kc + kf k 1
b = 1, . . . , n/k
ui U r(ui ) [x1 , x2 ] x1 ui
(ui , x1 , x2 , kc , kf , b) := Update(ui , x1 , x2 , kc , kf , b);
end
end
end
end
end
end
Algorithm 4: Main loop initialization.

every entry computed initialization step (Equation 3), algorithm stores
maximum value partial solution = {x1 } (satisfies (C2) (C3)), covers ui
(C1) (which possible since x1 ui b 1), satisfies |A(x1 )| b (C4). Clearly,
(C5) (C6) hold well.
Regarding update step (see Algorithm 3), let us assume values entries
accessed update correct well-defined (discussed below). ensure (C1) entry (ui , x1 , x2 , kc , kf , b), interval ui must covered one lines
[x1 , x2 ]. argue possibilities hold conditions C1 - C6 considered systematically current maximum value stored variable .
going details, observe Algorithm 3 adds one overall maximum
value (Line 37) take account ui newly covered. correct
least one possibility cover ui considered interval, namely, x1
always cover u1 since x1 ui (Line 7 Algorithm 4) b 1 (Line 6 Algorithm 4).
Lines 3 16 Algorithm 3 consider possibility x1 used cover ui . Here,
two possibilities distinguished. first investigated possibility (Line 3 Line 7
Algorithm 3) ui covered x1 x1 cover least one interval,
is, b > 1. case, compute optimal value based value
subinstance containing ui x1 solution assigned
one interval less. end, b decreased one (that is, (C4) holds) possible
intervals U (ui , x1 , x2 ) \ {ui } (Line 4) checked leftmost covered interval
corresponding subsolution. Moreover, since kf kc remain assume
conditions (C2), (C5), (C6) hold (uj , x1 , x2 , kc , kf , b 1), hold
(ui , x1 , x2 , kc , kf , b).
second investigated possibility (Lines 7 16 Algorithm 3) ui covered
x1 x1 cover one interval, is, b = 1. case traced back
subinstance without ui x1 . access corresponding possibilities
dynamic programming table, Algorithm 3 tries possible lines new solution lines
(Line 8) leftmost intervals covered new subinstance (Line 9). Then,
507

fiBetzler, Slinko, & Uhlmann

chooses maximum assigning capacity n/k (Line 11) n/k (Line 13)
x . Note since 1 kc + kf (Line 5 Algorithm 4) least one two cases must
possible (if least one interval covered, is, U (ui , x1 , x2 ) \
{ui } =
6 ). Assume solution corresponding table entry (uj , x , x2 , kc
1, kf , n/k)} (Line 11) (uj , x , x2 , kc , kf 1, n/k)} (Line 13), respectively, hence,
fulfilling conditions (C1) (C6) corresponding subinstance. Then, clearly
adding x1 solution assigning ui x1 gives solution fulfilling constraints
(ui , x1 , x2 , kc , kf , b) b = 1.
following loop Algorithm 3 (Lines 17 37) tries possibilities cover ui
line x 6= x1 . x 6= x1 , according Observation 3, instance divided
two subinstances. combinations sizes subsolutions tested iterating
kcl , kcr , kfl , kfr (Lines 18 19). Lines 22 23 Algorithm 3 computes
optimal solution left subinstance Lines 25 29 computes solution
right subinstance obtained assigning ui x. decomposition
subinstances defined interval sets Ur (ui , x, x1 , x2 ) Ul (ui , x, x1 , x2 ) follows directly
Observation 3. Moreover, since x1 part left subinstance unchanged
capacity bound b, conditions (C1), (C3) (C4) hold. remains show (C2),
(C5) (C6) hold, is, addition x1 considered subsolution consists kc lines
assigned n/k intervals kf lines assigned n/k
intervals. considered possibility, x newly specified solution line
according decomposition (see Observation 3 definitions Ul , Ur ) part
right subinstance. Lines 27 29, Algorithm 3 chooses maximum
possibilities x assigned n/k n/k intervals, respectively,
adapts values kcr kfr accordingly accessing corresponding table entries.
Hence, conditions hold.
Now, consider output overall algorithm, see Equation (4). first maximum
function iterates intervals ui possible leftmost solution lines hence find
pair ui x1 follows. interval ui leftmost interval covered solution
leftmost interval first property x1 leftmost line considered solution.
Then, second maximum function chooses maximum two cases x1
assigned n/k n/k intervals, respectively. Since

(C1) (C6) hold

corresponding entries, algorithm outputs maximum | SS A(S)| overall [1, m]
corresponding assignments fulfilling constraints definition MaxBal-1RS.
remains show algorithm accesses well-defined entries, is,
accessed entries computed before. ensured iterating dynamic programming table described Algorithm 4. Regarding computation
(uj , x1 , x2 , kc , kf , b 1) Line 5 Algorithm 3, parameters values except b
current entry. Line 6 Algorithm 4 iterates b increasing order
and, hence, (uj , x1 , x2 , kc , kf , b 1) computed accessed. Moreover,
condition b > 1 Line 3 Algorithm 3 ensures (uj , x1 , x2 , kc , kf , b 1) well
defined. Lines 11 13 Algorithm 3, accessed range [x , x2 ] smaller
range x1 x2 . Since algorithm iterates ranges according increasing size
(Line 2 Algorithm 4) parameter values considered former
iteration loops, entry computed before. Line 23 Algorithm 3 accessed
508

fiOn Computation Fully Proportional Representation

entry range x1 x 1 < x2 Lines 27, 29 considered range [x, x2 ]
strictly smaller range [x1 , x2 ]. Again, according Line 2 Algorithm 4),
entries computed before.
Running time. Regarding running time, update accomplished O(mk2 n)
time (see Algorithm 3) iterating coordinates lines (Line 17),
less k2 cases Lines 18 19, less n intervals inner loops
Lines 5, 22, 25, respectively. overall loop (Algorithm 4) gives additional factor
O(m2 n2 k): appropriate implementation accomplished iterating
less m2 coordinate ranges (Line 2), less k2 possibilities Lines 4 3, n/k
(n + 1)/k values b (Line 6), n intervals Line 7. yields running
time bound O(m2 k(n + 1)n) = O(m2 n2 k). Hence, overall running time bounded
O(n3 k3 m3 ).
instance single-peaked input profile M-Multiwinner approval
misrepresentation function reduces Max-Bal-1-RS transformation described Section 5.2.1. vertical line every candidate, horizontal interval
voter v reaching leftmost candidate r(v, c) = 0 rightmost
candidate. crucial observation is, minimizing total misrepresentation
M-Multiwinner equivalent maximizing number voters represented
candidates misrepresentation zero and, hence, maximizing number covered
intervals Max-Bal-1-RS instance. Altogether, arrive main result
section.
Theorem 10. M-Multiwinner approval misrepresentation function singlepeaked input profiles decided O(n3 m3 k3 ) time.
Recall instance Minimax M-Multiwinner R > 0 reduced
instance M-Multiwinner R = 0 approval misrepresentation function
setting voter v candidate c misrepresentation value 0, r(v, c) R,
1 otherwise (see Observations 1 2). Altogether, arrive following.
Proposition 5. instance Minimax M-Multiwinner single-peaked profile
(and arbitrary misrepresentation function) solved O(n3 m3 k3 ) time.
5.2.2 NP-Hardness M-Multiwinner Single-Peaked Election
Contrasting polynomial-time solvability results three considered problems, show integer-valued misrepresentation function MMultiwinner NP-complete even restricted instances single-peaked input profile. specifically, show M-Multiwinner NP-hard single-peaked input
profiles integer-valued misrepresentation functions maximum misrepresentation value voter bounded polynomial number candidates.
Note establishing NP-hardness allow voter assign
misrepresentation value several candidates.
NP-hardness follows reduction restricted variant Exact 3-Cover.
Restricted Exact 3-Cover (rX3C)
Input: family := {S1 , . . . , Sm } sets elements E := {e1 , . . . , en }
509

fiBetzler, Slinko, & Uhlmann

every set size 3 every element E occurs exactly three
sets.

Question: subset
every element E occurs

exactly one set SS = E?

set called exact 3-cover E. Since yes-instances n multiple
3, follows assume n divisible 3. NP-hardness rX3C follows
NP-hardness reduction case every element occurs three
subsets (Garey & Johnson, 1979) construction extend NP-hardness result
case every element occurs exactly three subsets (Gonzalez, 1985).
Theorem 11. M-Multiwinner NP-hard single-peaked input profiles integervalued misrepresentation function even maximum misrepresentation value every
voter polynomial number candidates (and every winner represents exactly three
voters).
Proof. use following notation. Consider rX3C instance (S, E). element
e E occurs three subsets Si , Sj , Sk < j < k, say first
occurrence e Si , second occurrence Sj , third occurrence Sk .
rX3C instance (S, E), define M-MW instance follows. set candidates

C := E {sj | Sj S}
multiset voters
V := {vix | ei E x {1, 2, 3}} {fi | ei E}.
is, candidate element subset four voters
element. Next, specify misrepresentation functions voters:






{1, . . . , n}
{1, . . . , n}, c C \ {ei }
{1, . . . , n}, x {1, 2, 3}, 1 z
{1, . . . , n}, x {1, 2, 3}, z >
1 j m, x {1, 2, 3}, xth occurrence ei Sj
else

r(fi , ei ) := 0
r(fi , c) := 2n2 + 1
r(vix , ez ) := + z 1
r(vix , ez ) := 2n2 + 1
r(vix , sj ) := 0
r(vix , sj ) := 1

Finally, set misrepresentation bound R := 2n2 let number winners
k := n/3 + n. showing correctness reduction, discuss three crucial
properties construction.
First, verify profile single-peaked witnessed societal order
s1 sm e1 en .
every voter single-peakedness obvious since misrepresentation 0 one
candidate 2n2 + 1 every candidate. every vix , within candidate set E,
misrepresentation function decreases monotonously move en e1 along
societal axis: z > i, obvious since misrepresentation remains constant
value 2n2 +1 z misrepresentation value i+z 1 hence function
510

fiOn Computation Fully Proportional Representation

clearly assumes smaller values decreasing values z. settles single-peakedness
range e1 en . see overall single-peakedness, first note e1
misrepresentation every vix least 1. Then, since misrepresentation 1
one candidates {s1 , . . . , sm } 0 remaining candidates,
single-peakedness every vix follows.
Second, since 4n voters k = (4n)/3, exactly three voters
assigned every winning candidate solution.
Third, show four voters best represented candidate ei
, vi1 , vi2 , vi3 . specifically, show following.
Observation 4. every ei x {1, 2, 3}, r(vix , ei ) < r(y, ei ) every V \({fi }
{vi1 } {vi2 } {vi3 }).
see correctness, observe every fixed {1, . . . , n}, r(vax , ea ) = 2a 1
every x {1, 2, 3}


1 b < a, r(vbx , ea ) = 2n2 + 1 > 2a 1 ,


< b n, r(vbx , ea ) = + b 1 > 2a 1,
b 6= a, r(fb , ea ) = 2n2 1 > 2a 1.
Now, show following.
Claim: exact 3-cover (S, E) set
k = 4n/3 candidates represent voters total misrepresentation
R = 2n2 exactly three voters assigned one candidate.
Given exact 3-cover S, show set {sj | Sj } E candidates
winning set required claim. corresponding mapping follows.
every 1 n, voter assigned candidate ei .
1 n x {1, 2, 3}, ei occurs xth time Sj , vix
assigned sj , else vix assigned ei .
Since exact 3-cover every element covered exactly once, follows every voter
assigned exactly one candidate every winning candidate represents three voters.
specifically, three voters vi1 , vi2 , vi3 corresponding three occurrences
element ei , one represented candidate corresponding solution
set ei occurs two voters candidate ei (the third candidate
represented ei ). remains compute total misrepresentation solution.
Due definition, every candidate sj represents three voters misrepresentation
0. Moreover, every candidate ei represents misrepresentation 0 two voters
{vi1 , vi2 , vi3 } misrepresentation r(vix , ei ) = + 1 = 2i 1 x {1, 2, 3}. Hence,
total misrepresentation
n
X

2(2i 1) = 2n(n + 1) 2n = 2n2 .

i=1

511

(5)

fiBetzler, Slinko, & Uhlmann

Consider size-k set C C winners represent voters total misrepresentation R = 2n2 . Since every voter , candidate represent
misrepresentation R ei , follows E C . Recall due M-criterion,
every candidate must represent exactly three voters. Thus, every candidate ei E must
represent two voters (besides ). Clearly, lower bound total misrepresentation achieved case assign every ei E two voters
represented ei least good voters. Due Observation 4, two voters
{vi1 , vi2 , vi3 }. Moreover, according Equation 5 corresponding lower bound
total misrepresentation matches total misrepresentation R = 2n2 . Since assigning
ei voter {vi1 , vi2 , vi3 } would lead strictly higher misrepresentation (Observation 4), implies ei assigned exactly two voters {vi1 , vi2 , vi3 }. Finally,
every 1 n, remains one voter vix must represented candidate
C \ E misrepresentation zero. Since |C \ E| = n/3 candidate sj
represent voter vix misrepresentation 0 element ei occurs Sj , i.e., sets
corresponding candidates C \ E must form exact 3-cover.

6. Conclusion Outlook
start summarizing relevance results work. followed
discussion closely related problems models might investigated future
research. conclude several questions directly follow results.
6.1 Relevance Results
computation set candidates fully proportionally represent society
applications many relevant settings. main problem suggested approaches
extant literature corresponding combinatorial problems NP-hard,
is, cannot solved efficiently general. raises question whether
approaches despite theoretically proven advantages (see, e.g., detailed discussion
Brams, 2008) useless practice.
One approach course try escape high complexity modifying concept
keeping still meaningful. regard tried change way total
misrepresentation calculated taking minimax (or Rawlsian) approach. appeared
help general caseall problems remain computationally hardhowever,
partially helped single-peaked elections: classical Monroe scheme remains
NP-hard, minimax version solved polynomial time.
general, several ways deal NP-hard problems. example, NPhardness based worst-case analysis hence one might able develop algorithms work efficiently instances. However, although unlikely, still might
happen outcome election leads hard instance. Then, would lead
situation political impasse unpredictable consequences.
Another common approach tackle NP-hard problems invoke approximation algorithms. scenarios context resource allocation sharable
items nearly optimal solution might sufficient approximation algorithms meaningful (Lu & Boutilier, 2011; Skowron, Faliszewski, & Slinko, 2012); scenarios,
political elections, use approximation algorithms hard imagine. voting rule
512

fiOn Computation Fully Proportional Representation

constitutional matter: whatever is, must adhered to. current legislation
candidate party ask recount and, approximation voting rule
used, may require using another approximation argue give better
representation. hard imagine prolonged court proceedings matters.
Based previous discussion, seems clearly desirable identify well-specified
settings optimal solution computed efficiently. extend
applicability fully proportional representation settings. regard,
conducted investigation two different directions. first class settings
parameters small (parameterized complexity analysis). second approach
restrict attention single-peaked domains.
Regarding parameterized complexity four studied problems, results negative (see Table 1). particular, natural well-motivated parameter
number winners, corresponding problems turned W[2]-complete. If,
however, addition winner set represent voters small total
misrepresentation, three four problems become tractable Borda misrepresentation function. Moreover, fixed-parameter tractability results respect
number voters number candidates, respectively, useful restricted
settings.
Regarding single-peaked elections, almost results positive come
polynomial-time algorithms (see Table 2). possible critique approach claim
single-peakedness way idealized model robust enough. smallest
honest mistake voter filling ballot may result election becoming singlepeaked. may secondary issue election important
voters may lead election almost single-peaked exactly singlepeaked. regard would interesting investigate difficult find singlepeaked profile closest given one. one might employ techniques socalled distance rationalizability approach (Baigent, 1987; Meskanen & Nurmi, 2008; Elkind,
Faliszewski, & Slinko, 2010a; Elkind et al., 2010b). thus surprising near singlepeakedness starting active area research (Faliszewski, Hemaspaandra,
& Hemaspaandra, 2011; Erdelyi, Lackner, & Pfandler, 2012). Since algorithms show
polynomial-time solvability important basic case single-peakedness, might
basis developing efficient algorithms extended settings.
Summarizing, work contributes important topic making fully proportional
representation ideas practical complements analysis method Potthof
Brams (1998), Procaccia et al. (2008) Lu Boutilier (2011).
6.2 Related Problems Scenarios
concluding work several open questions, we, first, describe relations
considered problems facility location problems and, second, describe reasonable
alternative multi-winner model. topics might lead interesting questions
future research.
513

fiBetzler, Slinko, & Uhlmann

6.2.1 Relations Facility Location.
basic scenario problem company needs choose set facility locations
serve set customers little cost possible. Fellows Fernau (2011)
investigated parameterized complexity variant problem closely related
CC-Multiwinner. Basically, facility locations considered set
candidates, customers multiset voters goal find set facility
locations serve customers. difference cost function: addition
term resembles misrepresentation every voter (customer), every facility
location comes certain cost required install facility.
Similar study, Fellows Fernau (2011) studied parameter number k
winners/selected facilities locations total cost. parameter k, W[2]-hardness
CC-Multiwinner follows reduction given facility location problem.
Regarding parameter total cost, results two papers directly comparable. due fact facility location problem stipulates
minimum cost 1 serving customer even best facility location (which
would analogue condition r(v, c) 1 misrepresentation function r).
case, considered problem fixed-parameter tractable respect total
cost. might come surprise since total cost/misrepresentation
least number voters fixed-parameter tractability respect parameter
holds four voting problems considered (Proposition 2). contrast,
condition r(v, c) 0 considered problems least W[2]-hard respect
total misrepresentation/cost (see Table 1).
close connection facility location multi-winner problems clearly seems
deserve attention future work. remark analogues several problems
considered work might make sense context facility location problem.
example, Monroe model might apply sets facilities every facility
serve number customers. Moreover, single-peaked scenario translates,
example, setting potential facility locations along one main street
resident ranks cost using facility according distance facility
place residence.
6.2.2 Multiset Candidates Model.
may compromise solution two systems Chamberlin Courant
Monroe. may still divide voters equal almost equal groups may assign
representative one group voters. Say, n voters k
representatives elected may split voters groups sizes n/k n/k+1
allow candidate represent one group. Mathematically would
result selecting set representatives cardinality k multiset
cardinality. classic Monroe (1995) example considers subscription newspapers
common room fact better fit multiset model. Indeed, demand, say
Financial Times, strong several copies newspaper subscribed to.
still need use weighted voting assembly case weights
integers.
514

fiOn Computation Fully Proportional Representation

illustrate difference let us consider six people electing representative assembly
three. Suppose candidates must come set = {a, b, c, d} preferences
voters follows:
4

b
c


2
c
b



set variant Monroe scheme give us set representatives {a, b, c}
multiset point view natural multiset {a2 , c} answer
could interpreted mean two votes given one c. multiset point
view seems natural here, indeed, b seem represent anybody nicely.
misrepresentation nonzero set version zero multiset one.
far know computational complexity computation winner
multiset model unstudied far. first glance, seems conceivable computational complexity multiset model lies complexity CC-Multiwinner
M-Multiwinner. leads interesting questions whether set winners
according multiset model computed polynomial time electorate
single peaked.
6.3 Open Questions
Several questions arise work.
CC- M-Multiwinner Borda misrepresentation function provided algorithms showing polynomial-time solvability constant misrepresentation
bound R. problems fixed-parameter tractable respect R?
Minimax M-Multiwinner Borda misrepresentation function fixed-parameter
tractable respect composite parameter (R, k)?
M-Multiwinner single-peaked elections shown NP-hardness
integer-valued misrepresentation functions. problem fixed-parameter tractable
respect number winners k or/and respect misrepresentation
bound R?
M-Multiwinner Borda misrepresentation function polynomial-time solvable single-peaked instances?
results single-peaked elections extended generalized single-peakedness
(e.g., defined Nehring & Puppe, 2007) almost single-peaked profiles (in
sense)? might particular interest problem finding closest single-peaked profile given one would turn polynomial-time solvable
(for distance set profiles).
515

fiBetzler, Slinko, & Uhlmann

7. Acknowledgments
work done Nadja Betzler stayed research visit University
Auckland. visit funded fellowship Deutscher Akademischer Austausch
Dienst (DAAD). Johannes Uhlmann partially supported DFG, project PAWS
NI-931/10.
grateful referees whose careful thoughtful reading significantly
improved paper. Moreover, thank Steven Brams interest work
valuable discussions Rolf Niedermeier useful comments support.

References
Ahuja, R. K., Magnanti, T. L., & Orlin, J. B. (1993). Network Flows: Theory, Algorithms,
Applications. Prentice Hall.
Baigent, N. (1987). Metric rationalisation social choice functions according principles
social choice. Mathematical Social Sciences, 13 (1), 5965.
Bartholdi III, J. J., Tovey, C. A., & Trick, M. A. (1989). computational difficulty
manipulating election. Social Choice Welfare, 6, 227241.
Betzler, N., Bredereck, R., Chen, J., & Niedermeier, R. (2012). Studies computational
aspects voting - parameterized complexity perspective. Multivariate Algorithmic Revolution Beyond, Vol. 7370 Lecture Notes Computer Science,
pp. 318363. Springer.
Betzler, N., Guo, J., & Niedermeier, R. (2010). Parameterized computational complexity
Dodgson Young elections. Information Computation, 208 (2), 165177.
Betzler, N., Hemmann, S., & Niedermeier, R. (2009). multivariate complexity analysis
determining possible winners given incomplete votes. Proceedings 21st
International Joint Conference Artificial Intelligence (IJCAI), pp. 5358.
Black, D. (1958). Theory Committees Elections. Cambridge University Press.
Booth, E., & Lueker, G. (1976). Testing consecutive ones property, interval graphs,
graph planarity using PQ-trees algorithms. Journal Computer System
Sciences, 13, 335379.
Brams, S. (2008). Mathematics Democracy. Princeton University Press.
Brams, S., & Fishburn, P. (2002). Voting procedures. Arrow, K., Sen, A. K., & Suzumura,
K. (Eds.), Handbook Social Choice Welfare, Vol. 1, pp. 173236. Elsevier.
Brandt, F., Brill, M., & Seedig, H. G. (2011). fixed-parameter tractability
composition-consistent tournament solutions. Proceedings 22nd International
Joint Conference Artificial Intelligence (IJCAI), pp. 8590. AAAI Press.
Brandt, F., Brill, M., Hemaspaandra, E., & Hemaspaandra, L. A. (2010). Bypassing combinatorial protections: Polynomial-time algorithms single-peaked electorates.
Proceedings 24th AAAI Conference Artificial Intelligence (AAAI), pp. 715
722.
516

fiOn Computation Fully Proportional Representation

Chamberlin, J. R., & Courant, P. N. (1983). Representative deliberations representative
decisions: Proportional representation Borda rule. American Political Science
Review, 77 (3), 718733.
Christian, R., Fellows, M. R., Rosamond, F. A., & Slinko, A. (2007). complexity
lobbying multiple referenda. Review Economic Design, 11 (3), 217224.
Conitzer, V. (2009). Eliciting single-peaked preferences using comparison queries. Journal
Artificial Intelligence Research, 35, 161191.
Conitzer, V. (2010). Making decisions based preferences multiple agents. Communications ACM, 53 (3), 8494.
Cormen, T. H., Leiserson, C. E., Rivest, R. L., & Stein, C. (2001). Introduction Algorithms
(2nd edition). MIT Press.
Dodgson, C. (1884). Principles Parliamentary Representation. Harrison, London.
Dorn, B., & Schlotter, I. (2010). Multivariate complexity analysis swap bribery.
Proceedings 5th International Symposium Parameterized Exact Computation (IPEC), Vol. 6478 LNCS, pp. 107122. Springer.
Downey, R. G., & Fellows, M. R. (1999). Parameterized Complexity. Springer.
Elkind, E., Faliszewski, P., & Slinko, A. (2010a). Cloning elections. Proceedings
24th AAAI Conference Artificial Intelligence (AAAI), pp. 768773.
Elkind, E., Faliszewski, P., & Slinko, A. (2010b). role distances defining voting
rules. Proceedings 9th International Conference Autonomous Agents
Multiagent Systems (AAMAS), pp. 375382.
Erdelyi, G., Lackner, M., & Pfandler, A. (2012). complexity nearly single-peaked
consistency. Proceedings 4th International Workshop Computational Social Choice (COMSOC 2012), pp. 179190.
Escoffier, B., Lang, J., & Ozturk, M. (2008). Single-peaked consistency complexity.
Proceedings 18th European Conference Artificial Intelligence (ECAI), pp.
366370. IOS Press.
Even, G., Levi, R., Rawitz, D., Schieber, B., Shahar, S., & Sviridenko, M. (2008). Algorithms capacitated rectangle stabbing lot sizing joint set-up costs. ACM
Transactions Algorithms, 4 (3), 34:134:17.
Faliszewski, P., Hemaspaandra, E., & Hemaspaandra, L. A. (2010). Using complexity
protext elections. Communications ACM, 53 (1), 7482.
Faliszewski, P., Hemaspaandra, E., Hemaspaandra, L. A., & Rothe, J. (2009a). Llull
Copeland voting computationally resist bribery constructive control. Journal
Artificial Intelligence Research, 35, 275341.
Faliszewski, P., Hemaspaandra, E., Hemaspaandra, L. A., & Rothe, J. (2009b). richer
understanding complexity election systems. Ravi, S., & Shukla, S.
(Eds.), Fundamental Problems Computing: Essays Honor Professor Daniel
J. Rosenkrantz, chap. 14, pp. 375406. Springer.
517

fiBetzler, Slinko, & Uhlmann

Faliszewski, P., & Procaccia, A. (2010). AIs war manipulation: winning?. AI
Magazine, 31 (4), 5364.
Faliszewski, P., Hemaspaandra, E., & Hemaspaandra, L. A. (2011). complexity
manipulative attacks nearly single-peaked electorates. Proceedings 13th
Conference Theoretical Aspects Rationality Knowledge, TARK XIII, pp.
228237, New York, NY, USA. ACM.
Farfel, J., & Conitzer, V. (2011). Aggregating value ranges: Preference elicitation
truthfulness. Journal Autonomous Agents Multi-Agent Systems, 22 (1), 127
150.
Fellows, M. R., & Fernau, H. (2011). Facility location problems: parameterized view.
Discrete Applied Mathematics, 159 (11), 11181130.
Flum, J., & Grohe, M. (2006). Parameterized Complexity Theory. Springer.
Fredman, M. L., & Tarjan, R. E. (1987). Fibonacci heaps uses improved network
optimization algorithms. Journal ACM, 34 (3), 596615.
Garey, M. R., & Johnson, D. S. (1979). Computers Intractability: Guide Theory
NP-Completeness. W. H. Freeman.
Garey, M. R., Johnson, D. S., & Stockmeyer, L. (1974). simplified NP-complete
problems. Proceedings sixth annual ACM symposium Theory computing
(STOC), pp. 4763. ACM.
Golumbic, M. (1980). Algorithmic Graph Theory Perfect Graphs. Academic Press.
Gonzalez, T. F. (1985). Clustering minimize maximum intercluster distance. Theoretical Computer Science, 38, 293306.
Harsanyi, J. (1995). maximin principle serve basis morality? critique
John Rawlss theory. American Political Science Review, 69 (2), 594606.
Impagliazzo, R., Paturi, R., & Zane, F. (2001). problems strongly exponential
complexity?. Journal Computer System Sciences, 63 (4), 512530.
Levin, J., & Nalebuff, B. (1995). introduction vote-counting schemes. Journal
Economic Perspectives, 9 (1), 326.
Lu, T., & Boutilier, C. (2011). Budgeted social choice: consensus personalized
decision making. Proceedings Twenty-second International Joint Conference
Artificial Intelligence (IJCAI-11), pp. 280286. presented COMSOC-10.
Meir, R., Procaccia, A. D., Rosenschein, J. S., & Zohar, A. (2008). complexity strategic behavior multi-winner elections. Journal Artificial Intelligence Research, 33,
149178.
Meskanen, T., & Nurmi, H. (2008). Closeness counts social choice. Braham, M., &
Steffen, F. (Eds.), Power, Freedom, Voting, pp. 289306. Springer.
Monroe, B. L. (1995). Fully proportial representation. American Political Science Review,
89 (4), 925940.
Moulin, H. (1991). Axioms Cooperative Decision Making. Cambridge University Press.
518

fiOn Computation Fully Proportional Representation

Nehring, K., & Puppe, C. (2007). structure strategy-proof social choice Part I: General characterization possibility results median spaces. Journal Economic
Theory, 135 (1), 269305.
Niedermeier, R. (2006). Invitation Fixed-Parameter Algorithms. Oxford University Press.
Penrose, L. (1946). elementary statistics majority voting. Journal Royal
Statistical Society, 109, 5357.
Potthof, R. F., & Brams, S. J. (1998). Proportional representation: Broadening options.
Journal Theoretical Politics, 10 (2), 147178.
Procaccia, A. D., Rosenschein, J. S., & Zohar, A. (2007). Multi-winner elections: Complexity manipulation, control winner-determination. Proceedings 20th
International Joint Conference Artificial Intelligence (IJCAI), pp. 14761481.
Procaccia, A. D., Rosenschein, J. S., & Zohar, A. (2008). complexity achieving
proportional representation. Social Choice Welfare, 30, 353362.
Rawls, J. (1999). Theory Justice. Cambridge: Harvard University Press, 1971, Revised
Edition (Cambridge: Harvard University Press).
Skowron, P., Faliszewski, P., & Slinko, A. M. (2012). Proportional representation resource
allocation: Approximability results. CoRR, abs/1208.1661.
Slomczynski, W., & Zyczkowski, K. (2006). Penrose voting system optimal quota. Acta
Physica Polonica, B 37 (11), 31333143.
Tideman, N., & Richardson, R. (2000). Better voting methods technology:
refinement-manageability trade-off single transferable vote. Public Choice,
103 (1-2), 1334.
Tideman, N. (2006). Collective Decisions Voting. Ashgate Publishing Ltd.

519


