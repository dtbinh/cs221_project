Journal Artificial Intelligence Research 47 (2013) 35-70

Submitted 12/12; published 05/13

Scheduling Dynamic Aircraft Repair Shop
Limited Repair Resources
Maliheh Aramon Bajestani
J. Christopher Beck

maramon@mie.utoronto.ca
jcb@mie.utoronto.ca

Department Mechanical & Industrial Engineering
University Toronto, Canada

Abstract
address dynamic repair shop scheduling problem context military aircraft
fleet management goal maintain full complement aircraft longterm. number flights, requirement specific number type
aircraft, already scheduled long horizon. need assign aircraft flights
schedule repair activities considering flights requirements, repair capacity,
aircraft failures. number aircraft awaiting repair dynamically changes
time due failures therefore necessary rebuild repair schedule online.
solve problem, view dynamic repair shop successive static repair scheduling
sub-problems shorter time periods. propose complete approach based
logic-based Benders decomposition solve static sub-problems, design different
rescheduling policies schedule dynamic repair shop. Computational experiments
demonstrate Benders model able find prove optimal solutions average
four times faster mixed integer programming model. rescheduling approach
aspects scheduling longer horizon quickly adjusting schedule
increases aircraft available long term 10% compared approaches
either one aspects alone.

1. Introduction
United States Air Force website outlines readiness one vital elements ensure
operational effectiveness defense strategies (Schwartz, 2012). Deficiency resourcing
operations maintenance stated common culprit poor readiness. Since
air forces budget-constrained highly dynamic environments, optimal allocation
resources activities maintain readiness appropriate level challenging.
paper, study problem context military aircraft repair shop readiness
defined ability effectively carry pre-scheduled missions. need decide
failed aircraft repaired guarantee availability aircraft high
steady level. However, high frequency unexpected failures military aircraft (Safaei,
Banjevic, & Jardine, 2011) limited repair resources workforce, tools, space
(Kozanidis, Gavranis, & Kostarelou, 2012) constrain consistent aircraft availability.
Motivated work Safaei et al. (2010, 2011), study problem scheduling
military aircraft repair shop, number flights planned long horizon.
Every flight, called wave, maximum requirement specific number aircraft
different types though partially carried without maximum complement.
beginning time horizon, aircraft either ready pre-flight check
c
2013
AI Access Foundation. rights reserved.

fiAramon Bajestani & Beck

awaiting repair repair shop. Aircraft flow long horizon illustrated Figure 1.
goal determine assignment aircraft waves schedule repair jobs
maximize flight coverage, is, extent aircraft requirements
flights met. aircraft fails pre- post-flight check, enters
repair shop incorporated current repair schedule. aircraft failure
requires set independent repair activities known characteristics processing
times resource requirements scheduled repair resources limited capacity.

Allocated Flight



Pre-Flight Check

Failure

Flight

Post-Flight Check

Yes
Yes

Repair Shop

Failure



Figure 1: Aircraft flow among waves, checks, repair shop long horizon.
central idea solution approach view dynamic repair shop successive static sub-problems shorter time periods. solution static sub-problem
determines assignment aircraft flights schedule repair jobs maximizing
flight coverage. failed aircraft enters repair shop previous repair
schedule still execution, reschedule repair activities solving new static
sub-problem.
proving NP-hardness static sub-problem, explore several techniques
solve problem: mixed integer programming (MIP); constraint programming (CP);
logic-based Benders decomposition (LBBD) using either MIP CP; dispatching
heuristic motivated Apparent Tardiness Cost (ATC) dispatching rule.
design three different rescheduling policies based length scheduling horizon
frequently rescheduling done.
perform two separate empirical studies. first indicates integration
dispatching heuristic LBBD results lowest mean run-time techniques
tested optimally schedule repair shop. second experiment demonstrates
defining static scheduling problem longer horizon rescheduling
frequently provide flights 10% higher coverage either one alone.
remainder paper organized follows: define problem, provide
overview relevant literature Section 2. Section 3 proves NP-hardness
static sub-problem, defines number solution approaches it, presents details
proposed policies rescheduling dynamic repair shop, describes model
aircraft failures. computational results performance different scheduling
techniques rescheduling done described Section 4.
discussion solution approach results presented Section 5. end
conclusion directions future work Section 6.
36

fiScheduling Dynamic Aircraft Repair Shop

2. Background
section, formal definition problem given relevant literature
reviewed.
2.1 Problem Definition
Figure 2 snapshot problem time 0, circles represent aircraft. number
flights (five shown) corresponding pre- post-flight checks already
scheduled long horizon. assumed total number aircraft constant
long horizon. number aircraft (three diagram) ready pre-flight
check others currently shop awaiting repair proceed
pre-flight check. Failure detected check assume check
always correctly assess status aircraft negligible cost duration
check incorporated length corresponding wave.

0
Repair Shop

...
st1
Wave-1

et1 st
2

et2
Wave-2

st3

et3
Wave-3

...

st4

et4
Wave-4

st5

et5
Wave-5

Checks

Figure 2: Snapshot problem time 0 long horizon.
goal assign aircraft waves maximize coverage time
creating feasible repair schedule. scheduling problem constraints
repair shop limited capacity aircraft subject breakdown. assume
aircraft fails, goes repair shop waits repair operations
performed.
use following notation represent problem.
N set aircraft. n failure rate aircraft n N denoting
frequency failure per time unit. example failure rate 0.2 per day,
means mean time aircraft failure 5 days.
K set aircraft types. Ik denotes set aircraft type k K k
aircraft ready (i.e., repair shop time 0). Let |Ik | denote number
aircraft type k, |Ik | k aircraft type k repair shop time 0.
k mean failure rate aircraft type k.
R set repair resources (called trades). maximum capacity trade r R
Cr .
W set waves. wave, w W , start-time, stw , end-time,
etw . wave requires akw aircraft type k.
J set existing jobs repair shop. job associated specific
aircraft type. Mr set jobs requiring trade r. job might require
37

fiAramon Bajestani & Beck

one trade completed. processing time job j trade r pjr
cjr capacity trade r required job j.
model deterioration aircraft, time flies wave failure rate, n ,
increases percent, i.e., failure rate (1 + 0.01 )n flight. aircraft
fails, failure rate repair returns failure.
words, one standard repair models maintenance literature, repair
minimal (Wang, 2002). probability diagnosing aircraft n failed pre-
post-flight checks function failure rate right checks denoted f pre (n )
f post (n ). probability failure detection pre-flight checks smaller
post-flight checks aircraft either released repair shop
already passed previous post-flight check successfully (Safaei et al., 2011).
find probability failure aircraft pre- post-flight checks specific
wave, need track complete history aircraft. example, assume
given aircraft repaired assigned first wave, three paths:
aircraft fails pre-flight check; aircraft passes pre-flight check, flies wave,
fails post-flight check; aircraft passes pre-flight check, flies wave,
passes post-flight check. Therefore, availability aircraft second wave
represented random variable whose expected value depends probability
three different paths scheduling decisions repair failed aircraft
second wave. Similarly availability aircraft subsequent waves depends
entire path checks, repair shop, waves. number waves
aircraft increase, size state space become prohibitive. Furthermore,
repair scheduling decisions impact aircraft histories: probability
aircraft available third wave different depending repaired time
first wave second wave. details approximating failure
probabilities presented Section 3.2.1.
complexity problem shown, prove NP-hard
Section 3.1.
2.2 Literature Review
section provides necessary background repair shop scheduling problem
logic-based Benders decomposition.
2.2.1 Repair Shop Scheduling
Repair shops mainly studied machine-repairman problem (Haque & Armstrong, 2007; Stecke, 1992) set workers set machines
subject failures therefore need repair. Workers machines respectively correspond trades aircraft, problem. number workers less
number machines, necessary allocate repair jobs workers goal
optimizing given performance measure (e.g., total expected machine downtime)
long-term. Derman, Liberman, Ross (1980) early work solving
scheduling problem repair shop single repairman. showed repairing failed machines non-decreasing order failure rate stochastically maximizes
38

fiScheduling Dynamic Aircraft Repair Shop

number working machines. literature scheduling repair shop
extended considering multiple repairmen, preemptive non-preemptive repair,
different failure repair distributions. comprehensive review literature
scheduling repair system provided Iravani, Krishnamurthy, Chao (2007).
analytical models literature mainly developed using Markov Decision
Processes (dynamic programming) guarantee optimality given performance
measure long-term. models often consider combinatorics
real scheduling problems different repair capacity limits, different due dates,
different resource processing requirements. Therefore, typically result static
dispatching-type repair policy similar found Derman et al. (1980). However,
problem, waves different plane requirements processing times
resource requirements repair activities become known enter repair
shop. Therefore, believe better performance achieved dealing directly
combinatorics explicitly scheduling repair shop meet waves.
handle uncertain combinatorial structure scheduling problems, use
dynamic scheduling approach.
Dynamic scheduling methodology developed scheduling literature
operational uncertainties machine breakdowns unexpected arrival new
orders prevent execution schedule planned (Aytug, Lawley, McKay, Mohan,
& Uzsoy, 2005; ODonovan, Uzsoy, & McKay, 1999). dynamic scheduling problem
often viewed collection linked static sub-problems. Taking view makes
myriad algorithms developed static scheduling problems applicable. developed
algorithms deal combinatorics scheduling problems optimize
quality schedule discrete time points, i.e., static sub-problem. However,
cannot completely deal operational uncertainties, real-time disruption
requires modification schedule either permit execution improve
quality schedule considering recently revealed information. process
modifying previous schedule called rescheduling (Vieira, Hermann, & Lin, 2003;
Aytug et al., 2005; Bidot, Vidal, Laborie, & Beck, 2009). solve static sub-problems
connect using rescheduling strategies main aspects dynamic
scheduling research. Although aware using dynamic scheduling repair
system, successfully applied variety scheduling problems including single
machine (Ovacik & Uzsoy, 1994; ODonovan et al., 1999; Cowling & Johansson, 2002),
parallel machines (Vieira, Hermann, & Lin, 2000; Ovacik & Uzsoy, 1995), job shop
(Sabuncuoglu & Bayiz, 2000; Liu, Ong, & Ng, 2005; Vinod & Sridharan, 2011).
areas literature similarities static problem operational
level maintenance scheduling problem, general, flight maintenance planning
problem military aircraft, specifically. former literature addresses problem
finding schedule given maintenance activities sum maintenance costs
minimized. focus operational level, determining maintenance activities
performed time period (Budai, Huisman, & Dekker, 2006). Starting early
work Wagner, Giglio, Glaser (1964), literature extended developing
mathematical models effective solution approaches variety applications (Frost
& Dechter, 1998; Haghani & Shafahi, 2002; Budai et al., 2006; Grigoriev, van de Klundert,
& Spieksma, 2006). latter literature studies problem maintenance planning
39

fiAramon Bajestani & Beck

mission assignment military aircraft goal decide aircraft fly
one perform maintenance on, maximizing long-term availability. Similar
maintenance scheduling literature, mathematical programming common approach
solve problems literature. Kozanidis, Gavranis, Kostarelou (2012) recently
proposed mixed integer non-linear programming model optimize joint flight
maintenance plan mission aircraft.
Safaei et al. (2010) modeled static problem addressed operational level
maintenance scheduling problem using MIP. MIP includes assignment problem
two network problems: former assigns aircraft waves latter calculates
expected number available aircraft waves well expected number
available workers repair jobs. later extended work using slightly
different MIP model time-indexed approach used enforce workforce
availability constraint verified validity model number instances
different combinations workforce sizes (Safaei et al., 2011).
difference static problem addressed paper previous
works operational maintenance scheduling objective function (flight coverage) depends scheduling decisions outcomes preand post-flight checks. two quite different components problem motivate
decomposition approach, logic-based Benders decomposition, reviewed below.
2.2.2 Logic-Based Benders Decomposition
classical Benders decomposition (Benders, 1962; Geoffrion & Graves, 1974) mathematical programming approach solving large-scale mixed integer programming models.
partitions problem mixed integer master problem (MP) relaxation
global model set linear sub-problems (SPs). Solving problem classical
Benders involves iteratively solving MP optimality using solution generate sub-problems. linear programming dual SPs solved derive
tightest bound global cost function. bound greater equal
current MP solution (assuming maximization problem), MP solution SP
solutions constitute globally optimal solution. Otherwise, constraint, Benders cut,
added MP express violated bound another iteration performed.
Logic-based Benders decomposition (Hooker & Yan, 1995; Hooker & Ottosson, 2003)
developed excluding necessity MP mixed integer model SPs
linear. Therefore, inference duals (Hooker, 2005) SPs solved rather
linear duals find tightest bound global cost function original
constraints current MP solution. Although logic-based Benders decomposition
flexibility modeling problems, standard procedure derive
Benders cuts.
Representing relaxation SPs MP, designing strong Benders cut
great importance decreasing computational effort identify globally feasible
optimal solution. former results MP solutions likely satisfy SPs,
latter rules large number MP solutions iteration (Hooker, 2007).
Logic-based Benders decomposition shown effective wide range
problems including scheduling (Hooker, 2005, 2007; Beck, 2010), facility vehicle
40

fiScheduling Dynamic Aircraft Repair Shop

allocation (Fazel-Zarandi & Beck, 2012), queue design control problems (Terekhov,
Beck, & Brown, 2009).

3. Solution Approach
main idea solution approach view dynamic problem linked successive
static sub-problems. noted above, common approach dynamic scheduling.
view results rescheduling strategy based scheduling static sub-problems
shorter time periods. Therefore, two sub-goals: solve connect
static sub-problems. section, first show static problem NP-hard
present different solution techniques solving it. define three rescheduling
strategies designed connect static sub-problems. Finally, describe approach
modeling dynamic events, i.e., aircraft failures.
3.1 Complexity Static Repair Shop Problem
establish NP-hardness static repair shop problem reduction single
machine scheduling problem objective ofP
minimizing weighted number tardy
jobs common due date, i.e., 1|dj = d| wj Uj 1 dj , wj , Uj denote
due date, weight, variable representing whether job tardy job j,
respectively. Note job j tardy processing finished due date.
problem equivalent one dimensional knapsack problem non-uniform profit
shown NP-complete reduction PARTITION problem (Pinedo,
2002).
Theorem 1. static problem NP-hard.
Proof. show instance single machine scheduling problem, I, common due date objective minimizing weighted number tardy jobs
reduces static repair shop problem. instance I, assume jobs,
jth processing time tj , weight wj , common due date d. Without
loss generality, assume weights, wj , interval [0, 1].
objective schedule jobs sum weights tardy jobs minimized equivalently sum non-tardy job weights maximized. instance
I, instance static repair shop problem formulated one
wave, failed aircraft repair shop (|N | = ), aircraft types
(|K| = ), one repair resource (|R| = 1) capacity C = 1. start-time
wave st1 = d, requiring aircraft. failed aircraft, j, different type,
corresponds one repair job repair shop processing time pj1 = tj
resource requirement cj1 = 1 single resource. probability failure precheck wave aircraft j (1 wj ). repaired aircraft j contributes flight
coverage survives pre-check probability wj . Therefore, maximize flight
coverage, goal schedule failed aircraft sum probabilities
1. notation used describing problem scheduling literature || represents
machine environment, describes processing characteristics constraints detail, denotes
objective function (Pinedo, 2002).

41

fiAramon Bajestani & Beck

P
repaired aircraft survives pre-check, i.e.,
wj maximized. goal equivalent
maximizing sum non-tardy job weights instance I. single machine
scheduling problem objective
weighted number tardy jobs
P
common due date, i.e., 1|dj = d| wj Uj , NP-hard (Pinedo, 2002), conclude
static repair shop problem NP-hard.
3.2 Scheduling Techniques
investigate number approaches solve repair shop scheduling problem including
mixed integer programming, constraint programming, logic-based Benders decomposition,
dispatch rule, simple hybrid approach. approaches described detail
section.
3.2.1 Mixed Integer Programming
Mixed integer programming (MIP) default solution approach many scheduling
problems (Heinz & Beck, 2012). MIP formulation, constraints represented
form linear equalities and/or inequalities polyhedral theory linear programming
techniques relaxation cutting planes embedded state-of-the-art MIP
solvers applied solve problem (Queyranne & Schulz, 1994; Heinz & Beck, 2012).
propose novel mixed integer programming model uncertainty outcome
checks modeled expectation. model different and, show
Section 4.1.2, significantly faster Safaei et al. (2010, 2011). Table 1
summarizes notation defined Section 2.1 defines decision variables
MIP model.
section, without loss generality, interpret W set waves
current static sub-problem consider start-times waves due dates finish
repair aircraft. Therefore, define = {di |i = 1, 2, ..., |W |, |W | + 1}
ordered set due dates consisting wave start-times plus big value, B, sorted
ascending order. specifically, di equals start-time i-th wave, sti .
limited repair capacity, possible failed aircraft cannot repaired
time waves. case, due date repair job assigned
d|W |+1 = B. model, B equals sum start-time last wave
maximum processing times jobs trades, i.e., d|W | + max(pjr )
j,r

enforce repair resource capacity d|W | .
explained Section 2.1, exact calculation aircraft failure probability
consequently expected number available aircraft intractable since depends
complete aircraft histories. Therefore, distinguish aircraft based type
use recursive equation (Equation 4) approximate expected number available
aircraft. details Equation (4) provided later section. aircraft type
k, average failure rate, k , used calculate probability failure preand post-flight checks, respectively: kpre = f pre (k ) kpost = f post (k ). Furthermore,
failure rate aircraft assumed remain constant scheduling horizon
static problem increase flying wave. Therefore, approximation
likely underestimate number actual aircraft failures.
42

fiScheduling Dynamic Aircraft Repair Shop

Notation
N = {1, ..., n, ..., |N |}
K = {1, ..., k, ..., |K|}
R = {1, ..., r, ..., |R|}
W = {1, ..., w, ..., |W |}
J = {1, ..., j, ..., |J|}
n
Ik
k
k

set aircraft
set aircraft types
set trades
set waves
set repair jobs (failed aircraft) repair shop
failure rate aircraft n
set aircraft type k
number aircraft type k repair shop time 0
ThePaverage failure rate aircraft type k equal


pre
k

kpost

stw

etw

akw

Mr

Cr

pjr

cjr

= {d1 , ..., di , ..., d|W |+1 }The
B

Decision Variables
Zkw
xij
stjr
Inferred Variables
Ukw
Ekw
etjr

nIk

n

|Ik |

probability aircraft type k fails pre-flight check
probability aircraft type k fails post-flight check
start-time wave w
end-time wave w
maximum number aircraft type k required wave w
set repair jobs requiring trade r
maximum capacity trade r
processing time job j trade r
capacity trade r required process job j
set due dates di = sti , |W | d|W |+1 = B
big value equal d|W | + max(pjr )
j,r

number aircraft type k assigned fly wave w
xij = 1 ith due date assigned job j,
xij = 0 otherwise
start-time job j trade r
number aircraft type k whose repair due date stw
expected number available aircraft type k wave w
end-time job j trade r

Table 1: Summary notation; decision variables inferred variables MIP
model.

MIP model shown Figure 3 Zkw , number aircraft type k
assigned fly wave w, true decision variable: choose send fewer aircraft
wave currently (in expectation) available. contrast, Ekw expected
number aircraft type k available wave w based probabilistic outcomes
previous waves number newly repaired aircraft (Ukw ). refer model
MIP rely default branch-and-bound search IBM ILOG CPLEX
12.3 solver, state-of-the-art commercial MIP solver solve it. details MIP model
summarized follows:
43

fiAramon Bajestani & Beck

Maximize

|W | |K|
X
X

Zkw

(1)

w=1 k=1

Subject to:
X
Ukw =

k, w

(2)

k

(3)

w(w 6= 1), k

(4)

Zkw akw ,

k, w

(5)

Zkw Ekw ,

k, w

(6)

j

(7)

j, r

(8)

j, r

(9)

t(t st|W | ), r

(10)

i, j

(11)

k, w

(12)

j, r

(13)

k, w

(14)

xij ,

jIk , i=w

Ek1 = (k + Uk1 )(1 kpre ),
Ekw = (Ek(w1) Zk(w1) + Ukw )(1
X
+
Zkv (1 kpost )(1 kpre ),

kpre )

vVw

|W |+1

X

xij = 1,

i=1

stjr + pjr = etjr ,
|W |+1

etjr

X

xij di ,

i=1

X

cjr ((t stjr ) (t < etjr )) Cr ,

jMr

xij {0, 1},
0 Ekw |N |,
+

stjr , etjr Z {0},
+

Zkw Z {0}, Zkw |N |,

Figure 3: global MIP model static repair shop scheduling problem.
objective function (1) maximizes number aircraft assigned waves. Although modeled uncertain outcome flight checks expectation,
objective function expected wave coverage (i) wave
specific upper bounds plane requirements (ii) maximum wave coverage
wave 1. expected number available aircraft, Ekw ,
requirement, akw , given wave, extra aircraft fly wave
contribute coverage. flying extra planes, decrease
probability available next wave.
Equation (2) calculates number aircraft type k whose repair due date stw .
words, summing decision variables xij job j aircraft
type k i-th due date corresponds start-time wave w gives
44

fiScheduling Dynamic Aircraft Repair Shop

number aircraft type k leaving repair shop right pre-flight check
wave w.
Equation (3) calculates expected number available aircraft type k
first wave.
Equation (4) calculates expected number available aircraft type k
waves. first term includes aircraft available used previous
wave, i.e., (Ek(w1) Zk(w1) ), newly arrived repair shop, i.e.,
Ukw . second term sums aircraft become available
completed waves since previous wave started Vw = {v|v W, stw1 < etv
stw }.
Constraints (5) (6) ensure number aircraft assigned fly
wave less equal number aircraft required expected
number available.
Constraint (7) assigns exactly one due date job.
Equation (8) calculates end-time jobs.
Constraint (9) guarantees end-time job less equal
assigned due date.
Constraint (10) logical-and constraint enforcing capacity limit trade r
summing capacity required set jobs repair time t. Since
jobs start-time last wave contribute coverage,
capacity constraint enforced start-time last wave, i.e., st|W | .
logical constraint evaluates 1 two component constraints
evaluate 1 0 otherwise. logical inequality evaluates 1
true 0 otherwise. example, job j repair time t,
logical inequalities, (stjr t) (t < etjr ) evaluate 1 logical-and
constraint, therefore, evaluates 1. linearize constraint, rely default
approaches IBM ILOG CPLEX handling logical constraints. approaches
translate logical constraints equivalent linear counterparts creation
new variables constraints (CPLEX, 2011).
Constraints (11) (14) define domains decision variables.
3.2.2 Constraint Programming
Constraint programming paradigm solving combinatorial optimization problems.
success constraint programming (CP) solving wide variety scheduling problems
well established literature (Beck, Davenport, Davis, & Fox, 1998; Baptiste, Pape,
& Nuijten, 2001). scheduling problems usually defined one several instances
constraints satisfaction problem (CSP) (Baptiste et al., 2001). instance CSP
formally described triple (V, D, C) V = {V1 , V2 , ..., Vn } set
n variables, = {D1 , D2 , ..., Dn } set variable domains, Di corresponding
possible values Vi take, C = {C1 , C2 , ..., Cm } set constraints,
45

fiAramon Bajestani & Beck

defined subset variables. constraint Ck = {Vi , ..., Vj } defined
Cartesian product domains variables scope Di ... Dj satisfied
assignment variables scope corresponds one value tuples
constraint relation (Beck, 1999). Representing scheduling problems using CSPs results
modeling flexibility compared mixed integer programming models
restriction type decision variables constraints.
CP solves scheduling problems applying three general tools heuristic search, constraint propagation, backtracking within branch-and-bound search tree (Beck, 1999;
Beck & Refalo, 2003). Constraint propagation, one key principles contributing
success CP, exploited representing problem conjunction global constraints, embeds efficient inference techniques reduce solution space
within branch-and-bound search tree (Baptiste et al., 2001). possibility using two
global constraints, cumulative global cardinality, formulate static repair shop
problem motivates CP model shown Figure 4.
formulate problem using CP, use decision variables Table 1.
However, instead xij , define Dj corresponding assigned due date job j.
CP model differs MIP several constraints defined below.
global cardinality constraint (gcc) syntax gcc(card, value, base)
card, value, base arrays variables, values, variables, respectively. gcc
constraint satisfied value[i] taken card[i] elements base. CP model,
aircraft type k, Constraint (15) enforces Ukw counts number times
start-time wave w assigned due date jobs associated failed aircraft
type k.
cumulative constraint syntax cumulative(s, p, c, C) = {s1 , s2 , ..., sn },
p = {p1 , p2 , ..., pn }, c = {c1 , c2 , ..., cn } vectors start-time variables, processing time values, amount required resource job, respectively,
C total resource capacity value. cumulative constraint ensures total
amount resource capacity used time never exceeds C (Hooker, 2005).
Constraint (17) enforces time windows: job j trade r cannot started later
(Dj pjr ). Constraint (18) defines domain decision variables Dj .

Maximize Objective (1)
Subject to:
Constraints (3) (6), (12), (14)
gcc([Uk1 , Uk2 , ..., Uk|W | ], [st1 , st2 , ..., st|W | ], [DjIk ]),

k

(15)

cumulative([stjr |j Mr ], [pjr |j Mr ], [cjr |j Mr ], Cr ),

r

(16)

j, r

(17)

j

(18)

0 stjr Dj pjr ,
Dj {st1 , st2 , ..., st|W | , B},

Figure 4: CP model static repair shop scheduling problem.
46

fiScheduling Dynamic Aircraft Repair Shop

implement model using IBM ILOG CP Optimizer 12.3 default search
used. start-time variables, stjr , defined IloIntervalVar objects. implement
global constraints, use IloDistribute class gcc constraint IloPulse
IloAlwaysIn functions cumulative constraint. Note that, cumulative constraint
implemented time point st|W | .
3.2.3 Logic-Based Benders Decomposition
static problem requires making two different decisions, assigning aircraft waves
scheduling repair jobs failed aircraft, decomposition approach may well suited.
logic-based Benders decomposition (LBBD) method formulated master
problem assigns aircraft waves maximize wave coverage sub-problems create
repair schedules given due dates derived master problem solution.
propose four variations: Benders-MIP Benders-MIP-T, master problems
solved using MIP, latter tighter sub-problem relaxation (T stands tighter);
Benders-CP Benders-CP-T constraint programming-based master problem.
models use CP scheduling sub-problems.
Due-Date Assignment Master Problem (DAMP): MIP Model formulate
master problem MIP model, use binary variable xij job j i-th due
date meaning global MIP model. MIP formulation DAMP
follows:

Maximize Objective (1)
Subject to:

(19)

Constraints (2) (7), (11), (12), (14)
|W |+1

X

cjr pjr Cr max (

jMr

jMr

X

xij di ),

r

(20)

i=1

MIP cuts

(21)

master problem incorporates number constraints global MIP model.
represent start-times jobs fully represent capacity
trades. common Benders decomposition, master problem includes relaxation
sub-problems (Constraints 20) Benders cuts (Constraints 21).
Sub-problem Relaxation Defining area job j area rectangle height
cjr width pjr , Constraint (20) relaxation capacity trade, expressing
limit area jobs executed. limit defined using area bounded
capacity trade time interval [0, ] maximum due date
assigned jobs trade. relaxation due Hooker (2005, 2007).
tighten relaxation sub-problems Benders-MIP-T approach enforcing
analogous limit multiple intervals: [0, stw ] wave w. interval,
sum areas jobs whose assigned due date less equal end-time
interval must less equal available area. relaxation special
47

fiAramon Bajestani & Beck

case interval relaxation due Hooker (2005, 2007). Formally, tighter relaxation
replaces Constraint (20) with:
|W |+1

X
jMr

cjr pjr ((

X

xij di ) stw ) stw Cr ,

r, w

(22)

i=1

P|W |+1
(( i=1 xij di ) stw ) logical inequality evaluating 1 assigned
due date job j less equal stw .
Benders Cuts defining cut formally, demonstrate intuition
example. Consider due date set, = {14, 17, 20, 35}, and, given trade five
jobs, current master solution: x21 = 1, x12 = 1, x43 = 1, x14 = 1, x15 = 1. Job 1
assigned second due date, 17, job 2 first due date, 14, on.
current solution infeasible due resource capacity trade, know
least one jobs must later due date current master solution.
can, therefore, constrain sum consecutive xij including ones
currently assigned 1 one less number jobs. example, cut
would be:

(x11 + x21 ) + (x12 )+
(x13 + x23 + x33 + x43 ) + (x14 ) + (x15 ) 5 1
variables represent possible due dates less equal currently assigned
jobs. constraining variables one less number jobs,
least one job must assigned later due date.
Formally, assume iteration h, solution DAMP assigns set, Q, due
dates jobs trade r. Assume feasible solution trade r
assignments Q. cut iteration h is:
X X

xij |Mr | 1,

r

(23)

jMr iI h
jr

h = {i0 |i0 i, xh = 1} set due date indices
job j trade r, Ijr
ij
less equal due date index assigned job j iteration h |Mr |
number jobs trade r. validity cut proved Section 3.2.6.

Due-Date Assignment Master Problem: CP Model formulate
DAMP using CP. Let Dj variable corresponding due date job j similar
global CP model.
48

fiScheduling Dynamic Aircraft Repair Shop

Maximize Objective (1)
Subject to:
Constraints (3) (6), (12), (14), (15), (18)
X
cjr pjr Cr max (Dj ),

r

jMr

jMr

(24)

CP cuts

(25)

master problem modeled using CP includes several constraints global CP
model. Constraint (24) represents relaxation repair capacity limit trades
guaranteeing sum processing areas set jobs trade
exceed maximum available area.
tighter relaxation CP-based DAMP replaces (24) following defining
Benders-CP-T approach logical inequality (Dj stw ) evaluates 1
due date job j, Dj , less equal start time wave w, stw .
X

cjr pjr (Dj stw ) stw Cr ,

r, w

jMr

CP cut based reasoning MIP cuts. assigned set due
dates jobs trade r feasible solution SP, cut guarantee
next iteration least one assigned due dates greater value.
Formally, cut is:
_

Dj > Djh ,

j Mr

Djh due date assigned job j iteration h,
constraints Mr set jobs trade r.

(26)
W

represents logical-or

Repair Scheduling Sub-problem Given set due dates assigned jobs
trade, goal repair scheduling sub-problem (RSSP) assign start-times
jobs satisfy due dates trade capacity. use CP formulation
RSSP trade modeled cumulative constraint.
cumulative([stjr |j Mr ], [pjr |j Mr ], [cjr |j Mr ], Cr ),
0 stjr Djh pjr ,

r
j, r

(27)

Recall [stjr |j Mr ] tuple start-time variables jobs trade r,
Djh value assigned due date job j master problem iteration h.
parameters pjr , cjr , Cr defined Table 1. Constraint (27) enforces time windows
similar constraint (17). worth mentioning RSSP, due date job j,
Djh , value; however, decision variable, Dj , global CP model.
Since CP approaches shown significantly efficient MIP simple
scheduling problems resource capacity constraints (Hooker & Ottosson, 2003; Hooker,
2005, 2007), experiment MIP formulations sub-problems.
49

fiAramon Bajestani & Beck

implement master problems Benders-MIP Benders-MIP-T, use IBM
ILOG CPLEX 12.3 solver; Benders-CP Benders-CP-T master problems
RSSP implemented IBM ILOG CP Optimizer 12.3. details implementation
global constraints similar Section 3.2.2.
3.2.4 Dispatching Heuristic
Since static problem NP-hard, solving optimality may prohibitively expensive.
therefore investigate heuristic approach, inspired Apparent Tardiness Cost
(ATC) heuristic, composite dispatching rule typically applied single machine
scheduling problem sum weighted tardiness objective (Pinedo, 2005).
heuristic computes ranking index job sorts jobs ascending order
index. heuristic iterates jobs, scheduling job earliest
available time. ranking index use follows:
Ij = ST (kj ) exp(

F Nj
),
F Cj

j

let kj denote type aircraft j, ST (kj ) start-time first wave
requires aircraft type kj . F Nj fraction total number aircraft type
kj required first wave requires kj , F Cj maximum proportion
capacity needed job j required trades, follows.
F Cj = max(
r

pjr cjr
)
ST (kj )Cr

Intuitively, earlier start-time first relevant wave, higher proportion
aircraft required wave, lower proportion capacity required
wave, sooner job scheduled. exponential function used place
weight start-time.
preliminary experiments, three dispatching heuristics investigated,
chosen heuristic performing best. first two heuristics rank jobs slightly
max(pjr )

max(pjr cjr )

different ranking indices equal Ij = ST (kj ) rF Nj Ij = ST (kj ) r F Nj ,
respectively. third heuristic two-stage approach based decomposition.
first stage finds number aircraft type assigned wave second stage
schedules jobs increasing order max(pjr cjr ) considering values determined
j,r

first stage upper bounds number jobs required wave.
preliminary experiments demonstrated chosen dispatching rule results average
6% higher wave coverage compared first two heuristics coverage
third heuristic advantage easy understand implement.
3.2.5 Hybrid Heuristic-Complete Approaches
hybrid heuristic-complete approach heuristic solution provides lower bound
maximization objective (Equation 1) may improve performance complete
approaches. Therefore, simple hybrid first runs dispatching heuristic uses
objective value starting lower bound complete approaches. Assume
50

fiScheduling Dynamic Aircraft Repair Shop

heuristic finds solution, S, f (S) number aircraft assigned waves.
complete approaches modified adding following constraint:
|W | |K|
X
X

Zkw f (S)

w=1 k=1

LBBD variations, constraint added master problem.
3.2.6 Theoretical Results
guarantee finite convergence LBBD model globally optimal solution,
Benders cuts must valid master decision variables must finite domains.
Benders cut valid given iteration, h, (1) excludes current globally
infeasible assignment master problem without (2) removing globally optimal
assignments (Chu & Xia, 2004). former guarantees finite convergence
latter guarantees optimality. decision variables DAMP finite domain,
sufficient prove satisfaction two conditions.
Theorem 2. Cut (23) valid.
Proof. condition (1), sub-problem iteration h trade r, definition:
X X

xij = |Mr |

jMr iI h
jr

Consequently, cut (23) excludes current assignment master problem.
condition (2), consider global optimal solution satisfy cut (23)
generated iteration h. cut states least one job must greater
due date h, violate cut, jobs must equal lesser due
dates iteration h. However, sub-problem infeasible
iteration h, sub-problem equal lesser due dates must infeasible
available capacity trade less. Therefore, must infeasible
contradict assumption globally optimal.
Therefore, cut valid.
analogous argument holds cut (26).
3.3 Rescheduling Strategies
dynamic repair shop problem long horizon viewed static scheduling
sub-problems successive time periods. Lets assume start repairing failed
aircraft assigning waves based computed schedule time 0. wave
might start repair way repair shop. aircraft fails pre-flight
check, goes repair shop. failed aircraft requires set independent repair
activities known processing times resource requirements. repair shop,
previously failed aircraft might already repaired, might repair,
others might awaiting repair. failed aircraft enters repair shop,
new static repair scheduling sub-problem set existing jobs (J), number
51

fiAramon Bajestani & Beck

aircraft repair shop aircraft type (k ), failure rates
aircraft (n ) updated. set existing jobs includes recently failed aircraft
previously failed aircraft whose repairs still way yet started.
new static sub-problem added constraint, namely repairs currently
way cannot disrupted.
connect static sub-problems using three different policies denoted Pij
j define length scheduling horizon frequency rescheduling number
waves, respectively. three policies, schedule repair activities, observe
aircraft failures, respond failures rescheduling repair activities.
three policies discussed follows:
P11 : Figure 5, show P11 schedules one wave time (i = 1) reschedules
wave (j = 1). P11 myopic policy aiming providing next first
wave highest possible coverage.
P31 : contrast P11 , P31 (Figure 5), scheduling horizon three waves
rescheduling still done wave. P31 longer scheduling horizon
P11 trades-off coverage among next three waves. worth mentioning
chosen three length scheduling horizon three waves
usually scheduled daily based real data (Safaei et al., 2011).
P33 : policy scheduling horizon length three waves reschedules
every third wave (Figure 5). P33 might trade-off lower coverage next
first wave higher coverages second third waves; however,
lower frequency rescheduling.

3.4 Modeling Aircraft Failures
model dynamic events, simulate aircraft failures pre- post-flight checks.
Every aircraft either passes fails check. aircraft fails, new set repair
activities known processing times resource requirements added repair
shop. aircraft passes, flies wave required. mentioned Section 2.1,
repair failure rate aircraft returns failure
increases percent time flies wave due deterioration. n initial
failure rate aircraft n N , failure rate flying w waves without failure
n (1 + 0.01 )w .

4. Computational Experiments
section, present two separate empirical studies. first study compares
scheduling techniques experimentally presents insights algorithms performance deeper analysis results. second study investigates impact
using different scheduling techniques rescheduling policies observed wave
coverage.
52

fiScheduling Dynamic Aircraft Repair Shop

P11 Policy:
Scheduling Horizon

Scheduling Horizon
0

Scheduling Horizon

Scheduling Horizon

...
st1

et1

st2

Wave-1

et2
st3

Wave-2

et3

st4

Wave-3

et4
Wave-4

Scheduling Horizon

P31 Policy:

Scheduling Horizon

Scheduling Horizon
0

...
st1

et1

st2

Wave-1

et2
st3

Wave-2

et3

st4

Wave-3

et4
Wave-4

P33 Policy:
Scheduling Horizon

Scheduling Horizon
0

...
st1

et1

st2

Wave-1

et2
et3

st3

Wave-2

Wave-3

st4

et4
Wave-4

Figure 5: rescheduling policies.
4.1 Experimental Results Scheduling Techniques
sub-section describes experiment comparing different solution techniques scheduling static repair shop.
4.1.1 Experimental Setup
problem instances 10 30 aircraft (in steps 1), 3 4 trades, 3 4 waves.
Five instances combination parameters generated, resulting 420 instances
(21 total aircraft counts 2 trades counts 2 waves counts 5 instances).
Aircraft: number aircraft types equal |N5 | , |N | number aircraft.
aircraft randomly assigned different types uniform probability. number
aircraft type k |Ik |. failure rate aircraft randomly chosen
uniform distribution [0, 0.5]. failure rate aircraft type k, k , mean failure
rate aircraft type k. functions used represent aircraft n probability
failures pre- post-flight checks, respectively, f pre (n ) = (1en ) f post (n ) =
(1e3n ). worth mentioning conditions reliability function extreme
values failure rates hold true functions used. failure rate goes 0,
probability failure equals 0, failure rate goes , probability failure
equals 1.
Waves: plane requirement aircraft type wave randomly generated
integer uniform distribution [1, |Ik |]. length wave drawn uniform
53

fiAramon Bajestani & Beck

probability [3, 5]. make instance loose enough permit feasible solutions yet
tight enough challenging, lower bound length scheduling horizon (H)
needed. sum processing areas jobs trade, r, divided
trade capacity denoted Sr . LB = max(Sr ) lower bound time required
r
schedule jobs use H = 1.2 LB. end-time wave, etw , generated
et|W | = H rand[0, 3] final wave, |W |, etw = stw+1 rand[0, 3] w < |W |.
Trades: capacity limit trade set Cr = 10.
Repair Jobs: Eighty percent aircraft repair shop beginning, resulting
|J| = 0.8|N | repair jobs. jobs randomly assigned trades replacement
number jobs per trade equal |J|/2. job requires least one
trade require one trade. capacity trade r used job j, cjr ,
drawn [1, 10] processing time, pjr , drawn [r, 10r]: jobs trades
lower indices shorter processing times trades higher indices.
Though problem instances generated randomly, setting experiment
includes three numerical examples Safaei et al. (2011) based real data.
Furthermore, setting consists instances results problem instances
one half times bigger examples used literature (Safaei et al., 2011)
number aircraft 10, 15, 20; number waves 3 4; number
trades aircraft types equal 3 2.
experiments run 7200-second time limit AMD 270 CPU 1
MB cache per core, 4 GB main memory, running Red Hat Enterprise Linux 4.
4.1.2 Experimental Results
Figure 6 shows scatter-plots run-times six complete approaches. axes
log-scale, points line = x indicate lower run-time algorithm
y-axis. numbers boxes indicate number points
line. Run-times counted equal differ less 10%.
graphs indicate benefit MIP CP, Benders-CP MIP, BendersMIP Benders-CP MIP, Benders-MIP-T Benders-MIP, BendersCP-T Benders-CP. Table 2 presents data, sorted descending percentage
problems solved optimality, algorithms. changes results compared
previous work (Aramon Bajestani & Beck, 2011b) due improved scheduling models,
different solvers, different test problems. scheduling algorithms enhanced
using smaller value B, resource capacity constraint enforced shorter interval,
i.e., [0, st|W | ], efficient formulations Constraints (5), (6), (20) used.
mean run-time MIP model given Safaei et al. (2011) eight scenarios
10 aircraft 3 waves 294.75 seconds. However, proposed MIP model
run-time 2.64 seconds average ten instances number
aircraft waves, indicating significantly faster Safaei et al.s model.
MIP vs. CP MIP approach clear superiority CP, achieving lower
run-time 89% problem instances. CP model outperforms MIP
5% instances solve optimality within time limit.
investigation results shows mean quality CP solution 0.27%
54

fiScheduling Dynamic Aircraft Repair Shop

MIP vs. CP

10000

Benders-CP vs. MIP

10000

20

35

169
1000

100

100

100

10
1

Benders-MIP

1000

Benders-CP

1000

MIP

Benders-MIP vs. Benders-CP

10000

10
1

10
1

23
0.1

0.1

0.1

220

372
0.01
0.01

1

100

0.01
0.01

10000

1

CP

10000

Benders-MIP-T vs. Benders-MIP

10000

10
1

Benders-CP-T vs. Benders-CP
122

100
10

100

10

0.1

378
1

100

1

1
0.1

0.1

10000

1000

Benders-CP-T

Benders-MIP-T

100

100

Benders-CP

1000

1000

Benders-MIP

1

162

34

0.01
0.01

368
0.01
0.01

10000

MIP

Benders-MIP vs. MIP

10000

100

161

229
0.01
0.01
10000

1

MIP

100

0.01
0.01
10000

1

100

10000

Benders-CP

Benders-MIP

Figure 6: Run-times (seconds) six complete models.

Method
Benders-MIP-T-Hybrid
Benders-MIP-T
Benders-MIP
MIP
MIP-Hybrid
Benders-CP
Benders-CP-T
Dispatching Rule
CP

Mean
Time (s)
211.98
213.12
227.94
837.04
924.30
1373.16
1356.70
0
6857.14

Iter.

% MP

% SP

66.63 (8.0)
66.44 (8.0)
64.66 (8.0)
75.72 (15.5)
66.42 (10.0)
-

51.39 (55.05)
51.84 (53.98)
61.75 (67.44)
84.30 (96.96)
85.36 (97.36)
-

48.61 (44.95)
48.16 (46.02)
38.25 (32.56)
15.70 (3.04)
14.64 (2.64)
-

% Solved
optimality
98.10
97.86
97.62
93.57
91.19
85.24
85.00
9.76
4.76

Table 2: mean run-time, mean (the median) number master problem iterations,
mean (median) percentage run-time spent solving master problem
sub-problems, percentage problems solved optimality
approaches.

55

fiAramon Bajestani & Beck

best found solution across algorithms. Therefore, poor performance CP due
weakness proving optimality.
Benders-CP vs. MIP Benders-CP approach better MIP terms runtime 52% instances performing worse 40%. However, Table 2 favors MIP
terms overall performance, smaller mean run-time, mainly instances
solved optimality within time limit.
Benders-MIP vs. Benders-CP Benders-MIP approach achieves better runtime Benders-CP 88% test problems, performing worse 8%.
branching heuristics Benders-CP often lead initial feasible master solution
tighter due dates initial master solution Benders-MIP. tighter, globally
infeasible initial solution means CP-based master problem model requires
iterations find globally feasible solution.
Benders-MIP vs. MIP Benders-MIP approach achieves better run-time
MIP 90% test problems worse run-time 8%, achieving lower mean
run-time solving higher proportion problem instances. time horizon
short, MIP approach faster, however, longer horizons jobs,
number constraints variables grows, substantially reducing performance.
Benders-MIP-T vs. Benders-MIP tighter relaxation Benders-MIP-T slightly
speeds LBBD: Benders-MIP-T better run-time Benders-MIP 55%
problems instances worse 39%. mean run-time decreases 6% tighter
relaxation solves one instance optimality. Tightening relaxation sub-problems
increases mean number iterations spite expectation. closer look
results shows mean number iterations instances solved optimality
approaches (97.38% instances) decreases: 39.15 41.24 Benders-MIP-T
Benders-MIP, respectively. However, mean number iterations instances
timed approaches (1.9% instances) increases 1051.38 BendersMIP 1259.88 Benders-MIP-T. Therefore, increase number iterations
results timed-out instances support tighter relaxation
requires iterations optimality.
Furthermore, percentage time solving master problem decreases compared
Benders-MIP, sub-problem percentage run-time increases. latter observation
sub-problems Benders-MIP quickly proved insoluble
initial propagation CP sub-problem model, violate tighter relaxation BendersMIP-T master problem. Therefore, tighter model, sub-problem solver called
easy sub-problems, increasing percentage run-time spend sub-problems.
Benders-CP-T vs. Benders-CP tighter relaxation CP-based master problem
results slightly lower mean run-time; however, shown Figure 6, performance
comparison even.
Incomplete Hybrid Approaches dispatching heuristic fast, finding feasible solution problems. However, finds (but, course, prove) optimal
solution 9.76% instances Benders-MIP-T finds proves optimality
56

fiScheduling Dynamic Aircraft Repair Shop

instances 0.99 seconds average. seems heuristic find optimal solution problem instance relatively easy. mean quality
heuristic solution 16% optimal. industries expensive assets, reduction
solution quality translate costly under-use valuable resource (e.g., fighter
aircraft costs vicinity 100 million dollars). However, finding feasible solution almost instantaneously large problem instances makes heuristic approach compelling
situations long run-time might delay carrying waves. example,
wave starts within short time, flying wave lower coverage (achieved
dispatching heuristic) better carrying long solving time
complete approaches.
evaluate effect combining dispatching heuristic complete approaches, examine using hybrid heuristic-complete approach. smaller feasible set
direct consequence defining bound cost function. MIP model
searches feasible set, LBBD methods explore infeasible space, one intuition
MIP model benefit using heuristic solution. However, solving
master problem LBBD requires searching relaxed feasible space therefore
heuristic starting solution may speed solving.
Table 2 shows marginal benefit bounding Benders-MIP-T approaches
dispatching heuristic solution. Bootstrap paired-t tests (Cohen, 1995) indicate
significant difference mean run-time p 0.01 either hybrid.
Scalability Figure 7 shows results number aircraft per wave increases.
|N |
aggregate results truncating |W
| using instances three waves three
four trades. Note point represents 30 problem instances except x = 3
20 problems instances. omitted x = 10 10 problem instances
point. y-axis log-scale.
results show LBBD variations outperform techniques across
ratios.
Summary following observations performance scheduling techniques
supported empirical study.
LBBD approach combining mixed integer programming constraint programming outperforms mixed integer programming model. mean run-time
Benders-MIP almost 4 times lower MIP. Furthermore, defining time ratio given instance MIP run-time divided Benders-MIP run-time,
Benders-MIP almost 32 times faster MIP, average, geometric mean
time ratio 31.56. time ratios range [0.01, 94132.67] median 38.32.
tighter relaxation slightly speeds LBBD. Benders-MIP-T Benders-CP-T,
both, run-time 1.2 times faster Benders-MIP Benders-CP,
respectively.
dispatching heuristic provide optimal solution easy problem instances. However, mean percent relative error heuristic almost 16% overall,
indicating dispatching rule effective enough industries
high equipment cost.
57

fiAramon Bajestani & Beck

10000

CP
MIP
MIP-Hybrid
Benders-CP
Benders-CP-T
Benders-MIP
Benders-MIP-T
Benders-MIP-T-Hybrid

Mean Run-Time (sec)

1000

100

10

1

0.1

0.01
3

4

5

6

7

8

9

Aircraft/Wave

Figure 7: Mean run-time vs. number aircraft per wave (|W | = 3).
simple hybridization complete approaches dispatching heuristic
result statistically significant difference run-time.
4.2 Experimental Results Rescheduling Strategies
sub-section describes experiment investigating impact applying different scheduling techniques rescheduling policies dynamic repair shop.
4.2.1 Experimental Setup
problem instances, number aircraft, number trades, total
number waves set {10, 15, 20, 25, 30}, {4}, {30} respectively. combination
5 instances total 25 instances. instance simulated 20 times.
parameters problem instances generated Section 4.1 following
modifications:
Aircraft: failure rate aircraft increased = 5 percent time used.
Repair Jobs: Repair jobs entered repair shop time 0 randomly assigned
trades. probability assigning job trade considered 0.5.
Waves: start-time wave generated st1 = rand[ H3 , H2 ] first wave,
stw = etw1 + rand(0, 40) 1 < w 30. mentioned earlier total number
waves 30. value H calculated Section 4.1.
Dynamic events: simulate aircraft failure, generate random value
uniform distribution [0, 1] aircraft check. random value less
aircrafts probability failure, aircraft fails; otherwise, passes. aircrafts
probability failure pre- post-flight checks calculated using (1 en )
(1 e3n ), respectively. Recall that, n failure rate aircraft, n N ,
58

fiScheduling Dynamic Aircraft Repair Shop

increases = 5 percent time aircraft flies wave. Note passing
pre-flight check wave necessarily mean aircraft flies wave.
number available aircraft requirements, aircraft fly
randomly selected passed pre-flight check meet requirements.
latter assumption implies aircraft ready beginning wave checked
regardless wave requirements. Since assumed pre- post-flight
checks negligible cost, assumption reasonable discover potential aircraft
failures sooner likely increase availability subsequent waves.
experiment three techniques including MIP, Benders-MIP-T, dispatching rule discussed Section 3.2. time-limit schedule repair activities
decision time point 600 seconds. execute best feasible schedule found
time-limit algorithm times out. case Benders-MIP-T times out, schedule created dispatching heuristic executed Benders-MIP-T create
feasible schedule times-out.
static problem, scheduling uses IBM ILOG CPLEX 12.3 IBM ILOG
CP Optimizer 12.3. simulation implemented C++.
4.2.2 Experimental Results
section, discuss results compare performance different scheduling
rescheduling techniques availability aircraft long run.
investigate effect modeling aircraft failures using expected coverage.
Figures 8, 9, 10 illustrate mean observed coverage flight w {1, 2, ..., 28}
different scheduling rescheduling techniques. Denoting wpl
coverage flight
Pw
i=1 ipl
w l-th simulation instance p given policy, Owpl =
represents
w
mean observed coverage flight w instance p simulation
l.
mean observed
P
P
P

L

Owpl

coverage flight w, shown figures, calculated Ow = p=1 P l=1
, P
L
L number instances simulations, respectively. Table 3 shows mean
observed coverage flight 28, i.e., O28 variance observed coverage
flight 28 scheduling techniques rescheduling policies. illustrated, BendersMIP-T using P31 achieves least 10% higher mean coverage combinations
scheduling rescheduling techniques lowest variance.
impact scheduling algorithms complete technique anticipated
achieve higher flight coverage takes expected probabilistic information
Method
Benders-MIP-T
MIP
Dispatching heuristic

P11
0.67 [0.03]
0.52 [0.03]
0.61 [0.04]

O28 [var(.)]
P31
0.77 [0.01]
0.64 [0.03]
0.61 [0.04]

P33
0.70 [0.01]
0.60 [0.02]
0.63 [0.03]

P11
45
34
42

(.)
P31
56
46
44

P33
48
38
47

Table 3: mean (variance) observed coverage flight 28 (O28 [var(.)])
mean percentage available aircraft first flight ().

59

fi1

1

0.9

0.9

0.8

0.8

0.7

0.7

Mean Observed Coverage

Mean Observed Coverage

Aramon Bajestani & Beck

0.6
0.5
0.4
0.3
0.2

0.5
0.4
0.3
0.2

Benders-MIP-T: P31
Benders-MIP-T: P11
Benders-MIP-T: P33

0.1

0.6

MIP: P31
MIP: P11
MIP: P33

0.1

0

0

1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28

1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28

Flight

Flight

Figure 8: Mean observed coverage three
different policies using BendersMIP-T.

Figure 9: Mean observed coverage
three different policies using
MIP.

1
0.9

Mean Observed Coverage

0.8
0.7
0.6
0.5
0.4
0.3
0.2

Heuristic: P31
Heuristic: P11
Heuristic: P33

0.1
0

1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28

Flight

Figure 10: Mean observed coverage three
different policies using dispatching heuristic.

account creating repair schedule, dispatching heuristic
property. shown Table 3, Benders-MIP-T complete technique results
higher mean observed coverage policies compared dispatching heuristic.
However, MIP, incorporating mean known information uncertainty scheduling
60

fiScheduling Dynamic Aircraft Repair Shop

repair activities, results flights lower coverage dispatching heuristic
two rescheduling policies, P11 P33 . understand MIP performance, make
two conjectures.
first conjecture poor performance MIP algorithm frequently times static sub-problems best found feasible solution
dispatching heuristic used create repair schedule. However, results
support conjecture. MIP algorithm times 13% scheduling subproblems feasible solution found each, implying dispatching heuristic
never used find repair schedule.
second conjecture low coverage achieved MIP attributed
different way scheduling repair activities compared two scheduling
techniques. deeper look schedules static sub-problems shows dispatching heuristic Benders-MIP-T schedule repair activities earliest possible
time; however, MIP usually not. Repairing aircraft earlier makes aircraft
available intuitively increases coverage long run, even though number
pre-flight checks aircraft go increases expectation. quick adjustment
schedule makes failed planes available start-time
next flight. investigate impact making aircraft available earlier using given
scheduling technique,
define mean percentage available aircraft first flight
P
P
P
P

L



kpl

k=1
(Pij ) = p=1 l=1
kpl denote percentage aircraft available
P LS
beginning first flight k-th static sub-problem l-th simulation
instance p number static sub-problems Pij policy, respectively. example,
P31 policy given p l, first static sub-problem includes flights 1, 2, 3.
Then, 1pl number aircraft available flight 1 divided total number
aircraft. second static sub-problem schedules flights 2, 3, 4. Therefore, 2pl
equal number aircraft available flight 2 divided total number aircraft.
follow procedure find kpl 28 static sub-problems P31 policy.
find (P11 ) (P33 ) using argument considering number static
sub-problems 30 10, respectively.
Comparing pair scheduling rescheduling techniques Table 3,
positive relationship making aircraft available earlier wave coverage
long term supports conjecture: mean percentage available aircraft
first flight () increases, mean observed coverage long rum (O28 )
increases.

impact rescheduling policies illustrated Figures 8 9, P11 policy
either Benders-MIP-T MIP short-term (i.e., first three flights) outperforms two policies. However, P31 policy leads consistently higher
coverage schedules longer horizon adjusts schedule soon
aircraft failures occur. Although P31 dispatching heuristic responds quickly
aircraft failures, incorporate length scheduling horizon
ranking index repair activities always repairs aircraft earliest possible
time, resulting flights coverage P11 .
Figure 11 displays cumulative percentage flights coverage less
equal Benders-MIP-T, dispatching heuristic MIP denotes
61

fiAramon Bajestani & Beck

values x-axis. best performing approach fewer flights low
coverage flights high coverage. Therefore, curve closer
lower right-hand corner. illustrated, Benders-MIP-T using P31 performs better
combination. P31 rescheduling policy computationally expensive
two policies, run-time per one static sub-problem, however, small compared
length scheduling horizon usually one day real applications (Safaei
et al., 2011). P31 policy using Benders-MIP-T run-time average 67 seconds
per one static sub-problem less 249 seconds 90% static sub-problems.
100

P31-Benders-MIP-T
P11-Benders-MIP-T
P33-Benders-MIP-T
P31-Heuristic
P11-Heuristic
P33-Heuristic
P31-MIP
P11-MIP
P33-MIP

90

Percentage Flights

80
70
60
50
40
30
20
10
0
0.1

0.2

0.3

0.4

0.5

0.6

0.7

0.8

0.9

1

Flight Coverage

Figure 11: percentage flights coverage less equal , denotes
values x-axis.
summary, analysis results identifies Benders-MIP-T P31 (BendersMIP-T:P31 ) best combination scheduling rescheduling techniques
providing flights higher mean coverage long term. Furthermore,
lowest variance observed coverage compared scheduling
rescheduling techniques.
impact modeling uncertainty expectation random
aircraft failures, coverage achieved scheduling algorithm random variable.
ultimate goal construct repair schedule optimal specific realization uncertainty actually occurs. However, since complete information
aircraft failures known future uncertainty dependent previous repair
decisions, impossible find repair schedule ideal realization
uncertainty. discussed earlier, modeled aircraft failures using expected
value find optimal repair schedule. Since treating uncertainty expectation form may far optimal actual realization uncertainty, perform
sensitivity analysis failure rates aircraft investigate optimal repair
schedule Benders-MIP-T:P31 hedged various uncertain situations.
62

fiScheduling Dynamic Aircraft Repair Shop

Using problem instances Section 4.2.1, two experiments set
failure rate aircraft (n ) increased n +0.05 n +0.1. results
show mean observed coverage flight 28 decreases 0.69 0.62,
variance observed coverage change, indicating modeling uncertainty
using expected probabilistic information reasonable approach.
find possible upper bound (tighter 1) mean observed coverage
flight w scheduling algorithm, define policy called Relaxed relaxes
repair capacity limit repairs failed aircraft maximum processing times
trades. Although Relaxed policy makes aircraft available waves
earlier repair scheduling policy, cannot guarantee results
upper bound observed coverage unless waves requirements.
optimal decision might trade immediate low coverage future higher coverage
plane requirements waves different. Applying Relaxed scheduling
policy instances Section 4.2.1, mean observed coverage flight
28, i.e. Ow , 24% higher best identified algorithm, Benders-MIP-T:P31 .
specifically, Relaxed policy results mean coverage 0.95 variance 0.002.
impact longer scheduling horizon vs. frequent rescheduling
P31 policy changes repair schedule flight trades-off coverage among
three consecutive flights scheduling longer horizon. contrast, P11 policy
schedules one flight reacts flight P33 policy reasons longer
term without quick response dynamic events. already shown Figures 8
9, P31 policy complete techniques results higher mean coverage.
P11 policy outperforms P33 early waves, P33 provides later waves
higher coverage.
superiority policy P31 indicates features quick response dynamic events long-term reasoning contribute overall performance. contribution feature significantly dependent several parameters aircraft
failure rates, plane requirements, repair capacity. failure rate high,
probability aircraft diagnosed failed pre- post- flight checks higher.
Therefore, arrival rate aircraft repair shop higher previously
constructed schedule likely executed is. system, frequent
rescheduling likely increase coverage. plane requirements
waves widely varying repair capacity limit tight, trading-off coverage
among flights scheduling longer horizon significantly contributes
availability aircraft long term.
Summary following observations scheduling rescheduling
done supported second empirical study:
Solving dynamic repair shop problem using Benders-MIP-T scheduling technique P31 rescheduling policy results observed coverage higher
mean lower variance combination tested.
positive relationship making failed aircraft available early
possible achieving higher coverage long term.
63

fiAramon Bajestani & Beck

Since variance P31 policy Benders-MIP-T sensitive
small changes aircraft failures, modeling uncertainty respect
mean reasonable approach balance different uncertain scenarios.

5. Discussion
experimental results demonstrate incorporating probabilistic execution
time reasoning schedule repair activities results better system performance.
showed decomposition technique, LBBD, rescheduling policy P31 result
10% higher mean observed coverage long term, increasing utilization
valuable resources. decomposition technique considers mean known probabilistic
information uncertainty longer scheduling horizon repairs failed aircraft
earliest time. P31 rescheduling policy takes advantage up-to-date information
frequently. shown variance coverage increase
aircraft failures increase, supporting core idea solution approach: dynamic
repair shop problem viewed collection static sub-problems uncertainty
aircraft failures treated expectation.
Optimizing respect mean considering specific class scheduling problems limitations solution approach. address detail discuss
ideas deal them.
Modeling uncertainty Optimizing respect expected coverage
unfavorable consequences: constructed repair schedule may remarkably poor
performance particular realizations uncertainty might happen actuality (Birge
& Louveaux, 1997). number possible approaches solving dynamic
problem. briefly discuss method below.
Leaving availability slack repair resources make schedule robust
flexible (Branke & Mattfeld, 2002, 2005; Davenport, Gefflot, & Beck, 2001)
first approach. example, Branke Mattfeld (2002, 2005) propose anticipatory
scheduling algorithm predict future job arrivals dynamic scheduling problem.
secondary objective, called flexibility, included within static sub-problem penalize
early idleness machines. experimentally show approach improves
system performance. conclusion consistent observation Section
4.2.2 positive relationship repairing aircraft earlier achieving
higher coverage. would therefore interesting adjust MIP model
flexibility term added objective function quantify value making repair
resources available early possible. However, appears none existing work
slack-based techniques uses analytical reasoning decide amount slack
level penalization early slack used different levels stochasticity.
Modeling static sub-problem two-stage stochastic programming second
approach (Birge & Louveaux, 1997). first stage decision corresponds constructing
repair schedule occurs aircraft failures pre- post-flight checks. second
stage decision, includes allocation aircraft flights, occurs pre-flight
number aircraft type k assigned fly
checks. One approach define Zkw
wave w scenario s. scenario represents possible realization aircraft failures
64

fiScheduling Dynamic Aircraft Repair Shop

horizon static sub-problem
p(s). Therefore, objective
P probability
P P
. main modeling challenge
function (Equation 1) written p(s) k w Zkw
calculate probability scenario. already explained Section 2.1,
uncertainty problem exogenous information dependent first-stage
decisions hard represent closed tractable form. Computationally,
two-stage stochastic programming models substantially challenging
discrete optimization problems (Dyer & Stougie, 2003) therefore ability solve
models problem optimality doubtful.
third approach use multi-stage dynamic programming solving dynamic
repair shop problem (Iravani et al., 2007). goal construct repair schedule
decision epoch, marked arrival newly failed aircraft repair shop,
coverage maximized long term. Using dynamic programming
framework, state repair shop decision time point tuple aircraft
failure rates, aircraft processing times, aircraft resource requirements.
decision action assign start-times failed aircraft repair shop.
several challenges modeling problem classical dynamic program. First,
expected wave coverage result current state action taken cannot
represented closed form expression combinatorics involved
scheduling problem. Second, probabilities repair shop transitions
new state next decision epoch result current state, action taken,
revealed uncertainty aircraft failures known hard calculate
mainly, again, due combinatorics scheduling decisions fact
processing times resource requirements repair operations become known
upon aircraft failure. challenges indicate analytical tools classical
dynamic programming methodology cannot used modeling problem. However, AI
techniques broader scope applicability machine learning (Sutton &
Barto, 1998), online stochastic combinatorial optimization (Van Hentenryck & Bent, 2006),
hindsight optimization (Burns, Benton, Ruml, Yoon, & Do, 2012) investigated
potential approaches future work.
Extending scheduling problem Although results demonstrated specific class scheduling problems constraint repair capacity limit,
solution approach adapted complex scheduling problems. specifically,
proposed MIP CP algorithms static sub-problem easily extended
handle types scheduling constraints precedence constraints. However,
modeling problem via decomposition approach would require additional effort.
existence precedence constraints among repair activities failed aircraft makes
scheduling different repair resources dependent. Therefore, separate RSSP
repair resource cannot defined. One possible idea represent scheduling problem
single sub-problem appropriate relaxation Benders cut developed.
Taking another perspective, decomposed problem stochastic long-term planning deterministic short-term scheduling problems DAMP RSSP, respectively.
long-term plan, deal uncertainty using known information
probability aircraft failures trade-off coverage flights. short65

fiAramon Bajestani & Beck

term schedule, construct feasible repair schedule achieve coverage decided
long-term plan. designed different rescheduling policies investigate
information revealed time effectively used adjust repair schedule
change long-term plan. conclude changing long-term plan based shortterm information cannot completely incorporated long-term plan
beginning significantly increases utilization airplanes.
typical hierarchical optimization approach deal interdependency different levels decision makings. However communication technique designed
paper, capable utilizing short-term deterministic scheduling long-term
stochastic planning likely lead higher system performance. problem
addressed here, assignment aircraft flights scheduling repair
activities repair shop represent long-term short-term reasoning, respectively. wide range operational decisions viewed integrated optimization
problems, pattern algorithms designed might applicable. Combining
maintenance inventory planning job production scheduling example
integrated operational problem higher level decision-making, maintenance inventory policy determined whereas lower level, jobs scheduled
(Terekhov, Dogru, Ozen, & Beck, 2012; Aramon Bajestani, 2013). maintenance
inventory policy leads infeasible scheduling problem lower level, higher
level needs informed information inventory maintenance decisions adjusted. Therefore, overall approach demonstrated applications
problems typically solved hierarchical optimization approach.

6. Conclusion
paper, address problem scheduling dynamic repair shop context
aircraft fleet management. goal maximize flight coverage longterm considering repair capacity aircraft failures. number failed
aircraft dynamically changes aircraft breakdowns. proposed solution solves
dynamic problem successive static scheduling problems shorter time periods.
Several scheduling algorithms different rescheduling policies proposed schedule
repair activities online dynamic reaction aircraft failures. length
scheduling horizon frequency rescheduling features defining three
policies.
computational results show optimization approach using logic-based Benders decomposition, scheduling longer horizon, incorporating mean known
information aircraft failures, adjusting repair schedule soon new jobs enter
repair shop yield higher mean coverage reasonable approach balance
different uncertain scenarios.
Developing richer solution approaches better handle uncertainty challenging
interesting topic pursue future work. However, within solution technique,
establishing formal framework exactly determine long future
plan ahead quickly change schedule based new information
interesting direction future work. answer two questions
seems highly dependent arrival rate new information impact
66

fiScheduling Dynamic Aircraft Repair Shop

new information overall system performance. quantify two values
starting point provide solid responses two questions.

Acknowledgments
research supported part Natural Sciences Engineering Research
Council Canada (NSERC) consortium members Centre Maintenance Optimization & Reliability Engineering (C-MORE). Thanks Nima Safaei Dragan Banjevic
introducing problem us subsequent discussions. paper combined
extended version conference paper (Aramon Bajestani & Beck, 2011b) workshop
paper (Aramon Bajestani & Beck, 2011a) already appeared.

References
Aramon Bajestani, M. (2013). Integrating Maintenance Planning Production Scheduling: Making Operational Decisions Strategic Perspective. Ph.D. thesis, Department Mechanical & Industrial Engineering, University Toronto, Canada.
Forthcoming.
Aramon Bajestani, M., & Beck, J. C. (2011a). Scheduling dynamic aircraft repair shop.
Proceedings ICAPS2011 Workshop Scheduling Planning Applications.
Aramon Bajestani, M., & Beck, J. C. (2011b). Scheduling aircraft repair shop.
Proceedings Twenty-First International Conference Automated Planning
Scheduling (ICAPS2011), pp. 1017.
Aytug, H., Lawley, M., McKay, K., Mohan, S., & Uzsoy, R. (2005). Executing production
schedules face uncertainties: review future directions. European Journal
Operational Research, 161, 86110.
Baptiste, P., Pape, C. L., & Nuijten, W. (2001). Constraint-based Scheduling. Kluwer
Academic Publishers, Boston/Dordrecht/London.
Beck, J. C. (1999). Texture Measurements Basis Heuristic Commitment Techniques
Constraint-Directed Scheduling. Ph.D. thesis, Department Computer Science,
University Toronto, Canada.
Beck, J. C. (2010). Checking-up branch-and-check. Proceedings Sixteenth International Conference Principles Practice Constraint Programming (CP2010),
pp. 8498.
Beck, J. C., Davenport, A. J., Davis, E. D., & Fox, M. S. (1998). ODO project: Toward
unified basis constraint-directed scheduling. Journal Scheduling, 1, 89125.
Beck, J. C., & Refalo, P. (2003). hybrid approach scheduling earliness
tardiness costs. Annals Operations Research, 118, 4971.
Benders, J. (1962). Partitioning procedures solving mixed-variables programming problems. Numerische Mathematik, 4, 238252.
Bidot, J., Vidal, T., Laborie, P., & Beck, J. C. (2009). theoretical practical framework
scheduling stochastic environment. Journal Scheduling, 12, 315344.
67

fiAramon Bajestani & Beck

Birge, J. R., & Louveaux, F. (1997). Introduction Stochastic Programming. Springer
Verlag, New York, USA.
Branke, J., & Mattfeld, D. C. (2002). Anticipatory scheduling dynamic job shop problems. Proceedings ICAPS2002 Workshop On-line Planning Scheduling, pp. 310.
Branke, J., & Mattfeld, D. C. (2005). Anticipation flexibility dynamic scheduling.
International Journal Production Research, 43, 31033129.
Budai, G., Huisman, D., & Dekker, R. (2006). Scheduling preventive railway maintenance
activities. Journal Operational Research Society, 57, 10351044.
Burns, E., Benton, J., Ruml, W., Yoon, S., & Do, M. B. (2012). Anticipatory on-line planning. Proceedings Twenty-Second International Conference Automated
Planning Scheduling (ICAPS2012), pp. 333337.
Chu, Y., & Xia, Q. (2004). Generating Benders cuts general class integer programming problems. Proceedings First International Conference Integration
AI Techniques Constraint Programming (CPAIOR2004), pp. 127136.
Cohen, P. R. (1995). Empirical Methods Artificial Intelligence. MIT Press, Cambridge, Mass.
Cowling, P., & Johansson, M. (2002). Using real time information effective dynamic
scheduling. European Journal Operational Research, 139, 230244.
CPLEX (2011). IBM ILOG CPLEX 12.3 Users Manual. IBM ILOG.
http://pic.dhe.ibm.com/infocenter/cosinfoc/v12r3/index.jsp.

Available

Davenport, A. J., Gefflot, C., & Beck, J. C. (2001). Slack-based techniques robust
schedules. Proceedings Sixth European Conference Planning (ECP-2001).
Derman, C., Lieberman, G. J., & Ross, S. M. (1980). optimal assignment servers
repairman. Journal Applied Probabilities, 19, 577581.
Dyer, M., & Stougie, L. (2003). Computational complexity stochastic programming
problems. Spor-report 2003-20, Department Mathematics Computer Science,
Eindhoven Technical University, Eindhoven.
Fazel-Zarandi, M. M., & Beck, J. C. (2012). Using logic-based Benders decomposition
solve capacity- distance-constrained plant location problem. INFORMS
Journal Computing, 24, 399415.
Frost, D., & Dechter, R. (1998). Optimizing constraints: case study scheduling
maintenance electric power units. Lecture Notes Computer Science, 1520, 469
488.
Geoffrion, A. M., & Graves, G. W. (1974). Multicommodity distribution system design
Benders decomposition. Management Science, 20, 822844.
Grigoriev, A., van de Klundert, J., & Spieksma, F. C. R. (2006). Modeling solving
periodic maintenance problem. European Journal Operational Research, 172,
783797.
68

fiScheduling Dynamic Aircraft Repair Shop

Haghani, A., & Shafahi, Y. (2002). Bus maintenance systems maintenance scheduling:
Model formulations solutions. Transportation Research Part A, 36, 453482.
Haque, L., & Armstrong, M. J. (2007). survey machine interference problem.
European Journal Operational Research, 179, 469482.
Heinz, S., & Beck, J. C. (2012). Reconsidering mixed integer programming MIPbased hybrids scheduling. Proceedings Ninth International Conference
Integration AI Techniques Constraint Programming Combinatorial
Optimization Problems (CPAIOR2012), pp. 211227.
Hooker, J. (2005). hybrid method planning scheduling. Constraints, 10, 385401.
Hooker, J. (2007). Planning scheduling logic-based Benders decomposition. Operations Research, 55, 588602.
Hooker, J., & Ottosson, G. (2003). Logic-based Benders decomposition. Mathematical
Programming, 96, 3360.
Hooker, J., & Yan, H. (1995). Logic circuit verification Benders decomposition.
Saraswat, V., & Van Hentenryck, P. (Eds.), Principles Practice Constraint
Programming: Newport Papers, chap. 15, pp. 267288. MIT Press.
Iravani, S. M. R., Krishnamurthy, V., & Chao, G. H. (2007). Optimal server scheduling
nonpreemptive finite-population queueing systems. Queueing System, 55, 95105.
Kozanidis, G., Gavranis, A., & Kostarelou, E. (2012). Mixed integer least squares optimization flight maintenance planning mission aircraft. Naval Research Logistics,
59, 212229.
Liu, S. Q., Ong, H. L., & Ng, K. M. (2005). Metaheuristics minimizing makespan
dynamic shop scheduling problem. Advances Engineering Software, 36, 199205.
ODonovan, R., Uzsoy, R., & McKay, K. N. (1999). Predictable scheduling single
machine breakdowns sensitive jobs. International Journal Production
Research, 37, 42174233.
Ovacik, I. M., & Uzsoy, R. (1994). Rolling horizon algorithms single-machine dynamic
scheduling problem sequence-dependent setup times. International Journal
Production Research, 32, 12431263.
Ovacik, I. M., & Uzsoy, R. (1995). Rolling horizon procedures dynamic parallel machine
scheduling sequence-dependent setup times. International Journal Production
Research, 33, 31733192.
Pinedo, M. (2002). Scheduling: Theory, Algorithms, Systems (2nd edition). Prentice
Hall, New Jersey, USA.
Pinedo, M. (2005). Planning Scheduling Manufacturing Services. Springer Series
Operations Research. Springer.
Queyranne, M., & Schulz, A. (1994). Polyhedral approaches machine scheduling problems. Tech. rep. 408/1994, Department Mathematics, Technische Universitat Berlin,
Germany. revised 1996.
69

fiAramon Bajestani & Beck

Sabuncuoglu, I., & Bayiz, M. (2000). Analysis reactive scheduling problems job shop
environment. European Journal Operational Research, 126, 567586.
Safaei, N., Banjevic, D., & Jardine, A. K. S. (2010). Workforce constrained maintenance
scheduling aircraft fleet: case study. Proceedings Sixteenth ISSAT International Conference Reliability Quality Design, pp. 291297.
Safaei, N., Banjevic, D., & Jardine, A. K. S. (2011). Workforce-constrained maintenance
scheduling military aircraft fleet: case study. Annals Operations Research,
186, 295316.
Schwartz, N. (2012). Balancing risk: Readiness, force structure, modernization.
CSAF remarks 2012 Air Force Reserve Senior Leader Conference. Available
http://www.af.mil/shared/media/document/AFD-120611-028.pdf.
Stecke, K. E. (1992). Machine Interference: Assignment Machines Operators. Handbook
Industrial Engineering (2nd edition). John Wiley & Sons.
Sutton, R. S., & Barto, A. G. (1998). Reinforcement Learning: Introduction. MIT Press,
Cambridge, Mass.
Terekhov, D., Beck, J. C., & Brown, K. N. (2009). constraint programming approach
solving queueing design control problem. INFORMS Journal Computing,
21, 546561.
Terekhov, D., Dogru, M. K., Ozen, U., & Beck, J. C. (2012). Solving two-machine assembly scheduling problems inventory constraints. Computers Industrial
Engineering, 63, 120134.
Van Hentenryck, P., & Bent, R. (2006). Online Stochastic Combinatorial Optimization.
MIT Press.
Vieira, G. E., Hermann, J. W., & Lin, E. (2000). Predicting performance rescheduling
strategies parallel machine systems. Journal Manufacturing Systems, 19, 256
266.
Vieira, G. E., Hermann, J. W., & Lin, E. (2003). Rescheduling manufacturing systems:
framework strategies, policies methods. Journal Scheduling, 6, 3692.
Vinod, V., & Sridharan, R. (2011). Simulation modeling analysis due-date assignment
methods scheduling decision rules dynamic job shop production system.
International Journal Production Economics, 129, 127146.
Wagner, H. M., Giglio, R. J., & Glaser, R. G. (1964). Preventive maintenance scheduling
mathematical programming. Management Science, 10, 316334.
Wang, H. (2002). survey maintenance policies deteriorating systems. European
Journal Operational Research, 139, 469489.

70


