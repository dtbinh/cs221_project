journal artificial intelligence

submitted published

note

applying gsat non clausal formulas

roberto sebastiani

mechanized reasoning group dist viale causa genova italy
mechanized reasoning group irst loc pante povo trento italy

rseba dist unige

abstract

describe modify gsat applied non clausal
formulas idea use particular score function gives number clauses
cnf conversion formula false given truth assignment
value computed linear time without constructing cnf conversion
proposed methodology applies variants gsat proposed far

introduction

gsat selman levesque mitchell selman kautz incomplete
model finding clausal propositional formulas performs randomized
local search gsat shown solve many hard much eciently
traditional e g dp davis putnam since gsat
applies clausal formulas ordinary propositional formulas
requires previous clausal form conversion requires extra computation
extremely heavy standard clausal conversion used much worse clausal form
conversion causes large increase size input formula enlargement
search space
describe modify gsat applied non clausal
formulas directly e previous clausal form conversion extended version
sebastiani provides proofs theorems detailed description
introduced
achievement could enlarge gsat application domain selman et al suggest traditional ai formulated model finding tasks e g visual
interpretation reiter mackworth kautz selman generation
vivid knowledge representation levesque often case non clausal
representations compact instance rule form
vi gives rise several distinct clauses disjuncts conjunct automated theorem proving p applications model finding
proposed see e g artosi governatori klingerbeck instance
decision procedures decidable subclasses first order logic iteratively perform nonclausal model finding propositional instances input formulas jeroslow
generally model guided techniques proof search goal deletion ballantyne bledsoe false preference semantic resolution slaney seem
applicable non clausal p well
c ai access foundation morgan kaufmann publishers rights reserved

fisebastiani

procedure gsat
j max tries

initial
k max ips

j
return
else poss ips hill climb
v pick poss ips
ip v
updatescores v

end
end
return satisfying assignment found
figure general schema gsat

gsat

clausal propositional formula truth assignment variables
number clauses falsified called score
score satisfies iff score notion score plays key role
gsat considered distance truth assignment satisfying one
schema figure describes gsat well many possible variants use
notation gent walsh gsat performs iterative search satisfying
truth assignment starting random assignment provided initial
step successive assignment obtained ipping inverting truth value one
single variable v v chosen minimize score let ti assignment obtained
ipping th variable vi hill climb returns set poss ips variables
vr minimize score tr current values si score ti score
stored every variable vi hill climb simply returns set variables vr
best sr pick chooses randomly one variables ip returns v
value ipped ipping updatescores updates values si
exploits observation functions initial hill climb pick
ip depend structure input formula computation
scores step input formula required clausal form
idea thus suitable notion score non clausal formulas ecient
computing

extended notion score

let cnf converting propositional formula clausal form
standard method e applying rules de morgan following definition
extends notion score propositional formulas

definition score truth assignment propositional formula
number clauses cnf falsified


fiapplying gsat non clausal formulas

mpp
pp
pp
pp

p









b




















b


b





b





c

e b


j




e


j


ss

e







j
aa








f
b

b
b
c






b
b






c
b
c







b


b c e f e c f f b e c f

































































figure computation tree
cnf represents natural clausal form conversion cnf number
propositional variables logically equivalent cnf
exponential size growth cnf jcnf j j j definition overcomes
possible introduce linear time computable function
gives score formula done directly e without converting
clausal form define recursively follows



j
j
literal
otherwise
otherwise
v
sp
sq
k






wk k
q k k
pk ss
k
k
k k
k
k




ss ss










k k distinction k k due polarity
current subformula k computation call function
j j invoked iff j positive negative subformula
example figure represents computation tree score truth assignment
formula








b c e f c e c f
e b f b f e c f b






















































assigns true variables information square brackets associated
subformula j represents j j instance consider small
subtree left figure score computed following way
notice definition easily extended formulas involving connectives e g
nand xor else complicate boolean functions



fisebastiani

b c e f
b c e f
b c e f















































w

q

vk k pk k
k k k k
literals





notice cnf clauses long

theorem let propositional formula truth assignment variables
function gives score

proof follows consideration truth assignment set
false clauses cnf cross product two sets false clauses
cnf cnf
theorem let propositional formula truth assignment variables
number operations required calculating grows linearly
size
proof follows fact time number operations required
computing time ai j ij bi
time maxi ai j j maxi bi f g
number operations required computing score assignment
clausal formula jj cnf jj j j thus standard
computation score requires j j operations performs
directly linear time

gsat non clausal formulas

follows sections extend gsat non clausal formulas simply
extended notion score definition let nc gsat non clausal gsat
version gsat scores computed implementation
function follows theorem nc gsat function hillclimb returns sets variables gsat cnf nc gsat
performs ips returns gsat cnf theorem ensures
every score computation performed linear time
current implementation gsat selman kautz provides highlyoptimized implementation updatescores v analyzes clauses
last ipped variable v occurs allows strong reduction computational cost
sebastiani describe detail analogous optimized version updating
procedure nc gsat called nc updatescores v prove following properties
clausal form e cnf nc updatescores v
complexity updatescores v
ii cnf nc updatescores v j j updatescores v j j
latter mirrors complexity issues presented section


fiapplying gsat non clausal formulas

idea introduced applied variants gsat csat
cautious sat hill climb returns variables cause decrease score
dsat deterministic sat function pick performs deterministic choice
rsat random walk sat variable picked randomly among variables
msat memory sat pick remembers last ipped variable avoids picking
variants proposed gent walsh transposed ncgsat well independent structure input formula selman
kautz suggest variants improve performance overcome
escaping local minima strategy averaging suggests
different implementation function initial instead random assignment initial
returns bitwise average best assignments two latest cycles independent
form input formula strategy random walk sequence hill climb
pick substituted probability p simpler choice function choose randomly
variable occurring unsatisfied clause idea transposed nc gsat
well choose randomly branch passing nodes whose score different
zero pick variable leaf
one final observation worth making order overcome exponential growth
cnf formulas proposed plaisted greenbaum de la
tour convert propositional formulas polynomial size clausal formulas
methods introduction variables representing subformula
original input unfortunately issue size polynomiality valid
occurs number clauses grows exponentially number
even worse introduction k variables enlarges search space k factor
reduces strongly solution ratio fact model model
model know one k extensions model plaisted
greenbaum

acknowledgements
fausto giunchiglia enrico giunchiglia given substantial continuous feedback
whole development toby walsh provided important feedback
previous version aaron noble paolo pecchiari luciano serafini
helped final revision bart selman henry kautz thanked assistance
gsat code

references

artosi governatori g labelled model modal logic proc cade
workshop automated model building

ballantyne bledsoe w generating examples proof discovery michie ed machines intelligence vol pp halsted press
davis putnam h computing procedure quantification theory journal
acm


fisebastiani

de la tour b minimizing number clauses renaming proc
th conference automated deduction pp springer verlag
gent p walsh enigma sat hill climbing procedures tech rep
university edinburgh dept artificial intelligence
gent p walsh towards understanding hill climbing procedures
sat proc th national conference artificial intelligence pp
jeroslow r computation oriented reduction predicate propositional logic
decision support system
kautz h selman b satisfiability proc th european conference artificial intelligence pp
klingerbeck generating finite counter examples semantic tableaux
interpretation revision proc cade workshop automated model building

levesque h making believers computers artificial intelligence
plaisted greenbaum structure preserving clause form translation
journal symbolic computation
reiter r mackworth logical framework depiction image interpretation artificial intelligence
sebastiani r applying gsat non clausal formulas tech rep
dist university genova italy available via anonimous ftp mrg dist unige
pub mrg ftp
selman b kautz h domain independent extension gsat solving large
structured satisfiability proc th international joint conference
artificial intelligence pp
selman b levesque h mitchell method solving hard satisfiability proc th national conference artificial intelligence
pp
slaney j scott model guided theorem prover proc th international joint conference artificial intelligence pp morgan kaufmann




