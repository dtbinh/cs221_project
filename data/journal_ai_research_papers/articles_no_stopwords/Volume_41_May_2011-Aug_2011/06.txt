Journal Artificial Intelligence Research 41 (2011) 477526

Submitted 11/10; published 08/11

Probabilistic Framework Learning Kinematic Models
Articulated Objects
Jurgen Sturm
Cyrill Stachniss
Wolfram Burgard

sturm@informatik.uni-freiburg.de
stachnis@informatik.uni-freiburg.de
burgard@informatik.uni-freiburg.de

Department Computer Science,
University Freiburg,
Georges-Koehler-Allee 79, 79100 Freiburg, Germany

Abstract
Robots operating domestic environments generally need interact articulated
objects, doors, cabinets, dishwashers fridges. work, present novel,
probabilistic framework modeling articulated objects kinematic graphs. Vertices
graph correspond object parts, edges model kinematic
relationship. particular, present set parametric non-parametric edge models
robustly estimated noisy pose observations. furthermore
describe estimate kinematic structure use learned kinematic
models pose prediction robotic manipulation tasks. finally present
learned models generalized new previously unseen objects. various
experiments using real robots different camera systems well simulation,
show approach valid, accurate efficient. Further, demonstrate
approach broad set applications, particular emerging fields mobile
manipulation service robotics.

1. Introduction
Service robots operating domestic environments typically faced variety
objects deal manipulate fulfill task.
complicating factor many relevant objects articulated, doors,
windows, pieces furniture cupboards, cabinets, larger objects
garage doors, gates cars. Understanding spatial movements individual parts
articulated objects essential service robots allow plan relevant actions
door-opening trajectories assess whether actually successful.
work, investigate problem learning kinematic models articulated objects
using robotic manipulation tasks. illustrating example, consider Fig. 1
mobile manipulation robot interacts various articulated objects kitchen
environment, learns kinematic properties infers kinematic structure.
problem formulated follows: Given sequence pose observations
object parts, goal learn compact kinematic model describing whole articulated object. kinematic model define (i) connectivity parts,
(ii) number degrees freedom object, (iii) kinematic function
articulated object. result, obtain generative model used
robot generating reasoning future unseen configurations.

c
2011
AI Access Foundation. rights reserved.

fiSturm, Stachniss, & Burgard

revolute

prismatic

Figure 1: service robot learns kinematic models articulated objects kitchen environment.

contribution paper novel approach enables real robot learn
kinematic models articulated objects sensor data. models describe
kinematics object include part connectivity, degrees freedom objects,
kinematic constraints. utilize models subsequently control motion
manipulator. Furthermore, show robot improve model learning exploiting
past experience. Finally, show framework generalized deal
closed-chain objects, i.e., objects contain kinematic loops.
past, several researchers addressed problem handle doors drawers
(Jain & Kemp, 2009a; Klingbeil, Saxena, & Ng, 2009; Meeussen et al., 2010; Wieland,
Gonzalez-Aguirre, Vahrenkamp, Asfour, & Dillmann, 2009; McClung, Zheng, & Morrell,
2010). approaches, however, either entirely model-free assume substantial knowledge model parameters. Whereas model-free approaches
release designers providing a-priori model information, knowledge objects articulation properties supports state estimation, motion prediction,
planning.

478

fiA Probabilistic Framework Learning Kinematic Models Articulated Objects

pose
observations

model
fitting

candidate
link models

structure
selection

kinematic
graph

Figure 2: Schematic overview approach. robot observes articulated object
different poses. uses observations generate set candidate models,
selects kinematic structure maximizes posterior probability.

previous work, introduced simpler version probabilistic framework
modeling articulated objects, presented estimators fitting link models, showed
efficiently find kinematic structure kinematic trees (Sturm, Pradeep, Stachniss,
Plagemann, Konolige, & Burgard, 2009). observations, used motion capture studio
data simulation. Further, used stereo camera system learning models
kitchen furniture (Sturm, Konolige, Stachniss, & Burgard, 2010). described
manipulation robot learn kinematic models direct interaction articulated
objects, improve time learning experience (Sturm, Jain, Stachniss,
Kemp, & Burgard, 2010). work, present unified framework learning kinematic models articulated objects extended set experiments. contrast
previous work, generalize approach kinematic trees general kinematic
graph objects add strategy efficiently find locally optimal graph. this,
becomes possible model articulated objects contain kinematic loops. Furthermore,
finding effective number degrees freedom (DOFs) articulated object directly
follows approach. general software framework implements presented
approach available online1 BSD license, including source code, documentation,
tutorials.
paper organized follows. Section 2, introduce unified framework
modeling kinematics articulated objects. Section 3, present several extensions
including exploitation prior information, kinematic loops, estimation
degrees freedom. Section 4, describe different options perceive control
motion articulated objects. analyze approach extensive set experiments
simulation real robots report results Section 5. Finally,
conclude article discussion related work Section 6.

2. Probabilistic Framework Articulated Objects
define articulated object consist multiple object parts one
passively actuated mechanical links them. links constrain motion parts. example, hinge door constrains door move arc,
shaft drawer constrains drawer move line segment. simplest
articulated object consists two rigid parts one mechanical link. complex ob1. http://www.ros.org/wiki/articulation

479

fiSturm, Stachniss, & Burgard

jects may consist several articulated parts, door door handle, car
several doors, windows, wheels.
Fig. 2 gives high-level overview proposed system. robot observes pose
articulated object manipulated. relative motion two parts,
fits different candidate models describe different mechanical links. set
candidate link models, selects kinematic structure best explains observed
motion, i.e., kinematic structure maximizes posterior probability.
2.1 Notation
assume robot, external object, observes pose articulated object
consisting p object parts. denote true pose object part {1, . . . , p}
vector xi SE (3) representing 3D pose part (including position orientation),
SE (3) = R3 SO(3) stands special Euclidean group. Further, refer
full object pose (containing poses parts) vector x1:p = (x1 , . . . , xp )T .
Two object parts j related relative transformation ij = xi xj .
use referring motion composition operator inverse2 .
denote kinematic link model two object parts j Mij
associated parameter vector ij Rkij , kij N0 denotes number parameters
model describing link. kinematic graph G = (VG , EG ) consists set
vertices VG = {1, . . . , p}, corresponding parts articulated object, set
undirected edges EG VG VG describing kinematic link two object parts.
edge (ij), corresponding kinematic link model Mij parameter vector ij
associated.
kinematic link models consider (except trivial rigid link)
latent variable qij Cij Rd ij describes configuration link. door,
opening angle. Cij stands configuration space link. variable
dij represents number DOFs mechanical link two parts.
object articulated, robot observes object pose; denote
n
n-th pose observation object part yi . Correspondingly, denote n-th pose
n
1 , . . . , yn ).
observation parts y1:p sequence n pose observations Dy = (y1:p
1:p
n
Further, refer Dzij = (z1ij , . . . , zij ) sequence relative transformations
zij = yi yj robot observed far edge (ij).
Fig. 3a depicts graphical model simple articulated object consists two
object parts. use so-called plate notation simplify notation
graphical model. Here, nodes inside rectangle (the plate) copied n times,
i.e., time step object observed. time steps,
articulated object takes particular configuration q12 defining together model
parameters noise-free relative transformation 12 noise-free pose
object parts x1 x2 . that, robot observes noisy poses y1 y2 ,
infers virtual measurement z12 = y1 y2 . model learning,
robot infers observations link model M12 link parameters 12 .
2. E.g., poses x1 , x2 R44 represented homogeneous matrices, operators correspond
matrix multiplication x1 x2 = x1 x2 inverse multiplication x1 x2 = (x1 )1 x2 , respectively.

480

fiA Probabilistic Framework Learning Kinematic Models Articulated Objects

M12 , 12

qt12
xt1

q
xt2

x1

x2

x1

x2
M12 , 12

t12
y1t

y2t

M12 , 12

zt12
1, . . . ,

(a) Full graphical model

(b) Reduced graphical model

(c) Kinematic graph

Figure 3: (a) Graphical model articulated object consisting two parts x1 x2 ,
observed time steps. model M12 , 12 shared time
steps. (b) shows simplified version graphical model. (c) shows
corresponding kinematic graph.

reduced version graphical model depicted Fig. 3b. improve readability,
leave nodes, i.e., node corresponding relative transformation 12
observation nodes y1 , y2 , z12 . Instead, visualize dependency x1
x2 direct link label corresponding model. Further, collapse
configuration link single node corresponding configuration whole
object. Finally, refer kinematic graph graph models connectivity
object parts, depicted Fig. 3c).
2.2 Problem Definition
problem consider find likely kinematic graph G given
sequence pose observations Dy articulated object. Bayesian terms, means
aim finding kinematic graph G maximizes posterior probability
observing poses Dy articulated object, i.e.,
G = arg max p(G | Dy ).

(1)

G

However, finding global maximum posterior p(G | Dy ) difficult,
highly non-convex function high-dimensional parameter space consisting discrete
well continuous dimensions encode kinematic structure kinematic
properties, respectively.
Therefore, section, consider simplified problem. restrict structure
space kinematic trees only, focus general problem Section 3. Kinematic
481

fiSturm, Stachniss, & Burgard

trees property individual edges independent other.
result, estimate link parameters independently independent
kinematic structure. means learning local kinematic relationship
n
object parts j, relative transformations Dzij = (z1ij , . . . , zij )
relevant estimating edge model. this, rephrase maximization
problem (1) kinematic trees
G = arg max p(G | Dz )

(2)

G

= arg max p({(Mij , ij ) | (ij) EG } | Dz ).
G

= arg max
p(Mij , ij | Dzij ).
G

(3)
(4)

(ij)EG

latter transformation follows mutual independence edges kinematic
trees.
important insight work kinematic link models representing
edges estimated independently actual structure kinematic tree.
result, problem solved efficiently: first, estimate link models
possibles edges (ij) VG VG :
(Mij , ij ) = arg max p(Mij , ij | Dzij ).

(5)

Mij ,ij

link models independent independent whether
actually part kinematic structure EG . Second, given link models, estimate
kinematic structure. two-step process visualized Fig. 2.
Solving (5) still two-step process (MacKay, 2003): first level inference,
assume particular model (e.g., revolute model) true, estimate
parameters. applying Bayes rule, may write
ij = arg max p(ij | Dzij , Mij )

(6)

ij

= arg max

p(Dzij | ij , Mij ) p(ij | Mij )
p(Dzij | Mij )

ij

.

(7)

term p(ij | Mij ) defines model-dependent prior parameter space,
assume work uniform, thus may dropped. Further, ignore
normalizing constant p(Dzij | Mij ), influence choice parameter
vector. results
ij = arg max p(Dzij | ij , Mij ),

(8)

ij

means fitting link model observations corresponds problem
maximizing data likelihood.

482

fiA Probabilistic Framework Learning Kinematic Models Articulated Objects

second level inference, need compare probability different models
given data select model highest posterior:
Z
Mij = arg max p(Mij , ij | Dzij ) dij .
(9)
Mij

Computing exact posterior probability model general difficult, therefore
use work Bayesian information criterion (BIC) selecting best model
according (9).
result inference, obtain edge (ij) VG VG model Mij
parameter vector ij , best describes motions Dzij observed two
parts. denote set possible link models
= {(Mij , ij ) | (ij) VG VG }.

(10)

Given maximum-likelihood estimate links, efficiently estimate
kinematic structure EG VG VG . this, aim finding subset,
maximizes posterior probability resulting kinematic graph, i.e.,
Z
EG = arg max p(EG , | Dz ) dM.
(11)
EG

solve equation maximizing BIC possible structures EG , using
maximum-likelihood estimate approximating integral.
this, provide efficient way solve (2), first fitting models data,
selecting best model link, finally estimating kinematic structure
whole articulated object. Section 2.3 Section 2.7, show solve
model fitting problem (8) model selection problem (9) efficiently robustly
noisy observations. Section 2.8, show one efficiently solve (11),
given link models. Section 3.2, show solution kinematic trees
generalized general kinematic graphs, including kinematic structures containing
loops.
2.3 Observation Model
beginning, consider simple objects consisting p = 2 rigid parts, drop
ij indices increase readability. consider case robot observed
sequence n relative transformations Dz = (z1 , . . . , zn ) two adjacent rigid
parts articulated object. assume presence Gaussian noise
measurements zn zero mean covariance z R66 .
Further, assume small fraction observations real outliers cannot
explained Gaussian noise assumption alone. outliers may result
poor perception, bad data association, sensor failures hard modeled
explicitly. outliers related true value = x1 x2 all, assume
come uniform prior, i.e., assume constant likelihood p(zoutlier ) = const.
One think latent variable v {0, 1} indicating whether observation

483

fiSturm, Stachniss, & Burgard

inlier (v = 1) outlier (v = 0). Further, denote probability drawing
outlier, i.e., p(v = 0) = . full observation model becomes

+ N (0, z ) v = 1
z
.
(12)
U
v = 0
resulting data likelihood single observation z thus mixture Gaussian
uniform distribution mixing constant :
p(z | , ) = (1 )p(z | v = 1) + p(z | v = 0).

(13)

Note general neither true transformation outlier ratio directly
observable, thus need estimated data. comparing models
different outlier ratios, assume global prior p() exp(w) w
weighting constant, thereby favor models fewer outliers models
outliers. resulting data likelihood observation z given true value thus
becomes:
p(z | ) = p(z | , )p().

(14)

2.4 Candidate Models
considering set objects relevant service robot, one quickly realizes
joints many objects belong generic model classes. particular, revolute
prismatic joints used often, although objects composed
mechanical linkages, example spherical joints, screws, two-bar links. Examples
revolute joints include doors, door handles, windows. includes doors
dishwashers, microwave ovens washing machines. Examples articulated objects
belonging prismatic class include drawers, sliding doors, window blinds. However,
objects different mechanical linkages, garage doors twobar office lamps. motivates use set candidate models, well suited
describing kinematic properties particular class articulated links. candidate
set consists parametrized non-parametrized models, particular, includes model
revolute joints (Mrevolute ), prismatic joints (Mprismatic ), rigid transformations
(Mrigid ). Additionally, may articulations correspond standard
motions, consider parameter-free model (MGP ). model joints using
combination dimensionality reduction Gaussian process regression.
framework, model class defines conditional probability distribution p( |
q, M, ) p(q | , M, ) means forward kinematic function fM, (q) =
1
inverse kinematic function fM,
(z) = q. means assume link
models deterministic, attribute noise measurement noise observations
object parts, i.e., means observation model p( | z) defined Section 2.3.
Since prior information nature connection two
rigid parts, aim fit single model, instead aim fitting
candidate models observed data, select best model set.

484

fiA Probabilistic Framework Learning Kinematic Models Articulated Objects

candidate model

rigid model
prismatic model
revolute model
Gaussian process model

DOFs

0
1
1
1, . . . , 5

parameters
k
6
9
12
1 + + 6n

Table 1: Overview different candidate models articulated links.
2.5 Model Fitting using Maximum Likelihood Consensus
estimating parameters above-mentioned models, need find
parameter vector Rk maximizes data likelihood given model, i.e.,
= arg max p(Dz | M, ).

(15)



presence noise outliers, finding right parameter vector minimizes (15)
trivial, least squares estimation sensitive outliers thus sufficient given
observation model. Therefore, use MLESAC (maximum likelihood consensus)
algorithm introduced Torr Zisserman (2000). estimate initial kinematic
parameters minimal set randomly drawn samples observation sequence
refine using non-linear optimization data likelihood.
MLESAC procedure model works follows: First, generate guess
parameter vector (15) minimal set samples Dz . guess,
compute data likelihood whole observation sequence Dz product
data
p(Dz | M, ) =

n


p(zt | M, ).

(16)

t=1

repeat sampling step fixed number iterations, finally select parameter vector maximizing (16). initial guess, apply non-linear optimization
data likelihood refine parameter vector using Broyden-Fletcher-Goldfarb-Shanno
(BFGS) optimization, quasi-Newton method function maximization.
maximization data likelihood, MLESAC iteratively estimates outlier
ratio , using Expectation Maximization algorithm.
following, show link models (i) estimate parameter
vector minimal sample set observations, (ii) estimate transformation z given
configuration q, (iii) estimate configuration q given transformation z. brief
overview model candidates given Table 1.
2.5.1 Rigid Model
parametrize rigid link fixed relative transformation two object parts.
Thus, parameter vector k = 6 dimensions. sampling consensus step,
draw single observation z training data Dz gives us initial guess
485

fiSturm, Stachniss, & Burgard

parameter vector . parameter vector thus corresponds estimated fixed
relative transformation two parts. rigid transformation model,
forward kinematics function equals parameter vector corresponds estimated
fixed relative transform two parts:
fMrigid , (q) = .

(17)

rigid model zero DOFs (d = 0), inverse kinematic function needed.
2.5.2 Prismatic Model
Prismatic joints move along single axis, thus one-dimensional configuration
space. prismatic model describes translation along vector unit length e R3
relative fixed origin SE (3). results parameter vector = (a; e)
k = 9 dimensions.
estimating parameters, sample two observations training data.
this, pick transformation first sample origin normalized
vector prismatic axis e.
configuration q R encodes distance origin along direction
motion e. forward kinematics function prismatic model Mprismatic
fMprismatic , (q) = qe.

(18)

Let trans() function removes rotational components. inverse kinematic
function becomes
1
fM
prismatic , (z) =< e, trans(a z) >,

(19)

< , > refers dot product.
2.5.3 Revolute Model
revolute model describes motion revolute joint, i.e., one-dimensional motion
along circular arc. parametrize model center rotation c SE (3),
rigid transformation r SE (3), center moving part. yields parameter
vector = (c; r) k = 12 dimensions.
revolute model, sample three observations zi , zj zk training
data. First, estimate plane spanned three points; plane normal
parallel rotation axis. Second, compute circle center intersection
perpendicular lines line segments three observations. Together
rotation axis, gives us center rotation c. Finally, estimate rigid
transformation r circle first sample.
forward kinematic function, obtain revolute links
fMrevolute , (q) = c RotZ (q) r,

(20)

RotZ (q) denotes rotation around Z-axis q. Thus, q R specifies angle
rotation. estimating configuration revolute joint use
1
1
fM
revolute , (z) = RotZ ((z c) r),

Rot1
Z () gives rotation around Z-axis.
486

(21)

fiA Probabilistic Framework Learning Kinematic Models Articulated Objects

2.5.4 Gaussian Process Model
Although rigid transformations combination revolute prismatic joints might
seem first glance sufficient huge class kinematic objects, many realworld objects cannot described single shifting rotation axis. Examples
objects include garage doors office table lamps, furniture whose joints aged
became loose.
Therefore, provide additionally non-parametric model able describe
general kinematic links. model based dimensionality reduction discovering latent manifold configuration space Gaussian process regression
learning generative model. Consider manifold described observations
Dz two rigid bodies. Depending number DOFs link, data
samples lie close d-dimensional manifold 1 6 non-linearly
embedded SE (3).
many different dimensionality reduction techniques principal component analysis (PCA) linear manifolds, Isomap locally linear embedding (LLE)
non-linear manifolds (Tenenbaum, de Silva, & Langford, 2000; Roweis & Saul, 2000).
experiments, used PCA LLE dimensionality reduction. PCA
advantage robust noise near-linear manifolds, LLE
general model strongly non-linear manifolds.
general idea use dimensionality reduction technique obtain
1

inverse kinematics function fM
GP : SE (3) R . result, assign configurations
observations, i.e.,
1
fM
GP (z) = q.

(22)

assignments observations configurations used learn forward
kinematics function fMGP , () observations. Except linear actuators, expect
function strongly non-linear.
flexible approach solving non-linear regression problems given noisy observations Gaussian processes (GPs). One main features Gaussian process
framework observed data points explicitly included model. Therefore,
parametric form fMGP : Rd SE (3) needs specified. Data points added
GP time, facilitates incremental online learning. model,
aim learn GP fits dependency
fMGP (q) + = z

(23)

unknown forward model underlying articulated link consideration.
assume homoscedastic noise, i.e., independent identically, normally distributed noise
terms N (0, z ). simplicity, train 12 independent Gaussian processes
free components homogeneous 4 4 transformation matrix. consequence
over-parametrization, predicted transformation matrices necessarily valid.
practice, however, close valid transformation matrices,
found using ortho-normalization via singular value decomposition. approach, use
standard choice covariance function, squared exponential. describes

487

fiSturm, Stachniss, & Burgard

relationship two configurations qi qj configuration space


1
2
1
k(qi , qj ) = f exp (qi qj ) (qi qj ) ,
2

(24)

f2 signal variance, 1 = diag(l1 , . . . , ld ) diagonal matrix
length-scale parameters. results (1 + d)-dimensional hyper-parameter vector
= (f2 , l1 , . . . , ld ). GPs data-driven, require training data making predictions. Therefore, count data samples parameters model,
number parameters becomes k = (1 + d) + 6n, n = |Dz | number
observations. refer interested reader text book Rasmussen Williams
(2006) details GP regression.
Note GP link model directly generalizes higher-dimensional configuration
spaces, i.e., > 1: dimensionality reduction observations SE (3)
configurations Rd , learn Gaussian process regression learns
mapping configuration space Rd back transformations SE (3). Note
GP model present similar GPLVM model introduced Lawrence
(2005). contrast GPLVM, optimize latent configurations maximizing
data likelihood. would invalidate inverse kinematics function (22), limits
GPLVM model map latent space data space. approach,
infer configuration new relative transformations available training.
2.6 Model Evaluation
evaluate well single observation z explained model, evaluate
p(z | M, ). configuration latent, i.e., directly observable robot,
integrate possible values q, i.e.,
Z
p(z | M, ) = p(z | q, M, )p(q | M, ) dq.
(25)
assumption DOFs link independent other,
configuration state q likely another (or equivalently, p(q | M, )
uniformly distributed), may write
p(q | M, ) n ,

(26)

n = |Dz | number observations far, thus number estimated
configurations d-dimensional configuration space. this, (25) simplified

Z
p(z | M, ) n p(z | q, M, ) dq.
(27)
assume p(z | q, M, ) uni-modal distribution, approximation
integral evaluate estimated configuration q given observation z using
inverse kinematics function model consideration, i.e.,
1
q = fM,
(z).

488

(28)

fiA Probabilistic Framework Learning Kinematic Models Articulated Objects

using forward
configuration, compute expected transformation
kinematics function model,
= fM, (q).


(29)

efficiently compute
Given observation z expected transformation ,
data likelihood (27) using observation model (14)

p(z | M, ) n p(z | ).

(30)

Note approximation integral based forward inverse kinematics
model corresponds projection noisy observations onto model. Finally,
marginal data likelihood whole observation sequence becomes

p(Dz | M, ) =
p(z | M, ).
(31)
zDz

2.7 Model Selection
fitted model candidates observation sequence Dz , need select
model explains data best. Bayesian model selection, means
need compare posterior probability models given data
Z
p(Dz | M, )p( | M)p(M)
p(M | Dz ) =
d.
(32)
p(Dz )
evaluation model posterior general difficult, approximated
efficiently based Bayesian information criterion (BIC) (Schwarz, 1978). denote
k number parameters current model consideration, n
number observations training data. Then, BIC defined
BIC(M) = 2 log p(Dz | M, ) + k log n,

(33)

maximum likelihood parameter vector. Model selection reduces
selecting model lowest BIC, i.e.,
= arg min BIC(M).

(34)



refer interested reader work Bishop (2007) information
BIC.
2.8 Finding Connectivity
far, ignored question connectivity described evaluate select
model single link two parts object only. section, extend
approach efficiently find kinematic trees articulated objects consisting multiple
parts.
adopt connectivity model Featherstone Orin (2008) modeling
kinematic structure undirected graph G = (VG , EG ). nodes VG graph
489

fiSturm, Stachniss, & Burgard

correspond poses individual object parts, edges EG correspond
links parts. re-introduce ij-indices, i.e., use Dzij
refer observations link (ij), Dz refer observations whole
articulated object. Dz thus contains observations edges graph G, i.e.,
Dz = {Dzij | (ij) EG }. previous section, established algorithm fits
selects given edge (ij) graph corresponding link model Mij parameter
vector ij . Given this, need select kinematic structure EG , i.e.,
link models actually present articulated object consideration.
moment, consider kinematic tree mechanisms, i.e., mechanisms
without kinematic loops. Now, consider fully connected graph p vertices, i.e., one
vertex object part articulated object. set possible kinematic trees
articulated object given spanning trees graph. endeavor
explicitly computing, evaluating, reasoning kinematic trees, however,
tractable practice.
therefore seek find kinematic structure EG maximizes posterior
stated previously (11),
EG = arg max p(EG | Dz )

(35)

EG

= arg max p({(Mij , ij ) | (ij) EG } | Dz )

(36)

EG

= arg max
EG

= arg max
EG



p(Mij , ij | Dz )

(37)

log p(Mij , ij | Dz ).

(38)

(ij)EG

X
(ij)EG

Note independence assumption individual links kinematic
trees, posterior kinematic model whole object (36) written
product posteriors individual links (37). taking logarithm (38),
structure selection problem takes form solved efficiently. key insight
kinematic tree maximizes (38) corresponds problem selecting
minimum spanning tree fully connected graph edge costs corresponding
negative log posterior,
costij = log p(Mij , ij |Dzij ),

(39)

approximate BIC value. sum edge costs corresponds
negative log posterior kinematic tree, minimum spanning tree thus maximizes posterior (38). best kinematic structure found efficiently, i.e.,
O(p2 log p) time, using example Prims Kruskals algorithm finding minimum
spanning trees (Cormen, Leiserson, Rivest, & Stein, 2001).

3. Framework Extensions
approach described far enables robot learn kinematic models articulated
objects scratch. following, consider three extensions. first extension
490

fiA Probabilistic Framework Learning Kinematic Models Articulated Objects

enables robot exploit priors learned previous interactions learning new
models. Second, generalize framework general kinematic graphs, i.e., consider
additionally objects contain closed kinematic chains. Third, show estimating
number DOFs articulated objects follows directly approach.
3.1 Learning Exploiting Priors
Using approach described above, robot always starts learning model scratch
observes movements new articulated object. learning perspective,
may seen unsatisfactory since articulated objects encountered man-made
environments belong different classes similar parameters. example,
specific office kitchen, many cabinet doors open way, i.e.,
radius rotation axis. Furthermore, countries size furniture
standardized. Thus, robot operating environments extended periods
time significantly boost performance learning priors space possible
articulated object models.
section describes approach learning priors articulated objects
means exploiting early possible manipulating previously unseen
articulated object. addition previous section, explicitly want transfer model
information contained already learned models newly seen articulated objects. key
idea identify small set representative models articulated objects
utilize prior information increase prediction accuracy handling new
objects.
keep notation simple, consider case previously encountered
two articulated objects consisting two parts thus single link only. observed
motion given two observation sequences Dz,1 Dz,2 . question whether
trajectories described two distinct models M1 M2 joint
model M1+2 . first case, split posterior two models mutually
independent, i.e.,
p(M1 , M2 | Dz,1 , Dz,2 ) = p(M1 | Dz,1 )p(M2 | Dz,2 ).

(40)

latter case, trajectories explained single, joint model M1+2
parameter vector 1+2 , estimated joint data Dz,1 Dz,2 . future
reference, denote corresponding posterior probability
p(M1+2 | Dz,1 , Dz,2 ).

(41)

determine whether joint model better two separate models comparing posterior probabilities (40) (41), i.e, evaluating
p(M1+2 | Dz,1 , Dz,2 ) > p(M1 | Dz,1 )p(M2 | Dz,2 ).

(42)

expression efficiently evaluated using BIC follows. joint model
learned n = n1 + n2 data points, using k parameters, data likelihood
L = p(M1+2 | Dz,1 , Dz,2 ), two separate models learned n1 n2

491

fiSturm, Stachniss, & Burgard

samples, using k 1 k 2 parameters, data likelihoods L1 = p(Dz,1 | M1 )
L2 = p(Dz,2 | M2 ), respectively. Accordingly, check whether
BIC(M1+2 | Dz,1 , Dz,2 ) < BIC(M1 | Dz,1 ) + BIC(M2 | Dz,2 )

(43)

i.e., whether
2 log L + k log n < 2 log(L1 L2 ) + k 1 log n1 + k 2 log n2 .

(44)

Informally, merging two models one beneficial joint model explain data
equally well (i.e., L L1 L2 ), requiring single set parameters.
two trajectories considered, one evaluate possible assignments
trajectories models select assignment highest posterior.
quickly becomes intractable due combinatorial explosion, use approximation
consider trajectories sequentially order robot observes them. check
whether merging new trajectory one existing models leads higher
posterior compared adding new model trajectory set previously
encountered models.
identified set models prior information, exploit knowledge
making better predictions observing far unseen articulated object. Consider
situation partial trajectory new object observed. exploit
prior information, proceed exactly before. compute compare posteriors
according (44), treating newly observed data points new model respectively
merging one w previously identified models evaluating
p(Mnew , M1 , . . . , Mw ) < max p(M1 , . . . , Mj+new , . . . , Mw ).
j=1,...,w

(45)

newly observed data merged existing model, parameter vector
estimated much larger dataset Dz,j Dz,new instead Dz,new leads better
estimation. Note step carried observation new sequence.
Thus, currently manipulated object ceases explained known models,
method instantaneously creates new model. successful object manipulation,
model serves additional prior information future.
3.2 Closed Kinematic Chains
Although articulated objects connectivity kinematic trees, exist
mechanisms containing closed kinematic chains (Featherstone & Orin, 2008). intuitive
example closed-loop system robot opens door manipulator.
robot door described individually kinematic tree using
approach, combined system robot, door floor creates kinematic loop.
Another example humanoid robot multiple contact points, e.g., standing
feet, robot manipulates object two arms (Sentis, Park, & Khatib,
2010). describe closed-loop systems, need extend approach.
Recall finding kinematic structure Section 2.8, established correspondence finding graph maximizes posterior probability. that,
needed compute data likelihood graph based edge constraints,
492

fiA Probabilistic Framework Learning Kinematic Models Articulated Objects

easy kinematic trees. case, links evaluated independently other.
However, computing data likelihood kinematic graph based edge constraints
difficult. results complex (joint) prediction poses
object parts involved kinematic loop. general, chained predictions
relative transformations object parts lead globally consistent prediction, needed compute overall data likelihood case closed kinematic
chains.
problem, however, closely related loop-closing graph-based formulation
simultaneous localization mapping (SLAM) problem (Lu & Milios, 1997; Dellaert,
2005; Frese, 2006; Grisetti, Stachniss, & Burgard, 2009). type problem, closedform solutions exist simple cases. popular solution general case
iterative optimization approaches deal underlying non-linear least squares
problem.
obtain consistent pose estimation whole graph, use optimization
engine HOG-Man Grisetti, Kummerle, Stachniss, Frese, Hertzberg (2010), originally
designed solve SLAM problem. generate input graph HOG-Man,
proceed follows. add vertex object part representing initial pose
x01 , . . . , x0n , estimate (arbitrary) spanning tree graph. Then,
link model Mij graph G, add edge constrains relative transformation
(in SLAM, corresponds
x0i x0j expected transformation
ij
observation). optimization approach compute set new poses x1 , . . . , xn
line constraints sense best prediction terms
squared error obtained given links (in SLAM, corresponds
corrected trajectory robot).
pose observations yi , assume Gaussian noise zero mean covariance
, i.e.,
yi = xi +
N (0, ).

(46)
(47)

data likelihood single object part observed pose expected
pose x given kinematic graph G configuration q becomes


1
1
p(yi | G, q) exp (xi yi ) (xi yi ) .
(48)
2
Using this, global data likelihood articulated object particular configuration
computed product likelihoods individual object parts, i.e.,

p(y1:p | G, q) =
p(yi | G, q).
(49)
i1,...,p

configuration q articulated object latent thus known, need
integrate possible configurations, i.e., calculate
Z
p(y1:p | G) = p(y1:p | G, q)p(q | G)dq.
(50)

493

fiSturm, Stachniss, & Burgard

Similar (25), approximate integral evaluating likely configuration q articulated object. assume configurations q uniformly
distributed, i.e., p(q | G) n , n number pose observations
total number DOFs articulated object. data likelihood pose
observation y1:p becomes
p(y1:p | G) n p(y1:p | G, q).

(51)
n

1 , . . . , ) whole articulated
data likelihood observation sequence Dy = (y1:p
1:p
object


p(Dy | G)
n p(y1:p
| G, qi )
(52)
i1,...,n

= n nD




p(y1:p
| G, qi ).

(53)

i1,...,n

data likelihood used select best kinematic structure. Note
principle, possible graphs need evaluated super-exponential
number object parts, polynomial number template models. contrast,
finding exact solution case kinematic trees polynomial complexity
O(mp2 ). Obviously, massive set possible graph structures fully evaluated
small articulated objects template models.
absence efficient exact solution, propose efficient approximation
able find locally best graph initial guess using randomized search
strategy polynomial time. idea given spanning tree initial solution
evaluate graphs neighborhood current structure, i.e., graphs whose
topology similar current one, e.g., adding removing one edge time.
see experimental section, heuristic able find optimal (or nearoptimal) graph structure cases. Additionally, guarantee
randomized search strategy never gets worse initial solution, i.e., case
spanning tree.
3.3 Finding Number DOFs
current configuration articulated object given stacked vector
individual configurations articulated links, i.e.,


q1
q
2
qlinks = ..
(54)
.
qDlinks
. question is, whether articulated object actually many DOFs
sum DOFs individual links might suggest. Clearly, case articulated
object kinematic tree, DOFs object
P articulated object directly equals
sum DOFs links links = (ij)EG ij links actuated
494

fiA Probabilistic Framework Learning Kinematic Models Articulated Objects

(a)

(b)

Figure 4: Example open closed kinematic chain. Whereas open chain (a)
three DOFs, closed chain (b) single DOF.

independently other. However, articulated objects containing loops, finding
number DOFs articulated object trivial.
example, consider object Fig. 4a consists four object parts
total three DOFs. contrast, object Fig. 4b consists four object parts,
connected four revolute links form loop. four links single
DOF, therefore configuration vector defining configuration links
qlinks = (q1 , q2 , q3 , q4 ) R4 . Yet, overall system single DOF:
first joint brought particular configuration, joints fixed well,
result loop closure. means object configuration qobject R
single dimension, thus object configuration space one-dimensional manifold
embedded four-dimensional link configuration space.
Finding mapping high-dimensional link configuration space RD links
lower-dimensional object configuration space RD object example achieved using
PCA linear manifolds, LLE ISOMAP non-linear manifolds. case
PCA, results finding projection matrix P RD object links describing mapping
qobject = P qlinks

(55)

Recall (53), number DOFs strong influence data likelihood
configuration, higher dimensional configuration space results lower
likelihood single configuration. result, model fewer DOFs preferred
model DOFs. time, additional parameters need estimated
dimension reduction, parameters model parameters thus
need considered model selection.
Informally speaking, kinematic graph fewer DOFs explains data equally
well, higher data likelihood thus favored structure selection
step. experimental section, see use accurately robustly
estimate DOFs various articulated objects.

495

fiSturm, Stachniss, & Burgard

4. Perception Articulated Objects
estimating kinematic model articulated object, approach needs sequence
1 , . . . , yn ) includes poses p parts
n pose observations Dy = (y1:p
1:p
object. experiments, used different sources acquiring pose observations:
marker-based perception, described Section 4.1, domain-specific marker-less perception described Section 4.2, perception based internal forward kinematic
model manipulator using joint encoders described Section 4.3.
4.1 Marker-Based Perception
observing pose articulated object, used experiments three different
marker-based systems, different noise outlier characteristics: motion capture
studio low noise outliers, ARToolkit markers relatively high noise
frequent outliers, OpenCVs checkerboard detector moderate noise occasional
outliers.
4.1.1 Motion Capturing Studio
conducted first experiments PhaseSpace motion capture studio Willow
Garage, collaboration Pradeep Konolige (Sturm et al., 2009). tracking
system uses several high-speed cameras installed rig along ceiling, active LED
markers attached individual parts articulated object. data
PhaseSpace device virtually noise- outlier-free. noise PhaseSpace system
specified y,pos < 0.005 y,orient < 1 .
4.1.2 ARToolkit Markers
Additionally, used passive marker-based system ARToolkit registering 3D
pose objects Fiala (2005). system advantage requires
single camera, used without infrastructure. ARToolkit markers
consist black rectangle error-correcting code imprinted 6x6-grid inside
rectangle distinguishing individual markers. found noise
system strongly depends distance angle marker camera.
marker size 0.08 distance 2 camera, typically obtained
noise values y,pos = 0.05 y,orient = 15 .
4.1.3 Checkerboard Markers
OpenCVs checkerboard detector provides much higher pose accuracy. detector
searches camera images strong black white corners sub-pixel accuracy (Bradski & Kaehler, 2008). system, typically obtained measurement noise around
y,pos = 0.005 y,orient = 5 marker sizes 0.08 side length 2 distance camera. One distinguish different markers system using
checkerboards varying numbers rows columns.

496

fiA Probabilistic Framework Learning Kinematic Models Articulated Objects

Figure 5: Marker-less pose estimation using stereo camera. segmented plane,
iteratively fit rectangle (left image). right two images show observed
tracks cabinet drawer cabinet door.

4.2 Marker-Less Pose Estimation
contrast using artificial markers, possible estimate object pose directly,
example, dense depth images acquired stereo camera system. recently
developed system collaboration Konolige (Sturm et al., 2010). Using
marker-less camera-based tracking system several advantages. First, rely
artificial markers attached articulated objects, second, require
expensive range scanners additional disadvantage poorly deal
moving objects, making inconvenient learning articulation models. However,
recognize general registration arbitrary objects point clouds still
open issue. Therefore, restrict fronts kitchen cabinets.
solve general perception problem, provides useful working solution mobile
manipulation robots performing service tasks households. concrete scenario,
perception articulated drawers doors kitchen environment requires accurate
detection rectangular objects depth image sequences.
stereo processing system, obtain frame disparity image
R640480 , contains pixel (u, v) perceived disparity D(u, v) R.
details camera system, particular choice suitable texture projection
pattern, refer interested reader recent work Konolige (2010). relationship 2D pixels disparity image 3D world points defined
projection matrices calibrated stereo camera, calculated single matrix
multiplication pixel coordinates disparity.
apply RANSAC-based plane fitting algorithm segmenting dense depth
image planes. next step find rectangles segmented planes. start
sampled candidate rectangle optimize pose size iteratively, minimizing
objective function evaluates accurately rectangle candidate matches
points segmented plane. search converges, determine quality
found rectangle evaluating pixel precision recall. example iterative
pose fitting given left image Fig. 5: rectangle candidate started lower
left door, iteratively converged correct pose size door.

497

fiSturm, Stachniss, & Burgard

Articulated Object

Position
End Effector

Arm Control

Cartesian
Equilibrium
Point Generation

y1:t

Model Fitting
Selection
M,

xCEP


xt , Jt

Model Prediction

Figure 6: Overall control structure (Sturm et al., 2010). robot uses trajectory
end effector estimate model articulated object. Subsequently,
uses model generating next Cartesian equilibrium point.

Finally, sequence depth images D1:n , detected rectangles need integrated set consistent tracks, one visible rectangle. result, obtain
1 , . . . , yn ) use model estimation model
set pose sequences Dy = (y1:p
1:p
selection. middle right image Fig. 5 show tracks obtained
observing drawer door kitchen cabinet. details approach
recently described Sturm et al. (2010).
4.3 Perception using Joint Encoders Mobile Manipulation Robot
Next visual observation articulated objects, mobile manipulation robot
estimate kinematic model physically interacts articulated object.
evaluating joint encoders, robot compute pose gripper using
forward model manipulator. robot establishes firm contact handle
cabinet door, position end-effector directly corresponds position
door handle. result, robot sense position handle well control
moving manipulator.
approach described section developed collaboration Jain
Kemp Healthcare Robotics Lab Georgia Tech. robot use
research statically stable mobile manipulator named Cody. consists two arms
MEKA Robotics omni-directional mobile base Segway. end-effector,
uses hook inspired prosthetic hooks human fingers, described
detail recent work Jain Kemp (2009a). Furthermore, used PR2 robot
Willow Garage additional experiments, using standard 1-DOF gripper two
fingers, located lab.
Fig. 6 shows block diagram approach. robot observes pose
end effector Cartesian space, denoted SE (3). operating mechanism,
robot records trajectory y1:t time sequence poses. partial
trajectory, continuously estimates kinematic model articulated object,
robot uses turn predict continuation trajectory (Sturm et al., 2010).

498

fiA Probabilistic Framework Learning Kinematic Models Articulated Objects

actively operate articulated object robot, use trajectory controller
updates Cartesian equilibrium point based estimated Jacobian kinematic
model articulated object. controller uses kinematic model generate
Cartesian equilibrium point (CEP) trajectories fixed world frame, attached initial
location handle. time step t, controller computes new equilibrium point
xCEP


mechanism
xCEP
= xCEP
+ vthook ,

t1 + vt

(56)

vtmechanism vector intended operate mechanism, vthook vector
intended keep hook slipping handle. controller computes
vtmechanism = L mechanism

Jt
kJt k

(57)

vector length L mechanism = 0.01 along Jacobian learned kinematic
function mechanism, i.e.,

Jt = fM, (q)fiq=qt .
(58)
vthook , use proportional controller tries maintain force 5 N
hook handle direction perpendicular Jt . controller uses force
measured wrist force-torque sensor robot. refer reader work
Jain Kemp (2009b) details implementation equilibrium point control,
used coordinate motion mobile base compliant arm
(Jain & Kemp, 2010).
positional accuracy manipulator high, i.e., y,pos 0.01 m.
However, using hook end-effector, robot cannot sense orientation
handle. manipulator mounted mobile base, robot move around,
thus positional accuracy sensed position hook global coordinate system
(and thus including localization errors base) reduces y,pos 0.05 m.

5. Experiments
section, present results thorough evaluation aspects approach.
First, show approach accurately robustly estimates kinematic models
typical household objects using markers. Second, show holds data
acquired marker-less pose estimation using active stereo camera system. Third,
show approach works data acquired different mobile manipulation
robots operating various pieces furniture domestic environments.
5.1 Microwave Oven, Office Cabinet, Garage Door
first experiments, use pose observations three typical objects domestic
environments: door microwave oven, drawers office cabinet, garage
door. goal experiments show approach robustly
accurately estimates link models, well correct kinematic structure whole
499

fiSturm, Stachniss, & Burgard

articulated object. addition, show range configuration space
obtained model estimation.
motion microwave oven cabinet tracked using motion capture
studio collaboration Pradeep Konolige (Sturm et al., 2009), garage
door using checkerboard markers. object, recorded 200 data samples
manually articulating object. evaluation, carry 10 runs. run,
sampled n = 20 observations use fitting model parameters. used
remaining observations measuring prediction accuracy fitted model (10-folds
cross-validation).
5.1.1 Model Fitting
quantitative results model fitting model selection given Table 2.
seen table, revolute model well suited predicting opening
movement microwave door (error 0.001 m) prismatic model predicts
accurately motion drawer (error 0.0016 m), expected
result. Note revolute model explain motion drawer
accuracy 0.0017 m, estimating rotary joint large radius. noted
flexible GP model provides roughly accuracy parametric models
able robustly predict poses datasets (0.0020 door,
0.0017 drawer). case simulated garage door, however, parametric
models fail whereas GP model provides accurate estimates.
reader might wonder GP model alone suffice, GP model
represent many different types kinematic models, including revolute prismatic
ones. However, even GP model fits data, best choice terms
resulting posterior likelihoods. GP model cases overly complex,
over-fit data hand. high complexity GP model penalized
BIC. contrast, specialized models smaller number free parameters,
therefore robust noise outliers. Furthermore, require less
observations converge. experiments illustrate system takes advantage
expert-designed parametric models appropriate keeping flexibility
learn accurate models unforeseen mechanical constructions.
learned kinematic models provide configuration range C articulated
object. visualization purposes, sample configurations range,
project object poses using learned forward function. Fig. 7, Fig. 8, Fig. 9
illustrate learned configuration range door microwave oven, garage
door, two drawers office cabinet, respectively.
5.1.2 Model Structure Selection
fitting model candidates observed data, next goal select model
best explains data, corresponds finding model maximizes
posterior probability (or minimizes BIC score).
right image Fig. 7 shows resulting graph microwave oven dataset,
BIC score indicated edge. expected, revolute model selected,

500

fiA Probabilistic Framework Learning Kinematic Models Articulated Objects

Dataset

Rigid
Model

Prismatic
Model

Revolute
Model

GP
Model

Microwave
(z,pos. = 0.002 m,
z,orient. = 2.0 )

pos. error =
orient. error =
=

0.3086
37.40
0.891

0.1048
32.31
0.816

0.0003
0.15
0.000

0.0020
0.16
0.000

Drawer
(z,pos. = 0.002 m,
z,orient. = 2.0 )

pos. error =
orient. error =
=

0.0822
2.06
0.887

0.0016
1.36
0.000

0.0018
1.60
0.003

0.0017
1.09
0.000

Garage Door
(z,pos. = 0.050 m,
z,orient. = 5.0 )

pos. error =
orient. error =
=

1.0887
14.92
0.719

0.3856
10.79
0.238

0.4713
10.34
0.418

0.0450
0.93
0.021

Table 2: Prediction errors estimated outlier ratios articulation models learned
microwave oven, office cabinet, real garage door.

(a)

microwave oven

door

x1

x2

rigid
BIC(M12 ) =

2568507.7

prism.
BIC(M12
)=

686885.1

BIC(Mrev.
12 ) =

461.9

BIC(MGP
12 ) =

165.8
(b)

Figure 7: Visualization kinematic model learned door microwave oven.
(a) configuration range. (b) kinematic graph. numbers edges indicate
BIC score corresponding model candidate.

lowest BIC score. Correspondingly, right image Fig. 8 shows
BIC scores edges garage door dataset, GP model gets selected.
typical articulated object consisting multiple parts cabinet drawers
depicted Fig. 9. experiment, track poses cabinet (x1 ),
two drawers (x2 x3 ). first 20 samples, opened closed lower
drawer. Accordingly, prismatic joint model Mprism.
selected (see top row images
23
Fig. 9). upper drawer gets opened closed, rigid model Mrigid

12
prism.
prism.
prism.
replaced prismatic model M12 , M23
replaced M13 , resulting
kinematic tree EG = {(1, 2), (1, 3)}. Note required articulate drawers
one other. done illustration purposes.
501

fiSturm, Stachniss, & Burgard

building

garage door

x1

x2

rigid
BIC(M12 ) =

9893.4

prism.
BIC(M12
)=

5450.8

BIC(Mrev.
12 ) =

5870.7

BIC(MGP
12 ) =

620.2

(a)

(b)

Figure 8: Visualization kinematic model learned garage door. (a) 10 uniformly
sampled configurations. (b) kinematic graph.

5.1.3 Multi-Dimensional Configuration Spaces
illustrate approach able find models higher-dimensional configuration spaces > 1, let robot monitor table moved floor.
robot equipped monocular camera tracking Artoolkit marker attached
table. experiment, table moved never turned, lifted, tilted
therefore configuration space table two dimensions. Fig. 10 shows four
snapshots learning. Initially, table perfectly explained rigid object
room (top left). Then, prismatic joint model best explains data since table
moved one direction (top right). moving sideways, best model 1-DOF
Gaussian process model follows simple curved trajectory (bottom left). Finally,
full planar movement explained 2-DOF Gaussian process model (bottom right),
model movements lie 2D surfaces.
5.1.4 Additional Examples
ran similar experiments large set different articulated objects typically
occur domestic environments, including office cabinets, office doors, desk lamps, windows,
kitchen cabinets, fridges dishwashers garage door. Four examples given
Fig. 11. Videos (and other) experiments available homepage
corresponding author3 . videos show original movie well overlay
inferred kinematic model. experiments, attached checkerboards
different sizes movable parts, used consumer-grade video camera
low-cost laptop webcam acquiring image data. software visualizes
learned articulation models 3D back-projects onto image allow easy
visual inspection. detected poses checkerboards visualized red/green/blue
coordinate axes systems, selected links indicated using colored
connection. software displays configuration range generating poses
3. http://www.informatik.uni-freiburg.de/ sturm

502

fiA Probabilistic Framework Learning Kinematic Models Articulated Objects

cabinet

drawer 1

drawer 2

x1

x2

x3

rigid
BIC(Mij ) =
prism.
BIC(Mij
)=

189.3

997.2

993.0

63.9

61.7

62.6

BIC(Mrev. ) =

41.8

58.1

59.3

BIC(MGP
ij ) =

277.2

279.0

278.4

ij

(a)

(b)
cabinet

drawer 1

drawer 2

x1

x2

x3

rigid
BIC(Mij ) =
prism.

793.7

2892.2

3660.1

)=

88.8

86.9

84.7

BIC(Mrev. ) =

84.9

84.4

82.4

BIC(MGP
ij ) =

331.6

331.0

331.8

BIC(Mij

ij

(c)

(d)

Figure 9: Incrementally estimating model two drawers cabinet. (a) Initially,
lower drawer opened closed. (b) Corresponding kinematic graph. (c)
drawers opened closed independently. (d) Corresponding kinematic
graph.

estimated range. revolute joints, additionally indicates rotation axis using line
surrounding circle.
visual inspection objects Fig. 11, one see accurate model
estimation works conjunction marker-based tracking: motion drawers
cabinet well matched, rotation axes door hinge door handle
estimated close true position. upper part garage door moves
slider ceiling, lower part connected via revolute joint. resulting
motion clearly neither revolute prismatic, consequently approach selects
GP model. desk lamp consists two-bar links keep light housing always
upright (or, loosely speaking, rigid orientation), move positional domain along
circle. link type well explained GP model. existence
objects shows necessity supply domestic service robot general, nonparametric model deal wide variety different articulated objects.
noted majority articulated objects domestic environments consist
revolute prismatic joints robustly estimated using parametrized
models. motivates approach enables robot fit parametric

503

fiSturm, Stachniss, & Burgard

Figure 10: Learning model table moving ground plane. arrows indicate
recovered manifold configuration space.

nonparametric models time compare terms posterior likelihoods
consistent model selection framework.
Another interesting object car, doors windows tree- chainlike elements. Fig. 12, observed motion drivers door window.
first observations, approach estimates structure rigid, links
door window parallel car body. open window
half, approach attaches drivers window door, selects prismatic model.
Surprisingly us, open window (and thus acquire observations),
approach switches revolute model drivers window associated large
radius (r = 1.9 m). looking carefully data car, confirm
window indeed moves circular path, due curved window glass. Finally,
driver closes door, revolute model link car body
door selected.

504

fiA Probabilistic Framework Learning Kinematic Models Articulated Objects

x1
prismatic
x2

x1
revolute

prismatic
x2
x3

x3
revolute
(a) Office cabinet

(b) Room door

x2
GP

x2
x1

x3

GP

GP
x1

(c) Garage door

(d) Desk lamp

Figure 11: Visualization learned articulation models several domestic
objects. (a) cabinet two drawers, (b) room door including handle, (c)
garage door, (d) desk lamp two-bar links.

conclude results, approach able estimate kinematic
parameters kinematic structure different household objects high accuracy, i.e.,
prediction error learned models around 0.001 1 objects tracked
motion capture studio, around 0.003 3 checkerboard markers.
accuracy, learned models well suited mobile manipulation tasks.
5.2 Evaluation Marker-Less Model Estimation
goal next set experiments show kinematic models learned
certain environments without requiring artificial markers. particular, focus
kitchen environments rectangular cabinet fronts, employ pose detector
described previously (Sturm et al., 2010).
505

fiSturm, Stachniss, & Burgard

x3
x3
rigid
x1

x1

rigid

prismatic
rigid

x2

x2

(a)

(b)

x3
x3
x1

rigid

revolute

x1

revolute
revolute

x2
(c)

x2
(d)

Figure 12: Snapshots learning process incrementally observing motion
car door window camera images. Due shape glass
drivers window actually moves circular arc radius r = 1.9 m. Images
taken (a) 10, (b) 40, (c) 60, (d) 140 pose observations.

first experiment carried motion capture studio, evaluated detector
found detected cabinet drawer 75% images
distance 2.3 camera.
evaluated robustness articulation model learner detailed logfiles
door (0.395 0.58 m) drawer (0.395 0.125 m) typical kitchen interior.
repeatedly opened closed objects approximately 1 distance robot;
total, recorded 1,023 5,202 images. downsampled logs stochastically
100 images, ran pose estimation, model estimation, structure selection 50
times. outcome model selection process, accuracy selected model
depicted Fig. 14 door dataset.

506

fiA Probabilistic Framework Learning Kinematic Models Articulated Objects

(a)

(b)

Figure 13: Articulation model learned observing drawer (a) door (b).

p(model)

1

rigid
prismatic
revolute

0.75
0.5
0.25

error position
error orientation

0.05
0.04
0.03
0.02
0.01
0

10
8
6
4
2
0
10

20
30
40
number observations (door)

50

orientation error [deg]

position error [m]

0

60

Figure 14: Evaluation articulation models learned cabinet door, averaged
50 runs. plot top shows probability articulation model templates, plot bottom shows prediction error standard deviation
learned model.

datasets, found roughly first 10 observations, mostly rigid
model selected, substantial motion drawer door yet detected.
observations added track, higher error (rigid) model

507

fiSturm, Stachniss, & Burgard

Figure 15: Images showing robot Cody Georgia Tech operating five mechanisms
using approach described Section 4.3. objects (from left right):
cabinet door opens right, cabinet door opens left,
dishwasher, drawer, sliding cabinet door. Images courtesy Jain
Kemp.

predictions observations becomes. result, prismatic revolute models
selected frequently. 30 observations, model selection converged
cases true model.
models learned drawer datasets predictive accuracy approximately
0.01 7 ; 0.01 3.5 door dataset. Although predictive accuracy
learned models slightly lower comparison marker-based tracking systems
due higher noise tracking system, learned models accuracy
usable mobile manipulator operating objects.
5.3 Operating Articulated Objects Mobile Manipulators
section, show real robots utilize approach learn kinematic
models objects active manipulation. Here, control arm done using
equilibrium point control described Section 4.3, result collaboration
Jain Kemp (Sturm et al., 2010). experiments conducted two different
platforms, robot Cody PR2 robot.

508

fiA Probabilistic Framework Learning Kinematic Models Articulated Objects

5.3.1 Task Performance
evaluated performance approach five different mechanisms using robot
Cody: cabinet door opens right, cabinet door opens left,
dishwasher, drawer, sliding cabinet door. performed eight trials mechanism. robot started approximately 1 location handle. manually
specified grasp location selecting point 3D point cloud recorded robot,
orientation hook end effector, initial pulling direction. task
robot navigate mechanism operate it, learning articulation
model using methods described Section 3.1. deemed trial successful
robot navigated mechanism opened angle greater 60
revolute mechanisms 0.3 prismatic mechanisms.
Fig. 15 shows robot pulled open five mechanisms one
respective trials. robot successfully opened 3 rotary mechanisms 21
24 trials 2 linear mechanisms 16 trials. robot able open doors
70 , estimate radii average error 0.02 m. Further,
robot pulled open drawer sliding cabinet repeatedly average 0.49 m.
Overall robot successful 37 40 trials (92.5%).
three failures due robot failing hook onto handle prior operating
mechanism, likely due odometry errors errors provided location
handle. experiments, observe model learning caused
errors. principle, however, hook could slip handle wrong model
estimated.
5.3.2 Model Fitting Selection End-Effector Trajectories
Fig. 1 Fig. 16 show examples PR2 robot operating several articulated objects
common domestic environments, i.e., fridge, drawer, dishwasher door, tray
dishwasher, valve heater. experiments, use feedback control
described Section 4.3 tele-operated manipulator manually. First, recorded
set trajectories guiding manipulator operate various articulated objects.
execution, played trajectories back using different implementation equilibrium
point control available PR2 platform, recorded end-effector trajectories
robot. used trajectories subsequently learn kinematic models. Finally,
visualized models superimposing images taken calibrated wide-angle
camera mounted head robot, see Fig. 16. experiments, approach
always selected correct model candidate. One easily verify visual inspection
approach estimates kinematic properties (like rotation axis prismatic
axis) accurately.
experiments show robots successfully learn accurate kinematic models
articulated objects end-effector trajectories using approach. PR2,
achieved average predictive accuracy learned models 0.002 (in terms
residual error observed trajectory respect learned model),
sufficient using models mobile manipulation tasks domestic settings.

509

fiSturm, Stachniss, & Burgard

revolute

(a) Cabinet door

revolute

(b) Dishwasher door

prismatic

(c) Dishwasher tray

revolute

(d) Valve heater

Figure 16: PR2 robot learns kinematic models different pieces furniture
actuating using manipulator. Objects top bottom: fridge,
cabinet door, drawer, dishwasher door, dishwasher tray, water tap, valve
heater.

510

fi0.4

0.4

0.2

0.2

0

0

-0.2

-0.2

-0.4

-0.4
-0.4

-0.2
x [m]

0

-0.4

-0.2
x [m]

z [m]

[m]

Probabilistic Framework Learning Kinematic Models Articulated Objects

0

Figure 17: plots show observed trajectories 5 recovered models
minimizing overall BIC using approach. Trajectories assigned
model depicted color.

prediction error [m]

without learned prior models
learned prior models
0.3

0.2

0.1

0
0

0.1

0.2
0.3
0.4
0.5
0.6
0.7
0.8
ratio observed trajectory vs. full trajectory

0.9

1

Figure 18: graph shows average prediction error (line) standard deviation
(shaded area) learned model full trajectory without prior
information.

511

fiSturm, Stachniss, & Burgard

5.4 Improving Model Estimation Based Experience
experiments described previous section, learned kinematic models
kitchen furniture independent other. using approach described
Section 3.1 data Cody, exploit correlation models different
objects searching set model clusters maximize posterior probability.
Fig. 17 shows result experiment. colors indicate cluster
trajectories assigned to. approach correctly recognized robot
operated 5 different mechanisms assigned 37 different trajectories correctly
corresponding models.
measured average prediction error without learning prior models (see
Fig. 18), using leave-one-out cross-validation randomized ordering trajectories.
found prior models reduce prediction error considerably, especially
new trajectory partially observed. 30% 70% new trajectory
observed, prediction error reduced factor three more. result,
robot comes substantially accurate model early utilize
knowledge better control manipulator.
Throughout experiments Cody, used fixed noise term z,pos = 0.05m.
accounts inaccuracies observation end effector position, due variations
hooking position, small errors kinematic forward model robot base
localization. found repeated experiments range 0.02m z,pos
0.20m, results similar previous results obtained z,pos = 0.05m.
significantly smaller values z,pos models created, example due small
variations grasping point inaccuracies. much larger values, observations
different mechanisms clustered joint model. Thus, results insensitive
moderate variations observation noise z,pos .
experiment illustrates approach enables mobile robot learn
experience exploit prior information manipulating new objects. experience
increases prediction accuracy factor approximately three.
5.5 Detecting Kinematic Loops
final set experiments, evaluated approach objects containing kinematic
loops. goal experiments show approach estimate correctly
kinematic connectivity, well correct number DOFs.
purpose, used first four segments yardstick. results
open kinematic chain consisting three revolute joints (see top left image Fig. 19).
object three DOFs, revolute joints independent other. second
experiment, taped fifth segment yardstick together first one.
creates kinematic loop, see top right image Fig. 19: resulting object consists
four revolute joints single DOF. resulting mechanism effectively
single DOF. articulated objects manually, recorded object pose datasets
|Dy | = 200 samples using checkerboard markers.
second third row Fig. 19 visualize learned kinematic model
open closed kinematic model, respectively, fourth row shows
kinematic structure learned model. figure, seen ap512

fiA Probabilistic Framework Learning Kinematic Models Articulated Objects

proach correctly recognizes open kinematic chain consists three revolute links
rev.
rev.
(Mrev.
12 , M23 , M34 ), three DOFs q = (q1 , q2 , q3 ) total. closed kinematic
rev.
rev.
rev.
chain, approach selects four revolute links (Mrev.
12 , M23 , M34 , M14 ), correctly
infers object exhibits single DOF q = (q1 ).
analyzed progression model selection training data incorporated. left plot Fig. 20 shows DOFs learned kinematic model
open kinematic chain. Note opened yardstick segment segment, therefore
number DOFs increases step-wise zero three. right plot shows estimated number DOFs closed kinematic chain: approach correctly estimates
number DOFs one already first observations.
detail, analyzed evolution BIC scores runtime
different approaches closed kinematic chain Fig. 21. plot top shows
evolution BIC scores possible kinematic structures. colorized
curves corresponding spanning tree solution (solid red), heuristic search (dashed
blue) global optimum (dotted green). spanning tree solution use
starting point heuristic search average 35.2% worse terms BIC
optimal solution. contrast, BIC heuristic search 4.3% worse,
equals optimal solution 57.5% cases. time complexity computing
spanning tree independent number training samples, see bottom plot Fig. 21.
contrast that, evaluation kinematic graphs requires kinematic structure
consideration evaluation whole object poses, thus linear number
training samples n. heuristic search evaluates kinematic graphs along trace
structure space. result, yardstick object p = 4 object parts,
heuristic search requires average 82.6% less time full evaluation.
conducted similar experiments objects containing kinematic loops
reduced DOFs. Two examples depicted first row Fig. 22: artificial object
consisting four parts single revolute joint, common domestic step ladder
consisting two revolute joints single, shared DOF. cases, approach
able correctly estimate kinematic parameters correct number
DOFs.
experiments, shown approach able detect closed
chains articulated objects, correctly estimates correct number DOFs. loop
closures (or reduced DOFs) reduce configuration space object significantly,
valuable information mobile manipulator, example reasoning possible
configurations object.
5.5.1 Evaluation Model Selection Robustness
Finally, investigated influence choice observation noise variable z
model selection process artificial data. analysis, sampled noisy observations
true = 0.05. resulting
revolute model true observation noise z,pos
observation sequence, fitted candidate models, selected best model.
repeated experiment 10 independent runs evaluated mean standard
deviation. number training samples n kept fixed, higher noise
assumption favors selection simpler models, vice versa. Fig. 23 illustrates

513

fiSturm, Stachniss, & Burgard

x3
revolute

x1

revolute

revolute

x2

x4
revolute
x2

x1
revolute

q1 q2 q3 . . .
x1
Mrev.
12

x4

x2

x3

revolute

revolute
x3

q1 q2 q3 . . .
x4

x1

Mrev.
Mrev.
23
34

Mrev.
12

x2

x3

x4

Mrev.
Mrev.
Mrev.
23
34
14

Figure 19: Open kinematic chain three DOFs (left column) closed kinematic chain
single DOF (right column). First row: images objects. Second
third row: learned kinematic models two different perspectives. Fourth
row: learned graphical model, showing connectivity DOFs
learned kinematic model. selected kinematic model visualized bold
edges, DOFs given boldly type-set configuration variables.

514

fiA Probabilistic Framework Learning Kinematic Models Articulated Objects

open kinematic chain

closed kinematic chain
DOFs

DOFs

4

4

3

3

2

2

1

1

0

0

50

100

150

0

200

0

50

training samples n

100

150

200

training samples n

Figure 20: Estimated number DOFs open closed kinematic chain object
(see Fig. 19). Left: open kinematic chain. Right: closed kinematic chain.

spanning tree

search heuristic

global optimum

BIC

10,000
0

time [s]

10,000
200
150
100
50
0

0

20

40

60

80

100

120

140

160

180

200

training samples n

Figure 21: Top: BIC scores possible kinematic structures closed kinematic
chain, depicted top right image Fig. 20. Bottom: Computation
times function number training samples.

515

fiSturm, Stachniss, & Burgard

x3
x2
rigid
x1

revolute
x4

rigid
revolute

revolute

x2

x3
x1

q1 q2 q3 . . .
x1

x2

x3

q1 q2 . . .
x4

x1

x2

x3

rigid

Mrot.
12


Mrigid
23 24

Mrot.
Mrot.
13
12

Figure 22: articulated object consisting single revolute joint (left), stepladder
consisting two revolute joints (right).

516

fiA Probabilistic Framework Learning Kinematic Models Articulated Objects

2,000

BIC

1,500
1,000

500
0

Gaussian process model
revolute model
prismatic model
rigid model

selected model
0.0001

0.001

0.01

0.1

1.0

observation noise z,position

Figure 23: BIC score function assumed observation noise. low noise assumption favors selection complex models, vice versa.

dependency: n = 50 assumed noise level z,pos 0.02, GP model
selected. 0.02 z,pos 0.2, revolute model yields best trade-off
model complexity data likelihood. 0.2 z,pos , rigid model best explains
observations noise level magnitudes hides underlying model.
experiment, demonstrated model selection procedure robust
large intervals observation noise assumption, i.e., even though true observation
true = 0.05, approach selected revolute model noise
noise set z,pos
assumption 0.02 z,pos 0.2, thus robust whole magnitude.
performed experiments synthetic data verify estimators robust
normally distributed noise MLESAC-based estimators additionally
robust uniformly distributed outliers.
5.6 Open-Source Availability
source code, documentation, code samples, tutorials fully available opensource, licensed BSD. provide step-by-step guide repeat experiments using consumer-grade laptop webcam4 .

6. Related Work
paper, combined several techniques come different fields, i.e.,
system identification fitting kinematic models, information theory model comparison
structure selection, computer vision estimating tracking objects, service robotics
control actually manipulating articulated objects mobile manipulators.
4. http://www.ros.org/wiki/articulation

517

fiSturm, Stachniss, & Burgard

following, review related approaches, contrast approach, highlight
contributions.
6.1 Kinematic Model Fitting
Calibrating kinematic models manipulation robots sensor data long history
system identification. good overview existing techniques found work
Hollerbach, Khalil, Gautier (2008). He, Zhao, Yang, Yang (2010) recently
analyzed identifiability parameters serial-chain manipulators, proposed
generic approach calibration. Pradeep, Konolige, Berger (2010) recently presented
system implementation sensor-actuator calibration complex service robot consisting
two arms, laser scanner several cameras. works, kinematic
model specified advance, typically expected initial parameter set
available. taking multiple pose observations robot different configurations,
error prediction observation computed, finally parameter
vector optimized using non-linear, iterative least-squares methods.
case, neither kinematic model initial parameter set available,
needs estimated observations alone. particular observations
disturbed noise outliers, sample consensus methods proven provide
robust estimates (Fischler & Bolles, 1981; Torr & Zisserman, 2000; Nister, 2005; Rusu,
Marton, Blodow, Dolha, & Beetz, 2008). model estimators, use MLESAC
first described Torr Zisserman (2000) contrast least-squares fitting
robust reasonable amounts outliers training data.
6.2 Kinematic Structure Selection
Estimating kinematic structure observations studied intensively before, however, without subsequently using models robotic manipulation (Taycher, Fisher,
& Darrell, 2002; Kirk, OBrien, & Forsyth, 2004; Yan & Pollefeys, 2006; Ross, Tarlow, &
Zemel, 2008; Pekelny & Gotsman, 2008). Taycher et al. (2002) address task estimating underlying topology observed articulated body. focus lies recovering
topology object rather learning generative model. Also, compared
work, approach handle links complex link models, e.g., multiple
DOFs non-parametric models. Kirk et al. (2004) extract human skeletal topologies using 3D markers motion capture system, however assuming joints revolute.
Yan Pollefeys (2006) present approach learning structure articulated
object feature trajectories affine projections. researchers addressed
problem identifying different object parts image data. Ross et al. (2008) use
multi-body structure motion extract links image sequence fit
articulated model links using maximum likelihood learning.
exist several approaches tracking articulated objects key motivation
often a-priori model assumed. Krainin, Henry, Ren, Fox (2010), example,
described recently approach tracking articulated objects manipulator using
depth camera texture projector. However, require geometric model
manipulator. Kragic, Petersson, Christensen (2002) describe integrated navigation
system mobile robots includes vision-based system detection door
518

fiA Probabilistic Framework Learning Kinematic Models Articulated Objects

handles enables robot successfully open doors. Anguelov, Koller, Parker,
Thrun (2004) model doors line segments rotate around hinge. EM used
find model parameters 2D range data images. Nieuwenhuisen, Stuckler,
Behnke (2010) describe approach mobile robot increases localization
accuracy learning positions doors.
Although learning structure general Bayesian networks proven
NP-complete (Chickering, 1996), many approximate methods proposed
solve structure search problem efficiently. methods include greedy search, iterated hill climbing, genetic algorithms ant colony optimization (Chickering, 2002; Daly
& Shen, 2009). cases, size search space reduced significantly
evaluating number statistical independence tests (Margaritis & Thrun, 1999; Bromberg,
Margaritis, & Honavar, 2009). paper, consider special Bayesian networks representing kinematic structures. allows us exploit mutual independence edges
kinematic trees efficiently recovering kinematic structure. closed kinematic
chains, use greedy search heuristic similar work Chickering (2002).
Estimating structure models requires trade data fit model
complexity. corresponds Bayesian model selection problem, described
MacKay (2003). approach problem work using Bayesian Information
Criterion (BIC) introduced Schwarz (1978). BIC provides method selecting
alternate model hypotheses, based data likelihood model complexity.
paper, use BIC select kinematic models individual links
well multi-part articulated objects.
6.3 Pose Estimation
Many approaches estimating pose objects sensory data proposed
past, solving general problem still ongoing research effort. Marker-based
approaches using active passive markers advantage easy use
providing full 3D pose information, require artificial markers attached upon
object parts interest. Early work area articulated object tracking presented
Lowe (1991) assumption object model (and good initialization)
known. Nieuwenhuisen et al. (2010) use 2D laser range finder detecting doors
office environment storing map. Tilting lasers line stripe systems
provide dense 3D point clouds used localizing doors door handles,
cannot deal moving objects (Rusu, Meeussen, Chitta, & Beetz, 2009; Quigley,
Batra, Gould, Klingbeil, Le, Wellman, & Ng, 2009). Camera-based approaches provide
higher frame rates. good survey state-of-the-art camera-based pose estimation
techniques found work Lepetit Fua (2005). context, work
Murillo, Kosecka, Guerrero, Sagues (2008) Andreopoulos Tsotsos (2008)
visual door detection pose estimation particular relevance. Stereo systems
employ matching algorithms produce dense results provide 3D point clouds video
frame rates, suffer occasional dropouts areas low texture illumination
(Konolige, 1997; Brox, Rosenhahn, Gall, & Cremers, 2010; Wedel, Rabe, Vaudrey, Brox,
Franke, & Cremers, 2008). overcome active camera systems add texture

519

fiSturm, Stachniss, & Burgard

scene using projector LED. Two examples systems described
Konolige (2010) Fox Ren (2010).
work, use several different approaches estimating pose articulated
object showing approach specific specific data source. particular,
use marker-based pose estimation monocular camera, marker-less pose estimation
stereo data, proprioceptive tracking using robots joint encoders.
6.4 Operating Articulated Objects
Several researchers addressed problem operating articulated objects robotic
manipulators. large number techniques focused handling doors drawers (Klingbeil et al., 2009; Kragic et al., 2002; Meeussen et al., 2010; Petrovskaya & Ng,
2007; Parlitz, Hagele, Kleint, Seifertt, & Dautenhahn, 2008; Niemeyer & Slotine, 1997;
Andreopoulos & Tsotsos, 2008; Rusu et al., 2009; Chitta, Cohen, & Likhachev, 2010).
majority approaches, however, assumes implicit kinematic model articulated object. Meeussen et al. (2010) describe integrated navigation system mobile
robots including vision- laser-based detection doors door handles enables
robot successfully open doors using compliant arm. Diankov, Srinivasa, Ferguson,
Kuffner (2008) formulate door drawer operation kinematically constrained
planning problem propose use caging grasps enlarge configuration space,
demonstrate integrated system performing various fetch-and-carry tasks
(Srinivasa, Ferguson, Helfrich, Berenson, Romea, Diankov, Gallagher, Hollinger, Kuffner,
& Vandeweghe, 2010). Wieland et al. (2009) combine force visual feedback reduce
interaction forces opening kitchen cabinets drawers. contrast work,
approaches make strong assumptions articulated objects, deal
problem inferring kinematic structure. Therefore, neither deal unknown objects, improve performance learning. Katz Brock (2008)
enabled robot first interact planar kinematic object table order
visually learn kinematic model, manipulate object using model
achieve goal state. contrast work, approach assumes planar objects
learns 2D models. Jain Kemp (2009b, 2010) recently presented approach
enabled robot estimate radius location axis rotary joints move
plane parallel ground, opening novel doors drawers using equilibrium
point control. Recently, combined (in collaboration Jain Kemp) model
learning approach equilibrium point controller (Sturm et al., 2010). enabled
robot operate larger class articulated objects, i.e., objects non-vertical
rotation axes.

7. Conclusion
paper, presented novel approach learning kinematic models articulated
objects. approach infers connectivity rigid parts constitute object
including articulation models individual links. model links, approach
considers both, parametrized well parameter-free representations. extensive studies
synthetic real data, evaluated behavior model estimation, model
selection, structure discovery. shown approach applicable
520

fiA Probabilistic Framework Learning Kinematic Models Articulated Objects

wide range articulated objects, used conjunction variety
different sensor modalities. approach enables mobile manipulators operate unknown
articulated objects, learn models, improve time.
Despite promising results presented paper, several open research
questions remain future investigation. current approach, learn kinematic models static pose observations. would interesting include velocities
accelerations object body parts. would allow robot learn dynamic
parameters well enable plan time-optimal motion trajectories. dynamical
model would enable robot accurately execute motions higher speeds. Furthermore,
robot measure forces torques actuating object could additionally
learn friction damping profiles include information learned model
well. robot could benefit information assess, example, whether door
drawer jammed.

8. Acknowledgments
authors gratefully acknowledge help Advait Jain Charlie Kemp Georgia
Tech, particular collaboration joint development online model estimation
control approach described Section 4.3, evaluating approach
mobile manipulation robot Cody described Section 5.3. Further, authors would
thank Vijay Pradeep Kurt Konolige Willow Garage inspired authors
work subject, contributed experiments motion capture device
reported Section 5.1. Additional thanks go Kurt Konolige joint development
marker-less perception algorithm stereo data outlined Section 4.2 well
evaluation presented Section 5.2. work partly supported European
Commission grant agreement numbers FP7-248258-First-MM, FP7-260026-TAPAS,
FP7-ICT-248873-RADHAR, DFG contract number SFB/TR-8.

References
Andreopoulos, A., & Tsotsos, J. K. (2008). Active vision door localization door
opening using playbot. Proc. Canadian Conf. Computer Robot Vision
(CRV), pp. 310 Washington, DC, USA.
Anguelov, D., Koller, D., Parker, E., & Thrun, S. (2004). Detecting modeling doors
mobile robots. Proc. IEEE Int. Conf. Robotics & Automation (ICRA),
pp. 37773784.
Bishop, C. (2007). Pattern Recognition Machine Learning (Information Science
Statistics). Springer.
Bradski, G., & Kaehler, A. (2008). Learning OpenCV: Computer Vision OpenCV
Library. OReilly Media, Inc.
Bromberg, F., Margaritis, D., & Honavar, V. (2009). Efficient markov network structure
discovery using independence tests. Journal Artificial Intelligence Research (JAIR),
35.
521

fiSturm, Stachniss, & Burgard

Brox, T., Rosenhahn, B., Gall, J., & Cremers, D. (2010). Combined region- motionbased 3D tracking rigid articulated objects. IEEE Transactions Pattern
Analysis Machine Intelligence, 32(2), 402415.
Chickering, D. M. (1996). Learning Bayesian networks NP-Complete. Fisher, D.,
& Lenz, H. (Eds.), Learning Data: Artificial Intelligence Statistics V, pp.
121130. Springer-Verlag.
Chickering, D. M. (2002). Learning equivalence classes bayesian-network structures.
Journal Machine Learning Research (JMLR), 2, 445498.
Chitta, S., Cohen, B., & Likhachev, M. (2010). Planning autonomous door opening
mobile manipulator. Proc. IEEE Int. Conf. Robotics & Automation
(ICRA) Anchorage, AK, USA.
Cormen, T. H., Leiserson, C. E., Rivest, R. L., & Stein, C. (2001). Introduction Algorithms. MIT Press.
Daly, R., & Shen, Q. (2009). Learning bayesian network equivalence classes ant colony
optimization. Journal Artificial Intelligence Research (JAIR), 35, 391447.
Dellaert, F. (2005). Square Root SAM. Proc. Robotics: Science Systems (RSS),
pp. 177184 Cambridge, MA, USA.
Diankov, R., Srinivasa, S., Ferguson, D., & Kuffner, J. (2008). Manipulation planning
caging grasps. Proc. IEEE-RAS Intl. Conf. Humanoid Robots (Humanoids)
Daejeon, Korea.
Featherstone, R., & Orin, D. (2008). Dynamics. Siciliano, B., & Khatib, O. (Eds.),
Handbook Robotics, pp. 3566. Springer, Secaucus, NJ, USA.
Fiala, M. (2005). Artag, fiducial marker system using digital techniques. Proc.
IEEE Conf. Computer Vision Pattern Recognition (CVPR).
Fischler, M., & Bolles, R. (1981). Random sample consensus: paradigm model fitting
application image analysis automated cartography. Commun. ACM., 24,
381395.
Fox, D., & Ren, X. (2010). Overview RGB-D cameras open research issues.
Proceedings Workshop Advanced Reasoning Depth Cameras Robotics:
Science Systems Conference (RSS) Zaragoza, Spain.
Frese, U. (2006). Treemap: o(logn) algorithm indoor simultaneous localization
mapping. Autonomous Robots, 21 (2), 103122.
Grisetti, G., Kummerle, R., Stachniss, C., Frese, U., & Hertzberg, C. (2010). Hierarchical
optimization manifolds online 2D 3D mapping. Proc. IEEE Int.
Conf. Robotics Automation (ICRA) Anchorage, AK, USA.
Grisetti, G., Stachniss, C., & Burgard, W. (2009). Non-linear constraint network optimization efficient map learning. Trans. Intell. Transport. Sys., 10 (3), 428439.
522

fiA Probabilistic Framework Learning Kinematic Models Articulated Objects

He, R., Zhao, Y., Yang, S., & Yang, S. (2010). Kinematic-parameter identification
serial-robot calibration based poe formula. IEEE Transactions Robotics, 26 (3),
411 423.
Hollerbach, J., Khalil, W., & Gautier, M. (2008). Model identification. Siciliano, B., &
Khatib, O. (Eds.), Handbook Robotics, pp. 321344. Springer, Secaucus, NJ, USA.
Jain, A., & Kemp, C. (2009a). Behavior-based door opening equilibrium point control. Proc. RSS Workshop Mobile Manipulation Human Environments
Seattle, WA, USA.
Jain, A., & Kemp, C. (2009b). Pulling open novel doors drawers equilibrium point
control. Proc. IEEE-RAS Intl. Conf. Humanoid Robots (Humanoids) Paris,
France.
Jain, A., & Kemp, C. (2010). Pulling open doors drawers: Coordinating omnidirectional base compliant arm equilibrium point control. Proc.
IEEE Int. Conf. Robotics & Automation (ICRA) Anchorage, AK, USA.
Katz, D., & Brock, O. (2008). Manipulating articulated objects interactive perception.
Proc. Robotics: Science Systems (RSS), pp. 272277 Pasadena, CA, USA.
Kirk, A., OBrien, J. F., & Forsyth, D. A. (2004). Skeletal parameter estimation
optical motion capture data. Proc. Int. Conf. Computer Graphics
Interactive Techniques (SIGGRAPH).
Klingbeil, E., Saxena, A., & Ng, A. (2009). Learning open new doors. Proc.
RSS Workshop Robot Manipulation Seattle, WA, USA.
Konolige, K. (1997). Small vision systems: hardware implementation. Proc.
Int. Symp. Robotics Research, pp. 111116.
Konolige, K. (2010). Projected texture stereo. Proc. IEEE Int. Conf. Robotics
& Automation (ICRA) Anchorage, AK, USA.
Kragic, D., Petersson, L., & Christensen, H. (2002). Visually guided manipulation tasks.
Robotics Autonomous Systems, 40 (2-3), 193 203.
Krainin, M., Henry, P., Ren, X., & Fox, D. (2010). Manipulator object tracking
hand model acquisition. Proc. IEEE Int. Conf. Robotics & Automation
(ICRA) Anchorage, AK, USA.
Lawrence, N. (2005). Probabilistic non-linear principal component analysis gaussian
process latent variable models. J. Mach. Learn. Res., 6, 17831816.
Lepetit, V., & Fua, P. (2005). Monocular model-based 3d tracking rigid objects. Foundations Trends Computer Graphics Vision, 1, 189.
Lowe, D. (1991). Fitting parameterized three-dimensional models images. IEEE Transactions Pattern Analysis Machine Intelligence, 13, 441450.
523

fiSturm, Stachniss, & Burgard

Lu, F., & Milios, E. (1997). Globally consistent range scan alignment environment
mapping. Autonomous Robots, 4, 333349.
MacKay, D. (2003). Information Theory, Inference, Learning Algorithms. Cambridge
University Press.
Margaritis, D., & Thrun, S. (1999). Bayesian network induction via local neighborhoods.
Proc. Conf. Neural Information Processing Systems (NIPS), pp. 505511.
MIT Press.
McClung, A., Zheng, Y., & Morrell, J. (2010). Contact feature extraction balancing
manipulation platform. Proc. IEEE Int. Conf. Robotics & Automation
(ICRA).
Meeussen, W., Wise, M., Glaser, S., Chitta, S., McGann, C., Patrick, M., Marder-Eppstein,
E., Muja, M., Eruhimov, V., Foote, T., Hsu, J., Rusu, R., Marthi, B., Bradski, G.,
Konolige, K., Gerkey, B., & Berger, E. (2010). Autonomous door opening plugging
personal robot. Proc. IEEE Int. Conf. Robotics & Automation
(ICRA) Anchorage, AK, USA.
Murillo, A. C., Kosecka, J., Guerrero, J. J., & Sagues, C. (2008). Visual door detection
integrating appearance shape cues. Robotics Autonomous Systems, 56(6),
pp. 512521.
Niemeyer, G., & Slotine, J.-J. (1997). simple strategy opening unknown door.
Proc. IEEE Int. Conf. Robotics & Automation (ICRA) Albuquerque, NM,
USA.
Nieuwenhuisen, M., Stuckler, J., & Behnke, S. (2010). Improving indoor navigation
autonomous robots explicit representation doors. Proc. IEEE
Int. Conf. Robotics & Automation (ICRA) Anchorage, AK, USA.
Nister, D. (2005). Preemptive ransac live structure motion estimation. Mach. Vision
Appl., 16 (5), 321329.
Parlitz, C., Hagele, M., Kleint, P., Seifertt, J., & Dautenhahn, K. (2008). Care-o-bot 3
- rationale human-robot interaction design. Proc. Int. Symposium
Robotics (ISR) Seoul, Korea.
Pekelny, Y., & Gotsman, C. (2008). Articulated object reconstruction markerless motion capture depth video. Computer Graphics Forum, 27 (2), 399408.
Petrovskaya, A., & Ng, A. (2007). Probabilistic mobile manipulation dynamic environments, application opening doors. Proc. Int. Conf. Artificial
Intelligence (IJCAI) Hyderabad, India.
Pradeep, V., Konolige, K., & Berger, E. (2010). Calibrating multi-arm multi-sensor robot:
bundle adjustment approach. Int. Symp. Experimental Robotics (ISER) New
Delhi, India.
524

fiA Probabilistic Framework Learning Kinematic Models Articulated Objects

Quigley, M., Batra, S., Gould, S., Klingbeil, E., Le, Q., Wellman, A., & Ng, A. (2009).
High-accuracy 3D sensing mobile manipulation: Improving object detection
door opening. Proc. IEEE Int. Conf. Robotics & Automation (ICRA)
Kobe, Japan.
Rasmussen, C., & Williams, C. (2006). Gaussian Processes Machine Learning.
MIT Press, Cambridge, MA.
Ross, D., Tarlow, D., & Zemel, R. (2008). Unsupervised learning skeletons motion.
Proc. European Conf. Computer Vision (ECCV) Marseille, France.
Roweis, S., & Saul, L. (2000). Nonlinear dimensionality reduction locally linear embedding. Science, 290 (5500), 23232326.
Rusu, R. B., Meeussen, W., Chitta, S., & Beetz, M. (2009). Laser-based perception door
handle identification. Proc. Int. Conf. Advanced Robotics (ICAR)
Munich, Germany.
Rusu, R. B., Marton, Z. C., Blodow, N., Dolha, M., & Beetz, M. (2008). Towards 3D point
cloud based object maps household environments. Robot. Auton. Syst., 56 (11),
927941.
Schwarz, G. (1978). Estimating dimension model. Annals Statistics, 6 (2).
Sentis, L., Park, J., & Khatib, O. (2010). Compliant control multi-contact center
mass behaviors humanoid robots. IEEE Trans. Robotics, 26 (3), 483501.
Srinivasa, S., Ferguson, D., Helfrich, C., Berenson, D., Romea, A. C., Diankov, R., Gallagher, G., Hollinger, G., Kuffner, J., & Vandeweghe, J. M. (2010). HERB: home
exploring robotic butler. Autonomous Robots, 28 (1), 520.
Sturm, J., Konolige, K., Stachniss, C., & Burgard, W. (2010). Vision-based detection
learning articulation models cabinet doors drawers household environments.
Proc. IEEE Int. Conf. Robotics & Automation (ICRA) Anchorage, AK,
USA.
Sturm, J., Pradeep, V., Stachniss, C., Plagemann, C., Konolige, K., & Burgard, W. (2009).
Learning kinematic models articulated objects. Proc. Int. Joint Conf.
Artificial Intelligence (IJCAI) Pasadena, CA, USA.
Sturm, J., Jain, A., Stachniss, C., Kemp, C., & Burgard, W. (2010). Operating articulated objects based experience. Proc. IEEE International Conference
Intelligent Robot Systems (IROS) Taipei, Taiwan.
Taycher, L., Fisher, J., & Darrell, T. (2002). Recovering articulated model topology
observed rigid motion. Proc. Conf. Neural Information Processing Systems
(NIPS) Vancouver, Canada.
Tenenbaum, J., de Silva, V., & Langford, J. (2000). global geometric framework
nonlinear dimensionality reduction.. Science, 290 (5500), 23192323.
525

fiSturm, Stachniss, & Burgard

Torr, P. H. S., & Zisserman, A. (2000). Mlesac: new robust estimator application
estimating image geometry. Computer Vision Image Understanding, 78, 2000.
Wedel, A., Rabe, C., Vaudrey, T., Brox, T., Franke, U., & Cremers, D. (2008). Efficient
dense scene flow sparse dense stereo data. Proc. European Conf.
Computer Vision (ECCV) Marseille, France.
Wieland, S., Gonzalez-Aguirre, D., Vahrenkamp, N., Asfour, T., & Dillmann, R. (2009).
Combining force visual feedback physical interaction tasks humanoid robots.
Proc. IEEE-RAS Intl. Conf. Humanoid Robots (Humanoids) Paris, France.
Yan, J., & Pollefeys, M. (2006). Automatic kinematic chain building feature trajectories articulated objects. Proc. IEEE Conf. Computer Vision
Pattern Recognition (CVPR) Washington, DC, USA.

526


