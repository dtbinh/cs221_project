journal artificial intelligence

submitted published

large scale election campaigns
combinatorial shift bribery
robert bredereck

robert bredereck tu berlin de

tu berlin
berlin germany

piotr faliszewski

faliszew agh edu pl

agh university science technology
krakow poland

rolf niedermeier
nimrod talmon

rolf niedermeier tu berlin de
nimrodtalmon gmail com

tu berlin
berlin germany

abstract
study complexity combinatorial variant shift bribery
elections standard shift bribery given election
voter preference order set candidates outside agent
briber pay voter rank bribers favorite candidate given number
positions higher goal ensure victory bribers preferred candidate
combinatorial variant introduced settings
possible affect position preferred candidate multiple votes positively
negatively single bribery action variant particularly
interesting context large scale campaign management
technical side modeled bribery general combinatorial variant highly intractable specifically np hard hard
parameterized sense hard approximate nevertheless provide parameterized
approximation natural restricted cases

introduction
study computational complexity election campaign management case
campaign actions airing tv advertisement launching web campaign organizing meetings voters may large scale effects affect multiple
voters interested settings actions positive effects example voters may choose rank promoted candidate higher
arguments presented given advertisement appealing well negative ones
example voters advertisement aggressive thus
setting two major issues faced campaign manager choosing actions
c

ai access foundation rights reserved

fibredereck faliszewski niedermeier talmon

positively affect many voters possible b balancing negative effects
campaigning actions example concentrating negative effects voters
disregard promoted candidate anyway
falls within field computational social choice subarea multiagent
systems use standard election model given set c candidates
collection v voters represented preference order ranking
candidates preferred one least preferred one assume
know preferences voters perfect knowledge impossible
practice assumption convenient simplification fact may
approximate information preelection polls sources
consider two voting rules plurality rule pick candidate
ranked first voters borda rule candidate c gets
voter v many points candidates v prefers c pick
candidate points rules chosen plurality rule
widespread rule practice borda rule well studied
context campaign management
within computational social choice term campaign management introduced
elkind faliszewski slinko elkind faliszewski alternative name
bribery family introduced faliszewski hemaspaandra hemaspaandra cases one focuses modeling actions available election
campaigns money spent campaign manager voters change
votes study campaign management shift bribery
elkind et al elkind faliszewski bredereck chen faliszewski
nichterlein niedermeier bredereck faliszewski niedermeier talmon
shift bribery candidate p want win voter v
price v voter willing shift p forward positions preference
order ask lowest cost ensuring p winner see section
references campaign management
shift bribery one major drawback model campaign management incapable capturing large scale effects campaign actions particular
one puts forward tv spot promoting given candidate voters react
positively rank candidate higher oblivious react
negatively ranking candidate lower shift bribery cannot model correlated
effects introduce study combinatorial shift bribery allowing campaign actions effects positive negative whole groups
voters
interested understanding realistic model campaign management
affects complexity indeed shift bribery computationally
well behaved example plurality rule solvable polynomial time
borda rule np complete elkind et al polynomial time
approximation elkind et al elkind faliszewski
fixed parameter fpt exact capable finding solutions arbitrarily
close optimal ones bredereck et al work ask extent
course price necessarily reflect direct money transfer voter rather cost
convincing voter change mind



ficombinatorial shift bribery

retain good computational properties allow large scale effects
surprising positively negatively
combinatorial shift bribery becomes np complete w hard even
plurality rule even restrictive choice parameters even correlated
effects particular campaign actions limited two voters moreover
hardness imply good general approximation exist
allow negative effects campaign actions
spite still possible derive relatively good approximation
plurality rule borda rule provided
restrict effects campaign actions positive
involve voters involve groups consecutive voters respect
ordering voters might correspond example time
summarized table section generality
combinatorial nature natural obtain many hardness yet
extent strength surprising fact nontrivial landscape
tractable cases
related work
work builds top two main ideas first studying campaign management bribery second studying combinatorial variants election

study computational complexity bribery elections initiated
faliszewski et al continued number researchers faliszewski hemaspaandra hemaspaandra rothe b hazon lin kraus mattei goldsmith
klapper mattei pini rossi venable b elkind et al elkind
faliszewski realized formalism election bribery useful
point view election campaigns particular defined
swap bribery restricted variant shift bribery former possible given price swap two adjacent candidates given vote latter
allowed shift preferred candidate forward modeling
different flavors campaign management studied including example
possibility alter number approved ranked candidates baumeister faliszewski
lang rothe faliszewski reisch rothe schend schlotter faliszewski
elkind different positive applications bribery include example
margin victory goal briber prevent candidate winning possible low cost suggests election
could tampered cary magrino rivest shen wagner xia
reisch rothe schend
point view related works elkind et al elkind
faliszewski bredereck et al dorn schlotter
former ones study shift bribery generalize parameterized complexity
shift bribery studied bredereck et al shift bribery multiwinner


fibredereck faliszewski niedermeier talmon

elections studied bredereck et al whereas work dorn schlotter
pioneers use parameterized complexity analysis swap bribery
work largely inspired bulteau chen faliszewski niedermeier
talmon chen faliszewski niedermeier talmon introduced
studied combinatorial variants election control election control well studied
topic computational social choice initiated bartholdi tovey trick
studied numerous researchers point readers faliszewski hemaspaandra
hemaspaandra faliszewski rothe detailed account briefly put
control model attempts changing election changing structure standard types control include adding deleting partitioning candidates
voters control especially related adding deleting voters quite
relevant issues campaign management indeed section connection combinatorial shift bribery combinatorial control adding
voters bulteau et al
idea combinatorial shift bribery somewhat related lobbying
multiple referenda introduced christian fellows rosamond slinko
parameterized study provided bredereck chen hartung kratsch niedermeier
suchy woeginger b probabilistic variant studied parameterized
sense binkele raible erdelyi fernau goldsmith mattei rothe
number yes elections goal ensure election
majority voters vote yes single lobbying action convince one voter
vote yes elections combinatorial shift bribery single election
single action affect multiple voters whereas lobbying multiple
elections action affects one voter
stress use term combinatorial variants election
different one used well established line work regarding combinatorial
candidate spaces see lang xia works example boutilier brafman
hoos poole conitzer lang xia mattei et al b work use
term combinatorial refer combinations voters affected bribery
action
organization
providing preliminaries section give formal definition combinatorial shift bribery section section give overview
shed light connections combinatorial shift bribery
combinatorial control section section present
series strong hardness covering classes shift actions restrictive sets parameters example many already apply case two
candidates section develop several exact special cases combinatorial shift bribery section describe approximation
combinatorial shift bribery proofs available appendices
given proof relies ideas already presented proofs oras
case theorem proof particularly involved end conclusions
section


ficombinatorial shift bribery

preliminaries
section briefly describe model elections define two voting rules
study review basic concepts parameterized complexity
elections
election e c v consists set c c cm candidates collection
v v vn voters voter represented preference order
linear ranking candidates preferred one least preferred one
use voters preference orders interchangeably example c c c c
voter v may preference order v c c c indicate likes c best
c c clarity treat voters females candidates males
assume arbitrary fixed canonical order set candidates example one could order candidates lexicographically names


subset c candidates writing within preference order means listing

didates canonical order writing means listing reverse
order
voting rules
voting rule r function given election e c v outputs set r e c
tied election winners candidate c r e said r winner
election e consider two election rules plurality rule borda rule
assign points candidates output highest score plurality
rule candidate receives one point voter ranks first borda
rule candidate receives points voter prefers candidate exactly
ones
use nonunique winner model candidates selected given
voting rule viewed equally successful winners practice course one use
sort tie breaking rule resolve situation disregarding ties simplifies
analysis however interested reader consult papers effects tie breaking
complexity election e g obraztsova elkind obraztsova elkind
hazon
parameterized complexity
assume familiarity standard notions regarding complexity theory
briefly review notions regarding parameterized complexity theory downey fellows
flum grohe niedermeier
parameterized complexity theory measure complexity given
respect input size particular parameter typical
parameters election include number candidates number voters
solution size example number campaign actions one perform see
betzler bredereck chen niedermeier survey parameterized complexity
voting say parameterized fixed parameter tractable fpt
given input instance parameter k solves


fibredereck faliszewski niedermeier talmon

g k time g computable function length encoding
hierarchy hardness classes parameterized
two important levels formed classes w w convenient
way defining classes appropriate reduction notion complete
specifically say parameterized reduces parameterized
b two computable functions h h following properties
given instance parameter k h outputs fpt time e time g k
computable function g instance b parameter k h k
yes instance yes instance b words h
many one reduction b allowed run fpt time required
output instance whose parameter upper bounded function input instances
parameter
class w defined class parameterically reduce
clique w class parameterically reduce set
cover parameterized solution size
value h definitions
clique
input undirected graph g v g e g integer h
question set h h vertices edge
pair vertices h
set cover
input universe set x family subsets x integer h
question subset h subsets whose union gives x
sometimes consider special variants describe detail
within relevant proofs
parameterized contained class xp given
instance parameter k solves time g k g computable
function holds fpt w w xp point readers interested
details regarding parameterized complexity theory design parameterized
textbooks downey fellows flum grohe
niedermeier

combinatorial shift bribery
section first define combinatorial shift bribery full
generality describe simplify remainder
study
definition
let r voting rule definition r combinatorial shift bribery somewhat involved therefore first define necessary components given election
e c v preferred candidate p c goal ensure p r winner
election end number possible actions choose


ficombinatorial shift bribery

let c number candidates e let n v number
voters shift action f n dimensional vector possibly negative integers
f f f n r combinatorial shift bribery given family f
f f shift actions particular shift action possible campaigning
action airing tv spot organizing meeting voters components
given shift action measure effects action particular voters given
subset f f available shift actions define effect f voter vi n
p

e f fj f fj shift action fj j comes nonnegative
integer cost w fj application
voter vi n individual threshold function z z describing
shift actions affect voter require nondecreasing
let f collection shift actions applying shift actions f voter vi
n shifts preferred candidate p positions forward e f
b e f shift positions back e f
b e f
finally given nonnegative integer b budget pwe ask existence
collection f f available shift actions total cost fj f w fj b
applying p r winner given election case
say f successful consider following example
example consider election set candidates c b c p
collection voters v v v v p preferred candidate three
available shift actions unit cost e w f w f w f
election
v c b p
v b c p
v p b c

shift actions










f

f

f

threshold functions



use borda rule candidates b c p respectively points
easy see applying single shift action ensure ps victory however
applying shift actions f f f p winner total effect
two shift actions according threshold functions means p
shifted forward one position v v shifted back one position v
shifts modified election looks follows


fibredereck faliszewski niedermeier talmon

v
v
v

election
cpba
bapc
apbc

apply shift actions f f f candidate c
points candidates points thus b p tied winners
f indeed successful set shift actions

formally given voting rule r define r combinatorial shift bribery
follows
r combinatorial shift bribery
input election e c v c c cm set candidates
v v vn collection voters set f f f shift
actions costs w f w f threshold functions n nonnegative integer budget b one candidates designated preferred
candidate p
question subset f f shift actions total cost b
apply shift actions f candidate p r winner
resulting election
definition quite complicated captures important features campaigning example use threshold functions allows us model voters
unwilling change position preferred candidate beyond certain range irrespective strength campaign fact different shift actions different
costs fact particular actions example airing tv spots organizing
meetings may come different costs
relation standard shift bribery
necessary comment relation combinatorial shift bribery
non combinatorial variant shift bribery elkind et al elkind
faliszewski
non combinatorial variant shift bribery defined similarly
combinatorial one voters threshold functions instead
collection shift actions costs voter vi shift bribery price
function cost shifting preferred candidate forward positions vi
preference order forward shifts allowed require
functions nondecreasing formally following definition r
voting rule
r shift bribery
input election e c v c c cm set candidates v v vn collection voters collection n
shift bribery price functions nonnegative integer budget b one


ficombinatorial shift bribery

candidates designated preferred candidate p
question
vector sn natural numbers
pn
si b b voter vi shift p forward si positions
p r winner resulting election
intuitively seems r shift bribery simpler combinatorial
cousin making observation formal requires care
proposition let r voting rule holds r shift bribery many one reduces
r combinatorial shift bribery polynomial time
proof consider instance r shift bribery election e c v
c c cm v v vn collection shift bribery price functions
v vn budget b without loss generality take c preferred
candidate denote p form instance r combinatorial shift
bribery election budget preferred candidate
shift actions costs voters threshold functions constructed

pt
mj

follows voter vi set threshold function j
number positions possible shift preferred candidate
forward vi preference order create shift action zero effect
voters vi effect mt cost
p w
sequence sn ni si b p r winner
election voter vi shift p forward si positions
solution constructed instance combinatorial shift bribery vi
use shift actions si total bribery cost shift
bribery instance implementing shifts vi preferred candidate
shifted exactly si positions
assume constructed combinatorial shift bribery instance yesinstance consider subset f shift actions whose total cost b
ensure p r winner election recall shift action used
voter vi v define si largest integer shift
actions si belong f let us fix voter vi claim applying
shift actions f combinatorial shift bribery instance preferred
candidate shifted forward exactly si positions definition si immediate
shifted forward least si positions shifted forward
positions
following reason shift actions si total effect
p mj
vi equal sj

equal si definition shift action si
f sum remaining shift actions effect vi smaller

x
j si

mj





ms

x

j msi

j

however si si msi means even used shift actions
aside si vi preference order still would shift p exactly si positions
conclusion means implementing shift actions f ensures
voter vi shift p forward exactly si positions vi


fibredereck faliszewski niedermeier talmon

w w si si therefore sequence sn witnesses
input instance shift bribery yes instance total cost shifts
b combinatorial instance ensure p winner
combinatorial instance
since reduction clearly runs polynomial time proof complete
construction proof somewhat involved especially one takes
account simply shows combinatorial shift bribery indeed
generalizes much simpler non combinatorial one nonetheless somewhat contrived
use threshold functions seems necessary indeed combinatorial shift
bribery restricted shift actions positive entries exactly one
voter used simple linear threshold functions would obtain shift
bribery case convex price functions bredereck et al
general variant shift bribery example np hardness
elkind et al hold shown bredereck et al nonetheless
general one
general hardness
turns combinatorial shift bribery defined section
general allows following sweeping hardness
theorem plurality rule borda rule combinatorial shift
bribery np hard even five voters two candidates budget constraints
borda rule combinatorial shift bribery np hard three voters
four candidates
proof reduce following weakly np hard variant subset sum
simple exercise np hardness reduction classic subset
sum
subset sum zero variant
input set integers
p
question nonempty set ai ai
given instance subset sum zero variant construct
instance plurality combinatorial shift bribery two candidates since
plurality rule borda rule coincide elections two candidates hardness
transfers borda combinatorial shift bribery fact almost
natural voting rules
construct following election
note however prove weak np hardness may hold assume
occurring numbers encoded unary contrary hardness proofs give
strong hardness independent number encoding issues



ficombinatorial shift bribery

election
v p
v p
v p
v p
v p

shift actions


































f



fn

element ai set f shift actions contains one shift action
effect ai v effect ai v effect v effect two voters
voter threshold functions follows candidate p shifted last position
v v effect voters negative
candidate p shifted top position third voter effect positive
set cost shift action one set budget
n thus budget allows us pick combination shift actions
direction let non empty subset whose element wise sum equals
zero applying f ai p winner since sums zero
effect first two voters effect third voter positive
non empty thus p preferred three five voters wins election
direction let f f subset shift actions makes p winner
f must non empty p win initial election claim
element wise
sum ai f zero sake contradiction assume
p
ai ai sum negative would negative effect
first voter would preferred three voters five would win election
sum positive would effect second voter taking
role first one
similar idea reduce subset sum zero variant
borda combinatorial shift bribery three voters four candidates given
input construct following instance
election
v p
v p
v p

shift actions


















f



fn

element ai f contains one shift action effect ai v
effect ai v effect v voter vi threshold function
effect p shifted last position first second voter
effect voters negative shifted top position third vote
effect positive shift action unit cost set budget
n e pick combination shift actions


fibredereck faliszewski niedermeier talmon

observe original winner election obtains seven points whereas
p obtains six points
direction let non empty subset whose element wise sum equals
zero apply shift actions f ai p becomes winner since sums
zero effect first two voters effect third voter positive
non empty thus p preferred candidate voters
wins election
direction let f f subset shift actions makes p winner
f must non empty p win initial election
element wise
sum ai f zero sake contradiction assume
p
ai ai sum negative would negative effect
first voter p would obtain six points whereas would obtain seven sum
positive would effect roles first second voter
switched
effectively theorem shows studying large scale effects campaign actions
full fledged r combinatorial shift bribery leads hopelessly
intractable hardness even elections fixed number
candidates fixed number voters
restricted variants combinatorial shift bribery
given hardness theorem throughout remainder
focus restricted variants combinatorial shift bribery assume
individual threshold functions identity functions voter
integer holds assume shift action unit
cost consider restricted types shift actions assumptions require
additional discussion
restrictions threshold functions costs shift actions seem
basic fact even satisfied instances built proof theorem reason assuming one hand seems beyond point
study instances involved theorem hand
interact restrictions leading tractable cases important
consequences
first identity threshold functions means model societies prone
propaganda identity threshold functions cannot differentiate voters
less responsive actions second assuming every shift action
unit cost settings costs particular campaign actions similar
enough small differences irrelevant actual number actions
choose perform sufficiently good approximation real cost true
example case organizing meetings voters often comparable
prices likely case shift actions model actions airing tv
spots spot similar cost produce broadcast greatest disadvantage
assuming unit costs longer model mixed campaigns use actions
several different types meetings voters tv spots web campaigns etc


ficombinatorial shift bribery

restrictions types allowed shift actions even greater impact
nature campaigns study study following classes shift actions
unrestricted shift actions put restrictions allowed shift actions
general naturally least tractable setting
bounded effect shift actions consider parameter require
shift action f f f n holds j j n
f j still general setting assume campaigning
action limited impact voter
unit effect shift actions class bounded effect shift actions
given voter applying given shift action leave preferred candidate
p unaffected shift p one position
interval shift actions subclass unit effect shift actions never affect
voters negatively shift action interval voters
affected positively interval respect order voters
input collection v class shift actions campaigns associated
time window certain voters reached campaigns local given
neighborhoods example include putting multiple posters organizing
meetings etc speak z interval shift actions mean interval shift actions
shift action affects z voters
unit effect two voters shift actions subclass unit effect shift actions
affect two voters focus shift actions affect voters
positively denoted shift actions affect one voter positively
one voter negatively denoted shift actions reason studying
families model particularly natural types election campaigns
rather establish limits tractability example
consider shift actions understand intractable shift actions
negative effects shift actions simplest shift actions type
may useful campaign one would never deliberately use shift action
affects preferred candidate negatively

figure presents difference bounded effect shift actions unit effect shift
actions unit effect two voters shift actions interval shift actions graphically
discuss next section type allowed shift actions huge impact
computational complexity
neighborhood scenario take simplified view society voters lives line
course would natural take two dimensional neighborhoods account view
interesting direction future time consider simple settings
possible time window scenario natural ordering voters point time
cast votes affected campaign



fibredereck faliszewski niedermeier talmon

































unit effect





z












z

figure restrictions shift actions visualize left right top bottom
shift action maximum effect single shift action maximum number
voters affected single shift action unit effect shift action shift action
effect one voter effect another voter shift action
effect two voters shift action effect interval
size z z intended interpretation voters listed vertically top
bottom

overview
provide high level overview turns even rather strong
restrictions place restrictions defined section combinatorial shift
bribery computationally hard settings present quest
understanding border tractability intractability combinatorial shift
bribery end employ following techniques ideas
seek regular complexity np hardness parameterized
complexity fpt w hardness w hardness
xp
consider structural restrictions sets available shift actions
seek approximation inapproximability approximation hardness


ficombinatorial shift bribery

parameterized complexity consider following parameters
number n voters b number candidates c budget b
maximum effect single shift action e maximum number voters affected
single shift action
discussions approximability combinatorial shift bribery regard
task minimizing cost ensuring preferred candidates victory means
example approximation decide possible ensure
preferred candidates victory output successful set shift
actions total cost twice high optimal one
summarize table combinatorial shift
bribery highly intractable theorems computationally hard terms np hardness w hardness inapproximability even fpt
plurality rule borda rule even restricted
forms unit effect shift actions even two candidates means essence
hard natural voting rules since two candidates natural voting rules
boil plurality rule
theorem theorem w hard even
take number candidates budget joint parameter even extremely
restricted shift actions remains hard case borda rule
parameterized number voters theorem contrary case
plurality parameterization number voters obtain tractability
obtain several approximability essence possible
cases shift actions negative intuitive reason fact
shift actions negative effects computationally hard check
whether preferred candidate win even without restrictions budget
approximation non combinatorial
variant due elkind et al elkind faliszewski
use non combinatorial directly subroutines
derive plugging combinatorial shift bribery specific blocks
framework developed elkind et al elkind faliszewski

connection combinatorial control
study combinatorial variants modeling ways affecting election
initiated bulteau et al considered combinatorial control adding voters
combinatorial ccav plurality rule condorcet rule turns
plurality rule reduce combinatorial ccav
combinatorial shift bribery non combinatorial variants
give much since easily seen polynomial time solvable
however strong hardness plurality combinatorial ccav
transfer case plurality combinatorial shift bribery formally pluralitycombinatorial ccav defined follows bulteau et al
plurality combinatorial ccav
input set c candidates preferred candidate p c collection v


fibredereck faliszewski niedermeier talmon

table overview exact approximation plurality combinatorial shift bribery borda combinatorial
shift bribery different restrictions shift actions see figure marked
follow work elkind et al follow work bredereck
et al follow work elkind faliszewski follow
work bredereck et al note variants xp
parameterized budget b observation
shift actions

regular
shift bribery
convex prices

rule

exact complexity

approximability

plurality

poly time solvable



borda

np complete
fpt b
w hard n

unit effect

approximable
poly time
fpt approximation
scheme n

w h b even

inapproximable even

thm

fpt time b even

xp n prop

thm

plurality

fpt n thm



borda

w hard n thm



inapproximable even
fpt time n cor


np h even thm


w h b
combined thm

plurality


z intervals



inapproximable
even thm

fpt n thm



w h b

approximable

combined thm

poly time thm

plurality

fpt n thm

borda





w h b thm



z approximable
poly time thm
z approximable
poly time thm
approximable
mz time thm

ficombinatorial shift bribery

registered voters preference orders c collection w unregistered voters preference orders c bundling function w w
w w holds w w budget k
question collection w w
k voters p


winner modified election c v w w w
intuitively unregistered voter w w bundle w given explicitly
input add w election example somehow convincing
vote voters bundle join election example people choose
vote influence friend
theorem plurality combinatorial ccav polynomial time many one reducible
plurality combinatorial shift bribery instance plurality combinatorialccav candidates reduction outputs instance plurality combinatorial
shift bribery candidates
proof consider input instance plurality combinatorial ccav candidate set
c collection registered voters v collection unregistered voters w bundling function
preferred candidate p c limit k number voters add
form instance plurality combinatorial shift bribery follows
form candidate set c c candidate form
set voters v following way
voter v v include v v preference orders extended rank
last
voter w w ranks p first include v two voters xw
preference order form p x w preference order form
p
voter w w ranks candidate c c p first include
v voter xw preference order p c voter x w preference order
p
include w c voters v preference orders achieve
following effects c c score c election c v c ranked first
w c voters v b ranked first exactly w voters v
achieve effects c c p include w voters rank c first
include w voters rank p first include w voters rank first
voter w w introduce shift action fw following effects
w w ranks p first fw effect xw x w w ranks
candidate c p first fw effect xw effect x w
entries zeros finishes construction provide proof correctness
following example reduction

w

example consider following input plurality combinatorial ccav
preferred candidate p budget k


fibredereck faliszewski niedermeier talmon

registered voters
v p

unregistered voters
w p

bundling function
w w w

v p

w p

w w

v p

w p

w w w

construct following input plurality combinatorial shift bribery notice
number entries shift action
election
v p
v p
v p
xw p
x w p
xw p
x w p
xw p
x w p
dummies
dummies p
dummies

shift actions

































fw

fw

fw

note adding voter w input election plurality combinatorial ccav
p winner election correspondingly applying shift action fw
p winner input election plurality combinatorial shift bribery
see correctness construction note applying shift action corresponding bundle voter w w effect differences scores
candidates c adding bundle w original control instance
specifically disregarding score following
w w ranks p first increase score p one
w w ranks candidate c c p first increase score
c one score candidate never grow beyond w pluralitycombinatorial shift bribery instance score p never fall w
therefore never prevent p winner
thus reduction correct furthermore reduction computed polynomial time outputs plurality combinatorial shift bribery instance one
candidate input plurality combinatorial ccav instance observe output instance uses unit effect shift actions affect twice
many voters largest bundle input instance


ficombinatorial shift bribery

proof theorem bulteau et al obtain
following
corollary plurality combinatorial shift bribery w hard respect
budget b even w hard respect b even shift actions unit
effect voters np hard even shift actions unit effects
voters
proof follows applying reduction proof theorem
plurality combinatorial ccav instances produced reductions theorems
bulteau et al respectively

hardness
previous section bound hit hard instances
combinatorial shift bribery even restricted setting section explore
restrictive hard settings organized type shift actions
allowed
general unit effect shift actions
start considering unit effect shift actions allowed effects positive
obtain np hardness w hardness parameterizing budget b
allow negative unit effects gets even harder go beyond
hope approximation even approximation allowed
run fpt time parameterizing budget b quite strikingly hold
even two candidates
theorem plurality rule borda rule combinatorial shift
bribery np hard w hard parameter budget b even two candidates
even shift action effects voter
proof provide parameterized reduction set cover recall section let
x h instance set cover sm family subsets
universe x x xn h number sets use cover x
construct instance plurality combinatorial shift bribery two candidates note since borda rule plurality rule coincide elections two
candidates hardness transfers borda combinatorial shift bribery
construction follows p candidates
element xi x create element voter vi preference order p create another set
n dummy voters preference order p set f shift actions contains
set sj function fj effect element voters corresponding
elements set fj xi sj fj otherwise finally
set b h finishes construction clearly reduction computed
polynomial time consider following example applying reduction
example let input set cover x x x x x x
h construct
following input plurality combinatorial shift bribery


fibredereck faliszewski niedermeier talmon

election
v p
v p
v p
v p
v p
dummies p

shift actions





















f

f

f

note set cover analogously choosing f f p
winner election

remains set cover size h successful
set shift actions size h
part assume set cover size h applying

f fj sj makes p win election since set cover p preferred
candidate n element voters hence winner election
part assume set shift actions f f size h
whose application makes p win election p must preferred candidate
element voters bribed election shift action effect dummy
voter since n element voters n dummy voters sj fj f set
cover finally since b h size h
allowing negative unit effects voters adapt reduction
theorem strong inapproximability inapproximability follows
since corresponding reduction yes instances correct solutions use
exact given budget
theorem unless w fpt combinatorial shift bribery inapproximable
fpt time parameter b plurality rule borda rule even two
candidates unit effect shift actions
proof modify reduction theorem inapproximability
let x h set cover instance sm x x xn
without loss generality assume h construct instance pluralitycombinatorial shift bribery two candidates follows since two
candidates proof applies case borda combinatorial shift bribery
well

element xi x create element voters vi vi preference
order p set sj create set voter vj preference order p
create x h dummy voters preference order p set f
shift actions contains set sj shift action fj effect
element voter corresponding element set effect set voter
corresponding set finally set b h completes construction
clearly computable polynomial time


ficombinatorial shift bribery

next successful set shift actions size h
set cover size h
part assume set cover size h f
fj sj successful set shift actions since set cover p
preferred candidate x element voters preferred candidate
least h set voters corresponding sets set cover moreover
preferred candidate x h dummy voters preferred
candidate h set voters corresponding sets set cover hence
p wins p tie winners
part assume successful set shift actions f f
size h p must preferred candidate element voters
bribed election element voter p would least
element voters p element voters corresponding
element thus would total x element voters set
voters prefer p least x h dummy voters element voters
prefer since assumed h would mean p winner thus
must sj fj f set cover due budget constraint
follows h
finally plurality combinatorial shift bribery inapproximable
even fpt time parameterized budget assume sake contradiction successful set shift actions f f f b exists bribed
election least x h dummy voters f h set voters prefer
x element voters h set voters prefer p thus
unique winner hence successful bribery action must optimal respect
budget fpt plurality combinatorial shift bribery parameterized budget would solve w hard set cover parameterized
solution size fpt time contradiction assumption fpt w
shift actions unit effect two voters
previous section limit number voters affected shift action
focus case unit effect shift action affect two voters first combinatorial shift bribery remains np hard hard
approximate shift actions provide parameterized hardness
shift actions proof relatively similar one
theorem defer appendix
theorem unless p np combinatorial shift bribery inapproximable
polynomial time plurality rule borda rule even two candidates
shift actions
opposed theorem yield w hardness parameter budget b proof uses reduction set cover
value budget size universe set x insist parameterized
hardness unit effects two voters accept larger sets candidates
however increase large w hardness combinatorial
shift bribery jointly parameterized budget number candidates


fibredereck faliszewski niedermeier talmon

theorem plurality rule borda rule combinatorial shift
bribery w hard combined parameter b even
shift actions shift actions
proof four cases consider begin plurality rule shift
actions
plurality rule shift actions describe parameterized reduction w hard clique parameterized solution size pluralitycombinatorial shift bribery shift actions parameterized b
let g h instance clique v g u un e g e em
create following instance plurality combinatorial shift bribery set
candidates p dh vertex ui v g cre

ate vertex voter vi preference order p moreover create n h dummy


voters preference order p edge ui uj e g create
shift action f ui uj effect vertex voters vi vj effect

voters finally set budget b h completes construction
computable polynomial time consider following example
example following graph looking clique size h
u

u

u

u

u

u

u

construct following input plurality combinatorial shift bribery
election
v p
v p
v p
v p
v p
v p
v p
dummy p

shift actions




















































































fu u

fu u

fu u

fu u

fu u

fu u

note v v v form clique size input graph clique accordingly applying set shift actions fu u fu u fu u p winner
election plurality combinatorial shift bribery



ficombinatorial shift bribery

without loss generality assume ranked first arbitrary fixed


order observe n vertex voters h dummy voters rank first
n h dummy voters rank p first hence make p win election
one needs h additional voters rank p first effect rank first
remains constructed instance contains successful set shift actions f size h g h contains clique size h
part let h v g set h vertices forming clique let e e g
set edges vertices h observe f f ui uj
ui uj e successful set shift actions vertex voter vi corresponding
clique vertex ui h candidate p shifted h positions forward means
total h vertex voters rank p first p ties winner election
part let f successful set shift actions since dummy voters
affected shift action follows order make p winner election
p must shifted top position least h vertex voters total p must
shifted h h positions forward since f size b h h h

shift action affects two vertex voters f must size exactly h affecting

exactly h vertex voters construction implies h edges g incident
exactly h different vertices possible h vertices form clique
finishes proof plurality rule shift actions
remaining cases proof quite similar although technically involved
present appendix b
quite natural consider combinatorial shift bribery different
perspective instead asking happens small number candidates might
ask complexity combinatorial shift bribery small number voters
see example brandt harrenstein kardel seedig chen et al
motivation looking elections voters interesting case
obtain hardness borda rule indeed later pluralitycombinatorial shift bribery fpt parameter number voters proof
next theorem quite involved available appendix c
theorem borda combinatorial shift bribery w hard respect number n voters even shift actions budget constraints
proof theorem reduce strongly regular multicolored
clique importantly impose budget constraints thus follows approximation borda combinatorial shift bribery running fpt time parameterized number voters would yield fpt strongly regular multicolored clique parameterized
solution size effect following corollary
corollary unless w fpt borda combinatorial shift bribery inapproximable even fpt time parameter n even shift actions
theorem corollary compare interestingly
non combinatorial variant borda shift bribery recently complexity
borda shift bribery parameterized number voters unknown eventually


fibredereck faliszewski niedermeier talmon

different submitting one journal publication shown
w hard bredereck et al far simpler proof
one used nonetheless theorem corollary still carry significant value
earlier bredereck et al shown fpt approximation scheme
borda shift bribery parameterized number voters corollary shows
generalize combinatorial setting
interval shift actions
conclude discussion hardness considering combinatorial shift
bribery interval shift actions previous section allowed shift actions
non zero effects two voters two voters could chosen arbitrarily hardness case positively affect multiple
voters voters form consecutive interval input election
theorem plurality rule borda rule combinatorial shift
bribery np hard even interval shift actions
proof consider plurality rule first give many one reduction following
variant strongly np hard numerical matching target sums
numerical matching target sums
input three sets integers b b bt x
x xt numbers encoded unary numbers
distinct two numbers b sum
number x
question elements b paired
sum ith pair exactly xi
standard variant presented classic text garey
johnson restrictions integers sets b x
assume numbers encoded unary strongly nphard hulett woeginger shown remains
np hard case integers distinct finally see third
restriction change complexity suffices consider following
transformation given instance b x numerical matching target
sums add max b x integer b x produces
equivalent instance two numbers b sum
number x
plurality rule let b x instance numerical matching
target sums let denote largest integer b x create instance
plurality combinatorial shift bribery follows set candidates
c p ca cat cb cbt cx cxt
create following voters


ficombinatorial shift bribery

pair integers ai x x introduce
one voter preference order

cai p c p cai
b ai voters preference order

cx p c p cx
c ai voters preference order

p c p
voters called ai x voters exactly
pair ai x construct shift action faxi effect exactly set ai x
voters
pair integers bj b x x introduce
one voter preference order

cbj p c p cbj
b bj voters preference order

cx p c p cx
c bj voters preference order

p c p
voters called bj x voters exactly
pair bj x construct shift action fbxj effect exactly set bj x
voters
let q ty create sufficiently many dummy voters ensure altogether
candidates following scores
p q points
b cai cbi q ty points
c cx q ty x points
shift action affects dummy voters


fibredereck faliszewski niedermeier talmon

finally set budget b completes reduction easy see
computable polynomial time numbers encoded unary
order voters shift action effects consecutive interval z
voters
remains constructed instance plurality combinatorial shift
bribery contains successful set f shift actions size b x
yes instance numerical matching target sums
part let ai bj ait bjt solution numerical matching target sums set integer pairs integer b
occurs exactly ai bj x holds observe
f faxi fbxj ai bj successful set shift actions since integer




b occurs exactly pair candidate cai candidate cbj
loses one point since ai bj x candidate cx loses x points
construction p gains ty points set shift actions size thus p wins
election
part let f successful set shift actions size
successful action smaller size could extend size shift actions
negative effects applying shift actions f p gains ty points
make p winner election candidate cai candidate cbj needs lose one
point candidate cx needs lose x points thus ai exactly
x
x
one fai f bj b exactly one fbj f since integers
b x distinct two integers b sum
integer x x x least one shift action faxi effect ai

voters prefer cxl one shift action fbxj effect bj voters prefer cx since

candidates cx f follows exactly two shift actions
effect voters preferring cx since cx lose least x points holds
ai bj x fact pigeonhole principle holds ai bj x hence
successful set shift actions solution numerical
matching target sums instance
borda rule borda rule almost reduction works specifically
still exists integer q set requirements required
proof plurality rule hold borda rule respect different
q importantly since p second position preference profiles
voters holds score differences applying shift actions similar
plurality rule borda rule thus proof correctness plurality rule
transfers borda rule

throughout section shown number hardness
restrictive assumptions regarding available shift actions following sections
seek positive algorithmic


ficombinatorial shift bribery

exact
spite pessimism looming previous section section two
exact fpt xp r combinatorial shift bribery section
present several efficient approximation
begin observing r combinatorial shift bribery solved polynomial time provided assume budget b constant reason
need choose b shift actions available ones number shift
actions available upper bounded input size
observation plurality combinatorial shift bribery borda combinatorial shift bribery xp parameterized budget b
restrict instances contain bounded effect shift actions
r combinatorial shift bribery solved polynomial time provided
number n voters treated constant
proposition maximum effect every shift action upper bounded universal constant plurality combinatorial shift bribery borda combinatorial shift bribery xp parameterized number n voters
proof let value bounding component wise effect shift action first
observe n types different shift actions second observe
one knows budget spent type shift actions one easily check
whether corresponding set shift actions makes p winner election thus use
following try possibilities distributing budget b among
n types shift actions check whether one makes p winner
accept otherwise reject
proposition holds even shift action comes individual cost
voter individual threshold function given budget
select cheapest set shift actions given type expressing
integer linear program ilp famous lenstra
plurality rule strengthen xp membership fpt membership
theorem bounded effect shift actions treat bound universal
constant plurality combinatorial shift bribery fpt parameterized
number n voters
proof given instance plurality combinatorial shift bribery n voters
proceeds follows first guess subset voters
guarantee p ranked first n guesses try guessed set voters
test whether p would winner election p shifted top position
guessed voters ranked first remaining voters guessed
subset v voters test positive check whether possible ensure
applying shift actions whose cost exceed budget voters v
rank p first follows
let universal constant bounding component wise effect shift action
observe n types different shift actions shift action


fibredereck faliszewski niedermeier talmon

type z introduce variable xz denoting number times shift action type z
present solution voter vi denote svi p position p original
preference order vi voter vi v add following constraint
p

p

x
svi p
z

z fz effect vi
ensures p indeed shifted top position vi preference list add
budget constraint
x
xz b
ensuring solution respects budget finally shift action type z add
constraint ensuring use many shift actions type z available
input finishes description ilp lenstra
solve ilp fpt time n integer variables
roughly speaking theorem reason theorem apply
plurality rule setting plurality combinatorial shift bribery tractable
note theorem applies case shift action unit cost
e case focus nonetheless believe possible
lift theorem case shift action individual cost applying
ideas bredereck faliszewski niedermeier skowron talmon

approximation
explore possibility finding approximate solutions combinatorial shift
bribery focus approximating cost shift actions necessary ensure ps
victory example approximate finds solution ensures ps victory
whenever possible uses twice many shift actions necessary
theorems know cannot hope approximate
cases combinatorial shift bribery shift actions negative effects
thus section focus unit effect shift actions positive effects
simplifies situation check possible ensure ps victory
suffices apply available shift actions check p winner indeed
able perform check heart inapproximability section
approximation proceed directly invoking
non combinatorial variant shift bribery elkind et al elkind
faliszewski plugging framework start
former describe latter
theorem shift action effects voter pluralitycombinatorial shift bribery approximated polynomial time bordacombinatorial shift bribery approximated polynomial time denotes maximum number voters affected shift action
proof general idea approximation split shift action
affects voters shift actions affecting single voter effect


ficombinatorial shift bribery

construct non combinatorial instance shift bribery solve exactly
case plurality rule approximately case borda rule
specifically construction goes follows let denote number shift actions
affecting voter given instance combinatorial shift bribery form
instance shift bribery identical except instead shift actions
price functions voters set price function voter
j shifting p j positions costs j j shifting p j positions
costs b j b total number shift actions available note
exponential function b j ensures price functions convex
easily identify situations one shifts p positions
describe use construction case plurality rule
case borda rule
plurality rule first translate input instance non combinatorial
plurality shift bribery instance described apply known exact
polynomial time plurality shift bribery elkind et al
instance let cost solution found non combinatorial instance
b impossible ensure ps victory combinatorial instance
number available shift actions insufficient
b obtain solution f plurality combinatorial shift bribery
instance follows voter v non combinatorial bribed election
ranks p first select shift actions combinatorial instance v ranks p first
note f f indeed combinatorial solution
sake contradiction assume successful set shift actions f
size smaller f however easy see set shift actions would
correspond bribery cost smaller non combinatorial instance since
cost optimal solution non combinatorial instance contradiction
borda rule case borda combinatorial shift bribery follows analogously instead polynomial time exact non combinatorial
instance use approximation borda shift bribery elkind et al
elkind faliszewski let cost solution found b
impossible ensure ps victory
otherwise obtain solution f combinatorial instance vote v
non combinatorial solution shifts p positions include shift actions
affect voter f f correct solution combinatorial
instance
existed solution f combinatorial instance used less f
shift functions would solution non combinatorial instance
cost smaller f since used approximate noncombinatorial instance impossible
mention might possible improve approximation ratio given theorem least borda rule idea might cast variant
strictly speaking need ensure price functions convex variant
shift bribery generalize stick consistency



fibredereck faliszewski niedermeier talmon

set multicover generalization set cover
element covering requirement one could use approximation set multicover example one suggested rajagopalan
vazirani plug approximation elkind faliszewski

achieve better approximation guarantees borda rule
restrict allowed shift actions obtain use framework elkind
faliszewski essence shown following given variant
shift bribery plurality rule borda rule one provide
function computes obtain highest number points preferred
candidate given budget b approximation variant
shift bribery note get points p solve shift
bribery maximizes score p ensure candidate receives
higher score indeed optimal solution might increase score p smaller extent
expense dangerous opponents
theorem borda combinatorial shift bribery approximable polynomial
time shift actions
proof discussion preceding theorem statement suffices provide function
given instance combinatorial shift bribery budget b finds set
shift actions obtain highest possible number points preferred candidate
p without exceeding budget
general idea achieving compute maximum b matching auxiliary
multigraph multigraphs allow multiple edges vertices b matching
multigraph g function b v g n called covering function edge induced
subgraph g vertex u degree b u known b matching
computed polynomial time gabow
construct auxiliary multigraph g follows voter vi create vertex
ui shift action effect voter ui effect voter uj create edge
ui uj define covering function b b ui number positions
p shifted forward preference order voter vi position p
preference order voter vi
g b matching size least b corresponds set shift actions
increase score p b highest gain possible g b matching
size k b take shift actions corresponding edges b matching
shift actions maximize number points p gain shift actions
move p within two votes greedily select shift actions pushes p forward
one vote use budget point every shift action affect p single
vote thus function computes highest point gain possible p given
budget
next consider interval shift actions fix order voters
restrict shift action effect voters comprise intervals fact
fact applies scoring rules focus plurality rule
borda rule



ficombinatorial shift bribery

could allow holes inside intervals unfortunately requires xp
time parameterization length longest interval
theorem plurality rule borda rule combinatorial shift
bribery approximated xp time interval shift actions provided take
upper bound number voters affected shift action parameter
proof per discussion preceding theorem suffices describe set
shift actions maximize number points preferred candidate p gains
given budget
end use dynamic programming consider input
combinatorial shift bribery election e c v preferred candidate p
budget b spend increasing ps score let c n v
v v vn uses following table partial numbers x table entry
x
denotes maximum number additional points candidate p gain voters v vx condition exactly shift actions used
affects voters set v vx
candidate p shifted position si preference order voter vxi iterate
voters store effect applied shift actions last voters
size table n b
almost plurality rule borda rule
difference computing scores candidates let z z denote
position p preference order voter position means p ranked
first score z mean score p gains voter plurality
rule score z z score z otherwise borda rule
score zi zi set voters vector z zt n zi
denotes positions p preference orders voters
write score z zt mean score p gains voters
score z zt

x

score zi



given preparation ready describe jointly plurality
rule borda rule
initialization initialize entries table follows
check whether set shift actions effects voters
v v applying set shift actions moves candidate p positions preference orders voters v v respectively
exists set score otherwise set
explain check set shift actions exists
end proof


fibredereck faliszewski niedermeier talmon

recursion step compute table entries x x one
compute subsets shift actions whose last affected voter vx ensure
together yi shift actions whose last affected voter set v vx
j j p shifted position sj preference order vxj
specifically update phase compute x x n
b vector table entry x
follows say vector x realizable
set shift actions whose last affected voter vx
j j shifts candidate p sj positions preference
order voter vxj write r x denote set vectors
x realizable describe compute r x later compute
x follows
x max x
score score
r x
informally realizable total effect shift actions whose last affected voter
vx number points candidate p gains number additional points
candidate p gains shift actions last affected voter v vx
plus number additional points candidate p gains shift actions
last affected voter vx avoid double counting expressed difference
middle line formula
next compute r x try every vector

check x realizable perhaps easiest way
formulate integer linear program ilp constant number
variables
let vector want check x realizable
subset q say shift action type q affects exactly
voters vxi q subset q introduce integer variable xq
denoting number shift actions type q used x realization vector
solve following ilp
x

xq



xq



q

x
q

x

j j

xq sj



jq

note middle constraint ensures last affected voter vx since
number variables ilp follows famous lenstra
ilp solved xp time respect parameter indeed even
fpt time ilp without middle constraint check
vectors use initialization step


ficombinatorial shift bribery

coming back dynamic program clear finding obtain maximum score p respecting budget found taking maximum
table entries n b possible values b b b

section showed indeed possible achieve approximation
special cases combinatorial shift bribery
settings efficient quite restrictive means
practice one might want seek good heuristics use guidance
initial search

conclusion
defined combinatorial variant shift bribery elkind et al
elkind faliszewski bredereck et al studied computational
complexity motivation desire understand computational
difficulty imposed correlated large scale effects campaign actions respect
work motivated combinatorial study election control studied bulteau et al
chen et al found even restricted special
cases numerous parameterizations combinatorial shift bribery
highly intractable worst case nonetheless found initial positive
mainly form approximation interestingly approximation
quite strongly rely non combinatorial shift bribery
number directions motivated work example plurality combinatorial shift bribery borda combinatorial shift
bribery solved polynomial time shift actions interval actions
assumption number candidates constant
generally suggest studying restrictions
example since parameterizing number available shift actions immediately gives
fixed parameter tractability natural question whether natural parameterizations exist could lead positive
naturally one might consider voting rules well interesting condorcetconsistent rules copeland rule since rules tend behave rather differently
scoring rules mention hold voting rules
specifically theorem theorem theorem theorem hold voting rules
theorems hold elections two candidates voting rules
behave elections two candidates observation theorem
basically brute force hold voting rules well
statements regarding borda rule theorem theorem theorem hold
scoring rules since underlying approximation elkind faliszewski
works scoring rules
might interesting consider domain restrictions regarding voters
preferences example single crossing seems particularly natural context interval
shift actions since means shift action affects voters somewhat similar
preferences well demonstrated restricting domain voters lead


fibredereck faliszewski niedermeier talmon

tractability see theorem bulteau et al example combinatorial
control setting however pursuing direction would require careful discussion
shift actions applied example allow single crossing election cease
single crossing bribery
acknowledgments
robert bredereck supported dfg project paws ni nimrod talmon supported dfg training group methods discrete structures grk currently weizmann institute science piotr faliszewski
supported dfg project paws ni agh university grant
statutory
preliminary short version work presented international
conference autonomous agents multiagent systems aamas bredereck
faliszewski niedermeier talmon b

appendix proof theorem
theorem unless p np combinatorial shift bribery inapproximable
polynomial time plurality rule borda rule even two candidates
shift actions
proof give many one reduction set cover let x h set cover
instance sm x x xn assume every element
belongs least one set construct instance plurality combinatorial shift
bribery set budget b x candidate set p p
preferred candidate element voter vi element xi preference
order p set voter vjs set sj preference order p
x h dummy voters preference order p element
xi set sj xi sj construct shift action fji effect vi
effect vjs completes construction easy see computable
polynomial time
next successful set shift actions note size
set important allow infinite budget set cover
size h
part assume set cover size h
build successful set shift actions start f element xi
choose arbitrary set sj contains xi add corresponding function
fji f applying f observe p becomes winner x element voters
h set voters prefer p x h dummy voters h set voters prefer
part assume successful set shift actions f f
let h number applying shift actions f p preferred
exactly h set voters shift actions f correspond h sets p
winner majority voters e least x h voters must prefer p thus
applying f least x h h element voters prefer p means
collection h sets jointly cover least x h h elements since every


ficombinatorial shift bribery

element belongs set extend collection set cover adding
h h sets worst case one set uncovered element proves
set cover x h completes part
note argumentation made assumptions regarding size f
hence finding solution plurality combinatorial shift bribery instance
including approximate solutions approximation factor implies finding set cover
size h means unless p np plurality combinatorial shift bribery
inapproximable polynomial time

appendix b remaining cases proof theorem
theorem unless p np combinatorial shift bribery inapproximable
polynomial time plurality rule borda rule even two candidates
shift actions
borda rule shift actions slightly modify reduction used plurality rule shift actions specifically describe parameterized reduction w hard clique parameterized solution
size borda combinatorial shift bribery shift actions parameterized
b
let g h instance clique v g u un e g e em
create instance borda combinatorial shift bribery follows set
candidates p dh create following voters
vertex ui v g create corresponding vertex voter vi preference
order
dh p
create n h dummy voters preference order
p dh
create h dummy voters preference order
dh p dh
create n h dummy voters preference order
p dh
create n h dummy voters preference order
p dh
edge ui uj e g create shift action f ui uj effect vertex

voters vi vj effect voters finally set budget b h
completes construction computable polynomial time


fibredereck faliszewski niedermeier talmon

proof correctness follows lines proof plurality rule
shift actions instead counting number approvals need compute
borda scores candidates indeed reason additional dummy
voters
particular construction ensures original winner election
difference borda score p borda score exactly h
furthermore shift action increase score p two hence make
p co winner one must increase score p h h decrease score h
possible shift actions correspond edges clique size h
plurality rule shift actions still reduce w hard clique parameterized solution size reduction bit
involved
let g h clique instance graph g n v g vertices

e g edges construct plurality combinatorial shift bribery instance
follows let set candidates p dh create
following voters
vertex vi create
preference order

h




h
vertex voters vi vi corresponding vi
dh p

edge ej vi vi create corresponding edge voter wj preference
order
p dh


create h n h h dummy voters preference order
p dh
edge ej vi vi construct

h




shift actions denoted

h
h
fe j vi fej vi fe j vi fej vi




h


fezj vi effect viz effect wj b


fezj vi effect viz effect wj finally set budget b h h

completes construction easy see computable polynomial time
parameterized reduction
observe initially edge voters dummy
voters prefer
p vertex


h
h

voters prefer therefore initial score p n h initial score

n h assume without loss generality means
winner election instances satisfying assumption solved constant
time
remains constructed instance contains successful set shift actions f size h g h contains clique size b general
z





ficombinatorial shift bribery

idea choose shift actions corresponding edges connecting nodes
h size clique ensure p becomes preferred candidate h h

additional vertex voters making preferred candidate h additional
edge voters
formally part let h v g set h vertices forming clique let
e e g set edges connecting vertices h choose following set
shift actions

h


z
z

f fej vi fej vi ej vi vi e z



f successful set
shift actions end observe vertex
h
z

voter vi vi v z candidate p shifted h positions forward therefore

p becomes preferred candidate voters means h h additional vertex
voters prefer p thus prefer anymore furthermore p shifted backwards
voters wj ej e becomes preferred candidate


h
h

edge voters p remains preferred candidate edge voters thus
p tie winners
part let f successful set shift actions
p winner
make

election p must shifted top position least h h h vertex voters
type voters affected positively pigeonhole
principle vertex

h
voters correspond least h different vertices voters corresponding

vertex effect least h edge voters must effected negatively becomes
preferred candidate
thus make p win election p must shifted

top



position least h h vertex voters implies f h h h h h b
hence f b itfollows p shifted backwards making preferred
candidate exactly h edge voters p must shifted top position

exactly h h vertex voters corresponding exactly h different vertices construction
implies h vertices form clique done
borda rule shift actions borda rule reduction
bit involved main idea plurality rule
let g h instance clique graph g n v g vertices

e g edges construct borda combinatorial shift bribery instance
follows set candidates p dh create
following voters

h
vertex vi create h vertex voters vi vi corresponding vi
preference order


p
edge ej vi vi create corresponding edge voter wj preference
order
dh p dh



h
h
h


n h h
let l
without loss generality
h
assume l integer requires simple modifications input clique


fibredereck faliszewski niedermeier talmon

instance create l dummy voters preference order
p dh
edge ej vi vi construct

h




shift actions denoted

h
h
fe j vi fej vi fe j vi fej vi




h


fezj vi effect viz effect wj b


fezj vi effect viz effect wj finally set budget b h h

completes construction easy see computable polynomial time
proof correctness follows lines proof correctness plurality
rule thus omitted
z



appendix c proof theorem
theorem borda combinatorial shift bribery w hard respect number n voters even shift actions budget constraints
proof reduce following w hard mathieson szeider lemma

strongly regular multicolored clique
input two integers h undirected graph g v e
vertex one h colors h vertex adjacent exactly
vertices color different
question exist clique size h containing one vertex
color class
given instance strongly regular multicolored clique construct
instance combinatorial shift bribery borda rule general idea
reduction follows set important candidates consists preferred
candidate p candidates correspond edges technical reasons
edge e v v introduce two candidates e e one associated
touching vertex v associated touching vertex v fact
introduce edge candidates vertex candidates use
ensure correct structure election appropriate bribery behavior build two
groups voters vertex selecting voters edge electing voters first group
implements picking vertices clique one vertex color second
group implements picking edges one edge pair colors ensure given
set shift actions chance successful must hold h vertices
h
edges picked importantly holds even unbribed election
make sure p wins election picked voters edges correspond clique vertices color end define voters
two numbers


ficombinatorial shift bribery

h vertices picked vertex selecting voters different color
vertex selecting voters give points edge candidate associated
touching one selected vertices points edge candidates
means picking vertex decrease score edge candidates
edges touch vertex

h edges picked edge selecting voters one edge pair colors
edge selecting voters give points edge candidate corresponds
picked edge points remaining edge candidates means
picking edge increase score candidates corresponding
candidate p gets points irrespective shift actions apply
note unbribed election every candidate gets points p
gets points thus challenge ensure every candidate gets
points description possible pick vertices
edges correspond size h clique vertices different colors indeed
selected edge e touch two selected vertices e e would receive
points edge selecting candidates least one would receive
points vertex selecting voters effect p would winner
without loss generality assume edges vertices selected unbribed
election form clique otherwise would trivial solution input
could output fixed yes instances borda combinatorial shift
bribery
construction formally describe reduction give example
applying simple instance finally correctness reduction
illustrate aspects correctness proof example
candidates set candidates somewhat involved important candidates
preferred candidate p sets edge candidates e e defined
let e g e e set edges graph g create two edge candidate
sets e e e e e e h let ni number
vertices g color let v v vni set vertices
color vertex vji v define neighborhood vji follows


n vji e e vji vji e


e e vji vji e
perhaps bit strange way color numbers pick edge candidates
e e implementing fact edge e e g two candidates e
e associated touching different endpoints e
technical reasons need candidates follows adjust scores
candidates introduce single dummy candidate create two
candidate sets e e e e e e act guards
edge selecting voters v create two candidate sets u uij vji v


fibredereck faliszewski niedermeier talmon



u u ij vji v u ih u u ih u act guards
vertex selecting voters
final set candidates c u u e e e e p
vertex selecting voters describe vertex selecting voters color
vertex vji define following parts preference orders j assume
uij u ij uini u ini respectively

vji uij n vji u ij

b vji uij n vji u ij
color create three pairs voters voters first pair wi wi
following preference orders


wi p v v v vni ri


wi ri b v b vni b vni b v p
ri set remaining candidates ri c p u u n v
n vni voters second pair qi qi preference orders
reverse wi reverse wi respectively finally voters last pair qi
qi preference orders


qi c n v n v

qi n v c n v
effect first two pairs voters jointly give c points candidates
last pair gives c points candidates n v c points
candidates except receives less c points
let h c c altogether vertex selecting voters give following
scores candidates candidates n v n v n v h receive points
candidates except receive points receives less points thus
unbribed election v v h selected vertices
color introduce ni h shift actions effect
voter wi effect voter wi understand number shift
actions comes note vertex vji n vji h
vertex connected vertices color different vji
b vji candidates n vji surrounded two vertex candidates
integer ni applying h shift actions effect
candidates n v gain one point e v ceases selected candidates
lose one point e v
n vt
becomes selected candidate changes
score later argue applying numbers shift actions multiples
h cannot ensure ps victory


ficombinatorial shift bribery

edge selecting voters edge selecting voters need following additional
notation let ex denote set candidates representing edges vertices
color x color
q

ex e

e vjx vjy e

write nx denote number edges vertices color x color
idx
z refer index z th edge vertices color x example
e e e three edges vertices colors n


id
id id
pair x distinct colors edge eidx
introduce following
j
x
parts preference orders j nx assume idj idx

r eidx
e idx e idx e idx e idx
j

eidx
j

j

j

j

e idx
j

e idx
j

e idx
j





j



e idx
j

pair x distinct colors introduce three pairs voters voters
following preference orders
first pair wx wx

wx r eidx
p r eidx
r eidx
r eidx
rx
nx





eidx
eidx
eidx
p
wx
rx eidx
nx
n



x

rx set remaining candidates rx c p ex
preference orders reverse w
voters second pair qx qx
x


reverse wx respectively finally voters last pair qx qx
following preference orders

qx e idx e idx c e idx e idx








qx c eidx eidx eidx eidx








first two pairs voters jointly give c points candidates
last pair gives c points e idx e idx c points candidates


except receives
less

c


points

let h c altogether pair distinct colors x edgeselecting voters give points candidates e idx e idx candidates receive


points except receives less points thus unbribed election
selected edges exactly first edges pair colors edges
form eidx
pair distinct colors x

pair x distinct colors create nx shift actions effect
intuition behind shift actions similar
voter wx effect voter wx
case vertex selecting voters make following observations
edge eidx four candidates listed r eidx four candidates listed eidx



integer nx apply shift actions candidates


fibredereck faliszewski niedermeier talmon

v

v

e

e

v

e

e

v

e

e
v

v

v v v v v v v v v h
figure colored graph six vertices vertex adjacent one vertex
color classes v v v
ceases selected candidates e idx e idx
e idx e idx lose one point edge eidx









gain one point edge eidx
becomes selected scores candidates remain

unchanged later argue apply number shift actions
multiple p certainly winner resulting election
conclude construction set budget b use many
shift actions easy verify reduction computable polynomial
time introduce number voters function h thus
parameterized reduction proving correctness construction consider
following example refer correctness proof well
example consider strongly regular multicolored clique instance h g
h graph g figure construction produces following set
candidates
c u u e e e e p


u u u u u u u u u
u u u u u


e ei ei ei
furthermore
n v e e

n v e e

n v e e

n v e e

n v e e

n v e e


ficombinatorial shift bribery

vertex selecting group voters create following voters color
create two voters wi wi






w p u e e u
u e e u r






w r u e e u
u e e u p






w p u e e u
u e e u r






w r u e e u
u e e u p






w p u e e u
u e e u r






w r u e e u
u e e u p
ri c p u u n v n vni voters
add voter reversed preferences means far candidates obtain
total score finish group voters creating color two voters
qi qi preference orders


qi c n v n v

qi n v c n v
ensures color candidates n v get points
candidates get points except gets points create shift actions
effect voter wi effect voter wi
edge selecting second group voters recall ex denotes set candidates representing edges vertices color x color specifically
e e e e e e e e e
e e e e e e e e e
e e e e e e e e e
follows
pair x distinct colors create two voters wx wx


w e e e e p e e e e r


w
r e e e e e e e e p

w e e e e p e e e e r


w
r e e e e e e e e p

w e e e e p e e e e r


w
r e e e e e e e e p
rx c p e x voters add voter reversed

preferences pair x distinct colors add two voters qx qx


fibredereck faliszewski niedermeier talmon

follows

qx e idx e idx c e idx e idx








qx c eidx eidx eidx eidx








altogether pair x distinct colors candidates e idx e idx get points


candidates get points except gets less points pair x
distinct colors create shift actions effect voter wx effect

voter wx

properties construction discuss several properties construction
properties play significant rule showing correctness reduction
illustrate arguments come back example time time begin
looking scores candidates
lemma following claims hold
unbribed election every candidate receives points every
candidate p u u e e receives exactly
every bribed election score p exactly
applying successful set shift actions score p
scores candidates
proof easy see first claim holds discussion give
throughout construction second claim holds applying every shift
action decreases one score p one vote increases one another vote
sufficiently shift actions whole instance applying shift
action moves p within two votes shift action acts last claim
follows directly second one
lemma
let us consider process selecting vertices description vertexselecting voters said initially color vertex v selected
integer ni apply h shift actions affect voters wi wi

v ceases selected vt
becomes selected argue apply
number shift actions divisible h p winner
resulting election
see case recall preference orders voter wi wi
exactly h candidates e e pair candidates uij u ij
furthermore p passes candidate uij preference order voter wi increasing
uij score one must pass candidate uij preference order voter wi
decreasing uij score one otherwise uij would end score
p would winner possibilities influence score uij
shifting p preference lists wi wi hence p passes candidate u ij
candidates uij u ij preference lists wi wi however
means p winner election number applied shift actions


ficombinatorial shift bribery

unbribed voters w w







w p u e e u
u e e u r






w r u e e u
u e e u p
applying two shift actions effect w w







w u e p e u
u e e u r





e p e u
w r u e e u

u






applying h shift actions effect w w







w u e e u
p u e e u r









e e u
w r u e e u

p

u






figure illustration bribery actions affecting first voter group running example
example note unbribed election every candidate u u obtains
points total color one type shift actions
affects voter wi wi shift actions effect voter wi effect
voter wi shift action affect voter first group applying
multiple h shift actions effect voter wi effect voter wi
ensures candidates u u receive points total whereas
applying number shift actions implies candidate u
receives points hence p cannot win illustrate color
running example
effects voters wi wi multiple h p passes candidate uij
candidate u ij h candidates figure provides illustration
reasoning
next discuss selecting edges case vertex selecting voters description construction argued initially pair x distinct
colors edge eidx
selected b applying nx shift actions

e x ceases selected e x becomes selected
affect voters wx wx
id
idt
argue used number shift actions multiple four
p certainly would winner election

see case note designed preference orders wx wx
candidates e idx e idx j nx follow p vote wx
j

j

effect apply shift action affects
order precede p wx



fibredereck faliszewski niedermeier talmon


unbribed voters w w


w e e e e p e e e e r

r e e e e e e e e p
w









applying two shift actions effect w w


w e e e e e e p e e r















w r e e e e e e p e e


applying four shift actions effect w w


w e e e e e e e e p r






r e e e e p e e e e
w










figure illustration bribery actions affecting second voter group running
example note unbribed election every candidate e e obtains
points total pair colors x one type shift
shift actions effect voter w
actions affects voter wx wx
x
shift action affect voter second
effect voter wx
group applying multiple shift actions effect voter wx effect

ensures candidates e e receive points
voter wx
voters whereas applying number shift actions implies
candidate e receives points hence p cannot win illustrate
color pair running example

voters wx wx
number times multiple four one
candidates obtains points since way affect score
candidates lemma case p cannot winner illustrate effect
figure

solution example complete correctness proof let us illustrate
solution example
unbribed election selects vertex v v v edges e e e hence
example candidate e receives points p receives points
winner
applying four shift actions effect w effect w select v
instead v vertex color clique depicted bottom figure


ficombinatorial shift bribery

select e
applying four shift actions effect w effect w

instead e edge color color clique depicted
bottom figure candidate e e e e e e receives points
edge selecting voters points vertex selecting voters every
candidate receives points vertex selecting voters
points edge selecting voters hence p points winner
solution corresponds left colored triangle figure

correctness remains successful set shift actions
constructed borda combinatorial shift bribery instance
h colored clique graph g
part assume h colored clique h v g without loss
generality let h vz vzhh let eh v v v v h furthermore let zx
denote index edge ex representing edge eh vertex
eh
color x vertex color zx j eidx
j
easy verify following set shift actions successful
color h include zi h shift actions effects
voters wi wi
pair x distinct colors include zx shift actions effects

voters wx wx
words select vertices edges corresponding clique effect
scores candidates except receives lower score p
among tied winners
part assume successful set shift actions consider
election applying shift actions construction know edge selecting
voters pick exactly one edge pair distinct colors hence graph induced
edges contains vertices h different colors graph contains h
vertices graph must h colored clique graph cannot contain fewer
h vertices sake contradiction let us assume graph contains
h vertices thus two selected edges ej ej incident two different vertices
vi ej vi ej color construction way vertex selecting
voters work least one sets n vi n vi candidates set receive
points vertex selecting voters however since ej ej selected
edge selecting voters voters give points candidates e j e j
e j e j hence least one candidates receives points total
lemma p winner contradiction graph induced
selected edges must h colored clique

references
bartholdi iii j j tovey c trick hard control
election mathematical computer modelling


fibredereck faliszewski niedermeier talmon

baumeister faliszewski p lang j rothe j campaigns lazy voters
truncated ballots proceedings th international conference autonomous
agents multiagent systems aamas pp ifaamas
betzler n bredereck r chen j niedermeier r studies computational
aspects votinga parameterized complexity perspective multivariate algorithmic revolution beyond vol lncs pp springer
binkele raible erdelyi g fernau h goldsmith j mattei n rothe j
complexity probabilistic lobbying discrete optimization
boutilier c brafman r hoos c h h poole cp nets tool
representing reasoning conditional ceteris paribus preference statements
journal artificial intelligence
brandt f harrenstein p kardel k seedig h g takes
hardness voting constant number agents proceedings th international conference autonomous agents multiagent systems aamas
pp ifaamas
bredereck r chen j faliszewski p nichterlein niedermeier r prices
matter parameterized complexity shift bribery proceedings th
aaai conference artificial intelligence aaai pp aaai press
bredereck r chen j hartung kratsch niedermeier r suchy woeginger
g b multivariate complexity analysis lobbying multiple referenda
journal artificial intelligence
bredereck r faliszewski p niedermeier r skowron p talmon n elections candidates prices weights covering fourth
international conference algorithmic decision theory adt vol
lncs pp springer
bredereck r faliszewski p niedermeier r talmon n b large scale election campaigns combinatorial shift bribery proceedings th international
conference autonomous agents multiagent systems aamas pp
bredereck r faliszewski p niedermeier r talmon n complexity shift
bribery committee elections proceedings twenty ninth aaai conference
artificial intelligence aaai
bulteau l chen j faliszewski p niedermeier r talmon n combinatorial
voter control elections theoretical computer science
cary estimating margin victory instant runoff voting presented
electronic voting technology workshop workshop trustworthy elections
chen j faliszewski p niedermeier r talmon n elections voters candidate control easy proceedings th aaai conference
artificial intelligence aaai pp
christian r fellows r rosamond f slinko complexity
lobbying multiple referenda review economic design


ficombinatorial shift bribery

conitzer v lang j xia l hard control sequential elections via
agenda proceedings st international joint conference artificial
intelligence ijcai pp aaai press
dorn b schlotter multivariate complexity analysis swap bribery algorithmica
downey r g fellows r fundamentals parameterized complexity
springer
elkind e faliszewski p approximation campaign management
proceedings th international workshop internet network economics
wine vol lncs pp springer
elkind e faliszewski p slinko swap bribery proceedings nd
international symposium algorithmic game theory sagt vol
lncs pp springer
faliszewski p hemaspaandra e hemaspaandra l complexity protect
elections communications acm
faliszewski p hemaspaandra e hemaspaandra l hard bribery
elections journal artificial intelligence
faliszewski p hemaspaandra e hemaspaandra l rothe j b llull
copeland voting computationally resist bribery constructive control journal
artificial intelligence
faliszewski p reisch rothe j schend l complexity manipulation
bribery campaign management bucklin fallback voting proceedings
th international conference autonomous agents multiagent systems
aamas pp ifaamas
faliszewski p rothe j control bribery voting brandt f conitzer
v endriss u lang j procaccia eds handbook computational
social choice chap cambridge university press
flum j grohe parameterized complexity theory springer
gabow h n efficient reduction technique degree constrained subgraph
bidirected network flow proceedings th annual acm symposium
theory computing stoc pp acm
garey r johnson computers intractability guide theory
np completeness freeman
hazon n lin r kraus change groups collective decision
proceedings rd international joint conference artificial intelligence
ijcai pp aaai press
hulett h g woeginger g j multigraph realizations degree
sequences maximization easy minimization hard operations letters



fibredereck faliszewski niedermeier talmon

lang j xia l voting combinatorial domains brandt f conitzer v
endriss u lang j procaccia eds handbook computational social
choice chap cambridge university press
lenstra h w integer programming fixed number variables mathematics
operations
magrino rivest r shen e wagner computing margin victory irv elections presented electronic voting technology workshop workshop trustworthy elections
mathieson l szeider editing graphs satisfy degree constraints parameterized journal computer system sciences
mattei n goldsmith j klapper complexity bribery manipulation tournaments uncertain information proceedings th international florida artificial intelligence society conference flairs
pp aaai press
mattei n pini rossi f venable k b bribery voting combinatorial
domains easy proceedings th international conference autonomous
agents multiagent systems aamas pp ifaamas
niedermeier r invitation fixed parameter oxford university press
obraztsova elkind e complexity voting manipulation
randomized tie breaking proceedings nd international joint conference
artificial intelligence ijcai pp aaai press
obraztsova elkind e hazon n ties matter complexity voting manipulation revisited proceedings th international conference autonomous
agents multiagent systems aamas pp
rajagopalan vazirani v v primal dual rnc approximation
set cover covering integer programs siam journal computing

reisch rothe j schend l margin victory schulze cup
copeland elections complexity regular exact variants proceedings
seventh european starting ai researcher symposium stairs pp
ios press
schlotter faliszewski p elkind e campaign management approvaldriven voting rules proceedings th aaai conference artificial intelligence aaai pp aaai press
xia l computing margin victory voting rules proceedings
th acm conference electronic commerce ec pp acm
press




