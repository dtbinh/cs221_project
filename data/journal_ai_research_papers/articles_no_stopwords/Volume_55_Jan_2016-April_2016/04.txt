Journal Artificial Intelligence Research 55 (2016) 743-798

Submitted 06/15; published 03/16

Knowledge Representation Probabilistic
Spatio-Temporal Knowledge Bases
Francesco Parisi

FPARISI @ DIMES . UNICAL .

Department Informatics, Modeling,
Electronics System Engineering
University Calabria, Rende, Italy

John Grant

GRANT @ CS . UMD . EDU

Department Computer Science UMIACS
University Maryland, College Park, USA

Abstract
represent knowledge integrity constraints formalization probabilistic spatiotemporal knowledge bases. start defining syntax semantics formalization called
PST knowledge bases. definition generalizes earlier version, called SPOT,
declarative framework representation processing probabilistic spatio-temporal data
probability represented interval exact value unknown. augment
previous definition adding type non-atomic formula expresses integrity constraints.
result highly expressive formalism knowledge representation dealing probabilistic spatio-temporal data. obtain complexity results checking consistency PST
knowledge bases answering queries PST knowledge bases, specify tractable
cases. domains PST framework finite, extend results arbitrarily
large finite domains.

1. Introduction
Recent years seen great deal interest tracking moving objects. fundamental
issue many applications providing location-based context-aware services, emergency call-out assistance, live traffic reports, food drink finder, location-based advertising, mobile tourist guidance, pervasive healthcare, analysis animal behavior (Ahson & Ilyas, 2010;
Petrova & Wang, 2011; Karimi, 2013). innovative services becoming widely diffused
MarketsandMarkets forecasts location-based services market grow $8.12
billion 2014 $39.87 billion 2019 (MarketsandMarkets, 2014).
important aspect systems providing location-based context-aware services
need manage spatial temporal data together. reason, researchers investigated detail representation processing spatio-temporal data, AI (Cohn &
Hazarika, 2001; Gabelaia, Kontchakov, Kurucz, Wolter, & Zakharyaschev, 2005; Yaman, Nau,
& Subrahmanian, 2004, 2005a; Knapp, Merz, Wirsing, & Zappe, 2006) databases (Agarwal,
Arge, & Erickson, 2003; Pelanis, Saltenis, & Jensen, 2006). However, many cases location
objects uncertain: cases handled using probabilities (Parker, Yaman, Nau, &
Subrahmanian, 2007b; Tao, Cheng, Xiao, Ngai, Kao, & Prabhakar, 2005). Sometimes probabilities known exactly. Indeed, position object given time estimated
means location estimation method proximity (where location object
derived vicinity one antennas), fingerprinting (where radio signal strength meac
2016
AI Access Foundation. rights reserved.

fiPARISI & G RANT

surements produced moving object matched radio map built
system working), dead reckoning (where position object derived last
known position, assuming direction motion either speed travelled distance
known) (Ahson & Ilyas, 2010; Karimi, 2013). However, since location estimation methods
limited accuracy precision, asserted object given position
given time probability whose value belongs interval. SPOT (Spatial PrObabilistic Temporal) framework introduced Parker, Subrahmanian, Grant (2007a) provide
declarative framework representation processing probabilistic spatio-temporal data
probabilities known exactly.
SPOT framework able represent atomic statements form object id is/was/will
inside region r time probability interval [`, u]. allows representation
information concerning moving objects several application domains. cell phone provider
interested knowing cell phones range towers given time
probability (Bayir, Demirbas, & Eagle, 2010). transportation company interested
predicting vehicles given road given time (and probability)
order avoid congestion (Karbassi & Barth, 2003). Finally, retailer interested knowing
positions shoppers moving shopping mall order offer suitable customized coupons
discounts (Kurkovsky & Harihar, 2006).
framework introduced Parker et al. (2007a) extended Parker, Infantes, Subrahmanian, Grant (2008) Grant, Parisi, Parker, Subrahmanian (2010) include
specific integrity constraint that, given moving object, points reachable
given starting point one time unit. captures scenario objects speed limits
points reachable objects depending distance points. However,
even extended SPOT framework yet general enough represent additional knowledge concerning movements objects. Examples knowledge may aware cannot
represent SPOT framework are, instance, fact
(i) cannot two distinct objects given region given time interval (as happens
airport passenger screening);
(ii) object cannot reach given region starting given location less given
amount time (as happens vehicles whose route options well speed
limited);
(iii) object go away given region stayed least given amount
time (as happens production lines assembling several parts requires given amount
time).
overcome limitation allow kind knowledge represented, define probabilistic spatio-temporal (PST) knowledge bases (KBs) consisting atomic statements,
representable SPOT framework spatio-temporal denial (abbreviated std) formulas, general class formulas account three cases above, many (including
reachability constraint Parker et al., 2008; Grant et al., 2010).
focus paper systematic study knowledge representation probabilistic
spatio-temporal data. start defining concept PST KB provide formal semantics, given terms worlds, interpretations, models (Section 2). define
concept consistent PST KB, characterize complexity checking consistency, showing
744

fiK NOWLEDGE R EPRESENTATION P ROBABILISTIC PATIO -T EMPORAL K NOWLEDGE BASES

NP-complete general, even presence binary std-formulas (Section 3).
present sufficient condition checking consistency relies feasibility
set mixed-binary linear inequalities (Section 3.2), necessary condition using instead set
linear inequalities (Section 3.3). showing special case unary std-formulas
tractable (Section 3.4), deal restricted expressive class binary std-formulas
identify cases consistency checking problem tractable (Section 3.5). address
problem answering selection queries PST KBs optimistic cautious
semantics (Section 4). show checking consistency exploited answer kinds
queries PST KBs, characterize complexity query answering problem (Section 4.2).
that, derive several sets linear inequalities answering queries (Section 4.3). Finally,
extend framework case time, space, number objects increased
arbitrarily large finite domains, show PST KB either eventually consistent eventually inconsistent (Section 5). discuss related work (Section 6). Section 7 summarizes
paper. suggest research projects Section 8.

2. PST Framework
section introduces syntax semantics PST KBs generalizing SPOT framework introduced Parker et al. (2007a) extended Parker et al. (2008) Grant et al. (2010).
Basically, define PST KB augmenting previous framework non-atomic formulas
(i.e., spatio-temporal denial formulas) represent integrity constraints. way make
statements whose meaning certain object trajectories cannot occur.
2.1 Syntax
assume existence three types constant symbols: object symbols, time value symbols,
spatial region symbols. constants ID = {id1 , . . . , idm }, = [0, 1, . . . , tmax]
(where tmax integer), set r Space = {p1 , . . . , pn }. r region Space.
apply unique name assumption; so, instance idi idj 6= j different objects;
similarly, pi pj 6= j different points. use variables type: object
variables, time variables, spatial variables.
spatio-temporal atom (st-atom, short) expression form loc(X, Y, Z), where:
(i) X object variable constant id ID,
(ii) space 1 variable constant r Space,
(iii) Z time variable constant .
say st-atom loc(X, Y, Z) ground arguments X, Y, Z constants. instance, loc(id, r, t), id ID, r Space, ground st-atom. intuitive
meaning loc(id, r, t) object id is/was/will inside region r time t.
Definition 1 (PST atom). PST atom ground st-atom loc(id, r, t) annotated probability
interval [`, u] [0, 1] (with ` u rational numbers), denoted loc(id, r, t)[`, u].
1. write Space refer set points used PST KB. write space refer spatial aspect
probabilistic spatio-temporal knowledge.

745

fiPARISI & G RANT

7

loc(id1 , c, 9)[.9, 1]
loc(id1 , a, 1)[.4, .7]
loc(id1 , b, 1)[.4, .9]
loc(id1 , d, 15)[.6, 1]
loc(id1 , e, 18)[.7, 1]
loc(id2 , b, 2)[.5, .9]
loc(id2 , c, 12)[.9, 1]
loc(id2 , d, 18)[.6, .9]
loc(id2 , d, 20)[.2, .9]

6
5

e
c

4



3
2

b

1



0
0

1

2

3

4

5

6

7

(a)

(b)

Figure 1: (a) map airport area (names regions bottom-right corner);
PST atoms.

(b)

Intuitively, PST atom loc(id, r, t)[`, u] says object id is/was/will inside region r
time probability interval [`, u]. Hence, PST atoms represent information
past present, information future, methods predicting
destination moving objects (Mittu & Ross, 2003; Hammel, Rogers, & Yetso, 2003; Southey, Loh,
& Wilkinson, 2007), querying predictive databases (Akdere, Cetintemel, Riondato, Upfal,
& Zdonik, 2011; Parisi, Sliva, & Subrahmanian, 2013).
original SPOT definition, ease implementation, Space grid within
rectangular regions considered; however, general framework, Space arbitrary
region nonempty subset Space. Still, convenience use rectangular
regions running example.
Example 1. Consider airport security system collects data biometric sensors
well Bluetooth WiFi enabled devices. Biometric data faces recognized sensors (Li & Jain, 2011) matched given profiles (such checked-in passports,
wanted criminals). Similarly, device identifiers (e.g., MAC addresses) recognized areas
covered network antennas matched profiles collected airport hotspots (such
logins, possibly associated passport numbers). simplified plan airport area reported
Figure 1(a), regions a, b, c, d, e covered sensors and/or antennas highlighted.
entered area, passengers typically move path delimited queue dividers (represented dotted lines figure, overlapping regions b), reach room
upper-half right side security checks performed (region c included room).
Next, passengers spend time hall room (overlapping region d), finally go
towards exit (near region e).
Suppose security system uses SPOT framework represent information
every PST atom consists profile id resulting matching phase, region
sensor/antenna recognizing profile operating, time point profile recognized,
lower upper probability bounds recognizing process. instance, PST atom
loc(id1 , c, 9)[.9, 1] says profile id id1 region c time 9 probability
746

fiK NOWLEDGE R EPRESENTATION P ROBABILISTIC PATIO -T EMPORAL K NOWLEDGE BASES

interval [.9, 1] (the high-accuracy sensors used security check points located region c entail
narrow probability interval upper bound equal 1). Atom loc(id1 , a, 1)[.4, .7] says
id1 recognized region earlier time 1 probability [.4, .7]. Assume
information represented set atoms Figure 1(b), includes two atoms above.
2
PST atoms used represent output process aimed tracking objects basis
sensor measurements. Generally, sensors characterized likelihood function providing
conditional probability obtaining measurement given value parameter ,
distance tracked object sensor. instance, likelihood function l()
represent probability detecting object distance meters sensor
position. However, likelihood function generally probability distribution viewed
function . may l(1 ) = .9, l(2 ) = .4, l(3 ) = .1, l( 3 ) = 0, distances
1 < 2 < 3 . information encoded using PST atoms loc(id, ri , t)[l(i ), l(i )]
region ri determined distance (more general probability intervals used
likelihood values know exactly).2 However, several object tracking techniques combine
information likelihood function prior position distribution obtain probability
distribution Space. PST atoms represent kind information defining PST atom
single probability point Space. 3 refer reader Related Work section
detailed discussion object tracking techniques relationship framework.
Although PST atoms express much useful information, cannot express additional knowledge integrity constraints provide. paper add integrity constraints original
PST framework form PST KBs. integrity constraints form spatio-temporal denial formulas (std formulas short). soon see formulas expressive enough
capture large set conditions. Basically, std formula universally quantified negation
conjunctions st-atoms built-in predicates. note std formulas related subclass
first-order formulas introduced Doder, Grant, Ognjanovic (2013), except
(the std formulas) allow built-in predicates well. case, focus Doder et al.
axiomatization various probabilistic spatio-temporal logics.
Definition 2 (Std-formula). std-formula expression form
k


^
loc(Xi , Yi , Zi ) (X) (Y) (Z)
X, Y, Z
i=1

where:
X set object variables, set space variables, Z set time variables;
loc(Xi , Yi , Zi ), [1..k], st-atoms, Xi , Yi , Zi may variables constants appropriate type, that, Xi (resp., Yi , Zi ) variable, occurs
X (resp, Y, Z). Moreover, variable X, Y, Z occurs least one st-atom
loc(Xi , Yi , Zi ), [1..k];
2. note PST KBs resulting PST atoms encoding information provided likelihood function may
inconsistent fact likelihood function need probability distribution. turn
clearer introducing formal semantics PST KBs Section 2.2.
3. PST KBs resulting PST atoms encoding output tracking turn consistent.

747

fiPARISI & G RANT

(X) conjunction built-in predicates form Xi Xj , Xi Xj either
variables occurring X ids ID, operator {=, 6=};
(Y) conjunction built-in predicates form Yi Yj , Yi Yj either
variables occurring regions (i.e., non-empty subsets Space), comparison
operator {=, 6=, ov, nov} (where ov stands overlaps nov stands
overlap);
(Z) conjunction built-in predicates form Zi Zj Zi Zj either
time value variable Z may followed +n n positive integer
operator {=, 6=, <, }.
Example 2. running example, region c security checks one individual time
performed. constraint cannot two distinct objects region c time 1
20 expressed following std-formula:
f1 = X1 , X2 , Z1 [loc(X1 , c, Z1 ) loc(X2 , c, Z1 ) X1 6= X2 Z1 1 20 Z1 ].
Due distance several obstacles entrance exit,
constraint object reach region e starting region less 10 time units,
expressed as:
f2 = X1 , Z1 , Z2 [loc(X1 , a, Z1 ) loc(X1 , e, Z2 ) Z1 < Z2 Z2 < Z1 + 10].
Moreover, security check individual takes least 2 time units, know
object id go away region c stayed least 2 time units,
expressed as:
f3 = Y1 , Y2 , Z1 , Z2 , Z3 [loc(id, Y1 , Z1 ) loc(id, c, Z2 ) loc(id, Y2 , Z3 ) Y1 nov c Y2 nov c
Z2 = Z1 + 1 Z2 < Z3 Z2 + 2 Z3 ].
2
work later useful distinguish std-formulas based number (k) statoms them. particular, unary std-formulas k = 1 binary std-formulas k = 2.
Example 2 f1 f2 binary std-formulas f3 ternary std-formula.
initial SPOT framework (Parker et al., 2007a) PST atoms considered. Moreover, assumed points Space reachable points objects.
overcome limitation, Grant et al. (2010) extended SPOT framework introducing reachability definitions. reachability atom written reachableid (p, q) id ID object
id, p, q Space. Intuitively, reachability atom says possible object id
reach location q location p one unit time. Hence, reachable one time unit
depends locations p q, object id. show, reachability
expressed formalism integrity constraint. However, order formulate reachability
framework denial formulas, need deal reachable, rather
reachable.
Example 3. Let r region consisting points q reachable p one time
unit. corresponding std-formula is:
X1 , Z1 , Z2 [loc(X1 , {p}, Z1 ) loc(X1 , r, Z2 ) Z2 = Z1 + 1].
2
integrity constraint used points reachable p one time unit.
express points reached p number time units, 1,
changing Z1 + 1 Z1 + i.
748

fiK NOWLEDGE R EPRESENTATION P ROBABILISTIC PATIO -T EMPORAL K NOWLEDGE BASES

Example 4. running example, following std-formula states points region
r = {(x, y)|0 x 5 = 3} (i.e., close upper-side wall dividing hall
room one queue dividers) reachable less 3 time units
point r0 = {(x, y)|0 x 5 = 2} (i.e., points close side wall):
f4 = X1 , Z1 , Z2 [loc(X1 , r0 , Z1 ) loc(X1 , r, Z2 ) Z1 < Z2 Z2 < Z1 + 3].
2
ready formally define PST KBs.
Definition 3 (PST KB). Given sets ID, , Space, PST KB K pair hA, Fi,
finite set PST atoms F finite set std-formulas using object symbols ID, time
values , spatial regions consisting sets points Space.
Example 5. running example, ID = {id1 , id2 }, = [0, 20], Space set points (x, y)
0 x 7 0 7, PST KB Kex pair hAex , Fex i, Aex
set consisting PST atoms Figure 1(b), Fex set {f1 , f2 , f3 , f4 } std-formulas
defined Examples 2 4.
2
2.2 Semantics
semantics PST KB defined concept worlds. introducing
concept, define ground std-formulas.
Given std-formula f form Definition 2, denote f set substitutions variables X, Y, Z constants ID, S, , respectively,
set subsets Space contain single point. 4 Moreover, given substitution
f , denote (f ) ground std-formula resulting applying f : (f ) =


Vk

i=1 loc((Xi ), (Yi ), (Zi )) ((X)) ((Y)) ((Z)) . ground conjunction
built-in predicates ((X)) ((Y)) ((Z)) evaluates either true false. true
omit it. (f ) either negation conjunction ground st-atoms truth value true
(when conjunction built-in predicates evaluates false).
Example 6. Consider formula f1 = X1 , X2 , Z1 [loc(X1 , c, Z1 )loc(X2 , c, Z1 )X1 6= X2
Z1 1 20 Z1 ] introduced Example 2, substitution = {X1 /id1 , X2 /id2 , Z1 /6},
id1 , id2 ID 6 tmax. Thus, (f1 ) = [loc(id1 , c, 6) loc(id2 , c, 6)],
conjunction ground built-in predicates id1 6= id2 6 1 6 20, evaluating true,
reported (f1 ).
2
Definition 4 (World). world w function, w : ID Space.
Basically, world w specifies trajectory id ID. is, id ID, w says
Space object id was/is/will time . particular, means object
one location time.5 However, location may contain multiple objects. easy
see world w represented set {loc(id, {p}, t)| w(id, t) = p} ground st-atoms.
4. use singleton subsets Space order reduce number possible instantiations variables
exponential linear size Space, without serious effect meanings std-formulas.
5. examples may useful allow objects enter leave space consideration.
accomplished, instance, one external points outside space objects may located.
simplify matters assume Space contains points.

749

fiPARISI & G RANT

Example 7. World w1 describing trajectories id1 id2 time units [0, 20]
w1 (id1 , t) = (4, 1) [0, 5], w1 (id1 , t) = (7, 2) [6, 7], w1 (id1 , t) = (7, 4)
[8, 10], w1 (id1 , t) = (4, 4) [11, 16], w1 (id1 , t) = (1, 6) [17, 20], w1 (id2 , t) =
(4, 1) [0, 11], w1 (id2 , t) = (7, 5) [12, 15], w1 (id2 , t) = (7, 7) [16, 16],
w1 (id2 , t) = (4, 5) [17, 20].
2
Definition 5 (Satisfaction). Given world w ground st-atom = loc(id, r, t), say w
satisfies (denoted
r. Moreover, say w satisfies conjunction
Vk w |= a) iff w(id, t) V
ground st-atoms i=1 ai (denoted w |= ki=1 ai ) iff w |= ai [1..k]. Finally, world w satisfies
std-formula f (denoted w |= f ) iff substitution f , w |= (f ).
Note that, negation front f , w |= (f ) iff w satisfy ground st-atom
(f ) conjunction ground built-in predicates (f ) evaluates false.
Example 8. World w1 Example 7 satisfies st-atom loc(id1 , b, 0), w1 (id1 , 0) = (4, 1)
belongs region b (see Figure 1(a)). Moreover, w1 |= [loc(id1 , b, 0) loc(id1 , e, 15)] w1 6|=
loc(id1 , e, 15), since w1 (id1 , 15) = (4, 4) 6 e.
2
following, denote W(K) set worlds PST KB K. Moreover,
order simplify formulas, assume w ranges W(K).
interpretation PST KB K probability distribution function (PDF) W(K),
is, function assigning probability value world W(K). I(w) probability
w describes actual trajectories objects.6 interpretations models K
case write instead I.
Definition 6 (Model). model PST KB K = hA, interpretation K that:
P
(w) [`, u];
loc(id, r, t)[`, u] A,
w | w|=loc(id,r,t)

f F,

P

(w) = 0.

w | w6|=f

first condition definition means that, atom = loc(id, r, t)[`, u] A,
sum probabilities assigned worlds satisfying st-atom loc(id, r, t)
belong probability interval [`, u] specified a. second condition means every world
satisfying formula f F must assigned probability equal 0.
Example 9. Let w1 world introduced Example 7. Let w2 w1 except w2 (id1 , 1) =
(3, 2), let w3 w2 except w3 (id2 , 2) = (2, 2), w3 (id2 , t) = (0, 3) [18..20]. Let
(w1 ) = .7 (w2 ) = .2 (w3 ) = .1, (w) = 0 worlds
W(Kex ). checked satisfies conditions DefinitionP6 PST KB Kex
running example. instance, atom loc(id1 , a, 1)[.4, .7] Aex , w|w|=loc(id1 ,a,1) (w) =
(w1 ) = .7 [.4, .7] (note that, time 1, w2 (id1 , 1) = w3 (id1 , 1) = (3, 2) region a).
Moreover, easy check w1 , w2 , w3 satisfy every std-formula Fex . Thus, model
Kex .
2
say PST KB K consistent iff model it. set models K
denoted M(K).
6. PDF, I(w) non-negative sums 1 worlds.

750

fiK NOWLEDGE R EPRESENTATION P ROBABILISTIC PATIO -T EMPORAL K NOWLEDGE BASES

Definition 7 (Consistency). PST KB K consistent iff M(K) 6= .
Example 10. PST KB Kex running example consistent, exists model
Example 9 it.
2

3. Checking Consistency PST KBs
section, address fundamental problem checking consistency PST KBs.
Given PST KB K = hA, Fi, consistency checking problem deciding whether M(K) 6= ,
is, whether model K.
Section 3.1 show consistency checking problem NP-complete. goal
rest section find efficient ways determine consistency. Section 3.2 find
sufficient condition using set mixed-binary linear inequalities. Then, Section 3.3 find
necessary condition using different set linear inequalities. deal special case
std-formulas unary Section 3.4. Finally investigate detail case
std-formulas either unary binary Section 3.5.
complexity analysis take size PST KB K = hA, Fi, whose PST atoms
std-formulas built constants ID, , Space, number PST atoms
std-formulas K plus number items ID, , Space, is, |K| = |A| + |F| + |ID| +
|T | + |Space|.
3.1 Checking Consistency NP-Complete
considering case general PST KBs, first note consistency checking problem addressed initial SPOT framework Parker et al. (2007a) PST atoms
considered. special case PST KB concept F = . shown
consistency PST KB K = hA, (using notation) checked polynomial
time w.r.t. size K solving set linear inequalities whose variables vid,t,p represent
probability object id point p time t.
reason presenting result Parker et al. twofold: first, compare complexity
consistency checking problem general PST KBs initial SPOT framework;
second, use prove tractability results PST KBs.
Fact 1 (Parker et al.). Let K = hA, PST KB (where set std-formulas empty).
K consistent iff feasible solution CC(K), CC(K) consists following
(in)equalities:
P
(1) loc(id, r, t)[`, u] A: `
vid,t,p u;
pr

(2) id ID, :

P

vid,t,p = 1;

pSpace

(3) id ID, T, p Space: vid,t,p 0.
Basically, inequalities (1) ensure solution CC(K) places object r probability ` u, required atom (id, r, t, [`, u]). Inequalities (2) (3) ensure
id t, vid,t,p variables jointly represent probability distribution. Fact 1 correct
every model K corresponds solution CC(K) sum
751

fiPARISI & G RANT

probabilities assigned worlds K satisfying st-atom loc(id, {p}, t) equal
value assigned variable vid,t,p .
state first result: consistency checking problem NP-complete.
Theorem 1. Given PST KB K = hA, Fi, deciding whether K consistent NP-complete.
Proof. (Membership). show checking consistency K reduced deciding
instance K (an extension to) Probabilistic Satisfiability (PSAT) problem (Hailperin, 1984;
Nilsson, 1986), NP (Georgakopoulos, Kavvadias, & Papadimitriou, 1988). Given set
clauses C1 , . . . , Cm , consisting disjunction one literals constructed
propositional variables x1 , . . . , xn , probability values Pr(C1 ), . . . , Pr(Cm )
clause, PSAT problem deciding whether probability distribution set
2n truth assignments propositional variables x1 , . . . , xn clause Ci ,
sum probabilities assigned truth assignments satisfying Ci equal Pr(Ci ),
[1..m]. PSAT generalization SAT, obtained PSAT assigning probability
equal one clause. Georgakopoulos et al. formulated PSAT terms feasibility
system + 1 linear equations using 2n variables corresponding probabilities assigned
truth assignments. show existence polynomial-size witness, following result
linear programming theory exploited Georgakopoulos et al.: system linear
equalities feasible solution, admits least one feasible solution nonzero variables (Papadimitriou & Steiglitz, 1982). follows consider extension
PSAT clause Ci associated probability interval [Pr` (Ci ), Pru (Ci )], instead
single value. membership NP extension straightforwardly follows
membership proof provided Georgakopoulos et al. PSAT, using probability intervals
still formulated linear system introduced Georgakopoulos et al. reducing doublesided inequalities equalities single bounded slack variables (Jaumard, Hansen, & de Aragao,
1991).
Given PST KB K = hA, Fi, define instance K PSAT clause associated probability interval. Let U set propositional variables xid,p,t
id ID, p Space, (i.e., st-atom loc(id, {p}, t) corresponds propositional
variable xid,p,t U ). conjunction K clauses associated probability intervals defined
follows:
W
PST atom = loc(id, r, t)[`, u] A, K consists clause Ca =
xid,p,t .
pr

probability interval [Pr` (Ca ), Pru (Ca )] equal [`, u].
f F f (f ) = [

k
V

loc((Xi ), (Yi ), (Zi ))], K consists

i=1

clause C(f ) =

k
W
i=1

x(Xi ),(Yi ),(Zi ) , whose probability interval [1, 1].

id ID , K consists clause Cid,t =

W

xid,p,t , whose

pSpace

probability interval [1, 1].
id ID, , pi , pj Space, pi 6= pj , K consists clause
Cid,t,pi ,pj = xid,pi ,t xid,pj ,t whose probability interval [1, 1].
752

fiK NOWLEDGE R EPRESENTATION P ROBABILISTIC PATIO -T EMPORAL K NOWLEDGE BASES

easy see world w W(K), truth assignment w variables
U w (xid,p,t ) true iff w(id, t) = p. However, truth assignments
correspond world W(K) (for instance, (xid,pi ,t ) (xid,pj ,t ),
pi 6= pj , true). show K consistent iff K satisfiable.
() Given model K, show PDF set truth assignments
clause C K , sum probabilities assigned truth assignments
satisfying C belongs [Pr` (C), Pru (C)]. Let truth assignment w corresponding world w W(K), (w ) = (w) ( ) = 0 truth assignments
corresponding world. easy check conditions Definition 6 entail clauses
form Ca C(f ) satisfied , clauses form Cid,t Cid,t,pi ,pj satisfied
well since w1 , . . . w|W(K)| may assigned probability different 0
every world w W(K) definition assigns exactly one point Space id, pair.
() Let PDF set truth assignments clause C K , sum
probabilities assigned truth assignments satisfying C belongs [Pr` (C), Pru (C)].
model K defined (w) = (w ) truth assignment corresponding world w W(K). Since clauses form Cid,t (resp., Cid,t,pi ,pj ) satisfied
, truth assignments (xid,p,t )=false p Space (resp., (xid,pi ,t )=true
(xid,pj ,t )=true, pi , pj Space, pi 6= pj ) assigned probability 0. Hence,
truth assignments correspond world, fact clauses form Ca C(f )
satisfied entails conditions Definition 6 hold.
(Hardness). show reduction problem NP-hard Hamiltonian path problem (Papadimitriou, 1994), is, problem checking whether path directed graph G
visits vertex G exactly once.
Given directed graph G = hV, Ei, V = {v0 , . . . , vk } set vertices, E
set pairs (vi , vj ) vi , vj V , construct instance problem follows. Let
ID = {id}, Space = V , = [0, . . . , k]. K pair hA, consists PST
atom loc(id, {v0 }, 0)[1, 1] F consists std-formulas f1i (with [0..k]) f2 that:
f1i = Z1 , Z2 [loc(id, {vi }, Z1 ) loc(id, Space\V 0 , Z2 ) Z2 = Z1 + 1] V 0
set vertices vj s.t. (vi , vj ) E. formula says points id reach starting
vi one time step V 0 . (f1i exist V 0 = Space.)
f2 = Y1 , Z1 , Z2 [loc(id, Y1 , Z1 ) loc(id, Y1 , Z2 ) Z1 6= Z2 ], saying id
location distinct time values.
show K consistent iff Hamiltonian path G.
() one id A, every world w W(K) w places id vertex
V time value . K consistent, model M(K)
assigns probability greater zero worlds w f F, w |= f . particular,
let w one world. fact w |= f1i entails [0, k 1], w(id, t) = vi
w(id, + 1) = vj iff (vi , vj ) E. Moreover, fact w |= f2 entails t, t0 [0, k], 6= t0 ,
w(id, t) 6= w(id, t0 ), meaning id never placed w vertex different time
units. Since loc(id, v0 , 0)[1, 1] A, every world assigned probability greater zero
w(id, 0) = v0 . follows every world w W(K) assigned
M(K) probability greater zero encodes Hamiltonian path G whose first vertex
v0 . fact, w W(K) (w) > 0 following properties hold: (i) w(id, 0) = v0 ,
753

fiPARISI & G RANT

(ii) [0, k 1], w(id, t) = vi , w(id, + 1) = vj iff (vi , vj ) E. (iii) t, t0 [0, k], 6= t0 ,
w(id, t) 6= w(id, t0 ). Conditions (i) (ii) entail = w(id, 0), w(id, 1), . . . , w(id, k)
path G starting vertex v0 , condition (iii) entails vertex v V occurs exactly
.
() Let Hamiltonian path G. denote [i] (with [0..k]) i-th vertex .
W.l.o.g. assume first vertex v0 , is, [0] = v0 . show K
consistent finding model it. Let function W worlds w W,
(w) = 0, except world w that: w (id, 0) = [0] = v0 , [1, k],
w (id, t) = [t]. easy see w |= F. fact, [0..k], f1i satisfied w , since
fact path G entails [0, k 1], w (id, t) = vi w (id, t+1) = vj
edge (vi , vj ) edge G. Moreover, f2 satisfied w , since fact Hamiltonian
path entails w places id different locations (i.e., vertices G) different times. Since

w
aP
probability different 0. Let (w ) = 1. Therefore,
P |= F, assigned

w|w|=loc(id,v0 ,0) (w) = (w )+ w|w6=w w|=loc(id,v0 ,0) (w) = 1, condition required
atom loc(id, v0 , 0)[1, 1] holds too. Thus, model K.
note NP-hardness holds already binary std-formulas. Section 3.5 find
conditions make consistency checking problem tractable binary std-formulas. reduction shown membership proof, consistency checking problem PSAT, would
allow us define additional tractable cases PSAT instances resulting reduction
tractable. However, discussed Section 6, tractable cases identified PSAT (Georgakopoulos et al., 1988; Andersen & Pretolani, 2001) carry
framework.
3.2 Sufficient Condition Checking Consistency
present set mixed-binary linear inequalities whose feasibility entails consistency PST
KB K = hA, Fi. explained Section 3.1, Parker et al. (2007a) showed consistency
PST KB K = hA, (using notation) checked polynomial time w.r.t. size
K solving set linear inequalities whose variables vid,t,p represent probability object
id point p time t. Here, start set linear inequalities augment
inequalities ensuring so-obtained set linear inequalities feasible solution
every ground std-formula derived F satisfied. achieve this, need introduce
binary variables , thus obtaining set mixed-binary linear inequalities.
Definition 8 (MBL(K)). Let K = hA, Fi. MBL(K) consists following (in)equalities:
P
(1) loc(id, r, t)[`, u] A: `
vid,t,p u;
pr

(2) id ID, :

P

vid,t,p = 1;

pSpace

(3) id ID, T, p Space: vid,t,p 0;
(4) f F f (f ) = [

k
V
i=1

number st-atoms f , (in)equalities:
754

loc((Xi ), (Yi ), (Zi ))], k

fiK NOWLEDGE R EPRESENTATION P ROBABILISTIC PATIO -T EMPORAL K NOWLEDGE BASES

P
(a) [1..k] :
p(Yi ) v(Xi ),(Zi ),p ;
Pk
(b)
i=1 = k 1;
(c) [1..k] : {0, 1}.
Basically, inequalities (1) ensure solution MBL(K) places object r probability ` u, required atom (id, r, t, [`, u]). Inequalities (2) (3) ensure
id t, vid,t,p variables jointly represent probability distribution. Moreover,
ground st-atom loc((Xi ), (Yi ), (Zi )) ground std-formula (f ), inequalities (4)(a)
(4)(c) entail probability v(Xi ),(Zi ),p object (Xi ) point p region (Yi )
time (Zi ) either constrained 0 free take value greater 1. Intuitively
enough, v(Xi ),(Zi ),p enforced zero (i.e., = 0), object (Xi ) region
(Yi ) time (Zi ). hand, v(Xi ),(Zi ),p left free take value less
equal one (i.e., = 1), (Xi ) may may region (Yi ) time (Zi ). Finally,
equality (4)(b) entails least one k ground st-atoms loc((Xi ), (Yi ), (Zi ))
(f ) (Xi ) placed point (Yi ) time (Zi ).
Example 11. Consider ground std-formula (f1 ) = [loc(id1 , c, 6) loc(id2 , c, 6)] Example 6. Then, inequalities MBL(K) corresponding (f1 ) are:
P
P
(4b) 1 + 2 = 1;
(4c) 1 , 2 {0, 1}.
2
(4a) pc vid1 ,6,p 1 ;
pc vid2 ,6,p 2 ;
following theorem states MBL(K) used check K consistent.
Theorem 2. feasible solution MBL(K) K consistent.
Proof. Let solution MBL(K), (vid,t,p ) value assigned variable vid,t,p
.
Q define function W(K) that, world w W(K), (w) =
idID,tT,w(id,t)=p (vid,t,p ), (w) product values assigned solution
variables vid,t,p w(id, t) = p. shown that, (in)equalities (2) (3)
definition
MBL(K) entail PDF W(K). Moreover,
since (vid,t,p )
P
P

(w),


atom
loc(id,
r,
t)[`,
u]

A,
equal

w|w|=loc(id,r,t) (w) =
P P w|w|=loc(id,t,p)
P
pr
w|w|=loc(id,t,p) (w) =
pr (vid,t,p ) [`, u]. Given f F f (f )
Vk
logically equivalent negation conjunction st-atoms
i=1 loc((Xi ), (Yi ),
P
(Zi )), inequalities (4)(a-c) entail [1..k] p(Yi ) (v(Xi ),(Zi ),p ) =
0. Thus p (Yi ), (v(Xi ),(Zi ),p ) = 0. Hence, world w W(K) w((Xi ),
(Zi )) = p, (w) = 0 due presence factor
P (v(Xi ),(Zi ),p ) = 0 product defining (w). Therefore, std-formula f F, w | w6|=f (w) = 0; hence model
K K consistent.
consequence Theorem 2 well-known techniques solving linear optimization
problems adopted address consistency checking problem, thus taking advantage
results 50 years research integer linear programming (Junger et al., 2010).
following example shows converse Theorem 2 hold (K may consistent even feasible solution MBL(K)).
Example 12. Let ID = {id}, = [0, 1], Space = {p0 , p1 }, K = hA, where:
= {loc(id, {p0 }, 0)[0.5, 0.5], loc(id, {p1 }, 1)[0.5, 0.5]}
F = {[loc(id, {p0 }, 0) loc(id, {p1 }, 1)}.
755

fiPARISI & G RANT

Thus, W = {w1 , w2 , w3 , w4 } where: w1 (id, 0) = p0 , w1 (id, 1) = p0 , w2 (id, 0) = p0 , w2 (id, 1) =
p1 , w3 (id, 0) = p1 , w3 (id, 1) = p0 , w4 (id, 0) = p1 , w4 (id, 1) = p1 .
easy check (w1 ) = 0.5, (w2 ) = 0, (w3 ) = 0, (w4 ) = 0.5
model K. MBL(K) includes following inequalities:
0.5 vid,0,p0 0.5; 0.5 vid,1,p1 0.5; vid,0,p0 + vid,0,p1 = 1; vid,1,p0 + vid,1,p1 = 1;
vid,0,p0 1 ; vid,1,p1 2 ; 1 + 2 = 1; 1 , 2 {0, 1};
vid,0,p0 0, vid,0,p1 0, vid,1,p0 0, vid,1,p1 0.
first two inequalities force vid,0,p0 vid,1,p1 0.5. second line 1
2 must equal 1. contradicts 1 + 2 = 1. Hence MBL(K) feasible solution.
2
3.3 Necessary Condition Checking Consistency
following, given PST KB K, introduce set NC(K) linear inequalities K
consistent feasible solution NC(K). is, existence feasible solution
NC(K) turns necessary condition consistency K.
MBL(K) (see Definition 8), NC(K) uses rational variables vid,t,p representing probability
object id point p time t. kinds variables used definition
NC(K), case obtain pure system linear inequalities.
Definition 9 (NC(K)). Let K = hA, PST KB. NC(K) consists following (in)equalities:
P
vid,t,p u;
(1) loc(id, r, t)[`, u] A: `
pr

(2) id ID, :

P

vid,t,p = 1;

pSpace

(3) id ID, T, p Space: vid,t,p 0;
V
(4) f F (with k conjuncts) f s.t. (f ) = [ ki=1 loc((Xi ), (Yi ), (Zi ))],
inequalities:
Pk
p1 (Y1 ), p2 (Y2 ), . . . , pk (Yk ),
i=1 v(Xi ),(Zi ),pi k 1.
Herein, (in)equalities (1)-(3) MBL(K) Definition 8,
meaning. addition,
V NC(K) contains inequalities (4) impose that, ground stdformula form ki=1 loc(idi , ri , ti ) k-tuple points hp1 , p2 , . . . , pk belonging
respectively regions hr1 , r2 , . . . , rk i, sum probabilities vidi ,pi ,ti object idi
point pi time ti , [1..k], greater k 1. stated following theorem,
set consisting inequalities (4) along inequalities (1)-(3) turns feasible solution
corresponding PST KB inconsistent.
Theorem 3. feasible solution NC(K), K consistent.
Proof. Suppose NC(K) feasible solution. due fact feasible
solution CC(hA, (introduced Fact 1), PST KB hA, consistent, thus K =
hA, consistent well (since set M(hA, Fi) models K = hA, subset
set M(hA, i) models K0 = hA, i).
Otherwise, feasible solution CC(hA, i) thus NC(K) feasible solution
due fact least one inequalities item (4) Definition 9 satisfied every
756

fiK NOWLEDGE R EPRESENTATION P ROBABILISTIC PATIO -T EMPORAL K NOWLEDGE BASES

solution
V CC(hA, i). is, solution CC(hA, i), ground std- formula
(f ) = ki=1 loc((Xi ), (Yi ), (Zi )) exist p1 (Y1 ), p2 (Y2 ), . . . , pk
P
(Yk ), ki=1 (v(Xi ),(Zi ),pi ) > k 1.
Since every model 0 K0 = hA, corresponds solution CC(hA, i)
sum probabilities assigned
0 worlds satisfying st-atom loc(id, {p}, t) equal
Pk
(vid,t,p ), fact i=1 (v(Xi ),(Zi ),pi ) > k 1 holds entails that, model 0
K0 , sum probabilities assigned 0 worlds satisfying least one st-atoms
(f ) greater k 1, is,
0 M(K0 ),

k
X

X

0 (w) > k 1

(1)

i=1 w|=loc((Xi ),(Yi ),(Zi ))

recall use following well-known result minimum probability conjunction probabilistic events among correlation known. Given n probabilistic events
e1 , . . . , en whose (marginal)
probabilities Pr(e1 ), . . . , Pr(en ) respectively, Pr(e1 en )
P
max (0, 1 n + ni=1 Pr(ei )). one Frechet inequalities (the one provides
upper bound maximum probability) implicitly reported already Booles work (1854).
setting, viewing st-atoms probabilistic events, Frechet inequality entails
model 0 K0 , probability set st-atoms together satisfy world greater
equal maximum zero 1 |S| plus sum probabilities
st-atom according 0 . is,


X
W(K0 )

w
S, w |=


X

0 (w) max 0, 1 |S| +


X
W(K0 ),

w
w |=



0 (w)


(2)

Equation (1) entails model 0 K0 , term right-hand side Equation (2) evaluates value greater zero set st-atoms (f ) considered.
Therefore, model 0 K0 , sum probabilities worlds satisfying
st-atoms (f ) greater zero. Since set M(hA, Fi) models K = hA,
subset set M(hA, i) models K0 = hA, i, property holds model
K0 . Thus, 0 model K. Hence K inconsistent.
example usage Theorem 3 given below, checking NC(K)
feasible solution conclude PST KB K consistent.
Example 13. Let ID = {id}, = [0, 1, 2], Space = {p0 , p1 , p2 }. Let K = hA,
consists PST atoms loc(id, {p0 }, 0)[0.4, 1], loc(id, {p1 }, 0)[0.5, 1], loc(id, {p0 }, 1)
[0.8, 1], loc(id, {p0 }, 2) [0.8, 1], meaning that, id p0 p1 time 0 probability greater equal 0.4 0.5, respectively, p0 times 1 2
probability greater equal 0.8.
F consists std-formula: [loc(id, {p0 , p1 }, 0) loc(id, {p0 }, 1) loc(id, {p0 }, 2)],
saying id cannot p0 times 1 2 region consisting
points p0 p1 time point 0.
757

fiPARISI & G RANT

easy see NC(K) contains, among others, following inequalities:
0.4 vid,0,p0 1
0.5 vid,0,p1 1
0.8 vid,1,p0 1
0.8 vid,2,p0 1
vid,0,p0 + vid,1,p0 + vid,2,p0 2
vid,0,p1 + vid,1,p0 + vid,2,p0 2
last two inequalities derive item (4) Definition 9. Clearly, inequalities
cannot satisfied given 0.5 vid,0,p1 , 0.8 vid,1,p0 , 0.8 vid,2,p0 . Thus, since NC(K)
feasible solution, conclude K inconsistent.
2
However, cannot say anything consistency K feasible solution
NC(K). following examples show case NC(K) feasible solution K
consistent, case NC(K) feasible solution K inconsistent.
Example 14. Consider PST KB Example 13 modified probability
id p0 times 1 2 greater equal 0.5, instead 0.8. easy see
feasible solution NC(K) case. Theorem 3 cannot used decide whether K
consistent not. matter fact, K consistent shown follows. Let w1 , w2 w3
worlds K
w1 (id, 0) = p1 , w1 (id, 1) = p1 , w1 (id, 2) = p0 ,
w2 (id, 0) = p0 , w2 (id, 1) = p0 , w2 (id, 2) = p1 ,
w3 (id, 0) = p2 , w3 (id, 1) = p0 , w3 (id, 2) = p2 ,
let PDF W(K) (w1 ) = 0.5, (w2 ) = 0.4, (w3 ) = 0.1,
(w) = 0 world w W(K). straightforward check model
K.
2
Example 15. Again, let ID = {id}, = [0, 1, 2], Space = {p0 , p1 , p2 }. Let K = hA,
= {loc(id, {p0 }, 0)[0.5, 1], loc(id, {p0 }, 1)[0.5, 1], loc(id, {p0 }, 2)[0.5, 1]}, i.e., id
p0 time probability greater 0.5, F consists std-formulas:
[loc(id, {p0 }, 0) loc(id, {p0 }, 1)],
[loc(id, {p0 }, 1) loc(id, {p0 }, 2)],
[loc(id, {p0 }, 0) loc(id, {p0 }, 2)],
saying id cannot p0 time 1 2 already previous time value.
solution NC(K) obtained assigning variables vid,t,p0 vid,t,p1 value 0.5
(where [0, 2]), variables value 0. NC(K) feasible solution, Theorem 3
says nothing fact K consistent not. However, checked K
consistent. Let Pt set worlds W(K) placing id p0 time t, .
std-formulas F entail every world belonging two three sets must assigned
probability equal 0 model K. is, F entails P0 , P1 , P2 pairwise disjoint
sets consider worlds assigned probability greater zero model.
observe PST atoms require sum probabilities worlds
three sets least equal 0.5. Therefore, overall sum probabilities assigned
worlds three sets would greater equal 1.5, entails
model K.
2
Theorem 3 shows consistency K implies existence feasible solution
NC(K) previous examples show relationship two
758

fiK NOWLEDGE R EPRESENTATION P ROBABILISTIC PATIO -T EMPORAL K NOWLEDGE BASES

concepts. However, make stronger statement special case. PST KBs F
consists single ground std-formula (of arity) constructed st-atoms referring singlepoint regions, NC(K) feasible solution iff KB consistent.

Theorem 4. Let K = hA, F = { loc(id1 , {p1 }, t1 ) loc(idn , {pn }, tn )]}. Then,
K consistent iff feasible solution NC(K).
Proof. Using Theorem 3 need prove feasible solution NC(K) K
consistent.
Let f std-formula F. first observe f contains pair st-atoms referring
id time value different points Space, K consistent. Indeed, case,
f satisfied every world, thus impose restriction interpretations
K (see Definition 4). Given this, following w.l.o.g. assume every distinct pair
st-atoms loc(idi , {pi }, ti ), loc(idj , {pj }, tj ) f , idi = idj ti 6= tj .
Let solution NC(K), K0 = hA, i. Then, solution CC(K0 ) (from Fact
1) corresponds model 0 K0 (i) sum probabilities assigned 0
worlds satisfying st-atom
loc(id, {p}, t) (i.e., marginal probability loc(id, {p}, t))
P
equal (vid,t,p ), (ii) ki=1 (vidi ,ti ,pi ) k 1. Viewing st-atom loc(idi , {pi }, ti ) f
probabilistic event whose (marginal) probability (vidi ,ti ,pi ), Frechet inequality (recalled
proof Theorem 3) entails thatPthe minimum probability st-atoms f occur
together equal max(0, 1 k + ki=1 (vidi ,ti ,pi )). equal zero since second
argument function max greater zero due fact (ii) holds. fact
minimum probability st-atoms f simultaneously occur equal zero suffices ensure
least one model 00 K0 00 assigns probability equal zero
worlds K0 satisfy f . f std-formula F, every world satisfying
f assigned probability equal zero 00 , follows 00 model K too.
following example shows considering even binary std-formula containing st-atom
referring region consisting two points, may happen feasible solution
NC(K) even K consistent.
Example 16. Let ID = {id}, = [0, 1], Space = {p0 , p1 , p2 }. Let K = hA,
= {loc(id, {p0 }, 0)[0.4, 1], loc(id, {p1 }, 0)[0.4, 1], loc(id, {p0 }, 1)[0.4, 1], }, F stdformula [loc(id, {p0 , p1 }, 0) loc(id, {p2 }, 1)] saying id cannot move point p2 time 1
either p0 p1 time 0. easy see NC(K) feasible K consistent. 2
Section 3.5, present method deciding polynomial time consistency
PST KBs binary std-formulas satisfying acyclicity conditions used. turns
consistency PST KBs Examples 15 16 decided polynomial
time using approach.
3.4 Unary Std-Formulas Tractable
start identifying tractable case consistency checking problem: std-formulas
unary, is, formula F consists one st-atom possibly conjunction
built-in predicates (i.e., Definition 2, k = 1).
759

fiPARISI & G RANT

Example 17. constraint object region r time 5 10
expressed following unary std-formula: X1 , Z1 [loc(X1 , r, Z1 ) Z1 5 10 Z1 ].
constraint object id always region r expressed as:
Y1 , Z1 [loc(id, Y1 , Z1 ) Y1 nov r]. 7
2
following theorem states checking consistency tractable unary std-formulas
considered.
Theorem 5. Let K = hA, PST KB F consists unary std-formulas only. Then,
deciding whether K consistent P IM E.
Proof. statement follows fact F consists unary std-formulas only, K =
hA, equivalent (i.e., exactly set models as) K0 = hA0 , i, A0
consists atoms plus atom loc((Xi ), (Yi ), (Zi ))[0, 0]
ground std-formula
(f ) = [loc((Xi ), (Yi ), (Zi ))], f F f . Since, f F f polynomial
w.r.t. size K, size A0 (and thus K0 ) increases polynomial number atoms.
Hence, apply Fact 1, entails consistency PST KBs F =
decided P IM E.
3.5 Tractable Binary Std-Formulas
following focus PST KBs std-formulas binary. restricted
expressive class std-formulas allow us impose several practical constraints many
application contexts. matter fact, f1 f2 Example 2 well f4 Example 4
binary std-formulas. Furthermore, using approach suggested proof Theorem 5,
assume unary std-formulas encoded PST atoms. Thus, results stated
section straightforwardly apply case unary binary std-formulas PST
KB.
start noting consistency checking proved feasible Grant et al. (2010)
case reachability definitions (but integrity constraints) allowed.
showed Example 3 reachability definition expressed binary std-formula. Hence,
special case binary std-formulas represent reachability definitions, consistency
checking tractable.
general case PST KB K = hA, F consists binary std-formulas,
define undirected graph, called std-graph, maximal independent set represents
world K satisfying std-formulas F. 8 later use graph characterize binary
std-formulas consistency checking problem turns tractable.
Definition 10 (std-graph). Given PST KB K = hA, F consists binary stdformulas, std-graph G(K) undirected graph hV, Ei whose sets vertices V edges
E that:
1) V consists set ground st-atoms form loc(id, {p}, t) id ID, p
Space, ;
7. Recall every substitution Y1 must region containing single point.
8. maximal independent set std-graph maximal independent set undirected graph whose vertices
st-atoms. formal relationship maximal independent sets std-graph worlds PST KB
given Proposition 1.

760

fiK NOWLEDGE R EPRESENTATION P ROBABILISTIC PATIO -T EMPORAL K NOWLEDGE BASES

2) E consists
i) edge every pair ground st-atoms V referring object
time value, is, p1 , p2 Space, p1 6= p2 , id ID, , hloc(id, {p1 }, t),
loc(id, {p2 }, t)i E;
ii) edge hloc(id1 , {p1 }, t1 ), loc(id2 , {p2 }, t2 )i every pair ground st-atoms
V loc(id1 , r1 , t1 ) loc(id2 , r2 , t2 )] p1 r1 p2 r2 belongs
set ground std-formulas derived F.
write G instead G(K) K known.
Basically, edge G connects pair st-atoms cannot belong together world
satisfying std-formulas F. particular, edge type i) connects two st-atoms representing
fact object two places time admitted according
definition world (see Definition 4). edge type ii) connects two st-atoms representing fact
(i.e., object id1 point p1 time t1 object id2 point p2 time t2 ) consistent
ground std-formula entailed F.
structure G follows. hid, ti pair, G contains clique 9 size |Space|
consists vertex loc(id, {p}, t) point Space edges type i)
following, refer
clique clique hid, ti pair hid, ti clique. ground
std-formula f = loc(id1 , r1 , t1 ) loc(id2 , r2 , t2 )] derived F, G contains
clique size |r1 | + |r2 | consists vertex loc(id1 , {p1 }, t1 ) point r1 , vertex
loc(id2 , {p2 }, t2 ) point r2 , edges types i) ii) refer clique
clique std-formula f .
Example 18. Let ID = {id1 , id2 }, = [0, 1, 2], Space = {p1 , p2 , p3 , p4 }. Assume F
consists following std-formulas:
f1 = X1 , X2 , Z1 [loc(X1 , {p2 , p4 }, Z1 ) loc(X2 , {p2 , p4 }, Z1 ) X1 6= X2 0 Z1
Z1 1], saying cannot two distinct objects region consisting points
{p2 , p4 } times 0 1;
f2 = Z1 [loc(id1 , {p3 , p4 }, 0) loc(id1 , {p1 }, Z1 ) 1 Z1 Z1 2], saying object
id1 cannot reach point p1 starting region {p3 , p4 } time 0 1 2 time units.
std-graph G shown Figure 2(a), where, sake readability, vertices labelled
names points Space refer, id time value vertex
reported column row belongs (for instance, vertex loc(id1 , {p1 }, 0)
represented circle upper-left corner). Observe G consists 10 (maximal) cliques,
one 6 hid, ti pairs, one 4 ground std-formulas derived F.
Specifically, hid, ti-clique, id {id1 , id2 } [1..2], consists four vertices
loc(id, {pk }, t) k [1..4], cliques ground std-formulas following sets:
{loc(id1 , {p2 }, 0), loc(id2 , {p2 }, 0), loc(id1 , {p4 }, 0), loc(id2 , {p4 }, 0)},
{loc(id1 , {p2 }, 1), loc(id2 , {p2 }, 1), loc(id1 , {p4 }, 1), loc(id2 , {p4 }, 1)},
{loc(id1 , {p3 }, 0), loc(id1 , {p4 }, 0), loc(id1 , {p1 }, 1)},
{loc(id1 , {p3 }, 0), loc(id1 , {p4 }, 0), loc(id1 , {p1 }, 2)}.
2
761

fiPARISI & G RANT

id1

id2

p1

p2

p2

p1

p3

p4

p4

p3

p1

p2

p2

p1

p3

p4

p4

p3

id1,0

id2,0

p1

p2

p2

p1

id1,1

id2,1

p3

p4

p4

p3

id1,2

id2,2

t=0

t=1

t=2

(a)

(b)

Figure 2: (a) Std-graph G; (b) Auxiliary-graph AG.
worth noting cliques hid, ti pairs well std-formulas
maximal cliques general, shown following.
Example 19. Continuing Example 18, assume F augmented following (ground)
std-formulas:
f3 = [loc(id2 , {p3 }, 1) loc(id2 , {p2 }, 2)]
f4 = [loc(id2 , {p4 }, 1) loc(id2 , {p2 }, 2)]
Thus, clique std-formula f3 consists set {loc(id2 , {p3 }, 1), loc(id2 , {p2 }, 2)},
f4 consists set {loc(id2 , {p4 }, 1), loc(id2 , {p2 }, 2)}. cliques maximal ones, included clique consisting set vertices
{loc(id2 , {p3 }, 1), loc(id2 , {p4 }, 1), loc(id2 , {p2 }, 2)}. basically due fact
constraint imposed f3 f4 expressed succinctly, [loc(id2 , {p3 , p4 }, 1)
loc(id2 , {p2 }, 2)] whose associated clique maximal.
2
following proposition follows definition std-graph fact every object
must unique point time value.
Proposition 1. Let K = hA, PST KB F consists binary std-formulas only. Every
maximal independent set G consisting vertex hid, ti clique one-to-one
correspondence world w W w |= F.
9. Note use terminology clique complete subgraph G, maximal clique clique contained
clique. point since maximal cliques often called simply cliques.

762

fiK NOWLEDGE R EPRESENTATION P ROBABILISTIC PATIO -T EMPORAL K NOWLEDGE BASES

Observe maximal independent set G property stated Proposition 1, G must contain maximal clique including least two hid, ti cliques (this happens
instance F contains std-formula [loc(id, Space, t1 ) loc(id, Space, t2 )]). case,
world satisfies F PST KB trivially inconsistent. general case, may exponential number maximal independent sets G property stated Proposition 1,
fact PST KB consistent decided using G explained follows.
3.5.1 C LIQUE -ACYCLIC TD -G RAPHS
characterization tractable cases consistency checking problem focuses KBs
binary std-formulas std-graphs property, call clique-acyclic. start
preliminary definitions.
Definition 11 (Binary maximal clique). std-graph G call clique binary maximal iff
contains vertices two hid, ti pairs properly included clique contains
vertices hid, ti pairs.
particular, std-graph G Figure 2(a) 4 binary maximal cliques involving id1 .
Definition 12 (Clique-subgraph). call subgraph std-graph G clique subgraph iff contains
vertices G, one edge hid, ti clique well one new distinct edge
binary maximal clique.
clique-subgraph std-graph graph G Figure 2(a) 10 edges, one
6 hid, ti pairs one binary maximal clique.
Definition 13 (Clique-acyclic std-graph). Std-graph G said clique-acyclic iff cliquesubgraphs acyclic graphs (that is, forests). G called clique-cyclic clique-acyclic.
Basically, clique-acyclicity means cycle found std-graph compressing
binary maximal cliques single edges using one edge hid, ti-clique. easy
see std-graph shown Figure 2(a) clique-acyclic. stated next proposition,
clique-acyclicity checked using following auxiliary graph basically compresses
clique-subgraph essential structure. clear definition auxiliary
graph obtained clique-subgraphs graph G.
Definition 14 (Auxiliary graph). auxiliary graph G undirected graph AG = hV 0 , E 0
that:
V 0 consists vertex hid, ti pair, id ID ;
E 0 consists edges binary maximal cliques clique-subgraph
previous vertex loc(id, {p}, t) replaced corresponding hid, ti pair. denote
C(e) binary maximal clique C edge e originated.
auxiliary graph std-graph Figure 2(a) shown Figure 2(b). example,
C(e) edge e = h(id1 , 0), (id1 , 1)i consists following set vertices
{loc(id1 , {p3 }, 0), loc(id1 , {p4 }, 0), loc(id1 , {p1 }, 1)}.
following proposition follows Definitions 13 14.
763

fiPARISI & G RANT

Proposition 2. Std-graph G clique-acyclic iff auxiliary graph AG acyclic (that is, AG
forest).
following, introduce set linear inequalities used check consistency PST KBs std-formulas binary auxiliary graph acyclic.
next subsection special case cyclic auxiliary graph. cases
working single connected component auxiliary graph. Suppose AG
n connected components C1 , . . . , Cn let Ki PST KB corresponding Ci
i. K model show obtain model Mi Ki . Let wi world appropriate
hid, ti pairs Ki .PLet Wi worlds K extend wi hid, ti values
Ki . Define Mi (wi ) = wWi (w). Going direction, suppose M1 , . . . , Mn
models PST KBs corresponding Ci , . . . , Cn respectively. world w K, let
w1 , . . . , wn restrictions w C1 , . . . , Cn respectively. Defining (w) = ni=1 (wi )
model K. shown following result.
Proposition 3. K consistent iff PST KBs corresponding connected components
G (and hence AG) consistent.
Hence proofs suffices assume AG single connected component.10
Definition 15 (BC(K)). Let K = hA, PST KB F consists binary std-formulas
only. BC(K) consists following (in)equalities:
P
vid,t,p u;
(1) loc(id, r, t)[`, u] A: `
pr

(2) id ID, :

P

vid,t,p = 1;

pSpace

(3) id ID, T, p Space: vid,t,p 0;
P
vid,t,p 1.
(4) edge e AG:
loc(id,{p},t)C(e)

following theorem states checking whether BC(K) feasible solution equivalent
deciding consistency PST KBs K std-formulas binary generate acyclic
auxiliary graph. intuition behind result follows. feasible solution
BC(K), inequalities (1)-(3) entail hid, ti pair, events object id time
point p Space arranged fit whole probability space without overlapping. Roughly
speaking would suffice define model PST KB without std-formulas combining
distributions obtained hid, ti pair. Considering std-formulas means events
cannot occur together, is, cannot coexist portion probability space.
Intuitively, fact inequality (4) BC(K) satisfied edge e entails events
corresponding st-atoms C(e) arranged distinct portions probability space
(avoiding overlaps). auxiliary graph AG acyclic, reasoning inductively repeated
edge AG without ever reconsidering arrangement events corresponding
st-atoms considered previously. satisfiability inequality (4) BC(K) necessary
10. indicate statement following theorem AG several connected components,
proof works one Proposition 3 applied.

764

fiK NOWLEDGE R EPRESENTATION P ROBABILISTIC PATIO -T EMPORAL K NOWLEDGE BASES

condition consistency K fact satisfied edge e AG intuitively
means events corresponding st-atoms C(e), even taken alone, cannot arranged
probability space without overlapping.
Theorem 6. Let K = hA, PST KB F consists binary std-formulas only. AG
acyclic, K consistent iff feasible solution BC(K).
Proof. use notation K0 K F removed, is, K0 = hA, i. Then, M(K)
subset M(K0 ).
() prove contrapositive: feasible solution BC(K), K inconsistent. simplest case BC(K) feasible solution due fact BC(K0 )
feasible solution. inequalities (4), hence K0 consistent, thus K
consistent well.
Otherwise, feasible solution BC(K0 ) thus BC(K) feasible solution due
fact least one inequalities
item (4) Definition 15 satisfied. Therefore,
P
edge e AG loc(id,{p},t)C(e) vid,t,p > 1. show K inconsistent
show interpretation model K. suppose interpretation
model K. Since pair A1 , A2 st-atoms belong C(e) iff (a) [A1 A2 ] belongs set
ground formulas derived F, (b) A1 = loc(id, {p1 }, t) A2 = loc(id, {p2 }, t)
p2 6= p1 , world w W(K) (w) > 0, w |= A1 , w |= A2 (in
particular, case (b) world w W(K) w |= A1 , w |= A2 , whether
(w) > 0). is, every world w K assigned non-zero probability
satisfies one st-atom C(e). Hence, W(K) partitioned |C(e)| + 2
pairwise disjoint sets follows:
(i) set worlds w W(K) (w) = 0 (this set includes worlds satisfying
least two st-atoms C(e))
(ii) set worlds w W(K) (w) > 0 w satisfy st-atom C(e);
(iii) st-atom Ai C(e), set worlds w W(K) (w) > 0, w |= Ai ,
w 6|= Aj Aj C(e) (and different Ai ).
Therefore, sum probabilities worlds satisfying least one st-atom C(e) equal
sum, st-atom C(e), sum probabilities worlds satisfying atom
C(e) st-atoms C(e),
X
w W(K)
w |= loc(id, {p}, t)
loc(id, {p}, t) C(e)

(w) =

X

X

loc(id,{p},t)C(e)

w W(K)
w |= loc(id, {p}, t)
w 6|= loc(id0 , {p0 }, t0 )
loc(id0 , {p0 }, t0 ) C(e)

(w).

recall model K model K0 . above-mentioned partitioning
W(K) holds W(K0 ). Therefore, solution BC(K0 ), one-to-one corresponding
model K0 , sum probabilities assigned worlds K0 satisfying st-atom loc(id, {p}, t) equal value assigned variable vid,t,p . particular,
765

fiPARISI & G RANT

given st-atom loc(id, {p}, t) C(e),
X
X
(w) =
W(K0 )

(w) = vid,t,p .

W(K0 )

w
w |= loc(id, {p}, t)

w
w |= loc(id, {p}, t)
loc(id, {p}, t) C(e)
w 6|= loc(id0 , {p0 }, t0 )
loc(id0 , {p0 }, t0 ) C(e)

Considering st-atoms C(e) obtain
X
X
(w) =
W(K0 )

X

loc(id,{p},t)C(e)

w
w |= loc(id, {p}, t)
loc(id, {p}, t) C(e)

=

X

(w) =

W(K0 )

w
w |= loc(id, {p}, t)
w 6|= loc(id0 , {p0 }, t0 )
loc(id0 , {p0 }, t0 ) C(e)

vid,t,p > 1.

loc(id,{p},t)C(e)

inequality holds since inequality (4) Definition 15 satisfied edge e.
Finally, since following inequality holds due definition model
X
X
(w)
(w),
wW(K0 )

w W(K0 )
w |= loc(id, {p}, t)

latter strictly greater one, follows PDF W(K0 ), meaning
model K0 . Hence interpretation model K K inconsistent.
() prove auxiliary graph AG acyclic BC(K) feasible solution,
K consistent. prove mathematical induction number edges AG.
Base case: number edges 0, AG consists set isolated vertices. fact
AG contains edges means set ground std-formulas derived F
empty. Thus feasible solution BC(K) iff feasible solution CC(K0 ). Using
Fact 1, obtain K consistent.
Inductive step: prove statement holds edges AG, holds + 1
edges. given acyclic graph AG + 1 edges, write AG +1 .
acyclicity choose subgraph, AG edges new edge connects vertex
isolated vertex AG AG clearly acyclic. Let K = hA, F PST KB
F consists subset ground std-formulas derived F std-graph G
auxiliary graph AG . induction hypothesis feasible solution BC(K ),
K consistent.
write K+1 = hA, F +1 F +1 consists ground std-formulas F plus
corresponding new edge e, AG +1 turns auxiliary graph G(K+1 ).
Assuming induction hypothesis, show feasible solution BC(K+1 ),
K+1 consistent.
Let solution BC(K+1 ). Obviously, solution BC(K ), consists
subset (in)equalities BC(K+1 ). fact solution BC(K ) means
model K sum probabilities assigned worlds
766

fiK NOWLEDGE R EPRESENTATION P ROBABILISTIC PATIO -T EMPORAL K NOWLEDGE BASES

K satisfying st-atom loc(id, {p}, t) equal value (vid,t,p ) assigned variable vid,t,p
. Since solution BC(K+1 ), thus inequality (4) Definition 15 holds, follows

X
X
X
(vid,t,p ) 1.
(w) =
loc(id,{p},t)C(e)

w W(K ),
w |= loc(id, {p}, t)

loc(id,{p},t)C(e)

is, model K property sum probabilities worlds
satisfying least one st-atom C(e) less equal one.
assigns probability equal zero every world W(K ) containing
least two st-atoms C(e), done, since turns model K+1 too.
Otherwise, starting , show model +1 K+1 constructed
reasoning follows.
recall new edge e added AG obtain AG +1 form h(id1 , t1 ),
(id2 , t2 )i. Let C1 (e) C2 (e) sets st-atoms C(e) form loc(id1 , {p}, t1 )
loc(id2 , {p}, t2 ), respectively. Hence, C(e) = C1 (e) C2 (e) C1 (e) C2 (e) = . Let
= hw1 , w2 , . . . , wn permutation worlds w W(K ) assigned
probability greater zero (i.e., (w) > 0) first k worlds satisfy statom C1 (e). Note that, W(K ) = W(K+1 ), world W(K ) consists one
atom C1 (e), function whose domain ID (see Definition 4) st-atoms
C1 (e) refer id andP
time value. Let us denote sum probabilities
first worlds , is, = ij=1 (wj ), wj . Thus, k equal sum
probabilities assigned worlds satisfying st-atom C1 (e), i.e.,
X

k =

X

(w) =

w W(K ),
w |= loc(id, {p}, t),
loc(id, {p}, t) C1 (e)

(vid,t,p ).

loc(id,{p},t)C1 (e)

Let subset Space consisting points p variables vid2 ,t2 ,p assigned
value greater zero , is, = {p | p Space, (vid2 ,t2 ,p ) > 0}. Observe
variables correspond st-atoms referring endpoint (id2 , t2 ) edge e. Let = hp1 , p2 , . . . , pm
permutation points first h points p correspond variables vid2 ,t2 ,p
loc(id2 , {p}, t2 ) 6 C2 (e), subsequent points (with index [h + 1, .., m])
correspond variables vid2 ,t2 ,p loc(id2 , {p}, t2 ) C2 (e). Let sum
Pi
values assigned first points , is, =
j=1 (vid2 ,t2 ,pj ) pi .
Observe thatPm = 1 since equality (2) Definition 15 holds BC(K+1 ), h =
1
(vid,t,p ). fact inequality (4) Definition 15 holds BC(K+1 )
loc(id2 ,{p},t2 )C2 (e)

entails that,
1 h + k =

X

(vid,t,p ) +

loc(id,{p},t)C2 (e)

X

(vid,t,p ) 1.

loc(id,{p},t)C1 (e)

Therefore, obtain k h . Intuitively, means possible define PDF
worlds K+1 world satisfies two st-atoms C(e), keeping satisfied
PST atoms std-formulas satisfied . formally described below.
767

fiPARISI & G RANT

define model +1 K+1 follows. Let U = hu1 , u2 , . . . , uz sequence
consisting values {1 , . . . , n } {1 , . . . , } ordered ascending order. define
following z non-zero probability worlds K+1 . ui U , let wi world that:
id ID \ {id2 }, \ {t2 }, wi (id, t) = wj (id, t), wj W(K ) j
smallest subscript j ui .
wi (id2 , t2 ) = pj , pj j smallest subscript j ui .
define +1 PDF W(K+1 ) (i) +1 (w1 ) = v1 , (ii) +1 (wi ) =
vi vi1 [1..z], (iii) worlds w W(K+1 ), +1 (w) = 0.
show +1 model K+1 . First, observe +1 model K .
fact, id ID \ {id2 }, id \ {t2 }, p Space, probability object id
time value point p according +1 equal probability id time value
point p according ,
X
X
id ID \ {id2 }, \ {t2 }, p Space,
+1 (w) =
(w).
w W(K ),
w(id, t) = p

w W(K+1 ),
w(id, t) = p

Moreover, hid2 , t2 pair,
X
p Space,

+1 (w) = (vid2 ,t2 ,p ) =

X

(w).

w W(K ),
w(id, t) = p

w W(K+1 ),
w(id, t) = p

ensures that, PST atom = loc(id, r, t)[`, u] A, sum probabilities
assigned +1 worlds satisfying st-atom loc(id, r, t) belong probability interval
[`, u] specified a, since hold . Moreover, none worlds assigned
probability equal zero assigned probability greater zero +1 ,
consists worlds assigned non-zero probability . Therefore, +1 model
K .
Finally, show +1 model K+1 , suffices observe k h entails
world wi K+1 (with [1..z]) assigned probability greater zero
satisfies two atoms C(e). completes proof.
following example shows usage result Theorem 7 check consistency
PST KB.
Example 20. Continuing Example 18, assume K PST KB F set stdformulas given Example 18 consist following set PST atoms:
loc(id1 , {p3 , p4 }, 0)[.7, 1], loc(id1 , {p1 }, 1)[.2, .5], loc(id1 , {p1 }, 2)[.3, .8], loc(id2 , {p2 }, t)[.7, 1]
[0..2]. checked PST KB corresponding set linear inequalities BC(K) feasible solution. Thus, since auxiliary graph AG(K) shown Figure 2(b)
acyclic, follows K consistent.
Consider PST KB K0 obtained K replacing atom loc(id1 , {p1 }, 2)[.3, .8]
loc(id1 , {p1 }, 2)[.8, .8], lower probability .8 instead .3. case, BC(K0 )
includes inequalities 0.7 vid1 ,0,p3 + vid1 ,0,p4 1 0.8 vid1 ,2,p1 0.8 (due PST
atoms), vid1 ,0,p3 + vid1 ,0,p4 + vid1 ,1,p1 1 (due edge h(id1 , 0), (id1 , 2)i AG(K)).
Clearly, feasible solution BC(K0 ), thus K0 consistent.
2
768

fiK NOWLEDGE R EPRESENTATION P ROBABILISTIC PATIO -T EMPORAL K NOWLEDGE BASES

note fact acyclicity AG used left-to-right proof Theorem 6.
Therefore, whether AG(F) acyclic, PST KBs std-formulas binary,
necessary condition stated following theorem used checking consistency.
Theorem 7. Let K = hA, PST KB F consists binary std-formulas only.
feasible solution BC(K), K consistent.
condition BC(K) feasible solution stronger NC(K) feasible
solution, used Theorem 3 general std-formulas, since easily checked every
solution BC(K) solution NC(K), converse hold general. Thus,
PST KBs K, using Theorem 3 cannot conclude anything consistency
K, NC(K) feasible solution, show K inconsistent using result
Theorem 7.
Example 21. already observed fact PST KB K Example 16
consistent cannot concluded checking whether feasible solution NC(K). However,
easy see BC(K) feasible solution case, thus conclude
PST KB Example 16 consistent applying result Theorem 7.
2
Although necessary condition Theorem 6 still used check consistency
auxiliary graph cyclic (see Theorem 7), sufficient condition Theorem 6 entails
PST KB K consistent corresponding set BC(K) linear inequalities feasible
solution auxiliary graph acyclic. following, identify class std-graphs
consistency checking problem remains tractable even std-graph clique-cyclic (and
thus auxiliary graph cyclic).
3.5.2 IMPLE C LIQUE -C YCLIC TD -G RAPHS
section provide set linear inequalities checking consistency PST KB
whose std-graph satisfies following property.
Definition 16 (Simple clique-cyclic std-graph). Std-graph G said simple clique-cyclic iff
auxiliary graph AG simple graph 11 cyclic connected component G contains
single maximal clique hid, ti clique.
following example simple clique-cyclic std-graph. provide std-graph
auxiliary graph.
Example 22. PST KB K = hA, Example 15, obtain std-graph G shown
Figure 3(a). auxiliary graph AG shown Figure 3(b). G consists single connected component one maximal clique Cl hid, ti clique, namely
Cl = {loc(id, {p0 }, 0), loc(id, {p0 }, 1), loc(id, {p0 }, 2)}. easy see G simple cliquecyclic.
2
following theorem states checking consistency PST KB whose std-graph
simple clique-cyclic accomplished checking whether feasible solution set
linear inequalities.
start defining new linear system: CL(K).
11. loops multiple edges vertices.

769

fiPARISI & G RANT

id
p1

t=0
p2

p0

p1

id1,0

t=1
p2

p0

id1,1
p1

id

t=2

id1,2

p2

p0

(a)

(b)

Figure 3: (a) Std-graph (b) auxiliary graph PST KB Example 15.
Definition 17 (CL(K)). Let K = hA, PST KB F consists binary std-formulas
only. CL(K) consists following (in)equalities:
(1) loc(id, r, t)[`, u] A: `

P

vid,t,p u;

pr

(2) id ID, :

P

vid,t,p = 1;

pSpace

(3) p Space, id ID, : vid,t,p 0;
(4) (a)
P acyclic connected component G (and hence AG), edge e AG:
vid,t,p 1.
loc(id,{p},t)C(e)

(b) cyclic connected component
G (and hence AG), maximal clique Cl
P
hid, ti clique:
vid,t,p 1.
loc(id,{p},t)Cl

intuition behind result stated following theorem similar given
tractable case Theorem 6. Indeed, G simple clique-cyclic CL(K) feasible solution,
events corresponding st-atoms edge e acyclic connected component AG,
well events corresponding st-atoms maximal clique connected component AG, arranged probability space avoiding overlaps. basically suffices
define model K.
Theorem 8. Let K = hA, PST KB F consists binary std-formulas only. G
simple clique-cyclic, K consistent iff feasible solution CL(K).
770

fiK NOWLEDGE R EPRESENTATION P ROBABILISTIC PATIO -T EMPORAL K NOWLEDGE BASES

Proof. explained earlier deal single cyclic connected component G.
() proof follows reasoning left-to-right proof Theorem 6.
() Let solution CL(K). Obviously, alsoP
solution CC(K0 ) K0 =
0
0
0
hA,
P i, model K (vid,t,p ) = wW(K0 ),w|=loc(id,{p},t) (w)
loc(id,{p},t)Cl (vid,t,p ) 1. Given this, show starting define new model
K0 model K.
hid, ti pair, define S(id, t) subset Space consisting points p
vid,t,p assigned value greater zero , i.e., S(id, t) = {p | p Space, (vid,t,p ) > 0}.
distinguish following two sets hid, ti pairs: IDT1 (resp. IDT2 ) set
hid, ti pairs (resp. is) point p S(id, t) loc(id, {p}, t) Cl.
separately consider pairs IDT1 IDT2 , hid, ti pair belonging one
sets, define sequence points S(id, t) along sequence cumulative probability
values used build model .
start set IDT1 . Let hidi , ti i, [1..|IDT1 |] i-th pair IDT1 (after

ordering pairs IDT1 according fixed order). Let = hp1i , . . . , pm
permutation
points S(idi , tP
), let (k) sum values assigned first k points
, is, (k) = kj=1 (vidi ,ti ,pj ). Thus, hi (1), . . . , (mi )i sequence (cumulative)



probability values associated sequence points hp1i , . . . , pm
i-th pair IDT1 .
consider pairs IDT2 , i.e, occurring st-atom Cl. Denote
hidi , ti i, [1..|IDT2 |], i-th pair IDT2 (according fixed order). first
1
pair IDT2 , let 1 = hp11 , . . . , ph1 1 , ph1 1 +1 , . . . , pm
1 permutation points S(id1 , t1 )
first h1 points p correspond variables vid1 ,t1 ,p loc(id1 , {p}, t1 ) Cl
1
(consequently, points p {ph1 1 +1 , . . . , pm
1 } correspond variables vid1 ,t1 ,p
loc(id1 , {p}, t1 ) 6 Cl).

hidi , ti [2..|IDT2 |], let = hp1i , . . . , pgi , pigi +1 , . . . , pigi +hi , pigi +hi +1 , . . . , pm

g
+h
+1
g

sequence points S(idi , ti ) (i) point p {p1i , . . . , pi , pi , . . . , pi }
(resp. p {pgi +1 , . . . , pgi +hi }) corresponds variable vidi ,ti ,p loc(idi , {p}, ti ) 6 Cl
(resp. loc(idi , {p}, ti ) Cl); (ii) points sequence distinct except pgi
pgi +hi +1 may refer point S(idi , ti ). Denoting (k) sum values
P
assigned first k points (i.e., (k) = kj=1 (vidi ,ti ,pj )), choose sequences

2 , . . . , |IDT2 | that, [2..|IDT2 |], (gi ) = i1 (gi1 +hi1 ) (assume g1 = 0).
Note make choice since following holds:

|IDT2 | hi
X X

|IDT2 |

(vidi ,ti ,pk ) =

X



i=1 k=1

|IDT2 |

(gi + hi ) (gi ) =

i=1

X

X

(vidi ,ti ,p ) 1.

i=1 loc(idi ,{p},ti )Cl

way sequences h1 , . . . , |IDT2 | hi (1), . . . , (mi )i defined allow us build
model K0 world assigned probability greater zero satisfies two
distinct st-atoms Cl. ensure model K too.

define model . LetSV = hv1 , v2 , . . . , vz sequence consisting
values iIDT1 {i (1), . . . , (mi )} iIDT2 {i (1), . . . , (mi )} ordered ascending order.
define following z non-zero probability worlds K0 (note world K0
world K). vj V , let wj world that:
771

fiPARISI & G RANT

hidi , ti IDT1 , define wj (idi , ti ) = pki , pki left-most value
hi (1), . . . , (mi )i (k) vj .
hidi , ti IDT2 , define wj (idi , ti ) = pki , pki left-most value
hi (1), . . . , (mi )i (k) vj .
Finally, define PDF W(K0 ) (i) (w1 ) = v1 , (ii) (wj ) = vj vj1
j [1..z], (iii) (w) = 0 worlds w W(K0 ). easy check
0
0
model
P K corresponds solution CC(K ), is,
(vid,t,p ) = wW(K0 ),w|=loc(id,{p},t) (w). Moreover, construction shown ensures
non-zero probability world K0 satisfies two distinct st-atoms Cl, follows
model K.
Theorem 8 used, instance, decide PST KB Example 15 consistent.
Example 23. PST KB K = hA, Example 15, CL(K) linear system obtained
CC(hA, i) augmenting inequality vid,0,p0 + vid,1,p0 + vid,2,p0 1. Since CL(K)
contains inequality 0.5 vid,t,p0 [0..2] (due presence PST atom
loc(id, {p0 }, t)[0.5, 1] A), follows CL(K) feasible solution, conclude
K consistent (here G clique-cyclic std-graph shown Figure 3(a)).
2
conclude section following theorem stating checking consistency
PST KBs identified Section 3.5 tractable.
Theorem 9. Let K = hA, PST KB F consists binary std-formulas only. G
clique-acyclic simple clique-cyclic, checking consistency K P IM E.
Proof. G consists one connected component, statement follows facts building
G, well checking whether G acyclic (resp. simple clique-cyclic), accomplished
polynomial time w.r.t. size K checking whether feasible solution BC(K)
(resp., CL(K)) polynomial too. G consists one connected component, statement follows facts finding connected components G done polynomial
time, and, using Proposition 3, need check consistency PST KBs corresponding connected components order decide consistency whole PST
KB.

4. Querying PST Knowledge Bases
section investigates complexity checking answer queries. Section 4.1 contains
basic definitions. Section 4.2 contains major result complexity checking answers
queries. Finally, Section 4.3 gives sufficient necessary conditions answering queries
tractable cases.
4.1 Optimistic Cautious Answers
problem querying SPOT data investigated Parker et al. (2007a, 2009), Parisi,
Parker, Grant, Subrahmanian (2010), Grant, Molinaro, Parisi (2013) specific
772

fiK NOWLEDGE R EPRESENTATION P ROBABILISTIC PATIO -T EMPORAL K NOWLEDGE BASES

frameworks corresponding PST KBs (of form hA, i), PST atoms considered. section, address problem answering selection queries general (consistent) PST KBs. kinds queries considered Parker et al. (2007a, 2009), Parisi
et al. (2010), Grant et al. (2013) focused count queries.
selection query expression form (?id, q, ?t, [`, u]), q region [`, u]
probability interval. Intuitively, selection query says: Given region q probability interval
[`, u], find objects id times id inside q time probability interval
[`, u]. two semantics interpreting statement, leading two types answers
selection queries. Optimistic answers objects time values may query region
probability specified interval, whereas cautious answers consist objects
time values guaranteed region probability given interval. Thus,
cautious answers subset optimistic ones.
following definition extends original definition optimistic cautious selection
query answers general case consistent PST knowledge bases.
Definition 18 (Optimistic/Cautious Query Answers). Let K consistent PST KB, Q =
(?id, q, ?t, [`, u]) selection query. Then,
hid, ti
Pis optimistic answer Q w.r.t. K iff exists model M(K) s.t.
(w) [`, u].
w|=loc(id,q,t)

hid, ti
Pis cautious answer Q w.r.t. K iff every model M(K),
(w) [`, u].
w|=loc(id,q,t)

Example 24. Let q1 = {(7, 3), (7, 4)} (q1 overlaps region c, see Figure 1). Model
Example 9 entails hid1 , 9i optimistic answer Q = (?id, q1 , ?t, [.7, 1]), w1 (id1 , 9) =
w2 (id1 , 9) = w3 (id1 , 9) = (7, 4) q1 (w1 ) + (w2 ) + (w3 ) = 1 [.7, 1].
Let q2 region including region c. hid1 , 9i cautious answer Q0 = (?id, q2 , ?t, [.7, 1]),
according model Kex , id1 must region c (and thus q2 ) time 9 probability
[.9, 1] (due loc(id1 , c, 9)[.9, 1] Aex ). Clearly, hid1 , 9i optimistic answer Q0 . 2
4.2 Complexity Query Answering
following theorem shows consistency checking used answer selection queries
optimistic cautious semantics.
Theorem 10. Let K = hA, consistent PST KB, Q = (?id, q, ?t, [`, u]). Then,
1) hid, ti optimistic answer Q w.r.t. K iff hA {loc(id, q, t)[`, u]}, consistent.
2) hid, ti cautious answer Q w.r.t. K iff hA {loc(id, q, t)[0, ` ]}, hA
{loc(id, q, t)[u + , 1]}, consistent, smallest rational number
precision m3 , = |A| + |F| |ID| |T | |Space| + |ID| |T | + |ID| |T | |Space|.
Proof. Statement 1) easily follows Definitions 6 18.
Statement 2) follows fact hid, ti cautious answer Q w.r.t. K iff i) hid, ti
optimistic answer Q0 = (?id, q, ?t, [0, ` ]) w.r.t. K, ii) hid, ti optimistic
773

fiPARISI & G RANT

answer Q00 = (?id, q, ?t, [u + , 1]) w.r.t. K, small non-zero constant whose size
polynomial w.r.t. size K. show existence , observe (i) checking
consistency K reduced deciding PSAT instance K consisting clauses,
= |A| + |F| |ID| |T | |Space| + |ID| |T | + |ID| |T | |Space|, shown membership
proof Theorem 1; (ii) satisfying probability distribution instance PSAT
clauses exists, one + 1 non-zero probabilities, entries
consisting rational numbers precision O(m2 ) (Georgakopoulos et al., 1988; Papadimitriou
& Steiglitz, 1982); Then, choosing equal smallest rational number precision m3 suffices
obtain sufficiently small non-zero constant, whose size polynomial w.r.t. size K,
hA {loc(id, q, t)[0, ` ]}, (resp., hA {loc(id, q, t)[u + , 1]}, Fi) consistent iff
hA {loc(id, q, t)[0, ` ]}, (resp., hA {loc(id, q, t)[u + , 1]}, Fi) consistent,
infinitely small value greater zero.
following corollary follows Theorems 1 10.
Corollary 1. Let K = hA, consistent PST KB. Given query Q = (?id, q, ?t, [`, u]),
1) deciding whether hid, ti optimistic answer Q w.r.t. K NP.
2) deciding whether hid, ti cautious answer Q w.r.t. K coNP.
problem deciding whether pair hid, ti optimistic/cautious answer selection
query Q solved polynomial time PST KBs whose F component empty (Parker et al.,
2007a, 2009; Parisi et al., 2010). However, presence integrity constraints problem
becomes hard.
Theorem 11. Let K = hA, consistent PST KB. Given query Q = (?id, q, ?t, [`, u]),
1) deciding whether hid, ti optimistic answer Q w.r.t. K NP-hard.
2) deciding whether hid, ti cautious answer Q w.r.t. K coNP-hard.
Proof. first prove item 1). show reduction problem NP-hard Hamiltonian
path problem (Papadimitriou, 1994). Given directed graph G = hV, Ei, V = {v0 , . . . , vk }
set k +1 vertexes G E set edges, construct instance problem
follows. Let ID = {id}, Space = V {p0 , . . . , pk1 } {pT , pF }, = [0, . . . , 2k + 1].
K pair hA, consist PST atom loc(id, v0 , 0)[1, 1] F consists
following formulas:
[0..k 1], f1i = Z1 , Z2 [loc(id, {vi }, Z1 ) loc(id, Space \ V 0 , Z2 ) Z2 = Z1 + 1]
V 0 = {vj |(vi , vj ) E}{pi , pT , pF }. is, locations id reach starting
vi one time step locations vj s.t. (vi , vj ) E point {pi , pT , pF }.
f1k = Z1 , Z2 [loc(id, {vk }, Z1 ) loc(id, Space \ V 00 , Z2 ) Z2 = Z1 + 1] V 00 =
{vj |(vk , vj ) E} {pT , pF }. formula says locations id reach starting
vk one time step locations vj (vk , vj ) E {pT , pF }.
[0..k1], f2i = Z1 , Z2 [loc(id, {pi }, Z1 )loc(id, Space\{vi+1 }, Z2 )Z2 = Z1 +1],
saying location id reach starting pi one time step vi+1 .
774

fiK NOWLEDGE R EPRESENTATION P ROBABILISTIC PATIO -T EMPORAL K NOWLEDGE BASES

f3 = Y1 , Z1 , Z2 [loc(id, Y1 , Z1 ) loc(id, Y1 , Z2 ) Z1 6= Z2 Y1 6= {pT } Y1 6= {pF }],
saying id location distinct time values, location different
pT pF .
f4 = Z1 , Z2 [loc(id, {p0 , . . . , pk1 }, Z1 ) loc(id, {pT }, Z2 )], saying id
pT was/is/will location {p0 , . . . , pk1 }.
f5 = Y2 , Z1 , Z2 [loc(id, {pT }, Z1 ) loc(id, Y2 , Z2 ) Y2 6= {pT } Z1 < Z2 ], saying
id go away pT reaching location.
f6 = Y2 , Z1 , Z2 [loc(id, {pF }, Z1 ) loc(id, Y2 , Z2 ) Y2 6= {pF } Z1 < Z2 ], saying
id go away pF reaching location.
Finally, let Q = (?id, {pT }, ?t, [1, 1]), let pair checked optimistic answer
Q hid, 2k + 1i.
First all, observe M(K) 6= . fact, consider world w W(K) w(id, 0) =
v0 , w(id, 1) = p0 , w(id, 2) = v1 , w(id, 3) = p1 , . . . , w(id, t) = vt/2 , w(id, + 1) = pt/2+1 , (in
cases even) . . . , w(id, 2k2) = vk1 , w(id, 2k1) = pk , w(id, 2k) = vk , w(id, 2k+1) =
pF . easy see w |= F. fact, [0..2k], id moves towards reachable locations
one time point: id vi , [0..k 1], moves pi (that is, f1i satisfied w);
id pi , [0..k 1], moves vi+1 (that is, f2i satisfied w); vk
moves pF (that is, f1k satisfied w). Moreover, id placed w location
different times (that is, f3 satisfied), neither location {p1 , . . . , pk1 } pT (that
is, f4 satisfied too). Moreover, id move pF reaching location (that is, f6
satisfied), reach location pT (thus, f5 satisfied w). Now, consider PDF
W(K) assigning probability equal 1 w, probability equal 0 every world
W(K). Clearly, model K: assigns non-zero probability worlds satisfying F,
ensures atom loc(id, v0 , 0)[1, 1] satisfied w assigned probability equal
1.
show hid, 2k + 1i optimistic answer Q w.r.t. K iff Hamiltonian
path G.
()
P hid, 2k + 1i optimistic answer Q w.r.t. K, model M(K) s.t.
(w) = 1. Let W W(K) set worldsP
w w(id, 2k + 1) =
w|w|=loc(id,pT ,2k+1) P
pT (w) > 0. wW (w) = 1 model (thus, w|w|=loc(id,v0 ,0) (w) = 1
due loc(id, v0 , 0)[1, 1]) A), follows every world w W w(id, 0) = v0 .
Moreover, since model, thus f4 satisfied every world w W , holds
[0..2k + 1], w(id, t) 6 {p0 , . . . , pk 1}, meaning id never placed location
{p0 , . . . , pk1 } w. Moreover, since w W , w(id, 0) = v0 , since f1i f2i
(with [1..k]), f3 satisfied every world W , follows (i) [0, k],
w(id, t) V (i.e., id placed vertex G time point [0, k]), (ii)
t, t0 [0, k], w(id, t) 6= w(id, t0 ) (id placed vertex G different times
[0, k]). Given this, time = k + 1, f1k f3 entail id placed world W location
pT pF . f5 (resp., f6 ) entails id go away pT (resp., pF ) reaching
location, since w(id, 2k + 1) = pT , follows every world w W
[k + 1, 2k + 1], w(id, t) = pT . Hence, w W (w) > 0, w(id, 0) = v0 ,
[1, k], w(id, t) V , t, t0 [0, k], w(id, t) 6= w(id, t0 ), [k + 1, 2k + 1], w(id, t) = pT .
Therefore, w(id, 0), w(id, 1), . . . , w(id, k) Hamiltonian path G.
775

fiPARISI & G RANT

() Let Hamiltonian path G. denote [i] (with [0..k]) i-th vertex
. W.l.o.g. assume first
Pvertex v0 , is, [0] = v0 . show
model M(K) w|w|=loc(id,pT ,2k+1) (w) = 1, is, hid, 2k + 1i
optimistic answer Q w.r.t. K. Let function W worlds w W,
(w) = 0 except world w that: w (id, 0) = [0] = v0 , [1, k],
w (id, t) = [t], [k + 1, 2k + 1], w (id, t) = pT . easy see w |= F. fact,
[1..k], f1i well f2i satisfied w , since fact path G entails
[0, k 1], w (id, t) = vi w (id, + 1) = vj edge (vi , vj ) edge G
w (id, k + 1) = pT reachable location V . Moreover, f3 satisfied w ,
since fact Hamiltonian path entails w places id different locations different
times, except location pT . Formula f4 satisfied w , since w place id
location {p0 , . . . , pk1 }. Formula f5 satisfied w , since w place id location
different pT time point k + 1, id reaches pT . Finally, f6 satisfied w well,
since w place id location pF . Since wP|= F, assigned probability
different 0. Let (w ) = 1. Moreover, w|w|=loc(id,v0 ,0) (w) = (w ) = 1,
condition required loc(id, v0 , 0)[1, 1] holds too, proving model K.
prove item 2). show reduction problem complement
Hamiltonian path problem. Given directed graph G, construct instance problem
proof 1), except Q = (?id, {pT }, ?t, [0, 1 ]), > 0 stated
Theorem 10. shown proof 1), K consistent. Moreover, Hamiltonian
path G iff pair hid, 2k + 1i optimistic answer Q0 = (?id, {pT }, ?t, [1, 1]).
observe hid, 2k + 1i optimistic answer Q0 iff hid, 2k + 1i cautious
answer Q = (?id, {pT }, ?t, [0, 1 ]) > 0 sufficiently small. reasoning
proof Theorem 10, choose
P = , ensures M(K)
P

(w)
<
1,

w|w|=loc(id,pT ,t) (w) 1 .
w|w|=loc(id,pT ,t)

query answering problem related decision version entailment problem
probabilistic logic (Nilsson, 1986; Georgakopoulos et al., 1988), follows. Given conjunction clauses, associated probability, additional clause C
given lower upper bounds admissible values probability, decide whether
probability distribution satisfying probability clauses lower upper
bounds C. probabilistic logic, entailment problem reduced PSAT (Nilsson, 1986; Georgakopoulos et al., 1988), shown query answering problem PST
KBs reduced consistency checking problem. However, important difference
query answering problem probabilistic entailment problem: assume
input PST KBs consistent, entailment problem defined (even
satisfiable). consequence, coNP-hardness probabilistic entailment problem straightforwardly follows NP-hardness PSAT ( unsatisfiable iff contradiction C
lower upper bounds entailed ). is, satisfiability source complexity
probabilistic entailment problem. However, setting, given consistent PST KB
thus checking consistency cannot source complexity query answering problem.
fact, Theorem 11 viewed strengthening coNP-hardness probabilistic entailment
problem, proved specific setting corresponding case input formula
known satisfiable.
776

fiK NOWLEDGE R EPRESENTATION P ROBABILISTIC PATIO -T EMPORAL K NOWLEDGE BASES

4.3 Sets Linear Inequalities Answering Queries
following corollary Theorems 2 10 states set mixed-binary linear inequalities
MBL() introduced Definition 8 exploited answering queries.
Corollary 2. Let K = hA, consistent PST KB, Q = (?id, q, ?t, [`, u]) query. Then,
1) feasible solution MBL(hA{loc(id, q, t)[`, u]}, Fi), hid, ti optimistic
answer Q w.r.t. K.
2) MBL(hA {loc(id, q, t)[0, ` ]}, Fi) MBL(hA {loc(id, q, t)[u + , 1]}, Fi)
feasible solution, hid, ti cautious answer Q w.r.t. K (where given
Theorem 10).
Similarly, Theorems 3 10 following corollary follows, stating linear system
NC() introduced Definition 9 used answering queries.
Corollary 3. Let K = hA, consistent PST KB, Q = (?id, q, ?t, [`, u]) query. Then,
1) feasible solution NC(hA {loc(id, q, t)[`, u]}, Fi), hid, ti
optimistic answer Q w.r.t. K.
2) NC(hA {loc(id, q, t)[0, ` ]}, Fi) NC(hA {loc(id, q, t)[u + , 1]}, Fi)
feasible solution, hid, ti cautious answer Q w.r.t. K (where given
Theorem 10).
Moreover, obtain following corollary Theorems 4 10.

Corollary 4. Let K = hA, consistent PST KB F = { loc(id1 , {p1 }, t1 )
loc(id2 , {p2 }, t2 ) loc(idn , {pn }, tn )]}, Q = (?id, q, ?t, [`, u]) query. Then,
1) hid, ti optimistic answer Q w.r.t. K iff feasible solution NC(hA
{loc(id, q, t)[`, u]}, Fi).
2) hid, ti cautious answer Q w.r.t. K iff NC(hA {loc(id, q, t)[0, ` ]}, Fi)
NC(hA {loc(id, q, t)[u + , 1]}, Fi) feasible solution, given Theorem 10.
Theorems 6 10 obtain following result.
Corollary 5. Let K = hA, consistent PST KB F consists binary std-formulas
only, Q = (?id, q, ?t, [`, u]) query. AG acyclic,
1) hid, ti optimistic answer Q w.r.t. K iff feasible solution BC(hA
{loc(id, q, t)[`, u]}, Fi).
2) hid, ti cautious answer Q w.r.t. K iff BC(hA {loc(id, q, t)[0, ` ]}, Fi)
BC(hA {loc(id, q, t)[u + , 1]}, Fi) feasible solution, given Theorem 10.
Moreover, results Theorem 7, shape auxiliary graph considered,
Theorem 10 entail following.
777

fiPARISI & G RANT

Corollary 6. Let K = hA, consistent PST KB F consists binary std-formulas
only, Q = (?id, q, ?t, [`, u]) query.
1) feasible solution BC(hA {loc(id, q, t)[`, u]}, Fi), hid, ti
optimistic answer Q w.r.t. K
2) BC(hA {loc(id, q, t)[0, ` ]}, Fi) BC(hA {loc(id, q, t)[u + , 1]}, Fi)
feasible solution, hid, ti cautious answer Q w.r.t. K (where given
Theorem 10).
Still, Theorems 8 10 obtain following corollary.
Corollary 7. Let K = hA, consistent PST KB F consists binary std-formulas
only, Q = (?id, q, ?t, [`, u]) query. AG simple-clique cyclic,
1) hid, ti optimistic answer Q w.r.t. K iff feasible solution CL(hA
{loc(id, q, t)[`, u]}, Fi).
2) hid, ti cautious answer Q w.r.t. K iff CL(hA {loc(id, q, t)[0, ` ]}, Fi)
CL(hA {loc(id, q, t)[u + , 1]}, Fi) feasible solution, given Theorem 10.
Finally, state following corollary Theorems 9 10 concerning cases computing selection queries tractable. Although result stated assuming binary stdformulas PST KB, holds general case unary binary stdformulas PST KB since, using approach suggested proof Theorem 5,
assume unary std-formulas encoded PST atoms.
Corollary 8. Let K = hA, PST KB F consists binary std-formulas only.
G clique-acyclic simple clique-cyclic, deciding whether hid, ti optimistic/cautious
answer selection query Q = (?id, q, ?t, [`, u]) PTIME.

5. Domain Enlargement
point assumed three domains ID = {id1 , . . . , idm }, = [0, 1, . . . ,
tmax], Space = {p1 , . . . , pn } fixed. context investigated consistency
PST KB. section investigate happens PST KB one domains
modified. modification consists possibly adding new time values, spatial points,
objects. fact, interested happens add arbitrarily many (but finite number
of) entities. Section 5.1 consider case deal longer time period add
additional time values beyond tmax. Section 5.2 deal time case
allow finer division time values. Section 5.3 deals case Space enlarged,
is, new points added. Finally, Section 5.4 deal additional objects well
combinations domain enlargement.
5.1 Extending Time Beyond tmax
start PST KB K using ID, , Space. Suppose extend beyond tmax;
write 0 = [0, 1, . . . , tmax, . . . , t0 ]. means syntax must extended
778

fiK NOWLEDGE R EPRESENTATION P ROBABILISTIC PATIO -T EMPORAL K NOWLEDGE BASES

constants tmax + 1, . . . , t0 ; however, K use new constants. semantics
different world w0 must function w0 : ID 0 Space. write W
set worlds using W 0 set worlds using 0 . connection W
W 0 every w W extended many worlds W 0 choosing point Space
new time value object. one world w0 W 0 unique restriction
world W . Satisfaction worlds W 0 defined way satisfaction
worlds W (with W 0 substituted W ).
interest semantics due concept interpretation interpretation
assigns world probability. Let W = {w1 , . . . , wz } z = nm(tmax+1) let W 0 =
0
{w10 , . . . , wy0 } = nm(t +1) . every wi W , define set worlds Wi0 =
{wj0 |wj0 W 0 wj0 extension wi }. means restriction every wj0 Wi0
wi . Next, letPI1 interpretation W . call interpretation I10 extension I1 i,
1 z, w0 W 0 I10 (w0 ) = I1 (wi ). is, probability value I1 (wi ) distributed among

extensions wi i. go direction. I20 interpretation

P
0
0
W , define restriction W , I2 , using formula, is, I2 (wi ) = w0 W 0 I2 (w0 )

i, 1 z.
framework allows us investigate happens consistency inconsistency
K go 0 . start inconsistency. state next theorem two different
forms useful various contexts.
Theorem 12. Let K contain time values .
a) K inconsistent time , K remains inconsistent expanded 0 .
b) 0 expansion K consistent 0 consistent .
Proof. second part contrapositive first, suffices prove one part.
prove second one. assume K, uses time values , consistent
expanded 0 . means interpretation 0 K (using W 0 ) model
K. WeP
obtain interpretation (for W ) 0 using formula given above, is,
(wi ) = w0 W 0 0 (w0 ) i, 1 z. need show model K.

Consider first atomic formulas
wi , wi |= loc(id, r, t) iff w0 |=
PA. Clearly, worldP
0
0
0
0
loc(id, r, t) w Wi . Hence, w|w|=loc(id,r,t) (w) =
w0 |w0 |=loc(id,r,t) (w ).
takes care A.
P
P
Next, let f F. w0 |w0 6|=f 0 (w0 ) = 0. need show w|w6|=f (w) = 0.
Let wi W world wi 6|= f . means substitution using time
values wi 6|= (f ). remains substitutionPwhen 0 used time.
wj0 Wi0 , wj0 6|= (f ). 0 model K hence F, w0 |w0 6|=f 0 (w0 ) = 0 result
follows definition .
Next consider case PST KB defined using consistent. turns
consistency need preserved expanded 0 . Consider case following
single integrity constraint:
X1 X2 Y1 Z1 [loc(X1 , Y1 , Z1 ) loc(X2 , Y1 , Z1 ) X1 6= X2 tmax < Z1 ] suppose
|ID| > |Space|. std-formula states two different objects cannot location
time tmax. condition tmax < Z1 false substitutions Z1 ; hence integrity
constraint automatically true. enlarged 0 (> ), say t0 = tmax + 1,
779

fiPARISI & G RANT

inconsistency enough points Space objects occupy distinct
points. show given consistent K always extend = [0, . . . , tmax]
big = [0, . . . , tmax, . . . , tbig] K consistent big K remains consistent
0 0 = [0, . . . , tmax, . . . , t0 ]. Essentially, must make sure every time variable
substitution makes conjunct true f . example, previous example
modified
X1 X2 Y1 Z1 Z2 [loc(X1 , Y1 , Z1 ) loc(X2 , Y1 , Z2 ) X1 6= X2 tmax < Z1 Z2 = Z1 + 4]
must enough time values include tmax + 5. show systematically
proof next theorem.
Theorem 13. consistent PST KB K defined time values = [0, . . . , tmax], always finite time value tbig tmax computed linear time, K consistent
using big = [0, . . . , tmax, . . . , tbig] K consistent 0 = [0, . . . , tmax, . . . , t0 ].
Proof. obtain time value tf integrity constraint f F. f initialize
tf = tmax + 1. f contains one time variable Z done f . suppose f
least one conjunct two distinct time variables. must one following four
forms (where +0 omitted): 1) Zi + = Zj + n, 2) Zi + 6= Zj + n, 3) Zi + < Zj + n,
4) Zi + Zj + n. process involves adding certain number tf conjunct.
type 1) add |m n|, type 2) add 1, type 3) add max(0, n + 1), type 4) add
max(0, n m). Then, adding numbers conjuncts obtain tf value
f F. Let tbig = maxf F {tf }. process linear size F.
must show K consistent big consistent 0 = [0, . . . , tmax,
. . . , t0 ]. t0 tbig consistency follows Theorem 12b). assume tbig t0
K consistent big . means interpretation big model K.
proof Theorem 12, issue concerns constraints F. write W big

worlds using big write wb arbitrary world W big . f F,
P set big
(wb ) = 0. obtain 0 big arbitrary way long formula
b
b
Pw |w 6|=f 0 0
(w ) = big (wib ) satisfied. show 0 model K 0 , need
w0 Wi0
P
show w0 |w0 6|=f (w0 ) = 0. let wi0 W 0 wi0 6|= f . substitution
0 wi0 6|= 0 (f ). 0 may include time values 0 . construction assures
already substitution b using values big world wib
restriction wi0 big wib 6|= b (f ). Hence 0 model K 0 .
results allow us consider case arbitrarily large (finite) time.
Definition 19. call K eventually consistent (resp. inconsistent) time integer
L K consistent (resp. inconsistent) = [0, . . . , L, . . . , ].
Corollary 9. Every K either eventually consistent time eventually inconsistent time.
Proof. K inconsistent time Theorem 12a) eventually inconsistent time.
K consistent time two cases. K still consistent time big
computed proof Theorem 13 eventually consistent time. Otherwise
conclude Theorem 12a) eventually inconsistent time.
Consider results used query answering expand time
= [0, . . . , tmax] 0 = [0, . . . , tmax, . . . , t0 ]. order avoid confusion write K
780

fiK NOWLEDGE R EPRESENTATION P ROBABILISTIC PATIO -T EMPORAL K NOWLEDGE BASES

time K0 time 0 . First, K inconsistent, according Theorem 12a),
K0 inconsistent. consider case K consistent (recall queries evaluated
consistent PST KBs). Note check pair hid, ti answer Q
expansion 0 , considers time values tmax < t0 . Using Theorem 10
obtain:
hid, ti optimistic answer Q w.r.t. K0 iff hA {loc(id, q, t)[`, u]}, consistent
using 0 . need check separately K0 consistent K0 hA
{loc(id, q, t)[`, u]}, Fi.
check cautious answer, first check K0 consistent, so,
hid, ti cautious answer Q w.r.t. K0 iff hA {loc(id, q, t)[0, ` ]}, hA
{loc(id, q, t)[u + , 1]}, consistent using 0 , given Theorem 10.
similar vein, Theorem 11 carries case extended time.
5.2 Extending Time Frequent Time Values
second type time extension consider frequent time values,
tmax + 1 time values 0 tmax. illustration, use 0 = [0, 0.5, 1, 1.5,
. . . , tmax]. Again, syntax must changed well include new constants 0.5, 1.5,
on; however, original K defined using = [0, 1, . . . , tmax] contain new
constant. situation worlds similar happened previous subsection: every
w : ID Space unique restriction many worlds, ws, w0 : ID 0 Space. Also,
satisfaction worlds W 0 using 0 defined way worlds W using .
first result type time extension previous one.
Theorem 14. Let K contain time values .
a) K inconsistent time , K remains inconsistent expanded 0 .
b) 0 expansion K consistent 0 consistent .
Proof. Analogous proof Theorem 12.
Next consider case K consistent (using ). Again, consistency need
preserved going 0 . Consider case following std-formula:
Y1 Z1 [loc(id1 , Y1 , Z1 ) Z1 > 0 Z1 < 1).
formula states id1 cannot location 0 1. condition 0 < Z1 Z1 <
1 false substitutions , hence integrity constraint true. expand 0
substitution 0.5 Z1 makes formula state id1 cannot location time 0.5,
making inconsistent. However, extend frequent time values f r K
consistent f r consistent subdivision original time values.
Theorem 15. consistent PST KB K defined time values = [0, . . . , tmax],
always integer value computed linear time, K consistent using
f r = [0, 1 , 2 , . . . , 1, +1
, . . . , tmax] K remains consistent every subdivision .
781

fiPARISI & G RANT

Proof. proof analogous proof Theorem 13. calculate integer f
integrity constraint f F let = maxf F {f }. idea make sure
enough time values allow (Z) become true subdivision time intervals
become true substitution. worst case every time variable may require new subdivision
time values. Hence choose f = 2k k number time variables f .
rest proof analogous proof Theorem 13.
previous section wanted consider arbitrarily large time values,
consider dividing time intervals arbitrarily many times.
Definition 20. call K divisionally consistent (resp. inconsistent) time integer
L K consistent (resp. inconsistent) = [0, 1 , 2 , . . . , tmax] > L.
Corollary 10. Every K either divisionally consistent time divisionally inconsistent time.
Proof. Analogous proof Corollary 9.
Results analogous time expansion done Section 5.1 hold query answering
complexity.
5.3 Space Enlargement
subsection consider happens consistency inconsistency K Space
enlarged, say Space = {p1 , . . . , pn } Space0 = {p1 , . . . , pn , . . . , pv }. change
semantics different case expanded . w : ID Space world
(for Space), remains world Space0 . writing W set worlds using Space
W 0 set worlds using Space0 , obtain W W 0 . change definition
satisfaction, number interpretations becomes greatly enlarged. Still, every interpretation
using Space extended unique 0 using Space0 assigning 0 (w0 ) = 0 w0
W0 \ W.
case time, start case K inconsistent. unlike time,
Space enlarged K may become consistent. Consider simple example K consists
single atom: = loc(id1 , {p1 , . . . , pn }, 1)[.2, .7]. K inconsistent. add single point
Space Space0 = {p1 , . . . , pn , pn+1 } K becomes consistent: instance w10 world
w10 (id1 , 1) = p1 values arbitrary, w20 world w20 (id1 , 1) =
pn+1 values arbitrary, assigning 0 (w10 ) = 0.5 0 (w20 ) = 0.5 0 (w0 ) =
0 worlds makes 0 model. similar situation may occur integrity constraints.
Consider K contains single std-formula: f : X1 Y1 Z1 [loc(X1 , Y1 , Z1 )Y1 ov {p1 , . . . , pn }]
Since every region overlaps Space, f , itself, inconsistent. again, enlarge Space
one point pn+1 Space0 find model 0 follows. Let 0 (w0 ) = 0 every world
0
w0 w0 (id, t)
PSpace for0 hid, ti-pair, (w0 ) = 1 w0 (id, t) = pn+1
hid, ti pairs. w0 |w0 6|=f (w) = 0; hence inconsistency removed. However, suppose
addition f , K contains atom = loc(id1 , {p1 }, 0)[1, 1] A, is, = {a}
F = {f }. PST atom states id1 must p1 time 0. case cannot make
K consistent adding number points Space f conflict. Hence
general statement happens inconsistent PST KB Space extended
Space0 .
782

fiK NOWLEDGE R EPRESENTATION P ROBABILISTIC PATIO -T EMPORAL K NOWLEDGE BASES

Next consider case K consistent (using Space). case show
remains consistent Space expanded Space0 .
Theorem 16. K consistent Space, K remains consistent Space enlarged
Space0 .
Proof. Let model K (using Space). assigns probability (w) world w.
Space extended Space0 , many new worlds added. define 0 (w) = (w) w
world Space used 0 (w) = 0 otherwise. Thus basically excluding
worlds using points Space sense given probability 0, 0 model
K using Space0 . Hence consistency preserved.
Again, case time, interested happens arbitrarily large finite
spaces.
Definition 21. call K eventually consistent (resp. inconsistent) space integer
L K consistent (resp. inconsistent) Space = {p1 , . . . , pn , . . . , pL , . . . , p }.
Corollary 11. Every K either eventually consistent space eventually inconsistent space.
Proof. two cases. start first case K consistent Space. Then,
Theorem 16 remains consistent larger Space0 . Hence eventually consistent
space. Consider second case K inconsistent Space. two subcases.
First, suppose K becomes consistent larger Space0 . Then, first case,
Theorem 16 K eventually consistent space. second subcase K never becomes
consistent matter Space extended Space0 . means K eventually inconsistent
space.
showed earlier examples inconsistent K (with Space) may become consistent
Space enlarged. calculate bound size needed space
bound reached consistency inconsistency change spatial enlargement.
Theorem 17. every inconsistent K using Space = {p1 , . . . , pn }, explicit bound L
tractable compute K using Space0 = {p1 , . . . , pL } inconsistent, remains
inconsistent enlargement Space0 .
Proof. already know corollary L exists. show
compute it. First all, enlargement Space resolves inconsistency K K
eventually inconsistent space choose L = n. Thus need deal detail
case enlargement Space resolves inconsistency K, is, K
eventually consistent space. consider adding points Space make K consistent.
three cases:
1. inconsistency due alone,
2. inconsistency due combination elements F,
3. inconsistency due F only.
783

fiPARISI & G RANT

Consider first Case 1 inconsistency must due atoms fixed id
values. assume dealing atoms using specific pair values: id
t. Adding point points Space resolve inconsistency atoms using id
give Space probability less 1. instance, let = {loc(id, r1 , t, [0, 0.4]), loc(id, r2 , t, [0.1,
0.3])} r1 r2 = Space. Then, enlarging Space Space0 = Space {pn+1 } resolves
inconsistency. true general, example, pn+1 added
Space, {p1 , . . . , pn } becomes proper subset relevant Space0 may consistently
probability less 1. Now, consider may inconsistencies involving multiple pairs
id values. matter addition single point pn+1 Space
resolves inconsistencies. Case 1 choose L = n + 1.
Case 2 inconsistency K due combination elements F. every
atom refers specific region r specific object id time value t, inconsistency
occur f F, substitution f must act atom (with probability interval
[0, 0]). instance, let = loc(id, r1 , t, [0, 0.4]) f = X1 [loc(X1 , r2 , t)] r1 r2 =
Space. instance f causes inconsistency [loc(id, r2 , t)] effect
semantics atom loc(id, r2 , t, [0, 0]). true general, example.
way Case 2 reduces Case 1 choose L = n + 1.
last case, Case 3, inconsistency due F. problem case
due fact F requires points Space. need consider
expressed number spatial points std-formulas. cannot done writing many
spatial variables formula f spatial variables, say Y1 , . . . , Ym , way
express must refer different points. However, express Space
enough points writing f0 = X1 Y1 Z1 [loc(X1 , Y1 , Z1 ) Y1 ov Space]. Again, adding
single point Space resolves inconsistency. write std-formulas require least
certain number points. express constraint point occupied
one object one time using following 3 std-formulas:
f1 = X1 Y1 Z1 Z2 [loc(X1 , Y1 , Z1 ) loc(X1 , Y1 , Z2 ) Z1 6= Z2 ]
f2 = X1 X2 Y1 Z1 [loc(X1 , Y1 , Z1 ) loc(X2 , Y1 , Z1 ) X1 6= X2 ]
f3 = X1 X2 Y1 Z1 Z2 [loc(X1 , Y1 , Z1 ) loc(X2 , Y1 , Z2 ) X1 6= X2 Z1 6= Z2 ]
f1 states object point two different times; f2 states time
two objects point; f3 states two different objects cannot point
two different times. Hence using std-formulas reference number objects times
number time points. Let L = n + |ID| (tmax + 1). Thus Space0 = {p1 , . . . , pL } consists
point object time point addition original n points Space,
place objects Space0 even none points Space used object
needs new point time point. Clearly, L > n + 1, L works Cases 1 2
well. value L choose tractable explicit bound. Thus K using
Space0 = {p1 , . . . , pL } still inconsistent, points added Space0 make consistent.
5.4 Extending Number Objects Several Entities
last case number constants may increased ID. Since world w
function w : ID Space, expansion objects similar expansion time,
784

fiK NOWLEDGE R EPRESENTATION P ROBABILISTIC PATIO -T EMPORAL K NOWLEDGE BASES

expansion space. extension restriction interpretations going ID
larger ID0 analogous addition time values . Without getting details
analogous cases time given earlier, state K inconsistent ID, remains
inconsistent ID expanded ID0 . show consistency need preserved, consider f =
X1 X2 . . . Xm+1 [loc(X1 , Y1 , Z1 )loc(X2 , Y2 , Z2 ). . .loc(Xm+1 , Ym+1 , Zm+1 )X1 6= X2
X1 6= X3 . . . Xi 6= Xj . . . Xm 6= Xm+1 ] 6= j. Recalling ID = {id1 , . . . , idm }
find K = {f } consistent ID states cannot distinct
objects. becomes inconsistent ID enlarged ID0 = {id1 , . . . , idm , idm+1 }.
always find q linear time K consistent ID0 = {id1 , . . . , idm , . . . , idq }
K consistent enlargement ID0 . Obtaining value q easier obtaining
tbig time. matter counting number X variables f F
taking maximum value, bigger m. Hence define eventually consistent (resp.
inconsistent) objects way time, obtain result every K either
eventually consistent objects eventually inconsistent objects.
far considered individual enlargements either time values points space
objects. may interested combining several types extensions. expansion
time objects similar, start combining them.
Definition 22. call K using ID, , Space eventually consistent (resp. inconsistent)
objects general time integers L1 , L2 , L3 K consistent (resp.
inconsistent) ID = {id1 , . . . , idm , . . . , idL1 , . . . , id }, Space = {p1 , . . . , pn }, =
tmax+1
[0, 1 , 2 , . . . , 1, +1
, . . . , . . . , ] > L2 > L3 .
, . . . tmax,

combination expansion objects time magnitude divisionally works
essentially way expansion one items. is, set
worlds original K W set worlds expansion ID W 0 ,
every world W set extensions W 0 every world W 0
unique world W restriction. key issue Space remains unchanged.
let K contain time values , regions Space objects ID. Suppose
expanded 0 expansion may magnitude division ID expanded
ID0 find K, context 0 ID0 Space unchanged, consistent.
proof Theorem 12 start model 0 K using 0 ID0 obtain corresponding
model K using starting ID. Thus, contrapositive, K inconsistent
, Space ID, remains inconsistent 0 , Space ID0 . shows inconsistent
K eventually inconsistent objects general time. case K consistent , Space
ID becomes inconsistent expansion 0 , Space ID0 , eventually
inconsistent objects general time. alternative K remain consistent
matter ID expanded. Hence earlier results put together following
result.
Theorem 18. Every PST KB K either eventually consistent objects general time
eventually inconsistent objects general time.
However, situation different cases combine space time objects
show using example.12
12. example suggested one reviewers.

785

fiPARISI & G RANT

Example 25. Consider PST KB K = h, {f }i defined using ID = {id1 , . . . , idm }, =
[0, 1, . . . , tmax], Space = {p1 , . . . , pn } n f std-formula f2 used
proof Theorem 17 states two different objects cannot point
time. condition n, K consistent. Expand ID ID0 =
{id1 , . . . , idm , . . . , idn+1 } leaving Space unchanged call new KB K0 .
many objects number points; hence K0 inconsistent. Next, expand Space
Space00 = {p1 , . . . , pn , pn+1 } leaving ID0 unchanged call new KB K00 . K00
consistent.
2
example shows cannot claim eventual (in)consistency number objects
number points may increase continue process indefinitely. analogous result holds case number time values number points may increase.

6. Related Work
first discuss related works classical probabilistic logic explicit spatial
temporal components. discuss relationship work spatio-temporal
approaches. Finally, relate framework object tracking.
6.1 Probabilistic Logic
discussed Section 3, PST KB expressed classical propositional logic (Hailperin,
1984; Nilsson, 1986; Paris, 1994), particular consistency checking problem
formulated terms Probabilistic Satisfiability (PSAT), whose first formulation attributed
Boole (1854). presentation AI community Nilsson (1986), study PSAT
point view efficient algorithms computational complexity first addressed
Georgakopoulos et al. (1988), showed PSAT NP NP-hard even binary
clauses. tractable results identified Georgakopoulos et al. concern special case
clause involves two literals (2PSAT) graph clauses outerplanar,13
graph clauses contains vertex literal two kinds edges: i) edge
pair literals built propositional variable, (ii) edge pair
literals appearing clause. note PSAT formula K encoding PST KB K
(see proof Theorem 1) contains two literals per clause even focus binary
std-formulas (K becomes 2PSAT formula assume Space consists two
points).
result provided Georgakopoulos et al. relies reducing 2PSAT tractable instance
2MAXSAT (weighted maximum satisfiability problem two literals per clause). Using reduction result Conforti Cornuejols (1992) tractability problems
formulated integer program whose matrix balanced, following general result
provided Conforti Cornuejols: PSAT tractable balanced set clauses, is,
set clauses whose corresponding {0, 1} clause-variable matrix balanced. However,
result doesnt help finding tractable cases PST KBs K reduction PSAT K ,
considering three points Space suffices make matrix corresponding K balanced (it
entails presence odd cycle graph clauses that, observed Andersen & Pre13. graph said outerplanar embedded plane vertices lie face.
is, drawn plane without crossings way vertex totally surrounded edges.

786

fiK NOWLEDGE R EPRESENTATION P ROBABILISTIC PATIO -T EMPORAL K NOWLEDGE BASES

tolani, 2001, characterizes non-balanced matrices). Motivated fact tractable cases
PSAT identified Georgakopoulos et al. Conforti Cornuejols rely using polynomial
time algorithm whose complexity characterized high polynomial degree (specifically,
complexity O(n6 log n) n number propositional variables), Andersen Pretolani identified efficient algorithms classes balanced sets clauses
represented either hypertrees (where hyperarc corresponds set literals clause)
co-occurrence graph partial k-tree (Bodlaender, 1998).
worth noting none tractable cases identified paper derived
results PSAT described reducing K PSAT formula K . fact, tractable
cases derive specific structure PST KBs. hand, tractability results
entail tractability PSAT instances reduced tractable instance consistency
checking problem. particular, decide polynomial time PSAT instances K
structure specified reduction consistency checking problem PSAT,
consistency checking problem corresponding PST KB K turns tractable.
principle, fact reduction consistency checking problem PSAT
enables well-known techniques solving (general) instances PSAT based column generation (Kavvadias & Papadimitriou, 1990; Jaumard et al., 1991) used addressing consistency PST KBs. holds problem answering selection queries PST
KBs that, shown Section 4, addressed solving suitable instances consistency
checking problem. Recent approaches solve PSAT using SAT (Finger & Bona, 2011) Integer
Linear Programming (Cozman & di Ianni, 2015) column selection report experiments showing
phase transition behaviour (first observed Finger Bona PSAT) depending fraction number clauses propositional variables well number probability
assignments. Using techniques PSAT instances hundreds propositional variables
clauses solved reasonable time. However, believe reducing consistency checking (or query answering) problem PSAT applying techniques would
successful approach, number propositional variables clauses would
generated would huge even small-size PST KBs. avoid problem, conjecture
specific structure (PSAT formulas encoding) PST KBs could exploited devise
efficient techniques solving consistency checking query answering problems.
regard, would interesting investigate connection framework emerging field lifted probabilistic inference (Kersting, 2012), structure FOL-constructs
(such indistinguishable individuals) exploited speed reasoning process, see
results carry PST KBs.
use integrity constraints encode domain knowledge studied Lukasiewicz
(1999, 2001) Flesca, Furfaro, Parisi (2014), probabilistic frameworks however
explicitly deal space time. problem probabilistic deduction presence
conditional constraints basic events addressed Lukasiewicz (1999), identified
tractable instances probabilistic KBs, whose conditional constraints define conditional constraint
trees, support deduction paths premise/conclusions basic events. problem checking
consistency relational probabilistic databases (where tuples viewed basic events)
presence denial constraints addressed Flesca et al., provided tractability results constraints whose conflict hypergraph (Chomicki, Marcinkowski, & Staworko, 2004) acyclic (Fagin, 1983) well special kind cyclic hypergraphs, encode neither
clique-acyclic std-graphs simple clique-cyclic std-graphs. important probabilistic logic pro787

fiPARISI & G RANT

gramming approach conditional constraints proposed Lukasiewicz (2001), studied
complexity satisfiability entailment problems several types formulas
without identifying tractable cases. Differently above-cited papers, atomic information
framework structure involving objects, space, time, thus atoms may
intrinsically related object, space, time value.
6.2 Spatio-Temporal Approaches
Substantial work done spatio-temporal logics (Gabelaia et al., 2005; Knapp et al.,
2006) combine spatial temporal formalisms. includes important contributions
qualitative spatio-temporal representation reasoning (Muller, 1998; Wolter & Zakharyaschev,
2000; Cohn & Hazarika, 2001), focus describing entities qualitative relationships
dealing discrete time. Cohn, Li, Liu, Renz (2014) provided upto-date overview work done field qualitative spatial reasoning, recently
important problem combining topological directional information extended spatial objects
addressed. However, works intended reasoning moving objects
whose location given time uncertain (they put probabilities mix). Yaman
et al. (2004, 2005a, 2005b) focused spatio-temporal logical theories describe known plans
moving objects sets go atoms, stating object go location
L1 L2 , leaving L1 reaching L2 time intervals, travelling speed
given interval. Later, Parker et al. (2007b) extended logic include probabilistic
information plans. SPOT framework Parker et al. (2007a) extended
work uncertainty objects might given time.
Past work SPOT framework investigated efficient algorithms computing optimistic
cautious answers selection queries (Parker et al., 2009; Parisi et al., 2010). initial SPOT
framework build adding integrity constraints implemented tested
real US Navy databases containing ship location data (Parker et al., 2009; Parisi et al., 2010). Aggregate queries recently investigated Grant et al. (2013), proposed three semantics
along computational methods evaluating them. SPOT databases provide information
moving objects, one important aspect addressed Parker et al. (2008) investigated Grant et al. (2010) revising SPOT data information objects may
changed objects move. Grant et al. (2010) proposed several strategies revising SPOT data
finding maximal consistent subsets, minimally modifying spatial, temporal, object,
probability components PST atoms. full logic including negation, disjunction quantifiers
managing SPOT data recently proposed Doder et al. (2013), focused finding
sound complete sets axioms several fragments logic. Grant, Parisi, Subrahmanian (2013) provided comprehensive survey SPOT framework related research
reviewed.
much work spatio-temporal databases (Agarwal et al., 2003; Pelanis et al.,
2006) probabilistic spatio-temporal databases (Tao et al., 2005; Zhang, Chen, Jensen, Ooi, &
Zhang, 2009; Zheng, Trajcevski, Zhou, & Scheuermann, 2011), works mainly focus devising indexing mechanisms scaling query computation, instead representing knowledge
declarative fashion. particular, Chung, Lee, Chen (2009) use indexing speed computation range queries derive PDF location object moving one-dimensional
space using past moving behavior moving velocity distribution. Zhang et al. (2009)
788

fiK NOWLEDGE R EPRESENTATION P ROBABILISTIC PATIO -T EMPORAL K NOWLEDGE BASES

provide B x -tree index variant B + -tree applicable moving objects whose location
velocity uncertain. Two types pruning introduced Yang, Lu, Jensen (2010)
efficiently solve queries asking sets k objects least threshold probability
containing k nearest objects given object. Dealing similar problem, Chen, Qin,
Liu (2010) propose TPR-tree indexing. Finally, Zheng et al. (2011) deal primarily
objects moving along road networks, introduce indexing mechanism efficiently processing probabilistic range queries. However, none works systematically addresses issue
considering integrity constraints probabilistic spatio-temporal data.
6.3 Object Tracking
Object tracking one important problems computer vision (Szeliski, 2010)
consecutive positions tracked object estimated moves different frames
video. Numerous approaches object tracking proposed, mainly differing
type object representation used (e.g., centroid, primitive geometric shapes), image
features selected (e.g., colour, optical flow), object detection method adopted (e.g., background
subtraction, segmentation). However, tracking algorithm chosen given application
strongly depends application domain (Yilmaz, Javed, & Shah, 2006). Moreover, object
tracking algorithms may incur errors, due instance loss information caused projection
3D world 2D image, noise images, partial full object occlusions, estimation
position tracked moving objects inherently uncertain (even camera focuses fixed,
specific area). Several important statistical methods object tracking computer vision (e.g., see
Broida & Chellappa, 1986; Beymer & Konolige, 1999; Rosales & Sclaroff, 1999) based
well-known Kalman filter (1960) extensions deal non-linear case, well
particle filtering (Kitagawa, 1987).
Filtering techniques extensively used object tracking presence sensors,
cameras. matter fact, object tracking extensively addressed
general setting position (i.e., state) one objects estimated recursive
Bayesian filter given measurements time coming different kinds sensors
(including, instance, radar, sonar, infrared, types sensors possibly along visual
sensors) (Stone, Corwin, & Barlow, 1999). Basically, observed time point t, output
filter probability distribution (i.e., posterior) position target object,
computed combining motion updated time prior likelihood
observation received time t, likelihood represents probability sensor
measurement conditioned object position (Bar-Shalom, Kirubarajan, & Li, 2002).
Kalman filter used discrete-time estimation continuous spatial positions
objects whose movement equations assumed linear Gaussian noise.
used successfully non-linear systems applying linearization unscented transformation (Julier, Jeffrey, & Uhlmann, 2004). discrete space non-linear systems, particle filtering
successfully used, providing solution applied state-space model
generalizes traditional Kalman filtering methods (Arulampalam, Maskell, Gordon, &
Clapp, 2002). general framework particle filtering based Sequential Importance Sampling Resampling proposed Liu Chen (1998), though number different types
particle filters exist shown outperform others used particular
applications (Arulampalam et al., 2002).
789

fiPARISI & G RANT

Differently Kalman filtering, estimated position object observed
time point represented continuous distribution, particle filters based histogram representation probability density, approximated finite number particles (i.e.,
samples): particle represents position space, weights associated particles (or
proportion number particles) define histogram probability distribution space.
fits representation paradigm PST KBs: PST KBs allow us represent,
object time point, PDF Space defining PST atom single valued probability
interval (that is, ` = u) point Space, used easily represent output object tracking techniques based particle filtering. filtering techniques returning continuous
distribution Space, discretization step applied.
output object tracking techniques represented using PST KBs,
important aspects techniques deal PST KBs cannot do. particular, filtering techniques use conditional independence represent PDF objects positions conditional
positions previous time. PST KBs encode output inference process,
lack expressive power kind inference. instance, tracking techniques
represent knowledge object region r1 time t1 probably region
r2 time t2 probability depending time elapsed t1 t2 . Indeed trackers
rely motion model according distribution objects location spreads
elapsed time since last measurement: distribution objects locations
narrowly focused locations near measured position t1 t2 close t1 , diffuse
t2 faraway t1 . tracking techniques sort things quite naturally, PST KBs
capture aspects behavior. instance, express fact object
probably region r1 t1 , use integrity constraint imposing travel
distance units 1 time point. would increase probability finding object
time t2 region less units away r1 , would decrease probability finding
object region farther away units. However, different inferred
tracking techniques using conditional independence.
hand, tracking techniques combine well interval probabilities.
fact typically return PDF objects position observed time point. contrast, using general PST atoms (with probability intervals), object time point,
(possibly infinite number) PDFs compatible probability intervals specified
atoms succinctly represented. instance, assuming Space = {p1 , p2 } PST atom
loc(id, {p1 }, t)[0, 0.5], PDFs f Space assigning probability f (p1 ) [0, 0.5]
f (p2 ) = 1 f (p1 ) represented. However, set PDFs represented restricted using
single valued probability intervals adding integrity constraints using std-formulas.
note PST formalism allows us impose integrity constraints KBs
obtained integrating position data coming different sources. Consider instance
integration several PST KBs, consisting PST atoms encoding output
autonomous tracking system. so-obtained integrated KB still PST KB, integrity
constraints used express knowledge overall system, could expressed
considering tracking systems separately. instance, suppose integrated PST KB
consisting position data monitored cars collected using black-box tracking systems
installed cars insurance companies. std-formulas used express correlations
among monitored cars. instance, knowing region r licensed inspection station
able inspect k cars time, impose constraint cannot
790

fiK NOWLEDGE R EPRESENTATION P ROBABILISTIC PATIO -T EMPORAL K NOWLEDGE BASES

k cars r time. constraint would meaningless considered KB
car tracking system separately, useful restricting set consistent interpretations
PST KB obtained integrating several sources.

7. Summary
believe first comprehensive paper focuses systematically knowledge representation form integrity constraints probabilistic spatio-temporal data.14 knowledge
represented form spatio-temporal atoms describing location objects time
probability interval well spatio-temporal denial formulas describing integrity constraints system must satisfy. Within framework investigated consistency checking
problem well problem answering selection queries consistent PST KBs. Although
problems turned hard general case, devised several sets linear
inequalities allow us decide consistency well answer queries checking feasibility. addition, identified different classes spatio-temporal denial formulas
checking consistency answering queries tractable. Finally, discussed extension
framework arbitrarily large finite numbers objects, time values, points space
showed behavior consistency inconsistency uniform.

8. Future Work Conclusion
issues investigated. Following Parisi Grant (2014b),
studied problem restoring consistency PST KBs form KhA, (where set
std-formulas empty), consider problem repairing inconsistent PST KB
inconsistency due presence std-formulas satisfied. regard would
interesting devise methods answering queries inconsistent PST KBs. Recently
research probabilistic reasoning inconsistency (Picado-Muino, 2011; Thimm,
2013; Potyka & Thimm, 2014) help regard. would interesting look
possibility semantic query optimization PST KBs, study use previous
knowledge efficiently check consistency process queries updates.
Another direction future work investigation probabilistic std-formulas expressing
constraints hold probability given interval. Intuitively, would allow us state
instance two objects region time probability greater
given threshold, instead stating cannot situation. kind
probabilistic constraint could expressed using pstd-formulas form f [`, 1] f
std-formula (i.e., f [1, 1] captures meaning std-formula). change semantics
means changing
definition model. second part Definition 6 modified
P
f F, w|w|=f (w) [`, 1]. Clearly, lower bounds complexity consistency checking
query answering problems still hold extension. easy check upper bound
provided Theorem 1 holds since reduction PSAT still provided mapping pstdformulas clauses associated probability interval. regards tractable cases, conjecture
results Theorems 6 8 still hold pstd-formulas form f [`, 1] right-hand
side inequality (4) Definitions 15 17, respectively, replaced lower probability
bound ` ground pstd-formula f [`, 1] generating inequality. However, allowing general
14. substantially revised expanded version work Parisi Grant (2014a).

791

fiPARISI & G RANT

probability intervals associated std-formulas introduces new issues semantics: f [`, u]
would entail f [1 u, 1 `] holds. Providing clear intuitive semantics kind
std-formula, well probabilistic std-formulas allowing probability intervals associated
conjunct (instead whole formula), deferred future work.
PST formalism propositional even though atoms substantial content.
added std-formulas integrity constraints; special class first-order logic formulas. would interesting consider works general first-order probabilistic logics (Halpern, 1990; Lukasiewicz & Kern-Isberner, 1999; Kern-Isberner & Thimm, 2010).
logics developed different purpose attempt could made represent spatiotemporal information them. works well could enhanced spatiotemporal information, Markov Logic (Richardson & Domingos, 2006), Bayesian Logic
Programs (Kersting & Raedt, 2007). particular, Milch et al. (2005) introduces first-order language called BLOG (Bayesian LOGic) defining probability models worlds unknown
objects identity uncertainty, finds natural application object tracking unknown
objects. may possible find generalization PST formalism includes
concepts. so, aspect need take care fact Markov logic
Bayesian logic programs deal unique probability distribution, deal
probability distributions compatible PST atoms std-formulas.
Researchers AI studying spatial temporal reasoning many years (Allen,
1984; Randell, Cui, & Cohn, 1992; Galton, 2009). interesting project incorporation
concepts PST framework. new syntax semantics include adding rules
language. additions allow adding types information well new
integrity constraints. instance, using concepts qualitative direction orientation proposed spatial reasoning (Galton, 2009) would allow us explicitly represent knowledge
region toward object moving. Another important concept needed many applications explicit representation qualitative quantitative distance objects well
information speed (i.e., maximum average) objects. Additional structured information objects type (e.g., vessel, vehicle, person, etc.) would general useful
exhaustively reason moving objects. However, depending addition made increase
expressive power extended framework, important consequences complexity
consistency checking problem may arise. Spatial temporal aspects formalisms qualitative
spatial temporal reasoning expressive framework (Gabelaia
et al., 2005; Knapp et al., 2006). trade-off expressiveness complexity within
hierarchy formalisms obtained combining well-known spatial temporal logics analyzed
Gabelaia et al. (2005), shown complexity satisfiability problem
spatio-temporal logics (not dealing probabilities) vary NP-complete undecidable.
Using formalisms PST framework may drastically increase computational complexity problems studied paper. Nevertheless, believe attempt
later made include even simpler concepts qualitative spatio-temporal reasoning PST
framework, particularly trying exploit restrictions recently studied Huang, Li, Renz (2013)
identify tractable fragments.
paper, proposed framework four features moving objects taken
account: spatial component, temporal component, inherent uncertainty acquired data,
integrity constraints application domain. expressiveness features could
improved represent additional knowledge may interest practical applications, partic792

fiK NOWLEDGE R EPRESENTATION P ROBABILISTIC PATIO -T EMPORAL K NOWLEDGE BASES

ularly using ideas papers dealing spatio-temporal reasoning. endeavor concrete
implementation framework, ideas PostGIS spatial database system extends
PostgreSQL would useful. believe worthwhile later incorporate concepts
PST framework. took first step extending PST framework addition
integrity constraints, hope researchers use work starting point investigations
important role integrity constraints probabilistic spatio-temporal knowledge bases.

Acknowledgments
wish thank referees numerous helpful comments helped us substantially improving paper.

References
Agarwal, P. K., Arge, L., & Erickson, J. (2003). Indexing moving points. J. Comput. Syst. Sci.,
66(1), 207243.
Ahson, S. A., & Ilyas, M. (2010). Location-Based Services Handbook: Applications, Technologies,
Security. CRC Press, Hoboken, NJ.
Akdere, M., Cetintemel, U., Riondato, M., Upfal, E., & Zdonik, S. B. (2011). case predictive database systems: Opportunities challenges. Proceedings 5th Biennial
Conference Innovative Data Systems Research (CIDR), pp. 167174.
Allen, J. F. (1984). Towards general theory action time. Artif. Intell., 23(2), 123154.
Andersen, K. A., & Pretolani, D. (2001). Easy cases probabilistic satisfiability. Ann. Math. Artif.
Intell., 33(1), 6991.
Arulampalam, M. S., Maskell, S., Gordon, N. J., & Clapp, T. (2002). tutorial particle filters
online nonlinear/non-gaussian bayesian tracking. IEEE Transactions Signal Processing,
50(2), 174188.
Bar-Shalom, Y., Kirubarajan, T., & Li, X.-R. (2002). Estimation Applications Tracking
Navigation. John Wiley & Sons, Inc., New York, NY, USA.
Bayir, M. A., Demirbas, M., & Eagle, N. (2010). Mobility profiler: framework discovering
mobility profiles cell phone users. Pervasive Mobile Computing, 6(4), 435 454.
Beymer, D., & Konolige, K. (1999). Real-time tracking multiple people using continuous detection. Proceedings Workshop Frame-rate Applications, Methods Experiences
Regularly Available Technology Equipment (FRAME-RATE), conjunction
7th IEEE International Conference Computer Vision (ICCV).
Bodlaender, H. L. (1998). partial k-arboretum graphs bounded treewidth. Theor. Comput.
Sci., 209(1-2), 145.
Boole, G. (1854). Investigation Laws Thought Founded Mathematical
Theories Logic Probabilities. Macmillan, London.
Broida, T. J., & Chellappa, R. (1986). Estimation object motion parameters noisy images.
IEEE Trans. Pattern Anal. Mach. Intell., 8(1), 9099.
793

fiPARISI & G RANT

Chen, Y.-F., Qin, X.-L., & Liu, L. (2010). Uncertain distance-based range queries uncertain
moving objects. J. Comput. Sci. Technol., 25(5), 982998.
Chomicki, J., Marcinkowski, J., & Staworko, S. (2004). Computing consistent query answers using
conflict hypergraphs. Proceedings 2004 ACM CIKM International Conference
Information Knowledge Management (CIKM), pp. 417426.
Chung, B. S. E., Lee, W.-C., & Chen, A. L. P. (2009). Processing probabilistic spatio-temporal
range queries moving objects uncertainty. Proceedings 12th International
Conference Extending Database Technology (EDBT), pp. 6071.
Cohn, A. G., & Hazarika, S. M. (2001). Qualitative spatial representation reasoning:
overview. Fundam. Inform., 46(1-2), 129.
Cohn, A. G., Li, S., Liu, W., & Renz, J. (2014). Reasoning topological cardinal direction
relations 2-dimensional spatial objects. J. Artif. Intell. Res. (JAIR), 51, 493532.
Conforti, M., & Cornuejols, G. (1992). class logic problems solvable linear programming.
Proceedings 33rd Annual Symposium Foundations Computer Science (FOCS),
pp. 670675.
Cozman, F. G., & di Ianni, L. F. (2015). Probabilistic satisfiability coherence checking
integer programming. Int. J. Approx. Reasoning, 58, 5770.
Doder, D., Grant, J., & Ognjanovic, Z. (2013). Probabilistic logics objects located space
time. J. Logic Computation, 23(3), 487515.
Fagin, R. (1983). Degrees acyclicity hypergraphs relational database schemes. Journal
ACM, 30(3).
Finger, M., & Bona, G. D. (2011). Probabilistic satisfiability: Logic-based algorithms phase
transition. Proceedings 22nd International Joint Conference Artificial Intelligence
(IJCAI), pp. 528533.
Flesca, S., Furfaro, F., & Parisi, F. (2014). Consistency checking querying probabilistic
databases integrity constraints. J. Comput. Syst. Sci., 80(7), 14481489.
Gabelaia, D., Kontchakov, R., Kurucz, A., Wolter, F., & Zakharyaschev, M. (2005). Combining
spatial temporal logics: Expressiveness vs. complexity. J. Artif. Intell. Res., 23, 167243.
Galton, A. (2009). Spatial temporal knowledge representation. Earth Science Informatics, 2(3),
169187.
Georgakopoulos, G. F., Kavvadias, D. J., & Papadimitriou, C. H. (1988). Probabilistic satisfiability.
J. Complexity, 4(1), 111.
Grant, J., Molinaro, C., & Parisi, F. (2013). Aggregate count queries probabilistic spatio-temporal
databases. Proceedings 7th International Conference Scalable Uncertainty Management (SUM), pp. 255268.
Grant, J., Parisi, F., Parker, A., & Subrahmanian, V. S. (2010). agm-style belief revision mechanism probabilistic spatio-temporal logics. Artif. Intell., 174(1), 72104.
Grant, J., Parisi, F., & Subrahmanian, V. S. (2013). Research probabilistic spatiotemporal
databases: SPOT framework. Advances Probabilistic Databases Uncertain
Information Management, Vol. 304 Studies Fuzziness Soft Computing, pp. 122.
Springer.
794

fiK NOWLEDGE R EPRESENTATION P ROBABILISTIC PATIO -T EMPORAL K NOWLEDGE BASES

Hailperin, T. (1984). Probability logic. Notre Dame Journal Formal Logic, 25(3), 198212.
Halpern, J. Y. (1990). analysis first-order logics probability. Artif. Intell., 46(3), 311350.
Hammel, T., Rogers, T. J., & Yetso, B. (2003). Fusing live sensor data situational multimedia
views. Proceedings 9th International Workshop Multimedia Information Systems
(MIS), pp. 145156.
Huang, J., Li, J. J., & Renz, J. (2013). Decomposition tractability qualitative spatial
temporal reasoning. Artif. Intell., 195, 140164.
Jaumard, B., Hansen, P., & de Aragao, M. P. (1991). Column generation methods probabilistic
logic. ORSA Journal Computing, 3(2), 135148.
Julier, S. J., Jeffrey, & Uhlmann, K. (2004). Unscented filtering nonlinear estimation. Proceedings IEEE, 92, 401422.
Junger, M., Liebling, T., Naddef, D., Nemhauser, G., Pulleyblank, W., Reinelt, G., Rinaldi, G., &
Wolsey, L. (Eds.). (2010). 50 Years Integer Programming 1958-2008: Early Years
State-of-the-Art. Springer, Heidelberg.
Kalman, R. E. (1960). new approach linear filtering prediction problems. Transactions
ASMEJournal Basic Engineering, 82(Series D), 3545.
Karbassi, A., & Barth, M. (2003). Vehicle route prediction time arrival estimation techniques
improved transportation system management. Proceedings 2013 IEEE Intelligent
Vehicles Symposium, pp. 511516.
Karimi, H. A. (2013). Advanced location-based technologies services. CRC Press, Hoboken,
NJ.
Kavvadias, D. J., & Papadimitriou, C. H. (1990). linear programming approach reasoning
probabilities. Ann. Math. Artif. Intell., 1, 189205.
Kern-Isberner, G., & Thimm, M. (2010). Novel semantical approaches relational probabilistic
conditionals. Proceedings 12th International Conference Principles Knowledge
Representation Reasoning (KR).
Kersting, K., & Raedt, L. D. (2007). Bayesian logic programming: Theory tool. Getoor, L.,
& Taskar, B. (Eds.), Introduction Statistical Relational Learning. MIT Press.
Kersting, K. (2012). Lifted probabilistic inference. Proceedings 20th European Conference
Artificial Intelligence (ECAI), pp. 3338.
Kitagawa, G. (1987). Non-gaussian state-space modeling nonstationary time series. Journal
American Statistical Association, 82(400), 10321041.
Knapp, A., Merz, S., Wirsing, M., & Zappe, J. (2006). Specification refinement mobile
systems mtla mobile uml. Theor. Comput. Sci., 351(2), 184202.
Kurkovsky, S., & Harihar, K. (2006). Using ubiquitous computing interactive mobile marketing.
Personal Ubiquitous Comput., 10(4), 227240.
Li, S. Z., & Jain, A. K. (Eds.). (2011). Handbook Face Recognition, 2nd Edition. Springer.
Liu, J. S., & Chen, R. (1998). Sequential monte carlo methods dynamic systems. Journal
American Statistical Association, 93, 10321044.
795

fiPARISI & G RANT

Lukasiewicz, T. (2001). Probabilistic logic programming conditional constraints. ACM Trans.
Computational Logic, 2(3), 289339.
Lukasiewicz, T. (1999). Probabilistic deduction conditional constraints basic events. J.
Artif. Intell. Res. (JAIR), 10, 199241.
Lukasiewicz, T., & Kern-Isberner, G. (1999). Probalilistic logic programming maximum
entropy. Proceedings 5th European Conference Symbolic Quantitative Approaches Reasoning Uncertainty (ECSQARU), pp. 279292.
MarketsandMarkets (2014). Location Based Services (LBS) Market (Mapping, Discovery
Infotainment, Location Analytics, Leisure Social Networking, Location Based Advertising, Augmented Reality Gaming, Tracking) - Worldwide Forecasts Analysis (2014 - 2019). http://www.marketsandmarkets.com/Market-Reports/
location-based-service-market-96994431.html.
Milch, B., Marthi, B., Russell, S. J., Sontag, D., Ong, D. L., & Kolobov, A. (2005). BLOG: probabilistic models unknown objects. Proceedings 19th International Joint Conference Artificial Intelligence (IJCAI), pp. 13521359.
Mittu, R., & Ross, R. (2003). Building upon coalitions agent experiment (coax) - integration
multimedia information gccs-m using impact. Proceedings 9th International
Workshop Multimedia Information Systems (MIS), pp. 3544.
Muller, P. (1998). qualitative theory motion based spatio-temporal primitives. Proceedings 6th International Conference Principles Knowledge Representation
Reasoning (KR), pp. 131143.
Nilsson, N. J. (1986). Probabilistic logic. Artif. Intell., 28(1), 7187.
Papadimitriou, C. H., & Steiglitz, K. (1982). Combinatorial optimization: algorithms complexity. Prentice-Hall, Inc., Upper Saddle River, NJ, USA.
Papadimitriou, C. M. (1994). Computational complexity. Addison-Wesley, Reading, Massachusetts.
Paris, J. (1994). Uncertain Reasoners Companion: Mathematical Perspective. Cambridge
University Press.
Parisi, F., & Grant, J. (2014a). Integrity constraints probabilistic spatio-temporal knowledgebases. Proceedings 8th International Conference Scalable Uncertainty Management (SUM), pp. 251264.
Parisi, F., & Grant, J. (2014b). Repairs consistent answers inconsistent probabilistic spatiotemporal databases. Proceedings 8th International Conference Scalable Uncertainty Management (SUM), pp. 265279.
Parisi, F., Parker, A., Grant, J., & Subrahmanian, V. S. (2010). Scaling cautious selection spatial
probabilistic temporal databases. Methods Handling Imperfect Spatial Information,
Vol. 256 Studies Fuzziness Soft Computing, pp. 307340. Springer.
Parisi, F., Sliva, A., & Subrahmanian, V. S. (2013). temporal database forecasting algebra. Int. J.
Approximate Reasoning, 54(7), 827860.
Parker, A., Infantes, G., Grant, J., & Subrahmanian, V. S. (2009). SPOT databases: Efficient consistency checking optimistic selection probabilistic spatial databases. IEEE Transactions
Knowledge Data Engineering (TKDE), 21(1), 92107.
796

fiK NOWLEDGE R EPRESENTATION P ROBABILISTIC PATIO -T EMPORAL K NOWLEDGE BASES

Parker, A., Infantes, G., Subrahmanian, V. S., & Grant, J. (2008). AGM-based belief revision
mechanism probabilistic spatio-temporal logics. Proceedings 23rd AAAI Conference Artificial Intelligence (AAAI), pp. 511516.
Parker, A., Subrahmanian, V. S., & Grant, J. (2007a). logical formulation probabilistic spatial
databases. IEEE Transactions Knowledge Data Engineering (TKDE), 19(11), 1541
1556.
Parker, A., Yaman, F., Nau, D. S., & Subrahmanian, V. S. (2007b). Probabilistic go theories.
Proceedings 20th International Joint Conference Artificial Intelligence (IJCAI), pp.
501506.
Pelanis, M., Saltenis, S., & Jensen, C. S. (2006). Indexing past, present, anticipated future
positions moving objects. ACM Trans. Database Syst., 31(1), 255298.
Petrova, K., & Wang, B. (2011). Location-based services deployment demand: aroadmap
model. Electronic Commerce Research, 11(1), 529.
Picado-Muino, D. (2011). Measuring repairing inconsistency probabilistic knowledge bases.
Int. J. Approx. Reasoning, 52(6), 828840.
Potyka, N., & Thimm, M. (2014). Consolidation probabilistic knowledge bases inconsistency
minimization. Proceedings 21st European Conference Artificial Intelligence
(ECAI), pp. 729734.
Randell, D. A., Cui, Z., & Cohn, A. G. (1992). spatial logic based regions connection.
Proceedings 3rd International Conference Principles Knowledge Representation
Reasoning (KR), pp. 165176.
Richardson, M., & Domingos, P. (2006). Markov logic networks. Mach. Learn., 62(1-2), 107136.
Rosales, R., & Sclaroff, S. (1999). 3D trajectory recovery tracking multiple objects trajectory
guided recognition actions. Proceedings 6th Conference Computer Vision
Pattern Recognition (CVPR, pp. 21172123.
Southey, F., Loh, W., & Wilkinson, D. F. (2007). Inferring complex agent motions partial trajectory observations. Proceedings 20th International Joint Conference Artificial
Intelligence (IJCAI), pp. 26312637.
Stone, L. D., Corwin, T. L., & Barlow, C. A. (1999). Bayesian Multiple Target Tracking (1st edition).
Artech House, Inc., Norwood, MA, USA.
Szeliski, R. (2010). Computer Vision: Algorithms Applications. Springer-Verlag New York,
Inc., New York, NY, USA.
Tao, Y., Cheng, R., Xiao, X., Ngai, W. K., Kao, B., & Prabhakar, S. (2005). Indexing multidimensional uncertain data arbitrary probability density functions. Proceedings
31st International Conference Large Data Bases (VLDB), pp. 922933.
Thimm, M. (2013). Inconsistency measures probabilistic logics. Artif. Intell., 197, 124.
Wolter, F., & Zakharyaschev, M. (2000). Spatio-temporal representation reasoning based
rcc-8. Proceedings 7th International Conference Principles Knowledge Representation Reasoning (KR), pp. 314.
797

fiPARISI & G RANT

Yaman, F., Nau, D. S., & Subrahmanian, V. S. (2004). logic motion. Proceedings 9th
International Conference Principles Knowledge Representation Reasoning (KR),
pp. 8594.
Yaman, F., Nau, D. S., & Subrahmanian, V. S. (2005a). Going far, logically. Proceedings
19th International Joint Conference Artificial Intelligence (IJCAI), pp. 615620.
Yaman, F., Nau, D. S., & Subrahmanian, V. (2005b). motion closed world assumption. Proceedings 19th International Joint Conference Artificial Intelligence (IJCAI), pp.
621626.
Yang, B., Lu, H., & Jensen, C. S. (2010). Probabilistic threshold k nearest neighbor queries
moving objects symbolic indoor space. Proceedings 13th International Conference Extending Database Technology (EDBT), pp. 335346.
Yilmaz, A., Javed, O., & Shah, M. (2006). Object tracking: survey. ACM Comput. Surv., 38(4).
Zhang, M., Chen, S., Jensen, C. S., Ooi, B. C., & Zhang, Z. (2009). Effectively indexing uncertain
moving objects predictive queries. Proceedings VLDB Endowment (PVLDB), 2(1),
11981209.
Zheng, K., Trajcevski, G., Zhou, X., & Scheuermann, P. (2011). Probabilistic range queries
uncertain trajectories road networks. Proceedings 14th International Conference
Extending Database Technology (EDBT), pp. 283294.

798


