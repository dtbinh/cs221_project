journal artificial intelligence

submitted published

solving weighted constraint satisfaction
memetic exact hybrid
jose e gallardo
carlos cotta
antonio j fernandez

pepeg lcc uma es
ccottap lcc uma es
afdez lcc uma es

dept lenguajes ciencias de la computacion
universidad de malaga etsi informatica
campus de teatinos malaga spain

abstract
weighted constraint satisfaction wcsp constraint satisfaction
preferences among solutions expressed bucket elimination complete
technique commonly used solve kind constraint satisfaction
memory required apply bucket elimination high heuristic method
denominated mini buckets used calculate bounds optimal solution
nevertheless curse dimensionality makes techniques impractical large scale
response situation present memetic wcsps
bucket elimination used mechanism recombining solutions providing
best possible child parental set subsequently multi level model
exact metaheuristic hybrid hybridized branch bound techniques
mini buckets studied case study applied resolution
maximum density still life hard constraint optimization
conways game life resulting consistently finds optimal patterns
date solved instances less time current approaches moreover shown
proposal provides best known solutions large instances

introduction
many real formulated constraint satisfaction csps
solutions assignments set variables variable taking values certain
domain exists collection constraints restrict assignment
particular values combination values solving csp means finding feasible assignment
values variables e one constraints satisfied however wide range
cannot posed way constrained
thus solution multiple solutions objective
best one according optimality criterion cases might
handled optimization point view associating preferences constraints
kind csp preferences among constraints solutions expressed
called weighted constraint satisfaction wcsps schiex fargier verfaillie
bistarelli montanari rossi solving wcsp means optimally satisfying
set weighted constraints clearly enlarges scope csps many practical
modeled wcsps instance radio frequency assignment
scheduling cellular manufacturing among others cabon de givry lobjois schiex
warners khemmoudj bennaceur nonobe ibaraki
c

ai access foundation rights reserved

figallardo cotta fernandez

complete methods branch bound lawler wood bucket elimination dechter technique originated early work bertele
brioschi nonserial dynamic programming two popular ways
attack wcsps however although picture csp general noted
inclusion preferences constraints makes particular wcsp specific
consequence wcsps tackled specialized
specifically designed freuder wallace verfaillie lematre schiex
kask detcher lematre verfaillie bourreau laburthe larrosa schiex
gelain pini rossi venable khemmoudj bennaceur marinescu
dechter moreover general techniques require large computational effort
time memory solve many wcsps due size complexity
therefore impractical many cases alleviated heuristic methods
e g beam search bs barr feigenbaum mini buckets dechter
branch bound bucket elimination respectively however large scale
high computational cost still evident
context use alternative techniques must considered overcome
limitations general techniques instance evolutionary back back
fogel michalewicz powerful heuristics optimization
principles natural evolution flexible enough deployed wide
range however generality reduces competitiveness unless domain
knowledge incorporated need exploiting domain knowledge optimization
methods repeatedly shown wolpert macready culberson
memetic moscato cotta krasnogor smith represent
one successful responses need hart krasnogor smith
explores different ways hybridizing branch bound bucket elimination
corresponding heuristic methods memetic combining search
capabilities synergetic way
hybrid techniques proposed used general solvers wcsps
note essentially heuristic nature hence cannot provide optimality
proofs solutions obtain notice however probably provide optimal
near optimal solutions wide range wcsps furthermore hybrid techniques
less time consuming general methods involved thus applied
larger instances order experimentally evaluate hybrid techniques
tackled maximum density still life hard combinatorial optimization prime example weighted constraint optimization
polynomial time known solve although best
knowledge yet proven np hard reasons
surprising attracted interest constraint programming
community central development assessment sophisticated techniques bucket elimination indeed constitutes excellent test bed different
optimization techniques included csplib repository web page
keeps record date
http www csplib org
http www ai sri com nysmith life



fisolving wcsps memetic exact hybrid

preliminaries
section briefly introduce concepts techniques used rest
end first define weighted constraint satisfaction well
techniques bucket elimination mini buckets subsequently describe beam
search heuristic tree search derived branch bound finally memetic
presented sake notational simplicity appropriate stick
notation larrosa et al
weighted constraint satisfaction
weighted constraint satisfaction wcsp schiex et al bistarelli et al
constraint satisfaction csp preferences among solutions
expressed formally wcsp defined tuple x f dn
set finite domains x x xn set variables taking values finite
domains di domain variable xi f set cost functions called soft
constraints weighted constraints used declare preferences among possible solutions
variable correctly assigned receive finite costs express degree preference
lower value better preference variables correctly assigned receive cost
note f f defined subset variables var f x called
p scope
objective function f defined sum functions f e f f f f
assignment value vi di variable xi noted xi vi partial assignment
n variables tuple xi v xi v xim vm ij n
different complete assignment variables values domains
satisfies every soft constraint e finite valuation f represents solution
wcsp optimization goal solution minimizes objective function
bucket elimination
bucket elimination dechter generic technique suitable many automated
reasoning optimization particular solving wcsp functioning
upon following two operators functions larrosa et al
sum two functions f g denoted f g function scope
var f var g returns tuple sum costs f g e f g
f g
elimination variable xi f denoted f xi function scope
var f xi returns tuple minimum cost extension xi
f xi minvdi f xi v xi v means extension
assignment assignment value v variable xi observe f
unary function e arity one constant obtained upon elimination
variable scope
without losing generality let us assume lexicographic ordering variables
x e x x xn figure shows pseudo code solving
wcsp instance returns optimal cost f one optimal assignment


figallardo cotta fernandez

bucket elimination wcsp x f












function x f
n downto
bi f
p f xi var f
gi
f bi f xi
f f gi bi
end

n p
v argminadi f bi f xi
xi v
end
return f
end function

figure general template adapted larrosa morancho bucket
elimination wcsp x f

observe initially eliminates decreasing order one variable xi x
iteration loop comprising lines done computing firstly bucket bi
variable xi set cost functions f xi scope function
gi defined sum functions bi variable xi eliminated
finally f updated removing functions involving xi e bi adding
function contain xi consequence xi exist f
value optimal cost preserved elimination x produces function
empty scope e constant optimal cost
lines generates optimal assignment variables considering order
imposed done starting empty assignment assigning xi
best value extension respect sum functions bi argmina f
represents value producing minimum f
note exponential space complexity general summing functions eliminating variables cannot expressed intensionally algebraic expressions consequence intermediate collected extensionally
tables precise complexity depends structure captured
constraint graph g ordering according larrosa morancho


complexity along ordering time q n dw space n dw
largest domain size q cost evaluating cost functions usually assumed w induced width graph along ordering describes
largest clique created graph bucket elimination corresponds
largest scope function recorded although finding optimal
ordering np hard arnborg heuristics approximation
developed task check work dechter details


fisolving wcsps memetic exact hybrid

mini buckets
main drawback requires exponential space store functions extensionally complexity high solution approximated
mini bucket mb presented dechter detcher rish recall order eliminate variable xi
p corresponding bucket bi fim
calculates cost function gi f bi f xi whose time space complexity increases cardinality gi e size set f bi var f xi
complexity decreased approximating function gi set smallerarity functions basic idea partition bucket bi k called mini buckets
bi bik number variables scope bij bounded
parameter afterwards
set k cost functions reduced arity sought
p
defined gij f bi f xi j k required approximation gi
j
p
p
p
computed sum gi j k gij j k f bi f xi
j
note minimization computed gi operator migrated inside
sum since general two non negative functions f x f x minx f x
f x minx f x minx f x follows gi lower bound gi therefore
variable elimination performed approximated cost functions provides lower
bound optimal cost requiring less computation notice described
provides family estimating heuristic functions whose complexity
accuracy parameterized maximum number variables allowed mini bucket
beam search
branch bound bb lawler wood general tree search method solving
combinatorial optimization tree search methods constructive sense
work partial solutions way tree search methods start empty
solution incrementally extended adding components way partial
solutions extended depends constraints imposed solved
solution construction mechanism maps search space tree structure
way path root tree leaf node corresponds construction
solution order efficiently explore search tree bb maintain
upper bound estimate lower bounds partially constructed solutions assuming
minimization upper bound corresponds cost best solution found
far search process lower bound computed partial solution
generated estimating cost best solution constructed extending
lower bound greater current upper bound solutions constructed
extending lead improvement thus nodes descending
pruned search tree clearly capability pruning
search tree depends existence accurate lower bound
computationally inexpensive order practical
beam search bs barr feigenbaum incomplete derivates bb
thus heuristic methods essentially bs works extending every partial
solution set b called beam kext possible ways partial
solution generated stored set b solutions b processed
constructs beam selecting best kbw called beam width


figallardo cotta fernandez

solutions b clearly way estimating quality partial solutions
lower bound needed
interesting peculiarity bs way extends parallel set different partial
solutions several possible ways making particularly suitable tree search method
used hybrid collaborative framework used provide periodically promising partial solutions population search method memetic
gallardo cotta fernandez shown kind hybrid
provide excellent combinatorial optimization subsequently present hybrid tree search memetic wcsps idea
memetic
evolutionary eas population metaheuristic optimization methods
inspired biological evolution back et al order explore search space
ea maintains set solutions known population individuals usually
randomly initialized across search space although heuristics may used
initialization three different phases iteratively performed termination condition
reached selection reproduction encompasses recombination mutation
replacement context eas objective function assigning values solution
termed fitness function used guide search
note eas black box optimization procedures sense knowledge
apart fitness function used need exploit problemknowledge repeatedly shown wolpert macready culberson however different attempts made answer need memetic moscato
cotta krasnogor smith mas one successful approaches date hart et al eas mas population metaheuristics main difference components population sometimes termed
agents terminology passive entities rather active entities
cooperate compete order improved solutions
many possible ways implement mas common implementation
consists combining ea procedure perform local search
solutions population main generation loop cf krasnogor smith
figure shows general outline px pm arity respectively refer
recombination probability mutation probability recombination arity e number
parents involved recombination must noted however paradigm
simply reduce particular scheme different places e g
population initialization genotype phenotype mapping evolutionary operators etc
specific knowledge incorporated work addition
tabu search glover ts local search procedure within
designed intelligent recombination operator uses relaxation bucket elimination
order best solution constructed set parents without
introducing implicit mutation e exogenous information


fisolving wcsps memetic exact hybrid

memetic
























function px pm arity
popsize
pop random solution n
pop local search pop
evaluate pop
end
timeout
offsize
recombination performed px
j arity
parentj select pop
end
offspring recombine parent parent parentarity
else
offspring select pop
end
mutation performed pm
offspring mutate offspring
end
offspring local search offspring
evaluate offspring
end
pop replace pop offspring
end

figure pseudo code memetic although different variants possible respect scheme broadly captures typical algorithmic structure
mas

multi level memetic exact hybrid wcsps
wcsps suitable tackled evolutionary metaheuristics obviously
quality greatly depend well knowledge
incorporated search mechanism final goal present algorithmic model
hybridization mas exact techniques two levels within
embedded operator outside cooperative model firstly focus
next subsection first level hybridization incorporates exact technique
namely within embedded recombination operator subsequently
proceed second level hybridization cooperates branchand bound beam search uses technique mini buckets
lower bound see figure


figallardo cotta fernandez



promising regions

bs
ga
ts
local
search



mb

crossover

lower
bound

upper bound

figure schematic description proposed hybrid
optimal recombination
previously mentioned one phases constitutes typical recombination
e lines figure individuals population combined
aim obtaining improved individuals purpose different standard recombination operators proposed literature see back et al although
blind operators feasible computational point view would perform poorly
knowledge used context wcsps resort
order achieve sensible recombination information
even though performance exact method resolution wcsps
may better basic search approaches corresponding time space complexity still high making technique unsuitable large instances
following explain used implement intelligent recombination operator wcsps operator implicitly explore possible children solutions
recombined providing best solution constructed without introducing
implicit mutation e exogenous information cf cotta troya note
use bucket elimination related usually referred large neighborhood
search ahuja ergun orlin punnen
sake simplicity let us assume variables wcsp x f
domain e dn let x x x xn yn
two solutions recombined zi value variable zi operator calculate best solution obtained combining variables
x without introducing information present parents
achieved restricting domain variables values appearing configurations recombined recombination operator becomes x f
x xn yn applying wcsp variables
may different domains would require previously separating set variables x
subsets variables sharing domain
beam search hybrid
subsection describe hybrid tree search memetic wcsps
combines collaborative way puchinger raidl bs
noted previously bs works extending parallel set different partial solutions
several possible ways thus used provide promising partial solutions


fisolving wcsps memetic exact hybrid

hybrid wcsp


















function bs x kbw km
sol
b
n
b
b
di
b b xi
end
end
b select best kbw nodes b
km
initialize population best popsize nodes b
run
sol min sol solution
end
end
return sol
end function
figure hybrid wcsp

population search method goal exploit capability bs
identifying potentially good regions search space exploit
explore regions synergistically combining two different approaches
proposed hybrid executes bs interleaved way
depicted figure pseudo code possibly partial solution wcsp instance
represented vector variables x x xi n xi stands
extension partial solution assigning value th variable noted
previously hybrid constructs search tree leaves consist
complete solutions internal nodes level represent partially specified th
variable solutions tree heuristically traversed breadth first way bs
beam width kbw e maintaining best kbw nodes level
tree beam selection line heuristic quality measure defined
partial solutions whose value must partial solution unfeasible
starts line totally unspecified solution initially bs part
executed iteration bs lines variable assigned every
solution beam line interleaved execution starts partial
solutions beam least km variables line iteration bs
best popsize solutions beam selected quality measure described
initialize population line since partial solutions must
first converted full solutions e g completing remaining variables randomly


figallardo cotta fernandez

running solution used update incumbent solution sol
process repeated search tree exhausted
computing tight bounds mini buckets
performance bs component described previous section
depend quality heuristic function used estimate partial solutions line
figure order compute tight yet computationally inexpensive lower bound
remanning part solution resort mini buckets mb described
kask detcher intermediate functions created applying mb scheme
used general mechanism compute heuristic functions estimate best
cost yet unassigned variables partial solutions end mb must run
preprocessing stage reverse order search instantiate variables
set augmented buckets computed process used estimations
best cost extension partial solutions check work kask detcher
details

tackling maximum density still life
previously proposed general enough used many wcsps
executed section present application case study maximum
density still life mdslp defined context game life
proposed john h conway divulged martin gardner gardner
let us first describe game played infinite checkerboard
player places checkers squares square board called cell
eight neighbors eight cells share one two corners cell alive
checker dead otherwise contents board evolve iteratively
way state time determines state time according
simple rules live cell remains alive two three live neighbors otherwise
dies dead cell becomes alive exactly three live neighbors
simple rules game life nevertheless generate incredibly complex
dynamics better understand mdslp let us define stable pattern called
still life board configuration change time let density
region percentage living cells mdslp nn grid consists finding still
life maximum density elkies shown infinite boards maximum
density finite size exact formula known concerned
mdslp finite patterns finding maximal n n still lifes
related work
mdslp tackled literature different approaches bosch trick
compared different formulations mdslp integer programming ip
constraint programming cp best obtained hybrid
mixing two approaches able solve cases n n
days cpu time respectively smith used pure constraint
programming address however instances n


fisolving wcsps memetic exact hybrid

table best experimental reported bosch trick cp ip larrosa
morancho larrosa et al hyb solving
mdslp time indicated seconds

optimum
cp ip

hyb


















































could solved best reported larrosa morancho
larrosa et al showing usefulness bucket elimination
exact technique variable elimination commonly used solving constraint
satisfaction described detail section basic could solve
n seconds improvements increased boundary
n twice much time recently cheng yap tackled
via use ad hoc global case constraints comparable
ip cp hybrids thus cannot compared ones obtained previously larrosa
et al
table summarizes experimental current approaches used tackle mdslp reporting computational times hybrid ip cp bosch trick
larrosa morancho search hybrid
larrosa et al although different computational platforms may used
experiments trends clear give clear indication potential
different approaches noted techniques applied mdslp
exact approaches inherently limited increasing sizes
capabilities anytime unclear tackle recently proposed
use hybrid methods combining exact metaheuristic approaches considered
hybridization evolutionary stochastic population search
method endowed tabu search local search method gallardo cotta fernandez
resulting memetic see section used
mechanism recombining solutions providing best possible child
parental set experimental tests indicated provided optimal nearoptimal acceptable computational cost subsequently studied extended
multi level previous hybrid hybridized
branch bound derivative namely beam search bs gallardo cotta fernandez
b studies influence variable clustering multi parent recombination
performance conducted indicated
variable clustering detrimental multi parent recombination improves performance best knowledge
heuristic approaches applied date
section previous included extended
contributions redone experiments improved implementation


figallardo cotta fernandez

bucket elimination crossover operator described section additionally
present extensive experimental analysis bs hybrid described gallardo
et al b analyzing sensitivity parameters propose hybrid
uses technique mini buckets improve lower bounds
partial solutions considered bs part hybrid
obtained hybridization different levels complete solving techniques
incomplete deterministic methods bs mb stochastic mas
experimental analysis shows proposal consistently finds optimal solutions
mdslp instances n considerably less time previous approaches
reported literature finally order test scalability novel
hybrid run large instances mdslp optimal
solution currently unknown successful performed
state art level providing solutions equal better best
ones reported date literature readability reasons many particular technical
details different mdslp omitted fully described
accompanying report gallardo cotta fernandez rate model
mdslp wcsp presented appendix
memetic mdslp
first develop mdslp n n board represented
binary n n matrix stratified gradient provided penalty fitness
function measures number violated constraints distance feasibility
prioritizing former latter efficient local search strategy explores
set solutions obtained flipping exactly one cell configuration devised order
escape local optima tabu search scheme used line figure
uses crossover operation described section line figure
one interesting property operator described limited recombining
two board configurations instead generalized recombine number
considering domains consisting values variable parents
multi parental capability explored rest
evaluate usefulness described hybrid recombination operator set experiments sizes n n realized recall optimal
solutions mdslp known n experiments performed
steady state evolutionary popsize pm n px binary
tournament selection aim maintaining diversity duplicated individuals
allowed population run optimal solution found
time limit exceeded time limit set minutes instances size
gradually increased seconds size increment
instance size independent runs made experiments
performed pentium iv pc mhz mb ram suse linux
base two dimensional version spx single point
crossover recombination endowed tabu search local improvement
termed mats shown capable finding feasible solutions systematically solving optimality instances n see mats figure


fisolving wcsps memetic exact hybrid
























mabe
mabe f
mabe f
mats

arity
arity
arity
arity




distance optimum

distance optimum

although performance degrades larger instances provides distributions solutions whose average relative distance optimum less
cases contrasts case plain eas incapable finding even
feasible solution runs gallardo et al















































instance size

instance size



b

figure relative distances optimum different b arities sizes
ranging subsequent figures box summarizes runs boxes comprise second third quartiles distribution
e inner horizontal line marks median plus sign indicates
mean circles indicate median times
interquartile distance
mats firstly compared mas endowed performing recombination
since use recombination higher computational cost simple blind
recombination guarantee recombining two infeasible solutions
feasible solution defined three variants mas
first one called used perform recombination
second termed f require least one parents feasible
order apply otherwise blind recombination used
last variant identified f require two parents feasible
thus restrictive application
evaluating variants intend explore computational tradeoffs involved
application embedded component
mutation performed prior recombination order take advantage good solutions
provided figure shows empirical performance different
returns significantly better mats f
slightly better solutions smaller instances n


figallardo cotta fernandez

larger instances winner seems effort saved recombining
unfeasible solutions improve performance note
larger instances f better f correlates well
fact used frequently former latter
mentioned section optimal recombination scheme use readily extended multi parent recombination eiben raue ruttkay arbitrary number
solutions contribute constituent rows constructing solution additional experiments done explore effect capability figure b
shows obtained different number parents recombined
arities arity able optimum solution
instances except n n relative distance optimum
best solution found less cases runs arity cannot
optimum solutions remaining instances note distribution improves
cases clearly performance deteriorates combining
parents due higher computational cost variable clustering could
used alleviate higher computational cost performance degradation
since coarser granularity pieces information hinders information mixing cotta
troya gallardo et al b
bs hybrid mdslp
section evaluate instantiation bs hybrid described
section mdslp called bs beam selection line figure
simple quality measure defined partial solutions whose value
partial configuration unstable number dead cells otherwise methodology
section executions performed instance
size arities setting remaining parameters
kbw preliminary tests indicated value reasonable km
n n n e best nodes kept level bs
levels bs tree initially descended
run respect termination conditions execution within
hybrid consists generations time limits imposed hybrid
run n iterations bs
figure shows different values parameter km order better
compare distributions number optimal solutions obtained
executions shown box plot km n performance
resulting improves significantly original note bs
arity parents able optimum cases except n
instance solved arity distributions different instance sizes
significantly improved n arity consistently finds
optimum runs instances solution provided
within optimum except n relative distance
optimum worst solution two charts general
performance deteriorates increasing values km parameter
may due low quality bounds used bs part


fisolving wcsps memetic exact hybrid


arity
arity
arity



k



n





kma n


arity
arity
arity







kma n













time best solution















distance optimum








k



kma n







n


























kma n




























































instance size

instance size

b

figure relative distances optimum b time best solution different
arities bs km n n n sizes ranging
numbers box indicate many times optimal
solution found

regarding execution times figure b shows time distributions seconds reach
best solution needed although bs requires time
time needed remains reasonable instances less
seconds note execution time increases arity time
needed perform crossover operator hand execution
time decreases larger values km number executions decreases
although already remarked quality solutions worsens
improving lower bound mb mdslp
simple quality measure beam selection used previous section depends solely
part solution already constructed section experimentally
study use mb technique compute tight yet computationally inexpensive


figallardo cotta fernandez

lower bound remanning part configuration aim improving
performance bs part hybrid basically idea cluster cells
row board metavariable metavariables partitioned
columns n cells finally resort mb estimate best cost
extensions partial board configuration considering columns
summing estimations column extensions bound best board extension
partial solution obtained section experimented e three
columns row although complexity still high
used reduce considering columns



distance optimum


kma n









































kma n



















instance size









b





arity
arity
arity



time b sol



kma n










arity
arity
arity



k



n












c



















instance size





figure c relative distances optimum different arities
bs mb km n n n sizes ranging
time seconds best solution different arities
bs mb km n sizes ranging
experiments repeated hybrid equipped lower bound
bs mb figure c shows experiments values km
n n n finds optimum instances arities
relative distance optimum worst solution found less
cases best obtained arity although requires slightly
execution time note bs mb less sensitive setting parameter
km means execution times reduced considerably large value
parameter see figure particular combination parameters km n
arity provides excellent lower computational cost execution times
seconds n comparison recall
literature solve instances described larrosa et al requires
minutes n hours n days n
approaches unaffordable n note however times correspond
computational platform different order make fairer comparison executed


fisolving wcsps memetic exact hybrid

larrosa et al platform case required seconds
e minutes order solve n instance day
hours solve n instance values close times reported
larrosa et al hence indicate computational platforms fairly
comparable


distance



arity
arity
arity














instance size

figure relative distances best known solutions different arities
bs mb km n large instances e sizes
note improvement best known solutions sizes


figure best known maximum density still lifes n

table optimal solutions smdlp
n
opt


































large instances
already mentioned currently available tackle mdslp
n larrosa et al tried n n could
available http www lsi upc edu larrosa publications life source code tar gz time
n could obtained code provided larrosa et al used even sized
instances



figallardo cotta fernandez

solve instances within week cpu large instances
solutions relaxations known one relaxations known
symmetrical maximum density still life smdslp proposed bosch
trick consists considering symmetric boards horizontally

vertically reduces search space n ndn e
alone vertically symmetric still lifes considering variable domains
sets contain symmetric rows larrosa morancho larrosa et al
used solve smdslp instances considered far
e n well large instances e n
summarized table shows instance size optimal
symmetrical solution number dead cells clearly cost optimal symmetric
still lifes upper bounds mdslp additionally observed
tight n n currently best known solutions
instances
run bs mb large instances e n
compare symmetrical solutions instances displayed figure able two best known
solutions mdslp namely n n dead
cells respectively solutions solutions pictured figure
worth noting could solution dead cells
n instance instances could reach best known solutions consistently computation mini buckets large instances done
considering four clustered cost functions variables row board
complexity three cost functions still high

conclusions
many modeled wcsps one exact technique used
tackle however high space complexity exact technique
makes impractical large instances case one resort minibuckets get approximate solution although complexity large
work presented several proposals hybridization mb
memetic beam search order get effective heuristics shown
represent promising
experimentally evaluated model mdslp excellent example
wcsp highly constrained nature typical many optimization scenarios difficulty solving illustrates limitations classical optimization approaches
highlights capabilities proposed approaches indeed experimental positive solving large instances mdslp optimality among
different presented must distinguish resulting
hybridization different levels complete solving techniques e bucket elimination
incomplete deterministic methods e beam search mini buckets stochastic e memetic empirically produces good quality
solving optimality large instances constrained relatively
short time providing best known solutions large instances


fisolving wcsps memetic exact hybrid

future work plan consider complete versions hybrid
involves use appropriate data structures store yet considered promising
branch bound nodes memory requirements course grow enormously
size instance considered interesting analyze computational tradeoffs anytime technique

acknowledgments
would thank javier larrosa valuable comments helped us improve
significantly preliminary version thanks due reviewers
constructive comments work partially supported spanish mcinn
grant tin nemesis

appendix mdslp wcsp
shown larrosa morancho larrosa et al mdslp
well formulated wcsps end n n board configuration represented
n dimensional vector r r rn vector component encodes binary
string row j th bit row ri noted rij represents state j th cell
th row value represents live cell value dead cell
two functions rows useful describe constraints must satisfied
valid configuration first one
x
zeroes
ai

n

returns number dead cells row e number zeroes binary string
second one
adjs adjs

l

adjs l adjs l

max l adjs


n
ai
ai

computes maximum number adjacent living cells row introduce ternary
predicate stable ri r ri takes three consecutive rows board configuration
satisfied cells central row stable e cells row r
remain unchanged next iteration game
stable b c

v

n b c

b c bi
b c
b c
bi
p
b c max j min n aj bj cj bi



b c number living neighbors cell bi assuming c rows
row b


figallardo cotta fernandez

mdslp formulated wcsp n cost functions n
accordingly fn binary scope last two rows board var fn rn rn
defined


stable b adjs b
fn b

zeroes b otherwise
first line checks cells row rn stable whereas second one checks
cells produced nn board note pair rows representing
unstable configuration assigned cost whereas stable one assigned number
dead cells minimized
n corresponding cost functions ternary scope var
ri ri ri defined


b c
zeroes b

stable b c b c bn cn

otherwise

case boundary conditions checked left right board regards
cost function f binary scope first two rows board var f r r
specified similarly fn


stable b c adjs b

f b c
zeroes b otherwise

references
ahuja r k ergun orlin j b punnen p survey large scale
neighborhood search techniques discrete appl math
arnborg efficient combinatorial graphs bounded
decomposability survey bit
back evolutionary theory practice oxford university press
york ny
back fogel michalewicz z handbook evolutionary computation
oxford university press york ny
barr feigenbaum e handbook artificial intelligence morhan kaufmann
york ny
bertele u brioschi f nonserial dynamic programming academic press
york ny
bistarelli montanari u rossi f semiring constraint satisfaction
optimization journal acm
bosch r trick constraint programming hybrid formulations three
life designs international workshop integration ai techniques
constraint programming combinatorial optimization cp ai pp



fisolving wcsps memetic exact hybrid

cabon b de givry lobjois l schiex warners j p radio link
frequency assignment constraints
cheng k c k yap r h c ad hoc global constraints life van beek
p ed principles practice constraint programming cp vol
lecture notes computer science pp berlin heidelberg springer
cheng k c k yap r h c applying ad hoc global constraints case
constraint still life constraints
cotta c troya j influence representation granularity heuristic
forma recombination carroll j damiani e haddad h oppenheim
eds acm symposium applied computing pp acm press
cotta c troya j embedding branch bound within evolutionary
applied intelligence
culberson j futility blind search algorithmic view free lunch
evolutionary computation
dechter r mini buckets general scheme generating approximations automated reasoning th international joint conference artificial intelligence
pp nagoya japan
dechter r bucket elimination unifying framework reasoning artificial
intelligence
detcher r rish mini buckets general scheme bounded inference
journal acm
eiben raue p e ruttkay z genetic multi parent recombination davidor schwefel h p manner r eds parallel
solving nature iii vol lecture notes computer science pp
berlin heidelberg springer
elkies n still life generalizations engel p syta h
eds voronois impact modern science book pp institute math
kyiv
freuder e c wallace r j partial constraint satisfaction artificial intelligence
gallardo j e cotta c fernandez j finding still lifes memetic exact
hybrid corr available http arxiv org abs
gallardo j cotta c fernandez hybridization memetic branch bound techniques ieee transactions systems man
cybernetics part b
gallardo j e cotta c fernandez j memetic bucket
elimination still life gottlieb j raidl g eds evolutionary
computation combinatorial optimization vol lecture notes computer
science pp berlin heidelberg springer


figallardo cotta fernandez

gallardo j e cotta c fernandez j b multi level memetic exact hybrid
still life runarsson p et al eds parallel
solving nature ix vol lecture notes computer science pp
berlin heidelberg springer
gardner fantastic combinations john conways solitaire game
scientific american
gelain pini rossi f venable k b dealing incomplete preferences soft constraint bessiere c ed principles practice
constraint programming cp vol lecture notes computer science
pp berlin heidelberg springer
glover f tabu search part orsa journal computing
glover f tabu search part ii orsa journal computing
hart w krasnogor n smith j recent advances memetic vol
studies fuzziness soft computing springer berlin heidelberg
kask k detcher r general scheme automatic generation search
heuristics specification dependencies artificial intelligence
khemmoudj bennaceur h valid inequality lower bounds
wcsp bessiere c ed principles practice constraint programming
cp vol lecture notes computer science pp berlin
heidelberg springer
krasnogor n smith j tutorial competent memetic model
taxonomy design issues ieee transactions evolutionary computation

larrosa j morancho e solving still life soft constraints bucket
elimination principles practice constraint programming cp vol
lecture notes computer science pp berlin heidelberg springer
larrosa j morancho e niso practical use variable elimination
constraint optimization still life case study journal artificial
intelligence
larrosa j schiex solving weighted csp maintaining arc consistency
artificial intelligence
lawler e wood branch bounds methods survey operations

lematre verfaillie g bourreau e laburthe f integrating
weighted csp constraint programming framework international workshop
modelling solving soft constraints paphos cyprus
marinescu r dechter r best first search graphical
twenty second aaai conference artificial intelligence pp vancouver canada aaai press
moscato p cotta c gentle introduction memetic handbook
metaheuristics pp kluwer academic press boston massachusetts usa


fisolving wcsps memetic exact hybrid

moscato p cotta c memetic gonzalez ed handbook
approximation metaheuristics chap chapman hall crc
press
nonobe k ibaraki improved tabu search method weighted
constraint satisfaction infor
puchinger j raidl g combining metaheuristics exact
combinatorial optimization survey classification mira j alvarez j
eds artificial intelligence knowledge engineering applications bioinspired
vol lecture notes computer science pp berlin heidelberg springer
schiex fargier h verfaillie g valued constraint satisfaction hard
easy th international joint conference artificial intelligence
pp montreal canada
smith b dual graph translation life hentenryck p v
ed principles practice constraint programming cp vol
lecture notes computer science pp berlin heidelberg springer
verfaillie g lematre schiex russian doll search solving constraint
optimization thirteenth national conference artificial intelligence
eighth innovative applications artificial intelligence conference aaai iaai
pp aaai press mit press
wolpert macready w free lunch theorems optimization ieee
transactions evolutionary computation




