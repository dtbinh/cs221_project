t  walsh 2011 where are the hard manipulation problems volume 42 pages 129

voting is a simple mechanism to combine together the preferences of multiple agents unfortunately agents may try to manipulate the result by misreporting their preferences one barrier that might exist to such manipulation is computational complexity in particular it has been shown that it is nphard to compute how to manipulate a number of different voting rules how ever nphardness only bounds the worstcase complexity recent theoretical results suggest that manipulation may often be easy in practice in this paper we show that empirical studies are useful in improving our understanding of this issue we consider two settings which represent the two types of complexity results that have been identified in this area manipulation with unweighted votes by a single agent and manipulation with weighted votes by a coalition of agents in the first case we consider single transferable voting stv and in the second case we consider veto voting stv is one of the few voting rules used in practice where it is nphard to compute how a single agent can manipulate the result when votes are unweighted it also appears one of the harder voting rules to manipulate since it involves multiple rounds on the other hand veto voting is one of the simplest representatives of voting rules where it is nphard to compute how a coalition of weighted agents can manipulate the result in our experiments we sample a number of distributions of votes including uniform correlated and real world elections in many of the elections in our experiments it was easy to compute how to manipulate the result or to prove that manipulation was impossible even when we were able to identify a situation in which manipulation was hard to compute eg when votes are highly correlated and the election is hung we found that the computational difficulty of computing manipulations was somewhat precarious eg with such hung elections even a single uncorrelated voter was enough to make manipulation easy to compute

