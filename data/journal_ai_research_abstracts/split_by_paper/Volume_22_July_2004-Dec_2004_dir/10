honorable mention for the 2007 ijcaijair best paper prize

we explore a method for computing admissible heuristic evaluation functions for search problems it utilizes pattern databases which are precomputed tables of the exact cost of solving various subproblems of an existing problem unlike standard pattern database heuristics however we partition our problems into disjoint subproblems so that the costs of solving the different subproblems can be added together without overestimating the cost of solving the original problem previously we showed how to statically partition the slidingtile puzzles into disjoint groups of tiles to compute an admissible heuristic using the same partition for each state and problem instance here we extend the method and show that it applies to other domains as well we also present another method for additive heuristics which we call dynamically partitioned pattern databases here we partition the problem into disjoint subproblems for each state of the search dynamically we discuss the pros and cons of each of these methods and apply both methods to three different problem domains the slidingtile puzzles the 4peg towers of hanoi problem and finding an optimal vertex cover of a graph we find that in some problem domains static partitioning is most effective while in others dynamic partitioning is a better choice in each of these problem domains either statically partitioned or dynamically partitioned pattern database heuristics are the best known heuristics for the problem

