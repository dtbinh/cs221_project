<cite>M.  P. Wellman (1993) "A Market-Oriented Programming Environment and its Application to Distributed Multicommodity Flow Problems", Volume 1, pages 1-23</cite>
<cite>2012 IFAAMAS Award for Influential Papers in Autonomous Agents and Multiagent Systems</cite><p class="media"><a href="/media/2/live-2-1358-jair.pdf">PDF</a>&nbsp;|&nbsp;<a href="/media/2/live-2-1357-jair.ps">PostScript</a>&nbsp;|&nbsp;<a href='http://dx.doi.org/10.1613/jair.2'>doi:10.1613/jair.2</a></p>
<p>Market price systems constitute a well-understood class of mechanisms that under certain conditions provide effective decentralization of decision making with minimal communication overhead.  In a <i>market-oriented programming</i> approach to distributed problem solving, we derive the activities and resource allocations for a set of computational agents by computing the competitive equilibrium of an artificial economy.  WALRAS provides basic constructs for defining computational market structures, and protocols for deriving their corresponding price equilibria.  In a particular realization of this approach for a form of multicommodity flow problem, we see that careful construction of the decision process according to economic principles can lead to efficient distributed resource allocation, and that the behavior of the system can be meaningfully analyzed in economic terms.</p>
<a href="/vol/vol1.html">Click here to return to Volume 1 contents list</a>
<meta name="citation_title" content="A Market-Oriented Programming Environment and its Application to Distributed Multicommodity Flow Problems">
<meta name="citation_author" content="Wellman,  M. P.">
<meta name="citation_publication_date" content="1993">
<meta name="citation_journal_title" content="Journal of Artificial Intelligence Research">
<meta name="citation_firstpage" content="1">
<meta name="citation_lastpage" content="23">
<meta name="citation_volume" content="1">
<meta name="citation_issn" content="1076 - 9757">
<meta name="citation_pdf_url" content="http://www.jair.org/media/2/live-2-1358-jair.pdf">

<cite>M.  L. Ginsberg (1993) "Dynamic Backtracking", Volume 1, pages 25-46</cite>
<p class="media"><a href="/media/1/live-1-1355-jair.pdf">PDF</a>&nbsp;|&nbsp;<a href="/media/1/live-1-1354-jair.ps">PostScript</a>&nbsp;|&nbsp;<a href='http://dx.doi.org/10.1613/jair.1'>doi:10.1613/jair.1</a>
<br/><a href="/media/1/live-1-1356-jair.lisp">Appendix </a> - containing crossword data</p>
<p>Because of their occasional need to return to shallow points in a search tree, existing backtracking methods can sometimes erase meaningful progress toward solving a search problem. In this paper, we present a method by which backtrack points can be moved deeper in the search space, thereby avoiding this difficulty. The technique developed is a variant of dependency-directed backtracking that uses only polynomial space while still providing useful control information and retaining the completeness guarantees provided by earlier approaches.</p>
<a href="/vol/vol1.html">Click here to return to Volume 1 contents list</a>
<meta name="citation_title" content="Dynamic Backtracking">
<meta name="citation_author" content="Ginsberg,  M. L.">
<meta name="citation_publication_date" content="1993">
<meta name="citation_journal_title" content="Journal of Artificial Intelligence Research">
<meta name="citation_firstpage" content="25">
<meta name="citation_lastpage" content="46">
<meta name="citation_volume" content="1">
<meta name="citation_issn" content="1076 - 9757">
<meta name="citation_pdf_url" content="http://www.jair.org/media/1/live-1-1355-jair.pdf">

<cite>I.  P. Gent and  T.  Walsh (1993) "An Empirical Analysis of Search in GSAT", Volume 1, pages 47-59</cite>
<p class="media"><a href="/media/7/live-7-1360-jair.pdf">PDF</a>&nbsp;|&nbsp;<a href="/media/7/live-7-1359-jair.ps">PostScript</a>&nbsp;|&nbsp;<a href='http://dx.doi.org/10.1613/jair.7'>doi:10.1613/jair.7</a></p>
<p>We describe an extensive study of search in GSAT, an approximation procedure for propositional satisfiability. GSAT performs greedy hill-climbing on the number of satisfied clauses in a truth assignment.  Our experiments provide a more complete picture of GSAT's search than previous accounts. We describe in detail the two phases of search: rapid hill-climbing followed by a long plateau search.  We demonstrate that when applied to randomly generated 3SAT problems, there is a very simple scaling with problem size for both the mean number of satisfied clauses and the mean branching rate.  Our results allow us to make detailed numerical conjectures about the length of the hill-climbing phase, the average gradient of this phase, and to conjecture that both the average score and average branching rate decay exponentially during plateau search. We end by showing how these results can be used to direct future theoretical analysis.  This work provides a case study of how computer experiments can be used to improve understanding of the theoretical properties of algorithms.</p>
<a href="/vol/vol1.html">Click here to return to Volume 1 contents list</a>
<meta name="citation_title" content="An Empirical Analysis of Search in GSAT">
<meta name="citation_author" content="Gent,  I. P.">
<meta name="citation_author" content="Walsh,  T.">
<meta name="citation_publication_date" content="1993">
<meta name="citation_journal_title" content="Journal of Artificial Intelligence Research">
<meta name="citation_firstpage" content="47">
<meta name="citation_lastpage" content="59">
<meta name="citation_volume" content="1">
<meta name="citation_issn" content="1076 - 9757">
<meta name="citation_pdf_url" content="http://www.jair.org/media/7/live-7-1360-jair.pdf">

<cite>J.  C. Schlimmer and  L.  A. Hermens (1993) "Software Agents: Completing Patterns and Constructing User Interfaces", Volume 1, pages 61-89</cite>
<p class="media"><a href="/media/25/live-25-1364-jair.pdf">PDF</a>&nbsp;|&nbsp;<a href="/media/25/live-25-1363-jair.ps">PostScript</a>&nbsp;|&nbsp;<a href="http://www.cs.washington.edu/research/jair/volume1/schlimmer93a-html/schlimmer93-0.html" onclick="window.open(this.href);return false;">HTML</a>&nbsp;|&nbsp;<a href='http://dx.doi.org/10.1613/jair.25'>doi:10.1613/jair.25</a>
<br/><a href="/media/25/live-25-1367-jair.hqx">Appendix </a> - containing Quicktime demo</p>
<p>To support the goal of allowing users to record and retrieve information, this paper describes an interactive note-taking system for pen-based computers with two distinctive features. First, it actively predicts what the user is going to write. Second, it automatically constructs a custom, button-box user interface on request. The system is an example of a learning-apprentice software- agent. A machine learning component characterizes the syntax and semantics of the user's information. A performance system uses this learned information to generate completion strings and construct a user interface.<p>  Description of Online Appendix: People like to record information.  Doing this on paper is initially efficient, but lacks flexibility. Recording information on a computer is less efficient but more powerful. In our new note taking softwre, the user records information directly on a computer. Behind the interface, an agent acts for the user. To help, it provides defaults and constructs a custom user interface.  The demonstration is a QuickTime movie of the note taking agent in action.  The file is a binhexed self-extracting archive. Macintosh utilities for binhex are available from mac.archive.umich.edu. QuickTime is available from ftp.apple.com in the dts/mac/sys.soft/quicktime. <p></p>
<a href="/vol/vol1.html">Click here to return to Volume 1 contents list</a>
<meta name="citation_title" content="Software Agents: Completing Patterns and Constructing User Interfaces">
<meta name="citation_author" content="Schlimmer,  J. C.">
<meta name="citation_author" content="Hermens,  L. A.">
<meta name="citation_publication_date" content="1993">
<meta name="citation_journal_title" content="Journal of Artificial Intelligence Research">
<meta name="citation_firstpage" content="61">
<meta name="citation_lastpage" content="89">
<meta name="citation_volume" content="1">
<meta name="citation_issn" content="1076 - 9757">
<meta name="citation_pdf_url" content="http://www.jair.org/media/25/live-25-1364-jair.pdf">

<cite>F.  Bergadano,  D.  Gunetti and 
U.  Trinchero (1993) "The Difficulties of Learning Logic Programs with Cut", Volume 1, pages 91-107</cite>
<p class="media"><a href="/media/26/live-26-1369-jair.pdf">PDF</a>&nbsp;|&nbsp;<a href="/media/26/live-26-1368-jair.ps">PostScript</a>&nbsp;|&nbsp;<a href='http://dx.doi.org/10.1613/jair.26'>doi:10.1613/jair.26</a></p>
<p>As real logic programmers normally use cut (!), an effective learning procedure for logic programs should be able to deal with it.  Because the cut predicate has only a procedural meaning, clauses containing cut cannot be learned using an extensional evaluation method, as is done in most learning systems.  On the other hand, searching a space of possible programs (instead of a space of independent clauses) is unfeasible.  An alternative solution is to generate first a candidate base program which covers the positive examples, and then make it consistent by inserting cut where appropriate.  The problem of learning programs with cut has not been investigated before and this seems to be a natural and reasonable approach. We generalize this scheme and investigate the difficulties that arise.  Some of the major shortcomings are actually caused, in general, by the need for intensional evaluation. As a conclusion, the analysis of this paper suggests, on precise and technical grounds, that learning cut is difficult, and current induction techniques should probably be restricted to purely declarative logic languages.<p></p>
<a href="/vol/vol1.html">Click here to return to Volume 1 contents list</a>
<meta name="citation_title" content="The Difficulties of Learning Logic Programs with Cut">
<meta name="citation_author" content="Bergadano,  F.">
<meta name="citation_author" content="Gunetti,  D.">
<meta name="citation_author" content="Trinchero, 
U.">
<meta name="citation_publication_date" content="1993">
<meta name="citation_journal_title" content="Journal of Artificial Intelligence Research">
<meta name="citation_firstpage" content="91">
<meta name="citation_lastpage" content="107">
<meta name="citation_volume" content="1">
<meta name="citation_issn" content="1076 - 9757">
<meta name="citation_pdf_url" content="http://www.jair.org/media/26/live-26-1369-jair.pdf">

<cite>M.  Buchheit,  F.  M. Donini and  A.  Schaerf (1993) "Decidable Reasoning in Terminological Knowledge Representation Systems", Volume 1, pages 109-138</cite>
<p class="media"><a href="/media/21/live-21-1362-jair.pdf">PDF</a>&nbsp;|&nbsp;<a href="/media/21/live-21-1361-jair.ps">PostScript</a>&nbsp;|&nbsp;<a href='http://dx.doi.org/10.1613/jair.21'>doi:10.1613/jair.21</a></p>
<p>Terminological knowledge representation systems (TKRSs) are tools for designing and using knowledge bases that make use of terminological languages (or concept languages).  We analyze from a theoretical point of view a TKRS whose capabilities go beyond the ones of presently available TKRSs. The new features studied, often required in practical applications, can be summarized in three main points.  First, we consider a highly expressive terminological language, called ALCNR, including general complements of concepts, number restrictions and role conjunction. Second, we allow to express inclusion statements between general concepts, and terminological cycles as a particular case.  Third, we prove the decidability of a number of desirable TKRS-deduction services (like satisfiability, subsumption and instance checking) through a sound, complete and terminating calculus for reasoning in ALCNR-knowledge bases. Our calculus extends the general technique of constraint systems.  As a byproduct of the proof, we get also the result that inclusion statements in ALCNR can be simulated by terminological cycles, if descriptive semantics is adopted. <p></p>
<a href="/vol/vol1.html">Click here to return to Volume 1 contents list</a>
<meta name="citation_title" content="Decidable Reasoning in Terminological Knowledge Representation Systems">
<meta name="citation_author" content="Buchheit,  M.">
<meta name="citation_author" content="Donini,  F. M.">
<meta name="citation_author" content="Schaerf,  A.">
<meta name="citation_publication_date" content="1993">
<meta name="citation_journal_title" content="Journal of Artificial Intelligence Research">
<meta name="citation_firstpage" content="109">
<meta name="citation_lastpage" content="138">
<meta name="citation_volume" content="1">
<meta name="citation_issn" content="1076 - 9757">
<meta name="citation_pdf_url" content="http://www.jair.org/media/21/live-21-1362-jair.pdf">

<cite>N.  Nilsson (1994) "Teleo-Reactive Programs for Agent Control", Volume 1, pages 139-158</cite>
<p class="media"><a href="/media/30/live-30-1374-jair.pdf">PDF</a>&nbsp;|&nbsp;<a href="/media/30/live-30-1373-jair.ps">PostScript</a>&nbsp;|&nbsp;<a href='http://dx.doi.org/10.1613/jair.30'>doi:10.1613/jair.30</a></p>
<p>A formalism is presented for computing and organizing actions for autonomous agents in dynamic environments. We introduce the notion of <i>teleo-reactive (T-R) programs</i> whose execution entails the construction of circuitry for the continuous computation of the parameters and conditions on which agent action is based.  In addition to continuous feedback, T-R programs support parameter binding and recursion.  A primary difference between T-R programs and many other circuit-based systems is that the circuitry of T-R programs is more compact; it is constructed at run time and thus does not have to anticipate all the contingencies that might arise over all possible runs.  In addition, T-R programs are intuitive and easy to write and are written in a form that is compatible with automatic planning and learning methods.  We briefly describe some experimental applications of T-R programs in the control of simulated and actual mobile robots.</p>
<a href="/vol/vol1.html">Click here to return to Volume 1 contents list</a>
<meta name="citation_title" content="Teleo-Reactive Programs for Agent Control">
<meta name="citation_author" content="Nilsson,  N.">
<meta name="citation_publication_date" content="1994">
<meta name="citation_journal_title" content="Journal of Artificial Intelligence Research">
<meta name="citation_firstpage" content="139">
<meta name="citation_lastpage" content="158">
<meta name="citation_volume" content="1">
<meta name="citation_issn" content="1076 - 9757">
<meta name="citation_pdf_url" content="http://www.jair.org/media/30/live-30-1374-jair.pdf">

<cite>M.  Koppel,  R.  Feldman and  A.  M. Segre (1994) "Bias-Driven Revision of Logical Domain Theories", Volume 1, pages 159-208</cite>
<p class="media"><a href="/media/27/live-27-1372-jair.pdf">PDF</a>&nbsp;|&nbsp;<a href="/media/27/live-27-1370-jair.ps">PostScript</a>&nbsp;|&nbsp;<a href='http://dx.doi.org/10.1613/jair.27'>doi:10.1613/jair.27</a></p>
<p>The theory revision problem is the problem of how best to go about revising a deficient domain theory using information contained in examples that expose inaccuracies.  In this paper we present our approach to the theory revision problem for propositional domain theories.  The approach described here, called PTR, uses probabilities associated with domain theory elements to numerically track the ``flow'' of proof through the theory.  This allows us to measure the precise role of a clause or literal in allowing or preventing a (desired or undesired) derivation for a given example.  This information is used to efficiently locate and repair flawed elements of the theory.  PTR is proved to converge to a theory which correctly classifies all examples, and shown experimentally to be fast and accurate even for deep theories.</p>
<a href="/vol/vol1.html">Click here to return to Volume 1 contents list</a>
<meta name="citation_title" content="Bias-Driven Revision of Logical Domain Theories">
<meta name="citation_author" content="Koppel,  M.">
<meta name="citation_author" content="Feldman,  R.">
<meta name="citation_author" content="Segre,  A. M.">
<meta name="citation_publication_date" content="1994">
<meta name="citation_journal_title" content="Journal of Artificial Intelligence Research">
<meta name="citation_firstpage" content="159">
<meta name="citation_lastpage" content="208">
<meta name="citation_volume" content="1">
<meta name="citation_issn" content="1076 - 9757">
<meta name="citation_pdf_url" content="http://www.jair.org/media/27/live-27-1372-jair.pdf">

<cite>C.  X. Ling (1994) "Learning the Past Tense of English Verbs: The Symbolic Pattern Associator vs. Connectionist Models", Volume 1, pages 209-229</cite>
<p class="media"><a href="/media/39/live-39-1377-jair.pdf">PDF</a>&nbsp;|&nbsp;<a href="/media/39/live-39-1376-jair.ps">PostScript</a>&nbsp;|&nbsp;<a href='http://dx.doi.org/10.1613/jair.39'>doi:10.1613/jair.39</a>
<br/><a href="/media/39/live-39-1378-jair.Z">Appendix </a> - data file, compressed</p>
<p>Learning the past tense of English verbs - a seemingly minor aspect of language acquisition - has generated heated debates since 1986, and has become a landmark task for testing the adequacy of cognitive modeling. Several artificial neural networks (ANNs) have been implemented, and a challenge for better symbolic models has been posed.  In this paper, we present a general-purpose Symbolic Pattern Associator (SPA) based upon the decision-tree learning algorithm ID3.  We conduct extensive head-to-head comparisons on the generalization ability between ANN models and the SPA under different representations. We conclude that the SPA generalizes the past tense of unseen verbs better than ANN models by a wide margin, and we offer insights as to why this should be the case.  We also discuss a new default strategy for decision-tree learning algorithms.</p>
<a href="/vol/vol1.html">Click here to return to Volume 1 contents list</a>
<meta name="citation_title" content="Learning the Past Tense of English Verbs: The Symbolic Pattern Associator vs. Connectionist Models">
<meta name="citation_author" content="Ling,  C. X.">
<meta name="citation_publication_date" content="1994">
<meta name="citation_journal_title" content="Journal of Artificial Intelligence Research">
<meta name="citation_firstpage" content="209">
<meta name="citation_lastpage" content="229">
<meta name="citation_volume" content="1">
<meta name="citation_issn" content="1076 - 9757">
<meta name="citation_pdf_url" content="http://www.jair.org/media/39/live-39-1377-jair.pdf">

<cite>D.  J. Cook and  L.  B. Holder (1994) "Substructure Discovery Using Minimum Description Length and Background Knowledge", Volume 1, pages 231-255</cite>
<p class="media"><a href="/media/43/live-43-1384-jair.pdf">PDF</a>&nbsp;|&nbsp;<a href="/media/43/live-43-1382-jair.ps">PostScript</a>&nbsp;|&nbsp;<a href='http://dx.doi.org/10.1613/jair.43'>doi:10.1613/jair.43</a>
<br/><a href="/media/43/live-43-1385-jair.tar.Z">Appendix </a> - containing SUBDUE source code</p>
<p>The ability to identify interesting and repetitive substructures is an essential component to discovering knowledge in structural data.  We describe a new version of our SUBDUE substructure discovery system based on the minimum description length principle.  The SUBDUE system discovers substructures that compress the original data and represent structural concepts in the data.  By replacing previously-discovered substructures in the data, multiple passes of SUBDUE produce a hierarchical description of the structural regularities in the data.  SUBDUE uses a computationally-bounded inexact graph match that identifies similar, but not identical, instances of a substructure and finds an approximate measure of closeness of two substructures when under computational constraints. In addition to the minimum description length principle, other background knowledge can be used by SUBDUE to guide the search towards more appropriate substructures.  Experiments in a variety of domains demonstrate SUBDUE's ability to find substructures capable of compressing the original data and to discover structural concepts important to the domain.<p> Description of Online Appendix: This is a compressed tar file containing the SUBDUE discovery system, written in C.  The program accepts as input databases represented in graph form, and will output discovered substructures with their corresponding value.</p>
<a href="/vol/vol1.html">Click here to return to Volume 1 contents list</a>
<meta name="citation_title" content="Substructure Discovery Using Minimum Description Length and Background Knowledge">
<meta name="citation_author" content="Cook,  D. J.">
<meta name="citation_author" content="Holder,  L. B.">
<meta name="citation_publication_date" content="1994">
<meta name="citation_journal_title" content="Journal of Artificial Intelligence Research">
<meta name="citation_firstpage" content="231">
<meta name="citation_lastpage" content="255">
<meta name="citation_volume" content="1">
<meta name="citation_issn" content="1076 - 9757">
<meta name="citation_pdf_url" content="http://www.jair.org/media/43/live-43-1384-jair.pdf">

<cite>P.  M. Murphy and  M.  J. Pazzani (1994) "Exploring the Decision Forest: An Empirical Investigation of Occam's   Razor in Decision Tree Induction", Volume 1, pages 257-275</cite>
<p class="media"><a href="/media/41/live-41-1381-jair.pdf">PDF</a>&nbsp;|&nbsp;<a href="/media/41/live-41-1379-jair.ps">PostScript</a>&nbsp;|&nbsp;<a href='http://dx.doi.org/10.1613/jair.41'>doi:10.1613/jair.41</a></p>
<p>We report on a series of experiments in which all decision trees consistent with the training data are constructed. These experiments were run to gain an understanding of the properties of the set of consistent decision trees and the factors that affect the accuracy of individual trees. In particular, we investigated the relationship between the size of a decision tree consistent with some training data and the accuracy of the tree on test data. The experiments were performed on a massively parallel Maspar computer. The results of the experiments on several artificial and two real world problems indicate that, for many of the problems investigated, smaller consistent decision trees are on average less accurate than the average accuracy of slightly larger trees.</p>
<a href="/vol/vol1.html">Click here to return to Volume 1 contents list</a>
<meta name="citation_title" content="Exploring the Decision Forest: An Empirical Investigation of Occam's   Razor in Decision Tree Induction">
<meta name="citation_author" content="Murphy,  P. M.">
<meta name="citation_author" content="Pazzani,  M. J.">
<meta name="citation_publication_date" content="1994">
<meta name="citation_journal_title" content="Journal of Artificial Intelligence Research">
<meta name="citation_firstpage" content="257">
<meta name="citation_lastpage" content="275">
<meta name="citation_volume" content="1">
<meta name="citation_issn" content="1076 - 9757">
<meta name="citation_pdf_url" content="http://www.jair.org/media/41/live-41-1381-jair.pdf">

<cite>A.  Borgida and  P.  F. Patel-Schneider (1994) "A Semantics and Complete Algorithm for Subsumption in the CLASSIC Description Logic", Volume 1, pages 277-308</cite>
<p class="media"><a href="/media/56/live-56-1393-jair.pdf">PDF</a>&nbsp;|&nbsp;<a href="/media/56/live-56-1392-jair.ps">PostScript</a>&nbsp;|&nbsp;<a href='http://dx.doi.org/10.1613/jair.56'>doi:10.1613/jair.56</a></p>
<p>This paper analyzes the correctness of the subsumption algorithm used in CLASSIC, a description logic-based knowledge representation system that is being used in practical applications.  In order to deal efficiently with individuals in CLASSIC descriptions, the developers have had to use an algorithm that is incomplete with respect to the standard, model-theoretic semantics for description logics. We provide a variant semantics for descriptions with respect to which the current implementation is complete, and which can be independently motivated.  The soundness and completeness of the polynomial-time subsumption algorithm is established using description graphs, which are an abstracted version of the implementation structures used in CLASSIC, and are of independent interest.</p>
<a href="/vol/vol1.html">Click here to return to Volume 1 contents list</a>
<meta name="citation_title" content="A Semantics and Complete Algorithm for Subsumption in the CLASSIC Description Logic">
<meta name="citation_author" content="Borgida,  A.">
<meta name="citation_author" content="Patel-Schneider,  P. F.">
<meta name="citation_publication_date" content="1994">
<meta name="citation_journal_title" content="Journal of Artificial Intelligence Research">
<meta name="citation_firstpage" content="277">
<meta name="citation_lastpage" content="308">
<meta name="citation_volume" content="1">
<meta name="citation_issn" content="1076 - 9757">
<meta name="citation_pdf_url" content="http://www.jair.org/media/56/live-56-1393-jair.pdf">

<cite>R.  Sebastiani (1994) "Applying GSATto Non-Clausal Formulas", Volume 1, pages 309-314</cite>
<p class="media"><a href="/media/49/live-49-1387-jair.pdf">PDF</a>&nbsp;|&nbsp;<a href="/media/49/live-49-1386-jair.ps">PostScript</a>&nbsp;|&nbsp;<a href='http://dx.doi.org/10.1613/jair.49'>doi:10.1613/jair.49</a></p>
<p>In this paper we describe how to modify GSAT so that it can be applied to non-clausal formulas. The idea is to use a particular ``score'' function which gives the number of clauses of the CNF conversion of a formula which are false under a given truth assignment.  Its value is computed in linear time, without constructing the CNF conversion itself.  The proposed methodology applies to most of the variants of GSAT proposed so far.</p>
<a href="/vol/vol1.html">Click here to return to Volume 1 contents list</a>
<meta name="citation_title" content="Applying GSATto Non-Clausal Formulas">
<meta name="citation_author" content="Sebastiani,  R.">
<meta name="citation_publication_date" content="1994">
<meta name="citation_journal_title" content="Journal of Artificial Intelligence Research">
<meta name="citation_firstpage" content="309">
<meta name="citation_lastpage" content="314">
<meta name="citation_volume" content="1">
<meta name="citation_issn" content="1076 - 9757">
<meta name="citation_pdf_url" content="http://www.jair.org/media/49/live-49-1387-jair.pdf">
