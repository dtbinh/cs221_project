g barish c knoblock 2005 expressive language efficient execution system software agents 23 625666

software agents used automate many tedious timeconsuming information processing tasks humans currently complete manually however agent plans must capable representing myriad actions control flows required perform tasks addition since tasks require integrating multiple sources remote information typically slow iobound process desirable make execution efficient possible address needs present flexible software agent plan language highly parallel execution system enable efficient execution expressive agent plans plan language allows complex tasks easily expressed providing variety operators flexibly processing data well supporting subplans modularity recursion indeterminate looping executor streaming dataflow model execution maximize amount operator data parallelism possible runtime implemented language executor system called theseus testing theseus streaming dataflow execution yield significant speedups traditional serial von neumann well nonstreaming dataflowstyle execution existing software robot agent execution systems currently support addition plans written language present represent certain types subtasks cannot accomplished using languages supported network query engines finally demonstrate increased expressivity plan language hamper performance specifically data integrated multiple remote sources efficiently using architecture possible stateoftheart streamingdataflow network query engine

