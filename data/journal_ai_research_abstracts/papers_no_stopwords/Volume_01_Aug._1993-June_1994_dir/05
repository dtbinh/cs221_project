j c schlimmer l hermens 1993 software agents completing patterns constructing user interfaces 1 6189

support goal allowing users record retrieve information describes interactive notetaking system penbased computers two distinctive features first actively predicts user going write second automatically constructs custom buttonbox user interface request system example learningapprentice software agent machine learning component characterizes syntax semantics users information performance system uses learned information generate completion strings construct user interface description online appendix people record information initially efficient lacks flexibility recording information computer less efficient powerful new note taking softwre user records information directly computer behind interface agent acts user help provides defaults constructs custom user interface demonstration quicktime movie note taking agent action file binhexed selfextracting archive macintosh utilities binhex available macarchiveumichedu quicktime available ftpapplecom dtsmacsyssoftquicktime

real logic programmers normally use cut effective learning procedure logic programs able deal cut predicate procedural meaning clauses containing cut cannot learned using extensional evaluation method done learning systems hand searching space possible programs instead space independent clauses unfeasible alternative solution generate first candidate base program covers positive examples make consistent inserting cut appropriate learning programs cut investigated seems natural reasonable generalize scheme investigate difficulties arise major shortcomings actually caused general need intensional evaluation conclusion analysis suggests precise technical grounds learning cut difficult current induction techniques probably restricted purely declarative logic languages

